{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"/ All modules: \u00b6 Name lcp navigator opds shared streamer","title":"Home"},{"location":"#all-modules","text":"Name lcp navigator opds shared streamer","title":"All modules:"},{"location":"migration-guide/","text":"Migration Guide \u00b6 All migration steps necessary in reading apps to upgrade to major versions of the Kotlin Readium toolkit will be documented in this file. 2.1.0 \u00b6 With this new release, we migrated all the r2-*-kotlin repositories to a single kotlin-toolkit repository . Using JitPack \u00b6 If you are integrating Readium with the JitPack Maven repository, the same Readium modules are available as before. Just replace the former dependency notations with the new ones, per the README . dependencies { implementation \"com.github.readium.kotlin-toolkit:readium-shared:$readium_version\" implementation \"com.github.readium.kotlin-toolkit:readium-streamer:$readium_version\" implementation \"com.github.readium.kotlin-toolkit:readium-navigator:$readium_version\" implementation \"com.github.readium.kotlin-toolkit:readium-opds:$readium_version\" implementation \"com.github.readium.kotlin-toolkit:readium-lcp:$readium_version\" } Using a fork \u00b6 If you are integrating your own forks of the Readium modules, you will need to migrate them to a single fork and port your changes. Follow strictly the given steps and it should go painlessly. Upgrade your forks to the latest Readium 2.1.0 version from the legacy repositories, as you would with any update. The 2.1.0 version is available on both the legacy repositories and the new kotlin-toolkit one. It will be used to port your changes over to the single repository. Fork the new kotlin-toolkit repository on your own GitHub space. In a new local directory, clone your legacy forks as well as the new single fork: ```sh mkdir readium-migration cd readium-migration Clone the legacy forks \u00b6 git clone https://github.com/USERNAME/r2-shared-kotlin.git git clone https://github.com/USERNAME/r2-streamer-kotlin.git git clone https://github.com/USERNAME/r2-navigator-kotlin.git git clone https://github.com/USERNAME/r2-opds-kotlin.git git clone https://github.com/USERNAME/r2-lcp-kotlin.git Clone the new single fork \u00b6 git clone https://github.com/USERNAME/kotlin-toolkit.git 4. Reset the new fork to be in the same state as the 2.1.0 release. sh cd kotlin-toolkit git reset --hard 2.1.0 5. For each Readium module, port your changes over to the new fork. sh rm -rf readium/*/src cp -r ../r2-shared-kotlin/r2-shared/src readium/shared cp -r ../r2-streamer-kotlin/r2-streamer/src readium/streamer cp -r ../r2-navigator-kotlin/r2-navigator/src readium/navigator cp -r ../r2-opds-kotlin/r2-opds/src readium/opds cp -r ../r2-lcp-kotlin/r2-lcp/src readium/lcp 6. Review your changes, then commit. sh git add readium git commit -m \"Apply local changes to Readium\" 7. Finally, pull the changes to upgrade to the latest version of the fork. You might need to fix some conflicts. sh git pull --rebase git push ``` Your fork is now ready! To integrate it in your app as a local Git clone or submodule, follow the instructions from the README . 2.0.0 \u00b6 Nothing to change in your app to upgrade from 2.0.0-beta.2 to the final 2.0.0 release! Please follow the relevant sections if you are upgrading from an older version. 2.0.0-beta.2 \u00b6 This new beta is the last one before the final 2.0.0 release. It is mostly focused on bug fixes but we also adjusted the LCP and HTTP server APIs before setting it in stone for the 2.x versions. Serving publications with the HTTP server \u00b6 The API used to serve Publication resources with the Streamer's HTTP server was simplified. See the test app changes in PR #387 . Replace addEpub() with addPublication() , which does not expect the publication filename anymore. If the Publication is servable, addPublication() will return its base URL. This means that you do not need to: Call Publication.localBaseUrlOf() to get the base URL. Use the one returned by addPublication() instead. Set the server port in the $key-publicationPort SharedPreferences property. If you copied the R2ScreenReader from the test app, you will need to update it to use directly the base URL instead of the $key-publicationPort property. See this commit . R2EpubActivity and R2AudiobookActivity are expecting an additional Intent extra: baseUrl . Use the base URL returned by addPublication() . LCP changes \u00b6 Find all the changes made in the test app related to LCP in PR #379 . Replacing org.joda.time.DateTime with java.util.Date \u00b6 We replaced all occurrences of Joda's DateTime with java.util.Date in r2-lcp-kotlin , to reduce the dependency on third-party libraries. You will need to update any code using LcpLicense . The easiest way would be to keep using Joda in your own app and create DateTime object from the Date ones. For example: lcpLicense ?. license ?. issued ?. let { DateTime ( it ) } Revamped loan renew API \u00b6 The API to renew an LCP loan got revamped to better support renewal through a web page. You will need to implement LcpLicense.RenewListener to coordinate the UX interaction. For Material Design apps \u00b6 If your application fits Material Design guidelines, you may use the provided MaterialRenewListener implementation directly. This will only work if your theme extends a MaterialComponents one, for example: <style name= \"AppTheme\" parent= \"Theme.MaterialComponents.Light.DarkActionBar\" > MaterialRenewListener expects an ActivityResultCaller instance for argument. Any ComponentActivity or Fragment object can be used as ActivityResultCaller . val activity : FragmentActivity license . renewLoan ( MaterialRenewListener ( license = lcpLicense , caller = activity , fragmentManager = activity . supportFragmentManager )) 2.0.0-beta.1 \u00b6 The version 2.0.0-beta.1 is mostly stabilizing the new APIs and fixing existing bugs. We also upgraded the libraries to be compatible with Kotlin 1.4 and Gradle 4.1. Replacing Format by MediaType \u00b6 To simplify the new format API, we merged Format into MediaType to offer a single interface. If you were using Format , you should be able to replace it by MediaType seamlessly. Replacing File by FileAsset \u00b6 Streamer.open() is now expecting an implementation of PublicationAsset instead of an instance of File . This allows to open publications which are not represented as files on the device. For example a stream, an URL or any other custom structure. Readium ships with a default implementation named FileAsset replacing the previous File type. The API is the same so you can just replace File by FileAsset in your project. Support for display cutouts \u00b6 This new version is now compatible with display cutouts . However, this is an opt-in feature . To support display cutouts, follow these instructions: IMPORTANT : You need to remove any setPadding() statement from your app in UserSettings.kt , if you copied it from the test app. If you embed a navigator fragment (e.g. EpubNavigatorFragment ) yourself, you need to opt-in by specifying the layoutInDisplayCutoutMode of the host Activity . R2EpubActivity and R2CbzActivity automatically apply LAYOUT_IN_DISPLAY_CUTOUT_MODE_SHORT_EDGES to their window's layoutInDisplayCutoutMode . PdfNavigatorFragment is not yet compatible with display cutouts, because of limitations from the underlying PDF viewer. 2.0.0-alpha.2 \u00b6 The 2.0.0 introduces numerous new APIs in the Shared Models, Streamer and LCP libraries, which are detailed in the following proposals. We highly recommend skimming over the \"Developer Guide\" section of each proposal before upgrading to this new major version. Format API Composite Fetcher API Publication Encapsulation Publication Helpers and Services Streamer API Content Protection This r2-testapp-kotlin commit showcases all the changes required to upgrade the Test App. Please reach out on Slack if you have any issue migrating your app to Readium 2.0.0, after checking the troubleshooting section . Replacing the Parsers with Streamer \u00b6 A new Streamer class deprecates the use of individual PublicationParser implementations, which you will need to replace in your app. Opening a Publication \u00b6 Call Streamer::open() to parse a publication. It will return a self-contained Publication model which handles metadata, resource access and DRM decryption. This means that Container , PubBox and DRM are not needed anymore, you can remove any reference from your app. The allowUserInteraction parameter should be set to true if you intend to render the parsed publication to the user. It will allow the Streamer to display interactive dialogs, for example to enter DRM credentials. You can set it to false if you're parsing a publication in a background process, for example during bulk import. val streamer = Streamer ( context ) val publication = streamer . open ( File ( path ), allowUserInteraction = true ) . getOrElse { error -> alert ( error . getUserMessage ( context )) return } Parsing a Readium Web Publication Manifest \u00b6 You can't use Publication.fromJSON() to parse directly a manifest anymore. Instead, you can use Manifest.fromJSON() , which gives you access to the metadata embedded in the manifest. Then, if you really need a Publication model, you can build one yourself from the Manifest and optionally a Fetcher and Publication Services. -val publication = Publication.fromJSON(json) +val publication = Manifest.fromJSON(json)?.let { Publication(it) } However, the best way to parse a RWPM is to use the Streamer , like with any other publication format. This way the Publication model will be initialized with appropriate Fetcher and Publication Services. Error Feedback \u00b6 In case of failure, a Publication.OpeningException is returned. It implements UserException and can be used directly to present an error message to the user with getUserMessage(Context) . If you wish to customize the error messages or add translations, you can override the strings declared in r2-shared-kotlin/r2-shared/src/main/res/values/strings.xml in your own app module. This goes for LCP errors as well, which are declared in r2-lcp-kotlin/r2-lcp/src/main/res/values/strings.xml . Advanced Usage \u00b6 Streamer offers other useful APIs to extend the capabilities of the Readium toolkit. Take a look at its documentation for more details, but here's an overview: Add new custom parsers. Integrated DRM support, such as LCP. Provide different implementations for third-party tools, e.g. ZIP, PDF and XML. Customize the Publication 's metadata or Fetcher upon creation. Collect authoring warnings from parsers. Accessing a Publication's Resources \u00b6 Container is Deprecated \u00b6 Since the new Publication model is self-contained, you can replace any use of the Container API by publication.get(Link) . This works for any publication format supported by the Streamer 's parsers. The test app used to have special cases for DiViNa and Audiobooks, by unpacking manually the ZIP archives. You should remove this code and streamline any resource access using publication.get() . Extracting Publication Covers \u00b6 Extracting the cover of a publication for caching purposes can be done with a single call to publication.cover() , instead of reaching for a Link with cover relation. You can use publication.coverFitting(Size) to select the best resolution without exceeding a given size. It can be useful to avoid saving very large cover images. -val cover = - try { - publication.coverLink - ?.let { container.data(it.href) } - ?.let { BitmapFactory.decodeByteArray(it, 0, it.size) } - } catch (e: Exception) { - null - } +val cover = publication.coverFitting(Size(width = 100, height = 100)) Observing a Navigator's Current Locator \u00b6 Navigator::currentLocator is now a StateFlow instead of LiveData , to better support chromeless navigators such as an audiobook navigator in the future. If you were observing currentLocator from an Activity or Fragment , you can continue to do so with currentLocator.asLiveData() . - navigator.currentLocator.observe(this, Observer { locator -> }) + navigator.currentLocator.asLiveData().observe(this, Observer { locator -> }) If you access directly the value through navigator.currentLocator.value , you might need to add the following annotation to the enclosing class: @OptIn(kotlinx.coroutines.ExperimentalCoroutinesApi::class) Despite being still experimental, StateFlow is deemed stable for use . LCP and Other DRMs \u00b6 Opening an LCP Protected Publication \u00b6 Support for LCP is now fully integrated with the Streamer , which means that you don't need to retrieve the LCP license and fill container.drm yourself after opening a Publication anymore. To enable the support for LCP in the Streamer , you need to initialize it with a ContentProtection implementation provided by r2-lcp-kotlin . val lcpService = LcpService ( context ) val streamer = Streamer ( context = context , contentProtections = listOfNotNull ( lcpService ?. contentProtection () ) ) Then, to prompt the user for their passphrase, you need to set allowUserInteraction to true and provide the instance of the hosting Activity , Fragment or View with the sender parameter when opening the publication. streamer . open ( File ( path ), allowUserInteraction = true , sender = activity ) Alternatively, if you already have the passphrase, you can pass it directly to the credentials parameter. If it's valid, the user won't be prompted. Customizing the Passphrase Dialog \u00b6 The LCP Service now ships with a default passphrase dialog. You can remove the former implementation from your app if you copied it from the test app. But if you still want to use a custom implementation of LcpAuthenticating , for example to have a different layout, you can pass it when creating the ContentProtection . lcpService . contentProtection ( CustomLCPAuthentication ()) Presenting a Protected Publication with a Navigator \u00b6 In case the credentials were incorrect or missing, the Streamer will still return a Publication , but in a \"restricted\" state. This allows reading apps to import publications by accessing their metadata without having the passphrase. But if you need to present the publication with a Navigator, you will need to first check if the Publication is not restricted. Besides missing credentials, a publication can be restricted if the Content Protection returned an error, for example when the publication is expired. In which case, you must display the error to the user by checking the presence of a publication.protectionError . if ( publication . isRestricted ) { publication . protectionError ?. let { error -> // A status error occurred, for example the publication expired alert ( error . getUserMessage ( context )) } } else { presentNavigator ( publication ) } Accessing an LCP License Information \u00b6 To check if a publication is protected with a known DRM, you can use publication.isProtected . If you need to access an LCP license's information, you can use the helper publication.lcpLicense , which will return the LcpLicense if the publication is protected with LCP and the passphrase was known. Alternatively, you can use LcpService::retrieveLicense() as before. Acquiring a Publication from an LCPL \u00b6 LcpService.importPublication() was replaced with acquirePublication() , which is a cancellable suspending function. It doesn't require the user to enter its passphrase anymore to download the publication. Supporting Other DRMs \u00b6 You can integrate additional DRMs, such as Adobe ACS, by implementing the ContentProtection protocol. This will provide first-class support for this DRM in the Streamer and Navigator. Take a look at the Content Protection proposal for more details. An example implementation can be found in r2-lcp-kotlin . Introducing Try \u00b6 A few of the new APIs are returning a Try object, which is similar to the native Result type . We decided to go for this opiniated approach for error handling instead of throwing Exception because of the type-safety it brings and the constraint on reading apps to properly handle error cases. You can revert to traditional exceptions by calling getOrThrow() on the Try instance, but the most convenient way to handle the error would be to use getOrElse() . val publication = streamer . open ( File ( path ), allowUserInteraction = true ) . getOrElse { error -> alert ( error . getUserMessage ( context )) return } Try also supports map() and flatMap() which are useful to transform the result while forwarding any error handling to upper layers. fun cover (): Try < Bitmap , ResourceException > = publication . get ( coverLink ) . use { resource -> resource . read () } // <- returns a Try<ByteArray, ResourceException> . map { bytes -> BitmapFactory . decodeByteArray ( bytes , 0 , bytes . size ) } Troubleshooting \u00b6 Attempt to invoke virtual method ' android.content.SharedPreferences android.content.Context.getSharedPreferences(java.lang.String, int) ' on a null object reference \u00b6 Make sure you create the LcpService after onCreate() has been called on an Activity . LCP publications are blank or LCPL are not imported \u00b6 Make sure you added the following to your app's build.gradle : implementation \"readium:liblcp:1.0.0@aar\" LCP publications are opening but not decrypted \u00b6 Make sure you added the content protection to the Streamer, following these instructions . E/LcpDialogAuthentication: No valid [sender] was passed to LcpDialogAuthentication::retrievePassphrase() . Make sure it is an Activity, a Fragment or a View. \u00b6 To be able to present the LCP passphrase dialog, the default LcpDialogAuthentication needs a hosting view as context. You must provide it to the sender parameter of Streamer::open() . streamer . open ( File ( path ), allowUserInteraction = true , sender = activity ) IllegalArgumentException: The provided publication is restricted. Check that any DRM was properly unlocked using a Content Protection. \u00b6 Navigators will refuse to be opened if a publication is protected and not unlocked. You must check if a publication is not restricted by following these instructions . 2.0.0-alpha.1 \u00b6 With this new release, we started a process of modernization of the Readium Kotlin toolkit to: better follow Android best practices and Kotlin conventions, reduce coupling between reading apps and Readium, to ease future migrations and allow refactoring of private core implementations, increase code safety, unify Readium APIs across platforms through public specifications . As such, this release will break existing codebases . While most changes are facilitated thanks to deprecation warnings with automatic fixes, there are a few changes listed below that you will need to operate manually. Imports \u00b6 The Publication shared models were moved to their own package. While there are deprecated aliases helping with migration, it doesn't work for Publication.EXTENSION . Therefore, you need to replace all occurrences of org.readium.r2.shared.Publication by org.readium.r2.shared.publication.Publication in your codebase. Or better, don't use Publication.EXTENSION anymore. We have a new Format API which handles these needs in a more systematic way . And instead of file extensions, we recommend to store media types in your database. A few Publication and Link properties, such as images , pageList and numberOfItems were moved to a different package. Simply trigger the \"Import\" feature of your IDE to resolve them. Immutability of Shared Models \u00b6 The Publication shared models are now immutable to increase code safety. This should not impact reading apps much unless you were creating Publication or other models yourself. However, there are a few places in the Test App that needs to be updated: Publication 's readingOrder , links , and tableOfContents are not MutableList anymore, but read-only List . Therefore, you need to update any code expecting mutable lists . Locator can't be modified directly anymore. Instead, use the copy() or copyWithLocations() Locator APIs . Last Read Location \u00b6 Best practices on observing and restoring the last location were updated in the Test App, and it is highly recommended that you update your codebase as well, to avoid any issues. Restoring the Last Location \u00b6 You need to make these changes in your implementations of EpubActivity , ComicActivity and AudiobookActivity : Remove any overrides of currentLocation . Restore the last location from your database in onCreate() , for example with something similar to: // Restores the last read location bookRepository . lastLocatorOfBook ( bookId ) ?. let { locator -> go ( locator , animated = false ) } Observing the Current Location \u00b6 NavigatorDelegate.locationDidChange() is now deprecated in favor of the more idiomatic Navigator.currentLocator: LiveData<Locator?> . currentLocator . observe ( this , Observer { locator -> if ( locator != null ) { bookRepository . saveLastLocatorOfBook ( bookId , locator ) } }) Publication \u00b6 A new Positions List feature was added to provide a list of discrete locations in a publication. It can be used to implement an approximation of page numbers. This replaces the existing R2SyntheticPageList , which should be removed from your codebase. Publications parsed from large manifests could crash the application when starting a reading activity. To fix this, Publication must not be put in an Intent extra anymore . Instead, use the new Intent extensions provided by Readium . This solution is a crutch until we move away from Activity in the Navigator and let reading apps handle the lifecycle of Publication themselves. Replace all occurrences of putExtra(\"publication\", publication) or similar by putPublication(publication) . Replace all occurrences of getSerializableExtra(\"publication\") or similar by getPublication(this) . Locator \u00b6 Locator is now Parcelable instead of Serializable , you must replace all occurrences of getSerializableExtra(\"locator\") by getParcelableExtra(\"locator\") . Locations.fragment was renamed to fragments , and is now a List . You need to update your code if you were creating Locations yourself. locations and text are not nullable anymore. Locator 's constructor has a default value, so you don't need to pass null for them anymore . Locator is not meant to be subclassed, and extending it is not possible anymore. If your project is based on the Test App, you need to do the following changes in your codebase : Don't extend Locator in Bookmark and Highlight . Instead, add a locator property which will create a Locator object from their properties. Then, in places where you were creating a Locator from a database model , you can use this property directly. For SearchLocator , you have two choices: (Recommended) Replace all occurrences of SearchLocator by Locator . These two models are interchangeable. Use the same strategy described above for Bookmark . class Bookmark (...) { val locator get () = Locator ( href = resourceHref , type = resourceType , title = resourceTitle , locations = location , text = locatorText ) } Server \u00b6 The CSS, JavaScript and fonts injection in the Server was refactored to reduce the risk of collisions and simplify your codebase. This is a breaking change , to upgrade your app you need to : Provide the application's Context when creating a Server . Remove the following injection statements, which are now handled directly by the Streamer: server . loadCustomResource ( assets . open ( \"scripts/crypto-sha256.js\" ), \"crypto-sha256.js\" , Injectable . Script ) server . loadCustomResource ( assets . open ( \"scripts/highlight.js\" ), \"highlight.js\" , Injectable . Script )","title":"Home"},{"location":"migration-guide/#migration-guide","text":"All migration steps necessary in reading apps to upgrade to major versions of the Kotlin Readium toolkit will be documented in this file.","title":"Migration Guide"},{"location":"migration-guide/#210","text":"With this new release, we migrated all the r2-*-kotlin repositories to a single kotlin-toolkit repository .","title":"2.1.0"},{"location":"migration-guide/#using-jitpack","text":"If you are integrating Readium with the JitPack Maven repository, the same Readium modules are available as before. Just replace the former dependency notations with the new ones, per the README . dependencies { implementation \"com.github.readium.kotlin-toolkit:readium-shared:$readium_version\" implementation \"com.github.readium.kotlin-toolkit:readium-streamer:$readium_version\" implementation \"com.github.readium.kotlin-toolkit:readium-navigator:$readium_version\" implementation \"com.github.readium.kotlin-toolkit:readium-opds:$readium_version\" implementation \"com.github.readium.kotlin-toolkit:readium-lcp:$readium_version\" }","title":"Using JitPack"},{"location":"migration-guide/#using-a-fork","text":"If you are integrating your own forks of the Readium modules, you will need to migrate them to a single fork and port your changes. Follow strictly the given steps and it should go painlessly. Upgrade your forks to the latest Readium 2.1.0 version from the legacy repositories, as you would with any update. The 2.1.0 version is available on both the legacy repositories and the new kotlin-toolkit one. It will be used to port your changes over to the single repository. Fork the new kotlin-toolkit repository on your own GitHub space. In a new local directory, clone your legacy forks as well as the new single fork: ```sh mkdir readium-migration cd readium-migration","title":"Using a fork"},{"location":"migration-guide/#clone-the-legacy-forks","text":"git clone https://github.com/USERNAME/r2-shared-kotlin.git git clone https://github.com/USERNAME/r2-streamer-kotlin.git git clone https://github.com/USERNAME/r2-navigator-kotlin.git git clone https://github.com/USERNAME/r2-opds-kotlin.git git clone https://github.com/USERNAME/r2-lcp-kotlin.git","title":"Clone the legacy forks"},{"location":"migration-guide/#clone-the-new-single-fork","text":"git clone https://github.com/USERNAME/kotlin-toolkit.git 4. Reset the new fork to be in the same state as the 2.1.0 release. sh cd kotlin-toolkit git reset --hard 2.1.0 5. For each Readium module, port your changes over to the new fork. sh rm -rf readium/*/src cp -r ../r2-shared-kotlin/r2-shared/src readium/shared cp -r ../r2-streamer-kotlin/r2-streamer/src readium/streamer cp -r ../r2-navigator-kotlin/r2-navigator/src readium/navigator cp -r ../r2-opds-kotlin/r2-opds/src readium/opds cp -r ../r2-lcp-kotlin/r2-lcp/src readium/lcp 6. Review your changes, then commit. sh git add readium git commit -m \"Apply local changes to Readium\" 7. Finally, pull the changes to upgrade to the latest version of the fork. You might need to fix some conflicts. sh git pull --rebase git push ``` Your fork is now ready! To integrate it in your app as a local Git clone or submodule, follow the instructions from the README .","title":"Clone the new single fork"},{"location":"migration-guide/#200","text":"Nothing to change in your app to upgrade from 2.0.0-beta.2 to the final 2.0.0 release! Please follow the relevant sections if you are upgrading from an older version.","title":"2.0.0"},{"location":"migration-guide/#200-beta2","text":"This new beta is the last one before the final 2.0.0 release. It is mostly focused on bug fixes but we also adjusted the LCP and HTTP server APIs before setting it in stone for the 2.x versions.","title":"2.0.0-beta.2"},{"location":"migration-guide/#serving-publications-with-the-http-server","text":"The API used to serve Publication resources with the Streamer's HTTP server was simplified. See the test app changes in PR #387 . Replace addEpub() with addPublication() , which does not expect the publication filename anymore. If the Publication is servable, addPublication() will return its base URL. This means that you do not need to: Call Publication.localBaseUrlOf() to get the base URL. Use the one returned by addPublication() instead. Set the server port in the $key-publicationPort SharedPreferences property. If you copied the R2ScreenReader from the test app, you will need to update it to use directly the base URL instead of the $key-publicationPort property. See this commit . R2EpubActivity and R2AudiobookActivity are expecting an additional Intent extra: baseUrl . Use the base URL returned by addPublication() .","title":"Serving publications with the HTTP server"},{"location":"migration-guide/#lcp-changes","text":"Find all the changes made in the test app related to LCP in PR #379 .","title":"LCP changes"},{"location":"migration-guide/#replacing-orgjodatimedatetime-with-javautildate","text":"We replaced all occurrences of Joda's DateTime with java.util.Date in r2-lcp-kotlin , to reduce the dependency on third-party libraries. You will need to update any code using LcpLicense . The easiest way would be to keep using Joda in your own app and create DateTime object from the Date ones. For example: lcpLicense ?. license ?. issued ?. let { DateTime ( it ) }","title":"Replacing org.joda.time.DateTime with java.util.Date"},{"location":"migration-guide/#revamped-loan-renew-api","text":"The API to renew an LCP loan got revamped to better support renewal through a web page. You will need to implement LcpLicense.RenewListener to coordinate the UX interaction.","title":"Revamped loan renew API"},{"location":"migration-guide/#for-material-design-apps","text":"If your application fits Material Design guidelines, you may use the provided MaterialRenewListener implementation directly. This will only work if your theme extends a MaterialComponents one, for example: <style name= \"AppTheme\" parent= \"Theme.MaterialComponents.Light.DarkActionBar\" > MaterialRenewListener expects an ActivityResultCaller instance for argument. Any ComponentActivity or Fragment object can be used as ActivityResultCaller . val activity : FragmentActivity license . renewLoan ( MaterialRenewListener ( license = lcpLicense , caller = activity , fragmentManager = activity . supportFragmentManager ))","title":"For Material Design apps"},{"location":"migration-guide/#200-beta1","text":"The version 2.0.0-beta.1 is mostly stabilizing the new APIs and fixing existing bugs. We also upgraded the libraries to be compatible with Kotlin 1.4 and Gradle 4.1.","title":"2.0.0-beta.1"},{"location":"migration-guide/#replacing-format-by-mediatype","text":"To simplify the new format API, we merged Format into MediaType to offer a single interface. If you were using Format , you should be able to replace it by MediaType seamlessly.","title":"Replacing Format by MediaType"},{"location":"migration-guide/#replacing-file-by-fileasset","text":"Streamer.open() is now expecting an implementation of PublicationAsset instead of an instance of File . This allows to open publications which are not represented as files on the device. For example a stream, an URL or any other custom structure. Readium ships with a default implementation named FileAsset replacing the previous File type. The API is the same so you can just replace File by FileAsset in your project.","title":"Replacing File by FileAsset"},{"location":"migration-guide/#support-for-display-cutouts","text":"This new version is now compatible with display cutouts . However, this is an opt-in feature . To support display cutouts, follow these instructions: IMPORTANT : You need to remove any setPadding() statement from your app in UserSettings.kt , if you copied it from the test app. If you embed a navigator fragment (e.g. EpubNavigatorFragment ) yourself, you need to opt-in by specifying the layoutInDisplayCutoutMode of the host Activity . R2EpubActivity and R2CbzActivity automatically apply LAYOUT_IN_DISPLAY_CUTOUT_MODE_SHORT_EDGES to their window's layoutInDisplayCutoutMode . PdfNavigatorFragment is not yet compatible with display cutouts, because of limitations from the underlying PDF viewer.","title":"Support for display cutouts"},{"location":"migration-guide/#200-alpha2","text":"The 2.0.0 introduces numerous new APIs in the Shared Models, Streamer and LCP libraries, which are detailed in the following proposals. We highly recommend skimming over the \"Developer Guide\" section of each proposal before upgrading to this new major version. Format API Composite Fetcher API Publication Encapsulation Publication Helpers and Services Streamer API Content Protection This r2-testapp-kotlin commit showcases all the changes required to upgrade the Test App. Please reach out on Slack if you have any issue migrating your app to Readium 2.0.0, after checking the troubleshooting section .","title":"2.0.0-alpha.2"},{"location":"migration-guide/#replacing-the-parsers-with-streamer","text":"A new Streamer class deprecates the use of individual PublicationParser implementations, which you will need to replace in your app.","title":"Replacing the Parsers with Streamer"},{"location":"migration-guide/#opening-a-publication","text":"Call Streamer::open() to parse a publication. It will return a self-contained Publication model which handles metadata, resource access and DRM decryption. This means that Container , PubBox and DRM are not needed anymore, you can remove any reference from your app. The allowUserInteraction parameter should be set to true if you intend to render the parsed publication to the user. It will allow the Streamer to display interactive dialogs, for example to enter DRM credentials. You can set it to false if you're parsing a publication in a background process, for example during bulk import. val streamer = Streamer ( context ) val publication = streamer . open ( File ( path ), allowUserInteraction = true ) . getOrElse { error -> alert ( error . getUserMessage ( context )) return }","title":"Opening a Publication"},{"location":"migration-guide/#parsing-a-readium-web-publication-manifest","text":"You can't use Publication.fromJSON() to parse directly a manifest anymore. Instead, you can use Manifest.fromJSON() , which gives you access to the metadata embedded in the manifest. Then, if you really need a Publication model, you can build one yourself from the Manifest and optionally a Fetcher and Publication Services. -val publication = Publication.fromJSON(json) +val publication = Manifest.fromJSON(json)?.let { Publication(it) } However, the best way to parse a RWPM is to use the Streamer , like with any other publication format. This way the Publication model will be initialized with appropriate Fetcher and Publication Services.","title":"Parsing a Readium Web Publication Manifest"},{"location":"migration-guide/#error-feedback","text":"In case of failure, a Publication.OpeningException is returned. It implements UserException and can be used directly to present an error message to the user with getUserMessage(Context) . If you wish to customize the error messages or add translations, you can override the strings declared in r2-shared-kotlin/r2-shared/src/main/res/values/strings.xml in your own app module. This goes for LCP errors as well, which are declared in r2-lcp-kotlin/r2-lcp/src/main/res/values/strings.xml .","title":"Error Feedback"},{"location":"migration-guide/#advanced-usage","text":"Streamer offers other useful APIs to extend the capabilities of the Readium toolkit. Take a look at its documentation for more details, but here's an overview: Add new custom parsers. Integrated DRM support, such as LCP. Provide different implementations for third-party tools, e.g. ZIP, PDF and XML. Customize the Publication 's metadata or Fetcher upon creation. Collect authoring warnings from parsers.","title":"Advanced Usage"},{"location":"migration-guide/#accessing-a-publications-resources","text":"","title":"Accessing a Publication's Resources"},{"location":"migration-guide/#container-is-deprecated","text":"Since the new Publication model is self-contained, you can replace any use of the Container API by publication.get(Link) . This works for any publication format supported by the Streamer 's parsers. The test app used to have special cases for DiViNa and Audiobooks, by unpacking manually the ZIP archives. You should remove this code and streamline any resource access using publication.get() .","title":"Container is Deprecated"},{"location":"migration-guide/#extracting-publication-covers","text":"Extracting the cover of a publication for caching purposes can be done with a single call to publication.cover() , instead of reaching for a Link with cover relation. You can use publication.coverFitting(Size) to select the best resolution without exceeding a given size. It can be useful to avoid saving very large cover images. -val cover = - try { - publication.coverLink - ?.let { container.data(it.href) } - ?.let { BitmapFactory.decodeByteArray(it, 0, it.size) } - } catch (e: Exception) { - null - } +val cover = publication.coverFitting(Size(width = 100, height = 100))","title":"Extracting Publication Covers"},{"location":"migration-guide/#observing-a-navigators-current-locator","text":"Navigator::currentLocator is now a StateFlow instead of LiveData , to better support chromeless navigators such as an audiobook navigator in the future. If you were observing currentLocator from an Activity or Fragment , you can continue to do so with currentLocator.asLiveData() . - navigator.currentLocator.observe(this, Observer { locator -> }) + navigator.currentLocator.asLiveData().observe(this, Observer { locator -> }) If you access directly the value through navigator.currentLocator.value , you might need to add the following annotation to the enclosing class: @OptIn(kotlinx.coroutines.ExperimentalCoroutinesApi::class) Despite being still experimental, StateFlow is deemed stable for use .","title":"Observing a Navigator's Current Locator"},{"location":"migration-guide/#lcp-and-other-drms","text":"","title":"LCP and Other DRMs"},{"location":"migration-guide/#opening-an-lcp-protected-publication","text":"Support for LCP is now fully integrated with the Streamer , which means that you don't need to retrieve the LCP license and fill container.drm yourself after opening a Publication anymore. To enable the support for LCP in the Streamer , you need to initialize it with a ContentProtection implementation provided by r2-lcp-kotlin . val lcpService = LcpService ( context ) val streamer = Streamer ( context = context , contentProtections = listOfNotNull ( lcpService ?. contentProtection () ) ) Then, to prompt the user for their passphrase, you need to set allowUserInteraction to true and provide the instance of the hosting Activity , Fragment or View with the sender parameter when opening the publication. streamer . open ( File ( path ), allowUserInteraction = true , sender = activity ) Alternatively, if you already have the passphrase, you can pass it directly to the credentials parameter. If it's valid, the user won't be prompted.","title":"Opening an LCP Protected Publication"},{"location":"migration-guide/#customizing-the-passphrase-dialog","text":"The LCP Service now ships with a default passphrase dialog. You can remove the former implementation from your app if you copied it from the test app. But if you still want to use a custom implementation of LcpAuthenticating , for example to have a different layout, you can pass it when creating the ContentProtection . lcpService . contentProtection ( CustomLCPAuthentication ())","title":"Customizing the Passphrase Dialog"},{"location":"migration-guide/#presenting-a-protected-publication-with-a-navigator","text":"In case the credentials were incorrect or missing, the Streamer will still return a Publication , but in a \"restricted\" state. This allows reading apps to import publications by accessing their metadata without having the passphrase. But if you need to present the publication with a Navigator, you will need to first check if the Publication is not restricted. Besides missing credentials, a publication can be restricted if the Content Protection returned an error, for example when the publication is expired. In which case, you must display the error to the user by checking the presence of a publication.protectionError . if ( publication . isRestricted ) { publication . protectionError ?. let { error -> // A status error occurred, for example the publication expired alert ( error . getUserMessage ( context )) } } else { presentNavigator ( publication ) }","title":"Presenting a Protected Publication with a Navigator"},{"location":"migration-guide/#accessing-an-lcp-license-information","text":"To check if a publication is protected with a known DRM, you can use publication.isProtected . If you need to access an LCP license's information, you can use the helper publication.lcpLicense , which will return the LcpLicense if the publication is protected with LCP and the passphrase was known. Alternatively, you can use LcpService::retrieveLicense() as before.","title":"Accessing an LCP License Information"},{"location":"migration-guide/#acquiring-a-publication-from-an-lcpl","text":"LcpService.importPublication() was replaced with acquirePublication() , which is a cancellable suspending function. It doesn't require the user to enter its passphrase anymore to download the publication.","title":"Acquiring a Publication from an LCPL"},{"location":"migration-guide/#supporting-other-drms","text":"You can integrate additional DRMs, such as Adobe ACS, by implementing the ContentProtection protocol. This will provide first-class support for this DRM in the Streamer and Navigator. Take a look at the Content Protection proposal for more details. An example implementation can be found in r2-lcp-kotlin .","title":"Supporting Other DRMs"},{"location":"migration-guide/#introducing-try","text":"A few of the new APIs are returning a Try object, which is similar to the native Result type . We decided to go for this opiniated approach for error handling instead of throwing Exception because of the type-safety it brings and the constraint on reading apps to properly handle error cases. You can revert to traditional exceptions by calling getOrThrow() on the Try instance, but the most convenient way to handle the error would be to use getOrElse() . val publication = streamer . open ( File ( path ), allowUserInteraction = true ) . getOrElse { error -> alert ( error . getUserMessage ( context )) return } Try also supports map() and flatMap() which are useful to transform the result while forwarding any error handling to upper layers. fun cover (): Try < Bitmap , ResourceException > = publication . get ( coverLink ) . use { resource -> resource . read () } // <- returns a Try<ByteArray, ResourceException> . map { bytes -> BitmapFactory . decodeByteArray ( bytes , 0 , bytes . size ) }","title":"Introducing Try"},{"location":"migration-guide/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"migration-guide/#attempt-to-invoke-virtual-method-androidcontentsharedpreferences-androidcontentcontextgetsharedpreferencesjavalangstring-int-on-a-null-object-reference","text":"Make sure you create the LcpService after onCreate() has been called on an Activity .","title":"Attempt to invoke virtual method 'android.content.SharedPreferences android.content.Context.getSharedPreferences(java.lang.String, int)' on a null object reference"},{"location":"migration-guide/#lcp-publications-are-blank-or-lcpl-are-not-imported","text":"Make sure you added the following to your app's build.gradle : implementation \"readium:liblcp:1.0.0@aar\"","title":"LCP publications are blank or LCPL are not imported"},{"location":"migration-guide/#lcp-publications-are-opening-but-not-decrypted","text":"Make sure you added the content protection to the Streamer, following these instructions .","title":"LCP publications are opening but not decrypted"},{"location":"migration-guide/#elcpdialogauthentication-no-valid-sender-was-passed-to-lcpdialogauthenticationretrievepassphrase-make-sure-it-is-an-activity-a-fragment-or-a-view","text":"To be able to present the LCP passphrase dialog, the default LcpDialogAuthentication needs a hosting view as context. You must provide it to the sender parameter of Streamer::open() . streamer . open ( File ( path ), allowUserInteraction = true , sender = activity )","title":"E/LcpDialogAuthentication: No valid [sender] was passed to LcpDialogAuthentication::retrievePassphrase(). Make sure it is an Activity, a Fragment or a View."},{"location":"migration-guide/#illegalargumentexception-the-provided-publication-is-restricted-check-that-any-drm-was-properly-unlocked-using-a-content-protection","text":"Navigators will refuse to be opened if a publication is protected and not unlocked. You must check if a publication is not restricted by following these instructions .","title":"IllegalArgumentException: The provided publication is restricted. Check that any DRM was properly unlocked using a Content Protection."},{"location":"migration-guide/#200-alpha1","text":"With this new release, we started a process of modernization of the Readium Kotlin toolkit to: better follow Android best practices and Kotlin conventions, reduce coupling between reading apps and Readium, to ease future migrations and allow refactoring of private core implementations, increase code safety, unify Readium APIs across platforms through public specifications . As such, this release will break existing codebases . While most changes are facilitated thanks to deprecation warnings with automatic fixes, there are a few changes listed below that you will need to operate manually.","title":"2.0.0-alpha.1"},{"location":"migration-guide/#imports","text":"The Publication shared models were moved to their own package. While there are deprecated aliases helping with migration, it doesn't work for Publication.EXTENSION . Therefore, you need to replace all occurrences of org.readium.r2.shared.Publication by org.readium.r2.shared.publication.Publication in your codebase. Or better, don't use Publication.EXTENSION anymore. We have a new Format API which handles these needs in a more systematic way . And instead of file extensions, we recommend to store media types in your database. A few Publication and Link properties, such as images , pageList and numberOfItems were moved to a different package. Simply trigger the \"Import\" feature of your IDE to resolve them.","title":"Imports"},{"location":"migration-guide/#immutability-of-shared-models","text":"The Publication shared models are now immutable to increase code safety. This should not impact reading apps much unless you were creating Publication or other models yourself. However, there are a few places in the Test App that needs to be updated: Publication 's readingOrder , links , and tableOfContents are not MutableList anymore, but read-only List . Therefore, you need to update any code expecting mutable lists . Locator can't be modified directly anymore. Instead, use the copy() or copyWithLocations() Locator APIs .","title":"Immutability of Shared Models"},{"location":"migration-guide/#last-read-location","text":"Best practices on observing and restoring the last location were updated in the Test App, and it is highly recommended that you update your codebase as well, to avoid any issues.","title":"Last Read Location"},{"location":"migration-guide/#restoring-the-last-location","text":"You need to make these changes in your implementations of EpubActivity , ComicActivity and AudiobookActivity : Remove any overrides of currentLocation . Restore the last location from your database in onCreate() , for example with something similar to: // Restores the last read location bookRepository . lastLocatorOfBook ( bookId ) ?. let { locator -> go ( locator , animated = false ) }","title":"Restoring the Last Location"},{"location":"migration-guide/#observing-the-current-location","text":"NavigatorDelegate.locationDidChange() is now deprecated in favor of the more idiomatic Navigator.currentLocator: LiveData<Locator?> . currentLocator . observe ( this , Observer { locator -> if ( locator != null ) { bookRepository . saveLastLocatorOfBook ( bookId , locator ) } })","title":"Observing the Current Location"},{"location":"migration-guide/#publication","text":"A new Positions List feature was added to provide a list of discrete locations in a publication. It can be used to implement an approximation of page numbers. This replaces the existing R2SyntheticPageList , which should be removed from your codebase. Publications parsed from large manifests could crash the application when starting a reading activity. To fix this, Publication must not be put in an Intent extra anymore . Instead, use the new Intent extensions provided by Readium . This solution is a crutch until we move away from Activity in the Navigator and let reading apps handle the lifecycle of Publication themselves. Replace all occurrences of putExtra(\"publication\", publication) or similar by putPublication(publication) . Replace all occurrences of getSerializableExtra(\"publication\") or similar by getPublication(this) .","title":"Publication"},{"location":"migration-guide/#locator","text":"Locator is now Parcelable instead of Serializable , you must replace all occurrences of getSerializableExtra(\"locator\") by getParcelableExtra(\"locator\") . Locations.fragment was renamed to fragments , and is now a List . You need to update your code if you were creating Locations yourself. locations and text are not nullable anymore. Locator 's constructor has a default value, so you don't need to pass null for them anymore . Locator is not meant to be subclassed, and extending it is not possible anymore. If your project is based on the Test App, you need to do the following changes in your codebase : Don't extend Locator in Bookmark and Highlight . Instead, add a locator property which will create a Locator object from their properties. Then, in places where you were creating a Locator from a database model , you can use this property directly. For SearchLocator , you have two choices: (Recommended) Replace all occurrences of SearchLocator by Locator . These two models are interchangeable. Use the same strategy described above for Bookmark . class Bookmark (...) { val locator get () = Locator ( href = resourceHref , type = resourceType , title = resourceTitle , locations = location , text = locatorText ) }","title":"Locator"},{"location":"migration-guide/#server","text":"The CSS, JavaScript and fonts injection in the Server was refactored to reduce the risk of collisions and simplify your codebase. This is a breaking change , to upgrade your app you need to : Provide the application's Context when creating a Server . Remove the following injection statements, which are now handled directly by the Streamer: server . loadCustomResource ( assets . open ( \"scripts/crypto-sha256.js\" ), \"crypto-sha256.js\" , Injectable . Script ) server . loadCustomResource ( assets . open ( \"scripts/highlight.js\" ), \"highlight.js\" , Injectable . Script )","title":"Server"},{"location":"readium/lcp/","text":"// lcp lcp \u00b6 Packages \u00b6 Name org.readium.r2.lcp org.readium.r2.lcp.auth org.readium.r2.lcp.license org.readium.r2.lcp.license.container org.readium.r2.lcp.license.model org.readium.r2.lcp.license.model.components org.readium.r2.lcp.license.model.components.lcp org.readium.r2.lcp.license.model.components.lsd org.readium.r2.lcp.persistence org.readium.r2.lcp.public org.readium.r2.lcp.service","title":"LCP"},{"location":"readium/lcp/#lcp","text":"","title":"lcp"},{"location":"readium/lcp/#packages","text":"Name org.readium.r2.lcp org.readium.r2.lcp.auth org.readium.r2.lcp.license org.readium.r2.lcp.license.container org.readium.r2.lcp.license.model org.readium.r2.lcp.license.model.components org.readium.r2.lcp.license.model.components.lcp org.readium.r2.lcp.license.model.components.lsd org.readium.r2.lcp.persistence org.readium.r2.lcp.public org.readium.r2.lcp.service","title":"Packages"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.container/","text":"// lcp / org.readium.r2.lcp.license.container Package org.readium.r2.lcp.license.container \u00b6","title":"Org.readium.r2.lcp.license.container"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.container/#package-orgreadiumr2lcplicensecontainer","text":"","title":"Package org.readium.r2.lcp.license.container"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license/","text":"// lcp / org.readium.r2.lcp.license Package org.readium.r2.lcp.license \u00b6","title":"Org.readium.r2.lcp.license"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license/#package-orgreadiumr2lcplicense","text":"","title":"Package org.readium.r2.lcp.license"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.public/","text":"// lcp / org.readium.r2.lcp.public Package org.readium.r2.lcp.public \u00b6","title":"Org.readium.r2.lcp.public"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.public/#package-orgreadiumr2lcppublic","text":"","title":"Package org.readium.r2.lcp.public"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.service/","text":"// lcp / org.readium.r2.lcp.service Package org.readium.r2.lcp.service \u00b6","title":"Org.readium.r2.lcp.service"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.service/#package-orgreadiumr2lcpservice","text":"","title":"Package org.readium.r2.lcp.service"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/","text":"// lcp / org.readium.r2.lcp Package org.readium.r2.lcp \u00b6 Types \u00b6 Name Summary LcpAuthenticating [androidJvm] interface LcpAuthenticating LcpContentProtectionService [androidJvm] class LcpContentProtectionService (license: LcpLicense ?, error: LcpException ?) : ContentProtectionService LcpException [androidJvm] sealed class LcpException : UserException LcpLicense [androidJvm] interface LcpLicense : ContentProtectionService.UserRights Opened license, used to decipher a protected publication and manage its license. LcpService [androidJvm] interface LcpService Service used to acquire and open publications protected with LCP. MaterialRenewListener [androidJvm] class MaterialRenewListener (license: LcpLicense , caller: ActivityResultCaller , fragmentManager: FragmentManager ) : LcpLicense.RenewListener A default implementation of the LcpLicense.RenewListener using Chrome Custom Tabs for presenting web pages and a Material Date Picker for choosing the renew date. Functions \u00b6 Name Summary checkDecryption [androidJvm] suspend fun Publication . checkDecryption () Properties \u00b6 Name Summary lcpLicense [androidJvm] val Publication . lcpLicense : LcpLicense ? Returns the LcpLicense if the Publication is protected by LCP and the license is opened.","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/#package-orgreadiumr2lcp","text":"","title":"Package org.readium.r2.lcp"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/#types","text":"Name Summary LcpAuthenticating [androidJvm] interface LcpAuthenticating LcpContentProtectionService [androidJvm] class LcpContentProtectionService (license: LcpLicense ?, error: LcpException ?) : ContentProtectionService LcpException [androidJvm] sealed class LcpException : UserException LcpLicense [androidJvm] interface LcpLicense : ContentProtectionService.UserRights Opened license, used to decipher a protected publication and manage its license. LcpService [androidJvm] interface LcpService Service used to acquire and open publications protected with LCP. MaterialRenewListener [androidJvm] class MaterialRenewListener (license: LcpLicense , caller: ActivityResultCaller , fragmentManager: FragmentManager ) : LcpLicense.RenewListener A default implementation of the LcpLicense.RenewListener using Chrome Custom Tabs for presenting web pages and a Material Date Picker for choosing the renew date.","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/#functions","text":"Name Summary checkDecryption [androidJvm] suspend fun Publication . checkDecryption ()","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/#properties","text":"Name Summary lcpLicense [androidJvm] val Publication . lcpLicense : LcpLicense ? Returns the LcpLicense if the Publication is protected by LCP and the license is opened.","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/check-decryption/","text":"// lcp / org.readium.r2.lcp / checkDecryption checkDecryption \u00b6 [androidJvm]\\ suspend fun Publication . checkDecryption ()","title":"Check decryption"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/check-decryption/#checkdecryption","text":"[androidJvm]\\ suspend fun Publication . checkDecryption ()","title":"checkDecryption"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/lcp-license/","text":"// lcp / org.readium.r2.lcp / lcpLicense lcpLicense \u00b6 [androidJvm]\\ val Publication . lcpLicense : LcpLicense ? Returns the LcpLicense if the Publication is protected by LCP and the license is opened.","title":"Lcp license"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/lcp-license/#lcplicense","text":"[androidJvm]\\ val Publication . lcpLicense : LcpLicense ? Returns the LcpLicense if the Publication is protected by LCP and the license is opened.","title":"lcpLicense"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/","text":"// lcp / org.readium.r2.lcp / LcpAuthenticating LcpAuthenticating \u00b6 [androidJvm]\\ interface LcpAuthenticating Types \u00b6 Name Summary AuthenticatedLicense [androidJvm] data class AuthenticatedLicense (document: LicenseDocument ) AuthenticationReason [androidJvm] enum AuthenticationReason : Enum < LcpAuthenticating.AuthenticationReason > Functions \u00b6 Name Summary retrievePassphrase [androidJvm] abstract suspend fun retrievePassphrase (license: LcpAuthenticating.AuthenticatedLicense , reason: LcpAuthenticating.AuthenticationReason , allowUserInteraction: Boolean , sender: Any ? = null): String ? Retrieves the passphrase used to decrypt the given license. Inheritors \u00b6 Name LcpDialogAuthentication LcpPassphraseAuthentication","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/#lcpauthenticating","text":"[androidJvm]\\ interface LcpAuthenticating","title":"LcpAuthenticating"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/#types","text":"Name Summary AuthenticatedLicense [androidJvm] data class AuthenticatedLicense (document: LicenseDocument ) AuthenticationReason [androidJvm] enum AuthenticationReason : Enum < LcpAuthenticating.AuthenticationReason >","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/#functions","text":"Name Summary retrievePassphrase [androidJvm] abstract suspend fun retrievePassphrase (license: LcpAuthenticating.AuthenticatedLicense , reason: LcpAuthenticating.AuthenticationReason , allowUserInteraction: Boolean , sender: Any ? = null): String ? Retrieves the passphrase used to decrypt the given license.","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/#inheritors","text":"Name LcpDialogAuthentication LcpPassphraseAuthentication","title":"Inheritors"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/retrieve-passphrase/","text":"// lcp / org.readium.r2.lcp / LcpAuthenticating / retrievePassphrase retrievePassphrase \u00b6 [androidJvm]\\ abstract suspend fun retrievePassphrase (license: LcpAuthenticating.AuthenticatedLicense , reason: LcpAuthenticating.AuthenticationReason , allowUserInteraction: Boolean , sender: Any ? = null): String ? Retrieves the passphrase used to decrypt the given license. If allowUserInteraction is true, the reading app can prompt the user to enter the passphrase. Otherwise, use a background retrieval method (e.g. web service) or return null. The returned passphrase can be clear or already hashed. You can implement an asynchronous pop-up with callbacks using suspendCoroutine: suspendCoroutine<String?> { cont ->\\ cancelButton.setOnClickListener {\\ cont.resume(null)\\ }\\ \\ okButton.setOnClickListener {\\ cont.resume(passwordEditText.text.toString())\\ }\\ \\ // show pop-up...\\ } Parameters \u00b6 androidJvm license Information to show to the user about the license being opened. reason Reason why the passphrase is requested. It should be used to prompt the user. allowUserInteraction Indicates whether the user can be prompted for their passphrase. sender Free object that can be used by reading apps to give some UX context when presenting dialogs.","title":"Retrieve passphrase"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/retrieve-passphrase/#retrievepassphrase","text":"[androidJvm]\\ abstract suspend fun retrievePassphrase (license: LcpAuthenticating.AuthenticatedLicense , reason: LcpAuthenticating.AuthenticationReason , allowUserInteraction: Boolean , sender: Any ? = null): String ? Retrieves the passphrase used to decrypt the given license. If allowUserInteraction is true, the reading app can prompt the user to enter the passphrase. Otherwise, use a background retrieval method (e.g. web service) or return null. The returned passphrase can be clear or already hashed. You can implement an asynchronous pop-up with callbacks using suspendCoroutine: suspendCoroutine<String?> { cont ->\\ cancelButton.setOnClickListener {\\ cont.resume(null)\\ }\\ \\ okButton.setOnClickListener {\\ cont.resume(passwordEditText.text.toString())\\ }\\ \\ // show pop-up...\\ }","title":"retrievePassphrase"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/retrieve-passphrase/#parameters","text":"androidJvm license Information to show to the user about the license being opened. reason Reason why the passphrase is requested. It should be used to prompt the user. allowUserInteraction Indicates whether the user can be prompted for their passphrase. sender Free object that can be used by reading apps to give some UX context when presenting dialogs.","title":"Parameters"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authenticated-license/","text":"// lcp / org.readium.r2.lcp / LcpAuthenticating / AuthenticatedLicense AuthenticatedLicense \u00b6 [androidJvm]\\ data class AuthenticatedLicense (document: LicenseDocument ) Parameters \u00b6 androidJvm document License Document being opened. Constructors \u00b6 AuthenticatedLicense [androidJvm] fun AuthenticatedLicense (document: LicenseDocument ) Properties \u00b6 Name Summary document [androidJvm] val document : LicenseDocument hint [androidJvm] val hint : String A hint to be displayed to the User to help them remember the User Passphrase. hintLink [androidJvm] val hintLink : Link ? Location where a Reading System can redirect a User looking for additional information about the User Passphrase. provider [androidJvm] val provider : String URI of the license provider. supportLinks [androidJvm] val supportLinks : List < Link > Support resources for the user (either a website, an email or a telephone number). user [androidJvm] val user : User ? Informations about the user owning the license.","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authenticated-license/#authenticatedlicense","text":"[androidJvm]\\ data class AuthenticatedLicense (document: LicenseDocument )","title":"AuthenticatedLicense"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authenticated-license/#parameters","text":"androidJvm document License Document being opened.","title":"Parameters"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authenticated-license/#constructors","text":"AuthenticatedLicense [androidJvm] fun AuthenticatedLicense (document: LicenseDocument )","title":"Constructors"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authenticated-license/#properties","text":"Name Summary document [androidJvm] val document : LicenseDocument hint [androidJvm] val hint : String A hint to be displayed to the User to help them remember the User Passphrase. hintLink [androidJvm] val hintLink : Link ? Location where a Reading System can redirect a User looking for additional information about the User Passphrase. provider [androidJvm] val provider : String URI of the license provider. supportLinks [androidJvm] val supportLinks : List < Link > Support resources for the user (either a website, an email or a telephone number). user [androidJvm] val user : User ? Informations about the user owning the license.","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authenticated-license/-authenticated-license/","text":"// lcp / org.readium.r2.lcp / LcpAuthenticating / AuthenticatedLicense / AuthenticatedLicense AuthenticatedLicense \u00b6 [androidJvm]\\ fun AuthenticatedLicense (document: LicenseDocument ) Parameters \u00b6 androidJvm document License Document being opened.","title":" authenticated license"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authenticated-license/-authenticated-license/#authenticatedlicense","text":"[androidJvm]\\ fun AuthenticatedLicense (document: LicenseDocument )","title":"AuthenticatedLicense"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authenticated-license/-authenticated-license/#parameters","text":"androidJvm document License Document being opened.","title":"Parameters"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authenticated-license/document/","text":"// lcp / org.readium.r2.lcp / LcpAuthenticating / AuthenticatedLicense / document document \u00b6 [androidJvm]\\ val document : LicenseDocument","title":"Document"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authenticated-license/document/#document","text":"[androidJvm]\\ val document : LicenseDocument","title":"document"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authenticated-license/hint-link/","text":"// lcp / org.readium.r2.lcp / LcpAuthenticating / AuthenticatedLicense / hintLink hintLink \u00b6 [androidJvm]\\ val hintLink : Link ? Location where a Reading System can redirect a User looking for additional information about the User Passphrase.","title":"Hint link"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authenticated-license/hint-link/#hintlink","text":"[androidJvm]\\ val hintLink : Link ? Location where a Reading System can redirect a User looking for additional information about the User Passphrase.","title":"hintLink"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authenticated-license/hint/","text":"// lcp / org.readium.r2.lcp / LcpAuthenticating / AuthenticatedLicense / hint hint \u00b6 [androidJvm]\\ val hint : String A hint to be displayed to the User to help them remember the User Passphrase.","title":"Hint"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authenticated-license/hint/#hint","text":"[androidJvm]\\ val hint : String A hint to be displayed to the User to help them remember the User Passphrase.","title":"hint"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authenticated-license/provider/","text":"// lcp / org.readium.r2.lcp / LcpAuthenticating / AuthenticatedLicense / provider provider \u00b6 [androidJvm]\\ val provider : String URI of the license provider.","title":"Provider"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authenticated-license/provider/#provider","text":"[androidJvm]\\ val provider : String URI of the license provider.","title":"provider"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authenticated-license/support-links/","text":"// lcp / org.readium.r2.lcp / LcpAuthenticating / AuthenticatedLicense / supportLinks supportLinks \u00b6 [androidJvm]\\ val supportLinks : List < Link > Support resources for the user (either a website, an email or a telephone number).","title":"Support links"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authenticated-license/support-links/#supportlinks","text":"[androidJvm]\\ val supportLinks : List < Link > Support resources for the user (either a website, an email or a telephone number).","title":"supportLinks"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authenticated-license/user/","text":"// lcp / org.readium.r2.lcp / LcpAuthenticating / AuthenticatedLicense / user user \u00b6 [androidJvm]\\ val user : User ? Informations about the user owning the license.","title":"User"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authenticated-license/user/#user","text":"[androidJvm]\\ val user : User ? Informations about the user owning the license.","title":"user"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authentication-reason/","text":"// lcp / org.readium.r2.lcp / LcpAuthenticating / AuthenticationReason AuthenticationReason \u00b6 [androidJvm]\\ enum AuthenticationReason : Enum < LcpAuthenticating.AuthenticationReason > Entries \u00b6 InvalidPassphrase [androidJvm] InvalidPassphrase () The provided passphrase was invalid. PassphraseNotFound [androidJvm] PassphraseNotFound () No matching passphrase was found. Types \u00b6 Name Summary Companion [androidJvm] object Companion Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authentication-reason/#authenticationreason","text":"[androidJvm]\\ enum AuthenticationReason : Enum < LcpAuthenticating.AuthenticationReason >","title":"AuthenticationReason"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authentication-reason/#entries","text":"InvalidPassphrase [androidJvm] InvalidPassphrase () The provided passphrase was invalid. PassphraseNotFound [androidJvm] PassphraseNotFound () No matching passphrase was found.","title":"Entries"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authentication-reason/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authentication-reason/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authentication-reason/-companion/","text":"// lcp / org.readium.r2.lcp / LcpAuthenticating / AuthenticationReason / Companion Companion \u00b6 [androidJvm]\\ object Companion","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authentication-reason/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authentication-reason/-invalid-passphrase/","text":"// lcp / org.readium.r2.lcp / LcpAuthenticating / AuthenticationReason / InvalidPassphrase InvalidPassphrase \u00b6 [androidJvm]\\ InvalidPassphrase () The provided passphrase was invalid. Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authentication-reason/-invalid-passphrase/#invalidpassphrase","text":"[androidJvm]\\ InvalidPassphrase () The provided passphrase was invalid.","title":"InvalidPassphrase"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authentication-reason/-invalid-passphrase/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authentication-reason/-passphrase-not-found/","text":"// lcp / org.readium.r2.lcp / LcpAuthenticating / AuthenticationReason / PassphraseNotFound PassphraseNotFound \u00b6 [androidJvm]\\ PassphraseNotFound () No matching passphrase was found. Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authentication-reason/-passphrase-not-found/#passphrasenotfound","text":"[androidJvm]\\ PassphraseNotFound () No matching passphrase was found.","title":"PassphraseNotFound"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-authenticating/-authentication-reason/-passphrase-not-found/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-content-protection-service/","text":"// lcp / org.readium.r2.lcp / LcpContentProtectionService LcpContentProtectionService \u00b6 [androidJvm]\\ class LcpContentProtectionService (license: LcpLicense ?, error: LcpException ?) : ContentProtectionService Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary close [androidJvm] open fun close () get [androidJvm] open override fun get (link: Link ): Resource ? Properties \u00b6 Name Summary credentials [androidJvm] open override val credentials : String ? = null error [androidJvm] open override val error : LcpException ? isRestricted [androidJvm] open override val isRestricted : Boolean license [androidJvm] val license : LcpLicense ? links [androidJvm] open override val links : List < Link > name [androidJvm] open val name : LocalizedString ? rights [androidJvm] open override val rights : ContentProtectionService.UserRights scheme [androidJvm] open override val scheme : ContentProtection.Scheme","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-content-protection-service/#lcpcontentprotectionservice","text":"[androidJvm]\\ class LcpContentProtectionService (license: LcpLicense ?, error: LcpException ?) : ContentProtectionService","title":"LcpContentProtectionService"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-content-protection-service/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-content-protection-service/#functions","text":"Name Summary close [androidJvm] open fun close () get [androidJvm] open override fun get (link: Link ): Resource ?","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-content-protection-service/#properties","text":"Name Summary credentials [androidJvm] open override val credentials : String ? = null error [androidJvm] open override val error : LcpException ? isRestricted [androidJvm] open override val isRestricted : Boolean license [androidJvm] val license : LcpLicense ? links [androidJvm] open override val links : List < Link > name [androidJvm] open val name : LocalizedString ? rights [androidJvm] open override val rights : ContentProtectionService.UserRights scheme [androidJvm] open override val scheme : ContentProtection.Scheme","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-content-protection-service/-lcp-content-protection-service/","text":"// lcp / org.readium.r2.lcp / LcpContentProtectionService / LcpContentProtectionService LcpContentProtectionService \u00b6 [androidJvm]\\ fun LcpContentProtectionService (license: LcpLicense ?, error: LcpException ?)","title":" lcp content protection service"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-content-protection-service/-lcp-content-protection-service/#lcpcontentprotectionservice","text":"[androidJvm]\\ fun LcpContentProtectionService (license: LcpLicense ?, error: LcpException ?)","title":"LcpContentProtectionService"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-content-protection-service/credentials/","text":"// lcp / org.readium.r2.lcp / LcpContentProtectionService / credentials credentials \u00b6 [androidJvm]\\ open override val credentials : String ? = null","title":"Credentials"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-content-protection-service/credentials/#credentials","text":"[androidJvm]\\ open override val credentials : String ? = null","title":"credentials"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-content-protection-service/error/","text":"// lcp / org.readium.r2.lcp / LcpContentProtectionService / error error \u00b6 [androidJvm]\\ open override val error : LcpException ?","title":"Error"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-content-protection-service/error/#error","text":"[androidJvm]\\ open override val error : LcpException ?","title":"error"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-content-protection-service/is-restricted/","text":"// lcp / org.readium.r2.lcp / LcpContentProtectionService / isRestricted isRestricted \u00b6 [androidJvm]\\ open override val isRestricted : Boolean","title":"Is restricted"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-content-protection-service/is-restricted/#isrestricted","text":"[androidJvm]\\ open override val isRestricted : Boolean","title":"isRestricted"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-content-protection-service/license/","text":"// lcp / org.readium.r2.lcp / LcpContentProtectionService / license license \u00b6 [androidJvm]\\ val license : LcpLicense ?","title":"License"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-content-protection-service/license/#license","text":"[androidJvm]\\ val license : LcpLicense ?","title":"license"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-content-protection-service/rights/","text":"// lcp / org.readium.r2.lcp / LcpContentProtectionService / rights rights \u00b6 [androidJvm]\\ open override val rights : ContentProtectionService.UserRights","title":"Rights"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-content-protection-service/rights/#rights","text":"[androidJvm]\\ open override val rights : ContentProtectionService.UserRights","title":"rights"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-content-protection-service/scheme/","text":"// lcp / org.readium.r2.lcp / LcpContentProtectionService / scheme scheme \u00b6 [androidJvm]\\ open override val scheme : ContentProtection.Scheme","title":"Scheme"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-content-protection-service/scheme/#scheme","text":"[androidJvm]\\ open override val scheme : ContentProtection.Scheme","title":"scheme"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-content-protection-service/-companion/","text":"// lcp / org.readium.r2.lcp / LcpContentProtectionService / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary createFactory [androidJvm] fun createFactory (license: LcpLicense ?, error: LcpException ?): ( Publication.Service.Context ) -> LcpContentProtectionService","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-content-protection-service/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-content-protection-service/-companion/#functions","text":"Name Summary createFactory [androidJvm] fun createFactory (license: LcpLicense ?, error: LcpException ?): ( Publication.Service.Context ) -> LcpContentProtectionService","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-content-protection-service/-companion/create-factory/","text":"// lcp / org.readium.r2.lcp / LcpContentProtectionService / Companion / createFactory createFactory \u00b6 [androidJvm]\\ fun createFactory (license: LcpLicense ?, error: LcpException ?): ( Publication.Service.Context ) -> LcpContentProtectionService","title":"Create factory"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-content-protection-service/-companion/create-factory/#createfactory","text":"[androidJvm]\\ fun createFactory (license: LcpLicense ?, error: LcpException ?): ( Publication.Service.Context ) -> LcpContentProtectionService","title":"createFactory"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/","text":"// lcp / org.readium.r2.lcp / LcpException LcpException \u00b6 [androidJvm]\\ sealed class LcpException : UserException Types \u00b6 Name Summary Companion [androidJvm] object Companion Container [androidJvm] sealed class Container : LcpException Errors while reading or writing a LCP container (LCPL, EPUB, LCPDF, etc.) CrlFetching [androidJvm] object CrlFetching : LcpException Failed to retrieve the Certificate Revocation List. Decryption [androidJvm] sealed class Decryption : LcpException LicenseIntegrity [androidJvm] sealed class LicenseIntegrity : LcpException An error occurred while checking the integrity of the License, it can't be retrieved. LicenseInteractionNotAvailable [androidJvm] object LicenseInteractionNotAvailable : LcpException The interaction is not available with this License. LicenseProfileNotSupported [androidJvm] object LicenseProfileNotSupported : LcpException This License's profile is not supported by liblcp. LicenseStatus [androidJvm] sealed class LicenseStatus : LcpException Errors while checking the status of the License, using the Status Document. Network [androidJvm] class Network (cause: Throwable ?) : LcpException A network request failed with the given exception. Parsing [androidJvm] sealed class Parsing : LcpException Errors while parsing the License or Status JSON Documents. Renew [androidJvm] sealed class Renew : LcpException Errors while renewing a loan. Return [androidJvm] sealed class Return : LcpException Errors while returning a loan. Runtime [androidJvm] class Runtime (message: String ) : LcpException An unexpected LCP exception occurred. Please post an issue on r2-lcp-kotlin with the error message and how to reproduce it. Unknown [androidJvm] class Unknown (cause: Throwable ?) : LcpException An unknown low-level exception was reported. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? Inheritors \u00b6 Name LcpException LcpException LcpException LcpException LcpException LcpException LcpException LcpException LcpException LcpException LcpException LcpException LcpException","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/#lcpexception","text":"[androidJvm]\\ sealed class LcpException : UserException","title":"LcpException"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/#types","text":"Name Summary Companion [androidJvm] object Companion Container [androidJvm] sealed class Container : LcpException Errors while reading or writing a LCP container (LCPL, EPUB, LCPDF, etc.) CrlFetching [androidJvm] object CrlFetching : LcpException Failed to retrieve the Certificate Revocation List. Decryption [androidJvm] sealed class Decryption : LcpException LicenseIntegrity [androidJvm] sealed class LicenseIntegrity : LcpException An error occurred while checking the integrity of the License, it can't be retrieved. LicenseInteractionNotAvailable [androidJvm] object LicenseInteractionNotAvailable : LcpException The interaction is not available with this License. LicenseProfileNotSupported [androidJvm] object LicenseProfileNotSupported : LcpException This License's profile is not supported by liblcp. LicenseStatus [androidJvm] sealed class LicenseStatus : LcpException Errors while checking the status of the License, using the Status Document. Network [androidJvm] class Network (cause: Throwable ?) : LcpException A network request failed with the given exception. Parsing [androidJvm] sealed class Parsing : LcpException Errors while parsing the License or Status JSON Documents. Renew [androidJvm] sealed class Renew : LcpException Errors while renewing a loan. Return [androidJvm] sealed class Return : LcpException Errors while returning a loan. Runtime [androidJvm] class Runtime (message: String ) : LcpException An unexpected LCP exception occurred. Please post an issue on r2-lcp-kotlin with the error message and how to reproduce it. Unknown [androidJvm] class Unknown (cause: Throwable ?) : LcpException An unknown low-level exception was reported.","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/#inheritors","text":"Name LcpException LcpException LcpException LcpException LcpException LcpException LcpException LcpException LcpException LcpException LcpException LcpException LcpException","title":"Inheritors"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-companion/","text":"// lcp / org.readium.r2.lcp / LcpException / Companion Companion \u00b6 [androidJvm]\\ object Companion","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/","text":"// lcp / org.readium.r2.lcp / LcpException / Container Container \u00b6 [androidJvm]\\ sealed class Container : LcpException Errors while reading or writing a LCP container (LCPL, EPUB, LCPDF, etc.) Types \u00b6 Name Summary FileNotFound [androidJvm] class FileNotFound (path: String ) : LcpException.Container The file at given relative path is not found in the Container. OpenFailed [androidJvm] object OpenFailed : LcpException.Container Can't access the container, it's format is wrong. ReadFailed [androidJvm] class ReadFailed (path: String ) : LcpException.Container Can't read the file at given relative path in the Container. WriteFailed [androidJvm] class WriteFailed (path: String ) : LcpException.Container Can't write the file at given relative path in the Container. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? Inheritors \u00b6 Name LcpException.Container LcpException.Container LcpException.Container LcpException.Container","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/#container","text":"[androidJvm]\\ sealed class Container : LcpException Errors while reading or writing a LCP container (LCPL, EPUB, LCPDF, etc.)","title":"Container"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/#types","text":"Name Summary FileNotFound [androidJvm] class FileNotFound (path: String ) : LcpException.Container The file at given relative path is not found in the Container. OpenFailed [androidJvm] object OpenFailed : LcpException.Container Can't access the container, it's format is wrong. ReadFailed [androidJvm] class ReadFailed (path: String ) : LcpException.Container Can't read the file at given relative path in the Container. WriteFailed [androidJvm] class WriteFailed (path: String ) : LcpException.Container Can't write the file at given relative path in the Container.","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/#inheritors","text":"Name LcpException.Container LcpException.Container LcpException.Container LcpException.Container","title":"Inheritors"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-file-not-found/","text":"// lcp / org.readium.r2.lcp / LcpException / Container / FileNotFound FileNotFound \u00b6 [androidJvm]\\ class FileNotFound (path: String ) : LcpException.Container The file at given relative path is not found in the Container. Constructors \u00b6 FileNotFound [androidJvm] fun FileNotFound (path: String ) Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? path [androidJvm] val path : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-file-not-found/#filenotfound","text":"[androidJvm]\\ class FileNotFound (path: String ) : LcpException.Container The file at given relative path is not found in the Container.","title":"FileNotFound"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-file-not-found/#constructors","text":"FileNotFound [androidJvm] fun FileNotFound (path: String )","title":"Constructors"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-file-not-found/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-file-not-found/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? path [androidJvm] val path : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-file-not-found/-file-not-found/","text":"// lcp / org.readium.r2.lcp / LcpException / Container / FileNotFound / FileNotFound FileNotFound \u00b6 [androidJvm]\\ fun FileNotFound (path: String )","title":" file not found"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-file-not-found/-file-not-found/#filenotfound","text":"[androidJvm]\\ fun FileNotFound (path: String )","title":"FileNotFound"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-file-not-found/path/","text":"// lcp / org.readium.r2.lcp / LcpException / Container / FileNotFound / path path \u00b6 [androidJvm]\\ val path : String","title":"Path"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-file-not-found/path/#path","text":"[androidJvm]\\ val path : String","title":"path"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-open-failed/","text":"// lcp / org.readium.r2.lcp / LcpException / Container / OpenFailed OpenFailed \u00b6 [androidJvm]\\ object OpenFailed : LcpException.Container Can't access the container, it's format is wrong. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-open-failed/#openfailed","text":"[androidJvm]\\ object OpenFailed : LcpException.Container Can't access the container, it's format is wrong.","title":"OpenFailed"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-open-failed/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-open-failed/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-read-failed/","text":"// lcp / org.readium.r2.lcp / LcpException / Container / ReadFailed ReadFailed \u00b6 [androidJvm]\\ class ReadFailed (path: String ) : LcpException.Container Can't read the file at given relative path in the Container. Constructors \u00b6 ReadFailed [androidJvm] fun ReadFailed (path: String ) Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? path [androidJvm] val path : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-read-failed/#readfailed","text":"[androidJvm]\\ class ReadFailed (path: String ) : LcpException.Container Can't read the file at given relative path in the Container.","title":"ReadFailed"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-read-failed/#constructors","text":"ReadFailed [androidJvm] fun ReadFailed (path: String )","title":"Constructors"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-read-failed/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-read-failed/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? path [androidJvm] val path : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-read-failed/-read-failed/","text":"// lcp / org.readium.r2.lcp / LcpException / Container / ReadFailed / ReadFailed ReadFailed \u00b6 [androidJvm]\\ fun ReadFailed (path: String )","title":" read failed"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-read-failed/-read-failed/#readfailed","text":"[androidJvm]\\ fun ReadFailed (path: String )","title":"ReadFailed"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-read-failed/path/","text":"// lcp / org.readium.r2.lcp / LcpException / Container / ReadFailed / path path \u00b6 [androidJvm]\\ val path : String","title":"Path"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-read-failed/path/#path","text":"[androidJvm]\\ val path : String","title":"path"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-write-failed/","text":"// lcp / org.readium.r2.lcp / LcpException / Container / WriteFailed WriteFailed \u00b6 [androidJvm]\\ class WriteFailed (path: String ) : LcpException.Container Can't write the file at given relative path in the Container. Constructors \u00b6 WriteFailed [androidJvm] fun WriteFailed (path: String ) Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? path [androidJvm] val path : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-write-failed/#writefailed","text":"[androidJvm]\\ class WriteFailed (path: String ) : LcpException.Container Can't write the file at given relative path in the Container.","title":"WriteFailed"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-write-failed/#constructors","text":"WriteFailed [androidJvm] fun WriteFailed (path: String )","title":"Constructors"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-write-failed/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-write-failed/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? path [androidJvm] val path : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-write-failed/-write-failed/","text":"// lcp / org.readium.r2.lcp / LcpException / Container / WriteFailed / WriteFailed WriteFailed \u00b6 [androidJvm]\\ fun WriteFailed (path: String )","title":" write failed"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-write-failed/-write-failed/#writefailed","text":"[androidJvm]\\ fun WriteFailed (path: String )","title":"WriteFailed"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-write-failed/path/","text":"// lcp / org.readium.r2.lcp / LcpException / Container / WriteFailed / path path \u00b6 [androidJvm]\\ val path : String","title":"Path"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-container/-write-failed/path/#path","text":"[androidJvm]\\ val path : String","title":"path"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-crl-fetching/","text":"// lcp / org.readium.r2.lcp / LcpException / CrlFetching CrlFetching \u00b6 [androidJvm]\\ object CrlFetching : LcpException Failed to retrieve the Certificate Revocation List. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-crl-fetching/#crlfetching","text":"[androidJvm]\\ object CrlFetching : LcpException Failed to retrieve the Certificate Revocation List.","title":"CrlFetching"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-crl-fetching/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-crl-fetching/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-decryption/","text":"// lcp / org.readium.r2.lcp / LcpException / Decryption Decryption \u00b6 [androidJvm]\\ sealed class Decryption : LcpException Types \u00b6 Name Summary ContentDecryptError [androidJvm] object ContentDecryptError : LcpException.Decryption ContentKeyDecryptError [androidJvm] object ContentKeyDecryptError : LcpException.Decryption Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? Inheritors \u00b6 Name LcpException.Decryption LcpException.Decryption","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-decryption/#decryption","text":"[androidJvm]\\ sealed class Decryption : LcpException","title":"Decryption"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-decryption/#types","text":"Name Summary ContentDecryptError [androidJvm] object ContentDecryptError : LcpException.Decryption ContentKeyDecryptError [androidJvm] object ContentKeyDecryptError : LcpException.Decryption","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-decryption/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-decryption/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-decryption/#inheritors","text":"Name LcpException.Decryption LcpException.Decryption","title":"Inheritors"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-decryption/-content-decrypt-error/","text":"// lcp / org.readium.r2.lcp / LcpException / Decryption / ContentDecryptError ContentDecryptError \u00b6 [androidJvm]\\ object ContentDecryptError : LcpException.Decryption Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-decryption/-content-decrypt-error/#contentdecrypterror","text":"[androidJvm]\\ object ContentDecryptError : LcpException.Decryption","title":"ContentDecryptError"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-decryption/-content-decrypt-error/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-decryption/-content-decrypt-error/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-decryption/-content-key-decrypt-error/","text":"// lcp / org.readium.r2.lcp / LcpException / Decryption / ContentKeyDecryptError ContentKeyDecryptError \u00b6 [androidJvm]\\ object ContentKeyDecryptError : LcpException.Decryption Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-decryption/-content-key-decrypt-error/#contentkeydecrypterror","text":"[androidJvm]\\ object ContentKeyDecryptError : LcpException.Decryption","title":"ContentKeyDecryptError"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-decryption/-content-key-decrypt-error/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-decryption/-content-key-decrypt-error/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-integrity/","text":"// lcp / org.readium.r2.lcp / LcpException / LicenseIntegrity LicenseIntegrity \u00b6 [androidJvm]\\ sealed class LicenseIntegrity : LcpException An error occurred while checking the integrity of the License, it can't be retrieved. Types \u00b6 Name Summary CertificateRevoked [androidJvm] object CertificateRevoked : LcpException.LicenseIntegrity InvalidCertificateSignature [androidJvm] object InvalidCertificateSignature : LcpException.LicenseIntegrity InvalidLicenseSignature [androidJvm] object InvalidLicenseSignature : LcpException.LicenseIntegrity InvalidLicenseSignatureDate [androidJvm] object InvalidLicenseSignatureDate : LcpException.LicenseIntegrity InvalidUserKeyCheck [androidJvm] object InvalidUserKeyCheck : LcpException.LicenseIntegrity Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? Inheritors \u00b6 Name LcpException.LicenseIntegrity LcpException.LicenseIntegrity LcpException.LicenseIntegrity LcpException.LicenseIntegrity LcpException.LicenseIntegrity","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-integrity/#licenseintegrity","text":"[androidJvm]\\ sealed class LicenseIntegrity : LcpException An error occurred while checking the integrity of the License, it can't be retrieved.","title":"LicenseIntegrity"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-integrity/#types","text":"Name Summary CertificateRevoked [androidJvm] object CertificateRevoked : LcpException.LicenseIntegrity InvalidCertificateSignature [androidJvm] object InvalidCertificateSignature : LcpException.LicenseIntegrity InvalidLicenseSignature [androidJvm] object InvalidLicenseSignature : LcpException.LicenseIntegrity InvalidLicenseSignatureDate [androidJvm] object InvalidLicenseSignatureDate : LcpException.LicenseIntegrity InvalidUserKeyCheck [androidJvm] object InvalidUserKeyCheck : LcpException.LicenseIntegrity","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-integrity/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-integrity/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-integrity/#inheritors","text":"Name LcpException.LicenseIntegrity LcpException.LicenseIntegrity LcpException.LicenseIntegrity LcpException.LicenseIntegrity LcpException.LicenseIntegrity","title":"Inheritors"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-integrity/-certificate-revoked/","text":"// lcp / org.readium.r2.lcp / LcpException / LicenseIntegrity / CertificateRevoked CertificateRevoked \u00b6 [androidJvm]\\ object CertificateRevoked : LcpException.LicenseIntegrity Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-integrity/-certificate-revoked/#certificaterevoked","text":"[androidJvm]\\ object CertificateRevoked : LcpException.LicenseIntegrity","title":"CertificateRevoked"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-integrity/-certificate-revoked/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-integrity/-certificate-revoked/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-integrity/-invalid-certificate-signature/","text":"// lcp / org.readium.r2.lcp / LcpException / LicenseIntegrity / InvalidCertificateSignature InvalidCertificateSignature \u00b6 [androidJvm]\\ object InvalidCertificateSignature : LcpException.LicenseIntegrity Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-integrity/-invalid-certificate-signature/#invalidcertificatesignature","text":"[androidJvm]\\ object InvalidCertificateSignature : LcpException.LicenseIntegrity","title":"InvalidCertificateSignature"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-integrity/-invalid-certificate-signature/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-integrity/-invalid-certificate-signature/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-integrity/-invalid-license-signature/","text":"// lcp / org.readium.r2.lcp / LcpException / LicenseIntegrity / InvalidLicenseSignature InvalidLicenseSignature \u00b6 [androidJvm]\\ object InvalidLicenseSignature : LcpException.LicenseIntegrity Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-integrity/-invalid-license-signature/#invalidlicensesignature","text":"[androidJvm]\\ object InvalidLicenseSignature : LcpException.LicenseIntegrity","title":"InvalidLicenseSignature"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-integrity/-invalid-license-signature/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-integrity/-invalid-license-signature/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-integrity/-invalid-license-signature-date/","text":"// lcp / org.readium.r2.lcp / LcpException / LicenseIntegrity / InvalidLicenseSignatureDate InvalidLicenseSignatureDate \u00b6 [androidJvm]\\ object InvalidLicenseSignatureDate : LcpException.LicenseIntegrity Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-integrity/-invalid-license-signature-date/#invalidlicensesignaturedate","text":"[androidJvm]\\ object InvalidLicenseSignatureDate : LcpException.LicenseIntegrity","title":"InvalidLicenseSignatureDate"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-integrity/-invalid-license-signature-date/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-integrity/-invalid-license-signature-date/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-integrity/-invalid-user-key-check/","text":"// lcp / org.readium.r2.lcp / LcpException / LicenseIntegrity / InvalidUserKeyCheck InvalidUserKeyCheck \u00b6 [androidJvm]\\ object InvalidUserKeyCheck : LcpException.LicenseIntegrity Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-integrity/-invalid-user-key-check/#invaliduserkeycheck","text":"[androidJvm]\\ object InvalidUserKeyCheck : LcpException.LicenseIntegrity","title":"InvalidUserKeyCheck"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-integrity/-invalid-user-key-check/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-integrity/-invalid-user-key-check/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-interaction-not-available/","text":"// lcp / org.readium.r2.lcp / LcpException / LicenseInteractionNotAvailable LicenseInteractionNotAvailable \u00b6 [androidJvm]\\ object LicenseInteractionNotAvailable : LcpException The interaction is not available with this License. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-interaction-not-available/#licenseinteractionnotavailable","text":"[androidJvm]\\ object LicenseInteractionNotAvailable : LcpException The interaction is not available with this License.","title":"LicenseInteractionNotAvailable"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-interaction-not-available/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-interaction-not-available/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-profile-not-supported/","text":"// lcp / org.readium.r2.lcp / LcpException / LicenseProfileNotSupported LicenseProfileNotSupported \u00b6 [androidJvm]\\ object LicenseProfileNotSupported : LcpException This License's profile is not supported by liblcp. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-profile-not-supported/#licenseprofilenotsupported","text":"[androidJvm]\\ object LicenseProfileNotSupported : LcpException This License's profile is not supported by liblcp.","title":"LicenseProfileNotSupported"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-profile-not-supported/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-profile-not-supported/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/","text":"// lcp / org.readium.r2.lcp / LcpException / LicenseStatus LicenseStatus \u00b6 [androidJvm]\\ sealed class LicenseStatus : LcpException Errors while checking the status of the License, using the Status Document. The app should notify the user and stop there. The message to the user must be clear about the status of the license: don't display \"expired\" if the status is \"revoked\". The date and time corresponding to the new status should be displayed (e.g. \"The license expired on 01 January 2018\"). Types \u00b6 Name Summary Cancelled [androidJvm] class Cancelled (date: Date ) : LcpException.LicenseStatus Expired [androidJvm] class Expired (end: Date ) : LcpException.LicenseStatus NotStarted [androidJvm] class NotStarted (start: Date ) : LcpException.LicenseStatus Returned [androidJvm] class Returned (date: Date ) : LcpException.LicenseStatus Revoked [androidJvm] class Revoked (date: Date , devicesCount: Int ) : LcpException.LicenseStatus If the license has been revoked, the user message should display the number of devices which registered to the server. This count can be calculated from the number of \"register\" events in the status document. If no event is logged in the status document, no such message should appear (certainly not \"The license was registered by 0 devices\"). Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? Inheritors \u00b6 Name LcpException.LicenseStatus LcpException.LicenseStatus LcpException.LicenseStatus LcpException.LicenseStatus LcpException.LicenseStatus","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/#licensestatus","text":"[androidJvm]\\ sealed class LicenseStatus : LcpException Errors while checking the status of the License, using the Status Document. The app should notify the user and stop there. The message to the user must be clear about the status of the license: don't display \"expired\" if the status is \"revoked\". The date and time corresponding to the new status should be displayed (e.g. \"The license expired on 01 January 2018\").","title":"LicenseStatus"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/#types","text":"Name Summary Cancelled [androidJvm] class Cancelled (date: Date ) : LcpException.LicenseStatus Expired [androidJvm] class Expired (end: Date ) : LcpException.LicenseStatus NotStarted [androidJvm] class NotStarted (start: Date ) : LcpException.LicenseStatus Returned [androidJvm] class Returned (date: Date ) : LcpException.LicenseStatus Revoked [androidJvm] class Revoked (date: Date , devicesCount: Int ) : LcpException.LicenseStatus If the license has been revoked, the user message should display the number of devices which registered to the server. This count can be calculated from the number of \"register\" events in the status document. If no event is logged in the status document, no such message should appear (certainly not \"The license was registered by 0 devices\").","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/#inheritors","text":"Name LcpException.LicenseStatus LcpException.LicenseStatus LcpException.LicenseStatus LcpException.LicenseStatus LcpException.LicenseStatus","title":"Inheritors"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-cancelled/","text":"// lcp / org.readium.r2.lcp / LcpException / LicenseStatus / Cancelled Cancelled \u00b6 [androidJvm]\\ class Cancelled (date: Date ) : LcpException.LicenseStatus Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? date [androidJvm] val date : Date message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-cancelled/#cancelled","text":"[androidJvm]\\ class Cancelled (date: Date ) : LcpException.LicenseStatus","title":"Cancelled"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-cancelled/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-cancelled/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? date [androidJvm] val date : Date message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-cancelled/-cancelled/","text":"// lcp / org.readium.r2.lcp / LcpException / LicenseStatus / Cancelled / Cancelled Cancelled \u00b6 [androidJvm]\\ fun Cancelled (date: Date )","title":" cancelled"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-cancelled/-cancelled/#cancelled","text":"[androidJvm]\\ fun Cancelled (date: Date )","title":"Cancelled"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-cancelled/date/","text":"// lcp / org.readium.r2.lcp / LcpException / LicenseStatus / Cancelled / date date \u00b6 [androidJvm]\\ val date : Date","title":"Date"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-cancelled/date/#date","text":"[androidJvm]\\ val date : Date","title":"date"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-expired/","text":"// lcp / org.readium.r2.lcp / LcpException / LicenseStatus / Expired Expired \u00b6 [androidJvm]\\ class Expired (end: Date ) : LcpException.LicenseStatus Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? end [androidJvm] val end : Date message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-expired/#expired","text":"[androidJvm]\\ class Expired (end: Date ) : LcpException.LicenseStatus","title":"Expired"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-expired/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-expired/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? end [androidJvm] val end : Date message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-expired/-expired/","text":"// lcp / org.readium.r2.lcp / LcpException / LicenseStatus / Expired / Expired Expired \u00b6 [androidJvm]\\ fun Expired (end: Date )","title":" expired"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-expired/-expired/#expired","text":"[androidJvm]\\ fun Expired (end: Date )","title":"Expired"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-expired/end/","text":"// lcp / org.readium.r2.lcp / LcpException / LicenseStatus / Expired / end end \u00b6 [androidJvm]\\ val end : Date","title":"End"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-expired/end/#end","text":"[androidJvm]\\ val end : Date","title":"end"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-not-started/","text":"// lcp / org.readium.r2.lcp / LcpException / LicenseStatus / NotStarted NotStarted \u00b6 [androidJvm]\\ class NotStarted (start: Date ) : LcpException.LicenseStatus Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? start [androidJvm] val start : Date","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-not-started/#notstarted","text":"[androidJvm]\\ class NotStarted (start: Date ) : LcpException.LicenseStatus","title":"NotStarted"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-not-started/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-not-started/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? start [androidJvm] val start : Date","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-not-started/-not-started/","text":"// lcp / org.readium.r2.lcp / LcpException / LicenseStatus / NotStarted / NotStarted NotStarted \u00b6 [androidJvm]\\ fun NotStarted (start: Date )","title":" not started"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-not-started/-not-started/#notstarted","text":"[androidJvm]\\ fun NotStarted (start: Date )","title":"NotStarted"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-not-started/start/","text":"// lcp / org.readium.r2.lcp / LcpException / LicenseStatus / NotStarted / start start \u00b6 [androidJvm]\\ val start : Date","title":"Start"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-not-started/start/#start","text":"[androidJvm]\\ val start : Date","title":"start"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-returned/","text":"// lcp / org.readium.r2.lcp / LcpException / LicenseStatus / Returned Returned \u00b6 [androidJvm]\\ class Returned (date: Date ) : LcpException.LicenseStatus Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? date [androidJvm] val date : Date message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-returned/#returned","text":"[androidJvm]\\ class Returned (date: Date ) : LcpException.LicenseStatus","title":"Returned"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-returned/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-returned/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? date [androidJvm] val date : Date message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-returned/-returned/","text":"// lcp / org.readium.r2.lcp / LcpException / LicenseStatus / Returned / Returned Returned \u00b6 [androidJvm]\\ fun Returned (date: Date )","title":" returned"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-returned/-returned/#returned","text":"[androidJvm]\\ fun Returned (date: Date )","title":"Returned"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-returned/date/","text":"// lcp / org.readium.r2.lcp / LcpException / LicenseStatus / Returned / date date \u00b6 [androidJvm]\\ val date : Date","title":"Date"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-returned/date/#date","text":"[androidJvm]\\ val date : Date","title":"date"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-revoked/","text":"// lcp / org.readium.r2.lcp / LcpException / LicenseStatus / Revoked Revoked \u00b6 [androidJvm]\\ class Revoked (date: Date , devicesCount: Int ) : LcpException.LicenseStatus If the license has been revoked, the user message should display the number of devices which registered to the server. This count can be calculated from the number of \"register\" events in the status document. If no event is logged in the status document, no such message should appear (certainly not \"The license was registered by 0 devices\"). Constructors \u00b6 Revoked [androidJvm] fun Revoked (date: Date , devicesCount: Int ) Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? date [androidJvm] val date : Date devicesCount [androidJvm] val devicesCount : Int message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-revoked/#revoked","text":"[androidJvm]\\ class Revoked (date: Date , devicesCount: Int ) : LcpException.LicenseStatus If the license has been revoked, the user message should display the number of devices which registered to the server. This count can be calculated from the number of \"register\" events in the status document. If no event is logged in the status document, no such message should appear (certainly not \"The license was registered by 0 devices\").","title":"Revoked"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-revoked/#constructors","text":"Revoked [androidJvm] fun Revoked (date: Date , devicesCount: Int )","title":"Constructors"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-revoked/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-revoked/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? date [androidJvm] val date : Date devicesCount [androidJvm] val devicesCount : Int message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-revoked/-revoked/","text":"// lcp / org.readium.r2.lcp / LcpException / LicenseStatus / Revoked / Revoked Revoked \u00b6 [androidJvm]\\ fun Revoked (date: Date , devicesCount: Int )","title":" revoked"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-revoked/-revoked/#revoked","text":"[androidJvm]\\ fun Revoked (date: Date , devicesCount: Int )","title":"Revoked"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-revoked/date/","text":"// lcp / org.readium.r2.lcp / LcpException / LicenseStatus / Revoked / date date \u00b6 [androidJvm]\\ val date : Date","title":"Date"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-revoked/date/#date","text":"[androidJvm]\\ val date : Date","title":"date"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-revoked/devices-count/","text":"// lcp / org.readium.r2.lcp / LcpException / LicenseStatus / Revoked / devicesCount devicesCount \u00b6 [androidJvm]\\ val devicesCount : Int","title":"Devices count"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-license-status/-revoked/devices-count/#devicescount","text":"[androidJvm]\\ val devicesCount : Int","title":"devicesCount"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-network/","text":"// lcp / org.readium.r2.lcp / LcpException / Network Network \u00b6 [androidJvm]\\ class Network (cause: Throwable ?) : LcpException A network request failed with the given exception. Constructors \u00b6 Network [androidJvm] fun Network (cause: Throwable ?) Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open override val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-network/#network","text":"[androidJvm]\\ class Network (cause: Throwable ?) : LcpException A network request failed with the given exception.","title":"Network"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-network/#constructors","text":"Network [androidJvm] fun Network (cause: Throwable ?)","title":"Constructors"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-network/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-network/#properties","text":"Name Summary cause [androidJvm] open override val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-network/-network/","text":"// lcp / org.readium.r2.lcp / LcpException / Network / Network Network \u00b6 [androidJvm]\\ fun Network (cause: Throwable ?)","title":" network"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-network/-network/#network","text":"[androidJvm]\\ fun Network (cause: Throwable ?)","title":"Network"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-network/cause/","text":"// lcp / org.readium.r2.lcp / LcpException / Network / cause cause \u00b6 [androidJvm]\\ open override val cause : Throwable ?","title":"Cause"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-network/cause/#cause","text":"[androidJvm]\\ open override val cause : Throwable ?","title":"cause"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/","text":"// lcp / org.readium.r2.lcp / LcpException / Parsing Parsing \u00b6 [androidJvm]\\ sealed class Parsing : LcpException Errors while parsing the License or Status JSON Documents. Types \u00b6 Name Summary Encryption [androidJvm] object Encryption : LcpException.Parsing Invalid Encryption. LicenseDocument [androidJvm] object LicenseDocument : LcpException.Parsing The JSON is not representing a valid License Document. Link [androidJvm] object Link : LcpException.Parsing Invalid Link. MalformedJSON [androidJvm] object MalformedJSON : LcpException.Parsing The JSON is malformed and can't be parsed. Signature [androidJvm] object Signature : LcpException.Parsing Invalid License Document Signature. StatusDocument [androidJvm] object StatusDocument : LcpException.Parsing The JSON is not representing a valid Status Document. Url [androidJvm] class Url (rel: String ) : LcpException.Parsing Invalid URL for link with rel . Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? Inheritors \u00b6 Name LcpException.Parsing LcpException.Parsing LcpException.Parsing LcpException.Parsing LcpException.Parsing LcpException.Parsing LcpException.Parsing","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/#parsing","text":"[androidJvm]\\ sealed class Parsing : LcpException Errors while parsing the License or Status JSON Documents.","title":"Parsing"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/#types","text":"Name Summary Encryption [androidJvm] object Encryption : LcpException.Parsing Invalid Encryption. LicenseDocument [androidJvm] object LicenseDocument : LcpException.Parsing The JSON is not representing a valid License Document. Link [androidJvm] object Link : LcpException.Parsing Invalid Link. MalformedJSON [androidJvm] object MalformedJSON : LcpException.Parsing The JSON is malformed and can't be parsed. Signature [androidJvm] object Signature : LcpException.Parsing Invalid License Document Signature. StatusDocument [androidJvm] object StatusDocument : LcpException.Parsing The JSON is not representing a valid Status Document. Url [androidJvm] class Url (rel: String ) : LcpException.Parsing Invalid URL for link with rel .","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/#inheritors","text":"Name LcpException.Parsing LcpException.Parsing LcpException.Parsing LcpException.Parsing LcpException.Parsing LcpException.Parsing LcpException.Parsing","title":"Inheritors"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-encryption/","text":"// lcp / org.readium.r2.lcp / LcpException / Parsing / Encryption Encryption \u00b6 [androidJvm]\\ object Encryption : LcpException.Parsing Invalid Encryption. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-encryption/#encryption","text":"[androidJvm]\\ object Encryption : LcpException.Parsing Invalid Encryption.","title":"Encryption"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-encryption/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-encryption/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-license-document/","text":"// lcp / org.readium.r2.lcp / LcpException / Parsing / LicenseDocument LicenseDocument \u00b6 [androidJvm]\\ object LicenseDocument : LcpException.Parsing The JSON is not representing a valid License Document. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-license-document/#licensedocument","text":"[androidJvm]\\ object LicenseDocument : LcpException.Parsing The JSON is not representing a valid License Document.","title":"LicenseDocument"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-license-document/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-license-document/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-link/","text":"// lcp / org.readium.r2.lcp / LcpException / Parsing / Link Link \u00b6 [androidJvm]\\ object Link : LcpException.Parsing Invalid Link. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-link/#link","text":"[androidJvm]\\ object Link : LcpException.Parsing Invalid Link.","title":"Link"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-link/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-link/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-malformed-j-s-o-n/","text":"// lcp / org.readium.r2.lcp / LcpException / Parsing / MalformedJSON MalformedJSON \u00b6 [androidJvm]\\ object MalformedJSON : LcpException.Parsing The JSON is malformed and can't be parsed. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-malformed-j-s-o-n/#malformedjson","text":"[androidJvm]\\ object MalformedJSON : LcpException.Parsing The JSON is malformed and can't be parsed.","title":"MalformedJSON"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-malformed-j-s-o-n/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-malformed-j-s-o-n/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-signature/","text":"// lcp / org.readium.r2.lcp / LcpException / Parsing / Signature Signature \u00b6 [androidJvm]\\ object Signature : LcpException.Parsing Invalid License Document Signature. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-signature/#signature","text":"[androidJvm]\\ object Signature : LcpException.Parsing Invalid License Document Signature.","title":"Signature"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-signature/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-signature/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-status-document/","text":"// lcp / org.readium.r2.lcp / LcpException / Parsing / StatusDocument StatusDocument \u00b6 [androidJvm]\\ object StatusDocument : LcpException.Parsing The JSON is not representing a valid Status Document. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-status-document/#statusdocument","text":"[androidJvm]\\ object StatusDocument : LcpException.Parsing The JSON is not representing a valid Status Document.","title":"StatusDocument"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-status-document/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-status-document/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-url/","text":"// lcp / org.readium.r2.lcp / LcpException / Parsing / Url Url \u00b6 [androidJvm]\\ class Url (rel: String ) : LcpException.Parsing Invalid URL for link with rel . Constructors \u00b6 Url [androidJvm] fun Url (rel: String ) Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? rel [androidJvm] val rel : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-url/#url","text":"[androidJvm]\\ class Url (rel: String ) : LcpException.Parsing Invalid URL for link with rel .","title":"Url"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-url/#constructors","text":"Url [androidJvm] fun Url (rel: String )","title":"Constructors"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-url/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-url/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? rel [androidJvm] val rel : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-url/-url/","text":"// lcp / org.readium.r2.lcp / LcpException / Parsing / Url / Url Url \u00b6 [androidJvm]\\ fun Url (rel: String )","title":" url"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-url/-url/#url","text":"[androidJvm]\\ fun Url (rel: String )","title":"Url"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-url/rel/","text":"// lcp / org.readium.r2.lcp / LcpException / Parsing / Url / rel rel \u00b6 [androidJvm]\\ val rel : String","title":"Rel"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-parsing/-url/rel/#rel","text":"[androidJvm]\\ val rel : String","title":"rel"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-renew/","text":"// lcp / org.readium.r2.lcp / LcpException / Renew Renew \u00b6 [androidJvm]\\ sealed class Renew : LcpException Errors while renewing a loan. Types \u00b6 Name Summary InvalidRenewalPeriod [androidJvm] class InvalidRenewalPeriod (maxRenewDate: Date ?) : LcpException.Renew Incorrect renewal period, your publication could not be renewed. RenewFailed [androidJvm] object RenewFailed : LcpException.Renew Your publication could not be renewed properly. UnexpectedServerError [androidJvm] object UnexpectedServerError : LcpException.Renew An unexpected error has occurred on the licensing server. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? Inheritors \u00b6 Name LcpException.Renew LcpException.Renew LcpException.Renew","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-renew/#renew","text":"[androidJvm]\\ sealed class Renew : LcpException Errors while renewing a loan.","title":"Renew"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-renew/#types","text":"Name Summary InvalidRenewalPeriod [androidJvm] class InvalidRenewalPeriod (maxRenewDate: Date ?) : LcpException.Renew Incorrect renewal period, your publication could not be renewed. RenewFailed [androidJvm] object RenewFailed : LcpException.Renew Your publication could not be renewed properly. UnexpectedServerError [androidJvm] object UnexpectedServerError : LcpException.Renew An unexpected error has occurred on the licensing server.","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-renew/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-renew/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-renew/#inheritors","text":"Name LcpException.Renew LcpException.Renew LcpException.Renew","title":"Inheritors"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-renew/-invalid-renewal-period/","text":"// lcp / org.readium.r2.lcp / LcpException / Renew / InvalidRenewalPeriod InvalidRenewalPeriod \u00b6 [androidJvm]\\ class InvalidRenewalPeriod (maxRenewDate: Date ?) : LcpException.Renew Incorrect renewal period, your publication could not be renewed. Constructors \u00b6 InvalidRenewalPeriod [androidJvm] fun InvalidRenewalPeriod (maxRenewDate: Date ?) Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? maxRenewDate [androidJvm] val maxRenewDate : Date ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-renew/-invalid-renewal-period/#invalidrenewalperiod","text":"[androidJvm]\\ class InvalidRenewalPeriod (maxRenewDate: Date ?) : LcpException.Renew Incorrect renewal period, your publication could not be renewed.","title":"InvalidRenewalPeriod"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-renew/-invalid-renewal-period/#constructors","text":"InvalidRenewalPeriod [androidJvm] fun InvalidRenewalPeriod (maxRenewDate: Date ?)","title":"Constructors"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-renew/-invalid-renewal-period/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-renew/-invalid-renewal-period/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? maxRenewDate [androidJvm] val maxRenewDate : Date ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-renew/-invalid-renewal-period/-invalid-renewal-period/","text":"// lcp / org.readium.r2.lcp / LcpException / Renew / InvalidRenewalPeriod / InvalidRenewalPeriod InvalidRenewalPeriod \u00b6 [androidJvm]\\ fun InvalidRenewalPeriod (maxRenewDate: Date ?)","title":" invalid renewal period"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-renew/-invalid-renewal-period/-invalid-renewal-period/#invalidrenewalperiod","text":"[androidJvm]\\ fun InvalidRenewalPeriod (maxRenewDate: Date ?)","title":"InvalidRenewalPeriod"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-renew/-invalid-renewal-period/max-renew-date/","text":"// lcp / org.readium.r2.lcp / LcpException / Renew / InvalidRenewalPeriod / maxRenewDate maxRenewDate \u00b6 [androidJvm]\\ val maxRenewDate : Date ?","title":"Max renew date"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-renew/-invalid-renewal-period/max-renew-date/#maxrenewdate","text":"[androidJvm]\\ val maxRenewDate : Date ?","title":"maxRenewDate"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-renew/-renew-failed/","text":"// lcp / org.readium.r2.lcp / LcpException / Renew / RenewFailed RenewFailed \u00b6 [androidJvm]\\ object RenewFailed : LcpException.Renew Your publication could not be renewed properly. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-renew/-renew-failed/#renewfailed","text":"[androidJvm]\\ object RenewFailed : LcpException.Renew Your publication could not be renewed properly.","title":"RenewFailed"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-renew/-renew-failed/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-renew/-renew-failed/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-renew/-unexpected-server-error/","text":"// lcp / org.readium.r2.lcp / LcpException / Renew / UnexpectedServerError UnexpectedServerError \u00b6 [androidJvm]\\ object UnexpectedServerError : LcpException.Renew An unexpected error has occurred on the licensing server. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-renew/-unexpected-server-error/#unexpectedservererror","text":"[androidJvm]\\ object UnexpectedServerError : LcpException.Renew An unexpected error has occurred on the licensing server.","title":"UnexpectedServerError"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-renew/-unexpected-server-error/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-renew/-unexpected-server-error/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-return/","text":"// lcp / org.readium.r2.lcp / LcpException / Return Return \u00b6 [androidJvm]\\ sealed class Return : LcpException Errors while returning a loan. Types \u00b6 Name Summary AlreadyReturnedOrExpired [androidJvm] object AlreadyReturnedOrExpired : LcpException.Return Your publication has already been returned before or is expired. ReturnFailed [androidJvm] object ReturnFailed : LcpException.Return Your publication could not be returned properly. UnexpectedServerError [androidJvm] object UnexpectedServerError : LcpException.Return An unexpected error has occurred on the licensing server. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? Inheritors \u00b6 Name LcpException.Return LcpException.Return LcpException.Return","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-return/#return","text":"[androidJvm]\\ sealed class Return : LcpException Errors while returning a loan.","title":"Return"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-return/#types","text":"Name Summary AlreadyReturnedOrExpired [androidJvm] object AlreadyReturnedOrExpired : LcpException.Return Your publication has already been returned before or is expired. ReturnFailed [androidJvm] object ReturnFailed : LcpException.Return Your publication could not be returned properly. UnexpectedServerError [androidJvm] object UnexpectedServerError : LcpException.Return An unexpected error has occurred on the licensing server.","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-return/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-return/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-return/#inheritors","text":"Name LcpException.Return LcpException.Return LcpException.Return","title":"Inheritors"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-return/-already-returned-or-expired/","text":"// lcp / org.readium.r2.lcp / LcpException / Return / AlreadyReturnedOrExpired AlreadyReturnedOrExpired \u00b6 [androidJvm]\\ object AlreadyReturnedOrExpired : LcpException.Return Your publication has already been returned before or is expired. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-return/-already-returned-or-expired/#alreadyreturnedorexpired","text":"[androidJvm]\\ object AlreadyReturnedOrExpired : LcpException.Return Your publication has already been returned before or is expired.","title":"AlreadyReturnedOrExpired"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-return/-already-returned-or-expired/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-return/-already-returned-or-expired/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-return/-return-failed/","text":"// lcp / org.readium.r2.lcp / LcpException / Return / ReturnFailed ReturnFailed \u00b6 [androidJvm]\\ object ReturnFailed : LcpException.Return Your publication could not be returned properly. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-return/-return-failed/#returnfailed","text":"[androidJvm]\\ object ReturnFailed : LcpException.Return Your publication could not be returned properly.","title":"ReturnFailed"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-return/-return-failed/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-return/-return-failed/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-return/-unexpected-server-error/","text":"// lcp / org.readium.r2.lcp / LcpException / Return / UnexpectedServerError UnexpectedServerError \u00b6 [androidJvm]\\ object UnexpectedServerError : LcpException.Return An unexpected error has occurred on the licensing server. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-return/-unexpected-server-error/#unexpectedservererror","text":"[androidJvm]\\ object UnexpectedServerError : LcpException.Return An unexpected error has occurred on the licensing server.","title":"UnexpectedServerError"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-return/-unexpected-server-error/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-return/-unexpected-server-error/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-runtime/","text":"// lcp / org.readium.r2.lcp / LcpException / Runtime Runtime \u00b6 [androidJvm]\\ class Runtime (message: String ) : LcpException An unexpected LCP exception occurred. Please post an issue on r2-lcp-kotlin with the error message and how to reproduce it. Constructors \u00b6 Runtime [androidJvm] fun Runtime (message: String ) Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open override val message : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-runtime/#runtime","text":"[androidJvm]\\ class Runtime (message: String ) : LcpException An unexpected LCP exception occurred. Please post an issue on r2-lcp-kotlin with the error message and how to reproduce it.","title":"Runtime"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-runtime/#constructors","text":"Runtime [androidJvm] fun Runtime (message: String )","title":"Constructors"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-runtime/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-runtime/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open override val message : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-runtime/-runtime/","text":"// lcp / org.readium.r2.lcp / LcpException / Runtime / Runtime Runtime \u00b6 [androidJvm]\\ fun Runtime (message: String )","title":" runtime"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-runtime/-runtime/#runtime","text":"[androidJvm]\\ fun Runtime (message: String )","title":"Runtime"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-runtime/message/","text":"// lcp / org.readium.r2.lcp / LcpException / Runtime / message message \u00b6 [androidJvm]\\ open override val message : String","title":"Message"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-runtime/message/#message","text":"[androidJvm]\\ open override val message : String","title":"message"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-unknown/","text":"// lcp / org.readium.r2.lcp / LcpException / Unknown Unknown \u00b6 [androidJvm]\\ class Unknown (cause: Throwable ?) : LcpException An unknown low-level exception was reported. Constructors \u00b6 Unknown [androidJvm] fun Unknown (cause: Throwable ?) Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open override val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-unknown/#unknown","text":"[androidJvm]\\ class Unknown (cause: Throwable ?) : LcpException An unknown low-level exception was reported.","title":"Unknown"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-unknown/#constructors","text":"Unknown [androidJvm] fun Unknown (cause: Throwable ?)","title":"Constructors"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-unknown/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean ): String initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-unknown/#properties","text":"Name Summary cause [androidJvm] open override val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-unknown/-unknown/","text":"// lcp / org.readium.r2.lcp / LcpException / Unknown / Unknown Unknown \u00b6 [androidJvm]\\ fun Unknown (cause: Throwable ?)","title":" unknown"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-unknown/-unknown/#unknown","text":"[androidJvm]\\ fun Unknown (cause: Throwable ?)","title":"Unknown"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-unknown/cause/","text":"// lcp / org.readium.r2.lcp / LcpException / Unknown / cause cause \u00b6 [androidJvm]\\ open override val cause : Throwable ?","title":"Cause"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-exception/-unknown/cause/#cause","text":"[androidJvm]\\ open override val cause : Throwable ?","title":"cause"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/","text":"// lcp / org.readium.r2.lcp / LcpLicense LcpLicense \u00b6 [androidJvm]\\ interface LcpLicense : ContentProtectionService.UserRights Opened license, used to decipher a protected publication and manage its license. Types \u00b6 Name Summary RenewListener [androidJvm] interface RenewListener UX delegate for the loan renew LSD interaction. Functions \u00b6 Name Summary canCopy [androidJvm] abstract fun canCopy (text: String ): Boolean canPrint [androidJvm] abstract fun canPrint (pageCount: Int ): Boolean copy [androidJvm] abstract fun copy (text: String ): Boolean decrypt [androidJvm] abstract suspend fun decrypt (data: ByteArray ): Try < ByteArray , LcpException > Decrypts the given data encrypted with the license's content key. print [androidJvm] abstract fun print (pageCount: Int ): Boolean renewLoan [androidJvm] abstract suspend fun renewLoan (listener: LcpLicense.RenewListener , prefersWebPage: Boolean = false): Try < Date ?, LcpException > Renews the loan by starting a renew LSD interaction. returnPublication [androidJvm] abstract suspend fun returnPublication (): Try < Unit , LcpException > Returns the publication to its provider. Properties \u00b6 Name Summary canCopy [androidJvm] abstract val canCopy : Boolean canPrint [androidJvm] abstract val canPrint : Boolean canRenewLoan [androidJvm] abstract val canRenewLoan : Boolean Can the user renew the loaned publication? canReturnPublication [androidJvm] abstract val canReturnPublication : Boolean Can the user return the loaned publication? charactersToCopyLeft [androidJvm] abstract val charactersToCopyLeft : Int ? Number of remaining characters allowed to be copied by the user. If null, there's no limit. license [androidJvm] abstract val license : LicenseDocument License Document information. https://readium.org/lcp-specs/releases/lcp/latest.html maxRenewDate [androidJvm] abstract val maxRenewDate : Date ? The maximum potential date to renew to. If null, then the renew date might not be customizable. pagesToPrintLeft [androidJvm] abstract val pagesToPrintLeft : Int ? Number of pages allowed to be printed by the user. If null, there's no limit. status [androidJvm] abstract val status : StatusDocument ? License Status Document information. https://readium.org/lcp-specs/releases/lsd/latest.html","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/#lcplicense","text":"[androidJvm]\\ interface LcpLicense : ContentProtectionService.UserRights Opened license, used to decipher a protected publication and manage its license.","title":"LcpLicense"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/#types","text":"Name Summary RenewListener [androidJvm] interface RenewListener UX delegate for the loan renew LSD interaction.","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/#functions","text":"Name Summary canCopy [androidJvm] abstract fun canCopy (text: String ): Boolean canPrint [androidJvm] abstract fun canPrint (pageCount: Int ): Boolean copy [androidJvm] abstract fun copy (text: String ): Boolean decrypt [androidJvm] abstract suspend fun decrypt (data: ByteArray ): Try < ByteArray , LcpException > Decrypts the given data encrypted with the license's content key. print [androidJvm] abstract fun print (pageCount: Int ): Boolean renewLoan [androidJvm] abstract suspend fun renewLoan (listener: LcpLicense.RenewListener , prefersWebPage: Boolean = false): Try < Date ?, LcpException > Renews the loan by starting a renew LSD interaction. returnPublication [androidJvm] abstract suspend fun returnPublication (): Try < Unit , LcpException > Returns the publication to its provider.","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/#properties","text":"Name Summary canCopy [androidJvm] abstract val canCopy : Boolean canPrint [androidJvm] abstract val canPrint : Boolean canRenewLoan [androidJvm] abstract val canRenewLoan : Boolean Can the user renew the loaned publication? canReturnPublication [androidJvm] abstract val canReturnPublication : Boolean Can the user return the loaned publication? charactersToCopyLeft [androidJvm] abstract val charactersToCopyLeft : Int ? Number of remaining characters allowed to be copied by the user. If null, there's no limit. license [androidJvm] abstract val license : LicenseDocument License Document information. https://readium.org/lcp-specs/releases/lcp/latest.html maxRenewDate [androidJvm] abstract val maxRenewDate : Date ? The maximum potential date to renew to. If null, then the renew date might not be customizable. pagesToPrintLeft [androidJvm] abstract val pagesToPrintLeft : Int ? Number of pages allowed to be printed by the user. If null, there's no limit. status [androidJvm] abstract val status : StatusDocument ? License Status Document information. https://readium.org/lcp-specs/releases/lsd/latest.html","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/can-renew-loan/","text":"// lcp / org.readium.r2.lcp / LcpLicense / canRenewLoan canRenewLoan \u00b6 [androidJvm]\\ abstract val canRenewLoan : Boolean Can the user renew the loaned publication?","title":"Can renew loan"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/can-renew-loan/#canrenewloan","text":"[androidJvm]\\ abstract val canRenewLoan : Boolean Can the user renew the loaned publication?","title":"canRenewLoan"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/can-return-publication/","text":"// lcp / org.readium.r2.lcp / LcpLicense / canReturnPublication canReturnPublication \u00b6 [androidJvm]\\ abstract val canReturnPublication : Boolean Can the user return the loaned publication?","title":"Can return publication"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/can-return-publication/#canreturnpublication","text":"[androidJvm]\\ abstract val canReturnPublication : Boolean Can the user return the loaned publication?","title":"canReturnPublication"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/characters-to-copy-left/","text":"// lcp / org.readium.r2.lcp / LcpLicense / charactersToCopyLeft charactersToCopyLeft \u00b6 [androidJvm]\\ abstract val charactersToCopyLeft : Int ? Number of remaining characters allowed to be copied by the user. If null, there's no limit.","title":"Characters to copy left"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/characters-to-copy-left/#characterstocopyleft","text":"[androidJvm]\\ abstract val charactersToCopyLeft : Int ? Number of remaining characters allowed to be copied by the user. If null, there's no limit.","title":"charactersToCopyLeft"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/decrypt/","text":"// lcp / org.readium.r2.lcp / LcpLicense / decrypt decrypt \u00b6 [androidJvm]\\ abstract suspend fun decrypt (data: ByteArray ): Try < ByteArray , LcpException > Decrypts the given data encrypted with the license's content key.","title":"Decrypt"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/decrypt/#decrypt","text":"[androidJvm]\\ abstract suspend fun decrypt (data: ByteArray ): Try < ByteArray , LcpException > Decrypts the given data encrypted with the license's content key.","title":"decrypt"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/license/","text":"// lcp / org.readium.r2.lcp / LcpLicense / license license \u00b6 [androidJvm]\\ abstract val license : LicenseDocument License Document information. https://readium.org/lcp-specs/releases/lcp/latest.html","title":"License"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/license/#license","text":"[androidJvm]\\ abstract val license : LicenseDocument License Document information. https://readium.org/lcp-specs/releases/lcp/latest.html","title":"license"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/max-renew-date/","text":"// lcp / org.readium.r2.lcp / LcpLicense / maxRenewDate maxRenewDate \u00b6 [androidJvm]\\ abstract val maxRenewDate : Date ? The maximum potential date to renew to. If null, then the renew date might not be customizable.","title":"Max renew date"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/max-renew-date/#maxrenewdate","text":"[androidJvm]\\ abstract val maxRenewDate : Date ? The maximum potential date to renew to. If null, then the renew date might not be customizable.","title":"maxRenewDate"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/pages-to-print-left/","text":"// lcp / org.readium.r2.lcp / LcpLicense / pagesToPrintLeft pagesToPrintLeft \u00b6 [androidJvm]\\ abstract val pagesToPrintLeft : Int ? Number of pages allowed to be printed by the user. If null, there's no limit.","title":"Pages to print left"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/pages-to-print-left/#pagestoprintleft","text":"[androidJvm]\\ abstract val pagesToPrintLeft : Int ? Number of pages allowed to be printed by the user. If null, there's no limit.","title":"pagesToPrintLeft"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/renew-loan/","text":"// lcp / org.readium.r2.lcp / LcpLicense / renewLoan renewLoan \u00b6 [androidJvm]\\ abstract suspend fun renewLoan (listener: LcpLicense.RenewListener , prefersWebPage: Boolean = false): Try < Date ?, LcpException > Renews the loan by starting a renew LSD interaction. Parameters \u00b6 androidJvm prefersWebPage Indicates whether the loan should be renewed through a web page if available, instead of programmatically.","title":"Renew loan"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/renew-loan/#renewloan","text":"[androidJvm]\\ abstract suspend fun renewLoan (listener: LcpLicense.RenewListener , prefersWebPage: Boolean = false): Try < Date ?, LcpException > Renews the loan by starting a renew LSD interaction.","title":"renewLoan"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/renew-loan/#parameters","text":"androidJvm prefersWebPage Indicates whether the loan should be renewed through a web page if available, instead of programmatically.","title":"Parameters"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/return-publication/","text":"// lcp / org.readium.r2.lcp / LcpLicense / returnPublication returnPublication \u00b6 [androidJvm]\\ abstract suspend fun returnPublication (): Try < Unit , LcpException > Returns the publication to its provider.","title":"Return publication"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/return-publication/#returnpublication","text":"[androidJvm]\\ abstract suspend fun returnPublication (): Try < Unit , LcpException > Returns the publication to its provider.","title":"returnPublication"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/status/","text":"// lcp / org.readium.r2.lcp / LcpLicense / status status \u00b6 [androidJvm]\\ abstract val status : StatusDocument ? License Status Document information. https://readium.org/lcp-specs/releases/lsd/latest.html","title":"Status"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/status/#status","text":"[androidJvm]\\ abstract val status : StatusDocument ? License Status Document information. https://readium.org/lcp-specs/releases/lsd/latest.html","title":"status"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/-renew-listener/","text":"// lcp / org.readium.r2.lcp / LcpLicense / RenewListener RenewListener \u00b6 [androidJvm]\\ interface RenewListener UX delegate for the loan renew LSD interaction. If your application fits Material Design guidelines, take a look at MaterialRenewListener for a default implementation. Functions \u00b6 Name Summary openWebPage [androidJvm] abstract suspend fun openWebPage (url: URL ) Called when the renew interaction uses an HTML web page. preferredEndDate [androidJvm] abstract suspend fun preferredEndDate (maximumDate: Date ?): Date ? Called when the renew interaction allows to customize the end date programmatically. You can prompt the user for the number of days to renew, for example. Inheritors \u00b6 Name MaterialRenewListener","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/-renew-listener/#renewlistener","text":"[androidJvm]\\ interface RenewListener UX delegate for the loan renew LSD interaction. If your application fits Material Design guidelines, take a look at MaterialRenewListener for a default implementation.","title":"RenewListener"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/-renew-listener/#functions","text":"Name Summary openWebPage [androidJvm] abstract suspend fun openWebPage (url: URL ) Called when the renew interaction uses an HTML web page. preferredEndDate [androidJvm] abstract suspend fun preferredEndDate (maximumDate: Date ?): Date ? Called when the renew interaction allows to customize the end date programmatically. You can prompt the user for the number of days to renew, for example.","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/-renew-listener/#inheritors","text":"Name MaterialRenewListener","title":"Inheritors"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/-renew-listener/open-web-page/","text":"// lcp / org.readium.r2.lcp / LcpLicense / RenewListener / openWebPage openWebPage \u00b6 [androidJvm]\\ abstract suspend fun openWebPage (url: URL ) Called when the renew interaction uses an HTML web page. You should present the URL in a Chrome Custom Tab and terminate the function when the web page is dismissed by the user.","title":"Open web page"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/-renew-listener/open-web-page/#openwebpage","text":"[androidJvm]\\ abstract suspend fun openWebPage (url: URL ) Called when the renew interaction uses an HTML web page. You should present the URL in a Chrome Custom Tab and terminate the function when the web page is dismissed by the user.","title":"openWebPage"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/-renew-listener/preferred-end-date/","text":"// lcp / org.readium.r2.lcp / LcpLicense / RenewListener / preferredEndDate preferredEndDate \u00b6 [androidJvm]\\ abstract suspend fun preferredEndDate (maximumDate: Date ?): Date ? Called when the renew interaction allows to customize the end date programmatically. You can prompt the user for the number of days to renew, for example. The returned date can't exceed maximumDate .","title":"Preferred end date"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-license/-renew-listener/preferred-end-date/#preferredenddate","text":"[androidJvm]\\ abstract suspend fun preferredEndDate (maximumDate: Date ?): Date ? Called when the renew interaction allows to customize the end date programmatically. You can prompt the user for the number of days to renew, for example. The returned date can't exceed maximumDate .","title":"preferredEndDate"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/","text":"// lcp / org.readium.r2.lcp / LcpService LcpService \u00b6 [androidJvm]\\ interface LcpService Service used to acquire and open publications protected with LCP. Types \u00b6 Name Summary AcquiredPublication [androidJvm] data class AcquiredPublication (localFile: File , suggestedFilename: String ) Information about an acquired publication protected with LCP. Companion [androidJvm] object Companion Functions \u00b6 Name Summary acquirePublication [androidJvm] open suspend fun acquirePublication (lcpl: File , onProgress: ( Double ) -> Unit = {}): Try < LcpService.AcquiredPublication , LcpException > Acquires a protected publication from a standalone LCPL file. [androidJvm] abstract suspend fun acquirePublication (lcpl: ByteArray , onProgress: ( Double ) -> Unit = {}): Try < LcpService.AcquiredPublication , LcpException > Acquires a protected publication from a standalone LCPL's bytes. contentProtection [androidJvm] open fun contentProtection (authentication: LcpAuthenticating = LcpDialogAuthentication()): ContentProtection Creates a ContentProtection instance which can be used with a Streamer to unlock LCP protected publications. isLcpProtected [androidJvm] abstract suspend fun isLcpProtected (file: File ): Boolean Returns if the publication is protected by LCP. retrieveLicense [androidJvm] abstract suspend fun retrieveLicense (file: File , authentication: LcpAuthenticating = LcpDialogAuthentication(), allowUserInteraction: Boolean , sender: Any ? = null): Try < LcpLicense , LcpException >? Opens the LCP license of a protected publication, to access its DRM metadata and decipher its content.","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/#lcpservice","text":"[androidJvm]\\ interface LcpService Service used to acquire and open publications protected with LCP.","title":"LcpService"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/#types","text":"Name Summary AcquiredPublication [androidJvm] data class AcquiredPublication (localFile: File , suggestedFilename: String ) Information about an acquired publication protected with LCP. Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/#functions","text":"Name Summary acquirePublication [androidJvm] open suspend fun acquirePublication (lcpl: File , onProgress: ( Double ) -> Unit = {}): Try < LcpService.AcquiredPublication , LcpException > Acquires a protected publication from a standalone LCPL file. [androidJvm] abstract suspend fun acquirePublication (lcpl: ByteArray , onProgress: ( Double ) -> Unit = {}): Try < LcpService.AcquiredPublication , LcpException > Acquires a protected publication from a standalone LCPL's bytes. contentProtection [androidJvm] open fun contentProtection (authentication: LcpAuthenticating = LcpDialogAuthentication()): ContentProtection Creates a ContentProtection instance which can be used with a Streamer to unlock LCP protected publications. isLcpProtected [androidJvm] abstract suspend fun isLcpProtected (file: File ): Boolean Returns if the publication is protected by LCP. retrieveLicense [androidJvm] abstract suspend fun retrieveLicense (file: File , authentication: LcpAuthenticating = LcpDialogAuthentication(), allowUserInteraction: Boolean , sender: Any ? = null): Try < LcpLicense , LcpException >? Opens the LCP license of a protected publication, to access its DRM metadata and decipher its content.","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/acquire-publication/","text":"// lcp / org.readium.r2.lcp / LcpService / acquirePublication acquirePublication \u00b6 [androidJvm]\\ abstract suspend fun acquirePublication (lcpl: ByteArray , onProgress: ( Double ) -> Unit = {}): Try < LcpService.AcquiredPublication , LcpException > Acquires a protected publication from a standalone LCPL's bytes. You can cancel the on-going acquisition by cancelling its parent coroutine context. Parameters \u00b6 androidJvm onProgress Callback to follow the acquisition progress from 0.0 to 1.0. [androidJvm]\\ open suspend fun acquirePublication (lcpl: File , onProgress: ( Double ) -> Unit = {}): Try < LcpService.AcquiredPublication , LcpException > Acquires a protected publication from a standalone LCPL file. You can cancel the on-going acquisition by cancelling its parent coroutine context. Parameters \u00b6 androidJvm onProgress Callback to follow the acquisition progress from 0.0 to 1.0.","title":"Acquire publication"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/acquire-publication/#acquirepublication","text":"[androidJvm]\\ abstract suspend fun acquirePublication (lcpl: ByteArray , onProgress: ( Double ) -> Unit = {}): Try < LcpService.AcquiredPublication , LcpException > Acquires a protected publication from a standalone LCPL's bytes. You can cancel the on-going acquisition by cancelling its parent coroutine context.","title":"acquirePublication"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/acquire-publication/#parameters","text":"androidJvm onProgress Callback to follow the acquisition progress from 0.0 to 1.0. [androidJvm]\\ open suspend fun acquirePublication (lcpl: File , onProgress: ( Double ) -> Unit = {}): Try < LcpService.AcquiredPublication , LcpException > Acquires a protected publication from a standalone LCPL file. You can cancel the on-going acquisition by cancelling its parent coroutine context.","title":"Parameters"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/acquire-publication/#parameters_1","text":"androidJvm onProgress Callback to follow the acquisition progress from 0.0 to 1.0.","title":"Parameters"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/content-protection/","text":"// lcp / org.readium.r2.lcp / LcpService / contentProtection contentProtection \u00b6 [androidJvm]\\ open fun contentProtection (authentication: LcpAuthenticating = LcpDialogAuthentication()): ContentProtection Creates a ContentProtection instance which can be used with a Streamer to unlock LCP protected publications. The provided authentication will be used to retrieve the user passphrase when opening an LCP license. The default implementation LcpDialogAuthentication presents a dialog to the user to enter their passphrase.","title":"Content protection"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/content-protection/#contentprotection","text":"[androidJvm]\\ open fun contentProtection (authentication: LcpAuthenticating = LcpDialogAuthentication()): ContentProtection Creates a ContentProtection instance which can be used with a Streamer to unlock LCP protected publications. The provided authentication will be used to retrieve the user passphrase when opening an LCP license. The default implementation LcpDialogAuthentication presents a dialog to the user to enter their passphrase.","title":"contentProtection"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/is-lcp-protected/","text":"// lcp / org.readium.r2.lcp / LcpService / isLcpProtected isLcpProtected \u00b6 [androidJvm]\\ abstract suspend fun isLcpProtected (file: File ): Boolean Returns if the publication is protected by LCP.","title":"Is lcp protected"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/is-lcp-protected/#islcpprotected","text":"[androidJvm]\\ abstract suspend fun isLcpProtected (file: File ): Boolean Returns if the publication is protected by LCP.","title":"isLcpProtected"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/retrieve-license/","text":"// lcp / org.readium.r2.lcp / LcpService / retrieveLicense retrieveLicense \u00b6 [androidJvm]\\ abstract suspend fun retrieveLicense (file: File , authentication: LcpAuthenticating = LcpDialogAuthentication(), allowUserInteraction: Boolean , sender: Any ? = null): Try < LcpLicense , LcpException >? Opens the LCP license of a protected publication, to access its DRM metadata and decipher its content. Parameters \u00b6 androidJvm authentication Used to retrieve the user passphrase if it is not already known. The request will be cancelled if no passphrase is found in the LCP passphrase storage and the provided authentication . allowUserInteraction Indicates whether the user can be prompted for their passphrase. sender Free object that can be used by reading apps to give some UX context when presenting dialogs with LcpAuthenticating .","title":"Retrieve license"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/retrieve-license/#retrievelicense","text":"[androidJvm]\\ abstract suspend fun retrieveLicense (file: File , authentication: LcpAuthenticating = LcpDialogAuthentication(), allowUserInteraction: Boolean , sender: Any ? = null): Try < LcpLicense , LcpException >? Opens the LCP license of a protected publication, to access its DRM metadata and decipher its content.","title":"retrieveLicense"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/retrieve-license/#parameters","text":"androidJvm authentication Used to retrieve the user passphrase if it is not already known. The request will be cancelled if no passphrase is found in the LCP passphrase storage and the provided authentication . allowUserInteraction Indicates whether the user can be prompted for their passphrase. sender Free object that can be used by reading apps to give some UX context when presenting dialogs with LcpAuthenticating .","title":"Parameters"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/-acquired-publication/","text":"// lcp / org.readium.r2.lcp / LcpService / AcquiredPublication AcquiredPublication \u00b6 [androidJvm]\\ data class AcquiredPublication (localFile: File , suggestedFilename: String ) Information about an acquired publication protected with LCP. Parameters \u00b6 androidJvm localFile Path to the downloaded publication. You must move this file to the user library's folder. suggestedFilename Filename that should be used for the publication when importing it in the user library. Constructors \u00b6 AcquiredPublication [androidJvm] fun AcquiredPublication (localFile: File , suggestedFilename: String ) Properties \u00b6 Name Summary localFile [androidJvm] val localFile : File suggestedFilename [androidJvm] val suggestedFilename : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/-acquired-publication/#acquiredpublication","text":"[androidJvm]\\ data class AcquiredPublication (localFile: File , suggestedFilename: String ) Information about an acquired publication protected with LCP.","title":"AcquiredPublication"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/-acquired-publication/#parameters","text":"androidJvm localFile Path to the downloaded publication. You must move this file to the user library's folder. suggestedFilename Filename that should be used for the publication when importing it in the user library.","title":"Parameters"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/-acquired-publication/#constructors","text":"AcquiredPublication [androidJvm] fun AcquiredPublication (localFile: File , suggestedFilename: String )","title":"Constructors"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/-acquired-publication/#properties","text":"Name Summary localFile [androidJvm] val localFile : File suggestedFilename [androidJvm] val suggestedFilename : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/-acquired-publication/-acquired-publication/","text":"// lcp / org.readium.r2.lcp / LcpService / AcquiredPublication / AcquiredPublication AcquiredPublication \u00b6 [androidJvm]\\ fun AcquiredPublication (localFile: File , suggestedFilename: String ) Parameters \u00b6 androidJvm localFile Path to the downloaded publication. You must move this file to the user library's folder. suggestedFilename Filename that should be used for the publication when importing it in the user library.","title":" acquired publication"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/-acquired-publication/-acquired-publication/#acquiredpublication","text":"[androidJvm]\\ fun AcquiredPublication (localFile: File , suggestedFilename: String )","title":"AcquiredPublication"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/-acquired-publication/-acquired-publication/#parameters","text":"androidJvm localFile Path to the downloaded publication. You must move this file to the user library's folder. suggestedFilename Filename that should be used for the publication when importing it in the user library.","title":"Parameters"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/-acquired-publication/local-file/","text":"// lcp / org.readium.r2.lcp / LcpService / AcquiredPublication / localFile localFile \u00b6 [androidJvm]\\ val localFile : File","title":"Local file"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/-acquired-publication/local-file/#localfile","text":"[androidJvm]\\ val localFile : File","title":"localFile"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/-acquired-publication/suggested-filename/","text":"// lcp / org.readium.r2.lcp / LcpService / AcquiredPublication / suggestedFilename suggestedFilename \u00b6 [androidJvm]\\ val suggestedFilename : String","title":"Suggested filename"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/-acquired-publication/suggested-filename/#suggestedfilename","text":"[androidJvm]\\ val suggestedFilename : String","title":"suggestedFilename"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/-companion/","text":"// lcp / org.readium.r2.lcp / LcpService / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary invoke [androidJvm] operator fun invoke (context: Context ): LcpService ? LCP service factory.","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/-companion/#functions","text":"Name Summary invoke [androidJvm] operator fun invoke (context: Context ): LcpService ? LCP service factory.","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/-companion/invoke/","text":"// lcp / org.readium.r2.lcp / LcpService / Companion / invoke invoke \u00b6 [androidJvm]\\ operator fun invoke (context: Context ): LcpService ? LCP service factory.","title":"Invoke"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-lcp-service/-companion/invoke/#invoke","text":"[androidJvm]\\ operator fun invoke (context: Context ): LcpService ? LCP service factory.","title":"invoke"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-material-renew-listener/","text":"// lcp / org.readium.r2.lcp / MaterialRenewListener MaterialRenewListener \u00b6 [androidJvm]\\ class MaterialRenewListener (license: LcpLicense , caller: ActivityResultCaller , fragmentManager: FragmentManager ) : LcpLicense.RenewListener A default implementation of the LcpLicense.RenewListener using Chrome Custom Tabs for presenting web pages and a Material Date Picker for choosing the renew date. MaterialRenewListener must be initialized before its parent component is in a RESUMED state, because it needs to register an ActivityResultLauncher. Basically, create it in your Activity/Fragment's onCreate. Parameters \u00b6 androidJvm license LCP license which will be renewed. caller Activity or Fragment used to register the ActivityResultLauncher. fragmentManager FragmentManager used to present the date picker. Constructors \u00b6 MaterialRenewListener [androidJvm] fun MaterialRenewListener (license: LcpLicense , caller: ActivityResultCaller , fragmentManager: FragmentManager ) Functions \u00b6 Name Summary openWebPage [androidJvm] open suspend override fun openWebPage (url: URL ) Called when the renew interaction uses an HTML web page. preferredEndDate [androidJvm] open suspend override fun preferredEndDate (maximumDate: Date ?): Date ? Called when the renew interaction allows to customize the end date programmatically. You can prompt the user for the number of days to renew, for example.","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-material-renew-listener/#materialrenewlistener","text":"[androidJvm]\\ class MaterialRenewListener (license: LcpLicense , caller: ActivityResultCaller , fragmentManager: FragmentManager ) : LcpLicense.RenewListener A default implementation of the LcpLicense.RenewListener using Chrome Custom Tabs for presenting web pages and a Material Date Picker for choosing the renew date. MaterialRenewListener must be initialized before its parent component is in a RESUMED state, because it needs to register an ActivityResultLauncher. Basically, create it in your Activity/Fragment's onCreate.","title":"MaterialRenewListener"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-material-renew-listener/#parameters","text":"androidJvm license LCP license which will be renewed. caller Activity or Fragment used to register the ActivityResultLauncher. fragmentManager FragmentManager used to present the date picker.","title":"Parameters"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-material-renew-listener/#constructors","text":"MaterialRenewListener [androidJvm] fun MaterialRenewListener (license: LcpLicense , caller: ActivityResultCaller , fragmentManager: FragmentManager )","title":"Constructors"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-material-renew-listener/#functions","text":"Name Summary openWebPage [androidJvm] open suspend override fun openWebPage (url: URL ) Called when the renew interaction uses an HTML web page. preferredEndDate [androidJvm] open suspend override fun preferredEndDate (maximumDate: Date ?): Date ? Called when the renew interaction allows to customize the end date programmatically. You can prompt the user for the number of days to renew, for example.","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-material-renew-listener/-material-renew-listener/","text":"// lcp / org.readium.r2.lcp / MaterialRenewListener / MaterialRenewListener MaterialRenewListener \u00b6 [androidJvm]\\ fun MaterialRenewListener (license: LcpLicense , caller: ActivityResultCaller , fragmentManager: FragmentManager ) Parameters \u00b6 androidJvm license LCP license which will be renewed. caller Activity or Fragment used to register the ActivityResultLauncher. fragmentManager FragmentManager used to present the date picker.","title":" material renew listener"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-material-renew-listener/-material-renew-listener/#materialrenewlistener","text":"[androidJvm]\\ fun MaterialRenewListener (license: LcpLicense , caller: ActivityResultCaller , fragmentManager: FragmentManager )","title":"MaterialRenewListener"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-material-renew-listener/-material-renew-listener/#parameters","text":"androidJvm license LCP license which will be renewed. caller Activity or Fragment used to register the ActivityResultLauncher. fragmentManager FragmentManager used to present the date picker.","title":"Parameters"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-material-renew-listener/open-web-page/","text":"// lcp / org.readium.r2.lcp / MaterialRenewListener / openWebPage openWebPage \u00b6 [androidJvm]\\ open suspend override fun openWebPage (url: URL ) Called when the renew interaction uses an HTML web page. You should present the URL in a Chrome Custom Tab and terminate the function when the web page is dismissed by the user.","title":"Open web page"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-material-renew-listener/open-web-page/#openwebpage","text":"[androidJvm]\\ open suspend override fun openWebPage (url: URL ) Called when the renew interaction uses an HTML web page. You should present the URL in a Chrome Custom Tab and terminate the function when the web page is dismissed by the user.","title":"openWebPage"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-material-renew-listener/preferred-end-date/","text":"// lcp / org.readium.r2.lcp / MaterialRenewListener / preferredEndDate preferredEndDate \u00b6 [androidJvm]\\ open suspend override fun preferredEndDate (maximumDate: Date ?): Date ? Called when the renew interaction allows to customize the end date programmatically. You can prompt the user for the number of days to renew, for example. The returned date can't exceed maximumDate .","title":"Preferred end date"},{"location":"readium/lcp/lcp/org.readium.r2.lcp/-material-renew-listener/preferred-end-date/#preferredenddate","text":"[androidJvm]\\ open suspend override fun preferredEndDate (maximumDate: Date ?): Date ? Called when the renew interaction allows to customize the end date programmatically. You can prompt the user for the number of days to renew, for example. The returned date can't exceed maximumDate .","title":"preferredEndDate"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.auth/","text":"// lcp / org.readium.r2.lcp.auth Package org.readium.r2.lcp.auth \u00b6 Types \u00b6 Name Summary LcpDialogAuthentication [androidJvm] class LcpDialogAuthentication : LcpAuthenticating An LcpAuthenticating implementation presenting a dialog to the user. LcpPassphraseAuthentication [androidJvm] class LcpPassphraseAuthentication (passphrase: String , fallback: LcpAuthenticating ?) : LcpAuthenticating An LcpAuthenticating implementation which can directly use a provided clear or hashed passphrase.","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.auth/#package-orgreadiumr2lcpauth","text":"","title":"Package org.readium.r2.lcp.auth"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.auth/#types","text":"Name Summary LcpDialogAuthentication [androidJvm] class LcpDialogAuthentication : LcpAuthenticating An LcpAuthenticating implementation presenting a dialog to the user. LcpPassphraseAuthentication [androidJvm] class LcpPassphraseAuthentication (passphrase: String , fallback: LcpAuthenticating ?) : LcpAuthenticating An LcpAuthenticating implementation which can directly use a provided clear or hashed passphrase.","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.auth/-lcp-dialog-authentication/","text":"// lcp / org.readium.r2.lcp.auth / LcpDialogAuthentication LcpDialogAuthentication \u00b6 [androidJvm]\\ class LcpDialogAuthentication : LcpAuthenticating An LcpAuthenticating implementation presenting a dialog to the user. For this authentication to trigger, you must provide a sender parameter of type Activity , Fragment or View to Streamer::open() or LcpService::retrieveLicense(). It will be used as the host view for the dialog. Constructors \u00b6 LcpDialogAuthentication [androidJvm] fun LcpDialogAuthentication () Functions \u00b6 Name Summary retrievePassphrase [androidJvm] open suspend override fun retrievePassphrase (license: LcpAuthenticating.AuthenticatedLicense , reason: LcpAuthenticating.AuthenticationReason , allowUserInteraction: Boolean , sender: Any ?): String ? Retrieves the passphrase used to decrypt the given license.","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.auth/-lcp-dialog-authentication/#lcpdialogauthentication","text":"[androidJvm]\\ class LcpDialogAuthentication : LcpAuthenticating An LcpAuthenticating implementation presenting a dialog to the user. For this authentication to trigger, you must provide a sender parameter of type Activity , Fragment or View to Streamer::open() or LcpService::retrieveLicense(). It will be used as the host view for the dialog.","title":"LcpDialogAuthentication"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.auth/-lcp-dialog-authentication/#constructors","text":"LcpDialogAuthentication [androidJvm] fun LcpDialogAuthentication ()","title":"Constructors"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.auth/-lcp-dialog-authentication/#functions","text":"Name Summary retrievePassphrase [androidJvm] open suspend override fun retrievePassphrase (license: LcpAuthenticating.AuthenticatedLicense , reason: LcpAuthenticating.AuthenticationReason , allowUserInteraction: Boolean , sender: Any ?): String ? Retrieves the passphrase used to decrypt the given license.","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.auth/-lcp-dialog-authentication/-lcp-dialog-authentication/","text":"// lcp / org.readium.r2.lcp.auth / LcpDialogAuthentication / LcpDialogAuthentication LcpDialogAuthentication \u00b6 [androidJvm]\\ fun LcpDialogAuthentication ()","title":" lcp dialog authentication"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.auth/-lcp-dialog-authentication/-lcp-dialog-authentication/#lcpdialogauthentication","text":"[androidJvm]\\ fun LcpDialogAuthentication ()","title":"LcpDialogAuthentication"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.auth/-lcp-dialog-authentication/retrieve-passphrase/","text":"// lcp / org.readium.r2.lcp.auth / LcpDialogAuthentication / retrievePassphrase retrievePassphrase \u00b6 [androidJvm]\\ open suspend override fun retrievePassphrase (license: LcpAuthenticating.AuthenticatedLicense , reason: LcpAuthenticating.AuthenticationReason , allowUserInteraction: Boolean , sender: Any ?): String ? Retrieves the passphrase used to decrypt the given license. If allowUserInteraction is true, the reading app can prompt the user to enter the passphrase. Otherwise, use a background retrieval method (e.g. web service) or return null. The returned passphrase can be clear or already hashed. You can implement an asynchronous pop-up with callbacks using suspendCoroutine: suspendCoroutine<String?> { cont ->\\ cancelButton.setOnClickListener {\\ cont.resume(null)\\ }\\ \\ okButton.setOnClickListener {\\ cont.resume(passwordEditText.text.toString())\\ }\\ \\ // show pop-up...\\ } Parameters \u00b6 androidJvm license Information to show to the user about the license being opened. reason Reason why the passphrase is requested. It should be used to prompt the user. allowUserInteraction Indicates whether the user can be prompted for their passphrase. sender Free object that can be used by reading apps to give some UX context when presenting dialogs.","title":"Retrieve passphrase"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.auth/-lcp-dialog-authentication/retrieve-passphrase/#retrievepassphrase","text":"[androidJvm]\\ open suspend override fun retrievePassphrase (license: LcpAuthenticating.AuthenticatedLicense , reason: LcpAuthenticating.AuthenticationReason , allowUserInteraction: Boolean , sender: Any ?): String ? Retrieves the passphrase used to decrypt the given license. If allowUserInteraction is true, the reading app can prompt the user to enter the passphrase. Otherwise, use a background retrieval method (e.g. web service) or return null. The returned passphrase can be clear or already hashed. You can implement an asynchronous pop-up with callbacks using suspendCoroutine: suspendCoroutine<String?> { cont ->\\ cancelButton.setOnClickListener {\\ cont.resume(null)\\ }\\ \\ okButton.setOnClickListener {\\ cont.resume(passwordEditText.text.toString())\\ }\\ \\ // show pop-up...\\ }","title":"retrievePassphrase"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.auth/-lcp-dialog-authentication/retrieve-passphrase/#parameters","text":"androidJvm license Information to show to the user about the license being opened. reason Reason why the passphrase is requested. It should be used to prompt the user. allowUserInteraction Indicates whether the user can be prompted for their passphrase. sender Free object that can be used by reading apps to give some UX context when presenting dialogs.","title":"Parameters"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.auth/-lcp-passphrase-authentication/","text":"// lcp / org.readium.r2.lcp.auth / LcpPassphraseAuthentication LcpPassphraseAuthentication \u00b6 [androidJvm]\\ class LcpPassphraseAuthentication (passphrase: String , fallback: LcpAuthenticating ?) : LcpAuthenticating An LcpAuthenticating implementation which can directly use a provided clear or hashed passphrase. If the provided passphrase is incorrect, the given fallback authentication is used. Constructors \u00b6 LcpPassphraseAuthentication [androidJvm] fun LcpPassphraseAuthentication (passphrase: String , fallback: LcpAuthenticating ? = null) Functions \u00b6 Name Summary retrievePassphrase [androidJvm] open suspend override fun retrievePassphrase (license: LcpAuthenticating.AuthenticatedLicense , reason: LcpAuthenticating.AuthenticationReason , allowUserInteraction: Boolean , sender: Any ?): String ? Retrieves the passphrase used to decrypt the given license.","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.auth/-lcp-passphrase-authentication/#lcppassphraseauthentication","text":"[androidJvm]\\ class LcpPassphraseAuthentication (passphrase: String , fallback: LcpAuthenticating ?) : LcpAuthenticating An LcpAuthenticating implementation which can directly use a provided clear or hashed passphrase. If the provided passphrase is incorrect, the given fallback authentication is used.","title":"LcpPassphraseAuthentication"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.auth/-lcp-passphrase-authentication/#constructors","text":"LcpPassphraseAuthentication [androidJvm] fun LcpPassphraseAuthentication (passphrase: String , fallback: LcpAuthenticating ? = null)","title":"Constructors"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.auth/-lcp-passphrase-authentication/#functions","text":"Name Summary retrievePassphrase [androidJvm] open suspend override fun retrievePassphrase (license: LcpAuthenticating.AuthenticatedLicense , reason: LcpAuthenticating.AuthenticationReason , allowUserInteraction: Boolean , sender: Any ?): String ? Retrieves the passphrase used to decrypt the given license.","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.auth/-lcp-passphrase-authentication/-lcp-passphrase-authentication/","text":"// lcp / org.readium.r2.lcp.auth / LcpPassphraseAuthentication / LcpPassphraseAuthentication LcpPassphraseAuthentication \u00b6 [androidJvm]\\ fun LcpPassphraseAuthentication (passphrase: String , fallback: LcpAuthenticating ? = null)","title":" lcp passphrase authentication"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.auth/-lcp-passphrase-authentication/-lcp-passphrase-authentication/#lcppassphraseauthentication","text":"[androidJvm]\\ fun LcpPassphraseAuthentication (passphrase: String , fallback: LcpAuthenticating ? = null)","title":"LcpPassphraseAuthentication"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.auth/-lcp-passphrase-authentication/retrieve-passphrase/","text":"// lcp / org.readium.r2.lcp.auth / LcpPassphraseAuthentication / retrievePassphrase retrievePassphrase \u00b6 [androidJvm]\\ open suspend override fun retrievePassphrase (license: LcpAuthenticating.AuthenticatedLicense , reason: LcpAuthenticating.AuthenticationReason , allowUserInteraction: Boolean , sender: Any ?): String ? Retrieves the passphrase used to decrypt the given license. If allowUserInteraction is true, the reading app can prompt the user to enter the passphrase. Otherwise, use a background retrieval method (e.g. web service) or return null. The returned passphrase can be clear or already hashed. You can implement an asynchronous pop-up with callbacks using suspendCoroutine: suspendCoroutine<String?> { cont ->\\ cancelButton.setOnClickListener {\\ cont.resume(null)\\ }\\ \\ okButton.setOnClickListener {\\ cont.resume(passwordEditText.text.toString())\\ }\\ \\ // show pop-up...\\ } Parameters \u00b6 androidJvm license Information to show to the user about the license being opened. reason Reason why the passphrase is requested. It should be used to prompt the user. allowUserInteraction Indicates whether the user can be prompted for their passphrase. sender Free object that can be used by reading apps to give some UX context when presenting dialogs.","title":"Retrieve passphrase"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.auth/-lcp-passphrase-authentication/retrieve-passphrase/#retrievepassphrase","text":"[androidJvm]\\ open suspend override fun retrievePassphrase (license: LcpAuthenticating.AuthenticatedLicense , reason: LcpAuthenticating.AuthenticationReason , allowUserInteraction: Boolean , sender: Any ?): String ? Retrieves the passphrase used to decrypt the given license. If allowUserInteraction is true, the reading app can prompt the user to enter the passphrase. Otherwise, use a background retrieval method (e.g. web service) or return null. The returned passphrase can be clear or already hashed. You can implement an asynchronous pop-up with callbacks using suspendCoroutine: suspendCoroutine<String?> { cont ->\\ cancelButton.setOnClickListener {\\ cont.resume(null)\\ }\\ \\ okButton.setOnClickListener {\\ cont.resume(passwordEditText.text.toString())\\ }\\ \\ // show pop-up...\\ }","title":"retrievePassphrase"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.auth/-lcp-passphrase-authentication/retrieve-passphrase/#parameters","text":"androidJvm license Information to show to the user about the license being opened. reason Reason why the passphrase is requested. It should be used to prompt the user. allowUserInteraction Indicates whether the user can be prompted for their passphrase. sender Free object that can be used by reading apps to give some UX context when presenting dialogs.","title":"Parameters"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/","text":"// lcp / org.readium.r2.lcp.license.model Package org.readium.r2.lcp.license.model \u00b6 Types \u00b6 Name Summary LicenseDocument [androidJvm] class LicenseDocument (data: ByteArray ) StatusDocument [androidJvm] class StatusDocument (data: ByteArray )","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/#package-orgreadiumr2lcplicensemodel","text":"","title":"Package org.readium.r2.lcp.license.model"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/#types","text":"Name Summary LicenseDocument [androidJvm] class LicenseDocument (data: ByteArray ) StatusDocument [androidJvm] class StatusDocument (data: ByteArray )","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/","text":"// lcp / org.readium.r2.lcp.license.model / LicenseDocument LicenseDocument \u00b6 [androidJvm]\\ class LicenseDocument (data: ByteArray ) Types \u00b6 Name Summary Rel [androidJvm] enum Rel : Enum < LicenseDocument.Rel > Functions \u00b6 Name Summary link [androidJvm] fun link (rel: LicenseDocument.Rel , type: MediaType ? = null): Link ? links [androidJvm] fun links (rel: LicenseDocument.Rel , type: MediaType ? = null): List < Link > url [androidJvm] fun url (rel: LicenseDocument.Rel , preferredType: MediaType ? = null, parameters: URLParameters = emptyMap()): URL Properties \u00b6 Name Summary data [androidJvm] val data : ByteArray description [androidJvm] val description : String encryption [androidJvm] val encryption : Encryption id [androidJvm] val id : String issued [androidJvm] val issued : Date json [androidJvm] val json : JSONObject links [androidJvm] val links : Links provider [androidJvm] val provider : String rights [androidJvm] val rights : Rights signature [androidJvm] val signature : Signature updated [androidJvm] val updated : Date user [androidJvm] val user : User","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/#licensedocument","text":"[androidJvm]\\ class LicenseDocument (data: ByteArray )","title":"LicenseDocument"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/#types","text":"Name Summary Rel [androidJvm] enum Rel : Enum < LicenseDocument.Rel >","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/#functions","text":"Name Summary link [androidJvm] fun link (rel: LicenseDocument.Rel , type: MediaType ? = null): Link ? links [androidJvm] fun links (rel: LicenseDocument.Rel , type: MediaType ? = null): List < Link > url [androidJvm] fun url (rel: LicenseDocument.Rel , preferredType: MediaType ? = null, parameters: URLParameters = emptyMap()): URL","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/#properties","text":"Name Summary data [androidJvm] val data : ByteArray description [androidJvm] val description : String encryption [androidJvm] val encryption : Encryption id [androidJvm] val id : String issued [androidJvm] val issued : Date json [androidJvm] val json : JSONObject links [androidJvm] val links : Links provider [androidJvm] val provider : String rights [androidJvm] val rights : Rights signature [androidJvm] val signature : Signature updated [androidJvm] val updated : Date user [androidJvm] val user : User","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-license-document/","text":"// lcp / org.readium.r2.lcp.license.model / LicenseDocument / LicenseDocument LicenseDocument \u00b6 [androidJvm]\\ fun LicenseDocument (data: ByteArray )","title":" license document"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-license-document/#licensedocument","text":"[androidJvm]\\ fun LicenseDocument (data: ByteArray )","title":"LicenseDocument"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/data/","text":"// lcp / org.readium.r2.lcp.license.model / LicenseDocument / data data \u00b6 [androidJvm]\\ val data : ByteArray","title":"Data"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/data/#data","text":"[androidJvm]\\ val data : ByteArray","title":"data"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/description/","text":"// lcp / org.readium.r2.lcp.license.model / LicenseDocument / description description \u00b6 [androidJvm]\\ val description : String","title":"Description"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/description/#description","text":"[androidJvm]\\ val description : String","title":"description"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/encryption/","text":"// lcp / org.readium.r2.lcp.license.model / LicenseDocument / encryption encryption \u00b6 [androidJvm]\\ val encryption : Encryption","title":"Encryption"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/encryption/#encryption","text":"[androidJvm]\\ val encryption : Encryption","title":"encryption"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/id/","text":"// lcp / org.readium.r2.lcp.license.model / LicenseDocument / id id \u00b6 [androidJvm]\\ val id : String","title":"Id"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/id/#id","text":"[androidJvm]\\ val id : String","title":"id"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/issued/","text":"// lcp / org.readium.r2.lcp.license.model / LicenseDocument / issued issued \u00b6 [androidJvm]\\ val issued : Date","title":"Issued"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/issued/#issued","text":"[androidJvm]\\ val issued : Date","title":"issued"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/json/","text":"// lcp / org.readium.r2.lcp.license.model / LicenseDocument / json json \u00b6 [androidJvm]\\ val json : JSONObject","title":"Json"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/json/#json","text":"[androidJvm]\\ val json : JSONObject","title":"json"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/link/","text":"// lcp / org.readium.r2.lcp.license.model / LicenseDocument / link link \u00b6 [androidJvm]\\ fun link (rel: LicenseDocument.Rel , type: MediaType ? = null): Link ?","title":"Link"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/link/#link","text":"[androidJvm]\\ fun link (rel: LicenseDocument.Rel , type: MediaType ? = null): Link ?","title":"link"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/links/","text":"// lcp / org.readium.r2.lcp.license.model / LicenseDocument / links links \u00b6 [androidJvm]\\ fun links (rel: LicenseDocument.Rel , type: MediaType ? = null): List < Link > val links : Links","title":"Links"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/links/#links","text":"[androidJvm]\\ fun links (rel: LicenseDocument.Rel , type: MediaType ? = null): List < Link > val links : Links","title":"links"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/provider/","text":"// lcp / org.readium.r2.lcp.license.model / LicenseDocument / provider provider \u00b6 [androidJvm]\\ val provider : String","title":"Provider"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/provider/#provider","text":"[androidJvm]\\ val provider : String","title":"provider"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/rights/","text":"// lcp / org.readium.r2.lcp.license.model / LicenseDocument / rights rights \u00b6 [androidJvm]\\ val rights : Rights","title":"Rights"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/rights/#rights","text":"[androidJvm]\\ val rights : Rights","title":"rights"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/signature/","text":"// lcp / org.readium.r2.lcp.license.model / LicenseDocument / signature signature \u00b6 [androidJvm]\\ val signature : Signature","title":"Signature"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/signature/#signature","text":"[androidJvm]\\ val signature : Signature","title":"signature"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/updated/","text":"// lcp / org.readium.r2.lcp.license.model / LicenseDocument / updated updated \u00b6 [androidJvm]\\ val updated : Date","title":"Updated"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/updated/#updated","text":"[androidJvm]\\ val updated : Date","title":"updated"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/url/","text":"// lcp / org.readium.r2.lcp.license.model / LicenseDocument / url url \u00b6 [androidJvm]\\ fun url (rel: LicenseDocument.Rel , preferredType: MediaType ? = null, parameters: URLParameters = emptyMap()): URL","title":"Url"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/url/#url","text":"[androidJvm]\\ fun url (rel: LicenseDocument.Rel , preferredType: MediaType ? = null, parameters: URLParameters = emptyMap()): URL","title":"url"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/user/","text":"// lcp / org.readium.r2.lcp.license.model / LicenseDocument / user user \u00b6 [androidJvm]\\ val user : User","title":"User"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/user/#user","text":"[androidJvm]\\ val user : User","title":"user"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/","text":"// lcp / org.readium.r2.lcp.license.model / LicenseDocument / Rel Rel \u00b6 [androidJvm]\\ enum Rel : Enum < LicenseDocument.Rel > Entries \u00b6 status [androidJvm] status (\"status\") support [androidJvm] support (\"support\") self [androidJvm] self (\"self\") publication [androidJvm] publication (\"publication\") hint [androidJvm] hint (\"hint\") Types \u00b6 Name Summary Companion [androidJvm] object Companion Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/#rel","text":"[androidJvm]\\ enum Rel : Enum < LicenseDocument.Rel >","title":"Rel"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/#entries","text":"status [androidJvm] status (\"status\") support [androidJvm] support (\"support\") self [androidJvm] self (\"self\") publication [androidJvm] publication (\"publication\") hint [androidJvm] hint (\"hint\")","title":"Entries"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/raw-value/","text":"// lcp / org.readium.r2.lcp.license.model / LicenseDocument / Rel / rawValue rawValue \u00b6 [androidJvm]\\ val rawValue : String","title":"Raw value"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/raw-value/#rawvalue","text":"[androidJvm]\\ val rawValue : String","title":"rawValue"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/-companion/","text":"// lcp / org.readium.r2.lcp.license.model / LicenseDocument / Rel / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary invoke [androidJvm] operator fun invoke (rawValue: String ): LicenseDocument.Rel ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/-companion/#functions","text":"Name Summary invoke [androidJvm] operator fun invoke (rawValue: String ): LicenseDocument.Rel ?","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/-companion/invoke/","text":"// lcp / org.readium.r2.lcp.license.model / LicenseDocument / Rel / Companion / invoke invoke \u00b6 [androidJvm]\\ operator fun invoke (rawValue: String ): LicenseDocument.Rel ?","title":"Invoke"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/-companion/invoke/#invoke","text":"[androidJvm]\\ operator fun invoke (rawValue: String ): LicenseDocument.Rel ?","title":"invoke"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/hint/","text":"// lcp / org.readium.r2.lcp.license.model / LicenseDocument / Rel / hint hint \u00b6 [androidJvm]\\ hint (\"hint\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/hint/#hint","text":"[androidJvm]\\ hint (\"hint\")","title":"hint"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/hint/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/publication/","text":"// lcp / org.readium.r2.lcp.license.model / LicenseDocument / Rel / publication publication \u00b6 [androidJvm]\\ publication (\"publication\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/publication/#publication","text":"[androidJvm]\\ publication (\"publication\")","title":"publication"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/publication/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/self/","text":"// lcp / org.readium.r2.lcp.license.model / LicenseDocument / Rel / self self \u00b6 [androidJvm]\\ self (\"self\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/self/#self","text":"[androidJvm]\\ self (\"self\")","title":"self"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/self/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/status/","text":"// lcp / org.readium.r2.lcp.license.model / LicenseDocument / Rel / status status \u00b6 [androidJvm]\\ status (\"status\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/status/#status","text":"[androidJvm]\\ status (\"status\")","title":"status"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/status/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/support/","text":"// lcp / org.readium.r2.lcp.license.model / LicenseDocument / Rel / support support \u00b6 [androidJvm]\\ support (\"support\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/support/#support","text":"[androidJvm]\\ support (\"support\")","title":"support"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-license-document/-rel/support/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument StatusDocument \u00b6 [androidJvm]\\ class StatusDocument (data: ByteArray ) Types \u00b6 Name Summary Rel [androidJvm] enum Rel : Enum < StatusDocument.Rel > Status [androidJvm] enum Status : Enum < StatusDocument.Status > Functions \u00b6 Name Summary events [androidJvm] fun events (type: String ): List < Event > fun events (type: Event.EventType ): List < Event > link [androidJvm] fun link (rel: StatusDocument.Rel , type: MediaType ? = null): Link ? links [androidJvm] fun links (rel: StatusDocument.Rel , type: MediaType ? = null): List < Link > url [androidJvm] fun url (rel: StatusDocument.Rel , preferredType: MediaType ? = null, parameters: URLParameters = emptyMap()): URL Properties \u00b6 Name Summary data [androidJvm] val data : ByteArray description [androidJvm] val description : String events [androidJvm] val events : List < Event > id [androidJvm] val id : String json [androidJvm] val json : JSONObject licenseUpdated [androidJvm] val licenseUpdated : Date links [androidJvm] val links : Links message [androidJvm] val message : String potentialRights [androidJvm] val potentialRights : PotentialRights ? status [androidJvm] val status : StatusDocument.Status statusUpdated [androidJvm] val statusUpdated : Date","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/#statusdocument","text":"[androidJvm]\\ class StatusDocument (data: ByteArray )","title":"StatusDocument"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/#types","text":"Name Summary Rel [androidJvm] enum Rel : Enum < StatusDocument.Rel > Status [androidJvm] enum Status : Enum < StatusDocument.Status >","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/#functions","text":"Name Summary events [androidJvm] fun events (type: String ): List < Event > fun events (type: Event.EventType ): List < Event > link [androidJvm] fun link (rel: StatusDocument.Rel , type: MediaType ? = null): Link ? links [androidJvm] fun links (rel: StatusDocument.Rel , type: MediaType ? = null): List < Link > url [androidJvm] fun url (rel: StatusDocument.Rel , preferredType: MediaType ? = null, parameters: URLParameters = emptyMap()): URL","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/#properties","text":"Name Summary data [androidJvm] val data : ByteArray description [androidJvm] val description : String events [androidJvm] val events : List < Event > id [androidJvm] val id : String json [androidJvm] val json : JSONObject licenseUpdated [androidJvm] val licenseUpdated : Date links [androidJvm] val links : Links message [androidJvm] val message : String potentialRights [androidJvm] val potentialRights : PotentialRights ? status [androidJvm] val status : StatusDocument.Status statusUpdated [androidJvm] val statusUpdated : Date","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status-document/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / StatusDocument StatusDocument \u00b6 [androidJvm]\\ fun StatusDocument (data: ByteArray )","title":" status document"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status-document/#statusdocument","text":"[androidJvm]\\ fun StatusDocument (data: ByteArray )","title":"StatusDocument"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/data/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / data data \u00b6 [androidJvm]\\ val data : ByteArray","title":"Data"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/data/#data","text":"[androidJvm]\\ val data : ByteArray","title":"data"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/description/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / description description \u00b6 [androidJvm]\\ val description : String","title":"Description"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/description/#description","text":"[androidJvm]\\ val description : String","title":"description"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/events/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / events events \u00b6 [androidJvm]\\ fun events (type: Event.EventType ): List < Event > fun events (type: String ): List < Event > val events : List < Event >","title":"Events"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/events/#events","text":"[androidJvm]\\ fun events (type: Event.EventType ): List < Event > fun events (type: String ): List < Event > val events : List < Event >","title":"events"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/id/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / id id \u00b6 [androidJvm]\\ val id : String","title":"Id"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/id/#id","text":"[androidJvm]\\ val id : String","title":"id"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/json/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / json json \u00b6 [androidJvm]\\ val json : JSONObject","title":"Json"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/json/#json","text":"[androidJvm]\\ val json : JSONObject","title":"json"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/license-updated/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / licenseUpdated licenseUpdated \u00b6 [androidJvm]\\ val licenseUpdated : Date","title":"License updated"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/license-updated/#licenseupdated","text":"[androidJvm]\\ val licenseUpdated : Date","title":"licenseUpdated"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/link/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / link link \u00b6 [androidJvm]\\ fun link (rel: StatusDocument.Rel , type: MediaType ? = null): Link ?","title":"Link"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/link/#link","text":"[androidJvm]\\ fun link (rel: StatusDocument.Rel , type: MediaType ? = null): Link ?","title":"link"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/links/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / links links \u00b6 [androidJvm]\\ fun links (rel: StatusDocument.Rel , type: MediaType ? = null): List < Link > val links : Links","title":"Links"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/links/#links","text":"[androidJvm]\\ fun links (rel: StatusDocument.Rel , type: MediaType ? = null): List < Link > val links : Links","title":"links"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/message/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / message message \u00b6 [androidJvm]\\ val message : String","title":"Message"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/message/#message","text":"[androidJvm]\\ val message : String","title":"message"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/potential-rights/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / potentialRights potentialRights \u00b6 [androidJvm]\\ val potentialRights : PotentialRights ?","title":"Potential rights"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/potential-rights/#potentialrights","text":"[androidJvm]\\ val potentialRights : PotentialRights ?","title":"potentialRights"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/status-updated/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / statusUpdated statusUpdated \u00b6 [androidJvm]\\ val statusUpdated : Date","title":"Status updated"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/status-updated/#statusupdated","text":"[androidJvm]\\ val statusUpdated : Date","title":"statusUpdated"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/status/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / status status \u00b6 [androidJvm]\\ val status : StatusDocument.Status","title":"Status"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/status/#status","text":"[androidJvm]\\ val status : StatusDocument.Status","title":"status"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/url/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / url url \u00b6 [androidJvm]\\ fun url (rel: StatusDocument.Rel , preferredType: MediaType ? = null, parameters: URLParameters = emptyMap()): URL","title":"Url"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/url/#url","text":"[androidJvm]\\ fun url (rel: StatusDocument.Rel , preferredType: MediaType ? = null, parameters: URLParameters = emptyMap()): URL","title":"url"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-rel/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / Rel Rel \u00b6 [androidJvm]\\ enum Rel : Enum < StatusDocument.Rel > Entries \u00b6 renew [androidJvm] renew (\"renew\") return [androidJvm] return (\"return\") license [androidJvm] license (\"license\") register [androidJvm] register (\"register\") Types \u00b6 Name Summary Companion [androidJvm] object Companion Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-rel/#rel","text":"[androidJvm]\\ enum Rel : Enum < StatusDocument.Rel >","title":"Rel"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-rel/#entries","text":"renew [androidJvm] renew (\"renew\") return [androidJvm] return (\"return\") license [androidJvm] license (\"license\") register [androidJvm] register (\"register\")","title":"Entries"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-rel/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-rel/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-rel/raw-value/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / Rel / rawValue rawValue \u00b6 [androidJvm]\\ val rawValue : String","title":"Raw value"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-rel/raw-value/#rawvalue","text":"[androidJvm]\\ val rawValue : String","title":"rawValue"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-rel/-companion/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / Rel / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary invoke [androidJvm] operator fun invoke (rawValue: String ): StatusDocument.Rel ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-rel/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-rel/-companion/#functions","text":"Name Summary invoke [androidJvm] operator fun invoke (rawValue: String ): StatusDocument.Rel ?","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-rel/-companion/invoke/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / Rel / Companion / invoke invoke \u00b6 [androidJvm]\\ operator fun invoke (rawValue: String ): StatusDocument.Rel ?","title":"Invoke"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-rel/-companion/invoke/#invoke","text":"[androidJvm]\\ operator fun invoke (rawValue: String ): StatusDocument.Rel ?","title":"invoke"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-rel/license/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / Rel / license license \u00b6 [androidJvm]\\ license (\"license\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-rel/license/#license","text":"[androidJvm]\\ license (\"license\")","title":"license"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-rel/license/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-rel/register/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / Rel / register register \u00b6 [androidJvm]\\ register (\"register\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-rel/register/#register","text":"[androidJvm]\\ register (\"register\")","title":"register"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-rel/register/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-rel/renew/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / Rel / renew renew \u00b6 [androidJvm]\\ renew (\"renew\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-rel/renew/#renew","text":"[androidJvm]\\ renew (\"renew\")","title":"renew"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-rel/renew/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-rel/return/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / Rel / return return \u00b6 [androidJvm]\\ return (\"return\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-rel/return/#return","text":"[androidJvm]\\ return (\"return\")","title":"return"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-rel/return/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / Status Status \u00b6 [androidJvm]\\ enum Status : Enum < StatusDocument.Status > Entries \u00b6 expired [androidJvm] expired (\"expired\") cancelled [androidJvm] cancelled (\"cancelled\") returned [androidJvm] returned (\"returned\") revoked [androidJvm] revoked (\"revoked\") active [androidJvm] active (\"active\") ready [androidJvm] ready (\"ready\") Types \u00b6 Name Summary Companion [androidJvm] object Companion Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/#status","text":"[androidJvm]\\ enum Status : Enum < StatusDocument.Status >","title":"Status"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/#entries","text":"expired [androidJvm] expired (\"expired\") cancelled [androidJvm] cancelled (\"cancelled\") returned [androidJvm] returned (\"returned\") revoked [androidJvm] revoked (\"revoked\") active [androidJvm] active (\"active\") ready [androidJvm] ready (\"ready\")","title":"Entries"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/raw-value/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / Status / rawValue rawValue \u00b6 [androidJvm]\\ val rawValue : String","title":"Raw value"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/raw-value/#rawvalue","text":"[androidJvm]\\ val rawValue : String","title":"rawValue"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/-companion/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / Status / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary invoke [androidJvm] operator fun invoke (rawValue: String ): StatusDocument.Status ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/-companion/#functions","text":"Name Summary invoke [androidJvm] operator fun invoke (rawValue: String ): StatusDocument.Status ?","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/-companion/invoke/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / Status / Companion / invoke invoke \u00b6 [androidJvm]\\ operator fun invoke (rawValue: String ): StatusDocument.Status ?","title":"Invoke"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/-companion/invoke/#invoke","text":"[androidJvm]\\ operator fun invoke (rawValue: String ): StatusDocument.Status ?","title":"invoke"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/active/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / Status / active active \u00b6 [androidJvm]\\ active (\"active\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/active/#active","text":"[androidJvm]\\ active (\"active\")","title":"active"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/active/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/cancelled/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / Status / cancelled cancelled \u00b6 [androidJvm]\\ cancelled (\"cancelled\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/cancelled/#cancelled","text":"[androidJvm]\\ cancelled (\"cancelled\")","title":"cancelled"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/cancelled/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/expired/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / Status / expired expired \u00b6 [androidJvm]\\ expired (\"expired\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/expired/#expired","text":"[androidJvm]\\ expired (\"expired\")","title":"expired"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/expired/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/ready/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / Status / ready ready \u00b6 [androidJvm]\\ ready (\"ready\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/ready/#ready","text":"[androidJvm]\\ ready (\"ready\")","title":"ready"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/ready/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/returned/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / Status / returned returned \u00b6 [androidJvm]\\ returned (\"returned\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/returned/#returned","text":"[androidJvm]\\ returned (\"returned\")","title":"returned"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/returned/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/revoked/","text":"// lcp / org.readium.r2.lcp.license.model / StatusDocument / Status / revoked revoked \u00b6 [androidJvm]\\ revoked (\"revoked\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/revoked/#revoked","text":"[androidJvm]\\ revoked (\"revoked\")","title":"revoked"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model/-status-document/-status/revoked/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/","text":"// lcp / org.readium.r2.lcp.license.model.components Package org.readium.r2.lcp.license.model.components \u00b6 Types \u00b6 Name Summary Link [androidJvm] data class Link (json: JSONObject ) Links [androidJvm] data class Links (json: JSONArray )","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/#package-orgreadiumr2lcplicensemodelcomponents","text":"","title":"Package org.readium.r2.lcp.license.model.components"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/#types","text":"Name Summary Link [androidJvm] data class Link (json: JSONObject ) Links [androidJvm] data class Links (json: JSONArray )","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/","text":"// lcp / org.readium.r2.lcp.license.model.components / Link Link \u00b6 [androidJvm]\\ data class Link (json: JSONObject ) Functions \u00b6 Name Summary url [androidJvm] fun url (parameters: URLParameters ): URL Properties \u00b6 Name Summary hash [androidJvm] val hash : String ? href [androidJvm] val href : String json [androidJvm] val json : JSONObject length [androidJvm] val length : Int ? mediaType [androidJvm] val mediaType : MediaType profile [androidJvm] val profile : String ? rel [androidJvm] var rel : MutableList < String > templated [androidJvm] val templated : Boolean title [androidJvm] val title : String ? type [androidJvm] val type : String ? url [androidJvm] val url : URL","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/#link","text":"[androidJvm]\\ data class Link (json: JSONObject )","title":"Link"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/#functions","text":"Name Summary url [androidJvm] fun url (parameters: URLParameters ): URL","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/#properties","text":"Name Summary hash [androidJvm] val hash : String ? href [androidJvm] val href : String json [androidJvm] val json : JSONObject length [androidJvm] val length : Int ? mediaType [androidJvm] val mediaType : MediaType profile [androidJvm] val profile : String ? rel [androidJvm] var rel : MutableList < String > templated [androidJvm] val templated : Boolean title [androidJvm] val title : String ? type [androidJvm] val type : String ? url [androidJvm] val url : URL","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/-link/","text":"// lcp / org.readium.r2.lcp.license.model.components / Link / Link Link \u00b6 [androidJvm]\\ fun Link (json: JSONObject )","title":" link"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/-link/#link","text":"[androidJvm]\\ fun Link (json: JSONObject )","title":"Link"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/hash/","text":"// lcp / org.readium.r2.lcp.license.model.components / Link / hash hash \u00b6 [androidJvm]\\ val hash : String ?","title":"Hash"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/hash/#hash","text":"[androidJvm]\\ val hash : String ?","title":"hash"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/href/","text":"// lcp / org.readium.r2.lcp.license.model.components / Link / href href \u00b6 [androidJvm]\\ val href : String","title":"Href"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/href/#href","text":"[androidJvm]\\ val href : String","title":"href"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/json/","text":"// lcp / org.readium.r2.lcp.license.model.components / Link / json json \u00b6 [androidJvm]\\ val json : JSONObject","title":"Json"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/json/#json","text":"[androidJvm]\\ val json : JSONObject","title":"json"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/length/","text":"// lcp / org.readium.r2.lcp.license.model.components / Link / length length \u00b6 [androidJvm]\\ val length : Int ?","title":"Length"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/length/#length","text":"[androidJvm]\\ val length : Int ?","title":"length"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/media-type/","text":"// lcp / org.readium.r2.lcp.license.model.components / Link / mediaType mediaType \u00b6 [androidJvm]\\ val mediaType : MediaType","title":"Media type"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/media-type/#mediatype","text":"[androidJvm]\\ val mediaType : MediaType","title":"mediaType"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/profile/","text":"// lcp / org.readium.r2.lcp.license.model.components / Link / profile profile \u00b6 [androidJvm]\\ val profile : String ?","title":"Profile"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/profile/#profile","text":"[androidJvm]\\ val profile : String ?","title":"profile"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/rel/","text":"// lcp / org.readium.r2.lcp.license.model.components / Link / rel rel \u00b6 [androidJvm]\\ var rel : MutableList < String >","title":"Rel"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/rel/#rel","text":"[androidJvm]\\ var rel : MutableList < String >","title":"rel"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/templated/","text":"// lcp / org.readium.r2.lcp.license.model.components / Link / templated templated \u00b6 [androidJvm]\\ val templated : Boolean","title":"Templated"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/templated/#templated","text":"[androidJvm]\\ val templated : Boolean","title":"templated"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/title/","text":"// lcp / org.readium.r2.lcp.license.model.components / Link / title title \u00b6 [androidJvm]\\ val title : String ?","title":"Title"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/title/#title","text":"[androidJvm]\\ val title : String ?","title":"title"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/type/","text":"// lcp / org.readium.r2.lcp.license.model.components / Link / type type \u00b6 [androidJvm]\\ val type : String ?","title":"Type"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/type/#type","text":"[androidJvm]\\ val type : String ?","title":"type"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/url/","text":"// lcp / org.readium.r2.lcp.license.model.components / Link / url url \u00b6 [androidJvm]\\ fun url (parameters: URLParameters ): URL val url : URL","title":"Url"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-link/url/#url","text":"[androidJvm]\\ fun url (parameters: URLParameters ): URL val url : URL","title":"url"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-links/","text":"// lcp / org.readium.r2.lcp.license.model.components / Links Links \u00b6 [androidJvm]\\ data class Links (json: JSONArray ) Functions \u00b6 Name Summary allWithRel [androidJvm] fun allWithRel (rel: String , type: MediaType ? = null): List < Link > firstWithRel [androidJvm] fun firstWithRel (rel: String , type: MediaType ? = null): Link ? get [androidJvm] operator fun get (rel: String ): List < Link > Properties \u00b6 Name Summary json [androidJvm] val json : JSONArray links [androidJvm] val links : List < Link >","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-links/#links","text":"[androidJvm]\\ data class Links (json: JSONArray )","title":"Links"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-links/#functions","text":"Name Summary allWithRel [androidJvm] fun allWithRel (rel: String , type: MediaType ? = null): List < Link > firstWithRel [androidJvm] fun firstWithRel (rel: String , type: MediaType ? = null): Link ? get [androidJvm] operator fun get (rel: String ): List < Link >","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-links/#properties","text":"Name Summary json [androidJvm] val json : JSONArray links [androidJvm] val links : List < Link >","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-links/-links/","text":"// lcp / org.readium.r2.lcp.license.model.components / Links / Links Links \u00b6 [androidJvm]\\ fun Links (json: JSONArray )","title":" links"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-links/-links/#links","text":"[androidJvm]\\ fun Links (json: JSONArray )","title":"Links"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-links/all-with-rel/","text":"// lcp / org.readium.r2.lcp.license.model.components / Links / allWithRel allWithRel \u00b6 [androidJvm]\\ fun allWithRel (rel: String , type: MediaType ? = null): List < Link >","title":"All with rel"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-links/all-with-rel/#allwithrel","text":"[androidJvm]\\ fun allWithRel (rel: String , type: MediaType ? = null): List < Link >","title":"allWithRel"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-links/first-with-rel/","text":"// lcp / org.readium.r2.lcp.license.model.components / Links / firstWithRel firstWithRel \u00b6 [androidJvm]\\ fun firstWithRel (rel: String , type: MediaType ? = null): Link ?","title":"First with rel"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-links/first-with-rel/#firstwithrel","text":"[androidJvm]\\ fun firstWithRel (rel: String , type: MediaType ? = null): Link ?","title":"firstWithRel"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-links/get/","text":"// lcp / org.readium.r2.lcp.license.model.components / Links / get get \u00b6 [androidJvm]\\ operator fun get (rel: String ): List < Link >","title":"Get"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-links/get/#get","text":"[androidJvm]\\ operator fun get (rel: String ): List < Link >","title":"get"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-links/json/","text":"// lcp / org.readium.r2.lcp.license.model.components / Links / json json \u00b6 [androidJvm]\\ val json : JSONArray","title":"Json"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-links/json/#json","text":"[androidJvm]\\ val json : JSONArray","title":"json"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-links/links/","text":"// lcp / org.readium.r2.lcp.license.model.components / Links / links links \u00b6 [androidJvm]\\ val links : List < Link >","title":"Links"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components/-links/links/#links","text":"[androidJvm]\\ val links : List < Link >","title":"links"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp Package org.readium.r2.lcp.license.model.components.lcp \u00b6 Types \u00b6 Name Summary ContentKey [androidJvm] data class ContentKey (json: JSONObject ) Encryption [androidJvm] data class Encryption (json: JSONObject ) Rights [androidJvm] data class Rights (json: JSONObject ) Signature [androidJvm] data class Signature (json: JSONObject ) User [androidJvm] data class User (json: JSONObject ) UserKey [androidJvm] data class UserKey (json: JSONObject )","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/#package-orgreadiumr2lcplicensemodelcomponentslcp","text":"","title":"Package org.readium.r2.lcp.license.model.components.lcp"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/#types","text":"Name Summary ContentKey [androidJvm] data class ContentKey (json: JSONObject ) Encryption [androidJvm] data class Encryption (json: JSONObject ) Rights [androidJvm] data class Rights (json: JSONObject ) Signature [androidJvm] data class Signature (json: JSONObject ) User [androidJvm] data class User (json: JSONObject ) UserKey [androidJvm] data class UserKey (json: JSONObject )","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-content-key/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / ContentKey ContentKey \u00b6 [androidJvm]\\ data class ContentKey (json: JSONObject ) Properties \u00b6 Name Summary algorithm [androidJvm] val algorithm : String encryptedValue [androidJvm] val encryptedValue : String json [androidJvm] val json : JSONObject","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-content-key/#contentkey","text":"[androidJvm]\\ data class ContentKey (json: JSONObject )","title":"ContentKey"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-content-key/#properties","text":"Name Summary algorithm [androidJvm] val algorithm : String encryptedValue [androidJvm] val encryptedValue : String json [androidJvm] val json : JSONObject","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-content-key/-content-key/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / ContentKey / ContentKey ContentKey \u00b6 [androidJvm]\\ fun ContentKey (json: JSONObject )","title":" content key"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-content-key/-content-key/#contentkey","text":"[androidJvm]\\ fun ContentKey (json: JSONObject )","title":"ContentKey"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-content-key/algorithm/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / ContentKey / algorithm algorithm \u00b6 [androidJvm]\\ val algorithm : String","title":"Algorithm"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-content-key/algorithm/#algorithm","text":"[androidJvm]\\ val algorithm : String","title":"algorithm"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-content-key/encrypted-value/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / ContentKey / encryptedValue encryptedValue \u00b6 [androidJvm]\\ val encryptedValue : String","title":"Encrypted value"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-content-key/encrypted-value/#encryptedvalue","text":"[androidJvm]\\ val encryptedValue : String","title":"encryptedValue"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-content-key/json/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / ContentKey / json json \u00b6 [androidJvm]\\ val json : JSONObject","title":"Json"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-content-key/json/#json","text":"[androidJvm]\\ val json : JSONObject","title":"json"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-encryption/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / Encryption Encryption \u00b6 [androidJvm]\\ data class Encryption (json: JSONObject ) Properties \u00b6 Name Summary contentKey [androidJvm] val contentKey : ContentKey json [androidJvm] val json : JSONObject profile [androidJvm] val profile : String userKey [androidJvm] val userKey : UserKey","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-encryption/#encryption","text":"[androidJvm]\\ data class Encryption (json: JSONObject )","title":"Encryption"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-encryption/#properties","text":"Name Summary contentKey [androidJvm] val contentKey : ContentKey json [androidJvm] val json : JSONObject profile [androidJvm] val profile : String userKey [androidJvm] val userKey : UserKey","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-encryption/-encryption/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / Encryption / Encryption Encryption \u00b6 [androidJvm]\\ fun Encryption (json: JSONObject )","title":" encryption"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-encryption/-encryption/#encryption","text":"[androidJvm]\\ fun Encryption (json: JSONObject )","title":"Encryption"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-encryption/content-key/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / Encryption / contentKey contentKey \u00b6 [androidJvm]\\ val contentKey : ContentKey","title":"Content key"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-encryption/content-key/#contentkey","text":"[androidJvm]\\ val contentKey : ContentKey","title":"contentKey"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-encryption/json/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / Encryption / json json \u00b6 [androidJvm]\\ val json : JSONObject","title":"Json"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-encryption/json/#json","text":"[androidJvm]\\ val json : JSONObject","title":"json"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-encryption/profile/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / Encryption / profile profile \u00b6 [androidJvm]\\ val profile : String","title":"Profile"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-encryption/profile/#profile","text":"[androidJvm]\\ val profile : String","title":"profile"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-encryption/user-key/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / Encryption / userKey userKey \u00b6 [androidJvm]\\ val userKey : UserKey","title":"User key"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-encryption/user-key/#userkey","text":"[androidJvm]\\ val userKey : UserKey","title":"userKey"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-rights/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / Rights Rights \u00b6 [androidJvm]\\ data class Rights (json: JSONObject ) Properties \u00b6 Name Summary copy [androidJvm] val copy : Int ? end [androidJvm] val end : Date ? extensions [androidJvm] val extensions : JSONObject json [androidJvm] val json : JSONObject print [androidJvm] val print : Int ? start [androidJvm] val start : Date ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-rights/#rights","text":"[androidJvm]\\ data class Rights (json: JSONObject )","title":"Rights"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-rights/#properties","text":"Name Summary copy [androidJvm] val copy : Int ? end [androidJvm] val end : Date ? extensions [androidJvm] val extensions : JSONObject json [androidJvm] val json : JSONObject print [androidJvm] val print : Int ? start [androidJvm] val start : Date ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-rights/-rights/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / Rights / Rights Rights \u00b6 [androidJvm]\\ fun Rights (json: JSONObject )","title":" rights"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-rights/-rights/#rights","text":"[androidJvm]\\ fun Rights (json: JSONObject )","title":"Rights"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-rights/copy/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / Rights / copy copy \u00b6 [androidJvm]\\ val copy : Int ?","title":"Copy"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-rights/copy/#copy","text":"[androidJvm]\\ val copy : Int ?","title":"copy"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-rights/end/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / Rights / end end \u00b6 [androidJvm]\\ val end : Date ?","title":"End"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-rights/end/#end","text":"[androidJvm]\\ val end : Date ?","title":"end"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-rights/extensions/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / Rights / extensions extensions \u00b6 [androidJvm]\\ val extensions : JSONObject","title":"Extensions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-rights/extensions/#extensions","text":"[androidJvm]\\ val extensions : JSONObject","title":"extensions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-rights/json/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / Rights / json json \u00b6 [androidJvm]\\ val json : JSONObject","title":"Json"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-rights/json/#json","text":"[androidJvm]\\ val json : JSONObject","title":"json"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-rights/print/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / Rights / print print \u00b6 [androidJvm]\\ val print : Int ?","title":"Print"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-rights/print/#print","text":"[androidJvm]\\ val print : Int ?","title":"print"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-rights/start/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / Rights / start start \u00b6 [androidJvm]\\ val start : Date ?","title":"Start"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-rights/start/#start","text":"[androidJvm]\\ val start : Date ?","title":"start"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-signature/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / Signature Signature \u00b6 [androidJvm]\\ data class Signature (json: JSONObject ) Properties \u00b6 Name Summary algorithm [androidJvm] val algorithm : String certificate [androidJvm] val certificate : String json [androidJvm] val json : JSONObject value [androidJvm] val value : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-signature/#signature","text":"[androidJvm]\\ data class Signature (json: JSONObject )","title":"Signature"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-signature/#properties","text":"Name Summary algorithm [androidJvm] val algorithm : String certificate [androidJvm] val certificate : String json [androidJvm] val json : JSONObject value [androidJvm] val value : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-signature/-signature/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / Signature / Signature Signature \u00b6 [androidJvm]\\ fun Signature (json: JSONObject )","title":" signature"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-signature/-signature/#signature","text":"[androidJvm]\\ fun Signature (json: JSONObject )","title":"Signature"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-signature/algorithm/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / Signature / algorithm algorithm \u00b6 [androidJvm]\\ val algorithm : String","title":"Algorithm"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-signature/algorithm/#algorithm","text":"[androidJvm]\\ val algorithm : String","title":"algorithm"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-signature/certificate/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / Signature / certificate certificate \u00b6 [androidJvm]\\ val certificate : String","title":"Certificate"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-signature/certificate/#certificate","text":"[androidJvm]\\ val certificate : String","title":"certificate"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-signature/json/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / Signature / json json \u00b6 [androidJvm]\\ val json : JSONObject","title":"Json"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-signature/json/#json","text":"[androidJvm]\\ val json : JSONObject","title":"json"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-signature/value/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / Signature / value value \u00b6 [androidJvm]\\ val value : String","title":"Value"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-signature/value/#value","text":"[androidJvm]\\ val value : String","title":"value"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / User User \u00b6 [androidJvm]\\ data class User (json: JSONObject ) Properties \u00b6 Name Summary email [androidJvm] val email : String ? encrypted [androidJvm] var encrypted : MutableList < String > extensions [androidJvm] var extensions : JSONObject id [androidJvm] val id : String ? json [androidJvm] val json : JSONObject name [androidJvm] val name : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user/#user","text":"[androidJvm]\\ data class User (json: JSONObject )","title":"User"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user/#properties","text":"Name Summary email [androidJvm] val email : String ? encrypted [androidJvm] var encrypted : MutableList < String > extensions [androidJvm] var extensions : JSONObject id [androidJvm] val id : String ? json [androidJvm] val json : JSONObject name [androidJvm] val name : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user/-user/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / User / User User \u00b6 [androidJvm]\\ fun User (json: JSONObject )","title":" user"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user/-user/#user","text":"[androidJvm]\\ fun User (json: JSONObject )","title":"User"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user/email/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / User / email email \u00b6 [androidJvm]\\ val email : String ?","title":"Email"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user/email/#email","text":"[androidJvm]\\ val email : String ?","title":"email"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user/encrypted/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / User / encrypted encrypted \u00b6 [androidJvm]\\ var encrypted : MutableList < String >","title":"Encrypted"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user/encrypted/#encrypted","text":"[androidJvm]\\ var encrypted : MutableList < String >","title":"encrypted"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user/extensions/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / User / extensions extensions \u00b6 [androidJvm]\\ var extensions : JSONObject","title":"Extensions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user/extensions/#extensions","text":"[androidJvm]\\ var extensions : JSONObject","title":"extensions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user/id/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / User / id id \u00b6 [androidJvm]\\ val id : String ?","title":"Id"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user/id/#id","text":"[androidJvm]\\ val id : String ?","title":"id"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user/json/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / User / json json \u00b6 [androidJvm]\\ val json : JSONObject","title":"Json"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user/json/#json","text":"[androidJvm]\\ val json : JSONObject","title":"json"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user/name/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / User / name name \u00b6 [androidJvm]\\ val name : String ?","title":"Name"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user/name/#name","text":"[androidJvm]\\ val name : String ?","title":"name"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user-key/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / UserKey UserKey \u00b6 [androidJvm]\\ data class UserKey (json: JSONObject ) Properties \u00b6 Name Summary algorithm [androidJvm] val algorithm : String json [androidJvm] val json : JSONObject keyCheck [androidJvm] val keyCheck : String textHint [androidJvm] val textHint : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user-key/#userkey","text":"[androidJvm]\\ data class UserKey (json: JSONObject )","title":"UserKey"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user-key/#properties","text":"Name Summary algorithm [androidJvm] val algorithm : String json [androidJvm] val json : JSONObject keyCheck [androidJvm] val keyCheck : String textHint [androidJvm] val textHint : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user-key/-user-key/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / UserKey / UserKey UserKey \u00b6 [androidJvm]\\ fun UserKey (json: JSONObject )","title":" user key"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user-key/-user-key/#userkey","text":"[androidJvm]\\ fun UserKey (json: JSONObject )","title":"UserKey"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user-key/algorithm/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / UserKey / algorithm algorithm \u00b6 [androidJvm]\\ val algorithm : String","title":"Algorithm"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user-key/algorithm/#algorithm","text":"[androidJvm]\\ val algorithm : String","title":"algorithm"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user-key/json/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / UserKey / json json \u00b6 [androidJvm]\\ val json : JSONObject","title":"Json"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user-key/json/#json","text":"[androidJvm]\\ val json : JSONObject","title":"json"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user-key/key-check/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / UserKey / keyCheck keyCheck \u00b6 [androidJvm]\\ val keyCheck : String","title":"Key check"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user-key/key-check/#keycheck","text":"[androidJvm]\\ val keyCheck : String","title":"keyCheck"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user-key/text-hint/","text":"// lcp / org.readium.r2.lcp.license.model.components.lcp / UserKey / textHint textHint \u00b6 [androidJvm]\\ val textHint : String","title":"Text hint"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lcp/-user-key/text-hint/#texthint","text":"[androidJvm]\\ val textHint : String","title":"textHint"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/","text":"// lcp / org.readium.r2.lcp.license.model.components.lsd Package org.readium.r2.lcp.license.model.components.lsd \u00b6 Types \u00b6 Name Summary Event [androidJvm] data class Event (json: JSONObject ) PotentialRights [androidJvm] data class PotentialRights (json: JSONObject )","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/#package-orgreadiumr2lcplicensemodelcomponentslsd","text":"","title":"Package org.readium.r2.lcp.license.model.components.lsd"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/#types","text":"Name Summary Event [androidJvm] data class Event (json: JSONObject ) PotentialRights [androidJvm] data class PotentialRights (json: JSONObject )","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/","text":"// lcp / org.readium.r2.lcp.license.model.components.lsd / Event Event \u00b6 [androidJvm]\\ data class Event (json: JSONObject ) Types \u00b6 Name Summary EventType [androidJvm] enum EventType : Enum < Event.EventType > Properties \u00b6 Name Summary date [androidJvm] val date : Date ? id [androidJvm] val id : String json [androidJvm] val json : JSONObject name [androidJvm] val name : String type [androidJvm] val type : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/#event","text":"[androidJvm]\\ data class Event (json: JSONObject )","title":"Event"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/#types","text":"Name Summary EventType [androidJvm] enum EventType : Enum < Event.EventType >","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/#properties","text":"Name Summary date [androidJvm] val date : Date ? id [androidJvm] val id : String json [androidJvm] val json : JSONObject name [androidJvm] val name : String type [androidJvm] val type : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event/","text":"// lcp / org.readium.r2.lcp.license.model.components.lsd / Event / Event Event \u00b6 [androidJvm]\\ fun Event (json: JSONObject )","title":" event"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event/#event","text":"[androidJvm]\\ fun Event (json: JSONObject )","title":"Event"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/date/","text":"// lcp / org.readium.r2.lcp.license.model.components.lsd / Event / date date \u00b6 [androidJvm]\\ val date : Date ?","title":"Date"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/date/#date","text":"[androidJvm]\\ val date : Date ?","title":"date"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/id/","text":"// lcp / org.readium.r2.lcp.license.model.components.lsd / Event / id id \u00b6 [androidJvm]\\ val id : String","title":"Id"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/id/#id","text":"[androidJvm]\\ val id : String","title":"id"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/json/","text":"// lcp / org.readium.r2.lcp.license.model.components.lsd / Event / json json \u00b6 [androidJvm]\\ val json : JSONObject","title":"Json"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/json/#json","text":"[androidJvm]\\ val json : JSONObject","title":"json"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/name/","text":"// lcp / org.readium.r2.lcp.license.model.components.lsd / Event / name name \u00b6 [androidJvm]\\ val name : String","title":"Name"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/name/#name","text":"[androidJvm]\\ val name : String","title":"name"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/type/","text":"// lcp / org.readium.r2.lcp.license.model.components.lsd / Event / type type \u00b6 [androidJvm]\\ val type : String","title":"Type"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/type/#type","text":"[androidJvm]\\ val type : String","title":"type"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/","text":"// lcp / org.readium.r2.lcp.license.model.components.lsd / Event / EventType EventType \u00b6 [androidJvm]\\ enum EventType : Enum < Event.EventType > Entries \u00b6 cancel [androidJvm] cancel (\"cancel\") revoke [androidJvm] revoke (\"revoke\") return [androidJvm] return (\"return\") renew [androidJvm] renew (\"renew\") register [androidJvm] register (\"register\") Types \u00b6 Name Summary Companion [androidJvm] object Companion Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/#eventtype","text":"[androidJvm]\\ enum EventType : Enum < Event.EventType >","title":"EventType"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/#entries","text":"cancel [androidJvm] cancel (\"cancel\") revoke [androidJvm] revoke (\"revoke\") return [androidJvm] return (\"return\") renew [androidJvm] renew (\"renew\") register [androidJvm] register (\"register\")","title":"Entries"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/raw-value/","text":"// lcp / org.readium.r2.lcp.license.model.components.lsd / Event / EventType / rawValue rawValue \u00b6 [androidJvm]\\ val rawValue : String","title":"Raw value"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/raw-value/#rawvalue","text":"[androidJvm]\\ val rawValue : String","title":"rawValue"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/-companion/","text":"// lcp / org.readium.r2.lcp.license.model.components.lsd / Event / EventType / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary invoke [androidJvm] operator fun invoke (rawValue: String ): Event.EventType ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/-companion/#functions","text":"Name Summary invoke [androidJvm] operator fun invoke (rawValue: String ): Event.EventType ?","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/-companion/invoke/","text":"// lcp / org.readium.r2.lcp.license.model.components.lsd / Event / EventType / Companion / invoke invoke \u00b6 [androidJvm]\\ operator fun invoke (rawValue: String ): Event.EventType ?","title":"Invoke"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/-companion/invoke/#invoke","text":"[androidJvm]\\ operator fun invoke (rawValue: String ): Event.EventType ?","title":"invoke"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/cancel/","text":"// lcp / org.readium.r2.lcp.license.model.components.lsd / Event / EventType / cancel cancel \u00b6 [androidJvm]\\ cancel (\"cancel\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/cancel/#cancel","text":"[androidJvm]\\ cancel (\"cancel\")","title":"cancel"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/cancel/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/register/","text":"// lcp / org.readium.r2.lcp.license.model.components.lsd / Event / EventType / register register \u00b6 [androidJvm]\\ register (\"register\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/register/#register","text":"[androidJvm]\\ register (\"register\")","title":"register"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/register/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/renew/","text":"// lcp / org.readium.r2.lcp.license.model.components.lsd / Event / EventType / renew renew \u00b6 [androidJvm]\\ renew (\"renew\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/renew/#renew","text":"[androidJvm]\\ renew (\"renew\")","title":"renew"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/renew/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/return/","text":"// lcp / org.readium.r2.lcp.license.model.components.lsd / Event / EventType / return return \u00b6 [androidJvm]\\ return (\"return\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/return/#return","text":"[androidJvm]\\ return (\"return\")","title":"return"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/return/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/revoke/","text":"// lcp / org.readium.r2.lcp.license.model.components.lsd / Event / EventType / revoke revoke \u00b6 [androidJvm]\\ revoke (\"revoke\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/revoke/#revoke","text":"[androidJvm]\\ revoke (\"revoke\")","title":"revoke"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-event/-event-type/revoke/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-potential-rights/","text":"// lcp / org.readium.r2.lcp.license.model.components.lsd / PotentialRights PotentialRights \u00b6 [androidJvm]\\ data class PotentialRights (json: JSONObject ) Properties \u00b6 Name Summary end [androidJvm] val end : Date ? json [androidJvm] val json : JSONObject","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-potential-rights/#potentialrights","text":"[androidJvm]\\ data class PotentialRights (json: JSONObject )","title":"PotentialRights"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-potential-rights/#properties","text":"Name Summary end [androidJvm] val end : Date ? json [androidJvm] val json : JSONObject","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-potential-rights/-potential-rights/","text":"// lcp / org.readium.r2.lcp.license.model.components.lsd / PotentialRights / PotentialRights PotentialRights \u00b6 [androidJvm]\\ fun PotentialRights (json: JSONObject )","title":" potential rights"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-potential-rights/-potential-rights/#potentialrights","text":"[androidJvm]\\ fun PotentialRights (json: JSONObject )","title":"PotentialRights"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-potential-rights/end/","text":"// lcp / org.readium.r2.lcp.license.model.components.lsd / PotentialRights / end end \u00b6 [androidJvm]\\ val end : Date ?","title":"End"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-potential-rights/end/#end","text":"[androidJvm]\\ val end : Date ?","title":"end"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-potential-rights/json/","text":"// lcp / org.readium.r2.lcp.license.model.components.lsd / PotentialRights / json json \u00b6 [androidJvm]\\ val json : JSONObject","title":"Json"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.license.model.components.lsd/-potential-rights/json/#json","text":"[androidJvm]\\ val json : JSONObject","title":"json"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/","text":"// lcp / org.readium.r2.lcp.persistence Package org.readium.r2.lcp.persistence \u00b6 Types \u00b6 Name Summary LcpDao [androidJvm] interface LcpDao License [androidJvm] data class License (id: Long ?, licenseId: String , rightPrint: Int ?, rightCopy: Int ?, registered: Boolean ) Passphrase [androidJvm] data class Passphrase (id: Long ?, licenseId: String ?, provider: String ?, userId: String ?, passphrase: String )","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/#package-orgreadiumr2lcppersistence","text":"","title":"Package org.readium.r2.lcp.persistence"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/#types","text":"Name Summary LcpDao [androidJvm] interface LcpDao License [androidJvm] data class License (id: Long ?, licenseId: String , rightPrint: Int ?, rightCopy: Int ?, registered: Boolean ) Passphrase [androidJvm] data class Passphrase (id: Long ?, licenseId: String ?, provider: String ?, userId: String ?, passphrase: String )","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/","text":"// lcp / org.readium.r2.lcp.persistence / LcpDao LcpDao \u00b6 [androidJvm]\\ interface LcpDao Functions \u00b6 Name Summary addLicense [androidJvm] abstract suspend fun addLicense (license: License ) addPassphrase [androidJvm] abstract suspend fun addPassphrase (passphrase: Passphrase ) allPassphrases [androidJvm] abstract suspend fun allPassphrases (): List < String > exists [androidJvm] abstract suspend fun exists (licenseId: String ): String ? getCopiesLeft [androidJvm] abstract fun getCopiesLeft (licenseId: String ): Int ? getPrintsLeft [androidJvm] abstract fun getPrintsLeft (licenseId: String ): Int ? isDeviceRegistered [androidJvm] abstract suspend fun isDeviceRegistered (licenseId: String ): Boolean passphrase [androidJvm] abstract suspend fun passphrase (licenseId: String ): String ? Retrieve passphrase passphrases [androidJvm] abstract suspend fun passphrases (userId: String ): List < String > registerDevice [androidJvm] abstract suspend fun registerDevice (licenseId: String ) setCopiesLeft [androidJvm] abstract fun setCopiesLeft (quantity: Int , licenseId: String ) setPrintsLeft [androidJvm] abstract fun setPrintsLeft (quantity: Int , licenseId: String )","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/#lcpdao","text":"[androidJvm]\\ interface LcpDao","title":"LcpDao"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/#functions","text":"Name Summary addLicense [androidJvm] abstract suspend fun addLicense (license: License ) addPassphrase [androidJvm] abstract suspend fun addPassphrase (passphrase: Passphrase ) allPassphrases [androidJvm] abstract suspend fun allPassphrases (): List < String > exists [androidJvm] abstract suspend fun exists (licenseId: String ): String ? getCopiesLeft [androidJvm] abstract fun getCopiesLeft (licenseId: String ): Int ? getPrintsLeft [androidJvm] abstract fun getPrintsLeft (licenseId: String ): Int ? isDeviceRegistered [androidJvm] abstract suspend fun isDeviceRegistered (licenseId: String ): Boolean passphrase [androidJvm] abstract suspend fun passphrase (licenseId: String ): String ? Retrieve passphrase passphrases [androidJvm] abstract suspend fun passphrases (userId: String ): List < String > registerDevice [androidJvm] abstract suspend fun registerDevice (licenseId: String ) setCopiesLeft [androidJvm] abstract fun setCopiesLeft (quantity: Int , licenseId: String ) setPrintsLeft [androidJvm] abstract fun setPrintsLeft (quantity: Int , licenseId: String )","title":"Functions"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/add-license/","text":"// lcp / org.readium.r2.lcp.persistence / LcpDao / addLicense addLicense \u00b6 [androidJvm]\\ abstract suspend fun addLicense (license: License )","title":"Add license"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/add-license/#addlicense","text":"[androidJvm]\\ abstract suspend fun addLicense (license: License )","title":"addLicense"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/add-passphrase/","text":"// lcp / org.readium.r2.lcp.persistence / LcpDao / addPassphrase addPassphrase \u00b6 [androidJvm]\\ abstract suspend fun addPassphrase (passphrase: Passphrase )","title":"Add passphrase"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/add-passphrase/#addpassphrase","text":"[androidJvm]\\ abstract suspend fun addPassphrase (passphrase: Passphrase )","title":"addPassphrase"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/all-passphrases/","text":"// lcp / org.readium.r2.lcp.persistence / LcpDao / allPassphrases allPassphrases \u00b6 [androidJvm]\\ abstract suspend fun allPassphrases (): List < String >","title":"All passphrases"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/all-passphrases/#allpassphrases","text":"[androidJvm]\\ abstract suspend fun allPassphrases (): List < String >","title":"allPassphrases"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/exists/","text":"// lcp / org.readium.r2.lcp.persistence / LcpDao / exists exists \u00b6 [androidJvm]\\ abstract suspend fun exists (licenseId: String ): String ?","title":"Exists"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/exists/#exists","text":"[androidJvm]\\ abstract suspend fun exists (licenseId: String ): String ?","title":"exists"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/get-copies-left/","text":"// lcp / org.readium.r2.lcp.persistence / LcpDao / getCopiesLeft getCopiesLeft \u00b6 [androidJvm]\\ abstract fun getCopiesLeft (licenseId: String ): Int ?","title":"Get copies left"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/get-copies-left/#getcopiesleft","text":"[androidJvm]\\ abstract fun getCopiesLeft (licenseId: String ): Int ?","title":"getCopiesLeft"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/get-prints-left/","text":"// lcp / org.readium.r2.lcp.persistence / LcpDao / getPrintsLeft getPrintsLeft \u00b6 [androidJvm]\\ abstract fun getPrintsLeft (licenseId: String ): Int ?","title":"Get prints left"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/get-prints-left/#getprintsleft","text":"[androidJvm]\\ abstract fun getPrintsLeft (licenseId: String ): Int ?","title":"getPrintsLeft"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/is-device-registered/","text":"// lcp / org.readium.r2.lcp.persistence / LcpDao / isDeviceRegistered isDeviceRegistered \u00b6 [androidJvm]\\ abstract suspend fun isDeviceRegistered (licenseId: String ): Boolean","title":"Is device registered"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/is-device-registered/#isdeviceregistered","text":"[androidJvm]\\ abstract suspend fun isDeviceRegistered (licenseId: String ): Boolean","title":"isDeviceRegistered"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/passphrase/","text":"// lcp / org.readium.r2.lcp.persistence / LcpDao / passphrase passphrase \u00b6 [androidJvm]\\ abstract suspend fun passphrase (licenseId: String ): String ? Retrieve passphrase Return \u00b6 Passphrase","title":"Passphrase"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/passphrase/#passphrase","text":"[androidJvm]\\ abstract suspend fun passphrase (licenseId: String ): String ? Retrieve passphrase","title":"passphrase"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/passphrase/#return","text":"Passphrase","title":"Return"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/passphrases/","text":"// lcp / org.readium.r2.lcp.persistence / LcpDao / passphrases passphrases \u00b6 [androidJvm]\\ abstract suspend fun passphrases (userId: String ): List < String >","title":"Passphrases"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/passphrases/#passphrases","text":"[androidJvm]\\ abstract suspend fun passphrases (userId: String ): List < String >","title":"passphrases"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/register-device/","text":"// lcp / org.readium.r2.lcp.persistence / LcpDao / registerDevice registerDevice \u00b6 [androidJvm]\\ abstract suspend fun registerDevice (licenseId: String )","title":"Register device"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/register-device/#registerdevice","text":"[androidJvm]\\ abstract suspend fun registerDevice (licenseId: String )","title":"registerDevice"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/set-copies-left/","text":"// lcp / org.readium.r2.lcp.persistence / LcpDao / setCopiesLeft setCopiesLeft \u00b6 [androidJvm]\\ abstract fun setCopiesLeft (quantity: Int , licenseId: String )","title":"Set copies left"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/set-copies-left/#setcopiesleft","text":"[androidJvm]\\ abstract fun setCopiesLeft (quantity: Int , licenseId: String )","title":"setCopiesLeft"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/set-prints-left/","text":"// lcp / org.readium.r2.lcp.persistence / LcpDao / setPrintsLeft setPrintsLeft \u00b6 [androidJvm]\\ abstract fun setPrintsLeft (quantity: Int , licenseId: String )","title":"Set prints left"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-lcp-dao/set-prints-left/#setprintsleft","text":"[androidJvm]\\ abstract fun setPrintsLeft (quantity: Int , licenseId: String )","title":"setPrintsLeft"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/","text":"// lcp / org.readium.r2.lcp.persistence / License License \u00b6 [androidJvm]\\ data class License (id: Long ?, licenseId: String , rightPrint: Int ?, rightCopy: Int ?, registered: Boolean ) Types \u00b6 Name Summary Companion [androidJvm] object Companion Properties \u00b6 Name Summary id [androidJvm] var id : Long ? = null licenseId [androidJvm] var licenseId : String registered [androidJvm] val registered : Boolean = false rightCopy [androidJvm] val rightCopy : Int ? rightPrint [androidJvm] val rightPrint : Int ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/#license","text":"[androidJvm]\\ data class License (id: Long ?, licenseId: String , rightPrint: Int ?, rightCopy: Int ?, registered: Boolean )","title":"License"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/#properties","text":"Name Summary id [androidJvm] var id : Long ? = null licenseId [androidJvm] var licenseId : String registered [androidJvm] val registered : Boolean = false rightCopy [androidJvm] val rightCopy : Int ? rightPrint [androidJvm] val rightPrint : Int ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/-license/","text":"// lcp / org.readium.r2.lcp.persistence / License / License License \u00b6 [androidJvm]\\ fun License (id: Long ? = null, licenseId: String , rightPrint: Int ?, rightCopy: Int ?, registered: Boolean = false)","title":" license"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/-license/#license","text":"[androidJvm]\\ fun License (id: Long ? = null, licenseId: String , rightPrint: Int ?, rightCopy: Int ?, registered: Boolean = false)","title":"License"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/id/","text":"// lcp / org.readium.r2.lcp.persistence / License / id id \u00b6 [androidJvm]\\ var id : Long ? = null","title":"Id"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/id/#id","text":"[androidJvm]\\ var id : Long ? = null","title":"id"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/license-id/","text":"// lcp / org.readium.r2.lcp.persistence / License / licenseId licenseId \u00b6 [androidJvm]\\ var licenseId : String","title":"License id"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/license-id/#licenseid","text":"[androidJvm]\\ var licenseId : String","title":"licenseId"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/registered/","text":"// lcp / org.readium.r2.lcp.persistence / License / registered registered \u00b6 [androidJvm]\\ val registered : Boolean = false","title":"Registered"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/registered/#registered","text":"[androidJvm]\\ val registered : Boolean = false","title":"registered"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/right-copy/","text":"// lcp / org.readium.r2.lcp.persistence / License / rightCopy rightCopy \u00b6 [androidJvm]\\ val rightCopy : Int ?","title":"Right copy"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/right-copy/#rightcopy","text":"[androidJvm]\\ val rightCopy : Int ?","title":"rightCopy"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/right-print/","text":"// lcp / org.readium.r2.lcp.persistence / License / rightPrint rightPrint \u00b6 [androidJvm]\\ val rightPrint : Int ?","title":"Right print"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/right-print/#rightprint","text":"[androidJvm]\\ val rightPrint : Int ?","title":"rightPrint"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/-companion/","text":"// lcp / org.readium.r2.lcp.persistence / License / Companion Companion \u00b6 [androidJvm]\\ object Companion Properties \u00b6 Name Summary ID [androidJvm] const val ID : String LICENSE_ID [androidJvm] const val LICENSE_ID : String REGISTERED [androidJvm] const val REGISTERED : String RIGHTCOPY [androidJvm] const val RIGHTCOPY : String RIGHTPRINT [androidJvm] const val RIGHTPRINT : String TABLE_NAME [androidJvm] const val TABLE_NAME : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/-companion/#properties","text":"Name Summary ID [androidJvm] const val ID : String LICENSE_ID [androidJvm] const val LICENSE_ID : String REGISTERED [androidJvm] const val REGISTERED : String RIGHTCOPY [androidJvm] const val RIGHTCOPY : String RIGHTPRINT [androidJvm] const val RIGHTPRINT : String TABLE_NAME [androidJvm] const val TABLE_NAME : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/-companion/-i-d/","text":"// lcp / org.readium.r2.lcp.persistence / License / Companion / ID ID \u00b6 [androidJvm]\\ const val ID : String","title":" i d"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/-companion/-i-d/#id","text":"[androidJvm]\\ const val ID : String","title":"ID"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/-companion/-l-i-c-e-n-s-e_-i-d/","text":"// lcp / org.readium.r2.lcp.persistence / License / Companion / LICENSE_ID LICENSE_ID \u00b6 [androidJvm]\\ const val LICENSE_ID : String","title":" l i c e n s e  i d"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/-companion/-l-i-c-e-n-s-e_-i-d/#license_id","text":"[androidJvm]\\ const val LICENSE_ID : String","title":"LICENSE_ID"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/-companion/-r-e-g-i-s-t-e-r-e-d/","text":"// lcp / org.readium.r2.lcp.persistence / License / Companion / REGISTERED REGISTERED \u00b6 [androidJvm]\\ const val REGISTERED : String","title":" r e g i s t e r e d"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/-companion/-r-e-g-i-s-t-e-r-e-d/#registered","text":"[androidJvm]\\ const val REGISTERED : String","title":"REGISTERED"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/-companion/-r-i-g-h-t-c-o-p-y/","text":"// lcp / org.readium.r2.lcp.persistence / License / Companion / RIGHTCOPY RIGHTCOPY \u00b6 [androidJvm]\\ const val RIGHTCOPY : String","title":" r i g h t c o p y"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/-companion/-r-i-g-h-t-c-o-p-y/#rightcopy","text":"[androidJvm]\\ const val RIGHTCOPY : String","title":"RIGHTCOPY"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/-companion/-r-i-g-h-t-p-r-i-n-t/","text":"// lcp / org.readium.r2.lcp.persistence / License / Companion / RIGHTPRINT RIGHTPRINT \u00b6 [androidJvm]\\ const val RIGHTPRINT : String","title":" r i g h t p r i n t"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/-companion/-r-i-g-h-t-p-r-i-n-t/#rightprint","text":"[androidJvm]\\ const val RIGHTPRINT : String","title":"RIGHTPRINT"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/-companion/-t-a-b-l-e_-n-a-m-e/","text":"// lcp / org.readium.r2.lcp.persistence / License / Companion / TABLE_NAME TABLE_NAME \u00b6 [androidJvm]\\ const val TABLE_NAME : String","title":" t a b l e  n a m e"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-license/-companion/-t-a-b-l-e_-n-a-m-e/#table_name","text":"[androidJvm]\\ const val TABLE_NAME : String","title":"TABLE_NAME"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/","text":"// lcp / org.readium.r2.lcp.persistence / Passphrase Passphrase \u00b6 [androidJvm]\\ data class Passphrase (id: Long ?, licenseId: String ?, provider: String ?, userId: String ?, passphrase: String ) Types \u00b6 Name Summary Companion [androidJvm] object Companion Properties \u00b6 Name Summary id [androidJvm] var id : Long ? = null licenseId [androidJvm] var licenseId : String ? passphrase [androidJvm] val passphrase : String provider [androidJvm] val provider : String ? userId [androidJvm] val userId : String ?","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/#passphrase","text":"[androidJvm]\\ data class Passphrase (id: Long ?, licenseId: String ?, provider: String ?, userId: String ?, passphrase: String )","title":"Passphrase"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/#properties","text":"Name Summary id [androidJvm] var id : Long ? = null licenseId [androidJvm] var licenseId : String ? passphrase [androidJvm] val passphrase : String provider [androidJvm] val provider : String ? userId [androidJvm] val userId : String ?","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/-passphrase/","text":"// lcp / org.readium.r2.lcp.persistence / Passphrase / Passphrase Passphrase \u00b6 [androidJvm]\\ fun Passphrase (id: Long ? = null, licenseId: String ?, provider: String ?, userId: String ?, passphrase: String )","title":" passphrase"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/-passphrase/#passphrase","text":"[androidJvm]\\ fun Passphrase (id: Long ? = null, licenseId: String ?, provider: String ?, userId: String ?, passphrase: String )","title":"Passphrase"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/id/","text":"// lcp / org.readium.r2.lcp.persistence / Passphrase / id id \u00b6 [androidJvm]\\ var id : Long ? = null","title":"Id"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/id/#id","text":"[androidJvm]\\ var id : Long ? = null","title":"id"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/license-id/","text":"// lcp / org.readium.r2.lcp.persistence / Passphrase / licenseId licenseId \u00b6 [androidJvm]\\ var licenseId : String ?","title":"License id"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/license-id/#licenseid","text":"[androidJvm]\\ var licenseId : String ?","title":"licenseId"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/passphrase/","text":"// lcp / org.readium.r2.lcp.persistence / Passphrase / passphrase passphrase \u00b6 [androidJvm]\\ val passphrase : String","title":"Passphrase"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/passphrase/#passphrase","text":"[androidJvm]\\ val passphrase : String","title":"passphrase"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/provider/","text":"// lcp / org.readium.r2.lcp.persistence / Passphrase / provider provider \u00b6 [androidJvm]\\ val provider : String ?","title":"Provider"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/provider/#provider","text":"[androidJvm]\\ val provider : String ?","title":"provider"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/user-id/","text":"// lcp / org.readium.r2.lcp.persistence / Passphrase / userId userId \u00b6 [androidJvm]\\ val userId : String ?","title":"User id"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/user-id/#userid","text":"[androidJvm]\\ val userId : String ?","title":"userId"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/-companion/","text":"// lcp / org.readium.r2.lcp.persistence / Passphrase / Companion Companion \u00b6 [androidJvm]\\ object Companion Properties \u00b6 Name Summary ID [androidJvm] const val ID : String LICENSEID [androidJvm] const val LICENSEID : String PASSPHRASE [androidJvm] const val PASSPHRASE : String PROVIDER [androidJvm] const val PROVIDER : String TABLE_NAME [androidJvm] const val TABLE_NAME : String USERID [androidJvm] const val USERID : String","title":"Index"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/-companion/#properties","text":"Name Summary ID [androidJvm] const val ID : String LICENSEID [androidJvm] const val LICENSEID : String PASSPHRASE [androidJvm] const val PASSPHRASE : String PROVIDER [androidJvm] const val PROVIDER : String TABLE_NAME [androidJvm] const val TABLE_NAME : String USERID [androidJvm] const val USERID : String","title":"Properties"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/-companion/-i-d/","text":"// lcp / org.readium.r2.lcp.persistence / Passphrase / Companion / ID ID \u00b6 [androidJvm]\\ const val ID : String","title":" i d"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/-companion/-i-d/#id","text":"[androidJvm]\\ const val ID : String","title":"ID"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/-companion/-l-i-c-e-n-s-e-i-d/","text":"// lcp / org.readium.r2.lcp.persistence / Passphrase / Companion / LICENSEID LICENSEID \u00b6 [androidJvm]\\ const val LICENSEID : String","title":" l i c e n s e i d"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/-companion/-l-i-c-e-n-s-e-i-d/#licenseid","text":"[androidJvm]\\ const val LICENSEID : String","title":"LICENSEID"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/-companion/-p-a-s-s-p-h-r-a-s-e/","text":"// lcp / org.readium.r2.lcp.persistence / Passphrase / Companion / PASSPHRASE PASSPHRASE \u00b6 [androidJvm]\\ const val PASSPHRASE : String","title":" p a s s p h r a s e"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/-companion/-p-a-s-s-p-h-r-a-s-e/#passphrase","text":"[androidJvm]\\ const val PASSPHRASE : String","title":"PASSPHRASE"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/-companion/-p-r-o-v-i-d-e-r/","text":"// lcp / org.readium.r2.lcp.persistence / Passphrase / Companion / PROVIDER PROVIDER \u00b6 [androidJvm]\\ const val PROVIDER : String","title":" p r o v i d e r"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/-companion/-p-r-o-v-i-d-e-r/#provider","text":"[androidJvm]\\ const val PROVIDER : String","title":"PROVIDER"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/-companion/-t-a-b-l-e_-n-a-m-e/","text":"// lcp / org.readium.r2.lcp.persistence / Passphrase / Companion / TABLE_NAME TABLE_NAME \u00b6 [androidJvm]\\ const val TABLE_NAME : String","title":" t a b l e  n a m e"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/-companion/-t-a-b-l-e_-n-a-m-e/#table_name","text":"[androidJvm]\\ const val TABLE_NAME : String","title":"TABLE_NAME"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/-companion/-u-s-e-r-i-d/","text":"// lcp / org.readium.r2.lcp.persistence / Passphrase / Companion / USERID USERID \u00b6 [androidJvm]\\ const val USERID : String","title":" u s e r i d"},{"location":"readium/lcp/lcp/org.readium.r2.lcp.persistence/-passphrase/-companion/-u-s-e-r-i-d/#userid","text":"[androidJvm]\\ const val USERID : String","title":"USERID"},{"location":"readium/navigator/","text":"// navigator navigator \u00b6 Packages \u00b6 Name org.readium.r2.navigator org.readium.r2.navigator.audio org.readium.r2.navigator.audiobook org.readium.r2.navigator.cbz org.readium.r2.navigator.divina org.readium.r2.navigator.epub org.readium.r2.navigator.epub.extensions org.readium.r2.navigator.epub.fxl org.readium.r2.navigator.extensions org.readium.r2.navigator.html org.readium.r2.navigator.image org.readium.r2.navigator.media org.readium.r2.navigator.media.extensions org.readium.r2.navigator.pager org.readium.r2.navigator.pdf org.readium.r2.navigator.util","title":"Navigator"},{"location":"readium/navigator/#navigator","text":"","title":"navigator"},{"location":"readium/navigator/#packages","text":"Name org.readium.r2.navigator org.readium.r2.navigator.audio org.readium.r2.navigator.audiobook org.readium.r2.navigator.cbz org.readium.r2.navigator.divina org.readium.r2.navigator.epub org.readium.r2.navigator.epub.extensions org.readium.r2.navigator.epub.fxl org.readium.r2.navigator.extensions org.readium.r2.navigator.html org.readium.r2.navigator.image org.readium.r2.navigator.media org.readium.r2.navigator.media.extensions org.readium.r2.navigator.pager org.readium.r2.navigator.pdf org.readium.r2.navigator.util","title":"Packages"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audio/","text":"// navigator / org.readium.r2.navigator.audio Package org.readium.r2.navigator.audio \u00b6","title":"Org.readium.r2.navigator.audio"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audio/#package-orgreadiumr2navigatoraudio","text":"","title":"Package org.readium.r2.navigator.audio"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.extensions/","text":"// navigator / org.readium.r2.navigator.epub.extensions Package org.readium.r2.navigator.epub.extensions \u00b6","title":"Org.readium.r2.navigator.epub.extensions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.extensions/#package-orgreadiumr2navigatorepubextensions","text":"","title":"Package org.readium.r2.navigator.epub.extensions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media.extensions/","text":"// navigator / org.readium.r2.navigator.media.extensions Package org.readium.r2.navigator.media.extensions \u00b6","title":"Org.readium.r2.navigator.media.extensions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media.extensions/#package-orgreadiumr2navigatormediaextensions","text":"","title":"Package org.readium.r2.navigator.media.extensions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/","text":"// navigator / org.readium.r2.navigator Package org.readium.r2.navigator \u00b6 Types \u00b6 Name Summary DecorableNavigator [androidJvm] interface DecorableNavigator : Navigator A navigator able to render arbitrary decorations over a publication. Decoration [androidJvm] data class Decoration (id: DecorationId , locator: Locator , style: Decoration.Style , extras: Bundle ) : JSONable , Parcelable A decoration is a user interface element drawn on top of a publication. It associates a style to be rendered with a discrete locator in the publication. DecorationChange [androidJvm] sealed class DecorationChange Represents an atomic change in a list of Decoration objects. DecorationId [androidJvm] typealias DecorationId = String Unique identifier for a decoration. ExperimentalAudiobook [androidJvm] @ Target (allowedTargets = [ AnnotationTarget.CLASS , AnnotationTarget.FUNCTION , AnnotationTarget.TYPEALIAS , AnnotationTarget.PROPERTY ]) annotation class ExperimentalAudiobook ExperimentalDecorator [androidJvm] @ Target (allowedTargets = [ AnnotationTarget.CLASS , AnnotationTarget.FUNCTION , AnnotationTarget.TYPEALIAS , AnnotationTarget.PROPERTY ]) annotation class ExperimentalDecorator IR2Activity [androidJvm] interface IR2Activity IR2TTS [androidJvm] interface IR2TTS MediaNavigator [androidJvm] interface MediaNavigator : Navigator A navigator rendering an audio or video publication. Navigator [androidJvm] interface Navigator Base interface for a navigator rendering a publication. NavigatorDelegate [androidJvm] interface NavigatorDelegate R2BasicWebView [androidJvm] open class R2BasicWebView (context: Context , attrs: AttributeSet ) : WebView R2WebView [androidJvm] class R2WebView (context: Context , attrs: AttributeSet ) : R2BasicWebView Created by Aferdita Muriqi on 12/2/17. SelectableNavigator [androidJvm] interface SelectableNavigator : Navigator A navigator supporting user selection. Selection [androidJvm] data class Selection (locator: Locator , rect: RectF ?) Represents a user content selection in a navigator. VisualNavigator [androidJvm] interface VisualNavigator : Navigator A navigator rendering the publication visually on-screen. Functions \u00b6 Name Summary changesByHref [androidJvm] suspend fun List < Decoration >. changesByHref (target: List < Decoration >): Map < String , List < DecorationChange >> Lists the atomic changes between the receiver list and the target list of Decoration objects. goLeft [androidJvm] fun VisualNavigator . goLeft (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the left content portion (eg. page) relative to the reading progression direction. goRight [androidJvm] fun VisualNavigator . goRight (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the right content portion (eg. page) relative to the reading progression direction.","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/#package-orgreadiumr2navigator","text":"","title":"Package org.readium.r2.navigator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/#types","text":"Name Summary DecorableNavigator [androidJvm] interface DecorableNavigator : Navigator A navigator able to render arbitrary decorations over a publication. Decoration [androidJvm] data class Decoration (id: DecorationId , locator: Locator , style: Decoration.Style , extras: Bundle ) : JSONable , Parcelable A decoration is a user interface element drawn on top of a publication. It associates a style to be rendered with a discrete locator in the publication. DecorationChange [androidJvm] sealed class DecorationChange Represents an atomic change in a list of Decoration objects. DecorationId [androidJvm] typealias DecorationId = String Unique identifier for a decoration. ExperimentalAudiobook [androidJvm] @ Target (allowedTargets = [ AnnotationTarget.CLASS , AnnotationTarget.FUNCTION , AnnotationTarget.TYPEALIAS , AnnotationTarget.PROPERTY ]) annotation class ExperimentalAudiobook ExperimentalDecorator [androidJvm] @ Target (allowedTargets = [ AnnotationTarget.CLASS , AnnotationTarget.FUNCTION , AnnotationTarget.TYPEALIAS , AnnotationTarget.PROPERTY ]) annotation class ExperimentalDecorator IR2Activity [androidJvm] interface IR2Activity IR2TTS [androidJvm] interface IR2TTS MediaNavigator [androidJvm] interface MediaNavigator : Navigator A navigator rendering an audio or video publication. Navigator [androidJvm] interface Navigator Base interface for a navigator rendering a publication. NavigatorDelegate [androidJvm] interface NavigatorDelegate R2BasicWebView [androidJvm] open class R2BasicWebView (context: Context , attrs: AttributeSet ) : WebView R2WebView [androidJvm] class R2WebView (context: Context , attrs: AttributeSet ) : R2BasicWebView Created by Aferdita Muriqi on 12/2/17. SelectableNavigator [androidJvm] interface SelectableNavigator : Navigator A navigator supporting user selection. Selection [androidJvm] data class Selection (locator: Locator , rect: RectF ?) Represents a user content selection in a navigator. VisualNavigator [androidJvm] interface VisualNavigator : Navigator A navigator rendering the publication visually on-screen.","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/#functions","text":"Name Summary changesByHref [androidJvm] suspend fun List < Decoration >. changesByHref (target: List < Decoration >): Map < String , List < DecorationChange >> Lists the atomic changes between the receiver list and the target list of Decoration objects. goLeft [androidJvm] fun VisualNavigator . goLeft (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the left content portion (eg. page) relative to the reading progression direction. goRight [androidJvm] fun VisualNavigator . goRight (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the right content portion (eg. page) relative to the reading progression direction.","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/changes-by-href/","text":"// navigator / org.readium.r2.navigator / changesByHref changesByHref \u00b6 [androidJvm]\\ suspend fun List < Decoration >. changesByHref (target: List < Decoration >): Map < String , List < DecorationChange >> Lists the atomic changes between the receiver list and the target list of Decoration objects. The changes need to be applied in the same order, one by one.","title":"Changes by href"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/changes-by-href/#changesbyhref","text":"[androidJvm]\\ suspend fun List < Decoration >. changesByHref (target: List < Decoration >): Map < String , List < DecorationChange >> Lists the atomic changes between the receiver list and the target list of Decoration objects. The changes need to be applied in the same order, one by one.","title":"changesByHref"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/go-left/","text":"// navigator / org.readium.r2.navigator / goLeft goLeft \u00b6 [androidJvm]\\ fun VisualNavigator . goLeft (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the left content portion (eg. page) relative to the reading progression direction.","title":"Go left"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/go-left/#goleft","text":"[androidJvm]\\ fun VisualNavigator . goLeft (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the left content portion (eg. page) relative to the reading progression direction.","title":"goLeft"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/go-right/","text":"// navigator / org.readium.r2.navigator / goRight goRight \u00b6 [androidJvm]\\ fun VisualNavigator . goRight (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the right content portion (eg. page) relative to the reading progression direction.","title":"Go right"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/go-right/#goright","text":"[androidJvm]\\ fun VisualNavigator . goRight (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the right content portion (eg. page) relative to the reading progression direction.","title":"goRight"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/","text":"// navigator / org.readium.r2.navigator / DecorableNavigator DecorableNavigator \u00b6 [androidJvm]\\ interface DecorableNavigator : Navigator A navigator able to render arbitrary decorations over a publication. Types \u00b6 Name Summary Listener [androidJvm] interface Listener OnActivatedEvent [androidJvm] data class OnActivatedEvent (decoration: Decoration , group: String , rect: RectF ?, point: PointF ?) Holds the metadata about a decoration activation interaction. Functions \u00b6 Name Summary addDecorationListener [androidJvm] abstract fun addDecorationListener (group: String , listener: DecorableNavigator.Listener ) Registers a new listener for decoration interactions in the given group . applyDecorations [androidJvm] abstract suspend fun applyDecorations (decorations: List < Decoration >, group: String ) Declares the current state of the decorations in the given decoration group . go [androidJvm] abstract fun go (link: Link , animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the position in the publication targeted by the given link. [androidJvm] abstract fun go (locator: Locator , animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the position in the publication corresponding to the given Locator . goBackward [androidJvm] abstract fun goBackward (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the previous content portion (eg. page) in the reading progression direction. goForward [androidJvm] abstract fun goForward (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the next content portion (eg. page) in the reading progression direction. removeDecorationListener [androidJvm] abstract fun removeDecorationListener (listener: DecorableNavigator.Listener ) Removes the given listener for all decoration interactions. supportsDecorationStyle [androidJvm] abstract fun < T : Decoration.Style > supportsDecorationStyle (style: KClass < T >): Boolean Indicates whether the Navigator supports the given decoration style class. Properties \u00b6 Name Summary currentLocator [androidJvm] abstract val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position. publication [androidJvm] abstract val publication : Publication Publication rendered by this navigator. Inheritors \u00b6 Name EpubNavigatorFragment","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/#decorablenavigator","text":"[androidJvm]\\ interface DecorableNavigator : Navigator A navigator able to render arbitrary decorations over a publication.","title":"DecorableNavigator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/#types","text":"Name Summary Listener [androidJvm] interface Listener OnActivatedEvent [androidJvm] data class OnActivatedEvent (decoration: Decoration , group: String , rect: RectF ?, point: PointF ?) Holds the metadata about a decoration activation interaction.","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/#functions","text":"Name Summary addDecorationListener [androidJvm] abstract fun addDecorationListener (group: String , listener: DecorableNavigator.Listener ) Registers a new listener for decoration interactions in the given group . applyDecorations [androidJvm] abstract suspend fun applyDecorations (decorations: List < Decoration >, group: String ) Declares the current state of the decorations in the given decoration group . go [androidJvm] abstract fun go (link: Link , animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the position in the publication targeted by the given link. [androidJvm] abstract fun go (locator: Locator , animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the position in the publication corresponding to the given Locator . goBackward [androidJvm] abstract fun goBackward (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the previous content portion (eg. page) in the reading progression direction. goForward [androidJvm] abstract fun goForward (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the next content portion (eg. page) in the reading progression direction. removeDecorationListener [androidJvm] abstract fun removeDecorationListener (listener: DecorableNavigator.Listener ) Removes the given listener for all decoration interactions. supportsDecorationStyle [androidJvm] abstract fun < T : Decoration.Style > supportsDecorationStyle (style: KClass < T >): Boolean Indicates whether the Navigator supports the given decoration style class.","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/#properties","text":"Name Summary currentLocator [androidJvm] abstract val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position. publication [androidJvm] abstract val publication : Publication Publication rendered by this navigator.","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/#inheritors","text":"Name EpubNavigatorFragment","title":"Inheritors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/add-decoration-listener/","text":"// navigator / org.readium.r2.navigator / DecorableNavigator / addDecorationListener addDecorationListener \u00b6 [androidJvm]\\ abstract fun addDecorationListener (group: String , listener: DecorableNavigator.Listener ) Registers a new listener for decoration interactions in the given group .","title":"Add decoration listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/add-decoration-listener/#adddecorationlistener","text":"[androidJvm]\\ abstract fun addDecorationListener (group: String , listener: DecorableNavigator.Listener ) Registers a new listener for decoration interactions in the given group .","title":"addDecorationListener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/apply-decorations/","text":"// navigator / org.readium.r2.navigator / DecorableNavigator / applyDecorations applyDecorations \u00b6 [androidJvm]\\ abstract suspend fun applyDecorations (decorations: List < Decoration >, group: String ) Declares the current state of the decorations in the given decoration group . The Navigator will decide when to actually render each decoration efficiently. Your only responsibility is to submit the updated list of decorations when there are changes. Name each decoration group as you see fit. A good practice is to use the name of the feature requiring decorations, e.g. annotation, search, tts, etc.","title":"Apply decorations"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/apply-decorations/#applydecorations","text":"[androidJvm]\\ abstract suspend fun applyDecorations (decorations: List < Decoration >, group: String ) Declares the current state of the decorations in the given decoration group . The Navigator will decide when to actually render each decoration efficiently. Your only responsibility is to submit the updated list of decorations when there are changes. Name each decoration group as you see fit. A good practice is to use the name of the feature requiring decorations, e.g. annotation, search, tts, etc.","title":"applyDecorations"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/remove-decoration-listener/","text":"// navigator / org.readium.r2.navigator / DecorableNavigator / removeDecorationListener removeDecorationListener \u00b6 [androidJvm]\\ abstract fun removeDecorationListener (listener: DecorableNavigator.Listener ) Removes the given listener for all decoration interactions.","title":"Remove decoration listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/remove-decoration-listener/#removedecorationlistener","text":"[androidJvm]\\ abstract fun removeDecorationListener (listener: DecorableNavigator.Listener ) Removes the given listener for all decoration interactions.","title":"removeDecorationListener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/supports-decoration-style/","text":"// navigator / org.readium.r2.navigator / DecorableNavigator / supportsDecorationStyle supportsDecorationStyle \u00b6 [androidJvm]\\ abstract fun < T : Decoration.Style > supportsDecorationStyle (style: KClass < T >): Boolean Indicates whether the Navigator supports the given decoration style class. You should check whether the Navigator supports drawing the decoration styles required by a particular feature before enabling it. For example, underlining an audiobook does not make sense, so an Audiobook Navigator would not support the underline decoration style.","title":"Supports decoration style"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/supports-decoration-style/#supportsdecorationstyle","text":"[androidJvm]\\ abstract fun < T : Decoration.Style > supportsDecorationStyle (style: KClass < T >): Boolean Indicates whether the Navigator supports the given decoration style class. You should check whether the Navigator supports drawing the decoration styles required by a particular feature before enabling it. For example, underlining an audiobook does not make sense, so an Audiobook Navigator would not support the underline decoration style.","title":"supportsDecorationStyle"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/-listener/","text":"// navigator / org.readium.r2.navigator / DecorableNavigator / Listener Listener \u00b6 [androidJvm]\\ interface Listener Functions \u00b6 Name Summary onDecorationActivated [androidJvm] abstract fun onDecorationActivated (event: DecorableNavigator.OnActivatedEvent ): Boolean Called when the user activates a decoration, e.g. with a click or tap.","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/-listener/#listener","text":"[androidJvm]\\ interface Listener","title":"Listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/-listener/#functions","text":"Name Summary onDecorationActivated [androidJvm] abstract fun onDecorationActivated (event: DecorableNavigator.OnActivatedEvent ): Boolean Called when the user activates a decoration, e.g. with a click or tap.","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/-listener/on-decoration-activated/","text":"// navigator / org.readium.r2.navigator / DecorableNavigator / Listener / onDecorationActivated onDecorationActivated \u00b6 [androidJvm]\\ abstract fun onDecorationActivated (event: DecorableNavigator.OnActivatedEvent ): Boolean Called when the user activates a decoration, e.g. with a click or tap. Return \u00b6 Whether the listener handled the interaction. Parameters \u00b6 androidJvm event Holds the metadata about the interaction event.","title":"On decoration activated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/-listener/on-decoration-activated/#ondecorationactivated","text":"[androidJvm]\\ abstract fun onDecorationActivated (event: DecorableNavigator.OnActivatedEvent ): Boolean Called when the user activates a decoration, e.g. with a click or tap.","title":"onDecorationActivated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/-listener/on-decoration-activated/#return","text":"Whether the listener handled the interaction.","title":"Return"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/-listener/on-decoration-activated/#parameters","text":"androidJvm event Holds the metadata about the interaction event.","title":"Parameters"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/-on-activated-event/","text":"// navigator / org.readium.r2.navigator / DecorableNavigator / OnActivatedEvent OnActivatedEvent \u00b6 [androidJvm]\\ data class OnActivatedEvent (decoration: Decoration , group: String , rect: RectF ?, point: PointF ?) Holds the metadata about a decoration activation interaction. Parameters \u00b6 androidJvm decoration Activated decoration. group Name of the group the decoration belongs to. rect Frame of the bounding rect for the decoration, in the coordinate of the navigator view. This is only useful in the context of a VisualNavigator. point Event point of the interaction, in the coordinate of the navigator view. This is only useful in the context of a VisualNavigator. Constructors \u00b6 OnActivatedEvent [androidJvm] fun OnActivatedEvent (decoration: Decoration , group: String , rect: RectF ? = null, point: PointF ? = null) Properties \u00b6 Name Summary decoration [androidJvm] val decoration : Decoration group [androidJvm] val group : String point [androidJvm] val point : PointF ? = null rect [androidJvm] val rect : RectF ? = null","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/-on-activated-event/#onactivatedevent","text":"[androidJvm]\\ data class OnActivatedEvent (decoration: Decoration , group: String , rect: RectF ?, point: PointF ?) Holds the metadata about a decoration activation interaction.","title":"OnActivatedEvent"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/-on-activated-event/#parameters","text":"androidJvm decoration Activated decoration. group Name of the group the decoration belongs to. rect Frame of the bounding rect for the decoration, in the coordinate of the navigator view. This is only useful in the context of a VisualNavigator. point Event point of the interaction, in the coordinate of the navigator view. This is only useful in the context of a VisualNavigator.","title":"Parameters"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/-on-activated-event/#constructors","text":"OnActivatedEvent [androidJvm] fun OnActivatedEvent (decoration: Decoration , group: String , rect: RectF ? = null, point: PointF ? = null)","title":"Constructors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/-on-activated-event/#properties","text":"Name Summary decoration [androidJvm] val decoration : Decoration group [androidJvm] val group : String point [androidJvm] val point : PointF ? = null rect [androidJvm] val rect : RectF ? = null","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/-on-activated-event/-on-activated-event/","text":"// navigator / org.readium.r2.navigator / DecorableNavigator / OnActivatedEvent / OnActivatedEvent OnActivatedEvent \u00b6 [androidJvm]\\ fun OnActivatedEvent (decoration: Decoration , group: String , rect: RectF ? = null, point: PointF ? = null) Parameters \u00b6 androidJvm decoration Activated decoration. group Name of the group the decoration belongs to. rect Frame of the bounding rect for the decoration, in the coordinate of the navigator view. This is only useful in the context of a VisualNavigator. point Event point of the interaction, in the coordinate of the navigator view. This is only useful in the context of a VisualNavigator.","title":" on activated event"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/-on-activated-event/-on-activated-event/#onactivatedevent","text":"[androidJvm]\\ fun OnActivatedEvent (decoration: Decoration , group: String , rect: RectF ? = null, point: PointF ? = null)","title":"OnActivatedEvent"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/-on-activated-event/-on-activated-event/#parameters","text":"androidJvm decoration Activated decoration. group Name of the group the decoration belongs to. rect Frame of the bounding rect for the decoration, in the coordinate of the navigator view. This is only useful in the context of a VisualNavigator. point Event point of the interaction, in the coordinate of the navigator view. This is only useful in the context of a VisualNavigator.","title":"Parameters"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/-on-activated-event/decoration/","text":"// navigator / org.readium.r2.navigator / DecorableNavigator / OnActivatedEvent / decoration decoration \u00b6 [androidJvm]\\ val decoration : Decoration","title":"Decoration"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/-on-activated-event/decoration/#decoration","text":"[androidJvm]\\ val decoration : Decoration","title":"decoration"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/-on-activated-event/group/","text":"// navigator / org.readium.r2.navigator / DecorableNavigator / OnActivatedEvent / group group \u00b6 [androidJvm]\\ val group : String","title":"Group"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/-on-activated-event/group/#group","text":"[androidJvm]\\ val group : String","title":"group"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/-on-activated-event/point/","text":"// navigator / org.readium.r2.navigator / DecorableNavigator / OnActivatedEvent / point point \u00b6 [androidJvm]\\ val point : PointF ? = null","title":"Point"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/-on-activated-event/point/#point","text":"[androidJvm]\\ val point : PointF ? = null","title":"point"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/-on-activated-event/rect/","text":"// navigator / org.readium.r2.navigator / DecorableNavigator / OnActivatedEvent / rect rect \u00b6 [androidJvm]\\ val rect : RectF ? = null","title":"Rect"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decorable-navigator/-on-activated-event/rect/#rect","text":"[androidJvm]\\ val rect : RectF ? = null","title":"rect"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/","text":"// navigator / org.readium.r2.navigator / Decoration Decoration \u00b6 [androidJvm]\\ data class Decoration (id: DecorationId , locator: Locator , style: Decoration.Style , extras: Bundle ) : JSONable , Parcelable A decoration is a user interface element drawn on top of a publication. It associates a style to be rendered with a discrete locator in the publication. For example, decorations can be used to draw highlights, images or buttons. Parameters \u00b6 androidJvm id An identifier for this decoration. It must be unique in the group the decoration is applied to. locator Location in the publication where the decoration will be rendered. style Declares the look and feel of the decoration. extras Additional context data specific to a reading app. Readium does not use it. Constructors \u00b6 Decoration [androidJvm] fun Decoration (id: DecorationId , locator: Locator , style: Decoration.Style , extras: Bundle = Bundle()) Types \u00b6 Name Summary Style [androidJvm] interface Style : Parcelable The Decoration Style determines the look and feel of a decoration once rendered by a Navigator. Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary extras [androidJvm] val extras : Bundle id [androidJvm] val id : DecorationId locator [androidJvm] val locator : Locator style [androidJvm] val style : Decoration.Style","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/#decoration","text":"[androidJvm]\\ data class Decoration (id: DecorationId , locator: Locator , style: Decoration.Style , extras: Bundle ) : JSONable , Parcelable A decoration is a user interface element drawn on top of a publication. It associates a style to be rendered with a discrete locator in the publication. For example, decorations can be used to draw highlights, images or buttons.","title":"Decoration"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/#parameters","text":"androidJvm id An identifier for this decoration. It must be unique in the group the decoration is applied to. locator Location in the publication where the decoration will be rendered. style Declares the look and feel of the decoration. extras Additional context data specific to a reading app. Readium does not use it.","title":"Parameters"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/#constructors","text":"Decoration [androidJvm] fun Decoration (id: DecorationId , locator: Locator , style: Decoration.Style , extras: Bundle = Bundle())","title":"Constructors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/#types","text":"Name Summary Style [androidJvm] interface Style : Parcelable The Decoration Style determines the look and feel of a decoration once rendered by a Navigator.","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/#properties","text":"Name Summary extras [androidJvm] val extras : Bundle id [androidJvm] val id : DecorationId locator [androidJvm] val locator : Locator style [androidJvm] val style : Decoration.Style","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-decoration/","text":"// navigator / org.readium.r2.navigator / Decoration / Decoration Decoration \u00b6 [androidJvm]\\ fun Decoration (id: DecorationId , locator: Locator , style: Decoration.Style , extras: Bundle = Bundle()) Parameters \u00b6 androidJvm id An identifier for this decoration. It must be unique in the group the decoration is applied to. locator Location in the publication where the decoration will be rendered. style Declares the look and feel of the decoration. extras Additional context data specific to a reading app. Readium does not use it.","title":" decoration"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-decoration/#decoration","text":"[androidJvm]\\ fun Decoration (id: DecorationId , locator: Locator , style: Decoration.Style , extras: Bundle = Bundle())","title":"Decoration"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-decoration/#parameters","text":"androidJvm id An identifier for this decoration. It must be unique in the group the decoration is applied to. locator Location in the publication where the decoration will be rendered. style Declares the look and feel of the decoration. extras Additional context data specific to a reading app. Readium does not use it.","title":"Parameters"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/extras/","text":"// navigator / org.readium.r2.navigator / Decoration / extras extras \u00b6 [androidJvm]\\ val extras : Bundle","title":"Extras"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/extras/#extras","text":"[androidJvm]\\ val extras : Bundle","title":"extras"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/id/","text":"// navigator / org.readium.r2.navigator / Decoration / id id \u00b6 [androidJvm]\\ val id : DecorationId","title":"Id"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/id/#id","text":"[androidJvm]\\ val id : DecorationId","title":"id"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/locator/","text":"// navigator / org.readium.r2.navigator / Decoration / locator locator \u00b6 [androidJvm]\\ val locator : Locator","title":"Locator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/locator/#locator","text":"[androidJvm]\\ val locator : Locator","title":"locator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/style/","text":"// navigator / org.readium.r2.navigator / Decoration / style style \u00b6 [androidJvm]\\ val style : Decoration.Style","title":"Style"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/style/#style","text":"[androidJvm]\\ val style : Decoration.Style","title":"style"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/to-j-s-o-n/","text":"// navigator / org.readium.r2.navigator / Decoration / toJSON toJSON \u00b6 [androidJvm]\\ open override fun toJSON (): JSONObject","title":"To j s o n"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/to-j-s-o-n/#tojson","text":"[androidJvm]\\ open override fun toJSON (): JSONObject","title":"toJSON"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/","text":"// navigator / org.readium.r2.navigator / Decoration / Style Style \u00b6 [androidJvm]\\ interface Style : Parcelable The Decoration Style determines the look and feel of a decoration once rendered by a Navigator. It is media type agnostic, meaning that each Navigator will translate the style into a set of rendering instructions which makes sense for the resource type. Types \u00b6 Name Summary Activable [androidJvm] interface Activable A type of Style which can be in an \"active\" state. Highlight [androidJvm] data class Highlight (@ ColorInt tint: Int , isActive: Boolean ) : Decoration.Style , Decoration.Style.Tinted , Decoration.Style.Activable Tinted [androidJvm] interface Tinted A type of Style which has a tint color. Underline [androidJvm] data class Underline (@ ColorInt tint: Int , isActive: Boolean ) : Decoration.Style , Decoration.Style.Tinted , Decoration.Style.Activable Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Inheritors \u00b6 Name Decoration.Style Decoration.Style","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/#style","text":"[androidJvm]\\ interface Style : Parcelable The Decoration Style determines the look and feel of a decoration once rendered by a Navigator. It is media type agnostic, meaning that each Navigator will translate the style into a set of rendering instructions which makes sense for the resource type.","title":"Style"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/#types","text":"Name Summary Activable [androidJvm] interface Activable A type of Style which can be in an \"active\" state. Highlight [androidJvm] data class Highlight (@ ColorInt tint: Int , isActive: Boolean ) : Decoration.Style , Decoration.Style.Tinted , Decoration.Style.Activable Tinted [androidJvm] interface Tinted A type of Style which has a tint color. Underline [androidJvm] data class Underline (@ ColorInt tint: Int , isActive: Boolean ) : Decoration.Style , Decoration.Style.Tinted , Decoration.Style.Activable","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/#inheritors","text":"Name Decoration.Style Decoration.Style","title":"Inheritors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-activable/","text":"// navigator / org.readium.r2.navigator / Decoration / Style / Activable Activable \u00b6 [androidJvm]\\ interface Activable A type of Style which can be in an \"active\" state. Properties \u00b6 Name Summary isActive [androidJvm] abstract val isActive : Boolean Inheritors \u00b6 Name Decoration.Style Decoration.Style","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-activable/#activable","text":"[androidJvm]\\ interface Activable A type of Style which can be in an \"active\" state.","title":"Activable"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-activable/#properties","text":"Name Summary isActive [androidJvm] abstract val isActive : Boolean","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-activable/#inheritors","text":"Name Decoration.Style Decoration.Style","title":"Inheritors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-activable/is-active/","text":"// navigator / org.readium.r2.navigator / Decoration / Style / Activable / isActive isActive \u00b6 [androidJvm]\\ abstract val isActive : Boolean","title":"Is active"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-activable/is-active/#isactive","text":"[androidJvm]\\ abstract val isActive : Boolean","title":"isActive"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-highlight/","text":"// navigator / org.readium.r2.navigator / Decoration / Style / Highlight Highlight \u00b6 [androidJvm]\\ data class Highlight (@ ColorInt tint: Int , isActive: Boolean ) : Decoration.Style , Decoration.Style.Tinted , Decoration.Style.Activable Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary isActive [androidJvm] open override val isActive : Boolean = false tint [androidJvm] open override val tint : Int","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-highlight/#highlight","text":"[androidJvm]\\ data class Highlight (@ ColorInt tint: Int , isActive: Boolean ) : Decoration.Style , Decoration.Style.Tinted , Decoration.Style.Activable","title":"Highlight"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-highlight/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-highlight/#properties","text":"Name Summary isActive [androidJvm] open override val isActive : Boolean = false tint [androidJvm] open override val tint : Int","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-highlight/-highlight/","text":"// navigator / org.readium.r2.navigator / Decoration / Style / Highlight / Highlight Highlight \u00b6 [androidJvm]\\ fun Highlight (@ ColorInt tint: Int , isActive: Boolean = false)","title":" highlight"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-highlight/-highlight/#highlight","text":"[androidJvm]\\ fun Highlight (@ ColorInt tint: Int , isActive: Boolean = false)","title":"Highlight"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-highlight/is-active/","text":"// navigator / org.readium.r2.navigator / Decoration / Style / Highlight / isActive isActive \u00b6 [androidJvm]\\ open override val isActive : Boolean = false","title":"Is active"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-highlight/is-active/#isactive","text":"[androidJvm]\\ open override val isActive : Boolean = false","title":"isActive"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-highlight/tint/","text":"// navigator / org.readium.r2.navigator / Decoration / Style / Highlight / tint tint \u00b6 [androidJvm]\\ open override val tint : Int","title":"Tint"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-highlight/tint/#tint","text":"[androidJvm]\\ open override val tint : Int","title":"tint"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-tinted/","text":"// navigator / org.readium.r2.navigator / Decoration / Style / Tinted Tinted \u00b6 [androidJvm]\\ interface Tinted A type of Style which has a tint color. Properties \u00b6 Name Summary tint [androidJvm] @get: ColorInt abstract val tint : Int Inheritors \u00b6 Name Decoration.Style Decoration.Style","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-tinted/#tinted","text":"[androidJvm]\\ interface Tinted A type of Style which has a tint color.","title":"Tinted"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-tinted/#properties","text":"Name Summary tint [androidJvm] @get: ColorInt abstract val tint : Int","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-tinted/#inheritors","text":"Name Decoration.Style Decoration.Style","title":"Inheritors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-tinted/tint/","text":"// navigator / org.readium.r2.navigator / Decoration / Style / Tinted / tint tint \u00b6 [androidJvm]\\ @get: ColorInt abstract val tint : Int","title":"Tint"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-tinted/tint/#tint","text":"[androidJvm]\\ @get: ColorInt abstract val tint : Int","title":"tint"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-underline/","text":"// navigator / org.readium.r2.navigator / Decoration / Style / Underline Underline \u00b6 [androidJvm]\\ data class Underline (@ ColorInt tint: Int , isActive: Boolean ) : Decoration.Style , Decoration.Style.Tinted , Decoration.Style.Activable Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary isActive [androidJvm] open override val isActive : Boolean = false tint [androidJvm] open override val tint : Int","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-underline/#underline","text":"[androidJvm]\\ data class Underline (@ ColorInt tint: Int , isActive: Boolean ) : Decoration.Style , Decoration.Style.Tinted , Decoration.Style.Activable","title":"Underline"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-underline/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-underline/#properties","text":"Name Summary isActive [androidJvm] open override val isActive : Boolean = false tint [androidJvm] open override val tint : Int","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-underline/-underline/","text":"// navigator / org.readium.r2.navigator / Decoration / Style / Underline / Underline Underline \u00b6 [androidJvm]\\ fun Underline (@ ColorInt tint: Int , isActive: Boolean = false)","title":" underline"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-underline/-underline/#underline","text":"[androidJvm]\\ fun Underline (@ ColorInt tint: Int , isActive: Boolean = false)","title":"Underline"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-underline/is-active/","text":"// navigator / org.readium.r2.navigator / Decoration / Style / Underline / isActive isActive \u00b6 [androidJvm]\\ open override val isActive : Boolean = false","title":"Is active"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-underline/is-active/#isactive","text":"[androidJvm]\\ open override val isActive : Boolean = false","title":"isActive"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-underline/tint/","text":"// navigator / org.readium.r2.navigator / Decoration / Style / Underline / tint tint \u00b6 [androidJvm]\\ open override val tint : Int","title":"Tint"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration/-style/-underline/tint/#tint","text":"[androidJvm]\\ open override val tint : Int","title":"tint"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/","text":"// navigator / org.readium.r2.navigator / DecorationChange DecorationChange \u00b6 [androidJvm]\\ sealed class DecorationChange Represents an atomic change in a list of Decoration objects. Types \u00b6 Name Summary Added [androidJvm] data class Added (decoration: Decoration ) : DecorationChange Moved [androidJvm] data class Moved (id: DecorationId , fromPosition: Int , toPosition: Int ) : DecorationChange Removed [androidJvm] data class Removed (id: DecorationId ) : DecorationChange Updated [androidJvm] data class Updated (decoration: Decoration ) : DecorationChange Inheritors \u00b6 Name DecorationChange DecorationChange DecorationChange DecorationChange","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/#decorationchange","text":"[androidJvm]\\ sealed class DecorationChange Represents an atomic change in a list of Decoration objects.","title":"DecorationChange"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/#types","text":"Name Summary Added [androidJvm] data class Added (decoration: Decoration ) : DecorationChange Moved [androidJvm] data class Moved (id: DecorationId , fromPosition: Int , toPosition: Int ) : DecorationChange Removed [androidJvm] data class Removed (id: DecorationId ) : DecorationChange Updated [androidJvm] data class Updated (decoration: Decoration ) : DecorationChange","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/#inheritors","text":"Name DecorationChange DecorationChange DecorationChange DecorationChange","title":"Inheritors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-added/","text":"// navigator / org.readium.r2.navigator / DecorationChange / Added Added \u00b6 [androidJvm]\\ data class Added (decoration: Decoration ) : DecorationChange Properties \u00b6 Name Summary decoration [androidJvm] val decoration : Decoration","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-added/#added","text":"[androidJvm]\\ data class Added (decoration: Decoration ) : DecorationChange","title":"Added"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-added/#properties","text":"Name Summary decoration [androidJvm] val decoration : Decoration","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-added/-added/","text":"// navigator / org.readium.r2.navigator / DecorationChange / Added / Added Added \u00b6 [androidJvm]\\ fun Added (decoration: Decoration )","title":" added"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-added/-added/#added","text":"[androidJvm]\\ fun Added (decoration: Decoration )","title":"Added"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-added/decoration/","text":"// navigator / org.readium.r2.navigator / DecorationChange / Added / decoration decoration \u00b6 [androidJvm]\\ val decoration : Decoration","title":"Decoration"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-added/decoration/#decoration","text":"[androidJvm]\\ val decoration : Decoration","title":"decoration"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-moved/","text":"// navigator / org.readium.r2.navigator / DecorationChange / Moved Moved \u00b6 [androidJvm]\\ data class Moved (id: DecorationId , fromPosition: Int , toPosition: Int ) : DecorationChange Properties \u00b6 Name Summary fromPosition [androidJvm] val fromPosition : Int id [androidJvm] val id : DecorationId toPosition [androidJvm] val toPosition : Int","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-moved/#moved","text":"[androidJvm]\\ data class Moved (id: DecorationId , fromPosition: Int , toPosition: Int ) : DecorationChange","title":"Moved"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-moved/#properties","text":"Name Summary fromPosition [androidJvm] val fromPosition : Int id [androidJvm] val id : DecorationId toPosition [androidJvm] val toPosition : Int","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-moved/-moved/","text":"// navigator / org.readium.r2.navigator / DecorationChange / Moved / Moved Moved \u00b6 [androidJvm]\\ fun Moved (id: DecorationId , fromPosition: Int , toPosition: Int )","title":" moved"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-moved/-moved/#moved","text":"[androidJvm]\\ fun Moved (id: DecorationId , fromPosition: Int , toPosition: Int )","title":"Moved"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-moved/from-position/","text":"// navigator / org.readium.r2.navigator / DecorationChange / Moved / fromPosition fromPosition \u00b6 [androidJvm]\\ val fromPosition : Int","title":"From position"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-moved/from-position/#fromposition","text":"[androidJvm]\\ val fromPosition : Int","title":"fromPosition"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-moved/id/","text":"// navigator / org.readium.r2.navigator / DecorationChange / Moved / id id \u00b6 [androidJvm]\\ val id : DecorationId","title":"Id"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-moved/id/#id","text":"[androidJvm]\\ val id : DecorationId","title":"id"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-moved/to-position/","text":"// navigator / org.readium.r2.navigator / DecorationChange / Moved / toPosition toPosition \u00b6 [androidJvm]\\ val toPosition : Int","title":"To position"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-moved/to-position/#toposition","text":"[androidJvm]\\ val toPosition : Int","title":"toPosition"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-removed/","text":"// navigator / org.readium.r2.navigator / DecorationChange / Removed Removed \u00b6 [androidJvm]\\ data class Removed (id: DecorationId ) : DecorationChange Properties \u00b6 Name Summary id [androidJvm] val id : DecorationId","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-removed/#removed","text":"[androidJvm]\\ data class Removed (id: DecorationId ) : DecorationChange","title":"Removed"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-removed/#properties","text":"Name Summary id [androidJvm] val id : DecorationId","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-removed/-removed/","text":"// navigator / org.readium.r2.navigator / DecorationChange / Removed / Removed Removed \u00b6 [androidJvm]\\ fun Removed (id: DecorationId )","title":" removed"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-removed/-removed/#removed","text":"[androidJvm]\\ fun Removed (id: DecorationId )","title":"Removed"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-removed/id/","text":"// navigator / org.readium.r2.navigator / DecorationChange / Removed / id id \u00b6 [androidJvm]\\ val id : DecorationId","title":"Id"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-removed/id/#id","text":"[androidJvm]\\ val id : DecorationId","title":"id"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-updated/","text":"// navigator / org.readium.r2.navigator / DecorationChange / Updated Updated \u00b6 [androidJvm]\\ data class Updated (decoration: Decoration ) : DecorationChange Properties \u00b6 Name Summary decoration [androidJvm] val decoration : Decoration","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-updated/#updated","text":"[androidJvm]\\ data class Updated (decoration: Decoration ) : DecorationChange","title":"Updated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-updated/#properties","text":"Name Summary decoration [androidJvm] val decoration : Decoration","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-updated/-updated/","text":"// navigator / org.readium.r2.navigator / DecorationChange / Updated / Updated Updated \u00b6 [androidJvm]\\ fun Updated (decoration: Decoration )","title":" updated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-updated/-updated/#updated","text":"[androidJvm]\\ fun Updated (decoration: Decoration )","title":"Updated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-updated/decoration/","text":"// navigator / org.readium.r2.navigator / DecorationChange / Updated / decoration decoration \u00b6 [androidJvm]\\ val decoration : Decoration","title":"Decoration"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-decoration-change/-updated/decoration/#decoration","text":"[androidJvm]\\ val decoration : Decoration","title":"decoration"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-experimental-audiobook/","text":"// navigator / org.readium.r2.navigator / ExperimentalAudiobook ExperimentalAudiobook \u00b6 [androidJvm]\\ @ Target (allowedTargets = [ AnnotationTarget.CLASS , AnnotationTarget.FUNCTION , AnnotationTarget.TYPEALIAS , AnnotationTarget.PROPERTY ]) annotation class ExperimentalAudiobook","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-experimental-audiobook/#experimentalaudiobook","text":"[androidJvm]\\ @ Target (allowedTargets = [ AnnotationTarget.CLASS , AnnotationTarget.FUNCTION , AnnotationTarget.TYPEALIAS , AnnotationTarget.PROPERTY ]) annotation class ExperimentalAudiobook","title":"ExperimentalAudiobook"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-experimental-audiobook/-experimental-audiobook/","text":"// navigator / org.readium.r2.navigator / ExperimentalAudiobook / ExperimentalAudiobook ExperimentalAudiobook \u00b6 [androidJvm]\\ fun ExperimentalAudiobook ()","title":" experimental audiobook"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-experimental-audiobook/-experimental-audiobook/#experimentalaudiobook","text":"[androidJvm]\\ fun ExperimentalAudiobook ()","title":"ExperimentalAudiobook"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-experimental-decorator/","text":"// navigator / org.readium.r2.navigator / ExperimentalDecorator ExperimentalDecorator \u00b6 [androidJvm]\\ @ Target (allowedTargets = [ AnnotationTarget.CLASS , AnnotationTarget.FUNCTION , AnnotationTarget.TYPEALIAS , AnnotationTarget.PROPERTY ]) annotation class ExperimentalDecorator","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-experimental-decorator/#experimentaldecorator","text":"[androidJvm]\\ @ Target (allowedTargets = [ AnnotationTarget.CLASS , AnnotationTarget.FUNCTION , AnnotationTarget.TYPEALIAS , AnnotationTarget.PROPERTY ]) annotation class ExperimentalDecorator","title":"ExperimentalDecorator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-experimental-decorator/-experimental-decorator/","text":"// navigator / org.readium.r2.navigator / ExperimentalDecorator / ExperimentalDecorator ExperimentalDecorator \u00b6 [androidJvm]\\ fun ExperimentalDecorator ()","title":" experimental decorator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-experimental-decorator/-experimental-decorator/#experimentaldecorator","text":"[androidJvm]\\ fun ExperimentalDecorator ()","title":"ExperimentalDecorator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/","text":"// navigator / org.readium.r2.navigator / IR2Activity IR2Activity \u00b6 [androidJvm]\\ interface IR2Activity Functions \u00b6 Name Summary highlightActivated [androidJvm] open fun highlightActivated (id: String ) highlightAnnotationMarkActivated [androidJvm] open fun highlightAnnotationMarkActivated (id: String ) nextResource [androidJvm] open fun nextResource (v: View ? = null) onPageChanged [androidJvm] open fun onPageChanged (pageIndex: Int , totalPages: Int , url: String ) onPageEnded [androidJvm] open fun onPageEnded (end: Boolean ) onPageLoaded [androidJvm] open fun onPageLoaded () previousResource [androidJvm] open fun previousResource (v: View ? = null) toggleActionBar [androidJvm] open fun toggleActionBar () open fun toggleActionBar (v: View ? = null) Properties \u00b6 Name Summary allowToggleActionBar [androidJvm] open val allowToggleActionBar : Boolean bookId [androidJvm] abstract val bookId : Long preferences [androidJvm] abstract val preferences : SharedPreferences publication [androidJvm] abstract val publication : Publication publicationFileName [androidJvm] abstract val publicationFileName : String publicationIdentifier [androidJvm] abstract val publicationIdentifier : String publicationPath [androidJvm] abstract val publicationPath : String resourcePager [androidJvm] open val resourcePager : R2ViewPager ? Inheritors \u00b6 Name R2AudiobookActivity R2CbzActivity R2DiViNaActivity R2EpubActivity","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/#ir2activity","text":"[androidJvm]\\ interface IR2Activity","title":"IR2Activity"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/#functions","text":"Name Summary highlightActivated [androidJvm] open fun highlightActivated (id: String ) highlightAnnotationMarkActivated [androidJvm] open fun highlightAnnotationMarkActivated (id: String ) nextResource [androidJvm] open fun nextResource (v: View ? = null) onPageChanged [androidJvm] open fun onPageChanged (pageIndex: Int , totalPages: Int , url: String ) onPageEnded [androidJvm] open fun onPageEnded (end: Boolean ) onPageLoaded [androidJvm] open fun onPageLoaded () previousResource [androidJvm] open fun previousResource (v: View ? = null) toggleActionBar [androidJvm] open fun toggleActionBar () open fun toggleActionBar (v: View ? = null)","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/#properties","text":"Name Summary allowToggleActionBar [androidJvm] open val allowToggleActionBar : Boolean bookId [androidJvm] abstract val bookId : Long preferences [androidJvm] abstract val preferences : SharedPreferences publication [androidJvm] abstract val publication : Publication publicationFileName [androidJvm] abstract val publicationFileName : String publicationIdentifier [androidJvm] abstract val publicationIdentifier : String publicationPath [androidJvm] abstract val publicationPath : String resourcePager [androidJvm] open val resourcePager : R2ViewPager ?","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/#inheritors","text":"Name R2AudiobookActivity R2CbzActivity R2DiViNaActivity R2EpubActivity","title":"Inheritors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/allow-toggle-action-bar/","text":"// navigator / org.readium.r2.navigator / IR2Activity / allowToggleActionBar allowToggleActionBar \u00b6 [androidJvm]\\ open val allowToggleActionBar : Boolean","title":"Allow toggle action bar"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/allow-toggle-action-bar/#allowtoggleactionbar","text":"[androidJvm]\\ open val allowToggleActionBar : Boolean","title":"allowToggleActionBar"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/book-id/","text":"// navigator / org.readium.r2.navigator / IR2Activity / bookId bookId \u00b6 [androidJvm]\\ abstract val bookId : Long","title":"Book id"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/book-id/#bookid","text":"[androidJvm]\\ abstract val bookId : Long","title":"bookId"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/highlight-activated/","text":"// navigator / org.readium.r2.navigator / IR2Activity / highlightActivated highlightActivated \u00b6 [androidJvm]\\ open fun highlightActivated (id: String )","title":"Highlight activated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/highlight-activated/#highlightactivated","text":"[androidJvm]\\ open fun highlightActivated (id: String )","title":"highlightActivated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/highlight-annotation-mark-activated/","text":"// navigator / org.readium.r2.navigator / IR2Activity / highlightAnnotationMarkActivated highlightAnnotationMarkActivated \u00b6 [androidJvm]\\ open fun highlightAnnotationMarkActivated (id: String )","title":"Highlight annotation mark activated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/highlight-annotation-mark-activated/#highlightannotationmarkactivated","text":"[androidJvm]\\ open fun highlightAnnotationMarkActivated (id: String )","title":"highlightAnnotationMarkActivated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/next-resource/","text":"// navigator / org.readium.r2.navigator / IR2Activity / nextResource nextResource \u00b6 [androidJvm]\\ open fun nextResource (v: View ? = null)","title":"Next resource"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/next-resource/#nextresource","text":"[androidJvm]\\ open fun nextResource (v: View ? = null)","title":"nextResource"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/on-page-changed/","text":"// navigator / org.readium.r2.navigator / IR2Activity / onPageChanged onPageChanged \u00b6 [androidJvm]\\ open fun onPageChanged (pageIndex: Int , totalPages: Int , url: String )","title":"On page changed"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/on-page-changed/#onpagechanged","text":"[androidJvm]\\ open fun onPageChanged (pageIndex: Int , totalPages: Int , url: String )","title":"onPageChanged"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/on-page-ended/","text":"// navigator / org.readium.r2.navigator / IR2Activity / onPageEnded onPageEnded \u00b6 [androidJvm]\\ open fun onPageEnded (end: Boolean )","title":"On page ended"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/on-page-ended/#onpageended","text":"[androidJvm]\\ open fun onPageEnded (end: Boolean )","title":"onPageEnded"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/on-page-loaded/","text":"// navigator / org.readium.r2.navigator / IR2Activity / onPageLoaded onPageLoaded \u00b6 [androidJvm]\\ open fun onPageLoaded ()","title":"On page loaded"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/on-page-loaded/#onpageloaded","text":"[androidJvm]\\ open fun onPageLoaded ()","title":"onPageLoaded"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/preferences/","text":"// navigator / org.readium.r2.navigator / IR2Activity / preferences preferences \u00b6 [androidJvm]\\ abstract val preferences : SharedPreferences","title":"Preferences"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/preferences/#preferences","text":"[androidJvm]\\ abstract val preferences : SharedPreferences","title":"preferences"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/previous-resource/","text":"// navigator / org.readium.r2.navigator / IR2Activity / previousResource previousResource \u00b6 [androidJvm]\\ open fun previousResource (v: View ? = null)","title":"Previous resource"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/previous-resource/#previousresource","text":"[androidJvm]\\ open fun previousResource (v: View ? = null)","title":"previousResource"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/publication-file-name/","text":"// navigator / org.readium.r2.navigator / IR2Activity / publicationFileName publicationFileName \u00b6 [androidJvm]\\ abstract val publicationFileName : String","title":"Publication file name"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/publication-file-name/#publicationfilename","text":"[androidJvm]\\ abstract val publicationFileName : String","title":"publicationFileName"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/publication-identifier/","text":"// navigator / org.readium.r2.navigator / IR2Activity / publicationIdentifier publicationIdentifier \u00b6 [androidJvm]\\ abstract val publicationIdentifier : String","title":"Publication identifier"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/publication-identifier/#publicationidentifier","text":"[androidJvm]\\ abstract val publicationIdentifier : String","title":"publicationIdentifier"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/publication-path/","text":"// navigator / org.readium.r2.navigator / IR2Activity / publicationPath publicationPath \u00b6 [androidJvm]\\ abstract val publicationPath : String","title":"Publication path"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/publication-path/#publicationpath","text":"[androidJvm]\\ abstract val publicationPath : String","title":"publicationPath"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/publication/","text":"// navigator / org.readium.r2.navigator / IR2Activity / publication publication \u00b6 [androidJvm]\\ abstract val publication : Publication","title":"Publication"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/publication/#publication","text":"[androidJvm]\\ abstract val publication : Publication","title":"publication"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/resource-pager/","text":"// navigator / org.readium.r2.navigator / IR2Activity / resourcePager resourcePager \u00b6 [androidJvm]\\ open val resourcePager : R2ViewPager ?","title":"Resource pager"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/resource-pager/#resourcepager","text":"[androidJvm]\\ open val resourcePager : R2ViewPager ?","title":"resourcePager"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/toggle-action-bar/","text":"// navigator / org.readium.r2.navigator / IR2Activity / toggleActionBar toggleActionBar \u00b6 [androidJvm]\\ open fun toggleActionBar () open fun toggleActionBar (v: View ? = null)","title":"Toggle action bar"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-activity/toggle-action-bar/#toggleactionbar","text":"[androidJvm]\\ open fun toggleActionBar () open fun toggleActionBar (v: View ? = null)","title":"toggleActionBar"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-t-t-s/","text":"// navigator / org.readium.r2.navigator / IR2TTS IR2TTS \u00b6 [androidJvm]\\ interface IR2TTS Functions \u00b6 Name Summary dismissScreenReader [androidJvm] open fun dismissScreenReader () playStateChanged [androidJvm] open fun playStateChanged (playing: Boolean ) playTextChanged [androidJvm] open fun playTextChanged (text: String ) Inheritors \u00b6 Name R2EpubActivity","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-t-t-s/#ir2tts","text":"[androidJvm]\\ interface IR2TTS","title":"IR2TTS"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-t-t-s/#functions","text":"Name Summary dismissScreenReader [androidJvm] open fun dismissScreenReader () playStateChanged [androidJvm] open fun playStateChanged (playing: Boolean ) playTextChanged [androidJvm] open fun playTextChanged (text: String )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-t-t-s/#inheritors","text":"Name R2EpubActivity","title":"Inheritors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-t-t-s/dismiss-screen-reader/","text":"// navigator / org.readium.r2.navigator / IR2TTS / dismissScreenReader dismissScreenReader \u00b6 [androidJvm]\\ open fun dismissScreenReader ()","title":"Dismiss screen reader"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-t-t-s/dismiss-screen-reader/#dismissscreenreader","text":"[androidJvm]\\ open fun dismissScreenReader ()","title":"dismissScreenReader"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-t-t-s/play-state-changed/","text":"// navigator / org.readium.r2.navigator / IR2TTS / playStateChanged playStateChanged \u00b6 [androidJvm]\\ open fun playStateChanged (playing: Boolean )","title":"Play state changed"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-t-t-s/play-state-changed/#playstatechanged","text":"[androidJvm]\\ open fun playStateChanged (playing: Boolean )","title":"playStateChanged"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-t-t-s/play-text-changed/","text":"// navigator / org.readium.r2.navigator / IR2TTS / playTextChanged playTextChanged \u00b6 [androidJvm]\\ open fun playTextChanged (text: String )","title":"Play text changed"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-i-r2-t-t-s/play-text-changed/#playtextchanged","text":"[androidJvm]\\ open fun playTextChanged (text: String )","title":"playTextChanged"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-media-navigator/","text":"// navigator / org.readium.r2.navigator / MediaNavigator MediaNavigator \u00b6 [androidJvm]\\ interface MediaNavigator : Navigator A navigator rendering an audio or video publication. Functions \u00b6 Name Summary go [androidJvm] abstract fun go (link: Link , animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the position in the publication targeted by the given link. [androidJvm] abstract fun go (locator: Locator , animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the position in the publication corresponding to the given Locator . goBackward [androidJvm] abstract fun goBackward (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the previous content portion (eg. page) in the reading progression direction. goForward [androidJvm] abstract fun goForward (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the next content portion (eg. page) in the reading progression direction. pause [androidJvm] abstract fun pause () Pauses the playback. play [androidJvm] abstract fun play () Resumes or start the playback at the current location. playPause [androidJvm] abstract fun playPause () Toggles the playback. Can be useful as a handler for play/pause button. seekRelative [androidJvm] abstract fun seekRelative (offset: Duration ) Seeks relatively from the current position in the current resource. seekTo [androidJvm] abstract fun seekTo (position: Duration ) Seeks to the given time in the current resource. setPlaybackRate [androidJvm] abstract fun setPlaybackRate (rate: Double ) Sets the speed of the media playback. stop [androidJvm] abstract fun stop () Stops the playback. Properties \u00b6 Name Summary currentLocator [androidJvm] abstract val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position. isPlaying [androidJvm] abstract val isPlaying : Boolean Indicates whether the navigator is currently playing. playback [androidJvm] abstract val playback : Flow< MediaPlayback > Current playback information. publication [androidJvm] abstract val publication : Publication Publication rendered by this navigator. Inheritors \u00b6 Name MediaSessionNavigator","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-media-navigator/#medianavigator","text":"[androidJvm]\\ interface MediaNavigator : Navigator A navigator rendering an audio or video publication.","title":"MediaNavigator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-media-navigator/#functions","text":"Name Summary go [androidJvm] abstract fun go (link: Link , animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the position in the publication targeted by the given link. [androidJvm] abstract fun go (locator: Locator , animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the position in the publication corresponding to the given Locator . goBackward [androidJvm] abstract fun goBackward (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the previous content portion (eg. page) in the reading progression direction. goForward [androidJvm] abstract fun goForward (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the next content portion (eg. page) in the reading progression direction. pause [androidJvm] abstract fun pause () Pauses the playback. play [androidJvm] abstract fun play () Resumes or start the playback at the current location. playPause [androidJvm] abstract fun playPause () Toggles the playback. Can be useful as a handler for play/pause button. seekRelative [androidJvm] abstract fun seekRelative (offset: Duration ) Seeks relatively from the current position in the current resource. seekTo [androidJvm] abstract fun seekTo (position: Duration ) Seeks to the given time in the current resource. setPlaybackRate [androidJvm] abstract fun setPlaybackRate (rate: Double ) Sets the speed of the media playback. stop [androidJvm] abstract fun stop () Stops the playback.","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-media-navigator/#properties","text":"Name Summary currentLocator [androidJvm] abstract val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position. isPlaying [androidJvm] abstract val isPlaying : Boolean Indicates whether the navigator is currently playing. playback [androidJvm] abstract val playback : Flow< MediaPlayback > Current playback information. publication [androidJvm] abstract val publication : Publication Publication rendered by this navigator.","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-media-navigator/#inheritors","text":"Name MediaSessionNavigator","title":"Inheritors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-media-navigator/is-playing/","text":"// navigator / org.readium.r2.navigator / MediaNavigator / isPlaying isPlaying \u00b6 [androidJvm]\\ abstract val isPlaying : Boolean Indicates whether the navigator is currently playing.","title":"Is playing"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-media-navigator/is-playing/#isplaying","text":"[androidJvm]\\ abstract val isPlaying : Boolean Indicates whether the navigator is currently playing.","title":"isPlaying"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-media-navigator/pause/","text":"// navigator / org.readium.r2.navigator / MediaNavigator / pause pause \u00b6 [androidJvm]\\ abstract fun pause () Pauses the playback.","title":"Pause"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-media-navigator/pause/#pause","text":"[androidJvm]\\ abstract fun pause () Pauses the playback.","title":"pause"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-media-navigator/play-pause/","text":"// navigator / org.readium.r2.navigator / MediaNavigator / playPause playPause \u00b6 [androidJvm]\\ abstract fun playPause () Toggles the playback. Can be useful as a handler for play/pause button.","title":"Play pause"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-media-navigator/play-pause/#playpause","text":"[androidJvm]\\ abstract fun playPause () Toggles the playback. Can be useful as a handler for play/pause button.","title":"playPause"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-media-navigator/play/","text":"// navigator / org.readium.r2.navigator / MediaNavigator / play play \u00b6 [androidJvm]\\ abstract fun play () Resumes or start the playback at the current location.","title":"Play"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-media-navigator/play/#play","text":"[androidJvm]\\ abstract fun play () Resumes or start the playback at the current location.","title":"play"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-media-navigator/playback/","text":"// navigator / org.readium.r2.navigator / MediaNavigator / playback playback \u00b6 [androidJvm]\\ abstract val playback : Flow< MediaPlayback > Current playback information.","title":"Playback"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-media-navigator/playback/#playback","text":"[androidJvm]\\ abstract val playback : Flow< MediaPlayback > Current playback information.","title":"playback"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-media-navigator/seek-relative/","text":"// navigator / org.readium.r2.navigator / MediaNavigator / seekRelative seekRelative \u00b6 [androidJvm]\\ abstract fun seekRelative (offset: Duration ) Seeks relatively from the current position in the current resource.","title":"Seek relative"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-media-navigator/seek-relative/#seekrelative","text":"[androidJvm]\\ abstract fun seekRelative (offset: Duration ) Seeks relatively from the current position in the current resource.","title":"seekRelative"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-media-navigator/seek-to/","text":"// navigator / org.readium.r2.navigator / MediaNavigator / seekTo seekTo \u00b6 [androidJvm]\\ abstract fun seekTo (position: Duration ) Seeks to the given time in the current resource.","title":"Seek to"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-media-navigator/seek-to/#seekto","text":"[androidJvm]\\ abstract fun seekTo (position: Duration ) Seeks to the given time in the current resource.","title":"seekTo"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-media-navigator/set-playback-rate/","text":"// navigator / org.readium.r2.navigator / MediaNavigator / setPlaybackRate setPlaybackRate \u00b6 [androidJvm]\\ abstract fun setPlaybackRate (rate: Double ) Sets the speed of the media playback. Normal speed is 1.0 and 0.0 is incorrect.","title":"Set playback rate"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-media-navigator/set-playback-rate/#setplaybackrate","text":"[androidJvm]\\ abstract fun setPlaybackRate (rate: Double ) Sets the speed of the media playback. Normal speed is 1.0 and 0.0 is incorrect.","title":"setPlaybackRate"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-media-navigator/stop/","text":"// navigator / org.readium.r2.navigator / MediaNavigator / stop stop \u00b6 [androidJvm]\\ abstract fun stop () Stops the playback. Compared to pause , the navigator may clear its state in whatever way is appropriate. For example, recovering a player's resources.","title":"Stop"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-media-navigator/stop/#stop","text":"[androidJvm]\\ abstract fun stop () Stops the playback. Compared to pause , the navigator may clear its state in whatever way is appropriate. For example, recovering a player's resources.","title":"stop"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-navigator/","text":"// navigator / org.readium.r2.navigator / Navigator Navigator \u00b6 [androidJvm]\\ interface Navigator Base interface for a navigator rendering a publication. A few points to keep in mind when implementing this interface: **The navigator should have a minimal UX** and be focused only on browsing and interacting with the document. However, it offers a rich API to build a user interface around it. **The last read page (progression) should not be persisted and restored by the navigator.** Instead, the reading app will save the [Locator](../../../../../readium/shared/shared/org.readium.r2.shared.publication/-locator/index.md) reported by the navigator in [currentLocator](current-locator.md), and provide the initial location when creating the navigator. **User accessibility settings should override the behavior when needed** (eg. disabling animated transition, even when requested by the caller). **The navigator is the single source of truth for the current location.** So for example, the TTS should observe the position from the navigator instead of having the reading app move manually both the navigator and the TTS reader when the user skips forward. **The navigator should only provide a minimal gestures/interactions set.** For example, scrolling through a web view or zooming a fixed image is expected from the user. But additional interactions such as tapping/clicking the edge of the page to skip to the next one should be implemented by the reading app, and not the navigator. Types \u00b6 Name Summary Listener [androidJvm] interface Listener Functions \u00b6 Name Summary go [androidJvm] abstract fun go (link: Link , animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the position in the publication targeted by the given link. [androidJvm] abstract fun go (locator: Locator , animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the position in the publication corresponding to the given Locator . goBackward [androidJvm] abstract fun goBackward (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the previous content portion (eg. page) in the reading progression direction. goForward [androidJvm] abstract fun goForward (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the next content portion (eg. page) in the reading progression direction. Properties \u00b6 Name Summary currentLocator [androidJvm] abstract val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position. publication [androidJvm] abstract val publication : Publication Publication rendered by this navigator. Inheritors \u00b6 Name DecorableNavigator VisualNavigator MediaNavigator SelectableNavigator","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-navigator/#navigator","text":"[androidJvm]\\ interface Navigator Base interface for a navigator rendering a publication. A few points to keep in mind when implementing this interface: **The navigator should have a minimal UX** and be focused only on browsing and interacting with the document. However, it offers a rich API to build a user interface around it. **The last read page (progression) should not be persisted and restored by the navigator.** Instead, the reading app will save the [Locator](../../../../../readium/shared/shared/org.readium.r2.shared.publication/-locator/index.md) reported by the navigator in [currentLocator](current-locator.md), and provide the initial location when creating the navigator. **User accessibility settings should override the behavior when needed** (eg. disabling animated transition, even when requested by the caller). **The navigator is the single source of truth for the current location.** So for example, the TTS should observe the position from the navigator instead of having the reading app move manually both the navigator and the TTS reader when the user skips forward. **The navigator should only provide a minimal gestures/interactions set.** For example, scrolling through a web view or zooming a fixed image is expected from the user. But additional interactions such as tapping/clicking the edge of the page to skip to the next one should be implemented by the reading app, and not the navigator.","title":"Navigator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-navigator/#types","text":"Name Summary Listener [androidJvm] interface Listener","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-navigator/#functions","text":"Name Summary go [androidJvm] abstract fun go (link: Link , animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the position in the publication targeted by the given link. [androidJvm] abstract fun go (locator: Locator , animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the position in the publication corresponding to the given Locator . goBackward [androidJvm] abstract fun goBackward (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the previous content portion (eg. page) in the reading progression direction. goForward [androidJvm] abstract fun goForward (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the next content portion (eg. page) in the reading progression direction.","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-navigator/#properties","text":"Name Summary currentLocator [androidJvm] abstract val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position. publication [androidJvm] abstract val publication : Publication Publication rendered by this navigator.","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-navigator/#inheritors","text":"Name DecorableNavigator VisualNavigator MediaNavigator SelectableNavigator","title":"Inheritors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-navigator/current-locator/","text":"// navigator / org.readium.r2.navigator / Navigator / currentLocator currentLocator \u00b6 [androidJvm]\\ abstract val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position.","title":"Current locator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-navigator/current-locator/#currentlocator","text":"[androidJvm]\\ abstract val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position.","title":"currentLocator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-navigator/go-backward/","text":"// navigator / org.readium.r2.navigator / Navigator / goBackward goBackward \u00b6 [androidJvm]\\ abstract fun goBackward (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the previous content portion (eg. page) in the reading progression direction.","title":"Go backward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-navigator/go-backward/#gobackward","text":"[androidJvm]\\ abstract fun goBackward (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the previous content portion (eg. page) in the reading progression direction.","title":"goBackward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-navigator/go-forward/","text":"// navigator / org.readium.r2.navigator / Navigator / goForward goForward \u00b6 [androidJvm]\\ abstract fun goForward (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the next content portion (eg. page) in the reading progression direction.","title":"Go forward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-navigator/go-forward/#goforward","text":"[androidJvm]\\ abstract fun goForward (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the next content portion (eg. page) in the reading progression direction.","title":"goForward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-navigator/go/","text":"// navigator / org.readium.r2.navigator / Navigator / go go \u00b6 [androidJvm]\\ abstract fun go (locator: Locator , animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the position in the publication corresponding to the given Locator . [androidJvm]\\ abstract fun go (link: Link , animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the position in the publication targeted by the given link.","title":"Go"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-navigator/go/#go","text":"[androidJvm]\\ abstract fun go (locator: Locator , animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the position in the publication corresponding to the given Locator . [androidJvm]\\ abstract fun go (link: Link , animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the position in the publication targeted by the given link.","title":"go"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-navigator/publication/","text":"// navigator / org.readium.r2.navigator / Navigator / publication publication \u00b6 [androidJvm]\\ abstract val publication : Publication Publication rendered by this navigator.","title":"Publication"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-navigator/publication/#publication","text":"[androidJvm]\\ abstract val publication : Publication Publication rendered by this navigator.","title":"publication"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-navigator/-listener/","text":"// navigator / org.readium.r2.navigator / Navigator / Listener Listener \u00b6 [androidJvm]\\ interface Listener Inheritors \u00b6 Name VisualNavigator","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-navigator/-listener/#listener","text":"[androidJvm]\\ interface Listener","title":"Listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-navigator/-listener/#inheritors","text":"Name VisualNavigator","title":"Inheritors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-navigator-delegate/","text":"// navigator / org.readium.r2.navigator / NavigatorDelegate NavigatorDelegate \u00b6 [androidJvm]\\ interface NavigatorDelegate","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-navigator-delegate/#navigatordelegate","text":"[androidJvm]\\ interface NavigatorDelegate","title":"NavigatorDelegate"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView R2BasicWebView \u00b6 [androidJvm]\\ open class R2BasicWebView (context: Context , attrs: AttributeSet ) : WebView Types \u00b6 Name Summary Callback2Wrapper [androidJvm] @ RequiresApi (value = 23) inner class Callback2Wrapper (callback: ActionMode.Callback , callback2: ActionMode.Callback2 ?) : ActionMode.Callback2 , ActionMode.Callback CallbackWrapper [androidJvm] inner class CallbackWrapper (callback: ActionMode.Callback ) : ActionMode.Callback A wrapper for the app-provided custom ActionMode.Callback which clears the selection when activating one of the menu items. Listener [androidJvm] interface Listener OnOverScrolledCallback [androidJvm] interface OnOverScrolledCallback Functions \u00b6 Name Summary addChildrenForAccessibility [androidJvm] open override fun addChildrenForAccessibility (p0: ArrayList < View >) addExtraDataToAccessibilityNodeInfo [androidJvm] open override fun addExtraDataToAccessibilityNodeInfo (p0: AccessibilityNodeInfo , p1: String , p2: Bundle ?) addFocusables [androidJvm] open fun addFocusables (p0: ArrayList < View >, p1: Int ) open override fun addFocusables (p0: ArrayList < View >, p1: Int , p2: Int ) addJavascriptInterface [androidJvm] open fun addJavascriptInterface (p0: Any , p1: String ) addKeyboardNavigationClusters [androidJvm] open override fun addKeyboardNavigationClusters (p0: MutableCollection < View >, p1: Int ) addOnAttachStateChangeListener [androidJvm] open fun addOnAttachStateChangeListener (p0: View.OnAttachStateChangeListener ) addOnLayoutChangeListener [androidJvm] open fun addOnLayoutChangeListener (p0: View.OnLayoutChangeListener ) addOnUnhandledKeyEventListener [androidJvm] open fun addOnUnhandledKeyEventListener (p0: View.OnUnhandledKeyEventListener ) addStatesFromChildren [androidJvm] open fun addStatesFromChildren (): Boolean addTouchables [androidJvm] open override fun addTouchables (p0: ArrayList < View >) addView [androidJvm] open fun addView (p0: View ) open override fun addView (p0: View , p1: ViewGroup.LayoutParams ) open fun addView (p0: View , p1: Int ) open fun addView (p0: View , p1: Int , p2: ViewGroup.LayoutParams ) open fun addView (p0: View , p1: Int , p2: Int ) addViewInLayout [androidJvm] open fun addViewInLayout (p0: View , p1: Int , p2: ViewGroup.LayoutParams ): Boolean open fun addViewInLayout (p0: View , p1: Int , p2: ViewGroup.LayoutParams , p3: Boolean ): Boolean animate [androidJvm] open fun animate (): ViewPropertyAnimator announceForAccessibility [androidJvm] open fun announceForAccessibility (p0: CharSequence ) attachLayoutAnimationParameters [androidJvm] open fun attachLayoutAnimationParameters (p0: View , p1: ViewGroup.LayoutParams , p2: Int , p3: Int ) attachViewToParent [androidJvm] open fun attachViewToParent (p0: View , p1: Int , p2: ViewGroup.LayoutParams ) autofill [androidJvm] open fun autofill (p0: AutofillValue ) open override fun autofill (p0: SparseArray < AutofillValue >) awakenScrollBars [androidJvm] open fun awakenScrollBars (): Boolean open fun awakenScrollBars (p0: Int ): Boolean open fun awakenScrollBars (p0: Int , p1: Boolean ): Boolean bringChildToFront [androidJvm] open override fun bringChildToFront (p0: View ) bringToFront [androidJvm] open fun bringToFront () buildLayer [androidJvm] open fun buildLayer () callOnClick [androidJvm] open fun callOnClick (): Boolean canAnimate [androidJvm] open fun canAnimate (): Boolean cancelDragAndDrop [androidJvm] fun cancelDragAndDrop () cancelLongPress [androidJvm] open fun cancelLongPress () cancelPendingInputEvents [androidJvm] fun cancelPendingInputEvents () canGoBack [androidJvm] open fun canGoBack (): Boolean canGoBackOrForward [androidJvm] open fun canGoBackOrForward (p0: Int ): Boolean canGoForward [androidJvm] open fun canGoForward (): Boolean canResolveLayoutDirection [androidJvm] open fun canResolveLayoutDirection (): Boolean canResolveTextAlignment [androidJvm] open fun canResolveTextAlignment (): Boolean canResolveTextDirection [androidJvm] open fun canResolveTextDirection (): Boolean canScrollHorizontally [androidJvm] open fun canScrollHorizontally (p0: Int ): Boolean canScrollVertically [androidJvm] open fun canScrollVertically (p0: Int ): Boolean checkInputConnectionProxy [androidJvm] open fun checkInputConnectionProxy (p0: View ): Boolean childDrawableStateChanged [androidJvm] open override fun childDrawableStateChanged (p0: View ) childHasTransientStateChanged [androidJvm] open override fun childHasTransientStateChanged (p0: View , p1: Boolean ) cleanupLayoutState [androidJvm] open fun cleanupLayoutState (p0: View ) clearAnimation [androidJvm] open fun clearAnimation () clearCache [androidJvm] open fun clearCache (p0: Boolean ) clearChildFocus [androidJvm] open override fun clearChildFocus (p0: View ) clearDisappearingChildren [androidJvm] open fun clearDisappearingChildren () clearFocus [androidJvm] open override fun clearFocus () clearFormData [androidJvm] open fun clearFormData () clearHistory [androidJvm] open fun clearHistory () clearMatches [androidJvm] open fun clearMatches () clearSslPreferences [androidJvm] open fun clearSslPreferences () clearViewTranslationCallback [androidJvm] open fun clearViewTranslationCallback () computeHorizontalScrollExtent [androidJvm] open fun computeHorizontalScrollExtent (): Int computeHorizontalScrollOffset [androidJvm] open override fun computeHorizontalScrollOffset (): Int computeHorizontalScrollRange [androidJvm] open override fun computeHorizontalScrollRange (): Int computeScroll [androidJvm] open override fun computeScroll () computeSystemWindowInsets [androidJvm] open fun computeSystemWindowInsets (p0: WindowInsets , p1: Rect ): WindowInsets computeVerticalScrollExtent [androidJvm] open override fun computeVerticalScrollExtent (): Int computeVerticalScrollOffset [androidJvm] open override fun computeVerticalScrollOffset (): Int computeVerticalScrollRange [androidJvm] open override fun computeVerticalScrollRange (): Int copyBackForwardList [androidJvm] open fun copyBackForwardList (): WebBackForwardList createAccessibilityNodeInfo [androidJvm] open fun createAccessibilityNodeInfo (): AccessibilityNodeInfo createAnnotation [androidJvm] fun createAnnotation (id: String ) createContextMenu [androidJvm] open fun createContextMenu (p0: ContextMenu ) createHighlight [androidJvm] fun createHighlight (locator: String ?, color: String ?, callback: ( String ) -> Unit ) createPrintDocumentAdapter [androidJvm] open fun createPrintDocumentAdapter (p0: String ): PrintDocumentAdapter createWebMessageChannel [androidJvm] open fun createWebMessageChannel (): Array < WebMessagePort > debug [androidJvm] open fun debug (p0: Int ) destroy [androidJvm] open fun destroy () destroyHighlight [androidJvm] fun destroyHighlight (id: String ) detachAllViewsFromParent [androidJvm] open fun detachAllViewsFromParent () detachViewFromParent [androidJvm] open fun detachViewFromParent (p0: View ) open fun detachViewFromParent (p0: Int ) detachViewsFromParent [androidJvm] open fun detachViewsFromParent (p0: Int , p1: Int ) dispatchApplyWindowInsets [androidJvm] open override fun dispatchApplyWindowInsets (p0: WindowInsets ): WindowInsets dispatchCapturedPointerEvent [androidJvm] open override fun dispatchCapturedPointerEvent (p0: MotionEvent ): Boolean dispatchConfigurationChanged [androidJvm] open override fun dispatchConfigurationChanged (p0: Configuration ) dispatchCreateViewTranslationRequest [androidJvm] open override fun dispatchCreateViewTranslationRequest (p0: MutableMap < AutofillId , LongArray >, p1: IntArray , p2: TranslationCapability ?, p3: MutableList < ViewTranslationRequest >) dispatchDisplayHint [androidJvm] open override fun dispatchDisplayHint (p0: Int ) dispatchDragEvent [androidJvm] open override fun dispatchDragEvent (p0: DragEvent ): Boolean dispatchDraw [androidJvm] open override fun dispatchDraw (p0: Canvas ) dispatchDrawableHotspotChanged [androidJvm] open override fun dispatchDrawableHotspotChanged (p0: Float , p1: Float ) dispatchFinishTemporaryDetach [androidJvm] open override fun dispatchFinishTemporaryDetach () dispatchFreezeSelfOnly [androidJvm] open fun dispatchFreezeSelfOnly (p0: SparseArray < Parcelable >) dispatchGenericFocusedEvent [androidJvm] open override fun dispatchGenericFocusedEvent (p0: MotionEvent ): Boolean dispatchGenericMotionEvent [androidJvm] open fun dispatchGenericMotionEvent (p0: MotionEvent ): Boolean dispatchGenericPointerEvent [androidJvm] open override fun dispatchGenericPointerEvent (p0: MotionEvent ): Boolean dispatchHoverEvent [androidJvm] open override fun dispatchHoverEvent (p0: MotionEvent ): Boolean dispatchKeyEvent [androidJvm] open override fun dispatchKeyEvent (p0: KeyEvent ): Boolean dispatchKeyEventPreIme [androidJvm] open override fun dispatchKeyEventPreIme (p0: KeyEvent ): Boolean dispatchKeyShortcutEvent [androidJvm] open override fun dispatchKeyShortcutEvent (p0: KeyEvent ): Boolean dispatchNestedFling [androidJvm] open fun dispatchNestedFling (p0: Float , p1: Float , p2: Boolean ): Boolean dispatchNestedPreFling [androidJvm] open fun dispatchNestedPreFling (p0: Float , p1: Float ): Boolean dispatchNestedPrePerformAccessibilityAction [androidJvm] open fun dispatchNestedPrePerformAccessibilityAction (p0: Int , p1: Bundle ): Boolean dispatchNestedPreScroll [androidJvm] open fun dispatchNestedPreScroll (p0: Int , p1: Int , p2: IntArray ?, p3: IntArray ?): Boolean dispatchNestedScroll [androidJvm] open fun dispatchNestedScroll (p0: Int , p1: Int , p2: Int , p3: Int , p4: IntArray ?): Boolean dispatchPointerCaptureChanged [androidJvm] open override fun dispatchPointerCaptureChanged (p0: Boolean ) dispatchPopulateAccessibilityEvent [androidJvm] open fun dispatchPopulateAccessibilityEvent (p0: AccessibilityEvent ): Boolean dispatchProvideAutofillStructure [androidJvm] open override fun dispatchProvideAutofillStructure (p0: ViewStructure , p1: Int ) dispatchProvideStructure [androidJvm] open override fun dispatchProvideStructure (p0: ViewStructure ) dispatchRestoreInstanceState [androidJvm] open override fun dispatchRestoreInstanceState (p0: SparseArray < Parcelable >) dispatchSaveInstanceState [androidJvm] open override fun dispatchSaveInstanceState (p0: SparseArray < Parcelable >) dispatchScrollCaptureSearch [androidJvm] open override fun dispatchScrollCaptureSearch (p0: Rect , p1: Point , p2: Consumer < ScrollCaptureTarget >) dispatchSetActivated [androidJvm] open override fun dispatchSetActivated (p0: Boolean ) dispatchSetPressed [androidJvm] open override fun dispatchSetPressed (p0: Boolean ) dispatchSetSelected [androidJvm] open override fun dispatchSetSelected (p0: Boolean ) dispatchStartTemporaryDetach [androidJvm] open override fun dispatchStartTemporaryDetach () dispatchThawSelfOnly [androidJvm] open fun dispatchThawSelfOnly (p0: SparseArray < Parcelable >) dispatchTouchEvent [androidJvm] open override fun dispatchTouchEvent (p0: MotionEvent ): Boolean dispatchTrackballEvent [androidJvm] open override fun dispatchTrackballEvent (p0: MotionEvent ): Boolean dispatchUnhandledMove [androidJvm] open override fun dispatchUnhandledMove (p0: View , p1: Int ): Boolean dispatchVisibilityChanged [androidJvm] open override fun dispatchVisibilityChanged (p0: View , p1: Int ) dispatchWindowFocusChanged [androidJvm] open override fun dispatchWindowFocusChanged (p0: Boolean ) dispatchWindowInsetsAnimationEnd [androidJvm] open override fun dispatchWindowInsetsAnimationEnd (p0: WindowInsetsAnimation ) dispatchWindowInsetsAnimationPrepare [androidJvm] open override fun dispatchWindowInsetsAnimationPrepare (p0: WindowInsetsAnimation ) dispatchWindowInsetsAnimationProgress [androidJvm] open override fun dispatchWindowInsetsAnimationProgress (p0: WindowInsets , p1: MutableList < WindowInsetsAnimation >): WindowInsets dispatchWindowInsetsAnimationStart [androidJvm] open override fun dispatchWindowInsetsAnimationStart (p0: WindowInsetsAnimation , p1: WindowInsetsAnimation.Bounds ): WindowInsetsAnimation.Bounds dispatchWindowVisibilityChanged [androidJvm] open override fun dispatchWindowVisibilityChanged (p0: Int ) documentHasImages [androidJvm] open fun documentHasImages (p0: Message ) draw [androidJvm] open fun draw (p0: Canvas ) drawableHotspotChanged [androidJvm] open fun drawableHotspotChanged (p0: Float , p1: Float ) drawableStateChanged [androidJvm] open override fun drawableStateChanged () drawChild [androidJvm] open fun drawChild (p0: Canvas , p1: View , p2: Long ): Boolean endViewTransition [androidJvm] open fun endViewTransition (p0: View ) evaluateJavascript [androidJvm] open fun evaluateJavascript (p0: String , p1: ValueCallback < String >?) findAllAsync [androidJvm] open fun findAllAsync (p0: String ) findFocus [androidJvm] open override fun findFocus (): View findNext [androidJvm] open fun findNext (p0: Boolean ) findViewById [androidJvm] fun < T : View > findViewById (p0: Int ): T findViewsWithText [androidJvm] open override fun findViewsWithText (p0: ArrayList < View >, p1: CharSequence , p2: Int ) findViewWithTag [androidJvm] fun < T : View > findViewWithTag (p0: Any ): T flingScroll [androidJvm] open fun flingScroll (p0: Int , p1: Int ) focusableViewAvailable [androidJvm] open override fun focusableViewAvailable (p0: View ) focusSearch [androidJvm] open fun focusSearch (p0: Int ): View open override fun focusSearch (p0: View , p1: Int ): View forceHasOverlappingRendering [androidJvm] open fun forceHasOverlappingRendering (p0: Boolean ) forceLayout [androidJvm] open fun forceLayout () gatherTransparentRegion [androidJvm] open override fun gatherTransparentRegion (p0: Region ?): Boolean generateDisplayHash [androidJvm] open fun generateDisplayHash (p0: String , p1: Rect ?, p2: Executor , p3: DisplayHashResultCallback ) getAccessibilityClassName [androidJvm] open override fun getAccessibilityClassName (): CharSequence getAccessibilityDelegate [androidJvm] open fun getAccessibilityDelegate (): View.AccessibilityDelegate getAccessibilityLiveRegion [androidJvm] open fun getAccessibilityLiveRegion (): Int getAccessibilityNodeProvider [androidJvm] open override fun getAccessibilityNodeProvider (): AccessibilityNodeProvider getAccessibilityPaneTitle [androidJvm] open fun getAccessibilityPaneTitle (): CharSequence ? getAccessibilityTraversalAfter [androidJvm] open fun getAccessibilityTraversalAfter (): Int getAccessibilityTraversalBefore [androidJvm] open fun getAccessibilityTraversalBefore (): Int getAlpha [androidJvm] open fun getAlpha (): Float getAnimation [androidJvm] open fun getAnimation (): Animation getAnimationMatrix [androidJvm] open fun getAnimationMatrix (): Matrix ? getApplicationWindowToken [androidJvm] open fun getApplicationWindowToken (): IBinder getAttributeResolutionStack [androidJvm] open fun getAttributeResolutionStack (p0: Int ): IntArray getAttributeSourceResourceMap [androidJvm] open fun getAttributeSourceResourceMap (): MutableMap < Int , Int > getAutofillHints [androidJvm] open fun getAutofillHints (): Array < String >? getAutofillId [androidJvm] fun getAutofillId (): AutofillId getAutofillType [androidJvm] open fun getAutofillType (): Int getAutofillValue [androidJvm] open fun getAutofillValue (): AutofillValue ? getBackground [androidJvm] open fun getBackground (): Drawable getBackgroundTintBlendMode [androidJvm] open fun getBackgroundTintBlendMode (): BlendMode ? getBackgroundTintList [androidJvm] open fun getBackgroundTintList (): ColorStateList ? getBackgroundTintMode [androidJvm] open fun getBackgroundTintMode (): PorterDuff.Mode ? getBaseline [androidJvm] open fun getBaseline (): Int getBottom [androidJvm] fun getBottom (): Int getBottomFadingEdgeStrength [androidJvm] open fun getBottomFadingEdgeStrength (): Float getBottomPaddingOffset [androidJvm] open fun getBottomPaddingOffset (): Int getCameraDistance [androidJvm] open fun getCameraDistance (): Float getCertificate [androidJvm] open fun getCertificate (): SslCertificate ? getChildAt [androidJvm] open fun getChildAt (p0: Int ): View getChildCount [androidJvm] open fun getChildCount (): Int getChildDrawingOrder [androidJvm] fun getChildDrawingOrder (p0: Int ): Int open fun getChildDrawingOrder (p0: Int , p1: Int ): Int getChildStaticTransformation [androidJvm] open fun getChildStaticTransformation (p0: View , p1: Transformation ): Boolean getChildVisibleRect [androidJvm] open override fun getChildVisibleRect (p0: View , p1: Rect , p2: Point ): Boolean getClipBounds [androidJvm] open fun getClipBounds (): Rect open fun getClipBounds (p0: Rect ): Boolean getClipChildren [androidJvm] open fun getClipChildren (): Boolean getClipToOutline [androidJvm] fun getClipToOutline (): Boolean getClipToPadding [androidJvm] open fun getClipToPadding (): Boolean getContentCaptureSession [androidJvm] fun getContentCaptureSession (): ContentCaptureSession ? getContentDescription [androidJvm] open fun getContentDescription (): CharSequence getContentHeight [androidJvm] open fun getContentHeight (): Int getContext [androidJvm] fun getContext (): Context getContextMenuInfo [androidJvm] open fun getContextMenuInfo (): ContextMenu.ContextMenuInfo getCurrentSelectionInfo [androidJvm] fun getCurrentSelectionInfo (callback: ( String ) -> Unit ) getCurrentSelectionRect [androidJvm] fun getCurrentSelectionRect (callback: ( String ) -> Unit ) getDefaultFocusHighlightEnabled [androidJvm] fun getDefaultFocusHighlightEnabled (): Boolean getDescendantFocusability [androidJvm] open fun getDescendantFocusability (): Int getDisplay [androidJvm] open fun getDisplay (): Display getDrawableState [androidJvm] fun getDrawableState (): IntArray getDrawingRect [androidJvm] open fun getDrawingRect (p0: Rect ) getDrawingTime [androidJvm] open fun getDrawingTime (): Long getElevation [androidJvm] open fun getElevation (): Float getExplicitStyle [androidJvm] open fun getExplicitStyle (): Int getFavicon [androidJvm] open fun getFavicon (): Bitmap ? getFilterTouchesWhenObscured [androidJvm] open fun getFilterTouchesWhenObscured (): Boolean getFitsSystemWindows [androidJvm] open fun getFitsSystemWindows (): Boolean getFocusable [androidJvm] open fun getFocusable (): Int getFocusables [androidJvm] open fun getFocusables (p0: Int ): ArrayList < View > getFocusedChild [androidJvm] open fun getFocusedChild (): View getFocusedRect [androidJvm] open fun getFocusedRect (p0: Rect ) getForeground [androidJvm] open fun getForeground (): Drawable getForegroundGravity [androidJvm] open fun getForegroundGravity (): Int getForegroundTintBlendMode [androidJvm] open fun getForegroundTintBlendMode (): BlendMode ? getForegroundTintList [androidJvm] open fun getForegroundTintList (): ColorStateList ? getForegroundTintMode [androidJvm] open fun getForegroundTintMode (): PorterDuff.Mode ? getGlobalVisibleRect [androidJvm] fun getGlobalVisibleRect (p0: Rect ): Boolean open fun getGlobalVisibleRect (p0: Rect , p1: Point ): Boolean getHandler [androidJvm] open override fun getHandler (): Handler getHasOverlappingRendering [androidJvm] fun getHasOverlappingRendering (): Boolean getHeight [androidJvm] fun getHeight (): Int getHitRect [androidJvm] open fun getHitRect (p0: Rect ) getHitTestResult [androidJvm] open fun getHitTestResult (): WebView.HitTestResult getHorizontalFadingEdgeLength [androidJvm] open fun getHorizontalFadingEdgeLength (): Int getHorizontalScrollbarHeight [androidJvm] open fun getHorizontalScrollbarHeight (): Int getHorizontalScrollbarThumbDrawable [androidJvm] open fun getHorizontalScrollbarThumbDrawable (): Drawable ? getHorizontalScrollbarTrackDrawable [androidJvm] open fun getHorizontalScrollbarTrackDrawable (): Drawable ? getId [androidJvm] open fun getId (): Int getImportantForAccessibility [androidJvm] open fun getImportantForAccessibility (): Int getImportantForAutofill [androidJvm] open fun getImportantForAutofill (): Int getImportantForContentCapture [androidJvm] open fun getImportantForContentCapture (): Int getKeepScreenOn [androidJvm] open fun getKeepScreenOn (): Boolean getKeyDispatcherState [androidJvm] open fun getKeyDispatcherState (): KeyEvent.DispatcherState getLabelFor [androidJvm] open fun getLabelFor (): Int getLayerType [androidJvm] open fun getLayerType (): Int getLayoutAnimation [androidJvm] open fun getLayoutAnimation (): LayoutAnimationController getLayoutAnimationListener [androidJvm] open fun getLayoutAnimationListener (): Animation.AnimationListener getLayoutDirection [androidJvm] open fun getLayoutDirection (): Int getLayoutMode [androidJvm] open fun getLayoutMode (): Int getLayoutParams [androidJvm] open fun getLayoutParams (): ViewGroup.LayoutParams getLayoutTransition [androidJvm] open fun getLayoutTransition (): LayoutTransition getLeft [androidJvm] fun getLeft (): Int getLeftFadingEdgeStrength [androidJvm] open fun getLeftFadingEdgeStrength (): Float getLeftPaddingOffset [androidJvm] open fun getLeftPaddingOffset (): Int getLocalVisibleRect [androidJvm] fun getLocalVisibleRect (p0: Rect ): Boolean getLocationInSurface [androidJvm] open fun getLocationInSurface (p0: IntArray ) getLocationInWindow [androidJvm] open fun getLocationInWindow (p0: IntArray ) getLocationOnScreen [androidJvm] open fun getLocationOnScreen (p0: IntArray ) getMatrix [androidJvm] open fun getMatrix (): Matrix getMeasuredHeight [androidJvm] fun getMeasuredHeight (): Int getMeasuredHeightAndState [androidJvm] fun getMeasuredHeightAndState (): Int getMeasuredState [androidJvm] fun getMeasuredState (): Int getMeasuredWidth [androidJvm] fun getMeasuredWidth (): Int getMeasuredWidthAndState [androidJvm] fun getMeasuredWidthAndState (): Int getMinimumHeight [androidJvm] open fun getMinimumHeight (): Int getMinimumWidth [androidJvm] open fun getMinimumWidth (): Int getNestedScrollAxes [androidJvm] open fun getNestedScrollAxes (): Int getNextClusterForwardId [androidJvm] open fun getNextClusterForwardId (): Int getNextFocusDownId [androidJvm] open fun getNextFocusDownId (): Int getNextFocusForwardId [androidJvm] open fun getNextFocusForwardId (): Int getNextFocusLeftId [androidJvm] open fun getNextFocusLeftId (): Int getNextFocusRightId [androidJvm] open fun getNextFocusRightId (): Int getNextFocusUpId [androidJvm] open fun getNextFocusUpId (): Int getOnFocusChangeListener [androidJvm] open fun getOnFocusChangeListener (): View.OnFocusChangeListener getOriginalUrl [androidJvm] open fun getOriginalUrl (): String ? getOutlineAmbientShadowColor [androidJvm] open fun getOutlineAmbientShadowColor (): Int getOutlineProvider [androidJvm] open fun getOutlineProvider (): ViewOutlineProvider getOutlineSpotShadowColor [androidJvm] open fun getOutlineSpotShadowColor (): Int getOverlay [androidJvm] open override fun getOverlay (): ViewGroupOverlay getOverScrollMode [androidJvm] open fun getOverScrollMode (): Int getPaddingBottom [androidJvm] open fun getPaddingBottom (): Int getPaddingEnd [androidJvm] open fun getPaddingEnd (): Int getPaddingLeft [androidJvm] open fun getPaddingLeft (): Int getPaddingRight [androidJvm] open fun getPaddingRight (): Int getPaddingStart [androidJvm] open fun getPaddingStart (): Int getPaddingTop [androidJvm] open fun getPaddingTop (): Int getParent [androidJvm] fun getParent (): ViewParent getParentForAccessibility [androidJvm] open fun getParentForAccessibility (): ViewParent getPivotX [androidJvm] open fun getPivotX (): Float getPivotY [androidJvm] open fun getPivotY (): Float getPointerIcon [androidJvm] open fun getPointerIcon (): PointerIcon getProgress [androidJvm] open fun getProgress (): Int getReceiveContentMimeTypes [androidJvm] open fun getReceiveContentMimeTypes (): Array < String >? getRendererPriorityWaivedWhenNotVisible [androidJvm] open fun getRendererPriorityWaivedWhenNotVisible (): Boolean getRendererRequestedPriority [androidJvm] open fun getRendererRequestedPriority (): Int getResources [androidJvm] open fun getResources (): Resources getRevealOnFocusHint [androidJvm] fun getRevealOnFocusHint (): Boolean getRight [androidJvm] fun getRight (): Int getRightFadingEdgeStrength [androidJvm] open fun getRightFadingEdgeStrength (): Float getRightPaddingOffset [androidJvm] open fun getRightPaddingOffset (): Int getRootSurfaceControl [androidJvm] open fun getRootSurfaceControl (): AttachedSurfaceControl ? getRootView [androidJvm] open fun getRootView (): View getRootWindowInsets [androidJvm] open fun getRootWindowInsets (): WindowInsets getRotation [androidJvm] open fun getRotation (): Float getRotationX [androidJvm] open fun getRotationX (): Float getRotationY [androidJvm] open fun getRotationY (): Float getScaleX [androidJvm] open fun getScaleX (): Float getScaleY [androidJvm] open fun getScaleY (): Float getScrollBarDefaultDelayBeforeFade [androidJvm] open fun getScrollBarDefaultDelayBeforeFade (): Int getScrollBarFadeDuration [androidJvm] open fun getScrollBarFadeDuration (): Int getScrollBarSize [androidJvm] open fun getScrollBarSize (): Int getScrollBarStyle [androidJvm] open fun getScrollBarStyle (): Int getScrollCaptureHint [androidJvm] open fun getScrollCaptureHint (): Int getScrollIndicators [androidJvm] open fun getScrollIndicators (): Int getScrollX [androidJvm] fun getScrollX (): Int getScrollY [androidJvm] fun getScrollY (): Int getSettings [androidJvm] open fun getSettings (): WebSettings getSolidColor [androidJvm] open fun getSolidColor (): Int getSourceLayoutResId [androidJvm] open fun getSourceLayoutResId (): Int getStateDescription [androidJvm] fun getStateDescription (): CharSequence ? getStateListAnimator [androidJvm] open fun getStateListAnimator (): StateListAnimator getSuggestedMinimumHeight [androidJvm] open fun getSuggestedMinimumHeight (): Int getSuggestedMinimumWidth [androidJvm] open fun getSuggestedMinimumWidth (): Int getSystemGestureExclusionRects [androidJvm] open fun getSystemGestureExclusionRects (): MutableList < Rect > getTag [androidJvm] open fun getTag (): Any open fun getTag (p0: Int ): Any getTextAlignment [androidJvm] open fun getTextAlignment (): Int getTextClassifier [androidJvm] open fun getTextClassifier (): TextClassifier getTextDirection [androidJvm] open fun getTextDirection (): Int getTitle [androidJvm] open fun getTitle (): String ? getTooltipText [androidJvm] open fun getTooltipText (): CharSequence ? getTop [androidJvm] fun getTop (): Int getTopFadingEdgeStrength [androidJvm] open fun getTopFadingEdgeStrength (): Float getTopPaddingOffset [androidJvm] open fun getTopPaddingOffset (): Int getTouchables [androidJvm] open fun getTouchables (): ArrayList < View > getTouchDelegate [androidJvm] open fun getTouchDelegate (): TouchDelegate getTouchscreenBlocksFocus [androidJvm] open fun getTouchscreenBlocksFocus (): Boolean getTransitionAlpha [androidJvm] open fun getTransitionAlpha (): Float getTransitionName [androidJvm] open fun getTransitionName (): String getTranslationX [androidJvm] open fun getTranslationX (): Float getTranslationY [androidJvm] open fun getTranslationY (): Float getTranslationZ [androidJvm] open fun getTranslationZ (): Float getUniqueDrawingId [androidJvm] open fun getUniqueDrawingId (): Long getUrl [androidJvm] open fun getUrl (): String ? getVerticalFadingEdgeLength [androidJvm] open fun getVerticalFadingEdgeLength (): Int getVerticalScrollbarPosition [androidJvm] open fun getVerticalScrollbarPosition (): Int getVerticalScrollbarThumbDrawable [androidJvm] open fun getVerticalScrollbarThumbDrawable (): Drawable ? getVerticalScrollbarTrackDrawable [androidJvm] open fun getVerticalScrollbarTrackDrawable (): Drawable ? getVerticalScrollbarWidth [androidJvm] open fun getVerticalScrollbarWidth (): Int getViewportWidth [androidJvm] fun getViewportWidth (): Int getViewTranslationResponse [androidJvm] open fun getViewTranslationResponse (): ViewTranslationResponse ? getViewTreeObserver [androidJvm] open fun getViewTreeObserver (): ViewTreeObserver getVisibility [androidJvm] open fun getVisibility (): Int getWebChromeClient [androidJvm] open fun getWebChromeClient (): WebChromeClient ? getWebViewClient [androidJvm] open fun getWebViewClient (): WebViewClient getWebViewLooper [androidJvm] open fun getWebViewLooper (): Looper getWebViewRenderProcess [androidJvm] open fun getWebViewRenderProcess (): WebViewRenderProcess ? getWebViewRenderProcessClient [androidJvm] open fun getWebViewRenderProcessClient (): WebViewRenderProcessClient ? getWidth [androidJvm] fun getWidth (): Int getWindowAttachCount [androidJvm] open fun getWindowAttachCount (): Int getWindowId [androidJvm] open fun getWindowId (): WindowId getWindowInsetsController [androidJvm] open fun getWindowInsetsController (): WindowInsetsController ? getWindowToken [androidJvm] open fun getWindowToken (): IBinder getWindowVisibility [androidJvm] open fun getWindowVisibility (): Int getWindowVisibleDisplayFrame [androidJvm] open fun getWindowVisibleDisplayFrame (p0: Rect ) getX [androidJvm] open fun getX (): Float getY [androidJvm] open fun getY (): Float getZ [androidJvm] open fun getZ (): Float goBack [androidJvm] open fun goBack () goBackOrForward [androidJvm] open fun goBackOrForward (p0: Int ) goForward [androidJvm] open fun goForward () hasExplicitFocusable [androidJvm] open fun hasExplicitFocusable (): Boolean hasFocus [androidJvm] open override fun hasFocus (): Boolean hasFocusable [androidJvm] open fun hasFocusable (): Boolean hasNestedScrollingParent [androidJvm] open fun hasNestedScrollingParent (): Boolean hasOnClickListeners [androidJvm] open fun hasOnClickListeners (): Boolean hasOnLongClickListeners [androidJvm] open fun hasOnLongClickListeners (): Boolean hasOverlappingRendering [androidJvm] open fun hasOverlappingRendering (): Boolean hasPointerCapture [androidJvm] open fun hasPointerCapture (): Boolean hasTransientState [androidJvm] open override fun hasTransientState (): Boolean hasWindowFocus [androidJvm] open fun hasWindowFocus (): Boolean highlightActivated [androidJvm] fun highlightActivated (id: String ) highlightAnnotationMarkActivated [androidJvm] fun highlightAnnotationMarkActivated (id: String ) indexOfChild [androidJvm] open fun indexOfChild (p0: View ): Int invalidate [androidJvm] open fun invalidate () invalidateDrawable [androidJvm] open override fun invalidateDrawable (p0: Drawable ) invalidateOutline [androidJvm] open fun invalidateOutline () invokeZoomPicker [androidJvm] open fun invokeZoomPicker () isAccessibilityFocused [androidJvm] open fun isAccessibilityFocused (): Boolean isAccessibilityHeading [androidJvm] open fun isAccessibilityHeading (): Boolean isActivated [androidJvm] open fun isActivated (): Boolean isAttachedToWindow [androidJvm] open fun isAttachedToWindow (): Boolean isChildrenDrawingOrderEnabled [androidJvm] open fun isChildrenDrawingOrderEnabled (): Boolean isClickable [androidJvm] open fun isClickable (): Boolean isContextClickable [androidJvm] open fun isContextClickable (): Boolean isDirty [androidJvm] open fun isDirty (): Boolean isDuplicateParentStateEnabled [androidJvm] open fun isDuplicateParentStateEnabled (): Boolean isEnabled [androidJvm] open fun isEnabled (): Boolean isFocusable [androidJvm] fun isFocusable (): Boolean isFocusableInTouchMode [androidJvm] fun isFocusableInTouchMode (): Boolean isFocused [androidJvm] open fun isFocused (): Boolean isFocusedByDefault [androidJvm] fun isFocusedByDefault (): Boolean isForceDarkAllowed [androidJvm] open fun isForceDarkAllowed (): Boolean isHapticFeedbackEnabled [androidJvm] open fun isHapticFeedbackEnabled (): Boolean isHardwareAccelerated [androidJvm] open fun isHardwareAccelerated (): Boolean isHorizontalFadingEdgeEnabled [androidJvm] open fun isHorizontalFadingEdgeEnabled (): Boolean isHorizontalScrollBarEnabled [androidJvm] open fun isHorizontalScrollBarEnabled (): Boolean isHovered [androidJvm] open fun isHovered (): Boolean isImportantForAccessibility [androidJvm] open fun isImportantForAccessibility (): Boolean isImportantForAutofill [androidJvm] fun isImportantForAutofill (): Boolean isImportantForContentCapture [androidJvm] fun isImportantForContentCapture (): Boolean isInEditMode [androidJvm] open fun isInEditMode (): Boolean isInLayout [androidJvm] open fun isInLayout (): Boolean isInTouchMode [androidJvm] open fun isInTouchMode (): Boolean isKeyboardNavigationCluster [androidJvm] fun isKeyboardNavigationCluster (): Boolean isLaidOut [androidJvm] open fun isLaidOut (): Boolean isLayoutDirectionResolved [androidJvm] open fun isLayoutDirectionResolved (): Boolean isLayoutRequested [androidJvm] open fun isLayoutRequested (): Boolean isLayoutSuppressed [androidJvm] open fun isLayoutSuppressed (): Boolean isLongClickable [androidJvm] open fun isLongClickable (): Boolean isMotionEventSplittingEnabled [androidJvm] open fun isMotionEventSplittingEnabled (): Boolean isNestedScrollingEnabled [androidJvm] open fun isNestedScrollingEnabled (): Boolean isOpaque [androidJvm] open fun isOpaque (): Boolean isPaddingOffsetRequired [androidJvm] open fun isPaddingOffsetRequired (): Boolean isPaddingRelative [androidJvm] open fun isPaddingRelative (): Boolean isPivotSet [androidJvm] open fun isPivotSet (): Boolean isPressed [androidJvm] open fun isPressed (): Boolean isPrivateBrowsingEnabled [androidJvm] open fun isPrivateBrowsingEnabled (): Boolean isSaveEnabled [androidJvm] open fun isSaveEnabled (): Boolean isSaveFromParentEnabled [androidJvm] open fun isSaveFromParentEnabled (): Boolean isScreenReaderFocusable [androidJvm] open fun isScreenReaderFocusable (): Boolean isScrollbarFadingEnabled [androidJvm] open fun isScrollbarFadingEnabled (): Boolean isScrollContainer [androidJvm] open fun isScrollContainer (): Boolean isSelected [androidJvm] open fun isSelected (): Boolean isShowingLayoutBounds [androidJvm] fun isShowingLayoutBounds (): Boolean isShown [androidJvm] open fun isShown (): Boolean isSoundEffectsEnabled [androidJvm] open fun isSoundEffectsEnabled (): Boolean isTemporarilyDetached [androidJvm] fun isTemporarilyDetached (): Boolean isTextAlignmentResolved [androidJvm] open fun isTextAlignmentResolved (): Boolean isTextDirectionResolved [androidJvm] open fun isTextDirectionResolved (): Boolean isTransitionGroup [androidJvm] open fun isTransitionGroup (): Boolean isVerticalFadingEdgeEnabled [androidJvm] open fun isVerticalFadingEdgeEnabled (): Boolean isVerticalScrollBarEnabled [androidJvm] open fun isVerticalScrollBarEnabled (): Boolean isVisibleToUserForAutofill [androidJvm] open override fun isVisibleToUserForAutofill (p0: Int ): Boolean jumpDrawablesToCurrentState [androidJvm] open override fun jumpDrawablesToCurrentState () keyboardNavigationClusterSearch [androidJvm] open fun keyboardNavigationClusterSearch (p0: View , p1: Int ): View layout [androidJvm] override fun layout (p0: Int , p1: Int , p2: Int , p3: Int ) loadData [androidJvm] open fun loadData (p0: String , p1: String ?, p2: String ?) loadDataWithBaseURL [androidJvm] open fun loadDataWithBaseURL (p0: String ?, p1: String , p2: String ?, p3: String ?, p4: String ?) loadUrl [androidJvm] open fun loadUrl (p0: String ) open fun loadUrl (p0: String , p1: MutableMap < String , String >) log [androidJvm] fun log (message: String ) logError [androidJvm] fun logError (message: String , filename: String , line: Int ) measure [androidJvm] fun measure (p0: Int , p1: Int ) measureChild [androidJvm] open fun measureChild (p0: View , p1: Int , p2: Int ) measureChildren [androidJvm] open fun measureChildren (p0: Int , p1: Int ) measureChildWithMargins [androidJvm] open fun measureChildWithMargins (p0: View , p1: Int , p2: Int , p3: Int , p4: Int ) notifySubtreeAccessibilityStateChanged [androidJvm] open override fun notifySubtreeAccessibilityStateChanged (p0: View , p1: View , p2: Int ) offsetDescendantRectToMyCoords [androidJvm] fun offsetDescendantRectToMyCoords (p0: View , p1: Rect ) offsetLeftAndRight [androidJvm] open fun offsetLeftAndRight (p0: Int ) offsetRectIntoDescendantCoords [androidJvm] fun offsetRectIntoDescendantCoords (p0: View , p1: Rect ) offsetTopAndBottom [androidJvm] open fun offsetTopAndBottom (p0: Int ) onAnimationEnd [androidJvm] open fun onAnimationEnd () onAnimationStart [androidJvm] open fun onAnimationStart () onApplyWindowInsets [androidJvm] open override fun onApplyWindowInsets (p0: WindowInsets ): WindowInsets onCancelPendingInputEvents [androidJvm] open fun onCancelPendingInputEvents () onCapturedPointerEvent [androidJvm] open fun onCapturedPointerEvent (p0: MotionEvent ): Boolean onCheckIsTextEditor [androidJvm] open override fun onCheckIsTextEditor (): Boolean onConfigurationChanged [androidJvm] open override fun onConfigurationChanged (p0: Configuration ) onCreateContextMenu [androidJvm] open fun onCreateContextMenu (p0: ContextMenu ) onCreateDrawableState [androidJvm] open override fun onCreateDrawableState (p0: Int ): IntArray onCreateInputConnection [androidJvm] open override fun onCreateInputConnection (p0: EditorInfo ): InputConnection onCreateViewTranslationRequest [androidJvm] open fun onCreateViewTranslationRequest (p0: IntArray , p1: Consumer < ViewTranslationRequest >) onCreateVirtualViewTranslationRequests [androidJvm] open override fun onCreateVirtualViewTranslationRequests (p0: LongArray , p1: IntArray , p2: Consumer < ViewTranslationRequest >) onDecorationActivated [androidJvm] fun onDecorationActivated (eventJson: String ): Boolean Called from the JS code when a tap on a decoration is detected. onDescendantInvalidated [androidJvm] open override fun onDescendantInvalidated (p0: View , p1: View ) onDisplayHint [androidJvm] open fun onDisplayHint (p0: Int ) onDragEvent [androidJvm] open override fun onDragEvent (p0: DragEvent ): Boolean onDraw [androidJvm] open override fun onDraw (p0: Canvas ) onDrawForeground [androidJvm] open fun onDrawForeground (p0: Canvas ) onDrawScrollBars [androidJvm] fun onDrawScrollBars (p0: Canvas ) onFilterTouchEventForSecurity [androidJvm] open fun onFilterTouchEventForSecurity (p0: MotionEvent ): Boolean onFinishInflate [androidJvm] open fun onFinishInflate () onFinishTemporaryDetach [androidJvm] open override fun onFinishTemporaryDetach () onFocusChanged [androidJvm] open override fun onFocusChanged (p0: Boolean , p1: Int , p2: Rect ?) onGenericMotionEvent [androidJvm] open override fun onGenericMotionEvent (p0: MotionEvent ): Boolean onHoverChanged [androidJvm] open fun onHoverChanged (p0: Boolean ) onHoverEvent [androidJvm] open override fun onHoverEvent (p0: MotionEvent ): Boolean onInitializeAccessibilityEvent [androidJvm] open fun onInitializeAccessibilityEvent (p0: AccessibilityEvent ) onInitializeAccessibilityNodeInfo [androidJvm] open fun onInitializeAccessibilityNodeInfo (p0: AccessibilityNodeInfo ) onInterceptHoverEvent [androidJvm] open fun onInterceptHoverEvent (p0: MotionEvent ): Boolean onInterceptTouchEvent [androidJvm] open fun onInterceptTouchEvent (p0: MotionEvent ): Boolean onKeyDown [androidJvm] open override fun onKeyDown (p0: Int , p1: KeyEvent ): Boolean onKeyLongPress [androidJvm] open override fun onKeyLongPress (p0: Int , p1: KeyEvent ): Boolean onKeyMultiple [androidJvm] open override fun onKeyMultiple (p0: Int , p1: Int , p2: KeyEvent ): Boolean onKeyPreIme [androidJvm] open fun onKeyPreIme (p0: Int , p1: KeyEvent ): Boolean onKeyShortcut [androidJvm] open fun onKeyShortcut (p0: Int , p1: KeyEvent ): Boolean onKeyUp [androidJvm] open override fun onKeyUp (p0: Int , p1: KeyEvent ): Boolean onMeasure [androidJvm] open override fun onMeasure (p0: Int , p1: Int ) onNestedFling [androidJvm] open override fun onNestedFling (p0: View , p1: Float , p2: Float , p3: Boolean ): Boolean onNestedPreFling [androidJvm] open override fun onNestedPreFling (p0: View , p1: Float , p2: Float ): Boolean onNestedPrePerformAccessibilityAction [androidJvm] open override fun onNestedPrePerformAccessibilityAction (p0: View , p1: Int , p2: Bundle ): Boolean onNestedPreScroll [androidJvm] open override fun onNestedPreScroll (p0: View , p1: Int , p2: Int , p3: IntArray ) onNestedScroll [androidJvm] open override fun onNestedScroll (p0: View , p1: Int , p2: Int , p3: Int , p4: Int ) onNestedScrollAccepted [androidJvm] open override fun onNestedScrollAccepted (p0: View , p1: View , p2: Int ) onPause [androidJvm] open fun onPause () onPointerCaptureChange [androidJvm] open fun onPointerCaptureChange (p0: Boolean ) onPopulateAccessibilityEvent [androidJvm] open fun onPopulateAccessibilityEvent (p0: AccessibilityEvent ) onProvideAutofillStructure [androidJvm] open fun onProvideAutofillStructure (p0: ViewStructure , p1: Int ) onProvideAutofillVirtualStructure [androidJvm] open override fun onProvideAutofillVirtualStructure (p0: ViewStructure , p1: Int ) onProvideContentCaptureStructure [androidJvm] open override fun onProvideContentCaptureStructure (p0: ViewStructure , p1: Int ) onProvideStructure [androidJvm] open fun onProvideStructure (p0: ViewStructure ) onProvideVirtualStructure [androidJvm] open override fun onProvideVirtualStructure (p0: ViewStructure ) onReceiveContent [androidJvm] open fun onReceiveContent (p0: ContentInfo ): ContentInfo ? onRequestFocusInDescendants [androidJvm] open fun onRequestFocusInDescendants (p0: Int , p1: Rect ): Boolean onRequestSendAccessibilityEvent [androidJvm] open fun onRequestSendAccessibilityEvent (p0: View , p1: AccessibilityEvent ): Boolean onResolvePointerIcon [androidJvm] open override fun onResolvePointerIcon (p0: MotionEvent , p1: Int ): PointerIcon onRestoreInstanceState [androidJvm] open fun onRestoreInstanceState (p0: Parcelable ) onResume [androidJvm] open fun onResume () onRtlPropertiesChanged [androidJvm] open fun onRtlPropertiesChanged (p0: Int ) onSaveInstanceState [androidJvm] open fun onSaveInstanceState (): Parcelable ? onScreenStateChanged [androidJvm] open fun onScreenStateChanged (p0: Int ) onScrollCaptureSearch [androidJvm] open fun onScrollCaptureSearch (p0: Rect , p1: Point , p2: Consumer < ScrollCaptureTarget >) onSetAlpha [androidJvm] open fun onSetAlpha (p0: Int ): Boolean onSizeChanged [androidJvm] open override fun onSizeChanged (p0: Int , p1: Int , p2: Int , p3: Int ) onStartNestedScroll [androidJvm] open override fun onStartNestedScroll (p0: View , p1: View , p2: Int ): Boolean onStartTemporaryDetach [androidJvm] open override fun onStartTemporaryDetach () onStopNestedScroll [androidJvm] open override fun onStopNestedScroll (p0: View ) onTap [androidJvm] fun onTap (eventJson: String ): Boolean Called from the JS code when a tap is detected. If the JS indicates the tap is being handled within the web view, don't take action, onTouchEvent [androidJvm] open override fun onTouchEvent (p0: MotionEvent ): Boolean onTrackballEvent [androidJvm] open override fun onTrackballEvent (p0: MotionEvent ): Boolean onViewAdded [androidJvm] open fun onViewAdded (p0: View ) onViewRemoved [androidJvm] open fun onViewRemoved (p0: View ) onViewTranslationResponse [androidJvm] open fun onViewTranslationResponse (p0: ViewTranslationResponse ) onVirtualViewTranslationResponses [androidJvm] open override fun onVirtualViewTranslationResponses (p0: LongSparseArray < ViewTranslationResponse >) onVisibilityAggregated [androidJvm] open fun onVisibilityAggregated (p0: Boolean ) onVisibilityChanged [androidJvm] open override fun onVisibilityChanged (p0: View , p1: Int ) onWindowFocusChanged [androidJvm] open override fun onWindowFocusChanged (p0: Boolean ) onWindowVisibilityChanged [androidJvm] open override fun onWindowVisibilityChanged (p0: Int ) overScrollBy [androidJvm] open fun overScrollBy (p0: Int , p1: Int , p2: Int , p3: Int , p4: Int , p5: Int , p6: Int , p7: Int , p8: Boolean ): Boolean pageDown [androidJvm] open fun pageDown (p0: Boolean ): Boolean pageUp [androidJvm] open fun pageUp (p0: Boolean ): Boolean pauseTimers [androidJvm] open fun pauseTimers () performAccessibilityAction [androidJvm] open fun performAccessibilityAction (p0: Int , p1: Bundle ): Boolean performClick [androidJvm] open fun performClick (): Boolean performContextClick [androidJvm] open fun performContextClick (): Boolean open fun performContextClick (p0: Float , p1: Float ): Boolean performHapticFeedback [androidJvm] open fun performHapticFeedback (p0: Int ): Boolean open fun performHapticFeedback (p0: Int , p1: Int ): Boolean performLongClick [androidJvm] open override fun performLongClick (): Boolean open fun performLongClick (p0: Float , p1: Float ): Boolean performReceiveContent [androidJvm] open fun performReceiveContent (p0: ContentInfo ): ContentInfo ? playSoundEffect [androidJvm] open fun playSoundEffect (p0: Int ) post [androidJvm] open fun post (p0: Runnable ): Boolean postDelayed [androidJvm] open fun postDelayed (p0: Runnable , p1: Long ): Boolean postInvalidate [androidJvm] open fun postInvalidate () open fun postInvalidate (p0: Int , p1: Int , p2: Int , p3: Int ) postInvalidateDelayed [androidJvm] open fun postInvalidateDelayed (p0: Long ) open fun postInvalidateDelayed (p0: Long , p1: Int , p2: Int , p3: Int , p4: Int ) postInvalidateOnAnimation [androidJvm] open fun postInvalidateOnAnimation () open fun postInvalidateOnAnimation (p0: Int , p1: Int , p2: Int , p3: Int ) postOnAnimation [androidJvm] open fun postOnAnimation (p0: Runnable ) postOnAnimationDelayed [androidJvm] open fun postOnAnimationDelayed (p0: Runnable , p1: Long ) postUrl [androidJvm] open fun postUrl (p0: String , p1: ByteArray ) postVisualStateCallback [androidJvm] open fun postVisualStateCallback (p0: Long , p1: WebView.VisualStateCallback ) postWebMessage [androidJvm] open fun postWebMessage (p0: WebMessage , p1: Uri ) recomputeViewAttributes [androidJvm] open override fun recomputeViewAttributes (p0: View ) rectangleForHighlightWithID [androidJvm] fun rectangleForHighlightWithID (id: String , callback: ( String ) -> Unit ) refreshDrawableState [androidJvm] open fun refreshDrawableState () releasePointerCapture [androidJvm] open fun releasePointerCapture () reload [androidJvm] open fun reload () removeAllViews [androidJvm] open fun removeAllViews () removeAllViewsInLayout [androidJvm] open fun removeAllViewsInLayout () removeCallbacks [androidJvm] open fun removeCallbacks (p0: Runnable ): Boolean removeDetachedView [androidJvm] open fun removeDetachedView (p0: View , p1: Boolean ) removeJavascriptInterface [androidJvm] open fun removeJavascriptInterface (p0: String ) removeOnAttachStateChangeListener [androidJvm] open fun removeOnAttachStateChangeListener (p0: View.OnAttachStateChangeListener ) removeOnLayoutChangeListener [androidJvm] open fun removeOnLayoutChangeListener (p0: View.OnLayoutChangeListener ) removeOnUnhandledKeyEventListener [androidJvm] open fun removeOnUnhandledKeyEventListener (p0: View.OnUnhandledKeyEventListener ) removeProperty [androidJvm] fun removeProperty (key: String ) removeView [androidJvm] open override fun removeView (p0: View ) removeViewAt [androidJvm] open fun removeViewAt (p0: Int ) removeViewInLayout [androidJvm] open fun removeViewInLayout (p0: View ) removeViews [androidJvm] open fun removeViews (p0: Int , p1: Int ) removeViewsInLayout [androidJvm] open fun removeViewsInLayout (p0: Int , p1: Int ) requestApplyInsets [androidJvm] open fun requestApplyInsets () requestChildFocus [androidJvm] open override fun requestChildFocus (p0: View , p1: View ) requestChildRectangleOnScreen [androidJvm] open override fun requestChildRectangleOnScreen (p0: View , p1: Rect , p2: Boolean ): Boolean requestDisallowInterceptTouchEvent [androidJvm] open override fun requestDisallowInterceptTouchEvent (p0: Boolean ) requestFocus [androidJvm] fun requestFocus (): Boolean fun requestFocus (p0: Int ): Boolean open override fun requestFocus (p0: Int , p1: Rect ): Boolean requestFocusFromTouch [androidJvm] fun requestFocusFromTouch (): Boolean requestFocusNodeHref [androidJvm] open fun requestFocusNodeHref (p0: Message ?) requestImageRef [androidJvm] open fun requestImageRef (p0: Message ) requestLayout [androidJvm] open fun requestLayout () requestPointerCapture [androidJvm] open fun requestPointerCapture () requestRectangleOnScreen [androidJvm] open fun requestRectangleOnScreen (p0: Rect ): Boolean open fun requestRectangleOnScreen (p0: Rect , p1: Boolean ): Boolean requestSendAccessibilityEvent [androidJvm] open override fun requestSendAccessibilityEvent (p0: View , p1: AccessibilityEvent ): Boolean requestTransparentRegion [androidJvm] open override fun requestTransparentRegion (p0: View ) requestUnbufferedDispatch [androidJvm] fun requestUnbufferedDispatch (p0: MotionEvent ) fun requestUnbufferedDispatch (p0: Int ) requireViewById [androidJvm] fun < T : View > requireViewById (p0: Int ): T resetPivot [androidJvm] open fun resetPivot () restoreDefaultFocus [androidJvm] open override fun restoreDefaultFocus (): Boolean restoreHierarchyState [androidJvm] open fun restoreHierarchyState (p0: SparseArray < Parcelable >) restoreState [androidJvm] open fun restoreState (p0: Bundle ): WebBackForwardList ? resumeTimers [androidJvm] open fun resumeTimers () runJavaScript [androidJvm] fun runJavaScript (javascript: String , callback: ( String ) -> Unit ? = null) saveAttributeDataForStyleable [androidJvm] fun saveAttributeDataForStyleable (p0: Context , p1: IntArray , p2: AttributeSet ?, p3: TypedArray , p4: Int , p5: Int ) saveHierarchyState [androidJvm] open fun saveHierarchyState (p0: SparseArray < Parcelable >) saveState [androidJvm] open fun saveState (p0: Bundle ): WebBackForwardList ? saveWebArchive [androidJvm] open fun saveWebArchive (p0: String ) open fun saveWebArchive (p0: String , p1: Boolean , p2: ValueCallback < String >?) scheduleDrawable [androidJvm] open override fun scheduleDrawable (p0: Drawable , p1: Runnable , p2: Long ) scheduleLayoutAnimation [androidJvm] open fun scheduleLayoutAnimation () scrollBy [androidJvm] open fun scrollBy (p0: Int , p1: Int ) scrollLeft [androidJvm] open fun scrollLeft (animated: Boolean = false) scrollRight [androidJvm] open fun scrollRight (animated: Boolean = false) scrollTo [androidJvm] open fun scrollTo (p0: Int , p1: Int ) scrollToEnd [androidJvm] fun scrollToEnd () scrollToId [androidJvm] suspend fun scrollToId (htmlId: String ): Boolean scrollToPosition [androidJvm] fun scrollToPosition (progression: Double ) scrollToStart [androidJvm] fun scrollToStart () scrollToText [androidJvm] suspend fun scrollToText (text: Locator.Text ): Boolean sendAccessibilityEvent [androidJvm] open override fun sendAccessibilityEvent (p0: Int ) sendAccessibilityEventUnchecked [androidJvm] open override fun sendAccessibilityEventUnchecked (p0: AccessibilityEvent ) setAccessibilityDelegate [androidJvm] open fun setAccessibilityDelegate (p0: View.AccessibilityDelegate ?) setAccessibilityHeading [androidJvm] open fun setAccessibilityHeading (p0: Boolean ) setAccessibilityLiveRegion [androidJvm] open fun setAccessibilityLiveRegion (p0: Int ) setAccessibilityPaneTitle [androidJvm] open fun setAccessibilityPaneTitle (p0: CharSequence ?) setAccessibilityTraversalAfter [androidJvm] open fun setAccessibilityTraversalAfter (p0: Int ) setAccessibilityTraversalBefore [androidJvm] open fun setAccessibilityTraversalBefore (p0: Int ) setActivated [androidJvm] open fun setActivated (p0: Boolean ) setAddStatesFromChildren [androidJvm] open fun setAddStatesFromChildren (p0: Boolean ) setAllowClickWhenDisabled [androidJvm] open fun setAllowClickWhenDisabled (p0: Boolean ) setAlpha [androidJvm] open fun setAlpha (p0: Float ) setAnimation [androidJvm] open fun setAnimation (p0: Animation ) setAnimationMatrix [androidJvm] open fun setAnimationMatrix (p0: Matrix ?) setAutofillHints [androidJvm] open fun setAutofillHints (vararg p0: String ) setAutofillId [androidJvm] open fun setAutofillId (p0: AutofillId ?) setBackground [androidJvm] open fun setBackground (p0: Drawable ) setBackgroundColor [androidJvm] open override fun setBackgroundColor (p0: Int ) setBackgroundResource [androidJvm] open fun setBackgroundResource (p0: Int ) setBackgroundTintBlendMode [androidJvm] open fun setBackgroundTintBlendMode (p0: BlendMode ?) setBackgroundTintList [androidJvm] open fun setBackgroundTintList (p0: ColorStateList ?) setBackgroundTintMode [androidJvm] open fun setBackgroundTintMode (p0: PorterDuff.Mode ?) setBottom [androidJvm] fun setBottom (p0: Int ) setCameraDistance [androidJvm] open fun setCameraDistance (p0: Float ) setChildrenDrawingOrderEnabled [androidJvm] open fun setChildrenDrawingOrderEnabled (p0: Boolean ) setClickable [androidJvm] open fun setClickable (p0: Boolean ) setClipBounds [androidJvm] open fun setClipBounds (p0: Rect ) setClipChildren [androidJvm] open fun setClipChildren (p0: Boolean ) setClipToOutline [androidJvm] open fun setClipToOutline (p0: Boolean ) setClipToPadding [androidJvm] open fun setClipToPadding (p0: Boolean ) setContentCaptureSession [androidJvm] open fun setContentCaptureSession (p0: ContentCaptureSession ?) setContentDescription [androidJvm] open fun setContentDescription (p0: CharSequence ) setContextClickable [androidJvm] open fun setContextClickable (p0: Boolean ) setDefaultFocusHighlightEnabled [androidJvm] open fun setDefaultFocusHighlightEnabled (p0: Boolean ) setDescendantFocusability [androidJvm] open fun setDescendantFocusability (p0: Int ) setDownloadListener [androidJvm] open fun setDownloadListener (p0: DownloadListener ?) setDuplicateParentStateEnabled [androidJvm] open fun setDuplicateParentStateEnabled (p0: Boolean ) setElevation [androidJvm] open fun setElevation (p0: Float ) setEnabled [androidJvm] open fun setEnabled (p0: Boolean ) setFadingEdgeLength [androidJvm] open fun setFadingEdgeLength (p0: Int ) setFilterTouchesWhenObscured [androidJvm] open fun setFilterTouchesWhenObscured (p0: Boolean ) setFindListener [androidJvm] open fun setFindListener (p0: WebView.FindListener ?) setFitsSystemWindows [androidJvm] open fun setFitsSystemWindows (p0: Boolean ) setFocusable [androidJvm] open fun setFocusable (p0: Boolean ) open fun setFocusable (p0: Int ) setFocusableInTouchMode [androidJvm] open fun setFocusableInTouchMode (p0: Boolean ) setFocusedByDefault [androidJvm] open fun setFocusedByDefault (p0: Boolean ) setForceDarkAllowed [androidJvm] open fun setForceDarkAllowed (p0: Boolean ) setForeground [androidJvm] open fun setForeground (p0: Drawable ) setForegroundGravity [androidJvm] open fun setForegroundGravity (p0: Int ) setForegroundTintBlendMode [androidJvm] open fun setForegroundTintBlendMode (p0: BlendMode ?) setForegroundTintList [androidJvm] open fun setForegroundTintList (p0: ColorStateList ?) setForegroundTintMode [androidJvm] open fun setForegroundTintMode (p0: PorterDuff.Mode ?) setHapticFeedbackEnabled [androidJvm] open fun setHapticFeedbackEnabled (p0: Boolean ) setHasTransientState [androidJvm] open fun setHasTransientState (p0: Boolean ) setHorizontalFadingEdgeEnabled [androidJvm] open fun setHorizontalFadingEdgeEnabled (p0: Boolean ) setHorizontalScrollBarEnabled [androidJvm] open fun setHorizontalScrollBarEnabled (p0: Boolean ) setHorizontalScrollbarThumbDrawable [androidJvm] open fun setHorizontalScrollbarThumbDrawable (p0: Drawable ?) setHorizontalScrollbarTrackDrawable [androidJvm] open fun setHorizontalScrollbarTrackDrawable (p0: Drawable ?) setHovered [androidJvm] open fun setHovered (p0: Boolean ) setId [androidJvm] open fun setId (p0: Int ) setImportantForAccessibility [androidJvm] open fun setImportantForAccessibility (p0: Int ) setImportantForAutofill [androidJvm] open fun setImportantForAutofill (p0: Int ) setImportantForContentCapture [androidJvm] open fun setImportantForContentCapture (p0: Int ) setInitialScale [androidJvm] open fun setInitialScale (p0: Int ) setKeepScreenOn [androidJvm] open fun setKeepScreenOn (p0: Boolean ) setKeyboardNavigationCluster [androidJvm] open fun setKeyboardNavigationCluster (p0: Boolean ) setLabelFor [androidJvm] open fun setLabelFor (p0: Int ) setLayerPaint [androidJvm] open fun setLayerPaint (p0: Paint ?) setLayerType [androidJvm] open override fun setLayerType (p0: Int , p1: Paint ?) setLayoutAnimation [androidJvm] open fun setLayoutAnimation (p0: LayoutAnimationController ) setLayoutAnimationListener [androidJvm] open fun setLayoutAnimationListener (p0: Animation.AnimationListener ) setLayoutDirection [androidJvm] open fun setLayoutDirection (p0: Int ) setLayoutMode [androidJvm] open fun setLayoutMode (p0: Int ) setLayoutParams [androidJvm] open override fun setLayoutParams (p0: ViewGroup.LayoutParams ) setLayoutTransition [androidJvm] open fun setLayoutTransition (p0: LayoutTransition ) setLeft [androidJvm] fun setLeft (p0: Int ) setLeftTopRightBottom [androidJvm] fun setLeftTopRightBottom (p0: Int , p1: Int , p2: Int , p3: Int ) setLongClickable [androidJvm] open fun setLongClickable (p0: Boolean ) setMeasuredDimension [androidJvm] fun setMeasuredDimension (p0: Int , p1: Int ) setMinimumHeight [androidJvm] open fun setMinimumHeight (p0: Int ) setMinimumWidth [androidJvm] open fun setMinimumWidth (p0: Int ) setMotionEventSplittingEnabled [androidJvm] open fun setMotionEventSplittingEnabled (p0: Boolean ) setNestedScrollingEnabled [androidJvm] open fun setNestedScrollingEnabled (p0: Boolean ) setNetworkAvailable [androidJvm] open fun setNetworkAvailable (p0: Boolean ) setNextClusterForwardId [androidJvm] open fun setNextClusterForwardId (p0: Int ) setNextFocusDownId [androidJvm] open fun setNextFocusDownId (p0: Int ) setNextFocusForwardId [androidJvm] open fun setNextFocusForwardId (p0: Int ) setNextFocusLeftId [androidJvm] open fun setNextFocusLeftId (p0: Int ) setNextFocusRightId [androidJvm] open fun setNextFocusRightId (p0: Int ) setNextFocusUpId [androidJvm] open fun setNextFocusUpId (p0: Int ) setOnApplyWindowInsetsListener [androidJvm] open fun setOnApplyWindowInsetsListener (p0: View.OnApplyWindowInsetsListener ) setOnCapturedPointerListener [androidJvm] open fun setOnCapturedPointerListener (p0: View.OnCapturedPointerListener ) setOnClickListener [androidJvm] open fun setOnClickListener (p0: View.OnClickListener ?) setOnContextClickListener [androidJvm] open fun setOnContextClickListener (p0: View.OnContextClickListener ?) setOnCreateContextMenuListener [androidJvm] open fun setOnCreateContextMenuListener (p0: View.OnCreateContextMenuListener ) setOnDragListener [androidJvm] open fun setOnDragListener (p0: View.OnDragListener ) setOnFocusChangeListener [androidJvm] open fun setOnFocusChangeListener (p0: View.OnFocusChangeListener ) setOnGenericMotionListener [androidJvm] open fun setOnGenericMotionListener (p0: View.OnGenericMotionListener ) setOnHierarchyChangeListener [androidJvm] open fun setOnHierarchyChangeListener (p0: ViewGroup.OnHierarchyChangeListener ) setOnHoverListener [androidJvm] open fun setOnHoverListener (p0: View.OnHoverListener ) setOnKeyListener [androidJvm] open fun setOnKeyListener (p0: View.OnKeyListener ) setOnLongClickListener [androidJvm] open fun setOnLongClickListener (p0: View.OnLongClickListener ?) setOnOverScrolledCallback [androidJvm] fun setOnOverScrolledCallback (callback: R2BasicWebView.OnOverScrolledCallback ) setOnReceiveContentListener [androidJvm] open fun setOnReceiveContentListener (p0: Array < String >?, p1: OnReceiveContentListener ?) setOnScrollChangeListener [androidJvm] open fun setOnScrollChangeListener (p0: View.OnScrollChangeListener ) setOnTouchListener [androidJvm] open fun setOnTouchListener (p0: View.OnTouchListener ) setOutlineAmbientShadowColor [androidJvm] open fun setOutlineAmbientShadowColor (p0: Int ) setOutlineProvider [androidJvm] open fun setOutlineProvider (p0: ViewOutlineProvider ) setOutlineSpotShadowColor [androidJvm] open fun setOutlineSpotShadowColor (p0: Int ) setOverScrollMode [androidJvm] open override fun setOverScrollMode (p0: Int ) setPadding [androidJvm] open fun setPadding (p0: Int , p1: Int , p2: Int , p3: Int ) setPaddingRelative [androidJvm] open fun setPaddingRelative (p0: Int , p1: Int , p2: Int , p3: Int ) setPivotX [androidJvm] open fun setPivotX (p0: Float ) setPivotY [androidJvm] open fun setPivotY (p0: Float ) setPointerIcon [androidJvm] open fun setPointerIcon (p0: PointerIcon ) setPressed [androidJvm] open fun setPressed (p0: Boolean ) setProperty [androidJvm] fun setProperty (key: String , value: String ) setRenderEffect [androidJvm] open fun setRenderEffect (p0: RenderEffect ?) setRendererPriorityPolicy [androidJvm] open fun setRendererPriorityPolicy (p0: Int , p1: Boolean ) setRevealOnFocusHint [androidJvm] fun setRevealOnFocusHint (p0: Boolean ) setRight [androidJvm] fun setRight (p0: Int ) setRotation [androidJvm] open fun setRotation (p0: Float ) setRotationX [androidJvm] open fun setRotationX (p0: Float ) setRotationY [androidJvm] open fun setRotationY (p0: Float ) setSaveEnabled [androidJvm] open fun setSaveEnabled (p0: Boolean ) setSaveFromParentEnabled [androidJvm] open fun setSaveFromParentEnabled (p0: Boolean ) setScaleX [androidJvm] open fun setScaleX (p0: Float ) setScaleY [androidJvm] open fun setScaleY (p0: Float ) setScreenReaderFocusable [androidJvm] open fun setScreenReaderFocusable (p0: Boolean ) setScrollBarDefaultDelayBeforeFade [androidJvm] open fun setScrollBarDefaultDelayBeforeFade (p0: Int ) setScrollBarFadeDuration [androidJvm] open fun setScrollBarFadeDuration (p0: Int ) setScrollbarFadingEnabled [androidJvm] open fun setScrollbarFadingEnabled (p0: Boolean ) setScrollBarSize [androidJvm] open fun setScrollBarSize (p0: Int ) setScrollBarStyle [androidJvm] open override fun setScrollBarStyle (p0: Int ) setScrollCaptureCallback [androidJvm] fun setScrollCaptureCallback (p0: ScrollCaptureCallback ?) setScrollCaptureHint [androidJvm] open fun setScrollCaptureHint (p0: Int ) setScrollContainer [androidJvm] open fun setScrollContainer (p0: Boolean ) setScrollIndicators [androidJvm] open fun setScrollIndicators (p0: Int ) open fun setScrollIndicators (p0: Int , p1: Int ) setScrollMode [androidJvm] fun setScrollMode (scrollMode: Boolean ) setScrollX [androidJvm] open fun setScrollX (p0: Int ) setScrollY [androidJvm] open fun setScrollY (p0: Int ) setSelected [androidJvm] open fun setSelected (p0: Boolean ) setSoundEffectsEnabled [androidJvm] open fun setSoundEffectsEnabled (p0: Boolean ) setStateDescription [androidJvm] open fun setStateDescription (p0: CharSequence ?) setStateListAnimator [androidJvm] open fun setStateListAnimator (p0: StateListAnimator ) setStaticTransformationsEnabled [androidJvm] open fun setStaticTransformationsEnabled (p0: Boolean ) setSystemGestureExclusionRects [androidJvm] open fun setSystemGestureExclusionRects (p0: MutableList < Rect >) setTag [androidJvm] open fun setTag (p0: Any ) open fun setTag (p0: Int , p1: Any ) setTextAlignment [androidJvm] open fun setTextAlignment (p0: Int ) setTextClassifier [androidJvm] open fun setTextClassifier (p0: TextClassifier ?) setTextDirection [androidJvm] open fun setTextDirection (p0: Int ) setTooltipText [androidJvm] open fun setTooltipText (p0: CharSequence ?) setTop [androidJvm] fun setTop (p0: Int ) setTouchDelegate [androidJvm] open fun setTouchDelegate (p0: TouchDelegate ) setTouchscreenBlocksFocus [androidJvm] open fun setTouchscreenBlocksFocus (p0: Boolean ) setTransitionAlpha [androidJvm] open fun setTransitionAlpha (p0: Float ) setTransitionGroup [androidJvm] open fun setTransitionGroup (p0: Boolean ) setTransitionName [androidJvm] fun setTransitionName (p0: String ) setTransitionVisibility [androidJvm] open fun setTransitionVisibility (p0: Int ) setTranslationX [androidJvm] open fun setTranslationX (p0: Float ) setTranslationY [androidJvm] open fun setTranslationY (p0: Float ) setTranslationZ [androidJvm] open fun setTranslationZ (p0: Float ) setVerticalFadingEdgeEnabled [androidJvm] open fun setVerticalFadingEdgeEnabled (p0: Boolean ) setVerticalScrollBarEnabled [androidJvm] open fun setVerticalScrollBarEnabled (p0: Boolean ) setVerticalScrollbarPosition [androidJvm] open fun setVerticalScrollbarPosition (p0: Int ) setVerticalScrollbarThumbDrawable [androidJvm] open fun setVerticalScrollbarThumbDrawable (p0: Drawable ?) setVerticalScrollbarTrackDrawable [androidJvm] open fun setVerticalScrollbarTrackDrawable (p0: Drawable ?) setViewTranslationCallback [androidJvm] open fun setViewTranslationCallback (p0: ViewTranslationCallback ) setVisibility [androidJvm] open fun setVisibility (p0: Int ) setWebChromeClient [androidJvm] open fun setWebChromeClient (p0: WebChromeClient ?) setWebViewClient [androidJvm] open fun setWebViewClient (p0: WebViewClient ) setWebViewRenderProcessClient [androidJvm] open fun setWebViewRenderProcessClient (p0: WebViewRenderProcessClient ?) open fun setWebViewRenderProcessClient (p0: Executor , p1: WebViewRenderProcessClient ) setWillNotDraw [androidJvm] open fun setWillNotDraw (p0: Boolean ) setWindowInsetsAnimationCallback [androidJvm] open override fun setWindowInsetsAnimationCallback (p0: WindowInsetsAnimation.Callback ?) setX [androidJvm] open fun setX (p0: Float ) setY [androidJvm] open fun setY (p0: Float ) setZ [androidJvm] open fun setZ (p0: Float ) showContextMenu [androidJvm] open fun showContextMenu (): Boolean open fun showContextMenu (p0: Float , p1: Float ): Boolean showContextMenuForChild [androidJvm] open override fun showContextMenuForChild (p0: View ): Boolean open override fun showContextMenuForChild (p0: View , p1: Float , p2: Float ): Boolean startActionMode [androidJvm] open override fun startActionMode (callback: ActionMode.Callback ?): ActionMode ? @ RequiresApi (value = 23) open override fun startActionMode (callback: ActionMode.Callback ?, type: Int ): ActionMode ? startActionModeForChild [androidJvm] open override fun startActionModeForChild (p0: View , p1: ActionMode.Callback ): ActionMode open override fun startActionModeForChild (p0: View , p1: ActionMode.Callback , p2: Int ): ActionMode startAnimation [androidJvm] open fun startAnimation (p0: Animation ) startDragAndDrop [androidJvm] fun startDragAndDrop (p0: ClipData , p1: View.DragShadowBuilder , p2: Any , p3: Int ): Boolean startLayoutAnimation [androidJvm] open fun startLayoutAnimation () startNestedScroll [androidJvm] open fun startNestedScroll (p0: Int ): Boolean startViewTransition [androidJvm] open fun startViewTransition (p0: View ) stopLoading [androidJvm] open fun stopLoading () stopNestedScroll [androidJvm] open fun stopNestedScroll () suppressLayout [androidJvm] open fun suppressLayout (p0: Boolean ) toInt [androidJvm] fun Boolean . toInt (): Int toString [androidJvm] open override fun toString (): String transformMatrixToGlobal [androidJvm] open fun transformMatrixToGlobal (p0: Matrix ) transformMatrixToLocal [androidJvm] open fun transformMatrixToLocal (p0: Matrix ) unscheduleDrawable [androidJvm] open fun unscheduleDrawable (p0: Drawable ) open override fun unscheduleDrawable (p0: Drawable , p1: Runnable ) updateDragShadow [androidJvm] fun updateDragShadow (p0: View.DragShadowBuilder ) updateViewLayout [androidJvm] open override fun updateViewLayout (p0: View , p1: ViewGroup.LayoutParams ) verifyDrawable [androidJvm] open fun verifyDrawable (p0: Drawable ): Boolean willNotDraw [androidJvm] open fun willNotDraw (): Boolean zoomBy [androidJvm] open fun zoomBy (p0: Float ) zoomIn [androidJvm] open fun zoomIn (): Boolean zoomOut [androidJvm] open fun zoomOut (): Boolean Properties \u00b6 Name Summary callback [androidJvm] var callback : R2BasicWebView.OnOverScrolledCallback ? = null listener [androidJvm] lateinit var listener : R2BasicWebView.Listener navigator [androidJvm] lateinit var navigator : Navigator progression [androidJvm] val progression : Double Computes the current progression in the resource. resourceUrl [androidJvm] var resourceUrl : String ? = null scrollMode [androidJvm] val scrollMode : Boolean Inheritors \u00b6 Name R2WebView","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/#r2basicwebview","text":"[androidJvm]\\ open class R2BasicWebView (context: Context , attrs: AttributeSet ) : WebView","title":"R2BasicWebView"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/#types","text":"Name Summary Callback2Wrapper [androidJvm] @ RequiresApi (value = 23) inner class Callback2Wrapper (callback: ActionMode.Callback , callback2: ActionMode.Callback2 ?) : ActionMode.Callback2 , ActionMode.Callback CallbackWrapper [androidJvm] inner class CallbackWrapper (callback: ActionMode.Callback ) : ActionMode.Callback A wrapper for the app-provided custom ActionMode.Callback which clears the selection when activating one of the menu items. Listener [androidJvm] interface Listener OnOverScrolledCallback [androidJvm] interface OnOverScrolledCallback","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/#functions","text":"Name Summary addChildrenForAccessibility [androidJvm] open override fun addChildrenForAccessibility (p0: ArrayList < View >) addExtraDataToAccessibilityNodeInfo [androidJvm] open override fun addExtraDataToAccessibilityNodeInfo (p0: AccessibilityNodeInfo , p1: String , p2: Bundle ?) addFocusables [androidJvm] open fun addFocusables (p0: ArrayList < View >, p1: Int ) open override fun addFocusables (p0: ArrayList < View >, p1: Int , p2: Int ) addJavascriptInterface [androidJvm] open fun addJavascriptInterface (p0: Any , p1: String ) addKeyboardNavigationClusters [androidJvm] open override fun addKeyboardNavigationClusters (p0: MutableCollection < View >, p1: Int ) addOnAttachStateChangeListener [androidJvm] open fun addOnAttachStateChangeListener (p0: View.OnAttachStateChangeListener ) addOnLayoutChangeListener [androidJvm] open fun addOnLayoutChangeListener (p0: View.OnLayoutChangeListener ) addOnUnhandledKeyEventListener [androidJvm] open fun addOnUnhandledKeyEventListener (p0: View.OnUnhandledKeyEventListener ) addStatesFromChildren [androidJvm] open fun addStatesFromChildren (): Boolean addTouchables [androidJvm] open override fun addTouchables (p0: ArrayList < View >) addView [androidJvm] open fun addView (p0: View ) open override fun addView (p0: View , p1: ViewGroup.LayoutParams ) open fun addView (p0: View , p1: Int ) open fun addView (p0: View , p1: Int , p2: ViewGroup.LayoutParams ) open fun addView (p0: View , p1: Int , p2: Int ) addViewInLayout [androidJvm] open fun addViewInLayout (p0: View , p1: Int , p2: ViewGroup.LayoutParams ): Boolean open fun addViewInLayout (p0: View , p1: Int , p2: ViewGroup.LayoutParams , p3: Boolean ): Boolean animate [androidJvm] open fun animate (): ViewPropertyAnimator announceForAccessibility [androidJvm] open fun announceForAccessibility (p0: CharSequence ) attachLayoutAnimationParameters [androidJvm] open fun attachLayoutAnimationParameters (p0: View , p1: ViewGroup.LayoutParams , p2: Int , p3: Int ) attachViewToParent [androidJvm] open fun attachViewToParent (p0: View , p1: Int , p2: ViewGroup.LayoutParams ) autofill [androidJvm] open fun autofill (p0: AutofillValue ) open override fun autofill (p0: SparseArray < AutofillValue >) awakenScrollBars [androidJvm] open fun awakenScrollBars (): Boolean open fun awakenScrollBars (p0: Int ): Boolean open fun awakenScrollBars (p0: Int , p1: Boolean ): Boolean bringChildToFront [androidJvm] open override fun bringChildToFront (p0: View ) bringToFront [androidJvm] open fun bringToFront () buildLayer [androidJvm] open fun buildLayer () callOnClick [androidJvm] open fun callOnClick (): Boolean canAnimate [androidJvm] open fun canAnimate (): Boolean cancelDragAndDrop [androidJvm] fun cancelDragAndDrop () cancelLongPress [androidJvm] open fun cancelLongPress () cancelPendingInputEvents [androidJvm] fun cancelPendingInputEvents () canGoBack [androidJvm] open fun canGoBack (): Boolean canGoBackOrForward [androidJvm] open fun canGoBackOrForward (p0: Int ): Boolean canGoForward [androidJvm] open fun canGoForward (): Boolean canResolveLayoutDirection [androidJvm] open fun canResolveLayoutDirection (): Boolean canResolveTextAlignment [androidJvm] open fun canResolveTextAlignment (): Boolean canResolveTextDirection [androidJvm] open fun canResolveTextDirection (): Boolean canScrollHorizontally [androidJvm] open fun canScrollHorizontally (p0: Int ): Boolean canScrollVertically [androidJvm] open fun canScrollVertically (p0: Int ): Boolean checkInputConnectionProxy [androidJvm] open fun checkInputConnectionProxy (p0: View ): Boolean childDrawableStateChanged [androidJvm] open override fun childDrawableStateChanged (p0: View ) childHasTransientStateChanged [androidJvm] open override fun childHasTransientStateChanged (p0: View , p1: Boolean ) cleanupLayoutState [androidJvm] open fun cleanupLayoutState (p0: View ) clearAnimation [androidJvm] open fun clearAnimation () clearCache [androidJvm] open fun clearCache (p0: Boolean ) clearChildFocus [androidJvm] open override fun clearChildFocus (p0: View ) clearDisappearingChildren [androidJvm] open fun clearDisappearingChildren () clearFocus [androidJvm] open override fun clearFocus () clearFormData [androidJvm] open fun clearFormData () clearHistory [androidJvm] open fun clearHistory () clearMatches [androidJvm] open fun clearMatches () clearSslPreferences [androidJvm] open fun clearSslPreferences () clearViewTranslationCallback [androidJvm] open fun clearViewTranslationCallback () computeHorizontalScrollExtent [androidJvm] open fun computeHorizontalScrollExtent (): Int computeHorizontalScrollOffset [androidJvm] open override fun computeHorizontalScrollOffset (): Int computeHorizontalScrollRange [androidJvm] open override fun computeHorizontalScrollRange (): Int computeScroll [androidJvm] open override fun computeScroll () computeSystemWindowInsets [androidJvm] open fun computeSystemWindowInsets (p0: WindowInsets , p1: Rect ): WindowInsets computeVerticalScrollExtent [androidJvm] open override fun computeVerticalScrollExtent (): Int computeVerticalScrollOffset [androidJvm] open override fun computeVerticalScrollOffset (): Int computeVerticalScrollRange [androidJvm] open override fun computeVerticalScrollRange (): Int copyBackForwardList [androidJvm] open fun copyBackForwardList (): WebBackForwardList createAccessibilityNodeInfo [androidJvm] open fun createAccessibilityNodeInfo (): AccessibilityNodeInfo createAnnotation [androidJvm] fun createAnnotation (id: String ) createContextMenu [androidJvm] open fun createContextMenu (p0: ContextMenu ) createHighlight [androidJvm] fun createHighlight (locator: String ?, color: String ?, callback: ( String ) -> Unit ) createPrintDocumentAdapter [androidJvm] open fun createPrintDocumentAdapter (p0: String ): PrintDocumentAdapter createWebMessageChannel [androidJvm] open fun createWebMessageChannel (): Array < WebMessagePort > debug [androidJvm] open fun debug (p0: Int ) destroy [androidJvm] open fun destroy () destroyHighlight [androidJvm] fun destroyHighlight (id: String ) detachAllViewsFromParent [androidJvm] open fun detachAllViewsFromParent () detachViewFromParent [androidJvm] open fun detachViewFromParent (p0: View ) open fun detachViewFromParent (p0: Int ) detachViewsFromParent [androidJvm] open fun detachViewsFromParent (p0: Int , p1: Int ) dispatchApplyWindowInsets [androidJvm] open override fun dispatchApplyWindowInsets (p0: WindowInsets ): WindowInsets dispatchCapturedPointerEvent [androidJvm] open override fun dispatchCapturedPointerEvent (p0: MotionEvent ): Boolean dispatchConfigurationChanged [androidJvm] open override fun dispatchConfigurationChanged (p0: Configuration ) dispatchCreateViewTranslationRequest [androidJvm] open override fun dispatchCreateViewTranslationRequest (p0: MutableMap < AutofillId , LongArray >, p1: IntArray , p2: TranslationCapability ?, p3: MutableList < ViewTranslationRequest >) dispatchDisplayHint [androidJvm] open override fun dispatchDisplayHint (p0: Int ) dispatchDragEvent [androidJvm] open override fun dispatchDragEvent (p0: DragEvent ): Boolean dispatchDraw [androidJvm] open override fun dispatchDraw (p0: Canvas ) dispatchDrawableHotspotChanged [androidJvm] open override fun dispatchDrawableHotspotChanged (p0: Float , p1: Float ) dispatchFinishTemporaryDetach [androidJvm] open override fun dispatchFinishTemporaryDetach () dispatchFreezeSelfOnly [androidJvm] open fun dispatchFreezeSelfOnly (p0: SparseArray < Parcelable >) dispatchGenericFocusedEvent [androidJvm] open override fun dispatchGenericFocusedEvent (p0: MotionEvent ): Boolean dispatchGenericMotionEvent [androidJvm] open fun dispatchGenericMotionEvent (p0: MotionEvent ): Boolean dispatchGenericPointerEvent [androidJvm] open override fun dispatchGenericPointerEvent (p0: MotionEvent ): Boolean dispatchHoverEvent [androidJvm] open override fun dispatchHoverEvent (p0: MotionEvent ): Boolean dispatchKeyEvent [androidJvm] open override fun dispatchKeyEvent (p0: KeyEvent ): Boolean dispatchKeyEventPreIme [androidJvm] open override fun dispatchKeyEventPreIme (p0: KeyEvent ): Boolean dispatchKeyShortcutEvent [androidJvm] open override fun dispatchKeyShortcutEvent (p0: KeyEvent ): Boolean dispatchNestedFling [androidJvm] open fun dispatchNestedFling (p0: Float , p1: Float , p2: Boolean ): Boolean dispatchNestedPreFling [androidJvm] open fun dispatchNestedPreFling (p0: Float , p1: Float ): Boolean dispatchNestedPrePerformAccessibilityAction [androidJvm] open fun dispatchNestedPrePerformAccessibilityAction (p0: Int , p1: Bundle ): Boolean dispatchNestedPreScroll [androidJvm] open fun dispatchNestedPreScroll (p0: Int , p1: Int , p2: IntArray ?, p3: IntArray ?): Boolean dispatchNestedScroll [androidJvm] open fun dispatchNestedScroll (p0: Int , p1: Int , p2: Int , p3: Int , p4: IntArray ?): Boolean dispatchPointerCaptureChanged [androidJvm] open override fun dispatchPointerCaptureChanged (p0: Boolean ) dispatchPopulateAccessibilityEvent [androidJvm] open fun dispatchPopulateAccessibilityEvent (p0: AccessibilityEvent ): Boolean dispatchProvideAutofillStructure [androidJvm] open override fun dispatchProvideAutofillStructure (p0: ViewStructure , p1: Int ) dispatchProvideStructure [androidJvm] open override fun dispatchProvideStructure (p0: ViewStructure ) dispatchRestoreInstanceState [androidJvm] open override fun dispatchRestoreInstanceState (p0: SparseArray < Parcelable >) dispatchSaveInstanceState [androidJvm] open override fun dispatchSaveInstanceState (p0: SparseArray < Parcelable >) dispatchScrollCaptureSearch [androidJvm] open override fun dispatchScrollCaptureSearch (p0: Rect , p1: Point , p2: Consumer < ScrollCaptureTarget >) dispatchSetActivated [androidJvm] open override fun dispatchSetActivated (p0: Boolean ) dispatchSetPressed [androidJvm] open override fun dispatchSetPressed (p0: Boolean ) dispatchSetSelected [androidJvm] open override fun dispatchSetSelected (p0: Boolean ) dispatchStartTemporaryDetach [androidJvm] open override fun dispatchStartTemporaryDetach () dispatchThawSelfOnly [androidJvm] open fun dispatchThawSelfOnly (p0: SparseArray < Parcelable >) dispatchTouchEvent [androidJvm] open override fun dispatchTouchEvent (p0: MotionEvent ): Boolean dispatchTrackballEvent [androidJvm] open override fun dispatchTrackballEvent (p0: MotionEvent ): Boolean dispatchUnhandledMove [androidJvm] open override fun dispatchUnhandledMove (p0: View , p1: Int ): Boolean dispatchVisibilityChanged [androidJvm] open override fun dispatchVisibilityChanged (p0: View , p1: Int ) dispatchWindowFocusChanged [androidJvm] open override fun dispatchWindowFocusChanged (p0: Boolean ) dispatchWindowInsetsAnimationEnd [androidJvm] open override fun dispatchWindowInsetsAnimationEnd (p0: WindowInsetsAnimation ) dispatchWindowInsetsAnimationPrepare [androidJvm] open override fun dispatchWindowInsetsAnimationPrepare (p0: WindowInsetsAnimation ) dispatchWindowInsetsAnimationProgress [androidJvm] open override fun dispatchWindowInsetsAnimationProgress (p0: WindowInsets , p1: MutableList < WindowInsetsAnimation >): WindowInsets dispatchWindowInsetsAnimationStart [androidJvm] open override fun dispatchWindowInsetsAnimationStart (p0: WindowInsetsAnimation , p1: WindowInsetsAnimation.Bounds ): WindowInsetsAnimation.Bounds dispatchWindowVisibilityChanged [androidJvm] open override fun dispatchWindowVisibilityChanged (p0: Int ) documentHasImages [androidJvm] open fun documentHasImages (p0: Message ) draw [androidJvm] open fun draw (p0: Canvas ) drawableHotspotChanged [androidJvm] open fun drawableHotspotChanged (p0: Float , p1: Float ) drawableStateChanged [androidJvm] open override fun drawableStateChanged () drawChild [androidJvm] open fun drawChild (p0: Canvas , p1: View , p2: Long ): Boolean endViewTransition [androidJvm] open fun endViewTransition (p0: View ) evaluateJavascript [androidJvm] open fun evaluateJavascript (p0: String , p1: ValueCallback < String >?) findAllAsync [androidJvm] open fun findAllAsync (p0: String ) findFocus [androidJvm] open override fun findFocus (): View findNext [androidJvm] open fun findNext (p0: Boolean ) findViewById [androidJvm] fun < T : View > findViewById (p0: Int ): T findViewsWithText [androidJvm] open override fun findViewsWithText (p0: ArrayList < View >, p1: CharSequence , p2: Int ) findViewWithTag [androidJvm] fun < T : View > findViewWithTag (p0: Any ): T flingScroll [androidJvm] open fun flingScroll (p0: Int , p1: Int ) focusableViewAvailable [androidJvm] open override fun focusableViewAvailable (p0: View ) focusSearch [androidJvm] open fun focusSearch (p0: Int ): View open override fun focusSearch (p0: View , p1: Int ): View forceHasOverlappingRendering [androidJvm] open fun forceHasOverlappingRendering (p0: Boolean ) forceLayout [androidJvm] open fun forceLayout () gatherTransparentRegion [androidJvm] open override fun gatherTransparentRegion (p0: Region ?): Boolean generateDisplayHash [androidJvm] open fun generateDisplayHash (p0: String , p1: Rect ?, p2: Executor , p3: DisplayHashResultCallback ) getAccessibilityClassName [androidJvm] open override fun getAccessibilityClassName (): CharSequence getAccessibilityDelegate [androidJvm] open fun getAccessibilityDelegate (): View.AccessibilityDelegate getAccessibilityLiveRegion [androidJvm] open fun getAccessibilityLiveRegion (): Int getAccessibilityNodeProvider [androidJvm] open override fun getAccessibilityNodeProvider (): AccessibilityNodeProvider getAccessibilityPaneTitle [androidJvm] open fun getAccessibilityPaneTitle (): CharSequence ? getAccessibilityTraversalAfter [androidJvm] open fun getAccessibilityTraversalAfter (): Int getAccessibilityTraversalBefore [androidJvm] open fun getAccessibilityTraversalBefore (): Int getAlpha [androidJvm] open fun getAlpha (): Float getAnimation [androidJvm] open fun getAnimation (): Animation getAnimationMatrix [androidJvm] open fun getAnimationMatrix (): Matrix ? getApplicationWindowToken [androidJvm] open fun getApplicationWindowToken (): IBinder getAttributeResolutionStack [androidJvm] open fun getAttributeResolutionStack (p0: Int ): IntArray getAttributeSourceResourceMap [androidJvm] open fun getAttributeSourceResourceMap (): MutableMap < Int , Int > getAutofillHints [androidJvm] open fun getAutofillHints (): Array < String >? getAutofillId [androidJvm] fun getAutofillId (): AutofillId getAutofillType [androidJvm] open fun getAutofillType (): Int getAutofillValue [androidJvm] open fun getAutofillValue (): AutofillValue ? getBackground [androidJvm] open fun getBackground (): Drawable getBackgroundTintBlendMode [androidJvm] open fun getBackgroundTintBlendMode (): BlendMode ? getBackgroundTintList [androidJvm] open fun getBackgroundTintList (): ColorStateList ? getBackgroundTintMode [androidJvm] open fun getBackgroundTintMode (): PorterDuff.Mode ? getBaseline [androidJvm] open fun getBaseline (): Int getBottom [androidJvm] fun getBottom (): Int getBottomFadingEdgeStrength [androidJvm] open fun getBottomFadingEdgeStrength (): Float getBottomPaddingOffset [androidJvm] open fun getBottomPaddingOffset (): Int getCameraDistance [androidJvm] open fun getCameraDistance (): Float getCertificate [androidJvm] open fun getCertificate (): SslCertificate ? getChildAt [androidJvm] open fun getChildAt (p0: Int ): View getChildCount [androidJvm] open fun getChildCount (): Int getChildDrawingOrder [androidJvm] fun getChildDrawingOrder (p0: Int ): Int open fun getChildDrawingOrder (p0: Int , p1: Int ): Int getChildStaticTransformation [androidJvm] open fun getChildStaticTransformation (p0: View , p1: Transformation ): Boolean getChildVisibleRect [androidJvm] open override fun getChildVisibleRect (p0: View , p1: Rect , p2: Point ): Boolean getClipBounds [androidJvm] open fun getClipBounds (): Rect open fun getClipBounds (p0: Rect ): Boolean getClipChildren [androidJvm] open fun getClipChildren (): Boolean getClipToOutline [androidJvm] fun getClipToOutline (): Boolean getClipToPadding [androidJvm] open fun getClipToPadding (): Boolean getContentCaptureSession [androidJvm] fun getContentCaptureSession (): ContentCaptureSession ? getContentDescription [androidJvm] open fun getContentDescription (): CharSequence getContentHeight [androidJvm] open fun getContentHeight (): Int getContext [androidJvm] fun getContext (): Context getContextMenuInfo [androidJvm] open fun getContextMenuInfo (): ContextMenu.ContextMenuInfo getCurrentSelectionInfo [androidJvm] fun getCurrentSelectionInfo (callback: ( String ) -> Unit ) getCurrentSelectionRect [androidJvm] fun getCurrentSelectionRect (callback: ( String ) -> Unit ) getDefaultFocusHighlightEnabled [androidJvm] fun getDefaultFocusHighlightEnabled (): Boolean getDescendantFocusability [androidJvm] open fun getDescendantFocusability (): Int getDisplay [androidJvm] open fun getDisplay (): Display getDrawableState [androidJvm] fun getDrawableState (): IntArray getDrawingRect [androidJvm] open fun getDrawingRect (p0: Rect ) getDrawingTime [androidJvm] open fun getDrawingTime (): Long getElevation [androidJvm] open fun getElevation (): Float getExplicitStyle [androidJvm] open fun getExplicitStyle (): Int getFavicon [androidJvm] open fun getFavicon (): Bitmap ? getFilterTouchesWhenObscured [androidJvm] open fun getFilterTouchesWhenObscured (): Boolean getFitsSystemWindows [androidJvm] open fun getFitsSystemWindows (): Boolean getFocusable [androidJvm] open fun getFocusable (): Int getFocusables [androidJvm] open fun getFocusables (p0: Int ): ArrayList < View > getFocusedChild [androidJvm] open fun getFocusedChild (): View getFocusedRect [androidJvm] open fun getFocusedRect (p0: Rect ) getForeground [androidJvm] open fun getForeground (): Drawable getForegroundGravity [androidJvm] open fun getForegroundGravity (): Int getForegroundTintBlendMode [androidJvm] open fun getForegroundTintBlendMode (): BlendMode ? getForegroundTintList [androidJvm] open fun getForegroundTintList (): ColorStateList ? getForegroundTintMode [androidJvm] open fun getForegroundTintMode (): PorterDuff.Mode ? getGlobalVisibleRect [androidJvm] fun getGlobalVisibleRect (p0: Rect ): Boolean open fun getGlobalVisibleRect (p0: Rect , p1: Point ): Boolean getHandler [androidJvm] open override fun getHandler (): Handler getHasOverlappingRendering [androidJvm] fun getHasOverlappingRendering (): Boolean getHeight [androidJvm] fun getHeight (): Int getHitRect [androidJvm] open fun getHitRect (p0: Rect ) getHitTestResult [androidJvm] open fun getHitTestResult (): WebView.HitTestResult getHorizontalFadingEdgeLength [androidJvm] open fun getHorizontalFadingEdgeLength (): Int getHorizontalScrollbarHeight [androidJvm] open fun getHorizontalScrollbarHeight (): Int getHorizontalScrollbarThumbDrawable [androidJvm] open fun getHorizontalScrollbarThumbDrawable (): Drawable ? getHorizontalScrollbarTrackDrawable [androidJvm] open fun getHorizontalScrollbarTrackDrawable (): Drawable ? getId [androidJvm] open fun getId (): Int getImportantForAccessibility [androidJvm] open fun getImportantForAccessibility (): Int getImportantForAutofill [androidJvm] open fun getImportantForAutofill (): Int getImportantForContentCapture [androidJvm] open fun getImportantForContentCapture (): Int getKeepScreenOn [androidJvm] open fun getKeepScreenOn (): Boolean getKeyDispatcherState [androidJvm] open fun getKeyDispatcherState (): KeyEvent.DispatcherState getLabelFor [androidJvm] open fun getLabelFor (): Int getLayerType [androidJvm] open fun getLayerType (): Int getLayoutAnimation [androidJvm] open fun getLayoutAnimation (): LayoutAnimationController getLayoutAnimationListener [androidJvm] open fun getLayoutAnimationListener (): Animation.AnimationListener getLayoutDirection [androidJvm] open fun getLayoutDirection (): Int getLayoutMode [androidJvm] open fun getLayoutMode (): Int getLayoutParams [androidJvm] open fun getLayoutParams (): ViewGroup.LayoutParams getLayoutTransition [androidJvm] open fun getLayoutTransition (): LayoutTransition getLeft [androidJvm] fun getLeft (): Int getLeftFadingEdgeStrength [androidJvm] open fun getLeftFadingEdgeStrength (): Float getLeftPaddingOffset [androidJvm] open fun getLeftPaddingOffset (): Int getLocalVisibleRect [androidJvm] fun getLocalVisibleRect (p0: Rect ): Boolean getLocationInSurface [androidJvm] open fun getLocationInSurface (p0: IntArray ) getLocationInWindow [androidJvm] open fun getLocationInWindow (p0: IntArray ) getLocationOnScreen [androidJvm] open fun getLocationOnScreen (p0: IntArray ) getMatrix [androidJvm] open fun getMatrix (): Matrix getMeasuredHeight [androidJvm] fun getMeasuredHeight (): Int getMeasuredHeightAndState [androidJvm] fun getMeasuredHeightAndState (): Int getMeasuredState [androidJvm] fun getMeasuredState (): Int getMeasuredWidth [androidJvm] fun getMeasuredWidth (): Int getMeasuredWidthAndState [androidJvm] fun getMeasuredWidthAndState (): Int getMinimumHeight [androidJvm] open fun getMinimumHeight (): Int getMinimumWidth [androidJvm] open fun getMinimumWidth (): Int getNestedScrollAxes [androidJvm] open fun getNestedScrollAxes (): Int getNextClusterForwardId [androidJvm] open fun getNextClusterForwardId (): Int getNextFocusDownId [androidJvm] open fun getNextFocusDownId (): Int getNextFocusForwardId [androidJvm] open fun getNextFocusForwardId (): Int getNextFocusLeftId [androidJvm] open fun getNextFocusLeftId (): Int getNextFocusRightId [androidJvm] open fun getNextFocusRightId (): Int getNextFocusUpId [androidJvm] open fun getNextFocusUpId (): Int getOnFocusChangeListener [androidJvm] open fun getOnFocusChangeListener (): View.OnFocusChangeListener getOriginalUrl [androidJvm] open fun getOriginalUrl (): String ? getOutlineAmbientShadowColor [androidJvm] open fun getOutlineAmbientShadowColor (): Int getOutlineProvider [androidJvm] open fun getOutlineProvider (): ViewOutlineProvider getOutlineSpotShadowColor [androidJvm] open fun getOutlineSpotShadowColor (): Int getOverlay [androidJvm] open override fun getOverlay (): ViewGroupOverlay getOverScrollMode [androidJvm] open fun getOverScrollMode (): Int getPaddingBottom [androidJvm] open fun getPaddingBottom (): Int getPaddingEnd [androidJvm] open fun getPaddingEnd (): Int getPaddingLeft [androidJvm] open fun getPaddingLeft (): Int getPaddingRight [androidJvm] open fun getPaddingRight (): Int getPaddingStart [androidJvm] open fun getPaddingStart (): Int getPaddingTop [androidJvm] open fun getPaddingTop (): Int getParent [androidJvm] fun getParent (): ViewParent getParentForAccessibility [androidJvm] open fun getParentForAccessibility (): ViewParent getPivotX [androidJvm] open fun getPivotX (): Float getPivotY [androidJvm] open fun getPivotY (): Float getPointerIcon [androidJvm] open fun getPointerIcon (): PointerIcon getProgress [androidJvm] open fun getProgress (): Int getReceiveContentMimeTypes [androidJvm] open fun getReceiveContentMimeTypes (): Array < String >? getRendererPriorityWaivedWhenNotVisible [androidJvm] open fun getRendererPriorityWaivedWhenNotVisible (): Boolean getRendererRequestedPriority [androidJvm] open fun getRendererRequestedPriority (): Int getResources [androidJvm] open fun getResources (): Resources getRevealOnFocusHint [androidJvm] fun getRevealOnFocusHint (): Boolean getRight [androidJvm] fun getRight (): Int getRightFadingEdgeStrength [androidJvm] open fun getRightFadingEdgeStrength (): Float getRightPaddingOffset [androidJvm] open fun getRightPaddingOffset (): Int getRootSurfaceControl [androidJvm] open fun getRootSurfaceControl (): AttachedSurfaceControl ? getRootView [androidJvm] open fun getRootView (): View getRootWindowInsets [androidJvm] open fun getRootWindowInsets (): WindowInsets getRotation [androidJvm] open fun getRotation (): Float getRotationX [androidJvm] open fun getRotationX (): Float getRotationY [androidJvm] open fun getRotationY (): Float getScaleX [androidJvm] open fun getScaleX (): Float getScaleY [androidJvm] open fun getScaleY (): Float getScrollBarDefaultDelayBeforeFade [androidJvm] open fun getScrollBarDefaultDelayBeforeFade (): Int getScrollBarFadeDuration [androidJvm] open fun getScrollBarFadeDuration (): Int getScrollBarSize [androidJvm] open fun getScrollBarSize (): Int getScrollBarStyle [androidJvm] open fun getScrollBarStyle (): Int getScrollCaptureHint [androidJvm] open fun getScrollCaptureHint (): Int getScrollIndicators [androidJvm] open fun getScrollIndicators (): Int getScrollX [androidJvm] fun getScrollX (): Int getScrollY [androidJvm] fun getScrollY (): Int getSettings [androidJvm] open fun getSettings (): WebSettings getSolidColor [androidJvm] open fun getSolidColor (): Int getSourceLayoutResId [androidJvm] open fun getSourceLayoutResId (): Int getStateDescription [androidJvm] fun getStateDescription (): CharSequence ? getStateListAnimator [androidJvm] open fun getStateListAnimator (): StateListAnimator getSuggestedMinimumHeight [androidJvm] open fun getSuggestedMinimumHeight (): Int getSuggestedMinimumWidth [androidJvm] open fun getSuggestedMinimumWidth (): Int getSystemGestureExclusionRects [androidJvm] open fun getSystemGestureExclusionRects (): MutableList < Rect > getTag [androidJvm] open fun getTag (): Any open fun getTag (p0: Int ): Any getTextAlignment [androidJvm] open fun getTextAlignment (): Int getTextClassifier [androidJvm] open fun getTextClassifier (): TextClassifier getTextDirection [androidJvm] open fun getTextDirection (): Int getTitle [androidJvm] open fun getTitle (): String ? getTooltipText [androidJvm] open fun getTooltipText (): CharSequence ? getTop [androidJvm] fun getTop (): Int getTopFadingEdgeStrength [androidJvm] open fun getTopFadingEdgeStrength (): Float getTopPaddingOffset [androidJvm] open fun getTopPaddingOffset (): Int getTouchables [androidJvm] open fun getTouchables (): ArrayList < View > getTouchDelegate [androidJvm] open fun getTouchDelegate (): TouchDelegate getTouchscreenBlocksFocus [androidJvm] open fun getTouchscreenBlocksFocus (): Boolean getTransitionAlpha [androidJvm] open fun getTransitionAlpha (): Float getTransitionName [androidJvm] open fun getTransitionName (): String getTranslationX [androidJvm] open fun getTranslationX (): Float getTranslationY [androidJvm] open fun getTranslationY (): Float getTranslationZ [androidJvm] open fun getTranslationZ (): Float getUniqueDrawingId [androidJvm] open fun getUniqueDrawingId (): Long getUrl [androidJvm] open fun getUrl (): String ? getVerticalFadingEdgeLength [androidJvm] open fun getVerticalFadingEdgeLength (): Int getVerticalScrollbarPosition [androidJvm] open fun getVerticalScrollbarPosition (): Int getVerticalScrollbarThumbDrawable [androidJvm] open fun getVerticalScrollbarThumbDrawable (): Drawable ? getVerticalScrollbarTrackDrawable [androidJvm] open fun getVerticalScrollbarTrackDrawable (): Drawable ? getVerticalScrollbarWidth [androidJvm] open fun getVerticalScrollbarWidth (): Int getViewportWidth [androidJvm] fun getViewportWidth (): Int getViewTranslationResponse [androidJvm] open fun getViewTranslationResponse (): ViewTranslationResponse ? getViewTreeObserver [androidJvm] open fun getViewTreeObserver (): ViewTreeObserver getVisibility [androidJvm] open fun getVisibility (): Int getWebChromeClient [androidJvm] open fun getWebChromeClient (): WebChromeClient ? getWebViewClient [androidJvm] open fun getWebViewClient (): WebViewClient getWebViewLooper [androidJvm] open fun getWebViewLooper (): Looper getWebViewRenderProcess [androidJvm] open fun getWebViewRenderProcess (): WebViewRenderProcess ? getWebViewRenderProcessClient [androidJvm] open fun getWebViewRenderProcessClient (): WebViewRenderProcessClient ? getWidth [androidJvm] fun getWidth (): Int getWindowAttachCount [androidJvm] open fun getWindowAttachCount (): Int getWindowId [androidJvm] open fun getWindowId (): WindowId getWindowInsetsController [androidJvm] open fun getWindowInsetsController (): WindowInsetsController ? getWindowToken [androidJvm] open fun getWindowToken (): IBinder getWindowVisibility [androidJvm] open fun getWindowVisibility (): Int getWindowVisibleDisplayFrame [androidJvm] open fun getWindowVisibleDisplayFrame (p0: Rect ) getX [androidJvm] open fun getX (): Float getY [androidJvm] open fun getY (): Float getZ [androidJvm] open fun getZ (): Float goBack [androidJvm] open fun goBack () goBackOrForward [androidJvm] open fun goBackOrForward (p0: Int ) goForward [androidJvm] open fun goForward () hasExplicitFocusable [androidJvm] open fun hasExplicitFocusable (): Boolean hasFocus [androidJvm] open override fun hasFocus (): Boolean hasFocusable [androidJvm] open fun hasFocusable (): Boolean hasNestedScrollingParent [androidJvm] open fun hasNestedScrollingParent (): Boolean hasOnClickListeners [androidJvm] open fun hasOnClickListeners (): Boolean hasOnLongClickListeners [androidJvm] open fun hasOnLongClickListeners (): Boolean hasOverlappingRendering [androidJvm] open fun hasOverlappingRendering (): Boolean hasPointerCapture [androidJvm] open fun hasPointerCapture (): Boolean hasTransientState [androidJvm] open override fun hasTransientState (): Boolean hasWindowFocus [androidJvm] open fun hasWindowFocus (): Boolean highlightActivated [androidJvm] fun highlightActivated (id: String ) highlightAnnotationMarkActivated [androidJvm] fun highlightAnnotationMarkActivated (id: String ) indexOfChild [androidJvm] open fun indexOfChild (p0: View ): Int invalidate [androidJvm] open fun invalidate () invalidateDrawable [androidJvm] open override fun invalidateDrawable (p0: Drawable ) invalidateOutline [androidJvm] open fun invalidateOutline () invokeZoomPicker [androidJvm] open fun invokeZoomPicker () isAccessibilityFocused [androidJvm] open fun isAccessibilityFocused (): Boolean isAccessibilityHeading [androidJvm] open fun isAccessibilityHeading (): Boolean isActivated [androidJvm] open fun isActivated (): Boolean isAttachedToWindow [androidJvm] open fun isAttachedToWindow (): Boolean isChildrenDrawingOrderEnabled [androidJvm] open fun isChildrenDrawingOrderEnabled (): Boolean isClickable [androidJvm] open fun isClickable (): Boolean isContextClickable [androidJvm] open fun isContextClickable (): Boolean isDirty [androidJvm] open fun isDirty (): Boolean isDuplicateParentStateEnabled [androidJvm] open fun isDuplicateParentStateEnabled (): Boolean isEnabled [androidJvm] open fun isEnabled (): Boolean isFocusable [androidJvm] fun isFocusable (): Boolean isFocusableInTouchMode [androidJvm] fun isFocusableInTouchMode (): Boolean isFocused [androidJvm] open fun isFocused (): Boolean isFocusedByDefault [androidJvm] fun isFocusedByDefault (): Boolean isForceDarkAllowed [androidJvm] open fun isForceDarkAllowed (): Boolean isHapticFeedbackEnabled [androidJvm] open fun isHapticFeedbackEnabled (): Boolean isHardwareAccelerated [androidJvm] open fun isHardwareAccelerated (): Boolean isHorizontalFadingEdgeEnabled [androidJvm] open fun isHorizontalFadingEdgeEnabled (): Boolean isHorizontalScrollBarEnabled [androidJvm] open fun isHorizontalScrollBarEnabled (): Boolean isHovered [androidJvm] open fun isHovered (): Boolean isImportantForAccessibility [androidJvm] open fun isImportantForAccessibility (): Boolean isImportantForAutofill [androidJvm] fun isImportantForAutofill (): Boolean isImportantForContentCapture [androidJvm] fun isImportantForContentCapture (): Boolean isInEditMode [androidJvm] open fun isInEditMode (): Boolean isInLayout [androidJvm] open fun isInLayout (): Boolean isInTouchMode [androidJvm] open fun isInTouchMode (): Boolean isKeyboardNavigationCluster [androidJvm] fun isKeyboardNavigationCluster (): Boolean isLaidOut [androidJvm] open fun isLaidOut (): Boolean isLayoutDirectionResolved [androidJvm] open fun isLayoutDirectionResolved (): Boolean isLayoutRequested [androidJvm] open fun isLayoutRequested (): Boolean isLayoutSuppressed [androidJvm] open fun isLayoutSuppressed (): Boolean isLongClickable [androidJvm] open fun isLongClickable (): Boolean isMotionEventSplittingEnabled [androidJvm] open fun isMotionEventSplittingEnabled (): Boolean isNestedScrollingEnabled [androidJvm] open fun isNestedScrollingEnabled (): Boolean isOpaque [androidJvm] open fun isOpaque (): Boolean isPaddingOffsetRequired [androidJvm] open fun isPaddingOffsetRequired (): Boolean isPaddingRelative [androidJvm] open fun isPaddingRelative (): Boolean isPivotSet [androidJvm] open fun isPivotSet (): Boolean isPressed [androidJvm] open fun isPressed (): Boolean isPrivateBrowsingEnabled [androidJvm] open fun isPrivateBrowsingEnabled (): Boolean isSaveEnabled [androidJvm] open fun isSaveEnabled (): Boolean isSaveFromParentEnabled [androidJvm] open fun isSaveFromParentEnabled (): Boolean isScreenReaderFocusable [androidJvm] open fun isScreenReaderFocusable (): Boolean isScrollbarFadingEnabled [androidJvm] open fun isScrollbarFadingEnabled (): Boolean isScrollContainer [androidJvm] open fun isScrollContainer (): Boolean isSelected [androidJvm] open fun isSelected (): Boolean isShowingLayoutBounds [androidJvm] fun isShowingLayoutBounds (): Boolean isShown [androidJvm] open fun isShown (): Boolean isSoundEffectsEnabled [androidJvm] open fun isSoundEffectsEnabled (): Boolean isTemporarilyDetached [androidJvm] fun isTemporarilyDetached (): Boolean isTextAlignmentResolved [androidJvm] open fun isTextAlignmentResolved (): Boolean isTextDirectionResolved [androidJvm] open fun isTextDirectionResolved (): Boolean isTransitionGroup [androidJvm] open fun isTransitionGroup (): Boolean isVerticalFadingEdgeEnabled [androidJvm] open fun isVerticalFadingEdgeEnabled (): Boolean isVerticalScrollBarEnabled [androidJvm] open fun isVerticalScrollBarEnabled (): Boolean isVisibleToUserForAutofill [androidJvm] open override fun isVisibleToUserForAutofill (p0: Int ): Boolean jumpDrawablesToCurrentState [androidJvm] open override fun jumpDrawablesToCurrentState () keyboardNavigationClusterSearch [androidJvm] open fun keyboardNavigationClusterSearch (p0: View , p1: Int ): View layout [androidJvm] override fun layout (p0: Int , p1: Int , p2: Int , p3: Int ) loadData [androidJvm] open fun loadData (p0: String , p1: String ?, p2: String ?) loadDataWithBaseURL [androidJvm] open fun loadDataWithBaseURL (p0: String ?, p1: String , p2: String ?, p3: String ?, p4: String ?) loadUrl [androidJvm] open fun loadUrl (p0: String ) open fun loadUrl (p0: String , p1: MutableMap < String , String >) log [androidJvm] fun log (message: String ) logError [androidJvm] fun logError (message: String , filename: String , line: Int ) measure [androidJvm] fun measure (p0: Int , p1: Int ) measureChild [androidJvm] open fun measureChild (p0: View , p1: Int , p2: Int ) measureChildren [androidJvm] open fun measureChildren (p0: Int , p1: Int ) measureChildWithMargins [androidJvm] open fun measureChildWithMargins (p0: View , p1: Int , p2: Int , p3: Int , p4: Int ) notifySubtreeAccessibilityStateChanged [androidJvm] open override fun notifySubtreeAccessibilityStateChanged (p0: View , p1: View , p2: Int ) offsetDescendantRectToMyCoords [androidJvm] fun offsetDescendantRectToMyCoords (p0: View , p1: Rect ) offsetLeftAndRight [androidJvm] open fun offsetLeftAndRight (p0: Int ) offsetRectIntoDescendantCoords [androidJvm] fun offsetRectIntoDescendantCoords (p0: View , p1: Rect ) offsetTopAndBottom [androidJvm] open fun offsetTopAndBottom (p0: Int ) onAnimationEnd [androidJvm] open fun onAnimationEnd () onAnimationStart [androidJvm] open fun onAnimationStart () onApplyWindowInsets [androidJvm] open override fun onApplyWindowInsets (p0: WindowInsets ): WindowInsets onCancelPendingInputEvents [androidJvm] open fun onCancelPendingInputEvents () onCapturedPointerEvent [androidJvm] open fun onCapturedPointerEvent (p0: MotionEvent ): Boolean onCheckIsTextEditor [androidJvm] open override fun onCheckIsTextEditor (): Boolean onConfigurationChanged [androidJvm] open override fun onConfigurationChanged (p0: Configuration ) onCreateContextMenu [androidJvm] open fun onCreateContextMenu (p0: ContextMenu ) onCreateDrawableState [androidJvm] open override fun onCreateDrawableState (p0: Int ): IntArray onCreateInputConnection [androidJvm] open override fun onCreateInputConnection (p0: EditorInfo ): InputConnection onCreateViewTranslationRequest [androidJvm] open fun onCreateViewTranslationRequest (p0: IntArray , p1: Consumer < ViewTranslationRequest >) onCreateVirtualViewTranslationRequests [androidJvm] open override fun onCreateVirtualViewTranslationRequests (p0: LongArray , p1: IntArray , p2: Consumer < ViewTranslationRequest >) onDecorationActivated [androidJvm] fun onDecorationActivated (eventJson: String ): Boolean Called from the JS code when a tap on a decoration is detected. onDescendantInvalidated [androidJvm] open override fun onDescendantInvalidated (p0: View , p1: View ) onDisplayHint [androidJvm] open fun onDisplayHint (p0: Int ) onDragEvent [androidJvm] open override fun onDragEvent (p0: DragEvent ): Boolean onDraw [androidJvm] open override fun onDraw (p0: Canvas ) onDrawForeground [androidJvm] open fun onDrawForeground (p0: Canvas ) onDrawScrollBars [androidJvm] fun onDrawScrollBars (p0: Canvas ) onFilterTouchEventForSecurity [androidJvm] open fun onFilterTouchEventForSecurity (p0: MotionEvent ): Boolean onFinishInflate [androidJvm] open fun onFinishInflate () onFinishTemporaryDetach [androidJvm] open override fun onFinishTemporaryDetach () onFocusChanged [androidJvm] open override fun onFocusChanged (p0: Boolean , p1: Int , p2: Rect ?) onGenericMotionEvent [androidJvm] open override fun onGenericMotionEvent (p0: MotionEvent ): Boolean onHoverChanged [androidJvm] open fun onHoverChanged (p0: Boolean ) onHoverEvent [androidJvm] open override fun onHoverEvent (p0: MotionEvent ): Boolean onInitializeAccessibilityEvent [androidJvm] open fun onInitializeAccessibilityEvent (p0: AccessibilityEvent ) onInitializeAccessibilityNodeInfo [androidJvm] open fun onInitializeAccessibilityNodeInfo (p0: AccessibilityNodeInfo ) onInterceptHoverEvent [androidJvm] open fun onInterceptHoverEvent (p0: MotionEvent ): Boolean onInterceptTouchEvent [androidJvm] open fun onInterceptTouchEvent (p0: MotionEvent ): Boolean onKeyDown [androidJvm] open override fun onKeyDown (p0: Int , p1: KeyEvent ): Boolean onKeyLongPress [androidJvm] open override fun onKeyLongPress (p0: Int , p1: KeyEvent ): Boolean onKeyMultiple [androidJvm] open override fun onKeyMultiple (p0: Int , p1: Int , p2: KeyEvent ): Boolean onKeyPreIme [androidJvm] open fun onKeyPreIme (p0: Int , p1: KeyEvent ): Boolean onKeyShortcut [androidJvm] open fun onKeyShortcut (p0: Int , p1: KeyEvent ): Boolean onKeyUp [androidJvm] open override fun onKeyUp (p0: Int , p1: KeyEvent ): Boolean onMeasure [androidJvm] open override fun onMeasure (p0: Int , p1: Int ) onNestedFling [androidJvm] open override fun onNestedFling (p0: View , p1: Float , p2: Float , p3: Boolean ): Boolean onNestedPreFling [androidJvm] open override fun onNestedPreFling (p0: View , p1: Float , p2: Float ): Boolean onNestedPrePerformAccessibilityAction [androidJvm] open override fun onNestedPrePerformAccessibilityAction (p0: View , p1: Int , p2: Bundle ): Boolean onNestedPreScroll [androidJvm] open override fun onNestedPreScroll (p0: View , p1: Int , p2: Int , p3: IntArray ) onNestedScroll [androidJvm] open override fun onNestedScroll (p0: View , p1: Int , p2: Int , p3: Int , p4: Int ) onNestedScrollAccepted [androidJvm] open override fun onNestedScrollAccepted (p0: View , p1: View , p2: Int ) onPause [androidJvm] open fun onPause () onPointerCaptureChange [androidJvm] open fun onPointerCaptureChange (p0: Boolean ) onPopulateAccessibilityEvent [androidJvm] open fun onPopulateAccessibilityEvent (p0: AccessibilityEvent ) onProvideAutofillStructure [androidJvm] open fun onProvideAutofillStructure (p0: ViewStructure , p1: Int ) onProvideAutofillVirtualStructure [androidJvm] open override fun onProvideAutofillVirtualStructure (p0: ViewStructure , p1: Int ) onProvideContentCaptureStructure [androidJvm] open override fun onProvideContentCaptureStructure (p0: ViewStructure , p1: Int ) onProvideStructure [androidJvm] open fun onProvideStructure (p0: ViewStructure ) onProvideVirtualStructure [androidJvm] open override fun onProvideVirtualStructure (p0: ViewStructure ) onReceiveContent [androidJvm] open fun onReceiveContent (p0: ContentInfo ): ContentInfo ? onRequestFocusInDescendants [androidJvm] open fun onRequestFocusInDescendants (p0: Int , p1: Rect ): Boolean onRequestSendAccessibilityEvent [androidJvm] open fun onRequestSendAccessibilityEvent (p0: View , p1: AccessibilityEvent ): Boolean onResolvePointerIcon [androidJvm] open override fun onResolvePointerIcon (p0: MotionEvent , p1: Int ): PointerIcon onRestoreInstanceState [androidJvm] open fun onRestoreInstanceState (p0: Parcelable ) onResume [androidJvm] open fun onResume () onRtlPropertiesChanged [androidJvm] open fun onRtlPropertiesChanged (p0: Int ) onSaveInstanceState [androidJvm] open fun onSaveInstanceState (): Parcelable ? onScreenStateChanged [androidJvm] open fun onScreenStateChanged (p0: Int ) onScrollCaptureSearch [androidJvm] open fun onScrollCaptureSearch (p0: Rect , p1: Point , p2: Consumer < ScrollCaptureTarget >) onSetAlpha [androidJvm] open fun onSetAlpha (p0: Int ): Boolean onSizeChanged [androidJvm] open override fun onSizeChanged (p0: Int , p1: Int , p2: Int , p3: Int ) onStartNestedScroll [androidJvm] open override fun onStartNestedScroll (p0: View , p1: View , p2: Int ): Boolean onStartTemporaryDetach [androidJvm] open override fun onStartTemporaryDetach () onStopNestedScroll [androidJvm] open override fun onStopNestedScroll (p0: View ) onTap [androidJvm] fun onTap (eventJson: String ): Boolean Called from the JS code when a tap is detected. If the JS indicates the tap is being handled within the web view, don't take action, onTouchEvent [androidJvm] open override fun onTouchEvent (p0: MotionEvent ): Boolean onTrackballEvent [androidJvm] open override fun onTrackballEvent (p0: MotionEvent ): Boolean onViewAdded [androidJvm] open fun onViewAdded (p0: View ) onViewRemoved [androidJvm] open fun onViewRemoved (p0: View ) onViewTranslationResponse [androidJvm] open fun onViewTranslationResponse (p0: ViewTranslationResponse ) onVirtualViewTranslationResponses [androidJvm] open override fun onVirtualViewTranslationResponses (p0: LongSparseArray < ViewTranslationResponse >) onVisibilityAggregated [androidJvm] open fun onVisibilityAggregated (p0: Boolean ) onVisibilityChanged [androidJvm] open override fun onVisibilityChanged (p0: View , p1: Int ) onWindowFocusChanged [androidJvm] open override fun onWindowFocusChanged (p0: Boolean ) onWindowVisibilityChanged [androidJvm] open override fun onWindowVisibilityChanged (p0: Int ) overScrollBy [androidJvm] open fun overScrollBy (p0: Int , p1: Int , p2: Int , p3: Int , p4: Int , p5: Int , p6: Int , p7: Int , p8: Boolean ): Boolean pageDown [androidJvm] open fun pageDown (p0: Boolean ): Boolean pageUp [androidJvm] open fun pageUp (p0: Boolean ): Boolean pauseTimers [androidJvm] open fun pauseTimers () performAccessibilityAction [androidJvm] open fun performAccessibilityAction (p0: Int , p1: Bundle ): Boolean performClick [androidJvm] open fun performClick (): Boolean performContextClick [androidJvm] open fun performContextClick (): Boolean open fun performContextClick (p0: Float , p1: Float ): Boolean performHapticFeedback [androidJvm] open fun performHapticFeedback (p0: Int ): Boolean open fun performHapticFeedback (p0: Int , p1: Int ): Boolean performLongClick [androidJvm] open override fun performLongClick (): Boolean open fun performLongClick (p0: Float , p1: Float ): Boolean performReceiveContent [androidJvm] open fun performReceiveContent (p0: ContentInfo ): ContentInfo ? playSoundEffect [androidJvm] open fun playSoundEffect (p0: Int ) post [androidJvm] open fun post (p0: Runnable ): Boolean postDelayed [androidJvm] open fun postDelayed (p0: Runnable , p1: Long ): Boolean postInvalidate [androidJvm] open fun postInvalidate () open fun postInvalidate (p0: Int , p1: Int , p2: Int , p3: Int ) postInvalidateDelayed [androidJvm] open fun postInvalidateDelayed (p0: Long ) open fun postInvalidateDelayed (p0: Long , p1: Int , p2: Int , p3: Int , p4: Int ) postInvalidateOnAnimation [androidJvm] open fun postInvalidateOnAnimation () open fun postInvalidateOnAnimation (p0: Int , p1: Int , p2: Int , p3: Int ) postOnAnimation [androidJvm] open fun postOnAnimation (p0: Runnable ) postOnAnimationDelayed [androidJvm] open fun postOnAnimationDelayed (p0: Runnable , p1: Long ) postUrl [androidJvm] open fun postUrl (p0: String , p1: ByteArray ) postVisualStateCallback [androidJvm] open fun postVisualStateCallback (p0: Long , p1: WebView.VisualStateCallback ) postWebMessage [androidJvm] open fun postWebMessage (p0: WebMessage , p1: Uri ) recomputeViewAttributes [androidJvm] open override fun recomputeViewAttributes (p0: View ) rectangleForHighlightWithID [androidJvm] fun rectangleForHighlightWithID (id: String , callback: ( String ) -> Unit ) refreshDrawableState [androidJvm] open fun refreshDrawableState () releasePointerCapture [androidJvm] open fun releasePointerCapture () reload [androidJvm] open fun reload () removeAllViews [androidJvm] open fun removeAllViews () removeAllViewsInLayout [androidJvm] open fun removeAllViewsInLayout () removeCallbacks [androidJvm] open fun removeCallbacks (p0: Runnable ): Boolean removeDetachedView [androidJvm] open fun removeDetachedView (p0: View , p1: Boolean ) removeJavascriptInterface [androidJvm] open fun removeJavascriptInterface (p0: String ) removeOnAttachStateChangeListener [androidJvm] open fun removeOnAttachStateChangeListener (p0: View.OnAttachStateChangeListener ) removeOnLayoutChangeListener [androidJvm] open fun removeOnLayoutChangeListener (p0: View.OnLayoutChangeListener ) removeOnUnhandledKeyEventListener [androidJvm] open fun removeOnUnhandledKeyEventListener (p0: View.OnUnhandledKeyEventListener ) removeProperty [androidJvm] fun removeProperty (key: String ) removeView [androidJvm] open override fun removeView (p0: View ) removeViewAt [androidJvm] open fun removeViewAt (p0: Int ) removeViewInLayout [androidJvm] open fun removeViewInLayout (p0: View ) removeViews [androidJvm] open fun removeViews (p0: Int , p1: Int ) removeViewsInLayout [androidJvm] open fun removeViewsInLayout (p0: Int , p1: Int ) requestApplyInsets [androidJvm] open fun requestApplyInsets () requestChildFocus [androidJvm] open override fun requestChildFocus (p0: View , p1: View ) requestChildRectangleOnScreen [androidJvm] open override fun requestChildRectangleOnScreen (p0: View , p1: Rect , p2: Boolean ): Boolean requestDisallowInterceptTouchEvent [androidJvm] open override fun requestDisallowInterceptTouchEvent (p0: Boolean ) requestFocus [androidJvm] fun requestFocus (): Boolean fun requestFocus (p0: Int ): Boolean open override fun requestFocus (p0: Int , p1: Rect ): Boolean requestFocusFromTouch [androidJvm] fun requestFocusFromTouch (): Boolean requestFocusNodeHref [androidJvm] open fun requestFocusNodeHref (p0: Message ?) requestImageRef [androidJvm] open fun requestImageRef (p0: Message ) requestLayout [androidJvm] open fun requestLayout () requestPointerCapture [androidJvm] open fun requestPointerCapture () requestRectangleOnScreen [androidJvm] open fun requestRectangleOnScreen (p0: Rect ): Boolean open fun requestRectangleOnScreen (p0: Rect , p1: Boolean ): Boolean requestSendAccessibilityEvent [androidJvm] open override fun requestSendAccessibilityEvent (p0: View , p1: AccessibilityEvent ): Boolean requestTransparentRegion [androidJvm] open override fun requestTransparentRegion (p0: View ) requestUnbufferedDispatch [androidJvm] fun requestUnbufferedDispatch (p0: MotionEvent ) fun requestUnbufferedDispatch (p0: Int ) requireViewById [androidJvm] fun < T : View > requireViewById (p0: Int ): T resetPivot [androidJvm] open fun resetPivot () restoreDefaultFocus [androidJvm] open override fun restoreDefaultFocus (): Boolean restoreHierarchyState [androidJvm] open fun restoreHierarchyState (p0: SparseArray < Parcelable >) restoreState [androidJvm] open fun restoreState (p0: Bundle ): WebBackForwardList ? resumeTimers [androidJvm] open fun resumeTimers () runJavaScript [androidJvm] fun runJavaScript (javascript: String , callback: ( String ) -> Unit ? = null) saveAttributeDataForStyleable [androidJvm] fun saveAttributeDataForStyleable (p0: Context , p1: IntArray , p2: AttributeSet ?, p3: TypedArray , p4: Int , p5: Int ) saveHierarchyState [androidJvm] open fun saveHierarchyState (p0: SparseArray < Parcelable >) saveState [androidJvm] open fun saveState (p0: Bundle ): WebBackForwardList ? saveWebArchive [androidJvm] open fun saveWebArchive (p0: String ) open fun saveWebArchive (p0: String , p1: Boolean , p2: ValueCallback < String >?) scheduleDrawable [androidJvm] open override fun scheduleDrawable (p0: Drawable , p1: Runnable , p2: Long ) scheduleLayoutAnimation [androidJvm] open fun scheduleLayoutAnimation () scrollBy [androidJvm] open fun scrollBy (p0: Int , p1: Int ) scrollLeft [androidJvm] open fun scrollLeft (animated: Boolean = false) scrollRight [androidJvm] open fun scrollRight (animated: Boolean = false) scrollTo [androidJvm] open fun scrollTo (p0: Int , p1: Int ) scrollToEnd [androidJvm] fun scrollToEnd () scrollToId [androidJvm] suspend fun scrollToId (htmlId: String ): Boolean scrollToPosition [androidJvm] fun scrollToPosition (progression: Double ) scrollToStart [androidJvm] fun scrollToStart () scrollToText [androidJvm] suspend fun scrollToText (text: Locator.Text ): Boolean sendAccessibilityEvent [androidJvm] open override fun sendAccessibilityEvent (p0: Int ) sendAccessibilityEventUnchecked [androidJvm] open override fun sendAccessibilityEventUnchecked (p0: AccessibilityEvent ) setAccessibilityDelegate [androidJvm] open fun setAccessibilityDelegate (p0: View.AccessibilityDelegate ?) setAccessibilityHeading [androidJvm] open fun setAccessibilityHeading (p0: Boolean ) setAccessibilityLiveRegion [androidJvm] open fun setAccessibilityLiveRegion (p0: Int ) setAccessibilityPaneTitle [androidJvm] open fun setAccessibilityPaneTitle (p0: CharSequence ?) setAccessibilityTraversalAfter [androidJvm] open fun setAccessibilityTraversalAfter (p0: Int ) setAccessibilityTraversalBefore [androidJvm] open fun setAccessibilityTraversalBefore (p0: Int ) setActivated [androidJvm] open fun setActivated (p0: Boolean ) setAddStatesFromChildren [androidJvm] open fun setAddStatesFromChildren (p0: Boolean ) setAllowClickWhenDisabled [androidJvm] open fun setAllowClickWhenDisabled (p0: Boolean ) setAlpha [androidJvm] open fun setAlpha (p0: Float ) setAnimation [androidJvm] open fun setAnimation (p0: Animation ) setAnimationMatrix [androidJvm] open fun setAnimationMatrix (p0: Matrix ?) setAutofillHints [androidJvm] open fun setAutofillHints (vararg p0: String ) setAutofillId [androidJvm] open fun setAutofillId (p0: AutofillId ?) setBackground [androidJvm] open fun setBackground (p0: Drawable ) setBackgroundColor [androidJvm] open override fun setBackgroundColor (p0: Int ) setBackgroundResource [androidJvm] open fun setBackgroundResource (p0: Int ) setBackgroundTintBlendMode [androidJvm] open fun setBackgroundTintBlendMode (p0: BlendMode ?) setBackgroundTintList [androidJvm] open fun setBackgroundTintList (p0: ColorStateList ?) setBackgroundTintMode [androidJvm] open fun setBackgroundTintMode (p0: PorterDuff.Mode ?) setBottom [androidJvm] fun setBottom (p0: Int ) setCameraDistance [androidJvm] open fun setCameraDistance (p0: Float ) setChildrenDrawingOrderEnabled [androidJvm] open fun setChildrenDrawingOrderEnabled (p0: Boolean ) setClickable [androidJvm] open fun setClickable (p0: Boolean ) setClipBounds [androidJvm] open fun setClipBounds (p0: Rect ) setClipChildren [androidJvm] open fun setClipChildren (p0: Boolean ) setClipToOutline [androidJvm] open fun setClipToOutline (p0: Boolean ) setClipToPadding [androidJvm] open fun setClipToPadding (p0: Boolean ) setContentCaptureSession [androidJvm] open fun setContentCaptureSession (p0: ContentCaptureSession ?) setContentDescription [androidJvm] open fun setContentDescription (p0: CharSequence ) setContextClickable [androidJvm] open fun setContextClickable (p0: Boolean ) setDefaultFocusHighlightEnabled [androidJvm] open fun setDefaultFocusHighlightEnabled (p0: Boolean ) setDescendantFocusability [androidJvm] open fun setDescendantFocusability (p0: Int ) setDownloadListener [androidJvm] open fun setDownloadListener (p0: DownloadListener ?) setDuplicateParentStateEnabled [androidJvm] open fun setDuplicateParentStateEnabled (p0: Boolean ) setElevation [androidJvm] open fun setElevation (p0: Float ) setEnabled [androidJvm] open fun setEnabled (p0: Boolean ) setFadingEdgeLength [androidJvm] open fun setFadingEdgeLength (p0: Int ) setFilterTouchesWhenObscured [androidJvm] open fun setFilterTouchesWhenObscured (p0: Boolean ) setFindListener [androidJvm] open fun setFindListener (p0: WebView.FindListener ?) setFitsSystemWindows [androidJvm] open fun setFitsSystemWindows (p0: Boolean ) setFocusable [androidJvm] open fun setFocusable (p0: Boolean ) open fun setFocusable (p0: Int ) setFocusableInTouchMode [androidJvm] open fun setFocusableInTouchMode (p0: Boolean ) setFocusedByDefault [androidJvm] open fun setFocusedByDefault (p0: Boolean ) setForceDarkAllowed [androidJvm] open fun setForceDarkAllowed (p0: Boolean ) setForeground [androidJvm] open fun setForeground (p0: Drawable ) setForegroundGravity [androidJvm] open fun setForegroundGravity (p0: Int ) setForegroundTintBlendMode [androidJvm] open fun setForegroundTintBlendMode (p0: BlendMode ?) setForegroundTintList [androidJvm] open fun setForegroundTintList (p0: ColorStateList ?) setForegroundTintMode [androidJvm] open fun setForegroundTintMode (p0: PorterDuff.Mode ?) setHapticFeedbackEnabled [androidJvm] open fun setHapticFeedbackEnabled (p0: Boolean ) setHasTransientState [androidJvm] open fun setHasTransientState (p0: Boolean ) setHorizontalFadingEdgeEnabled [androidJvm] open fun setHorizontalFadingEdgeEnabled (p0: Boolean ) setHorizontalScrollBarEnabled [androidJvm] open fun setHorizontalScrollBarEnabled (p0: Boolean ) setHorizontalScrollbarThumbDrawable [androidJvm] open fun setHorizontalScrollbarThumbDrawable (p0: Drawable ?) setHorizontalScrollbarTrackDrawable [androidJvm] open fun setHorizontalScrollbarTrackDrawable (p0: Drawable ?) setHovered [androidJvm] open fun setHovered (p0: Boolean ) setId [androidJvm] open fun setId (p0: Int ) setImportantForAccessibility [androidJvm] open fun setImportantForAccessibility (p0: Int ) setImportantForAutofill [androidJvm] open fun setImportantForAutofill (p0: Int ) setImportantForContentCapture [androidJvm] open fun setImportantForContentCapture (p0: Int ) setInitialScale [androidJvm] open fun setInitialScale (p0: Int ) setKeepScreenOn [androidJvm] open fun setKeepScreenOn (p0: Boolean ) setKeyboardNavigationCluster [androidJvm] open fun setKeyboardNavigationCluster (p0: Boolean ) setLabelFor [androidJvm] open fun setLabelFor (p0: Int ) setLayerPaint [androidJvm] open fun setLayerPaint (p0: Paint ?) setLayerType [androidJvm] open override fun setLayerType (p0: Int , p1: Paint ?) setLayoutAnimation [androidJvm] open fun setLayoutAnimation (p0: LayoutAnimationController ) setLayoutAnimationListener [androidJvm] open fun setLayoutAnimationListener (p0: Animation.AnimationListener ) setLayoutDirection [androidJvm] open fun setLayoutDirection (p0: Int ) setLayoutMode [androidJvm] open fun setLayoutMode (p0: Int ) setLayoutParams [androidJvm] open override fun setLayoutParams (p0: ViewGroup.LayoutParams ) setLayoutTransition [androidJvm] open fun setLayoutTransition (p0: LayoutTransition ) setLeft [androidJvm] fun setLeft (p0: Int ) setLeftTopRightBottom [androidJvm] fun setLeftTopRightBottom (p0: Int , p1: Int , p2: Int , p3: Int ) setLongClickable [androidJvm] open fun setLongClickable (p0: Boolean ) setMeasuredDimension [androidJvm] fun setMeasuredDimension (p0: Int , p1: Int ) setMinimumHeight [androidJvm] open fun setMinimumHeight (p0: Int ) setMinimumWidth [androidJvm] open fun setMinimumWidth (p0: Int ) setMotionEventSplittingEnabled [androidJvm] open fun setMotionEventSplittingEnabled (p0: Boolean ) setNestedScrollingEnabled [androidJvm] open fun setNestedScrollingEnabled (p0: Boolean ) setNetworkAvailable [androidJvm] open fun setNetworkAvailable (p0: Boolean ) setNextClusterForwardId [androidJvm] open fun setNextClusterForwardId (p0: Int ) setNextFocusDownId [androidJvm] open fun setNextFocusDownId (p0: Int ) setNextFocusForwardId [androidJvm] open fun setNextFocusForwardId (p0: Int ) setNextFocusLeftId [androidJvm] open fun setNextFocusLeftId (p0: Int ) setNextFocusRightId [androidJvm] open fun setNextFocusRightId (p0: Int ) setNextFocusUpId [androidJvm] open fun setNextFocusUpId (p0: Int ) setOnApplyWindowInsetsListener [androidJvm] open fun setOnApplyWindowInsetsListener (p0: View.OnApplyWindowInsetsListener ) setOnCapturedPointerListener [androidJvm] open fun setOnCapturedPointerListener (p0: View.OnCapturedPointerListener ) setOnClickListener [androidJvm] open fun setOnClickListener (p0: View.OnClickListener ?) setOnContextClickListener [androidJvm] open fun setOnContextClickListener (p0: View.OnContextClickListener ?) setOnCreateContextMenuListener [androidJvm] open fun setOnCreateContextMenuListener (p0: View.OnCreateContextMenuListener ) setOnDragListener [androidJvm] open fun setOnDragListener (p0: View.OnDragListener ) setOnFocusChangeListener [androidJvm] open fun setOnFocusChangeListener (p0: View.OnFocusChangeListener ) setOnGenericMotionListener [androidJvm] open fun setOnGenericMotionListener (p0: View.OnGenericMotionListener ) setOnHierarchyChangeListener [androidJvm] open fun setOnHierarchyChangeListener (p0: ViewGroup.OnHierarchyChangeListener ) setOnHoverListener [androidJvm] open fun setOnHoverListener (p0: View.OnHoverListener ) setOnKeyListener [androidJvm] open fun setOnKeyListener (p0: View.OnKeyListener ) setOnLongClickListener [androidJvm] open fun setOnLongClickListener (p0: View.OnLongClickListener ?) setOnOverScrolledCallback [androidJvm] fun setOnOverScrolledCallback (callback: R2BasicWebView.OnOverScrolledCallback ) setOnReceiveContentListener [androidJvm] open fun setOnReceiveContentListener (p0: Array < String >?, p1: OnReceiveContentListener ?) setOnScrollChangeListener [androidJvm] open fun setOnScrollChangeListener (p0: View.OnScrollChangeListener ) setOnTouchListener [androidJvm] open fun setOnTouchListener (p0: View.OnTouchListener ) setOutlineAmbientShadowColor [androidJvm] open fun setOutlineAmbientShadowColor (p0: Int ) setOutlineProvider [androidJvm] open fun setOutlineProvider (p0: ViewOutlineProvider ) setOutlineSpotShadowColor [androidJvm] open fun setOutlineSpotShadowColor (p0: Int ) setOverScrollMode [androidJvm] open override fun setOverScrollMode (p0: Int ) setPadding [androidJvm] open fun setPadding (p0: Int , p1: Int , p2: Int , p3: Int ) setPaddingRelative [androidJvm] open fun setPaddingRelative (p0: Int , p1: Int , p2: Int , p3: Int ) setPivotX [androidJvm] open fun setPivotX (p0: Float ) setPivotY [androidJvm] open fun setPivotY (p0: Float ) setPointerIcon [androidJvm] open fun setPointerIcon (p0: PointerIcon ) setPressed [androidJvm] open fun setPressed (p0: Boolean ) setProperty [androidJvm] fun setProperty (key: String , value: String ) setRenderEffect [androidJvm] open fun setRenderEffect (p0: RenderEffect ?) setRendererPriorityPolicy [androidJvm] open fun setRendererPriorityPolicy (p0: Int , p1: Boolean ) setRevealOnFocusHint [androidJvm] fun setRevealOnFocusHint (p0: Boolean ) setRight [androidJvm] fun setRight (p0: Int ) setRotation [androidJvm] open fun setRotation (p0: Float ) setRotationX [androidJvm] open fun setRotationX (p0: Float ) setRotationY [androidJvm] open fun setRotationY (p0: Float ) setSaveEnabled [androidJvm] open fun setSaveEnabled (p0: Boolean ) setSaveFromParentEnabled [androidJvm] open fun setSaveFromParentEnabled (p0: Boolean ) setScaleX [androidJvm] open fun setScaleX (p0: Float ) setScaleY [androidJvm] open fun setScaleY (p0: Float ) setScreenReaderFocusable [androidJvm] open fun setScreenReaderFocusable (p0: Boolean ) setScrollBarDefaultDelayBeforeFade [androidJvm] open fun setScrollBarDefaultDelayBeforeFade (p0: Int ) setScrollBarFadeDuration [androidJvm] open fun setScrollBarFadeDuration (p0: Int ) setScrollbarFadingEnabled [androidJvm] open fun setScrollbarFadingEnabled (p0: Boolean ) setScrollBarSize [androidJvm] open fun setScrollBarSize (p0: Int ) setScrollBarStyle [androidJvm] open override fun setScrollBarStyle (p0: Int ) setScrollCaptureCallback [androidJvm] fun setScrollCaptureCallback (p0: ScrollCaptureCallback ?) setScrollCaptureHint [androidJvm] open fun setScrollCaptureHint (p0: Int ) setScrollContainer [androidJvm] open fun setScrollContainer (p0: Boolean ) setScrollIndicators [androidJvm] open fun setScrollIndicators (p0: Int ) open fun setScrollIndicators (p0: Int , p1: Int ) setScrollMode [androidJvm] fun setScrollMode (scrollMode: Boolean ) setScrollX [androidJvm] open fun setScrollX (p0: Int ) setScrollY [androidJvm] open fun setScrollY (p0: Int ) setSelected [androidJvm] open fun setSelected (p0: Boolean ) setSoundEffectsEnabled [androidJvm] open fun setSoundEffectsEnabled (p0: Boolean ) setStateDescription [androidJvm] open fun setStateDescription (p0: CharSequence ?) setStateListAnimator [androidJvm] open fun setStateListAnimator (p0: StateListAnimator ) setStaticTransformationsEnabled [androidJvm] open fun setStaticTransformationsEnabled (p0: Boolean ) setSystemGestureExclusionRects [androidJvm] open fun setSystemGestureExclusionRects (p0: MutableList < Rect >) setTag [androidJvm] open fun setTag (p0: Any ) open fun setTag (p0: Int , p1: Any ) setTextAlignment [androidJvm] open fun setTextAlignment (p0: Int ) setTextClassifier [androidJvm] open fun setTextClassifier (p0: TextClassifier ?) setTextDirection [androidJvm] open fun setTextDirection (p0: Int ) setTooltipText [androidJvm] open fun setTooltipText (p0: CharSequence ?) setTop [androidJvm] fun setTop (p0: Int ) setTouchDelegate [androidJvm] open fun setTouchDelegate (p0: TouchDelegate ) setTouchscreenBlocksFocus [androidJvm] open fun setTouchscreenBlocksFocus (p0: Boolean ) setTransitionAlpha [androidJvm] open fun setTransitionAlpha (p0: Float ) setTransitionGroup [androidJvm] open fun setTransitionGroup (p0: Boolean ) setTransitionName [androidJvm] fun setTransitionName (p0: String ) setTransitionVisibility [androidJvm] open fun setTransitionVisibility (p0: Int ) setTranslationX [androidJvm] open fun setTranslationX (p0: Float ) setTranslationY [androidJvm] open fun setTranslationY (p0: Float ) setTranslationZ [androidJvm] open fun setTranslationZ (p0: Float ) setVerticalFadingEdgeEnabled [androidJvm] open fun setVerticalFadingEdgeEnabled (p0: Boolean ) setVerticalScrollBarEnabled [androidJvm] open fun setVerticalScrollBarEnabled (p0: Boolean ) setVerticalScrollbarPosition [androidJvm] open fun setVerticalScrollbarPosition (p0: Int ) setVerticalScrollbarThumbDrawable [androidJvm] open fun setVerticalScrollbarThumbDrawable (p0: Drawable ?) setVerticalScrollbarTrackDrawable [androidJvm] open fun setVerticalScrollbarTrackDrawable (p0: Drawable ?) setViewTranslationCallback [androidJvm] open fun setViewTranslationCallback (p0: ViewTranslationCallback ) setVisibility [androidJvm] open fun setVisibility (p0: Int ) setWebChromeClient [androidJvm] open fun setWebChromeClient (p0: WebChromeClient ?) setWebViewClient [androidJvm] open fun setWebViewClient (p0: WebViewClient ) setWebViewRenderProcessClient [androidJvm] open fun setWebViewRenderProcessClient (p0: WebViewRenderProcessClient ?) open fun setWebViewRenderProcessClient (p0: Executor , p1: WebViewRenderProcessClient ) setWillNotDraw [androidJvm] open fun setWillNotDraw (p0: Boolean ) setWindowInsetsAnimationCallback [androidJvm] open override fun setWindowInsetsAnimationCallback (p0: WindowInsetsAnimation.Callback ?) setX [androidJvm] open fun setX (p0: Float ) setY [androidJvm] open fun setY (p0: Float ) setZ [androidJvm] open fun setZ (p0: Float ) showContextMenu [androidJvm] open fun showContextMenu (): Boolean open fun showContextMenu (p0: Float , p1: Float ): Boolean showContextMenuForChild [androidJvm] open override fun showContextMenuForChild (p0: View ): Boolean open override fun showContextMenuForChild (p0: View , p1: Float , p2: Float ): Boolean startActionMode [androidJvm] open override fun startActionMode (callback: ActionMode.Callback ?): ActionMode ? @ RequiresApi (value = 23) open override fun startActionMode (callback: ActionMode.Callback ?, type: Int ): ActionMode ? startActionModeForChild [androidJvm] open override fun startActionModeForChild (p0: View , p1: ActionMode.Callback ): ActionMode open override fun startActionModeForChild (p0: View , p1: ActionMode.Callback , p2: Int ): ActionMode startAnimation [androidJvm] open fun startAnimation (p0: Animation ) startDragAndDrop [androidJvm] fun startDragAndDrop (p0: ClipData , p1: View.DragShadowBuilder , p2: Any , p3: Int ): Boolean startLayoutAnimation [androidJvm] open fun startLayoutAnimation () startNestedScroll [androidJvm] open fun startNestedScroll (p0: Int ): Boolean startViewTransition [androidJvm] open fun startViewTransition (p0: View ) stopLoading [androidJvm] open fun stopLoading () stopNestedScroll [androidJvm] open fun stopNestedScroll () suppressLayout [androidJvm] open fun suppressLayout (p0: Boolean ) toInt [androidJvm] fun Boolean . toInt (): Int toString [androidJvm] open override fun toString (): String transformMatrixToGlobal [androidJvm] open fun transformMatrixToGlobal (p0: Matrix ) transformMatrixToLocal [androidJvm] open fun transformMatrixToLocal (p0: Matrix ) unscheduleDrawable [androidJvm] open fun unscheduleDrawable (p0: Drawable ) open override fun unscheduleDrawable (p0: Drawable , p1: Runnable ) updateDragShadow [androidJvm] fun updateDragShadow (p0: View.DragShadowBuilder ) updateViewLayout [androidJvm] open override fun updateViewLayout (p0: View , p1: ViewGroup.LayoutParams ) verifyDrawable [androidJvm] open fun verifyDrawable (p0: Drawable ): Boolean willNotDraw [androidJvm] open fun willNotDraw (): Boolean zoomBy [androidJvm] open fun zoomBy (p0: Float ) zoomIn [androidJvm] open fun zoomIn (): Boolean zoomOut [androidJvm] open fun zoomOut (): Boolean","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/#properties","text":"Name Summary callback [androidJvm] var callback : R2BasicWebView.OnOverScrolledCallback ? = null listener [androidJvm] lateinit var listener : R2BasicWebView.Listener navigator [androidJvm] lateinit var navigator : Navigator progression [androidJvm] val progression : Double Computes the current progression in the resource. resourceUrl [androidJvm] var resourceUrl : String ? = null scrollMode [androidJvm] val scrollMode : Boolean","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/#inheritors","text":"Name R2WebView","title":"Inheritors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-r2-basic-web-view/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / R2BasicWebView R2BasicWebView \u00b6 [androidJvm]\\ fun R2BasicWebView (context: Context , attrs: AttributeSet )","title":" r2 basic web view"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-r2-basic-web-view/#r2basicwebview","text":"[androidJvm]\\ fun R2BasicWebView (context: Context , attrs: AttributeSet )","title":"R2BasicWebView"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/callback/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / callback callback \u00b6 [androidJvm]\\ var callback : R2BasicWebView.OnOverScrolledCallback ? = null","title":"Callback"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/callback/#callback","text":"[androidJvm]\\ var callback : R2BasicWebView.OnOverScrolledCallback ? = null","title":"callback"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/create-annotation/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / createAnnotation createAnnotation \u00b6 [androidJvm]\\ fun createAnnotation (id: String )","title":"Create annotation"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/create-annotation/#createannotation","text":"[androidJvm]\\ fun createAnnotation (id: String )","title":"createAnnotation"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/create-highlight/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / createHighlight createHighlight \u00b6 [androidJvm]\\ fun createHighlight (locator: String ?, color: String ?, callback: ( String ) -> Unit )","title":"Create highlight"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/create-highlight/#createhighlight","text":"[androidJvm]\\ fun createHighlight (locator: String ?, color: String ?, callback: ( String ) -> Unit )","title":"createHighlight"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/destroy-highlight/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / destroyHighlight destroyHighlight \u00b6 [androidJvm]\\ fun destroyHighlight (id: String )","title":"Destroy highlight"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/destroy-highlight/#destroyhighlight","text":"[androidJvm]\\ fun destroyHighlight (id: String )","title":"destroyHighlight"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/get-current-selection-info/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / getCurrentSelectionInfo getCurrentSelectionInfo \u00b6 [androidJvm]\\ fun getCurrentSelectionInfo (callback: ( String ) -> Unit )","title":"Get current selection info"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/get-current-selection-info/#getcurrentselectioninfo","text":"[androidJvm]\\ fun getCurrentSelectionInfo (callback: ( String ) -> Unit )","title":"getCurrentSelectionInfo"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/get-current-selection-rect/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / getCurrentSelectionRect getCurrentSelectionRect \u00b6 [androidJvm]\\ fun getCurrentSelectionRect (callback: ( String ) -> Unit )","title":"Get current selection rect"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/get-current-selection-rect/#getcurrentselectionrect","text":"[androidJvm]\\ fun getCurrentSelectionRect (callback: ( String ) -> Unit )","title":"getCurrentSelectionRect"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/get-viewport-width/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / getViewportWidth getViewportWidth \u00b6 [androidJvm]\\ fun getViewportWidth (): Int","title":"Get viewport width"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/get-viewport-width/#getviewportwidth","text":"[androidJvm]\\ fun getViewportWidth (): Int","title":"getViewportWidth"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/highlight-activated/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / highlightActivated highlightActivated \u00b6 [androidJvm]\\ fun highlightActivated (id: String )","title":"Highlight activated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/highlight-activated/#highlightactivated","text":"[androidJvm]\\ fun highlightActivated (id: String )","title":"highlightActivated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/highlight-annotation-mark-activated/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / highlightAnnotationMarkActivated highlightAnnotationMarkActivated \u00b6 [androidJvm]\\ fun highlightAnnotationMarkActivated (id: String )","title":"Highlight annotation mark activated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/highlight-annotation-mark-activated/#highlightannotationmarkactivated","text":"[androidJvm]\\ fun highlightAnnotationMarkActivated (id: String )","title":"highlightAnnotationMarkActivated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/listener/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / listener listener \u00b6 [androidJvm]\\ lateinit var listener : R2BasicWebView.Listener","title":"Listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/listener/#listener","text":"[androidJvm]\\ lateinit var listener : R2BasicWebView.Listener","title":"listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/log-error/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / logError logError \u00b6 [androidJvm]\\ fun logError (message: String , filename: String , line: Int )","title":"Log error"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/log-error/#logerror","text":"[androidJvm]\\ fun logError (message: String , filename: String , line: Int )","title":"logError"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/log/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / log log \u00b6 [androidJvm]\\ fun log (message: String )","title":"Log"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/log/#log","text":"[androidJvm]\\ fun log (message: String )","title":"log"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/navigator/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / navigator navigator \u00b6 [androidJvm]\\ lateinit var navigator : Navigator","title":"Navigator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/navigator/#navigator","text":"[androidJvm]\\ lateinit var navigator : Navigator","title":"navigator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/on-decoration-activated/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / onDecorationActivated onDecorationActivated \u00b6 [androidJvm]\\ fun onDecorationActivated (eventJson: String ): Boolean Called from the JS code when a tap on a decoration is detected.","title":"On decoration activated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/on-decoration-activated/#ondecorationactivated","text":"[androidJvm]\\ fun onDecorationActivated (eventJson: String ): Boolean Called from the JS code when a tap on a decoration is detected.","title":"onDecorationActivated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/on-tap/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / onTap onTap \u00b6 [androidJvm]\\ fun onTap (eventJson: String ): Boolean Called from the JS code when a tap is detected. If the JS indicates the tap is being handled within the web view, don't take action, Returns whether the web view should prevent the default behavior for this tap.","title":"On tap"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/on-tap/#ontap","text":"[androidJvm]\\ fun onTap (eventJson: String ): Boolean Called from the JS code when a tap is detected. If the JS indicates the tap is being handled within the web view, don't take action, Returns whether the web view should prevent the default behavior for this tap.","title":"onTap"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/progression/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / progression progression \u00b6 [androidJvm]\\ val progression : Double Computes the current progression in the resource.","title":"Progression"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/progression/#progression","text":"[androidJvm]\\ val progression : Double Computes the current progression in the resource.","title":"progression"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/rectangle-for-highlight-with-i-d/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / rectangleForHighlightWithID rectangleForHighlightWithID \u00b6 [androidJvm]\\ fun rectangleForHighlightWithID (id: String , callback: ( String ) -> Unit )","title":"Rectangle for highlight with i d"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/rectangle-for-highlight-with-i-d/#rectangleforhighlightwithid","text":"[androidJvm]\\ fun rectangleForHighlightWithID (id: String , callback: ( String ) -> Unit )","title":"rectangleForHighlightWithID"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/remove-property/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / removeProperty removeProperty \u00b6 [androidJvm]\\ fun removeProperty (key: String )","title":"Remove property"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/remove-property/#removeproperty","text":"[androidJvm]\\ fun removeProperty (key: String )","title":"removeProperty"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/resource-url/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / resourceUrl resourceUrl \u00b6 [androidJvm]\\ var resourceUrl : String ? = null","title":"Resource url"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/resource-url/#resourceurl","text":"[androidJvm]\\ var resourceUrl : String ? = null","title":"resourceUrl"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/run-java-script/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / runJavaScript runJavaScript \u00b6 [androidJvm]\\ fun runJavaScript (javascript: String , callback: ( String ) -> Unit ? = null)","title":"Run java script"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/run-java-script/#runjavascript","text":"[androidJvm]\\ fun runJavaScript (javascript: String , callback: ( String ) -> Unit ? = null)","title":"runJavaScript"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/scroll-left/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / scrollLeft scrollLeft \u00b6 [androidJvm]\\ open fun scrollLeft (animated: Boolean = false)","title":"Scroll left"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/scroll-left/#scrollleft","text":"[androidJvm]\\ open fun scrollLeft (animated: Boolean = false)","title":"scrollLeft"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/scroll-mode/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / scrollMode scrollMode \u00b6 [androidJvm]\\ val scrollMode : Boolean","title":"Scroll mode"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/scroll-mode/#scrollmode","text":"[androidJvm]\\ val scrollMode : Boolean","title":"scrollMode"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/scroll-right/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / scrollRight scrollRight \u00b6 [androidJvm]\\ open fun scrollRight (animated: Boolean = false)","title":"Scroll right"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/scroll-right/#scrollright","text":"[androidJvm]\\ open fun scrollRight (animated: Boolean = false)","title":"scrollRight"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/scroll-to-end/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / scrollToEnd scrollToEnd \u00b6 [androidJvm]\\ fun scrollToEnd ()","title":"Scroll to end"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/scroll-to-end/#scrolltoend","text":"[androidJvm]\\ fun scrollToEnd ()","title":"scrollToEnd"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/scroll-to-id/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / scrollToId scrollToId \u00b6 [androidJvm]\\ suspend fun scrollToId (htmlId: String ): Boolean","title":"Scroll to id"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/scroll-to-id/#scrolltoid","text":"[androidJvm]\\ suspend fun scrollToId (htmlId: String ): Boolean","title":"scrollToId"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/scroll-to-position/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / scrollToPosition scrollToPosition \u00b6 [androidJvm]\\ fun scrollToPosition (progression: Double )","title":"Scroll to position"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/scroll-to-position/#scrolltoposition","text":"[androidJvm]\\ fun scrollToPosition (progression: Double )","title":"scrollToPosition"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/scroll-to-start/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / scrollToStart scrollToStart \u00b6 [androidJvm]\\ fun scrollToStart ()","title":"Scroll to start"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/scroll-to-start/#scrolltostart","text":"[androidJvm]\\ fun scrollToStart ()","title":"scrollToStart"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/scroll-to-text/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / scrollToText scrollToText \u00b6 [androidJvm]\\ suspend fun scrollToText (text: Locator.Text ): Boolean","title":"Scroll to text"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/scroll-to-text/#scrolltotext","text":"[androidJvm]\\ suspend fun scrollToText (text: Locator.Text ): Boolean","title":"scrollToText"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/set-on-over-scrolled-callback/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / setOnOverScrolledCallback setOnOverScrolledCallback \u00b6 [androidJvm]\\ fun setOnOverScrolledCallback (callback: R2BasicWebView.OnOverScrolledCallback )","title":"Set on over scrolled callback"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/set-on-over-scrolled-callback/#setonoverscrolledcallback","text":"[androidJvm]\\ fun setOnOverScrolledCallback (callback: R2BasicWebView.OnOverScrolledCallback )","title":"setOnOverScrolledCallback"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/set-property/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / setProperty setProperty \u00b6 [androidJvm]\\ fun setProperty (key: String , value: String )","title":"Set property"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/set-property/#setproperty","text":"[androidJvm]\\ fun setProperty (key: String , value: String )","title":"setProperty"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/set-scroll-mode/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / setScrollMode setScrollMode \u00b6 [androidJvm]\\ fun setScrollMode (scrollMode: Boolean )","title":"Set scroll mode"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/set-scroll-mode/#setscrollmode","text":"[androidJvm]\\ fun setScrollMode (scrollMode: Boolean )","title":"setScrollMode"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/start-action-mode/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / startActionMode startActionMode \u00b6 [androidJvm]\\ open override fun startActionMode (callback: ActionMode.Callback ?): ActionMode ? @ RequiresApi (value = 23) open override fun startActionMode (callback: ActionMode.Callback ?, type: Int ): ActionMode ?","title":"Start action mode"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/start-action-mode/#startactionmode","text":"[androidJvm]\\ open override fun startActionMode (callback: ActionMode.Callback ?): ActionMode ? @ RequiresApi (value = 23) open override fun startActionMode (callback: ActionMode.Callback ?, type: Int ): ActionMode ?","title":"startActionMode"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/to-int/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / toInt toInt \u00b6 [androidJvm]\\ fun Boolean . toInt (): Int","title":"To int"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/to-int/#toint","text":"[androidJvm]\\ fun Boolean . toInt (): Int","title":"toInt"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-callback-wrapper/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / CallbackWrapper CallbackWrapper \u00b6 [androidJvm]\\ inner class CallbackWrapper (callback: ActionMode.Callback ) : ActionMode.Callback A wrapper for the app-provided custom ActionMode.Callback which clears the selection when activating one of the menu items. Constructors \u00b6 CallbackWrapper [androidJvm] fun CallbackWrapper (callback: ActionMode.Callback ) Functions \u00b6 Name Summary onActionItemClicked [androidJvm] open override fun onActionItemClicked (mode: ActionMode ?, item: MenuItem ?): Boolean onCreateActionMode [androidJvm] open override fun onCreateActionMode (p0: ActionMode , p1: Menu ): Boolean onDestroyActionMode [androidJvm] open override fun onDestroyActionMode (p0: ActionMode ) onPrepareActionMode [androidJvm] open override fun onPrepareActionMode (p0: ActionMode , p1: Menu ): Boolean Properties \u00b6 Name Summary callback [androidJvm] val callback : ActionMode.Callback","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-callback-wrapper/#callbackwrapper","text":"[androidJvm]\\ inner class CallbackWrapper (callback: ActionMode.Callback ) : ActionMode.Callback A wrapper for the app-provided custom ActionMode.Callback which clears the selection when activating one of the menu items.","title":"CallbackWrapper"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-callback-wrapper/#constructors","text":"CallbackWrapper [androidJvm] fun CallbackWrapper (callback: ActionMode.Callback )","title":"Constructors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-callback-wrapper/#functions","text":"Name Summary onActionItemClicked [androidJvm] open override fun onActionItemClicked (mode: ActionMode ?, item: MenuItem ?): Boolean onCreateActionMode [androidJvm] open override fun onCreateActionMode (p0: ActionMode , p1: Menu ): Boolean onDestroyActionMode [androidJvm] open override fun onDestroyActionMode (p0: ActionMode ) onPrepareActionMode [androidJvm] open override fun onPrepareActionMode (p0: ActionMode , p1: Menu ): Boolean","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-callback-wrapper/#properties","text":"Name Summary callback [androidJvm] val callback : ActionMode.Callback","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-callback-wrapper/-callback-wrapper/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / CallbackWrapper / CallbackWrapper CallbackWrapper \u00b6 [androidJvm]\\ fun CallbackWrapper (callback: ActionMode.Callback )","title":" callback wrapper"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-callback-wrapper/-callback-wrapper/#callbackwrapper","text":"[androidJvm]\\ fun CallbackWrapper (callback: ActionMode.Callback )","title":"CallbackWrapper"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-callback-wrapper/callback/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / CallbackWrapper / callback callback \u00b6 [androidJvm]\\ val callback : ActionMode.Callback","title":"Callback"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-callback-wrapper/callback/#callback","text":"[androidJvm]\\ val callback : ActionMode.Callback","title":"callback"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-callback-wrapper/on-action-item-clicked/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / CallbackWrapper / onActionItemClicked onActionItemClicked \u00b6 [androidJvm]\\ open override fun onActionItemClicked (mode: ActionMode ?, item: MenuItem ?): Boolean","title":"On action item clicked"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-callback-wrapper/on-action-item-clicked/#onactionitemclicked","text":"[androidJvm]\\ open override fun onActionItemClicked (mode: ActionMode ?, item: MenuItem ?): Boolean","title":"onActionItemClicked"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-callback2-wrapper/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / Callback2Wrapper Callback2Wrapper \u00b6 [androidJvm]\\ @ RequiresApi (value = 23) inner class Callback2Wrapper (callback: ActionMode.Callback , callback2: ActionMode.Callback2 ?) : ActionMode.Callback2 , ActionMode.Callback Functions \u00b6 Name Summary onActionItemClicked [androidJvm] open override fun onActionItemClicked (p0: ActionMode , p1: MenuItem ): Boolean onCreateActionMode [androidJvm] open override fun onCreateActionMode (p0: ActionMode , p1: Menu ): Boolean onDestroyActionMode [androidJvm] open override fun onDestroyActionMode (p0: ActionMode ) onGetContentRect [androidJvm] open override fun onGetContentRect (mode: ActionMode ?, view: View ?, outRect: Rect ?) onPrepareActionMode [androidJvm] open override fun onPrepareActionMode (p0: ActionMode , p1: Menu ): Boolean Properties \u00b6 Name Summary callback [androidJvm] val callback : ActionMode.Callback callback2 [androidJvm] val callback2 : ActionMode.Callback2 ?","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-callback2-wrapper/#callback2wrapper","text":"[androidJvm]\\ @ RequiresApi (value = 23) inner class Callback2Wrapper (callback: ActionMode.Callback , callback2: ActionMode.Callback2 ?) : ActionMode.Callback2 , ActionMode.Callback","title":"Callback2Wrapper"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-callback2-wrapper/#functions","text":"Name Summary onActionItemClicked [androidJvm] open override fun onActionItemClicked (p0: ActionMode , p1: MenuItem ): Boolean onCreateActionMode [androidJvm] open override fun onCreateActionMode (p0: ActionMode , p1: Menu ): Boolean onDestroyActionMode [androidJvm] open override fun onDestroyActionMode (p0: ActionMode ) onGetContentRect [androidJvm] open override fun onGetContentRect (mode: ActionMode ?, view: View ?, outRect: Rect ?) onPrepareActionMode [androidJvm] open override fun onPrepareActionMode (p0: ActionMode , p1: Menu ): Boolean","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-callback2-wrapper/#properties","text":"Name Summary callback [androidJvm] val callback : ActionMode.Callback callback2 [androidJvm] val callback2 : ActionMode.Callback2 ?","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-callback2-wrapper/-callback2-wrapper/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / Callback2Wrapper / Callback2Wrapper Callback2Wrapper \u00b6 [androidJvm]\\ fun Callback2Wrapper (callback: ActionMode.Callback , callback2: ActionMode.Callback2 ?)","title":" callback2 wrapper"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-callback2-wrapper/-callback2-wrapper/#callback2wrapper","text":"[androidJvm]\\ fun Callback2Wrapper (callback: ActionMode.Callback , callback2: ActionMode.Callback2 ?)","title":"Callback2Wrapper"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-callback2-wrapper/callback/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / Callback2Wrapper / callback callback \u00b6 [androidJvm]\\ val callback : ActionMode.Callback","title":"Callback"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-callback2-wrapper/callback/#callback","text":"[androidJvm]\\ val callback : ActionMode.Callback","title":"callback"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-callback2-wrapper/callback2/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / Callback2Wrapper / callback2 callback2 \u00b6 [androidJvm]\\ val callback2 : ActionMode.Callback2 ?","title":"Callback2"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-callback2-wrapper/callback2/#callback2","text":"[androidJvm]\\ val callback2 : ActionMode.Callback2 ?","title":"callback2"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-callback2-wrapper/on-get-content-rect/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / Callback2Wrapper / onGetContentRect onGetContentRect \u00b6 [androidJvm]\\ open override fun onGetContentRect (mode: ActionMode ?, view: View ?, outRect: Rect ?)","title":"On get content rect"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-callback2-wrapper/on-get-content-rect/#ongetcontentrect","text":"[androidJvm]\\ open override fun onGetContentRect (mode: ActionMode ?, view: View ?, outRect: Rect ?)","title":"onGetContentRect"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / Listener Listener \u00b6 [androidJvm]\\ interface Listener Functions \u00b6 Name Summary goBackward [androidJvm] abstract fun goBackward (animated: Boolean = false, completion: () -> Unit = {}): Boolean goForward [androidJvm] abstract fun goForward (animated: Boolean = false, completion: () -> Unit = {}): Boolean onDecorationActivated [androidJvm] open fun onDecorationActivated (id: DecorationId , group: String , rect: RectF , point: PointF ): Boolean onHighlightActivated [androidJvm] abstract fun onHighlightActivated (id: String ) onHighlightAnnotationMarkActivated [androidJvm] abstract fun onHighlightAnnotationMarkActivated (id: String ) onPageChanged [androidJvm] abstract fun onPageChanged (pageIndex: Int , totalPages: Int , url: String ) onPageEnded [androidJvm] abstract fun onPageEnded (end: Boolean ) onPageLoaded [androidJvm] abstract fun onPageLoaded () onProgressionChanged [androidJvm] abstract fun onProgressionChanged () onResourceLoaded [androidJvm] open fun onResourceLoaded (link: Link ?, webView: R2BasicWebView , url: String ?) onScroll [androidJvm] abstract fun onScroll () onTap [androidJvm] abstract fun onTap (point: PointF ): Boolean Properties \u00b6 Name Summary readingProgression [androidJvm] abstract val readingProgression : ReadingProgression selectionActionModeCallback [androidJvm] open val selectionActionModeCallback : ActionMode.Callback ? Returns the custom ActionMode.Callback to be used with the text selection menu. Inheritors \u00b6 Name EpubNavigatorFragment","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/#listener","text":"[androidJvm]\\ interface Listener","title":"Listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/#functions","text":"Name Summary goBackward [androidJvm] abstract fun goBackward (animated: Boolean = false, completion: () -> Unit = {}): Boolean goForward [androidJvm] abstract fun goForward (animated: Boolean = false, completion: () -> Unit = {}): Boolean onDecorationActivated [androidJvm] open fun onDecorationActivated (id: DecorationId , group: String , rect: RectF , point: PointF ): Boolean onHighlightActivated [androidJvm] abstract fun onHighlightActivated (id: String ) onHighlightAnnotationMarkActivated [androidJvm] abstract fun onHighlightAnnotationMarkActivated (id: String ) onPageChanged [androidJvm] abstract fun onPageChanged (pageIndex: Int , totalPages: Int , url: String ) onPageEnded [androidJvm] abstract fun onPageEnded (end: Boolean ) onPageLoaded [androidJvm] abstract fun onPageLoaded () onProgressionChanged [androidJvm] abstract fun onProgressionChanged () onResourceLoaded [androidJvm] open fun onResourceLoaded (link: Link ?, webView: R2BasicWebView , url: String ?) onScroll [androidJvm] abstract fun onScroll () onTap [androidJvm] abstract fun onTap (point: PointF ): Boolean","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/#properties","text":"Name Summary readingProgression [androidJvm] abstract val readingProgression : ReadingProgression selectionActionModeCallback [androidJvm] open val selectionActionModeCallback : ActionMode.Callback ? Returns the custom ActionMode.Callback to be used with the text selection menu.","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/#inheritors","text":"Name EpubNavigatorFragment","title":"Inheritors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/go-backward/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / Listener / goBackward goBackward \u00b6 [androidJvm]\\ abstract fun goBackward (animated: Boolean = false, completion: () -> Unit = {}): Boolean","title":"Go backward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/go-backward/#gobackward","text":"[androidJvm]\\ abstract fun goBackward (animated: Boolean = false, completion: () -> Unit = {}): Boolean","title":"goBackward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/go-forward/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / Listener / goForward goForward \u00b6 [androidJvm]\\ abstract fun goForward (animated: Boolean = false, completion: () -> Unit = {}): Boolean","title":"Go forward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/go-forward/#goforward","text":"[androidJvm]\\ abstract fun goForward (animated: Boolean = false, completion: () -> Unit = {}): Boolean","title":"goForward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/on-decoration-activated/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / Listener / onDecorationActivated onDecorationActivated \u00b6 [androidJvm]\\ open fun onDecorationActivated (id: DecorationId , group: String , rect: RectF , point: PointF ): Boolean","title":"On decoration activated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/on-decoration-activated/#ondecorationactivated","text":"[androidJvm]\\ open fun onDecorationActivated (id: DecorationId , group: String , rect: RectF , point: PointF ): Boolean","title":"onDecorationActivated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/on-highlight-activated/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / Listener / onHighlightActivated onHighlightActivated \u00b6 [androidJvm]\\ abstract fun onHighlightActivated (id: String )","title":"On highlight activated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/on-highlight-activated/#onhighlightactivated","text":"[androidJvm]\\ abstract fun onHighlightActivated (id: String )","title":"onHighlightActivated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/on-highlight-annotation-mark-activated/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / Listener / onHighlightAnnotationMarkActivated onHighlightAnnotationMarkActivated \u00b6 [androidJvm]\\ abstract fun onHighlightAnnotationMarkActivated (id: String )","title":"On highlight annotation mark activated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/on-highlight-annotation-mark-activated/#onhighlightannotationmarkactivated","text":"[androidJvm]\\ abstract fun onHighlightAnnotationMarkActivated (id: String )","title":"onHighlightAnnotationMarkActivated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/on-page-changed/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / Listener / onPageChanged onPageChanged \u00b6 [androidJvm]\\ abstract fun onPageChanged (pageIndex: Int , totalPages: Int , url: String )","title":"On page changed"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/on-page-changed/#onpagechanged","text":"[androidJvm]\\ abstract fun onPageChanged (pageIndex: Int , totalPages: Int , url: String )","title":"onPageChanged"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/on-page-ended/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / Listener / onPageEnded onPageEnded \u00b6 [androidJvm]\\ abstract fun onPageEnded (end: Boolean )","title":"On page ended"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/on-page-ended/#onpageended","text":"[androidJvm]\\ abstract fun onPageEnded (end: Boolean )","title":"onPageEnded"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/on-page-loaded/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / Listener / onPageLoaded onPageLoaded \u00b6 [androidJvm]\\ abstract fun onPageLoaded ()","title":"On page loaded"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/on-page-loaded/#onpageloaded","text":"[androidJvm]\\ abstract fun onPageLoaded ()","title":"onPageLoaded"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/on-progression-changed/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / Listener / onProgressionChanged onProgressionChanged \u00b6 [androidJvm]\\ abstract fun onProgressionChanged ()","title":"On progression changed"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/on-progression-changed/#onprogressionchanged","text":"[androidJvm]\\ abstract fun onProgressionChanged ()","title":"onProgressionChanged"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/on-resource-loaded/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / Listener / onResourceLoaded onResourceLoaded \u00b6 [androidJvm]\\ open fun onResourceLoaded (link: Link ?, webView: R2BasicWebView , url: String ?)","title":"On resource loaded"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/on-resource-loaded/#onresourceloaded","text":"[androidJvm]\\ open fun onResourceLoaded (link: Link ?, webView: R2BasicWebView , url: String ?)","title":"onResourceLoaded"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/on-scroll/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / Listener / onScroll onScroll \u00b6 [androidJvm]\\ abstract fun onScroll ()","title":"On scroll"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/on-scroll/#onscroll","text":"[androidJvm]\\ abstract fun onScroll ()","title":"onScroll"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/on-tap/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / Listener / onTap onTap \u00b6 [androidJvm]\\ abstract fun onTap (point: PointF ): Boolean","title":"On tap"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/on-tap/#ontap","text":"[androidJvm]\\ abstract fun onTap (point: PointF ): Boolean","title":"onTap"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/reading-progression/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / Listener / readingProgression readingProgression \u00b6 [androidJvm]\\ abstract val readingProgression : ReadingProgression","title":"Reading progression"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/reading-progression/#readingprogression","text":"[androidJvm]\\ abstract val readingProgression : ReadingProgression","title":"readingProgression"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/selection-action-mode-callback/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / Listener / selectionActionModeCallback selectionActionModeCallback \u00b6 [androidJvm]\\ open val selectionActionModeCallback : ActionMode.Callback ? Returns the custom ActionMode.Callback to be used with the text selection menu.","title":"Selection action mode callback"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-listener/selection-action-mode-callback/#selectionactionmodecallback","text":"[androidJvm]\\ open val selectionActionModeCallback : ActionMode.Callback ? Returns the custom ActionMode.Callback to be used with the text selection menu.","title":"selectionActionModeCallback"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-on-over-scrolled-callback/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / OnOverScrolledCallback OnOverScrolledCallback \u00b6 [androidJvm]\\ interface OnOverScrolledCallback Functions \u00b6 Name Summary onOverScrolled [androidJvm] abstract fun onOverScrolled (scrollX: Int , scrollY: Int , clampedX: Boolean , clampedY: Boolean )","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-on-over-scrolled-callback/#onoverscrolledcallback","text":"[androidJvm]\\ interface OnOverScrolledCallback","title":"OnOverScrolledCallback"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-on-over-scrolled-callback/#functions","text":"Name Summary onOverScrolled [androidJvm] abstract fun onOverScrolled (scrollX: Int , scrollY: Int , clampedX: Boolean , clampedY: Boolean )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-on-over-scrolled-callback/on-over-scrolled/","text":"// navigator / org.readium.r2.navigator / R2BasicWebView / OnOverScrolledCallback / onOverScrolled onOverScrolled \u00b6 [androidJvm]\\ abstract fun onOverScrolled (scrollX: Int , scrollY: Int , clampedX: Boolean , clampedY: Boolean )","title":"On over scrolled"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-basic-web-view/-on-over-scrolled-callback/on-over-scrolled/#onoverscrolled","text":"[androidJvm]\\ abstract fun onOverScrolled (scrollX: Int , scrollY: Int , clampedX: Boolean , clampedY: Boolean )","title":"onOverScrolled"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/","text":"// navigator / org.readium.r2.navigator / R2WebView R2WebView \u00b6 [androidJvm]\\ class R2WebView (context: Context , attrs: AttributeSet ) : R2BasicWebView Created by Aferdita Muriqi on 12/2/17. Constructors \u00b6 R2WebView [androidJvm] fun R2WebView (context: Context , attrs: AttributeSet ) Types \u00b6 Name Summary LayoutParams [androidJvm] class LayoutParams : ViewGroup.LayoutParams Layout parameters that should be supplied for views added to a ViewPager. Functions \u00b6 Name Summary addChildrenForAccessibility [androidJvm] open override fun addChildrenForAccessibility (p0: ArrayList < View >) addExtraDataToAccessibilityNodeInfo [androidJvm] open override fun addExtraDataToAccessibilityNodeInfo (p0: AccessibilityNodeInfo , p1: String , p2: Bundle ?) addFocusables [androidJvm] open fun addFocusables (p0: ArrayList < View >, p1: Int ) open override fun addFocusables (p0: ArrayList < View >, p1: Int , p2: Int ) addJavascriptInterface [androidJvm] open fun addJavascriptInterface (p0: Any , p1: String ) addKeyboardNavigationClusters [androidJvm] open override fun addKeyboardNavigationClusters (p0: MutableCollection < View >, p1: Int ) addOnAttachStateChangeListener [androidJvm] open fun addOnAttachStateChangeListener (p0: View.OnAttachStateChangeListener ) addOnLayoutChangeListener [androidJvm] open fun addOnLayoutChangeListener (p0: View.OnLayoutChangeListener ) addOnUnhandledKeyEventListener [androidJvm] open fun addOnUnhandledKeyEventListener (p0: View.OnUnhandledKeyEventListener ) addStatesFromChildren [androidJvm] open fun addStatesFromChildren (): Boolean addTouchables [androidJvm] open override fun addTouchables (p0: ArrayList < View >) addView [androidJvm] open fun addView (p0: View ) open override fun addView (p0: View , p1: ViewGroup.LayoutParams ) open fun addView (p0: View , p1: Int ) open fun addView (p0: View , p1: Int , p2: ViewGroup.LayoutParams ) open fun addView (p0: View , p1: Int , p2: Int ) addViewInLayout [androidJvm] open fun addViewInLayout (p0: View , p1: Int , p2: ViewGroup.LayoutParams ): Boolean open fun addViewInLayout (p0: View , p1: Int , p2: ViewGroup.LayoutParams , p3: Boolean ): Boolean animate [androidJvm] open fun animate (): ViewPropertyAnimator announceForAccessibility [androidJvm] open fun announceForAccessibility (p0: CharSequence ) attachLayoutAnimationParameters [androidJvm] open fun attachLayoutAnimationParameters (p0: View , p1: ViewGroup.LayoutParams , p2: Int , p3: Int ) attachViewToParent [androidJvm] open fun attachViewToParent (p0: View , p1: Int , p2: ViewGroup.LayoutParams ) autofill [androidJvm] open fun autofill (p0: AutofillValue ) open override fun autofill (p0: SparseArray < AutofillValue >) awakenScrollBars [androidJvm] open fun awakenScrollBars (): Boolean open fun awakenScrollBars (p0: Int ): Boolean open fun awakenScrollBars (p0: Int , p1: Boolean ): Boolean bringChildToFront [androidJvm] open override fun bringChildToFront (p0: View ) bringToFront [androidJvm] open fun bringToFront () buildLayer [androidJvm] open fun buildLayer () callOnClick [androidJvm] open fun callOnClick (): Boolean canAnimate [androidJvm] open fun canAnimate (): Boolean cancelDragAndDrop [androidJvm] fun cancelDragAndDrop () cancelLongPress [androidJvm] open fun cancelLongPress () cancelPendingInputEvents [androidJvm] fun cancelPendingInputEvents () canGoBack [androidJvm] open fun canGoBack (): Boolean canGoBackOrForward [androidJvm] open fun canGoBackOrForward (p0: Int ): Boolean canGoForward [androidJvm] open fun canGoForward (): Boolean canResolveLayoutDirection [androidJvm] open fun canResolveLayoutDirection (): Boolean canResolveTextAlignment [androidJvm] open fun canResolveTextAlignment (): Boolean canResolveTextDirection [androidJvm] open fun canResolveTextDirection (): Boolean canScrollHorizontally [androidJvm] open fun canScrollHorizontally (p0: Int ): Boolean canScrollVertically [androidJvm] open fun canScrollVertically (p0: Int ): Boolean checkInputConnectionProxy [androidJvm] open fun checkInputConnectionProxy (p0: View ): Boolean childDrawableStateChanged [androidJvm] open override fun childDrawableStateChanged (p0: View ) childHasTransientStateChanged [androidJvm] open override fun childHasTransientStateChanged (p0: View , p1: Boolean ) cleanupLayoutState [androidJvm] open fun cleanupLayoutState (p0: View ) clearAnimation [androidJvm] open fun clearAnimation () clearCache [androidJvm] open fun clearCache (p0: Boolean ) clearChildFocus [androidJvm] open override fun clearChildFocus (p0: View ) clearDisappearingChildren [androidJvm] open fun clearDisappearingChildren () clearFocus [androidJvm] open override fun clearFocus () clearFormData [androidJvm] open fun clearFormData () clearHistory [androidJvm] open fun clearHistory () clearMatches [androidJvm] open fun clearMatches () clearSslPreferences [androidJvm] open fun clearSslPreferences () clearViewTranslationCallback [androidJvm] open fun clearViewTranslationCallback () computeHorizontalScrollExtent [androidJvm] open fun computeHorizontalScrollExtent (): Int computeHorizontalScrollOffset [androidJvm] open override fun computeHorizontalScrollOffset (): Int computeHorizontalScrollRange [androidJvm] open override fun computeHorizontalScrollRange (): Int computeScroll [androidJvm] open override fun computeScroll () computeSystemWindowInsets [androidJvm] open fun computeSystemWindowInsets (p0: WindowInsets , p1: Rect ): WindowInsets computeVerticalScrollExtent [androidJvm] open override fun computeVerticalScrollExtent (): Int computeVerticalScrollOffset [androidJvm] open override fun computeVerticalScrollOffset (): Int computeVerticalScrollRange [androidJvm] open override fun computeVerticalScrollRange (): Int copyBackForwardList [androidJvm] open fun copyBackForwardList (): WebBackForwardList createAccessibilityNodeInfo [androidJvm] open fun createAccessibilityNodeInfo (): AccessibilityNodeInfo createAnnotation [androidJvm] fun createAnnotation (id: String ) createContextMenu [androidJvm] open fun createContextMenu (p0: ContextMenu ) createHighlight [androidJvm] fun createHighlight (locator: String ?, color: String ?, callback: ( String ) -> Unit ) createPrintDocumentAdapter [androidJvm] open fun createPrintDocumentAdapter (p0: String ): PrintDocumentAdapter createWebMessageChannel [androidJvm] open fun createWebMessageChannel (): Array < WebMessagePort > debug [androidJvm] open fun debug (p0: Int ) destroy [androidJvm] open fun destroy () destroyHighlight [androidJvm] fun destroyHighlight (id: String ) detachAllViewsFromParent [androidJvm] open fun detachAllViewsFromParent () detachViewFromParent [androidJvm] open fun detachViewFromParent (p0: View ) open fun detachViewFromParent (p0: Int ) detachViewsFromParent [androidJvm] open fun detachViewsFromParent (p0: Int , p1: Int ) dispatchApplyWindowInsets [androidJvm] open override fun dispatchApplyWindowInsets (p0: WindowInsets ): WindowInsets dispatchCapturedPointerEvent [androidJvm] open override fun dispatchCapturedPointerEvent (p0: MotionEvent ): Boolean dispatchConfigurationChanged [androidJvm] open override fun dispatchConfigurationChanged (p0: Configuration ) dispatchCreateViewTranslationRequest [androidJvm] open override fun dispatchCreateViewTranslationRequest (p0: MutableMap < AutofillId , LongArray >, p1: IntArray , p2: TranslationCapability ?, p3: MutableList < ViewTranslationRequest >) dispatchDisplayHint [androidJvm] open override fun dispatchDisplayHint (p0: Int ) dispatchDragEvent [androidJvm] open override fun dispatchDragEvent (p0: DragEvent ): Boolean dispatchDraw [androidJvm] open override fun dispatchDraw (p0: Canvas ) dispatchDrawableHotspotChanged [androidJvm] open override fun dispatchDrawableHotspotChanged (p0: Float , p1: Float ) dispatchFinishTemporaryDetach [androidJvm] open override fun dispatchFinishTemporaryDetach () dispatchFreezeSelfOnly [androidJvm] open fun dispatchFreezeSelfOnly (p0: SparseArray < Parcelable >) dispatchGenericFocusedEvent [androidJvm] open override fun dispatchGenericFocusedEvent (p0: MotionEvent ): Boolean dispatchGenericMotionEvent [androidJvm] open fun dispatchGenericMotionEvent (p0: MotionEvent ): Boolean dispatchGenericPointerEvent [androidJvm] open override fun dispatchGenericPointerEvent (p0: MotionEvent ): Boolean dispatchHoverEvent [androidJvm] open override fun dispatchHoverEvent (p0: MotionEvent ): Boolean dispatchKeyEvent [androidJvm] open override fun dispatchKeyEvent (event: KeyEvent ): Boolean dispatchKeyEventPreIme [androidJvm] open override fun dispatchKeyEventPreIme (p0: KeyEvent ): Boolean dispatchKeyShortcutEvent [androidJvm] open override fun dispatchKeyShortcutEvent (p0: KeyEvent ): Boolean dispatchNestedFling [androidJvm] open fun dispatchNestedFling (p0: Float , p1: Float , p2: Boolean ): Boolean dispatchNestedPreFling [androidJvm] open fun dispatchNestedPreFling (p0: Float , p1: Float ): Boolean dispatchNestedPrePerformAccessibilityAction [androidJvm] open fun dispatchNestedPrePerformAccessibilityAction (p0: Int , p1: Bundle ): Boolean dispatchNestedPreScroll [androidJvm] open fun dispatchNestedPreScroll (p0: Int , p1: Int , p2: IntArray ?, p3: IntArray ?): Boolean dispatchNestedScroll [androidJvm] open fun dispatchNestedScroll (p0: Int , p1: Int , p2: Int , p3: Int , p4: IntArray ?): Boolean dispatchPointerCaptureChanged [androidJvm] open override fun dispatchPointerCaptureChanged (p0: Boolean ) dispatchPopulateAccessibilityEvent [androidJvm] open fun dispatchPopulateAccessibilityEvent (p0: AccessibilityEvent ): Boolean dispatchProvideAutofillStructure [androidJvm] open override fun dispatchProvideAutofillStructure (p0: ViewStructure , p1: Int ) dispatchProvideStructure [androidJvm] open override fun dispatchProvideStructure (p0: ViewStructure ) dispatchRestoreInstanceState [androidJvm] open override fun dispatchRestoreInstanceState (p0: SparseArray < Parcelable >) dispatchSaveInstanceState [androidJvm] open override fun dispatchSaveInstanceState (p0: SparseArray < Parcelable >) dispatchScrollCaptureSearch [androidJvm] open override fun dispatchScrollCaptureSearch (p0: Rect , p1: Point , p2: Consumer < ScrollCaptureTarget >) dispatchSetActivated [androidJvm] open override fun dispatchSetActivated (p0: Boolean ) dispatchSetPressed [androidJvm] open override fun dispatchSetPressed (p0: Boolean ) dispatchSetSelected [androidJvm] open override fun dispatchSetSelected (p0: Boolean ) dispatchStartTemporaryDetach [androidJvm] open override fun dispatchStartTemporaryDetach () dispatchThawSelfOnly [androidJvm] open fun dispatchThawSelfOnly (p0: SparseArray < Parcelable >) dispatchTouchEvent [androidJvm] open override fun dispatchTouchEvent (p0: MotionEvent ): Boolean dispatchTrackballEvent [androidJvm] open override fun dispatchTrackballEvent (p0: MotionEvent ): Boolean dispatchUnhandledMove [androidJvm] open override fun dispatchUnhandledMove (p0: View , p1: Int ): Boolean dispatchVisibilityChanged [androidJvm] open override fun dispatchVisibilityChanged (p0: View , p1: Int ) dispatchWindowFocusChanged [androidJvm] open override fun dispatchWindowFocusChanged (p0: Boolean ) dispatchWindowInsetsAnimationEnd [androidJvm] open override fun dispatchWindowInsetsAnimationEnd (p0: WindowInsetsAnimation ) dispatchWindowInsetsAnimationPrepare [androidJvm] open override fun dispatchWindowInsetsAnimationPrepare (p0: WindowInsetsAnimation ) dispatchWindowInsetsAnimationProgress [androidJvm] open override fun dispatchWindowInsetsAnimationProgress (p0: WindowInsets , p1: MutableList < WindowInsetsAnimation >): WindowInsets dispatchWindowInsetsAnimationStart [androidJvm] open override fun dispatchWindowInsetsAnimationStart (p0: WindowInsetsAnimation , p1: WindowInsetsAnimation.Bounds ): WindowInsetsAnimation.Bounds dispatchWindowVisibilityChanged [androidJvm] open override fun dispatchWindowVisibilityChanged (p0: Int ) documentHasImages [androidJvm] open fun documentHasImages (p0: Message ) draw [androidJvm] open fun draw (p0: Canvas ) drawableHotspotChanged [androidJvm] open fun drawableHotspotChanged (p0: Float , p1: Float ) drawableStateChanged [androidJvm] open override fun drawableStateChanged () drawChild [androidJvm] open fun drawChild (p0: Canvas , p1: View , p2: Long ): Boolean endViewTransition [androidJvm] open fun endViewTransition (p0: View ) evaluateJavascript [androidJvm] open fun evaluateJavascript (p0: String , p1: ValueCallback < String >?) findAllAsync [androidJvm] open fun findAllAsync (p0: String ) findFocus [androidJvm] open override fun findFocus (): View findNext [androidJvm] open fun findNext (p0: Boolean ) findViewById [androidJvm] fun < T : View > findViewById (p0: Int ): T findViewsWithText [androidJvm] open override fun findViewsWithText (p0: ArrayList < View >, p1: CharSequence , p2: Int ) findViewWithTag [androidJvm] fun < T : View > findViewWithTag (p0: Any ): T flingScroll [androidJvm] open fun flingScroll (p0: Int , p1: Int ) focusableViewAvailable [androidJvm] open override fun focusableViewAvailable (p0: View ) focusSearch [androidJvm] open fun focusSearch (p0: Int ): View open override fun focusSearch (p0: View , p1: Int ): View forceHasOverlappingRendering [androidJvm] open fun forceHasOverlappingRendering (p0: Boolean ) forceLayout [androidJvm] open fun forceLayout () gatherTransparentRegion [androidJvm] open override fun gatherTransparentRegion (p0: Region ?): Boolean generateDisplayHash [androidJvm] open fun generateDisplayHash (p0: String , p1: Rect ?, p2: Executor , p3: DisplayHashResultCallback ) getAccessibilityClassName [androidJvm] open override fun getAccessibilityClassName (): CharSequence getAccessibilityDelegate [androidJvm] open fun getAccessibilityDelegate (): View.AccessibilityDelegate getAccessibilityLiveRegion [androidJvm] open fun getAccessibilityLiveRegion (): Int getAccessibilityNodeProvider [androidJvm] open override fun getAccessibilityNodeProvider (): AccessibilityNodeProvider getAccessibilityPaneTitle [androidJvm] open fun getAccessibilityPaneTitle (): CharSequence ? getAccessibilityTraversalAfter [androidJvm] open fun getAccessibilityTraversalAfter (): Int getAccessibilityTraversalBefore [androidJvm] open fun getAccessibilityTraversalBefore (): Int getAlpha [androidJvm] open fun getAlpha (): Float getAnimation [androidJvm] open fun getAnimation (): Animation getAnimationMatrix [androidJvm] open fun getAnimationMatrix (): Matrix ? getApplicationWindowToken [androidJvm] open fun getApplicationWindowToken (): IBinder getAttributeResolutionStack [androidJvm] open fun getAttributeResolutionStack (p0: Int ): IntArray getAttributeSourceResourceMap [androidJvm] open fun getAttributeSourceResourceMap (): MutableMap < Int , Int > getAutofillHints [androidJvm] open fun getAutofillHints (): Array < String >? getAutofillId [androidJvm] fun getAutofillId (): AutofillId getAutofillType [androidJvm] open fun getAutofillType (): Int getAutofillValue [androidJvm] open fun getAutofillValue (): AutofillValue ? getBackground [androidJvm] open fun getBackground (): Drawable getBackgroundTintBlendMode [androidJvm] open fun getBackgroundTintBlendMode (): BlendMode ? getBackgroundTintList [androidJvm] open fun getBackgroundTintList (): ColorStateList ? getBackgroundTintMode [androidJvm] open fun getBackgroundTintMode (): PorterDuff.Mode ? getBaseline [androidJvm] open fun getBaseline (): Int getBottom [androidJvm] fun getBottom (): Int getBottomFadingEdgeStrength [androidJvm] open fun getBottomFadingEdgeStrength (): Float getBottomPaddingOffset [androidJvm] open fun getBottomPaddingOffset (): Int getCameraDistance [androidJvm] open fun getCameraDistance (): Float getCertificate [androidJvm] open fun getCertificate (): SslCertificate ? getChildAt [androidJvm] open fun getChildAt (p0: Int ): View getChildCount [androidJvm] open fun getChildCount (): Int getChildDrawingOrder [androidJvm] fun getChildDrawingOrder (p0: Int ): Int open fun getChildDrawingOrder (p0: Int , p1: Int ): Int getChildStaticTransformation [androidJvm] open fun getChildStaticTransformation (p0: View , p1: Transformation ): Boolean getChildVisibleRect [androidJvm] open override fun getChildVisibleRect (p0: View , p1: Rect , p2: Point ): Boolean getClipBounds [androidJvm] open fun getClipBounds (): Rect open fun getClipBounds (p0: Rect ): Boolean getClipChildren [androidJvm] open fun getClipChildren (): Boolean getClipToOutline [androidJvm] fun getClipToOutline (): Boolean getClipToPadding [androidJvm] open fun getClipToPadding (): Boolean getContentCaptureSession [androidJvm] fun getContentCaptureSession (): ContentCaptureSession ? getContentDescription [androidJvm] open fun getContentDescription (): CharSequence getContentHeight [androidJvm] open override fun getContentHeight (): Int getContext [androidJvm] fun getContext (): Context getContextMenuInfo [androidJvm] open fun getContextMenuInfo (): ContextMenu.ContextMenuInfo getCurrentSelectionInfo [androidJvm] fun getCurrentSelectionInfo (callback: ( String ) -> Unit ) getCurrentSelectionRect [androidJvm] fun getCurrentSelectionRect (callback: ( String ) -> Unit ) getDefaultFocusHighlightEnabled [androidJvm] fun getDefaultFocusHighlightEnabled (): Boolean getDescendantFocusability [androidJvm] open fun getDescendantFocusability (): Int getDisplay [androidJvm] open fun getDisplay (): Display getDrawableState [androidJvm] fun getDrawableState (): IntArray getDrawingRect [androidJvm] open fun getDrawingRect (p0: Rect ) getDrawingTime [androidJvm] open fun getDrawingTime (): Long getElevation [androidJvm] open fun getElevation (): Float getExplicitStyle [androidJvm] open fun getExplicitStyle (): Int getFavicon [androidJvm] open fun getFavicon (): Bitmap ? getFilterTouchesWhenObscured [androidJvm] open fun getFilterTouchesWhenObscured (): Boolean getFitsSystemWindows [androidJvm] open fun getFitsSystemWindows (): Boolean getFocusable [androidJvm] open fun getFocusable (): Int getFocusables [androidJvm] open fun getFocusables (p0: Int ): ArrayList < View > getFocusedChild [androidJvm] open fun getFocusedChild (): View getFocusedRect [androidJvm] open fun getFocusedRect (p0: Rect ) getForeground [androidJvm] open fun getForeground (): Drawable getForegroundGravity [androidJvm] open fun getForegroundGravity (): Int getForegroundTintBlendMode [androidJvm] open fun getForegroundTintBlendMode (): BlendMode ? getForegroundTintList [androidJvm] open fun getForegroundTintList (): ColorStateList ? getForegroundTintMode [androidJvm] open fun getForegroundTintMode (): PorterDuff.Mode ? getGlobalVisibleRect [androidJvm] fun getGlobalVisibleRect (p0: Rect ): Boolean open fun getGlobalVisibleRect (p0: Rect , p1: Point ): Boolean getHandler [androidJvm] open override fun getHandler (): Handler getHasOverlappingRendering [androidJvm] fun getHasOverlappingRendering (): Boolean getHeight [androidJvm] fun getHeight (): Int getHitRect [androidJvm] open fun getHitRect (p0: Rect ) getHitTestResult [androidJvm] open fun getHitTestResult (): WebView.HitTestResult getHorizontalFadingEdgeLength [androidJvm] open fun getHorizontalFadingEdgeLength (): Int getHorizontalScrollbarHeight [androidJvm] open fun getHorizontalScrollbarHeight (): Int getHorizontalScrollbarThumbDrawable [androidJvm] open fun getHorizontalScrollbarThumbDrawable (): Drawable ? getHorizontalScrollbarTrackDrawable [androidJvm] open fun getHorizontalScrollbarTrackDrawable (): Drawable ? getId [androidJvm] open fun getId (): Int getImportantForAccessibility [androidJvm] open fun getImportantForAccessibility (): Int getImportantForAutofill [androidJvm] open fun getImportantForAutofill (): Int getImportantForContentCapture [androidJvm] open fun getImportantForContentCapture (): Int getKeepScreenOn [androidJvm] open fun getKeepScreenOn (): Boolean getKeyDispatcherState [androidJvm] open fun getKeyDispatcherState (): KeyEvent.DispatcherState getLabelFor [androidJvm] open fun getLabelFor (): Int getLayerType [androidJvm] open fun getLayerType (): Int getLayoutAnimation [androidJvm] open fun getLayoutAnimation (): LayoutAnimationController getLayoutAnimationListener [androidJvm] open fun getLayoutAnimationListener (): Animation.AnimationListener getLayoutDirection [androidJvm] open fun getLayoutDirection (): Int getLayoutMode [androidJvm] open fun getLayoutMode (): Int getLayoutParams [androidJvm] open fun getLayoutParams (): ViewGroup.LayoutParams getLayoutTransition [androidJvm] open fun getLayoutTransition (): LayoutTransition getLeft [androidJvm] fun getLeft (): Int getLeftFadingEdgeStrength [androidJvm] open fun getLeftFadingEdgeStrength (): Float getLeftPaddingOffset [androidJvm] open fun getLeftPaddingOffset (): Int getLocalVisibleRect [androidJvm] fun getLocalVisibleRect (p0: Rect ): Boolean getLocationInSurface [androidJvm] open fun getLocationInSurface (p0: IntArray ) getLocationInWindow [androidJvm] open fun getLocationInWindow (p0: IntArray ) getLocationOnScreen [androidJvm] open fun getLocationOnScreen (p0: IntArray ) getMatrix [androidJvm] open fun getMatrix (): Matrix getMeasuredHeight [androidJvm] fun getMeasuredHeight (): Int getMeasuredHeightAndState [androidJvm] fun getMeasuredHeightAndState (): Int getMeasuredState [androidJvm] fun getMeasuredState (): Int getMeasuredWidth [androidJvm] fun getMeasuredWidth (): Int getMeasuredWidthAndState [androidJvm] fun getMeasuredWidthAndState (): Int getMinimumHeight [androidJvm] open fun getMinimumHeight (): Int getMinimumWidth [androidJvm] open fun getMinimumWidth (): Int getNestedScrollAxes [androidJvm] open fun getNestedScrollAxes (): Int getNextClusterForwardId [androidJvm] open fun getNextClusterForwardId (): Int getNextFocusDownId [androidJvm] open fun getNextFocusDownId (): Int getNextFocusForwardId [androidJvm] open fun getNextFocusForwardId (): Int getNextFocusLeftId [androidJvm] open fun getNextFocusLeftId (): Int getNextFocusRightId [androidJvm] open fun getNextFocusRightId (): Int getNextFocusUpId [androidJvm] open fun getNextFocusUpId (): Int getOnFocusChangeListener [androidJvm] open fun getOnFocusChangeListener (): View.OnFocusChangeListener getOriginalUrl [androidJvm] open fun getOriginalUrl (): String ? getOutlineAmbientShadowColor [androidJvm] open fun getOutlineAmbientShadowColor (): Int getOutlineProvider [androidJvm] open fun getOutlineProvider (): ViewOutlineProvider getOutlineSpotShadowColor [androidJvm] open fun getOutlineSpotShadowColor (): Int getOverlay [androidJvm] open override fun getOverlay (): ViewGroupOverlay getOverScrollMode [androidJvm] open fun getOverScrollMode (): Int getPaddingBottom [androidJvm] open fun getPaddingBottom (): Int getPaddingEnd [androidJvm] open fun getPaddingEnd (): Int getPaddingLeft [androidJvm] open fun getPaddingLeft (): Int getPaddingRight [androidJvm] open fun getPaddingRight (): Int getPaddingStart [androidJvm] open fun getPaddingStart (): Int getPaddingTop [androidJvm] open fun getPaddingTop (): Int getParent [androidJvm] fun getParent (): ViewParent getParentForAccessibility [androidJvm] open fun getParentForAccessibility (): ViewParent getPivotX [androidJvm] open fun getPivotX (): Float getPivotY [androidJvm] open fun getPivotY (): Float getPointerIcon [androidJvm] open fun getPointerIcon (): PointerIcon getProgress [androidJvm] open fun getProgress (): Int getReceiveContentMimeTypes [androidJvm] open fun getReceiveContentMimeTypes (): Array < String >? getRendererPriorityWaivedWhenNotVisible [androidJvm] open fun getRendererPriorityWaivedWhenNotVisible (): Boolean getRendererRequestedPriority [androidJvm] open fun getRendererRequestedPriority (): Int getResources [androidJvm] open fun getResources (): Resources getRevealOnFocusHint [androidJvm] fun getRevealOnFocusHint (): Boolean getRight [androidJvm] fun getRight (): Int getRightFadingEdgeStrength [androidJvm] open fun getRightFadingEdgeStrength (): Float getRightPaddingOffset [androidJvm] open fun getRightPaddingOffset (): Int getRootSurfaceControl [androidJvm] open fun getRootSurfaceControl (): AttachedSurfaceControl ? getRootView [androidJvm] open fun getRootView (): View getRootWindowInsets [androidJvm] open fun getRootWindowInsets (): WindowInsets getRotation [androidJvm] open fun getRotation (): Float getRotationX [androidJvm] open fun getRotationX (): Float getRotationY [androidJvm] open fun getRotationY (): Float getScaleX [androidJvm] open fun getScaleX (): Float getScaleY [androidJvm] open fun getScaleY (): Float getScrollBarDefaultDelayBeforeFade [androidJvm] open fun getScrollBarDefaultDelayBeforeFade (): Int getScrollBarFadeDuration [androidJvm] open fun getScrollBarFadeDuration (): Int getScrollBarSize [androidJvm] open fun getScrollBarSize (): Int getScrollBarStyle [androidJvm] open fun getScrollBarStyle (): Int getScrollCaptureHint [androidJvm] open fun getScrollCaptureHint (): Int getScrollIndicators [androidJvm] open fun getScrollIndicators (): Int getScrollX [androidJvm] fun getScrollX (): Int getScrollY [androidJvm] fun getScrollY (): Int getSettings [androidJvm] open fun getSettings (): WebSettings getSolidColor [androidJvm] open fun getSolidColor (): Int getSourceLayoutResId [androidJvm] open fun getSourceLayoutResId (): Int getStateDescription [androidJvm] fun getStateDescription (): CharSequence ? getStateListAnimator [androidJvm] open fun getStateListAnimator (): StateListAnimator getSuggestedMinimumHeight [androidJvm] open fun getSuggestedMinimumHeight (): Int getSuggestedMinimumWidth [androidJvm] open fun getSuggestedMinimumWidth (): Int getSystemGestureExclusionRects [androidJvm] open fun getSystemGestureExclusionRects (): MutableList < Rect > getTag [androidJvm] open fun getTag (): Any open fun getTag (p0: Int ): Any getTextAlignment [androidJvm] open fun getTextAlignment (): Int getTextClassifier [androidJvm] open fun getTextClassifier (): TextClassifier getTextDirection [androidJvm] open fun getTextDirection (): Int getTitle [androidJvm] open fun getTitle (): String ? getTooltipText [androidJvm] open fun getTooltipText (): CharSequence ? getTop [androidJvm] fun getTop (): Int getTopFadingEdgeStrength [androidJvm] open fun getTopFadingEdgeStrength (): Float getTopPaddingOffset [androidJvm] open fun getTopPaddingOffset (): Int getTouchables [androidJvm] open fun getTouchables (): ArrayList < View > getTouchDelegate [androidJvm] open fun getTouchDelegate (): TouchDelegate getTouchscreenBlocksFocus [androidJvm] open fun getTouchscreenBlocksFocus (): Boolean getTransitionAlpha [androidJvm] open fun getTransitionAlpha (): Float getTransitionName [androidJvm] open fun getTransitionName (): String getTranslationX [androidJvm] open fun getTranslationX (): Float getTranslationY [androidJvm] open fun getTranslationY (): Float getTranslationZ [androidJvm] open fun getTranslationZ (): Float getUniqueDrawingId [androidJvm] open fun getUniqueDrawingId (): Long getUrl [androidJvm] open fun getUrl (): String ? getVerticalFadingEdgeLength [androidJvm] open fun getVerticalFadingEdgeLength (): Int getVerticalScrollbarPosition [androidJvm] open fun getVerticalScrollbarPosition (): Int getVerticalScrollbarThumbDrawable [androidJvm] open fun getVerticalScrollbarThumbDrawable (): Drawable ? getVerticalScrollbarTrackDrawable [androidJvm] open fun getVerticalScrollbarTrackDrawable (): Drawable ? getVerticalScrollbarWidth [androidJvm] open fun getVerticalScrollbarWidth (): Int getViewportWidth [androidJvm] fun getViewportWidth (): Int getViewTranslationResponse [androidJvm] open fun getViewTranslationResponse (): ViewTranslationResponse ? getViewTreeObserver [androidJvm] open fun getViewTreeObserver (): ViewTreeObserver getVisibility [androidJvm] open fun getVisibility (): Int getWebChromeClient [androidJvm] open fun getWebChromeClient (): WebChromeClient ? getWebViewClient [androidJvm] open fun getWebViewClient (): WebViewClient getWebViewLooper [androidJvm] open fun getWebViewLooper (): Looper getWebViewRenderProcess [androidJvm] open fun getWebViewRenderProcess (): WebViewRenderProcess ? getWebViewRenderProcessClient [androidJvm] open fun getWebViewRenderProcessClient (): WebViewRenderProcessClient ? getWidth [androidJvm] fun getWidth (): Int getWindowAttachCount [androidJvm] open fun getWindowAttachCount (): Int getWindowId [androidJvm] open fun getWindowId (): WindowId getWindowInsetsController [androidJvm] open fun getWindowInsetsController (): WindowInsetsController ? getWindowToken [androidJvm] open fun getWindowToken (): IBinder getWindowVisibility [androidJvm] open fun getWindowVisibility (): Int getWindowVisibleDisplayFrame [androidJvm] open fun getWindowVisibleDisplayFrame (p0: Rect ) getX [androidJvm] open fun getX (): Float getY [androidJvm] open fun getY (): Float getZ [androidJvm] open fun getZ (): Float goBack [androidJvm] open fun goBack () goBackOrForward [androidJvm] open fun goBackOrForward (p0: Int ) goForward [androidJvm] open fun goForward () hasExplicitFocusable [androidJvm] open fun hasExplicitFocusable (): Boolean hasFocus [androidJvm] open override fun hasFocus (): Boolean hasFocusable [androidJvm] open fun hasFocusable (): Boolean hasNestedScrollingParent [androidJvm] open fun hasNestedScrollingParent (): Boolean hasOnClickListeners [androidJvm] open fun hasOnClickListeners (): Boolean hasOnLongClickListeners [androidJvm] open fun hasOnLongClickListeners (): Boolean hasOverlappingRendering [androidJvm] open fun hasOverlappingRendering (): Boolean hasPointerCapture [androidJvm] open fun hasPointerCapture (): Boolean hasTransientState [androidJvm] open override fun hasTransientState (): Boolean hasWindowFocus [androidJvm] open fun hasWindowFocus (): Boolean highlightActivated [androidJvm] fun highlightActivated (id: String ) highlightAnnotationMarkActivated [androidJvm] fun highlightAnnotationMarkActivated (id: String ) indexOfChild [androidJvm] open fun indexOfChild (p0: View ): Int invalidate [androidJvm] open fun invalidate () invalidateDrawable [androidJvm] open override fun invalidateDrawable (p0: Drawable ) invalidateOutline [androidJvm] open fun invalidateOutline () invokeZoomPicker [androidJvm] open fun invokeZoomPicker () isAccessibilityFocused [androidJvm] open fun isAccessibilityFocused (): Boolean isAccessibilityHeading [androidJvm] open fun isAccessibilityHeading (): Boolean isActivated [androidJvm] open fun isActivated (): Boolean isAttachedToWindow [androidJvm] open fun isAttachedToWindow (): Boolean isChildrenDrawingOrderEnabled [androidJvm] open fun isChildrenDrawingOrderEnabled (): Boolean isClickable [androidJvm] open fun isClickable (): Boolean isContextClickable [androidJvm] open fun isContextClickable (): Boolean isDirty [androidJvm] open fun isDirty (): Boolean isDuplicateParentStateEnabled [androidJvm] open fun isDuplicateParentStateEnabled (): Boolean isEnabled [androidJvm] open fun isEnabled (): Boolean isFocusable [androidJvm] fun isFocusable (): Boolean isFocusableInTouchMode [androidJvm] fun isFocusableInTouchMode (): Boolean isFocused [androidJvm] open fun isFocused (): Boolean isFocusedByDefault [androidJvm] fun isFocusedByDefault (): Boolean isForceDarkAllowed [androidJvm] open fun isForceDarkAllowed (): Boolean isHapticFeedbackEnabled [androidJvm] open fun isHapticFeedbackEnabled (): Boolean isHardwareAccelerated [androidJvm] open fun isHardwareAccelerated (): Boolean isHorizontalFadingEdgeEnabled [androidJvm] open fun isHorizontalFadingEdgeEnabled (): Boolean isHorizontalScrollBarEnabled [androidJvm] open fun isHorizontalScrollBarEnabled (): Boolean isHovered [androidJvm] open fun isHovered (): Boolean isImportantForAccessibility [androidJvm] open fun isImportantForAccessibility (): Boolean isImportantForAutofill [androidJvm] fun isImportantForAutofill (): Boolean isImportantForContentCapture [androidJvm] fun isImportantForContentCapture (): Boolean isInEditMode [androidJvm] open fun isInEditMode (): Boolean isInLayout [androidJvm] open fun isInLayout (): Boolean isInTouchMode [androidJvm] open fun isInTouchMode (): Boolean isKeyboardNavigationCluster [androidJvm] fun isKeyboardNavigationCluster (): Boolean isLaidOut [androidJvm] open fun isLaidOut (): Boolean isLayoutDirectionResolved [androidJvm] open fun isLayoutDirectionResolved (): Boolean isLayoutRequested [androidJvm] open fun isLayoutRequested (): Boolean isLayoutSuppressed [androidJvm] open fun isLayoutSuppressed (): Boolean isLongClickable [androidJvm] open fun isLongClickable (): Boolean isMotionEventSplittingEnabled [androidJvm] open fun isMotionEventSplittingEnabled (): Boolean isNestedScrollingEnabled [androidJvm] open fun isNestedScrollingEnabled (): Boolean isOpaque [androidJvm] open fun isOpaque (): Boolean isPaddingOffsetRequired [androidJvm] open fun isPaddingOffsetRequired (): Boolean isPaddingRelative [androidJvm] open fun isPaddingRelative (): Boolean isPivotSet [androidJvm] open fun isPivotSet (): Boolean isPressed [androidJvm] open fun isPressed (): Boolean isPrivateBrowsingEnabled [androidJvm] open fun isPrivateBrowsingEnabled (): Boolean isSaveEnabled [androidJvm] open fun isSaveEnabled (): Boolean isSaveFromParentEnabled [androidJvm] open fun isSaveFromParentEnabled (): Boolean isScreenReaderFocusable [androidJvm] open fun isScreenReaderFocusable (): Boolean isScrollbarFadingEnabled [androidJvm] open fun isScrollbarFadingEnabled (): Boolean isScrollContainer [androidJvm] open fun isScrollContainer (): Boolean isSelected [androidJvm] open fun isSelected (): Boolean isShowingLayoutBounds [androidJvm] fun isShowingLayoutBounds (): Boolean isShown [androidJvm] open fun isShown (): Boolean isSoundEffectsEnabled [androidJvm] open fun isSoundEffectsEnabled (): Boolean isTemporarilyDetached [androidJvm] fun isTemporarilyDetached (): Boolean isTextAlignmentResolved [androidJvm] open fun isTextAlignmentResolved (): Boolean isTextDirectionResolved [androidJvm] open fun isTextDirectionResolved (): Boolean isTransitionGroup [androidJvm] open fun isTransitionGroup (): Boolean isVerticalFadingEdgeEnabled [androidJvm] open fun isVerticalFadingEdgeEnabled (): Boolean isVerticalScrollBarEnabled [androidJvm] open fun isVerticalScrollBarEnabled (): Boolean isVisibleToUserForAutofill [androidJvm] open override fun isVisibleToUserForAutofill (p0: Int ): Boolean jumpDrawablesToCurrentState [androidJvm] open override fun jumpDrawablesToCurrentState () keyboardNavigationClusterSearch [androidJvm] open fun keyboardNavigationClusterSearch (p0: View , p1: Int ): View layout [androidJvm] override fun layout (p0: Int , p1: Int , p2: Int , p3: Int ) loadData [androidJvm] open fun loadData (p0: String , p1: String ?, p2: String ?) loadDataWithBaseURL [androidJvm] open fun loadDataWithBaseURL (p0: String ?, p1: String , p2: String ?, p3: String ?, p4: String ?) loadUrl [androidJvm] open fun loadUrl (p0: String ) open fun loadUrl (p0: String , p1: MutableMap < String , String >) log [androidJvm] fun log (message: String ) logError [androidJvm] fun logError (message: String , filename: String , line: Int ) measure [androidJvm] fun measure (p0: Int , p1: Int ) measureChild [androidJvm] open fun measureChild (p0: View , p1: Int , p2: Int ) measureChildren [androidJvm] open fun measureChildren (p0: Int , p1: Int ) measureChildWithMargins [androidJvm] open fun measureChildWithMargins (p0: View , p1: Int , p2: Int , p3: Int , p4: Int ) notifySubtreeAccessibilityStateChanged [androidJvm] open override fun notifySubtreeAccessibilityStateChanged (p0: View , p1: View , p2: Int ) offsetDescendantRectToMyCoords [androidJvm] fun offsetDescendantRectToMyCoords (p0: View , p1: Rect ) offsetLeftAndRight [androidJvm] open fun offsetLeftAndRight (p0: Int ) offsetRectIntoDescendantCoords [androidJvm] fun offsetRectIntoDescendantCoords (p0: View , p1: Rect ) offsetTopAndBottom [androidJvm] open fun offsetTopAndBottom (p0: Int ) onAnimationEnd [androidJvm] open fun onAnimationEnd () onAnimationStart [androidJvm] open fun onAnimationStart () onApplyWindowInsets [androidJvm] open override fun onApplyWindowInsets (p0: WindowInsets ): WindowInsets onCancelPendingInputEvents [androidJvm] open fun onCancelPendingInputEvents () onCapturedPointerEvent [androidJvm] open fun onCapturedPointerEvent (p0: MotionEvent ): Boolean onCheckIsTextEditor [androidJvm] open override fun onCheckIsTextEditor (): Boolean onConfigurationChanged [androidJvm] open override fun onConfigurationChanged (p0: Configuration ) onCreateContextMenu [androidJvm] open fun onCreateContextMenu (p0: ContextMenu ) onCreateDrawableState [androidJvm] open override fun onCreateDrawableState (p0: Int ): IntArray onCreateInputConnection [androidJvm] open override fun onCreateInputConnection (p0: EditorInfo ): InputConnection onCreateViewTranslationRequest [androidJvm] open fun onCreateViewTranslationRequest (p0: IntArray , p1: Consumer < ViewTranslationRequest >) onCreateVirtualViewTranslationRequests [androidJvm] open override fun onCreateVirtualViewTranslationRequests (p0: LongArray , p1: IntArray , p2: Consumer < ViewTranslationRequest >) onDecorationActivated [androidJvm] fun onDecorationActivated (eventJson: String ): Boolean Called from the JS code when a tap on a decoration is detected. onDescendantInvalidated [androidJvm] open override fun onDescendantInvalidated (p0: View , p1: View ) onDisplayHint [androidJvm] open fun onDisplayHint (p0: Int ) onDragEvent [androidJvm] open override fun onDragEvent (p0: DragEvent ): Boolean onDraw [androidJvm] open override fun onDraw (p0: Canvas ) onDrawForeground [androidJvm] open fun onDrawForeground (p0: Canvas ) onDrawScrollBars [androidJvm] fun onDrawScrollBars (p0: Canvas ) onFilterTouchEventForSecurity [androidJvm] open fun onFilterTouchEventForSecurity (p0: MotionEvent ): Boolean onFinishInflate [androidJvm] open fun onFinishInflate () onFinishTemporaryDetach [androidJvm] open override fun onFinishTemporaryDetach () onFocusChanged [androidJvm] open override fun onFocusChanged (p0: Boolean , p1: Int , p2: Rect ?) onGenericMotionEvent [androidJvm] open override fun onGenericMotionEvent (p0: MotionEvent ): Boolean onHoverChanged [androidJvm] open fun onHoverChanged (p0: Boolean ) onHoverEvent [androidJvm] open override fun onHoverEvent (p0: MotionEvent ): Boolean onInitializeAccessibilityEvent [androidJvm] open fun onInitializeAccessibilityEvent (p0: AccessibilityEvent ) onInitializeAccessibilityNodeInfo [androidJvm] open fun onInitializeAccessibilityNodeInfo (p0: AccessibilityNodeInfo ) onInterceptHoverEvent [androidJvm] open fun onInterceptHoverEvent (p0: MotionEvent ): Boolean onInterceptTouchEvent [androidJvm] open fun onInterceptTouchEvent (p0: MotionEvent ): Boolean onKeyDown [androidJvm] open override fun onKeyDown (p0: Int , p1: KeyEvent ): Boolean onKeyLongPress [androidJvm] open override fun onKeyLongPress (p0: Int , p1: KeyEvent ): Boolean onKeyMultiple [androidJvm] open override fun onKeyMultiple (p0: Int , p1: Int , p2: KeyEvent ): Boolean onKeyPreIme [androidJvm] open fun onKeyPreIme (p0: Int , p1: KeyEvent ): Boolean onKeyShortcut [androidJvm] open fun onKeyShortcut (p0: Int , p1: KeyEvent ): Boolean onKeyUp [androidJvm] open override fun onKeyUp (p0: Int , p1: KeyEvent ): Boolean onMeasure [androidJvm] open override fun onMeasure (p0: Int , p1: Int ) onNestedFling [androidJvm] open override fun onNestedFling (p0: View , p1: Float , p2: Float , p3: Boolean ): Boolean onNestedPreFling [androidJvm] open override fun onNestedPreFling (p0: View , p1: Float , p2: Float ): Boolean onNestedPrePerformAccessibilityAction [androidJvm] open override fun onNestedPrePerformAccessibilityAction (p0: View , p1: Int , p2: Bundle ): Boolean onNestedPreScroll [androidJvm] open override fun onNestedPreScroll (p0: View , p1: Int , p2: Int , p3: IntArray ) onNestedScroll [androidJvm] open override fun onNestedScroll (p0: View , p1: Int , p2: Int , p3: Int , p4: Int ) onNestedScrollAccepted [androidJvm] open override fun onNestedScrollAccepted (p0: View , p1: View , p2: Int ) onPause [androidJvm] open fun onPause () onPointerCaptureChange [androidJvm] open fun onPointerCaptureChange (p0: Boolean ) onPopulateAccessibilityEvent [androidJvm] open fun onPopulateAccessibilityEvent (p0: AccessibilityEvent ) onProvideAutofillStructure [androidJvm] open fun onProvideAutofillStructure (p0: ViewStructure , p1: Int ) onProvideAutofillVirtualStructure [androidJvm] open override fun onProvideAutofillVirtualStructure (p0: ViewStructure , p1: Int ) onProvideContentCaptureStructure [androidJvm] open override fun onProvideContentCaptureStructure (p0: ViewStructure , p1: Int ) onProvideStructure [androidJvm] open fun onProvideStructure (p0: ViewStructure ) onProvideVirtualStructure [androidJvm] open override fun onProvideVirtualStructure (p0: ViewStructure ) onReceiveContent [androidJvm] open fun onReceiveContent (p0: ContentInfo ): ContentInfo ? onRequestFocusInDescendants [androidJvm] open fun onRequestFocusInDescendants (p0: Int , p1: Rect ): Boolean onRequestSendAccessibilityEvent [androidJvm] open fun onRequestSendAccessibilityEvent (p0: View , p1: AccessibilityEvent ): Boolean onResolvePointerIcon [androidJvm] open override fun onResolvePointerIcon (p0: MotionEvent , p1: Int ): PointerIcon onRestoreInstanceState [androidJvm] open fun onRestoreInstanceState (p0: Parcelable ) onResume [androidJvm] open fun onResume () onRtlPropertiesChanged [androidJvm] open fun onRtlPropertiesChanged (p0: Int ) onSaveInstanceState [androidJvm] open fun onSaveInstanceState (): Parcelable ? onScreenStateChanged [androidJvm] open fun onScreenStateChanged (p0: Int ) onScrollCaptureSearch [androidJvm] open fun onScrollCaptureSearch (p0: Rect , p1: Point , p2: Consumer < ScrollCaptureTarget >) onSetAlpha [androidJvm] open fun onSetAlpha (p0: Int ): Boolean onStartNestedScroll [androidJvm] open override fun onStartNestedScroll (p0: View , p1: View , p2: Int ): Boolean onStartTemporaryDetach [androidJvm] open override fun onStartTemporaryDetach () onStopNestedScroll [androidJvm] open override fun onStopNestedScroll (p0: View ) onTap [androidJvm] fun onTap (eventJson: String ): Boolean Called from the JS code when a tap is detected. If the JS indicates the tap is being handled within the web view, don't take action, onTouchEvent [androidJvm] open override fun onTouchEvent (ev: MotionEvent ): Boolean onTrackballEvent [androidJvm] open override fun onTrackballEvent (p0: MotionEvent ): Boolean onViewAdded [androidJvm] open fun onViewAdded (p0: View ) onViewRemoved [androidJvm] open fun onViewRemoved (p0: View ) onViewTranslationResponse [androidJvm] open fun onViewTranslationResponse (p0: ViewTranslationResponse ) onVirtualViewTranslationResponses [androidJvm] open override fun onVirtualViewTranslationResponses (p0: LongSparseArray < ViewTranslationResponse >) onVisibilityAggregated [androidJvm] open fun onVisibilityAggregated (p0: Boolean ) onVisibilityChanged [androidJvm] open override fun onVisibilityChanged (p0: View , p1: Int ) onWindowFocusChanged [androidJvm] open override fun onWindowFocusChanged (p0: Boolean ) onWindowVisibilityChanged [androidJvm] open override fun onWindowVisibilityChanged (p0: Int ) overScrollBy [androidJvm] open fun overScrollBy (p0: Int , p1: Int , p2: Int , p3: Int , p4: Int , p5: Int , p6: Int , p7: Int , p8: Boolean ): Boolean pageDown [androidJvm] open fun pageDown (p0: Boolean ): Boolean pageUp [androidJvm] open fun pageUp (p0: Boolean ): Boolean pauseTimers [androidJvm] open fun pauseTimers () performAccessibilityAction [androidJvm] open fun performAccessibilityAction (p0: Int , p1: Bundle ): Boolean performClick [androidJvm] open fun performClick (): Boolean performContextClick [androidJvm] open fun performContextClick (): Boolean open fun performContextClick (p0: Float , p1: Float ): Boolean performHapticFeedback [androidJvm] open fun performHapticFeedback (p0: Int ): Boolean open fun performHapticFeedback (p0: Int , p1: Int ): Boolean performLongClick [androidJvm] open override fun performLongClick (): Boolean open fun performLongClick (p0: Float , p1: Float ): Boolean performReceiveContent [androidJvm] open fun performReceiveContent (p0: ContentInfo ): ContentInfo ? playSoundEffect [androidJvm] open fun playSoundEffect (p0: Int ) post [androidJvm] open fun post (p0: Runnable ): Boolean postDelayed [androidJvm] open fun postDelayed (p0: Runnable , p1: Long ): Boolean postInvalidate [androidJvm] open fun postInvalidate () open fun postInvalidate (p0: Int , p1: Int , p2: Int , p3: Int ) postInvalidateDelayed [androidJvm] open fun postInvalidateDelayed (p0: Long ) open fun postInvalidateDelayed (p0: Long , p1: Int , p2: Int , p3: Int , p4: Int ) postInvalidateOnAnimation [androidJvm] open fun postInvalidateOnAnimation () open fun postInvalidateOnAnimation (p0: Int , p1: Int , p2: Int , p3: Int ) postOnAnimation [androidJvm] open fun postOnAnimation (p0: Runnable ) postOnAnimationDelayed [androidJvm] open fun postOnAnimationDelayed (p0: Runnable , p1: Long ) postUrl [androidJvm] open fun postUrl (p0: String , p1: ByteArray ) postVisualStateCallback [androidJvm] open fun postVisualStateCallback (p0: Long , p1: WebView.VisualStateCallback ) postWebMessage [androidJvm] open fun postWebMessage (p0: WebMessage , p1: Uri ) recomputeViewAttributes [androidJvm] open override fun recomputeViewAttributes (p0: View ) rectangleForHighlightWithID [androidJvm] fun rectangleForHighlightWithID (id: String , callback: ( String ) -> Unit ) refreshDrawableState [androidJvm] open fun refreshDrawableState () releasePointerCapture [androidJvm] open fun releasePointerCapture () reload [androidJvm] open fun reload () removeAllViews [androidJvm] open fun removeAllViews () removeAllViewsInLayout [androidJvm] open fun removeAllViewsInLayout () removeCallbacks [androidJvm] open fun removeCallbacks (p0: Runnable ): Boolean removeDetachedView [androidJvm] open fun removeDetachedView (p0: View , p1: Boolean ) removeJavascriptInterface [androidJvm] open fun removeJavascriptInterface (p0: String ) removeOnAttachStateChangeListener [androidJvm] open fun removeOnAttachStateChangeListener (p0: View.OnAttachStateChangeListener ) removeOnLayoutChangeListener [androidJvm] open fun removeOnLayoutChangeListener (p0: View.OnLayoutChangeListener ) removeOnUnhandledKeyEventListener [androidJvm] open fun removeOnUnhandledKeyEventListener (p0: View.OnUnhandledKeyEventListener ) removeProperty [androidJvm] fun removeProperty (key: String ) removeView [androidJvm] open override fun removeView (p0: View ) removeViewAt [androidJvm] open fun removeViewAt (p0: Int ) removeViewInLayout [androidJvm] open fun removeViewInLayout (p0: View ) removeViews [androidJvm] open fun removeViews (p0: Int , p1: Int ) removeViewsInLayout [androidJvm] open fun removeViewsInLayout (p0: Int , p1: Int ) requestApplyInsets [androidJvm] open fun requestApplyInsets () requestChildFocus [androidJvm] open override fun requestChildFocus (p0: View , p1: View ) requestChildRectangleOnScreen [androidJvm] open override fun requestChildRectangleOnScreen (p0: View , p1: Rect , p2: Boolean ): Boolean requestDisallowInterceptTouchEvent [androidJvm] open override fun requestDisallowInterceptTouchEvent (p0: Boolean ) requestFocus [androidJvm] fun requestFocus (): Boolean fun requestFocus (p0: Int ): Boolean open override fun requestFocus (p0: Int , p1: Rect ): Boolean requestFocusFromTouch [androidJvm] fun requestFocusFromTouch (): Boolean requestFocusNodeHref [androidJvm] open fun requestFocusNodeHref (p0: Message ?) requestImageRef [androidJvm] open fun requestImageRef (p0: Message ) requestLayout [androidJvm] open fun requestLayout () requestPointerCapture [androidJvm] open fun requestPointerCapture () requestRectangleOnScreen [androidJvm] open fun requestRectangleOnScreen (p0: Rect ): Boolean open fun requestRectangleOnScreen (p0: Rect , p1: Boolean ): Boolean requestSendAccessibilityEvent [androidJvm] open override fun requestSendAccessibilityEvent (p0: View , p1: AccessibilityEvent ): Boolean requestTransparentRegion [androidJvm] open override fun requestTransparentRegion (p0: View ) requestUnbufferedDispatch [androidJvm] fun requestUnbufferedDispatch (p0: MotionEvent ) fun requestUnbufferedDispatch (p0: Int ) requireViewById [androidJvm] fun < T : View > requireViewById (p0: Int ): T resetPivot [androidJvm] open fun resetPivot () restoreDefaultFocus [androidJvm] open override fun restoreDefaultFocus (): Boolean restoreHierarchyState [androidJvm] open fun restoreHierarchyState (p0: SparseArray < Parcelable >) restoreState [androidJvm] open fun restoreState (p0: Bundle ): WebBackForwardList ? resumeTimers [androidJvm] open fun resumeTimers () runJavaScript [androidJvm] fun runJavaScript (javascript: String , callback: ( String ) -> Unit ? = null) saveAttributeDataForStyleable [androidJvm] fun saveAttributeDataForStyleable (p0: Context , p1: IntArray , p2: AttributeSet ?, p3: TypedArray , p4: Int , p5: Int ) saveHierarchyState [androidJvm] open fun saveHierarchyState (p0: SparseArray < Parcelable >) saveState [androidJvm] open fun saveState (p0: Bundle ): WebBackForwardList ? saveWebArchive [androidJvm] open fun saveWebArchive (p0: String ) open fun saveWebArchive (p0: String , p1: Boolean , p2: ValueCallback < String >?) scheduleDrawable [androidJvm] open override fun scheduleDrawable (p0: Drawable , p1: Runnable , p2: Long ) scheduleLayoutAnimation [androidJvm] open fun scheduleLayoutAnimation () scrollBy [androidJvm] open fun scrollBy (p0: Int , p1: Int ) scrollLeft [androidJvm] open override fun scrollLeft (animated: Boolean ) scrollRight [androidJvm] open override fun scrollRight (animated: Boolean ) scrollTo [androidJvm] open fun scrollTo (p0: Int , p1: Int ) scrollToEnd [androidJvm] fun scrollToEnd () scrollToId [androidJvm] suspend fun scrollToId (htmlId: String ): Boolean scrollToPosition [androidJvm] fun scrollToPosition (progression: Double ) scrollToStart [androidJvm] fun scrollToStart () scrollToText [androidJvm] suspend fun scrollToText (text: Locator.Text ): Boolean sendAccessibilityEvent [androidJvm] open override fun sendAccessibilityEvent (p0: Int ) sendAccessibilityEventUnchecked [androidJvm] open override fun sendAccessibilityEventUnchecked (p0: AccessibilityEvent ) setAccessibilityDelegate [androidJvm] open fun setAccessibilityDelegate (p0: View.AccessibilityDelegate ?) setAccessibilityHeading [androidJvm] open fun setAccessibilityHeading (p0: Boolean ) setAccessibilityLiveRegion [androidJvm] open fun setAccessibilityLiveRegion (p0: Int ) setAccessibilityPaneTitle [androidJvm] open fun setAccessibilityPaneTitle (p0: CharSequence ?) setAccessibilityTraversalAfter [androidJvm] open fun setAccessibilityTraversalAfter (p0: Int ) setAccessibilityTraversalBefore [androidJvm] open fun setAccessibilityTraversalBefore (p0: Int ) setActivated [androidJvm] open fun setActivated (p0: Boolean ) setAddStatesFromChildren [androidJvm] open fun setAddStatesFromChildren (p0: Boolean ) setAllowClickWhenDisabled [androidJvm] open fun setAllowClickWhenDisabled (p0: Boolean ) setAlpha [androidJvm] open fun setAlpha (p0: Float ) setAnimation [androidJvm] open fun setAnimation (p0: Animation ) setAnimationMatrix [androidJvm] open fun setAnimationMatrix (p0: Matrix ?) setAutofillHints [androidJvm] open fun setAutofillHints (vararg p0: String ) setAutofillId [androidJvm] open fun setAutofillId (p0: AutofillId ?) setBackground [androidJvm] open fun setBackground (p0: Drawable ) setBackgroundColor [androidJvm] open override fun setBackgroundColor (p0: Int ) setBackgroundResource [androidJvm] open fun setBackgroundResource (p0: Int ) setBackgroundTintBlendMode [androidJvm] open fun setBackgroundTintBlendMode (p0: BlendMode ?) setBackgroundTintList [androidJvm] open fun setBackgroundTintList (p0: ColorStateList ?) setBackgroundTintMode [androidJvm] open fun setBackgroundTintMode (p0: PorterDuff.Mode ?) setBottom [androidJvm] fun setBottom (p0: Int ) setCameraDistance [androidJvm] open fun setCameraDistance (p0: Float ) setChildrenDrawingOrderEnabled [androidJvm] open fun setChildrenDrawingOrderEnabled (p0: Boolean ) setClickable [androidJvm] open fun setClickable (p0: Boolean ) setClipBounds [androidJvm] open fun setClipBounds (p0: Rect ) setClipChildren [androidJvm] open fun setClipChildren (p0: Boolean ) setClipToOutline [androidJvm] open fun setClipToOutline (p0: Boolean ) setClipToPadding [androidJvm] open fun setClipToPadding (p0: Boolean ) setContentCaptureSession [androidJvm] open fun setContentCaptureSession (p0: ContentCaptureSession ?) setContentDescription [androidJvm] open fun setContentDescription (p0: CharSequence ) setContextClickable [androidJvm] open fun setContextClickable (p0: Boolean ) setCurrentItem [androidJvm] fun setCurrentItem (item: Int , smoothScroll: Boolean ) Set the currently selected page. setDefaultFocusHighlightEnabled [androidJvm] open fun setDefaultFocusHighlightEnabled (p0: Boolean ) setDescendantFocusability [androidJvm] open fun setDescendantFocusability (p0: Int ) setDownloadListener [androidJvm] open fun setDownloadListener (p0: DownloadListener ?) setDuplicateParentStateEnabled [androidJvm] open fun setDuplicateParentStateEnabled (p0: Boolean ) setElevation [androidJvm] open fun setElevation (p0: Float ) setEnabled [androidJvm] open fun setEnabled (p0: Boolean ) setFadingEdgeLength [androidJvm] open fun setFadingEdgeLength (p0: Int ) setFilterTouchesWhenObscured [androidJvm] open fun setFilterTouchesWhenObscured (p0: Boolean ) setFindListener [androidJvm] open fun setFindListener (p0: WebView.FindListener ?) setFitsSystemWindows [androidJvm] open fun setFitsSystemWindows (p0: Boolean ) setFocusable [androidJvm] open fun setFocusable (p0: Boolean ) open fun setFocusable (p0: Int ) setFocusableInTouchMode [androidJvm] open fun setFocusableInTouchMode (p0: Boolean ) setFocusedByDefault [androidJvm] open fun setFocusedByDefault (p0: Boolean ) setForceDarkAllowed [androidJvm] open fun setForceDarkAllowed (p0: Boolean ) setForeground [androidJvm] open fun setForeground (p0: Drawable ) setForegroundGravity [androidJvm] open fun setForegroundGravity (p0: Int ) setForegroundTintBlendMode [androidJvm] open fun setForegroundTintBlendMode (p0: BlendMode ?) setForegroundTintList [androidJvm] open fun setForegroundTintList (p0: ColorStateList ?) setForegroundTintMode [androidJvm] open fun setForegroundTintMode (p0: PorterDuff.Mode ?) setHapticFeedbackEnabled [androidJvm] open fun setHapticFeedbackEnabled (p0: Boolean ) setHasTransientState [androidJvm] open fun setHasTransientState (p0: Boolean ) setHorizontalFadingEdgeEnabled [androidJvm] open fun setHorizontalFadingEdgeEnabled (p0: Boolean ) setHorizontalScrollBarEnabled [androidJvm] open fun setHorizontalScrollBarEnabled (p0: Boolean ) setHorizontalScrollbarThumbDrawable [androidJvm] open fun setHorizontalScrollbarThumbDrawable (p0: Drawable ?) setHorizontalScrollbarTrackDrawable [androidJvm] open fun setHorizontalScrollbarTrackDrawable (p0: Drawable ?) setHovered [androidJvm] open fun setHovered (p0: Boolean ) setId [androidJvm] open fun setId (p0: Int ) setImportantForAccessibility [androidJvm] open fun setImportantForAccessibility (p0: Int ) setImportantForAutofill [androidJvm] open fun setImportantForAutofill (p0: Int ) setImportantForContentCapture [androidJvm] open fun setImportantForContentCapture (p0: Int ) setInitialScale [androidJvm] open fun setInitialScale (p0: Int ) setKeepScreenOn [androidJvm] open fun setKeepScreenOn (p0: Boolean ) setKeyboardNavigationCluster [androidJvm] open fun setKeyboardNavigationCluster (p0: Boolean ) setLabelFor [androidJvm] open fun setLabelFor (p0: Int ) setLayerPaint [androidJvm] open fun setLayerPaint (p0: Paint ?) setLayerType [androidJvm] open override fun setLayerType (p0: Int , p1: Paint ?) setLayoutAnimation [androidJvm] open fun setLayoutAnimation (p0: LayoutAnimationController ) setLayoutAnimationListener [androidJvm] open fun setLayoutAnimationListener (p0: Animation.AnimationListener ) setLayoutDirection [androidJvm] open fun setLayoutDirection (p0: Int ) setLayoutMode [androidJvm] open fun setLayoutMode (p0: Int ) setLayoutParams [androidJvm] open override fun setLayoutParams (p0: ViewGroup.LayoutParams ) setLayoutTransition [androidJvm] open fun setLayoutTransition (p0: LayoutTransition ) setLeft [androidJvm] fun setLeft (p0: Int ) setLeftTopRightBottom [androidJvm] fun setLeftTopRightBottom (p0: Int , p1: Int , p2: Int , p3: Int ) setLongClickable [androidJvm] open fun setLongClickable (p0: Boolean ) setMeasuredDimension [androidJvm] fun setMeasuredDimension (p0: Int , p1: Int ) setMinimumHeight [androidJvm] open fun setMinimumHeight (p0: Int ) setMinimumWidth [androidJvm] open fun setMinimumWidth (p0: Int ) setMotionEventSplittingEnabled [androidJvm] open fun setMotionEventSplittingEnabled (p0: Boolean ) setNestedScrollingEnabled [androidJvm] open fun setNestedScrollingEnabled (p0: Boolean ) setNetworkAvailable [androidJvm] open fun setNetworkAvailable (p0: Boolean ) setNextClusterForwardId [androidJvm] open fun setNextClusterForwardId (p0: Int ) setNextFocusDownId [androidJvm] open fun setNextFocusDownId (p0: Int ) setNextFocusForwardId [androidJvm] open fun setNextFocusForwardId (p0: Int ) setNextFocusLeftId [androidJvm] open fun setNextFocusLeftId (p0: Int ) setNextFocusRightId [androidJvm] open fun setNextFocusRightId (p0: Int ) setNextFocusUpId [androidJvm] open fun setNextFocusUpId (p0: Int ) setOnApplyWindowInsetsListener [androidJvm] open fun setOnApplyWindowInsetsListener (p0: View.OnApplyWindowInsetsListener ) setOnCapturedPointerListener [androidJvm] open fun setOnCapturedPointerListener (p0: View.OnCapturedPointerListener ) setOnClickListener [androidJvm] open fun setOnClickListener (p0: View.OnClickListener ?) setOnContextClickListener [androidJvm] open fun setOnContextClickListener (p0: View.OnContextClickListener ?) setOnCreateContextMenuListener [androidJvm] open fun setOnCreateContextMenuListener (p0: View.OnCreateContextMenuListener ) setOnDragListener [androidJvm] open fun setOnDragListener (p0: View.OnDragListener ) setOnFocusChangeListener [androidJvm] open fun setOnFocusChangeListener (p0: View.OnFocusChangeListener ) setOnGenericMotionListener [androidJvm] open fun setOnGenericMotionListener (p0: View.OnGenericMotionListener ) setOnHierarchyChangeListener [androidJvm] open fun setOnHierarchyChangeListener (p0: ViewGroup.OnHierarchyChangeListener ) setOnHoverListener [androidJvm] open fun setOnHoverListener (p0: View.OnHoverListener ) setOnKeyListener [androidJvm] open fun setOnKeyListener (p0: View.OnKeyListener ) setOnLongClickListener [androidJvm] open fun setOnLongClickListener (p0: View.OnLongClickListener ?) setOnOverScrolledCallback [androidJvm] fun setOnOverScrolledCallback (callback: R2BasicWebView.OnOverScrolledCallback ) setOnReceiveContentListener [androidJvm] open fun setOnReceiveContentListener (p0: Array < String >?, p1: OnReceiveContentListener ?) setOnScrollChangeListener [androidJvm] open fun setOnScrollChangeListener (p0: View.OnScrollChangeListener ) setOnTouchListener [androidJvm] open fun setOnTouchListener (p0: View.OnTouchListener ) setOutlineAmbientShadowColor [androidJvm] open fun setOutlineAmbientShadowColor (p0: Int ) setOutlineProvider [androidJvm] open fun setOutlineProvider (p0: ViewOutlineProvider ) setOutlineSpotShadowColor [androidJvm] open fun setOutlineSpotShadowColor (p0: Int ) setOverScrollMode [androidJvm] open override fun setOverScrollMode (p0: Int ) setPadding [androidJvm] open fun setPadding (p0: Int , p1: Int , p2: Int , p3: Int ) setPaddingRelative [androidJvm] open fun setPaddingRelative (p0: Int , p1: Int , p2: Int , p3: Int ) setPivotX [androidJvm] open fun setPivotX (p0: Float ) setPivotY [androidJvm] open fun setPivotY (p0: Float ) setPointerIcon [androidJvm] open fun setPointerIcon (p0: PointerIcon ) setPressed [androidJvm] open fun setPressed (p0: Boolean ) setProperty [androidJvm] fun setProperty (key: String , value: String ) setRenderEffect [androidJvm] open fun setRenderEffect (p0: RenderEffect ?) setRendererPriorityPolicy [androidJvm] open fun setRendererPriorityPolicy (p0: Int , p1: Boolean ) setRevealOnFocusHint [androidJvm] fun setRevealOnFocusHint (p0: Boolean ) setRight [androidJvm] fun setRight (p0: Int ) setRotation [androidJvm] open fun setRotation (p0: Float ) setRotationX [androidJvm] open fun setRotationX (p0: Float ) setRotationY [androidJvm] open fun setRotationY (p0: Float ) setSaveEnabled [androidJvm] open fun setSaveEnabled (p0: Boolean ) setSaveFromParentEnabled [androidJvm] open fun setSaveFromParentEnabled (p0: Boolean ) setScaleX [androidJvm] open fun setScaleX (p0: Float ) setScaleY [androidJvm] open fun setScaleY (p0: Float ) setScreenReaderFocusable [androidJvm] open fun setScreenReaderFocusable (p0: Boolean ) setScrollBarDefaultDelayBeforeFade [androidJvm] open fun setScrollBarDefaultDelayBeforeFade (p0: Int ) setScrollBarFadeDuration [androidJvm] open fun setScrollBarFadeDuration (p0: Int ) setScrollbarFadingEnabled [androidJvm] open fun setScrollbarFadingEnabled (p0: Boolean ) setScrollBarSize [androidJvm] open fun setScrollBarSize (p0: Int ) setScrollBarStyle [androidJvm] open override fun setScrollBarStyle (p0: Int ) setScrollCaptureCallback [androidJvm] fun setScrollCaptureCallback (p0: ScrollCaptureCallback ?) setScrollCaptureHint [androidJvm] open fun setScrollCaptureHint (p0: Int ) setScrollContainer [androidJvm] open fun setScrollContainer (p0: Boolean ) setScrollIndicators [androidJvm] open fun setScrollIndicators (p0: Int ) open fun setScrollIndicators (p0: Int , p1: Int ) setScrollMode [androidJvm] fun setScrollMode (scrollMode: Boolean ) setScrollX [androidJvm] open fun setScrollX (p0: Int ) setScrollY [androidJvm] open fun setScrollY (p0: Int ) setSelected [androidJvm] open fun setSelected (p0: Boolean ) setSoundEffectsEnabled [androidJvm] open fun setSoundEffectsEnabled (p0: Boolean ) setStateDescription [androidJvm] open fun setStateDescription (p0: CharSequence ?) setStateListAnimator [androidJvm] open fun setStateListAnimator (p0: StateListAnimator ) setStaticTransformationsEnabled [androidJvm] open fun setStaticTransformationsEnabled (p0: Boolean ) setSystemGestureExclusionRects [androidJvm] open fun setSystemGestureExclusionRects (p0: MutableList < Rect >) setTag [androidJvm] open fun setTag (p0: Any ) open fun setTag (p0: Int , p1: Any ) setTextAlignment [androidJvm] open fun setTextAlignment (p0: Int ) setTextClassifier [androidJvm] open fun setTextClassifier (p0: TextClassifier ?) setTextDirection [androidJvm] open fun setTextDirection (p0: Int ) setTooltipText [androidJvm] open fun setTooltipText (p0: CharSequence ?) setTop [androidJvm] fun setTop (p0: Int ) setTouchDelegate [androidJvm] open fun setTouchDelegate (p0: TouchDelegate ) setTouchscreenBlocksFocus [androidJvm] open fun setTouchscreenBlocksFocus (p0: Boolean ) setTransitionAlpha [androidJvm] open fun setTransitionAlpha (p0: Float ) setTransitionGroup [androidJvm] open fun setTransitionGroup (p0: Boolean ) setTransitionName [androidJvm] fun setTransitionName (p0: String ) setTransitionVisibility [androidJvm] open fun setTransitionVisibility (p0: Int ) setTranslationX [androidJvm] open fun setTranslationX (p0: Float ) setTranslationY [androidJvm] open fun setTranslationY (p0: Float ) setTranslationZ [androidJvm] open fun setTranslationZ (p0: Float ) setVerticalFadingEdgeEnabled [androidJvm] open fun setVerticalFadingEdgeEnabled (p0: Boolean ) setVerticalScrollBarEnabled [androidJvm] open fun setVerticalScrollBarEnabled (p0: Boolean ) setVerticalScrollbarPosition [androidJvm] open fun setVerticalScrollbarPosition (p0: Int ) setVerticalScrollbarThumbDrawable [androidJvm] open fun setVerticalScrollbarThumbDrawable (p0: Drawable ?) setVerticalScrollbarTrackDrawable [androidJvm] open fun setVerticalScrollbarTrackDrawable (p0: Drawable ?) setViewTranslationCallback [androidJvm] open fun setViewTranslationCallback (p0: ViewTranslationCallback ) setVisibility [androidJvm] open fun setVisibility (p0: Int ) setWebChromeClient [androidJvm] open fun setWebChromeClient (p0: WebChromeClient ?) setWebViewClient [androidJvm] open fun setWebViewClient (p0: WebViewClient ) setWebViewRenderProcessClient [androidJvm] open fun setWebViewRenderProcessClient (p0: WebViewRenderProcessClient ?) open fun setWebViewRenderProcessClient (p0: Executor , p1: WebViewRenderProcessClient ) setWillNotDraw [androidJvm] open fun setWillNotDraw (p0: Boolean ) setWindowInsetsAnimationCallback [androidJvm] open override fun setWindowInsetsAnimationCallback (p0: WindowInsetsAnimation.Callback ?) setX [androidJvm] open fun setX (p0: Float ) setY [androidJvm] open fun setY (p0: Float ) setZ [androidJvm] open fun setZ (p0: Float ) showContextMenu [androidJvm] open fun showContextMenu (): Boolean open fun showContextMenu (p0: Float , p1: Float ): Boolean showContextMenuForChild [androidJvm] open override fun showContextMenuForChild (p0: View ): Boolean open override fun showContextMenuForChild (p0: View , p1: Float , p2: Float ): Boolean startActionMode [androidJvm] open override fun startActionMode (callback: ActionMode.Callback ?): ActionMode ? @ RequiresApi (value = 23) open override fun startActionMode (callback: ActionMode.Callback ?, type: Int ): ActionMode ? startActionModeForChild [androidJvm] open override fun startActionModeForChild (p0: View , p1: ActionMode.Callback ): ActionMode open override fun startActionModeForChild (p0: View , p1: ActionMode.Callback , p2: Int ): ActionMode startAnimation [androidJvm] open fun startAnimation (p0: Animation ) startDragAndDrop [androidJvm] fun startDragAndDrop (p0: ClipData , p1: View.DragShadowBuilder , p2: Any , p3: Int ): Boolean startLayoutAnimation [androidJvm] open fun startLayoutAnimation () startNestedScroll [androidJvm] open fun startNestedScroll (p0: Int ): Boolean startViewTransition [androidJvm] open fun startViewTransition (p0: View ) stopLoading [androidJvm] open fun stopLoading () stopNestedScroll [androidJvm] open fun stopNestedScroll () suppressLayout [androidJvm] open fun suppressLayout (p0: Boolean ) toInt [androidJvm] fun Boolean . toInt (): Int toString [androidJvm] open override fun toString (): String transformMatrixToGlobal [androidJvm] open fun transformMatrixToGlobal (p0: Matrix ) transformMatrixToLocal [androidJvm] open fun transformMatrixToLocal (p0: Matrix ) unscheduleDrawable [androidJvm] open fun unscheduleDrawable (p0: Drawable ) open override fun unscheduleDrawable (p0: Drawable , p1: Runnable ) updateDragShadow [androidJvm] fun updateDragShadow (p0: View.DragShadowBuilder ) updateViewLayout [androidJvm] open override fun updateViewLayout (p0: View , p1: ViewGroup.LayoutParams ) verifyDrawable [androidJvm] open fun verifyDrawable (p0: Drawable ): Boolean willNotDraw [androidJvm] open fun willNotDraw (): Boolean zoomBy [androidJvm] open fun zoomBy (p0: Float ) zoomIn [androidJvm] open fun zoomIn (): Boolean zoomOut [androidJvm] open fun zoomOut (): Boolean Properties \u00b6 Name Summary callback [androidJvm] var callback : R2BasicWebView.OnOverScrolledCallback ? = null listener [androidJvm] lateinit var listener : R2BasicWebView.Listener navigator [androidJvm] lateinit var navigator : Navigator progression [androidJvm] val progression : Double Computes the current progression in the resource. resourceUrl [androidJvm] var resourceUrl : String ? = null scrollMode [androidJvm] val scrollMode : Boolean","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/#r2webview","text":"[androidJvm]\\ class R2WebView (context: Context , attrs: AttributeSet ) : R2BasicWebView Created by Aferdita Muriqi on 12/2/17.","title":"R2WebView"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/#constructors","text":"R2WebView [androidJvm] fun R2WebView (context: Context , attrs: AttributeSet )","title":"Constructors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/#types","text":"Name Summary LayoutParams [androidJvm] class LayoutParams : ViewGroup.LayoutParams Layout parameters that should be supplied for views added to a ViewPager.","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/#functions","text":"Name Summary addChildrenForAccessibility [androidJvm] open override fun addChildrenForAccessibility (p0: ArrayList < View >) addExtraDataToAccessibilityNodeInfo [androidJvm] open override fun addExtraDataToAccessibilityNodeInfo (p0: AccessibilityNodeInfo , p1: String , p2: Bundle ?) addFocusables [androidJvm] open fun addFocusables (p0: ArrayList < View >, p1: Int ) open override fun addFocusables (p0: ArrayList < View >, p1: Int , p2: Int ) addJavascriptInterface [androidJvm] open fun addJavascriptInterface (p0: Any , p1: String ) addKeyboardNavigationClusters [androidJvm] open override fun addKeyboardNavigationClusters (p0: MutableCollection < View >, p1: Int ) addOnAttachStateChangeListener [androidJvm] open fun addOnAttachStateChangeListener (p0: View.OnAttachStateChangeListener ) addOnLayoutChangeListener [androidJvm] open fun addOnLayoutChangeListener (p0: View.OnLayoutChangeListener ) addOnUnhandledKeyEventListener [androidJvm] open fun addOnUnhandledKeyEventListener (p0: View.OnUnhandledKeyEventListener ) addStatesFromChildren [androidJvm] open fun addStatesFromChildren (): Boolean addTouchables [androidJvm] open override fun addTouchables (p0: ArrayList < View >) addView [androidJvm] open fun addView (p0: View ) open override fun addView (p0: View , p1: ViewGroup.LayoutParams ) open fun addView (p0: View , p1: Int ) open fun addView (p0: View , p1: Int , p2: ViewGroup.LayoutParams ) open fun addView (p0: View , p1: Int , p2: Int ) addViewInLayout [androidJvm] open fun addViewInLayout (p0: View , p1: Int , p2: ViewGroup.LayoutParams ): Boolean open fun addViewInLayout (p0: View , p1: Int , p2: ViewGroup.LayoutParams , p3: Boolean ): Boolean animate [androidJvm] open fun animate (): ViewPropertyAnimator announceForAccessibility [androidJvm] open fun announceForAccessibility (p0: CharSequence ) attachLayoutAnimationParameters [androidJvm] open fun attachLayoutAnimationParameters (p0: View , p1: ViewGroup.LayoutParams , p2: Int , p3: Int ) attachViewToParent [androidJvm] open fun attachViewToParent (p0: View , p1: Int , p2: ViewGroup.LayoutParams ) autofill [androidJvm] open fun autofill (p0: AutofillValue ) open override fun autofill (p0: SparseArray < AutofillValue >) awakenScrollBars [androidJvm] open fun awakenScrollBars (): Boolean open fun awakenScrollBars (p0: Int ): Boolean open fun awakenScrollBars (p0: Int , p1: Boolean ): Boolean bringChildToFront [androidJvm] open override fun bringChildToFront (p0: View ) bringToFront [androidJvm] open fun bringToFront () buildLayer [androidJvm] open fun buildLayer () callOnClick [androidJvm] open fun callOnClick (): Boolean canAnimate [androidJvm] open fun canAnimate (): Boolean cancelDragAndDrop [androidJvm] fun cancelDragAndDrop () cancelLongPress [androidJvm] open fun cancelLongPress () cancelPendingInputEvents [androidJvm] fun cancelPendingInputEvents () canGoBack [androidJvm] open fun canGoBack (): Boolean canGoBackOrForward [androidJvm] open fun canGoBackOrForward (p0: Int ): Boolean canGoForward [androidJvm] open fun canGoForward (): Boolean canResolveLayoutDirection [androidJvm] open fun canResolveLayoutDirection (): Boolean canResolveTextAlignment [androidJvm] open fun canResolveTextAlignment (): Boolean canResolveTextDirection [androidJvm] open fun canResolveTextDirection (): Boolean canScrollHorizontally [androidJvm] open fun canScrollHorizontally (p0: Int ): Boolean canScrollVertically [androidJvm] open fun canScrollVertically (p0: Int ): Boolean checkInputConnectionProxy [androidJvm] open fun checkInputConnectionProxy (p0: View ): Boolean childDrawableStateChanged [androidJvm] open override fun childDrawableStateChanged (p0: View ) childHasTransientStateChanged [androidJvm] open override fun childHasTransientStateChanged (p0: View , p1: Boolean ) cleanupLayoutState [androidJvm] open fun cleanupLayoutState (p0: View ) clearAnimation [androidJvm] open fun clearAnimation () clearCache [androidJvm] open fun clearCache (p0: Boolean ) clearChildFocus [androidJvm] open override fun clearChildFocus (p0: View ) clearDisappearingChildren [androidJvm] open fun clearDisappearingChildren () clearFocus [androidJvm] open override fun clearFocus () clearFormData [androidJvm] open fun clearFormData () clearHistory [androidJvm] open fun clearHistory () clearMatches [androidJvm] open fun clearMatches () clearSslPreferences [androidJvm] open fun clearSslPreferences () clearViewTranslationCallback [androidJvm] open fun clearViewTranslationCallback () computeHorizontalScrollExtent [androidJvm] open fun computeHorizontalScrollExtent (): Int computeHorizontalScrollOffset [androidJvm] open override fun computeHorizontalScrollOffset (): Int computeHorizontalScrollRange [androidJvm] open override fun computeHorizontalScrollRange (): Int computeScroll [androidJvm] open override fun computeScroll () computeSystemWindowInsets [androidJvm] open fun computeSystemWindowInsets (p0: WindowInsets , p1: Rect ): WindowInsets computeVerticalScrollExtent [androidJvm] open override fun computeVerticalScrollExtent (): Int computeVerticalScrollOffset [androidJvm] open override fun computeVerticalScrollOffset (): Int computeVerticalScrollRange [androidJvm] open override fun computeVerticalScrollRange (): Int copyBackForwardList [androidJvm] open fun copyBackForwardList (): WebBackForwardList createAccessibilityNodeInfo [androidJvm] open fun createAccessibilityNodeInfo (): AccessibilityNodeInfo createAnnotation [androidJvm] fun createAnnotation (id: String ) createContextMenu [androidJvm] open fun createContextMenu (p0: ContextMenu ) createHighlight [androidJvm] fun createHighlight (locator: String ?, color: String ?, callback: ( String ) -> Unit ) createPrintDocumentAdapter [androidJvm] open fun createPrintDocumentAdapter (p0: String ): PrintDocumentAdapter createWebMessageChannel [androidJvm] open fun createWebMessageChannel (): Array < WebMessagePort > debug [androidJvm] open fun debug (p0: Int ) destroy [androidJvm] open fun destroy () destroyHighlight [androidJvm] fun destroyHighlight (id: String ) detachAllViewsFromParent [androidJvm] open fun detachAllViewsFromParent () detachViewFromParent [androidJvm] open fun detachViewFromParent (p0: View ) open fun detachViewFromParent (p0: Int ) detachViewsFromParent [androidJvm] open fun detachViewsFromParent (p0: Int , p1: Int ) dispatchApplyWindowInsets [androidJvm] open override fun dispatchApplyWindowInsets (p0: WindowInsets ): WindowInsets dispatchCapturedPointerEvent [androidJvm] open override fun dispatchCapturedPointerEvent (p0: MotionEvent ): Boolean dispatchConfigurationChanged [androidJvm] open override fun dispatchConfigurationChanged (p0: Configuration ) dispatchCreateViewTranslationRequest [androidJvm] open override fun dispatchCreateViewTranslationRequest (p0: MutableMap < AutofillId , LongArray >, p1: IntArray , p2: TranslationCapability ?, p3: MutableList < ViewTranslationRequest >) dispatchDisplayHint [androidJvm] open override fun dispatchDisplayHint (p0: Int ) dispatchDragEvent [androidJvm] open override fun dispatchDragEvent (p0: DragEvent ): Boolean dispatchDraw [androidJvm] open override fun dispatchDraw (p0: Canvas ) dispatchDrawableHotspotChanged [androidJvm] open override fun dispatchDrawableHotspotChanged (p0: Float , p1: Float ) dispatchFinishTemporaryDetach [androidJvm] open override fun dispatchFinishTemporaryDetach () dispatchFreezeSelfOnly [androidJvm] open fun dispatchFreezeSelfOnly (p0: SparseArray < Parcelable >) dispatchGenericFocusedEvent [androidJvm] open override fun dispatchGenericFocusedEvent (p0: MotionEvent ): Boolean dispatchGenericMotionEvent [androidJvm] open fun dispatchGenericMotionEvent (p0: MotionEvent ): Boolean dispatchGenericPointerEvent [androidJvm] open override fun dispatchGenericPointerEvent (p0: MotionEvent ): Boolean dispatchHoverEvent [androidJvm] open override fun dispatchHoverEvent (p0: MotionEvent ): Boolean dispatchKeyEvent [androidJvm] open override fun dispatchKeyEvent (event: KeyEvent ): Boolean dispatchKeyEventPreIme [androidJvm] open override fun dispatchKeyEventPreIme (p0: KeyEvent ): Boolean dispatchKeyShortcutEvent [androidJvm] open override fun dispatchKeyShortcutEvent (p0: KeyEvent ): Boolean dispatchNestedFling [androidJvm] open fun dispatchNestedFling (p0: Float , p1: Float , p2: Boolean ): Boolean dispatchNestedPreFling [androidJvm] open fun dispatchNestedPreFling (p0: Float , p1: Float ): Boolean dispatchNestedPrePerformAccessibilityAction [androidJvm] open fun dispatchNestedPrePerformAccessibilityAction (p0: Int , p1: Bundle ): Boolean dispatchNestedPreScroll [androidJvm] open fun dispatchNestedPreScroll (p0: Int , p1: Int , p2: IntArray ?, p3: IntArray ?): Boolean dispatchNestedScroll [androidJvm] open fun dispatchNestedScroll (p0: Int , p1: Int , p2: Int , p3: Int , p4: IntArray ?): Boolean dispatchPointerCaptureChanged [androidJvm] open override fun dispatchPointerCaptureChanged (p0: Boolean ) dispatchPopulateAccessibilityEvent [androidJvm] open fun dispatchPopulateAccessibilityEvent (p0: AccessibilityEvent ): Boolean dispatchProvideAutofillStructure [androidJvm] open override fun dispatchProvideAutofillStructure (p0: ViewStructure , p1: Int ) dispatchProvideStructure [androidJvm] open override fun dispatchProvideStructure (p0: ViewStructure ) dispatchRestoreInstanceState [androidJvm] open override fun dispatchRestoreInstanceState (p0: SparseArray < Parcelable >) dispatchSaveInstanceState [androidJvm] open override fun dispatchSaveInstanceState (p0: SparseArray < Parcelable >) dispatchScrollCaptureSearch [androidJvm] open override fun dispatchScrollCaptureSearch (p0: Rect , p1: Point , p2: Consumer < ScrollCaptureTarget >) dispatchSetActivated [androidJvm] open override fun dispatchSetActivated (p0: Boolean ) dispatchSetPressed [androidJvm] open override fun dispatchSetPressed (p0: Boolean ) dispatchSetSelected [androidJvm] open override fun dispatchSetSelected (p0: Boolean ) dispatchStartTemporaryDetach [androidJvm] open override fun dispatchStartTemporaryDetach () dispatchThawSelfOnly [androidJvm] open fun dispatchThawSelfOnly (p0: SparseArray < Parcelable >) dispatchTouchEvent [androidJvm] open override fun dispatchTouchEvent (p0: MotionEvent ): Boolean dispatchTrackballEvent [androidJvm] open override fun dispatchTrackballEvent (p0: MotionEvent ): Boolean dispatchUnhandledMove [androidJvm] open override fun dispatchUnhandledMove (p0: View , p1: Int ): Boolean dispatchVisibilityChanged [androidJvm] open override fun dispatchVisibilityChanged (p0: View , p1: Int ) dispatchWindowFocusChanged [androidJvm] open override fun dispatchWindowFocusChanged (p0: Boolean ) dispatchWindowInsetsAnimationEnd [androidJvm] open override fun dispatchWindowInsetsAnimationEnd (p0: WindowInsetsAnimation ) dispatchWindowInsetsAnimationPrepare [androidJvm] open override fun dispatchWindowInsetsAnimationPrepare (p0: WindowInsetsAnimation ) dispatchWindowInsetsAnimationProgress [androidJvm] open override fun dispatchWindowInsetsAnimationProgress (p0: WindowInsets , p1: MutableList < WindowInsetsAnimation >): WindowInsets dispatchWindowInsetsAnimationStart [androidJvm] open override fun dispatchWindowInsetsAnimationStart (p0: WindowInsetsAnimation , p1: WindowInsetsAnimation.Bounds ): WindowInsetsAnimation.Bounds dispatchWindowVisibilityChanged [androidJvm] open override fun dispatchWindowVisibilityChanged (p0: Int ) documentHasImages [androidJvm] open fun documentHasImages (p0: Message ) draw [androidJvm] open fun draw (p0: Canvas ) drawableHotspotChanged [androidJvm] open fun drawableHotspotChanged (p0: Float , p1: Float ) drawableStateChanged [androidJvm] open override fun drawableStateChanged () drawChild [androidJvm] open fun drawChild (p0: Canvas , p1: View , p2: Long ): Boolean endViewTransition [androidJvm] open fun endViewTransition (p0: View ) evaluateJavascript [androidJvm] open fun evaluateJavascript (p0: String , p1: ValueCallback < String >?) findAllAsync [androidJvm] open fun findAllAsync (p0: String ) findFocus [androidJvm] open override fun findFocus (): View findNext [androidJvm] open fun findNext (p0: Boolean ) findViewById [androidJvm] fun < T : View > findViewById (p0: Int ): T findViewsWithText [androidJvm] open override fun findViewsWithText (p0: ArrayList < View >, p1: CharSequence , p2: Int ) findViewWithTag [androidJvm] fun < T : View > findViewWithTag (p0: Any ): T flingScroll [androidJvm] open fun flingScroll (p0: Int , p1: Int ) focusableViewAvailable [androidJvm] open override fun focusableViewAvailable (p0: View ) focusSearch [androidJvm] open fun focusSearch (p0: Int ): View open override fun focusSearch (p0: View , p1: Int ): View forceHasOverlappingRendering [androidJvm] open fun forceHasOverlappingRendering (p0: Boolean ) forceLayout [androidJvm] open fun forceLayout () gatherTransparentRegion [androidJvm] open override fun gatherTransparentRegion (p0: Region ?): Boolean generateDisplayHash [androidJvm] open fun generateDisplayHash (p0: String , p1: Rect ?, p2: Executor , p3: DisplayHashResultCallback ) getAccessibilityClassName [androidJvm] open override fun getAccessibilityClassName (): CharSequence getAccessibilityDelegate [androidJvm] open fun getAccessibilityDelegate (): View.AccessibilityDelegate getAccessibilityLiveRegion [androidJvm] open fun getAccessibilityLiveRegion (): Int getAccessibilityNodeProvider [androidJvm] open override fun getAccessibilityNodeProvider (): AccessibilityNodeProvider getAccessibilityPaneTitle [androidJvm] open fun getAccessibilityPaneTitle (): CharSequence ? getAccessibilityTraversalAfter [androidJvm] open fun getAccessibilityTraversalAfter (): Int getAccessibilityTraversalBefore [androidJvm] open fun getAccessibilityTraversalBefore (): Int getAlpha [androidJvm] open fun getAlpha (): Float getAnimation [androidJvm] open fun getAnimation (): Animation getAnimationMatrix [androidJvm] open fun getAnimationMatrix (): Matrix ? getApplicationWindowToken [androidJvm] open fun getApplicationWindowToken (): IBinder getAttributeResolutionStack [androidJvm] open fun getAttributeResolutionStack (p0: Int ): IntArray getAttributeSourceResourceMap [androidJvm] open fun getAttributeSourceResourceMap (): MutableMap < Int , Int > getAutofillHints [androidJvm] open fun getAutofillHints (): Array < String >? getAutofillId [androidJvm] fun getAutofillId (): AutofillId getAutofillType [androidJvm] open fun getAutofillType (): Int getAutofillValue [androidJvm] open fun getAutofillValue (): AutofillValue ? getBackground [androidJvm] open fun getBackground (): Drawable getBackgroundTintBlendMode [androidJvm] open fun getBackgroundTintBlendMode (): BlendMode ? getBackgroundTintList [androidJvm] open fun getBackgroundTintList (): ColorStateList ? getBackgroundTintMode [androidJvm] open fun getBackgroundTintMode (): PorterDuff.Mode ? getBaseline [androidJvm] open fun getBaseline (): Int getBottom [androidJvm] fun getBottom (): Int getBottomFadingEdgeStrength [androidJvm] open fun getBottomFadingEdgeStrength (): Float getBottomPaddingOffset [androidJvm] open fun getBottomPaddingOffset (): Int getCameraDistance [androidJvm] open fun getCameraDistance (): Float getCertificate [androidJvm] open fun getCertificate (): SslCertificate ? getChildAt [androidJvm] open fun getChildAt (p0: Int ): View getChildCount [androidJvm] open fun getChildCount (): Int getChildDrawingOrder [androidJvm] fun getChildDrawingOrder (p0: Int ): Int open fun getChildDrawingOrder (p0: Int , p1: Int ): Int getChildStaticTransformation [androidJvm] open fun getChildStaticTransformation (p0: View , p1: Transformation ): Boolean getChildVisibleRect [androidJvm] open override fun getChildVisibleRect (p0: View , p1: Rect , p2: Point ): Boolean getClipBounds [androidJvm] open fun getClipBounds (): Rect open fun getClipBounds (p0: Rect ): Boolean getClipChildren [androidJvm] open fun getClipChildren (): Boolean getClipToOutline [androidJvm] fun getClipToOutline (): Boolean getClipToPadding [androidJvm] open fun getClipToPadding (): Boolean getContentCaptureSession [androidJvm] fun getContentCaptureSession (): ContentCaptureSession ? getContentDescription [androidJvm] open fun getContentDescription (): CharSequence getContentHeight [androidJvm] open override fun getContentHeight (): Int getContext [androidJvm] fun getContext (): Context getContextMenuInfo [androidJvm] open fun getContextMenuInfo (): ContextMenu.ContextMenuInfo getCurrentSelectionInfo [androidJvm] fun getCurrentSelectionInfo (callback: ( String ) -> Unit ) getCurrentSelectionRect [androidJvm] fun getCurrentSelectionRect (callback: ( String ) -> Unit ) getDefaultFocusHighlightEnabled [androidJvm] fun getDefaultFocusHighlightEnabled (): Boolean getDescendantFocusability [androidJvm] open fun getDescendantFocusability (): Int getDisplay [androidJvm] open fun getDisplay (): Display getDrawableState [androidJvm] fun getDrawableState (): IntArray getDrawingRect [androidJvm] open fun getDrawingRect (p0: Rect ) getDrawingTime [androidJvm] open fun getDrawingTime (): Long getElevation [androidJvm] open fun getElevation (): Float getExplicitStyle [androidJvm] open fun getExplicitStyle (): Int getFavicon [androidJvm] open fun getFavicon (): Bitmap ? getFilterTouchesWhenObscured [androidJvm] open fun getFilterTouchesWhenObscured (): Boolean getFitsSystemWindows [androidJvm] open fun getFitsSystemWindows (): Boolean getFocusable [androidJvm] open fun getFocusable (): Int getFocusables [androidJvm] open fun getFocusables (p0: Int ): ArrayList < View > getFocusedChild [androidJvm] open fun getFocusedChild (): View getFocusedRect [androidJvm] open fun getFocusedRect (p0: Rect ) getForeground [androidJvm] open fun getForeground (): Drawable getForegroundGravity [androidJvm] open fun getForegroundGravity (): Int getForegroundTintBlendMode [androidJvm] open fun getForegroundTintBlendMode (): BlendMode ? getForegroundTintList [androidJvm] open fun getForegroundTintList (): ColorStateList ? getForegroundTintMode [androidJvm] open fun getForegroundTintMode (): PorterDuff.Mode ? getGlobalVisibleRect [androidJvm] fun getGlobalVisibleRect (p0: Rect ): Boolean open fun getGlobalVisibleRect (p0: Rect , p1: Point ): Boolean getHandler [androidJvm] open override fun getHandler (): Handler getHasOverlappingRendering [androidJvm] fun getHasOverlappingRendering (): Boolean getHeight [androidJvm] fun getHeight (): Int getHitRect [androidJvm] open fun getHitRect (p0: Rect ) getHitTestResult [androidJvm] open fun getHitTestResult (): WebView.HitTestResult getHorizontalFadingEdgeLength [androidJvm] open fun getHorizontalFadingEdgeLength (): Int getHorizontalScrollbarHeight [androidJvm] open fun getHorizontalScrollbarHeight (): Int getHorizontalScrollbarThumbDrawable [androidJvm] open fun getHorizontalScrollbarThumbDrawable (): Drawable ? getHorizontalScrollbarTrackDrawable [androidJvm] open fun getHorizontalScrollbarTrackDrawable (): Drawable ? getId [androidJvm] open fun getId (): Int getImportantForAccessibility [androidJvm] open fun getImportantForAccessibility (): Int getImportantForAutofill [androidJvm] open fun getImportantForAutofill (): Int getImportantForContentCapture [androidJvm] open fun getImportantForContentCapture (): Int getKeepScreenOn [androidJvm] open fun getKeepScreenOn (): Boolean getKeyDispatcherState [androidJvm] open fun getKeyDispatcherState (): KeyEvent.DispatcherState getLabelFor [androidJvm] open fun getLabelFor (): Int getLayerType [androidJvm] open fun getLayerType (): Int getLayoutAnimation [androidJvm] open fun getLayoutAnimation (): LayoutAnimationController getLayoutAnimationListener [androidJvm] open fun getLayoutAnimationListener (): Animation.AnimationListener getLayoutDirection [androidJvm] open fun getLayoutDirection (): Int getLayoutMode [androidJvm] open fun getLayoutMode (): Int getLayoutParams [androidJvm] open fun getLayoutParams (): ViewGroup.LayoutParams getLayoutTransition [androidJvm] open fun getLayoutTransition (): LayoutTransition getLeft [androidJvm] fun getLeft (): Int getLeftFadingEdgeStrength [androidJvm] open fun getLeftFadingEdgeStrength (): Float getLeftPaddingOffset [androidJvm] open fun getLeftPaddingOffset (): Int getLocalVisibleRect [androidJvm] fun getLocalVisibleRect (p0: Rect ): Boolean getLocationInSurface [androidJvm] open fun getLocationInSurface (p0: IntArray ) getLocationInWindow [androidJvm] open fun getLocationInWindow (p0: IntArray ) getLocationOnScreen [androidJvm] open fun getLocationOnScreen (p0: IntArray ) getMatrix [androidJvm] open fun getMatrix (): Matrix getMeasuredHeight [androidJvm] fun getMeasuredHeight (): Int getMeasuredHeightAndState [androidJvm] fun getMeasuredHeightAndState (): Int getMeasuredState [androidJvm] fun getMeasuredState (): Int getMeasuredWidth [androidJvm] fun getMeasuredWidth (): Int getMeasuredWidthAndState [androidJvm] fun getMeasuredWidthAndState (): Int getMinimumHeight [androidJvm] open fun getMinimumHeight (): Int getMinimumWidth [androidJvm] open fun getMinimumWidth (): Int getNestedScrollAxes [androidJvm] open fun getNestedScrollAxes (): Int getNextClusterForwardId [androidJvm] open fun getNextClusterForwardId (): Int getNextFocusDownId [androidJvm] open fun getNextFocusDownId (): Int getNextFocusForwardId [androidJvm] open fun getNextFocusForwardId (): Int getNextFocusLeftId [androidJvm] open fun getNextFocusLeftId (): Int getNextFocusRightId [androidJvm] open fun getNextFocusRightId (): Int getNextFocusUpId [androidJvm] open fun getNextFocusUpId (): Int getOnFocusChangeListener [androidJvm] open fun getOnFocusChangeListener (): View.OnFocusChangeListener getOriginalUrl [androidJvm] open fun getOriginalUrl (): String ? getOutlineAmbientShadowColor [androidJvm] open fun getOutlineAmbientShadowColor (): Int getOutlineProvider [androidJvm] open fun getOutlineProvider (): ViewOutlineProvider getOutlineSpotShadowColor [androidJvm] open fun getOutlineSpotShadowColor (): Int getOverlay [androidJvm] open override fun getOverlay (): ViewGroupOverlay getOverScrollMode [androidJvm] open fun getOverScrollMode (): Int getPaddingBottom [androidJvm] open fun getPaddingBottom (): Int getPaddingEnd [androidJvm] open fun getPaddingEnd (): Int getPaddingLeft [androidJvm] open fun getPaddingLeft (): Int getPaddingRight [androidJvm] open fun getPaddingRight (): Int getPaddingStart [androidJvm] open fun getPaddingStart (): Int getPaddingTop [androidJvm] open fun getPaddingTop (): Int getParent [androidJvm] fun getParent (): ViewParent getParentForAccessibility [androidJvm] open fun getParentForAccessibility (): ViewParent getPivotX [androidJvm] open fun getPivotX (): Float getPivotY [androidJvm] open fun getPivotY (): Float getPointerIcon [androidJvm] open fun getPointerIcon (): PointerIcon getProgress [androidJvm] open fun getProgress (): Int getReceiveContentMimeTypes [androidJvm] open fun getReceiveContentMimeTypes (): Array < String >? getRendererPriorityWaivedWhenNotVisible [androidJvm] open fun getRendererPriorityWaivedWhenNotVisible (): Boolean getRendererRequestedPriority [androidJvm] open fun getRendererRequestedPriority (): Int getResources [androidJvm] open fun getResources (): Resources getRevealOnFocusHint [androidJvm] fun getRevealOnFocusHint (): Boolean getRight [androidJvm] fun getRight (): Int getRightFadingEdgeStrength [androidJvm] open fun getRightFadingEdgeStrength (): Float getRightPaddingOffset [androidJvm] open fun getRightPaddingOffset (): Int getRootSurfaceControl [androidJvm] open fun getRootSurfaceControl (): AttachedSurfaceControl ? getRootView [androidJvm] open fun getRootView (): View getRootWindowInsets [androidJvm] open fun getRootWindowInsets (): WindowInsets getRotation [androidJvm] open fun getRotation (): Float getRotationX [androidJvm] open fun getRotationX (): Float getRotationY [androidJvm] open fun getRotationY (): Float getScaleX [androidJvm] open fun getScaleX (): Float getScaleY [androidJvm] open fun getScaleY (): Float getScrollBarDefaultDelayBeforeFade [androidJvm] open fun getScrollBarDefaultDelayBeforeFade (): Int getScrollBarFadeDuration [androidJvm] open fun getScrollBarFadeDuration (): Int getScrollBarSize [androidJvm] open fun getScrollBarSize (): Int getScrollBarStyle [androidJvm] open fun getScrollBarStyle (): Int getScrollCaptureHint [androidJvm] open fun getScrollCaptureHint (): Int getScrollIndicators [androidJvm] open fun getScrollIndicators (): Int getScrollX [androidJvm] fun getScrollX (): Int getScrollY [androidJvm] fun getScrollY (): Int getSettings [androidJvm] open fun getSettings (): WebSettings getSolidColor [androidJvm] open fun getSolidColor (): Int getSourceLayoutResId [androidJvm] open fun getSourceLayoutResId (): Int getStateDescription [androidJvm] fun getStateDescription (): CharSequence ? getStateListAnimator [androidJvm] open fun getStateListAnimator (): StateListAnimator getSuggestedMinimumHeight [androidJvm] open fun getSuggestedMinimumHeight (): Int getSuggestedMinimumWidth [androidJvm] open fun getSuggestedMinimumWidth (): Int getSystemGestureExclusionRects [androidJvm] open fun getSystemGestureExclusionRects (): MutableList < Rect > getTag [androidJvm] open fun getTag (): Any open fun getTag (p0: Int ): Any getTextAlignment [androidJvm] open fun getTextAlignment (): Int getTextClassifier [androidJvm] open fun getTextClassifier (): TextClassifier getTextDirection [androidJvm] open fun getTextDirection (): Int getTitle [androidJvm] open fun getTitle (): String ? getTooltipText [androidJvm] open fun getTooltipText (): CharSequence ? getTop [androidJvm] fun getTop (): Int getTopFadingEdgeStrength [androidJvm] open fun getTopFadingEdgeStrength (): Float getTopPaddingOffset [androidJvm] open fun getTopPaddingOffset (): Int getTouchables [androidJvm] open fun getTouchables (): ArrayList < View > getTouchDelegate [androidJvm] open fun getTouchDelegate (): TouchDelegate getTouchscreenBlocksFocus [androidJvm] open fun getTouchscreenBlocksFocus (): Boolean getTransitionAlpha [androidJvm] open fun getTransitionAlpha (): Float getTransitionName [androidJvm] open fun getTransitionName (): String getTranslationX [androidJvm] open fun getTranslationX (): Float getTranslationY [androidJvm] open fun getTranslationY (): Float getTranslationZ [androidJvm] open fun getTranslationZ (): Float getUniqueDrawingId [androidJvm] open fun getUniqueDrawingId (): Long getUrl [androidJvm] open fun getUrl (): String ? getVerticalFadingEdgeLength [androidJvm] open fun getVerticalFadingEdgeLength (): Int getVerticalScrollbarPosition [androidJvm] open fun getVerticalScrollbarPosition (): Int getVerticalScrollbarThumbDrawable [androidJvm] open fun getVerticalScrollbarThumbDrawable (): Drawable ? getVerticalScrollbarTrackDrawable [androidJvm] open fun getVerticalScrollbarTrackDrawable (): Drawable ? getVerticalScrollbarWidth [androidJvm] open fun getVerticalScrollbarWidth (): Int getViewportWidth [androidJvm] fun getViewportWidth (): Int getViewTranslationResponse [androidJvm] open fun getViewTranslationResponse (): ViewTranslationResponse ? getViewTreeObserver [androidJvm] open fun getViewTreeObserver (): ViewTreeObserver getVisibility [androidJvm] open fun getVisibility (): Int getWebChromeClient [androidJvm] open fun getWebChromeClient (): WebChromeClient ? getWebViewClient [androidJvm] open fun getWebViewClient (): WebViewClient getWebViewLooper [androidJvm] open fun getWebViewLooper (): Looper getWebViewRenderProcess [androidJvm] open fun getWebViewRenderProcess (): WebViewRenderProcess ? getWebViewRenderProcessClient [androidJvm] open fun getWebViewRenderProcessClient (): WebViewRenderProcessClient ? getWidth [androidJvm] fun getWidth (): Int getWindowAttachCount [androidJvm] open fun getWindowAttachCount (): Int getWindowId [androidJvm] open fun getWindowId (): WindowId getWindowInsetsController [androidJvm] open fun getWindowInsetsController (): WindowInsetsController ? getWindowToken [androidJvm] open fun getWindowToken (): IBinder getWindowVisibility [androidJvm] open fun getWindowVisibility (): Int getWindowVisibleDisplayFrame [androidJvm] open fun getWindowVisibleDisplayFrame (p0: Rect ) getX [androidJvm] open fun getX (): Float getY [androidJvm] open fun getY (): Float getZ [androidJvm] open fun getZ (): Float goBack [androidJvm] open fun goBack () goBackOrForward [androidJvm] open fun goBackOrForward (p0: Int ) goForward [androidJvm] open fun goForward () hasExplicitFocusable [androidJvm] open fun hasExplicitFocusable (): Boolean hasFocus [androidJvm] open override fun hasFocus (): Boolean hasFocusable [androidJvm] open fun hasFocusable (): Boolean hasNestedScrollingParent [androidJvm] open fun hasNestedScrollingParent (): Boolean hasOnClickListeners [androidJvm] open fun hasOnClickListeners (): Boolean hasOnLongClickListeners [androidJvm] open fun hasOnLongClickListeners (): Boolean hasOverlappingRendering [androidJvm] open fun hasOverlappingRendering (): Boolean hasPointerCapture [androidJvm] open fun hasPointerCapture (): Boolean hasTransientState [androidJvm] open override fun hasTransientState (): Boolean hasWindowFocus [androidJvm] open fun hasWindowFocus (): Boolean highlightActivated [androidJvm] fun highlightActivated (id: String ) highlightAnnotationMarkActivated [androidJvm] fun highlightAnnotationMarkActivated (id: String ) indexOfChild [androidJvm] open fun indexOfChild (p0: View ): Int invalidate [androidJvm] open fun invalidate () invalidateDrawable [androidJvm] open override fun invalidateDrawable (p0: Drawable ) invalidateOutline [androidJvm] open fun invalidateOutline () invokeZoomPicker [androidJvm] open fun invokeZoomPicker () isAccessibilityFocused [androidJvm] open fun isAccessibilityFocused (): Boolean isAccessibilityHeading [androidJvm] open fun isAccessibilityHeading (): Boolean isActivated [androidJvm] open fun isActivated (): Boolean isAttachedToWindow [androidJvm] open fun isAttachedToWindow (): Boolean isChildrenDrawingOrderEnabled [androidJvm] open fun isChildrenDrawingOrderEnabled (): Boolean isClickable [androidJvm] open fun isClickable (): Boolean isContextClickable [androidJvm] open fun isContextClickable (): Boolean isDirty [androidJvm] open fun isDirty (): Boolean isDuplicateParentStateEnabled [androidJvm] open fun isDuplicateParentStateEnabled (): Boolean isEnabled [androidJvm] open fun isEnabled (): Boolean isFocusable [androidJvm] fun isFocusable (): Boolean isFocusableInTouchMode [androidJvm] fun isFocusableInTouchMode (): Boolean isFocused [androidJvm] open fun isFocused (): Boolean isFocusedByDefault [androidJvm] fun isFocusedByDefault (): Boolean isForceDarkAllowed [androidJvm] open fun isForceDarkAllowed (): Boolean isHapticFeedbackEnabled [androidJvm] open fun isHapticFeedbackEnabled (): Boolean isHardwareAccelerated [androidJvm] open fun isHardwareAccelerated (): Boolean isHorizontalFadingEdgeEnabled [androidJvm] open fun isHorizontalFadingEdgeEnabled (): Boolean isHorizontalScrollBarEnabled [androidJvm] open fun isHorizontalScrollBarEnabled (): Boolean isHovered [androidJvm] open fun isHovered (): Boolean isImportantForAccessibility [androidJvm] open fun isImportantForAccessibility (): Boolean isImportantForAutofill [androidJvm] fun isImportantForAutofill (): Boolean isImportantForContentCapture [androidJvm] fun isImportantForContentCapture (): Boolean isInEditMode [androidJvm] open fun isInEditMode (): Boolean isInLayout [androidJvm] open fun isInLayout (): Boolean isInTouchMode [androidJvm] open fun isInTouchMode (): Boolean isKeyboardNavigationCluster [androidJvm] fun isKeyboardNavigationCluster (): Boolean isLaidOut [androidJvm] open fun isLaidOut (): Boolean isLayoutDirectionResolved [androidJvm] open fun isLayoutDirectionResolved (): Boolean isLayoutRequested [androidJvm] open fun isLayoutRequested (): Boolean isLayoutSuppressed [androidJvm] open fun isLayoutSuppressed (): Boolean isLongClickable [androidJvm] open fun isLongClickable (): Boolean isMotionEventSplittingEnabled [androidJvm] open fun isMotionEventSplittingEnabled (): Boolean isNestedScrollingEnabled [androidJvm] open fun isNestedScrollingEnabled (): Boolean isOpaque [androidJvm] open fun isOpaque (): Boolean isPaddingOffsetRequired [androidJvm] open fun isPaddingOffsetRequired (): Boolean isPaddingRelative [androidJvm] open fun isPaddingRelative (): Boolean isPivotSet [androidJvm] open fun isPivotSet (): Boolean isPressed [androidJvm] open fun isPressed (): Boolean isPrivateBrowsingEnabled [androidJvm] open fun isPrivateBrowsingEnabled (): Boolean isSaveEnabled [androidJvm] open fun isSaveEnabled (): Boolean isSaveFromParentEnabled [androidJvm] open fun isSaveFromParentEnabled (): Boolean isScreenReaderFocusable [androidJvm] open fun isScreenReaderFocusable (): Boolean isScrollbarFadingEnabled [androidJvm] open fun isScrollbarFadingEnabled (): Boolean isScrollContainer [androidJvm] open fun isScrollContainer (): Boolean isSelected [androidJvm] open fun isSelected (): Boolean isShowingLayoutBounds [androidJvm] fun isShowingLayoutBounds (): Boolean isShown [androidJvm] open fun isShown (): Boolean isSoundEffectsEnabled [androidJvm] open fun isSoundEffectsEnabled (): Boolean isTemporarilyDetached [androidJvm] fun isTemporarilyDetached (): Boolean isTextAlignmentResolved [androidJvm] open fun isTextAlignmentResolved (): Boolean isTextDirectionResolved [androidJvm] open fun isTextDirectionResolved (): Boolean isTransitionGroup [androidJvm] open fun isTransitionGroup (): Boolean isVerticalFadingEdgeEnabled [androidJvm] open fun isVerticalFadingEdgeEnabled (): Boolean isVerticalScrollBarEnabled [androidJvm] open fun isVerticalScrollBarEnabled (): Boolean isVisibleToUserForAutofill [androidJvm] open override fun isVisibleToUserForAutofill (p0: Int ): Boolean jumpDrawablesToCurrentState [androidJvm] open override fun jumpDrawablesToCurrentState () keyboardNavigationClusterSearch [androidJvm] open fun keyboardNavigationClusterSearch (p0: View , p1: Int ): View layout [androidJvm] override fun layout (p0: Int , p1: Int , p2: Int , p3: Int ) loadData [androidJvm] open fun loadData (p0: String , p1: String ?, p2: String ?) loadDataWithBaseURL [androidJvm] open fun loadDataWithBaseURL (p0: String ?, p1: String , p2: String ?, p3: String ?, p4: String ?) loadUrl [androidJvm] open fun loadUrl (p0: String ) open fun loadUrl (p0: String , p1: MutableMap < String , String >) log [androidJvm] fun log (message: String ) logError [androidJvm] fun logError (message: String , filename: String , line: Int ) measure [androidJvm] fun measure (p0: Int , p1: Int ) measureChild [androidJvm] open fun measureChild (p0: View , p1: Int , p2: Int ) measureChildren [androidJvm] open fun measureChildren (p0: Int , p1: Int ) measureChildWithMargins [androidJvm] open fun measureChildWithMargins (p0: View , p1: Int , p2: Int , p3: Int , p4: Int ) notifySubtreeAccessibilityStateChanged [androidJvm] open override fun notifySubtreeAccessibilityStateChanged (p0: View , p1: View , p2: Int ) offsetDescendantRectToMyCoords [androidJvm] fun offsetDescendantRectToMyCoords (p0: View , p1: Rect ) offsetLeftAndRight [androidJvm] open fun offsetLeftAndRight (p0: Int ) offsetRectIntoDescendantCoords [androidJvm] fun offsetRectIntoDescendantCoords (p0: View , p1: Rect ) offsetTopAndBottom [androidJvm] open fun offsetTopAndBottom (p0: Int ) onAnimationEnd [androidJvm] open fun onAnimationEnd () onAnimationStart [androidJvm] open fun onAnimationStart () onApplyWindowInsets [androidJvm] open override fun onApplyWindowInsets (p0: WindowInsets ): WindowInsets onCancelPendingInputEvents [androidJvm] open fun onCancelPendingInputEvents () onCapturedPointerEvent [androidJvm] open fun onCapturedPointerEvent (p0: MotionEvent ): Boolean onCheckIsTextEditor [androidJvm] open override fun onCheckIsTextEditor (): Boolean onConfigurationChanged [androidJvm] open override fun onConfigurationChanged (p0: Configuration ) onCreateContextMenu [androidJvm] open fun onCreateContextMenu (p0: ContextMenu ) onCreateDrawableState [androidJvm] open override fun onCreateDrawableState (p0: Int ): IntArray onCreateInputConnection [androidJvm] open override fun onCreateInputConnection (p0: EditorInfo ): InputConnection onCreateViewTranslationRequest [androidJvm] open fun onCreateViewTranslationRequest (p0: IntArray , p1: Consumer < ViewTranslationRequest >) onCreateVirtualViewTranslationRequests [androidJvm] open override fun onCreateVirtualViewTranslationRequests (p0: LongArray , p1: IntArray , p2: Consumer < ViewTranslationRequest >) onDecorationActivated [androidJvm] fun onDecorationActivated (eventJson: String ): Boolean Called from the JS code when a tap on a decoration is detected. onDescendantInvalidated [androidJvm] open override fun onDescendantInvalidated (p0: View , p1: View ) onDisplayHint [androidJvm] open fun onDisplayHint (p0: Int ) onDragEvent [androidJvm] open override fun onDragEvent (p0: DragEvent ): Boolean onDraw [androidJvm] open override fun onDraw (p0: Canvas ) onDrawForeground [androidJvm] open fun onDrawForeground (p0: Canvas ) onDrawScrollBars [androidJvm] fun onDrawScrollBars (p0: Canvas ) onFilterTouchEventForSecurity [androidJvm] open fun onFilterTouchEventForSecurity (p0: MotionEvent ): Boolean onFinishInflate [androidJvm] open fun onFinishInflate () onFinishTemporaryDetach [androidJvm] open override fun onFinishTemporaryDetach () onFocusChanged [androidJvm] open override fun onFocusChanged (p0: Boolean , p1: Int , p2: Rect ?) onGenericMotionEvent [androidJvm] open override fun onGenericMotionEvent (p0: MotionEvent ): Boolean onHoverChanged [androidJvm] open fun onHoverChanged (p0: Boolean ) onHoverEvent [androidJvm] open override fun onHoverEvent (p0: MotionEvent ): Boolean onInitializeAccessibilityEvent [androidJvm] open fun onInitializeAccessibilityEvent (p0: AccessibilityEvent ) onInitializeAccessibilityNodeInfo [androidJvm] open fun onInitializeAccessibilityNodeInfo (p0: AccessibilityNodeInfo ) onInterceptHoverEvent [androidJvm] open fun onInterceptHoverEvent (p0: MotionEvent ): Boolean onInterceptTouchEvent [androidJvm] open fun onInterceptTouchEvent (p0: MotionEvent ): Boolean onKeyDown [androidJvm] open override fun onKeyDown (p0: Int , p1: KeyEvent ): Boolean onKeyLongPress [androidJvm] open override fun onKeyLongPress (p0: Int , p1: KeyEvent ): Boolean onKeyMultiple [androidJvm] open override fun onKeyMultiple (p0: Int , p1: Int , p2: KeyEvent ): Boolean onKeyPreIme [androidJvm] open fun onKeyPreIme (p0: Int , p1: KeyEvent ): Boolean onKeyShortcut [androidJvm] open fun onKeyShortcut (p0: Int , p1: KeyEvent ): Boolean onKeyUp [androidJvm] open override fun onKeyUp (p0: Int , p1: KeyEvent ): Boolean onMeasure [androidJvm] open override fun onMeasure (p0: Int , p1: Int ) onNestedFling [androidJvm] open override fun onNestedFling (p0: View , p1: Float , p2: Float , p3: Boolean ): Boolean onNestedPreFling [androidJvm] open override fun onNestedPreFling (p0: View , p1: Float , p2: Float ): Boolean onNestedPrePerformAccessibilityAction [androidJvm] open override fun onNestedPrePerformAccessibilityAction (p0: View , p1: Int , p2: Bundle ): Boolean onNestedPreScroll [androidJvm] open override fun onNestedPreScroll (p0: View , p1: Int , p2: Int , p3: IntArray ) onNestedScroll [androidJvm] open override fun onNestedScroll (p0: View , p1: Int , p2: Int , p3: Int , p4: Int ) onNestedScrollAccepted [androidJvm] open override fun onNestedScrollAccepted (p0: View , p1: View , p2: Int ) onPause [androidJvm] open fun onPause () onPointerCaptureChange [androidJvm] open fun onPointerCaptureChange (p0: Boolean ) onPopulateAccessibilityEvent [androidJvm] open fun onPopulateAccessibilityEvent (p0: AccessibilityEvent ) onProvideAutofillStructure [androidJvm] open fun onProvideAutofillStructure (p0: ViewStructure , p1: Int ) onProvideAutofillVirtualStructure [androidJvm] open override fun onProvideAutofillVirtualStructure (p0: ViewStructure , p1: Int ) onProvideContentCaptureStructure [androidJvm] open override fun onProvideContentCaptureStructure (p0: ViewStructure , p1: Int ) onProvideStructure [androidJvm] open fun onProvideStructure (p0: ViewStructure ) onProvideVirtualStructure [androidJvm] open override fun onProvideVirtualStructure (p0: ViewStructure ) onReceiveContent [androidJvm] open fun onReceiveContent (p0: ContentInfo ): ContentInfo ? onRequestFocusInDescendants [androidJvm] open fun onRequestFocusInDescendants (p0: Int , p1: Rect ): Boolean onRequestSendAccessibilityEvent [androidJvm] open fun onRequestSendAccessibilityEvent (p0: View , p1: AccessibilityEvent ): Boolean onResolvePointerIcon [androidJvm] open override fun onResolvePointerIcon (p0: MotionEvent , p1: Int ): PointerIcon onRestoreInstanceState [androidJvm] open fun onRestoreInstanceState (p0: Parcelable ) onResume [androidJvm] open fun onResume () onRtlPropertiesChanged [androidJvm] open fun onRtlPropertiesChanged (p0: Int ) onSaveInstanceState [androidJvm] open fun onSaveInstanceState (): Parcelable ? onScreenStateChanged [androidJvm] open fun onScreenStateChanged (p0: Int ) onScrollCaptureSearch [androidJvm] open fun onScrollCaptureSearch (p0: Rect , p1: Point , p2: Consumer < ScrollCaptureTarget >) onSetAlpha [androidJvm] open fun onSetAlpha (p0: Int ): Boolean onStartNestedScroll [androidJvm] open override fun onStartNestedScroll (p0: View , p1: View , p2: Int ): Boolean onStartTemporaryDetach [androidJvm] open override fun onStartTemporaryDetach () onStopNestedScroll [androidJvm] open override fun onStopNestedScroll (p0: View ) onTap [androidJvm] fun onTap (eventJson: String ): Boolean Called from the JS code when a tap is detected. If the JS indicates the tap is being handled within the web view, don't take action, onTouchEvent [androidJvm] open override fun onTouchEvent (ev: MotionEvent ): Boolean onTrackballEvent [androidJvm] open override fun onTrackballEvent (p0: MotionEvent ): Boolean onViewAdded [androidJvm] open fun onViewAdded (p0: View ) onViewRemoved [androidJvm] open fun onViewRemoved (p0: View ) onViewTranslationResponse [androidJvm] open fun onViewTranslationResponse (p0: ViewTranslationResponse ) onVirtualViewTranslationResponses [androidJvm] open override fun onVirtualViewTranslationResponses (p0: LongSparseArray < ViewTranslationResponse >) onVisibilityAggregated [androidJvm] open fun onVisibilityAggregated (p0: Boolean ) onVisibilityChanged [androidJvm] open override fun onVisibilityChanged (p0: View , p1: Int ) onWindowFocusChanged [androidJvm] open override fun onWindowFocusChanged (p0: Boolean ) onWindowVisibilityChanged [androidJvm] open override fun onWindowVisibilityChanged (p0: Int ) overScrollBy [androidJvm] open fun overScrollBy (p0: Int , p1: Int , p2: Int , p3: Int , p4: Int , p5: Int , p6: Int , p7: Int , p8: Boolean ): Boolean pageDown [androidJvm] open fun pageDown (p0: Boolean ): Boolean pageUp [androidJvm] open fun pageUp (p0: Boolean ): Boolean pauseTimers [androidJvm] open fun pauseTimers () performAccessibilityAction [androidJvm] open fun performAccessibilityAction (p0: Int , p1: Bundle ): Boolean performClick [androidJvm] open fun performClick (): Boolean performContextClick [androidJvm] open fun performContextClick (): Boolean open fun performContextClick (p0: Float , p1: Float ): Boolean performHapticFeedback [androidJvm] open fun performHapticFeedback (p0: Int ): Boolean open fun performHapticFeedback (p0: Int , p1: Int ): Boolean performLongClick [androidJvm] open override fun performLongClick (): Boolean open fun performLongClick (p0: Float , p1: Float ): Boolean performReceiveContent [androidJvm] open fun performReceiveContent (p0: ContentInfo ): ContentInfo ? playSoundEffect [androidJvm] open fun playSoundEffect (p0: Int ) post [androidJvm] open fun post (p0: Runnable ): Boolean postDelayed [androidJvm] open fun postDelayed (p0: Runnable , p1: Long ): Boolean postInvalidate [androidJvm] open fun postInvalidate () open fun postInvalidate (p0: Int , p1: Int , p2: Int , p3: Int ) postInvalidateDelayed [androidJvm] open fun postInvalidateDelayed (p0: Long ) open fun postInvalidateDelayed (p0: Long , p1: Int , p2: Int , p3: Int , p4: Int ) postInvalidateOnAnimation [androidJvm] open fun postInvalidateOnAnimation () open fun postInvalidateOnAnimation (p0: Int , p1: Int , p2: Int , p3: Int ) postOnAnimation [androidJvm] open fun postOnAnimation (p0: Runnable ) postOnAnimationDelayed [androidJvm] open fun postOnAnimationDelayed (p0: Runnable , p1: Long ) postUrl [androidJvm] open fun postUrl (p0: String , p1: ByteArray ) postVisualStateCallback [androidJvm] open fun postVisualStateCallback (p0: Long , p1: WebView.VisualStateCallback ) postWebMessage [androidJvm] open fun postWebMessage (p0: WebMessage , p1: Uri ) recomputeViewAttributes [androidJvm] open override fun recomputeViewAttributes (p0: View ) rectangleForHighlightWithID [androidJvm] fun rectangleForHighlightWithID (id: String , callback: ( String ) -> Unit ) refreshDrawableState [androidJvm] open fun refreshDrawableState () releasePointerCapture [androidJvm] open fun releasePointerCapture () reload [androidJvm] open fun reload () removeAllViews [androidJvm] open fun removeAllViews () removeAllViewsInLayout [androidJvm] open fun removeAllViewsInLayout () removeCallbacks [androidJvm] open fun removeCallbacks (p0: Runnable ): Boolean removeDetachedView [androidJvm] open fun removeDetachedView (p0: View , p1: Boolean ) removeJavascriptInterface [androidJvm] open fun removeJavascriptInterface (p0: String ) removeOnAttachStateChangeListener [androidJvm] open fun removeOnAttachStateChangeListener (p0: View.OnAttachStateChangeListener ) removeOnLayoutChangeListener [androidJvm] open fun removeOnLayoutChangeListener (p0: View.OnLayoutChangeListener ) removeOnUnhandledKeyEventListener [androidJvm] open fun removeOnUnhandledKeyEventListener (p0: View.OnUnhandledKeyEventListener ) removeProperty [androidJvm] fun removeProperty (key: String ) removeView [androidJvm] open override fun removeView (p0: View ) removeViewAt [androidJvm] open fun removeViewAt (p0: Int ) removeViewInLayout [androidJvm] open fun removeViewInLayout (p0: View ) removeViews [androidJvm] open fun removeViews (p0: Int , p1: Int ) removeViewsInLayout [androidJvm] open fun removeViewsInLayout (p0: Int , p1: Int ) requestApplyInsets [androidJvm] open fun requestApplyInsets () requestChildFocus [androidJvm] open override fun requestChildFocus (p0: View , p1: View ) requestChildRectangleOnScreen [androidJvm] open override fun requestChildRectangleOnScreen (p0: View , p1: Rect , p2: Boolean ): Boolean requestDisallowInterceptTouchEvent [androidJvm] open override fun requestDisallowInterceptTouchEvent (p0: Boolean ) requestFocus [androidJvm] fun requestFocus (): Boolean fun requestFocus (p0: Int ): Boolean open override fun requestFocus (p0: Int , p1: Rect ): Boolean requestFocusFromTouch [androidJvm] fun requestFocusFromTouch (): Boolean requestFocusNodeHref [androidJvm] open fun requestFocusNodeHref (p0: Message ?) requestImageRef [androidJvm] open fun requestImageRef (p0: Message ) requestLayout [androidJvm] open fun requestLayout () requestPointerCapture [androidJvm] open fun requestPointerCapture () requestRectangleOnScreen [androidJvm] open fun requestRectangleOnScreen (p0: Rect ): Boolean open fun requestRectangleOnScreen (p0: Rect , p1: Boolean ): Boolean requestSendAccessibilityEvent [androidJvm] open override fun requestSendAccessibilityEvent (p0: View , p1: AccessibilityEvent ): Boolean requestTransparentRegion [androidJvm] open override fun requestTransparentRegion (p0: View ) requestUnbufferedDispatch [androidJvm] fun requestUnbufferedDispatch (p0: MotionEvent ) fun requestUnbufferedDispatch (p0: Int ) requireViewById [androidJvm] fun < T : View > requireViewById (p0: Int ): T resetPivot [androidJvm] open fun resetPivot () restoreDefaultFocus [androidJvm] open override fun restoreDefaultFocus (): Boolean restoreHierarchyState [androidJvm] open fun restoreHierarchyState (p0: SparseArray < Parcelable >) restoreState [androidJvm] open fun restoreState (p0: Bundle ): WebBackForwardList ? resumeTimers [androidJvm] open fun resumeTimers () runJavaScript [androidJvm] fun runJavaScript (javascript: String , callback: ( String ) -> Unit ? = null) saveAttributeDataForStyleable [androidJvm] fun saveAttributeDataForStyleable (p0: Context , p1: IntArray , p2: AttributeSet ?, p3: TypedArray , p4: Int , p5: Int ) saveHierarchyState [androidJvm] open fun saveHierarchyState (p0: SparseArray < Parcelable >) saveState [androidJvm] open fun saveState (p0: Bundle ): WebBackForwardList ? saveWebArchive [androidJvm] open fun saveWebArchive (p0: String ) open fun saveWebArchive (p0: String , p1: Boolean , p2: ValueCallback < String >?) scheduleDrawable [androidJvm] open override fun scheduleDrawable (p0: Drawable , p1: Runnable , p2: Long ) scheduleLayoutAnimation [androidJvm] open fun scheduleLayoutAnimation () scrollBy [androidJvm] open fun scrollBy (p0: Int , p1: Int ) scrollLeft [androidJvm] open override fun scrollLeft (animated: Boolean ) scrollRight [androidJvm] open override fun scrollRight (animated: Boolean ) scrollTo [androidJvm] open fun scrollTo (p0: Int , p1: Int ) scrollToEnd [androidJvm] fun scrollToEnd () scrollToId [androidJvm] suspend fun scrollToId (htmlId: String ): Boolean scrollToPosition [androidJvm] fun scrollToPosition (progression: Double ) scrollToStart [androidJvm] fun scrollToStart () scrollToText [androidJvm] suspend fun scrollToText (text: Locator.Text ): Boolean sendAccessibilityEvent [androidJvm] open override fun sendAccessibilityEvent (p0: Int ) sendAccessibilityEventUnchecked [androidJvm] open override fun sendAccessibilityEventUnchecked (p0: AccessibilityEvent ) setAccessibilityDelegate [androidJvm] open fun setAccessibilityDelegate (p0: View.AccessibilityDelegate ?) setAccessibilityHeading [androidJvm] open fun setAccessibilityHeading (p0: Boolean ) setAccessibilityLiveRegion [androidJvm] open fun setAccessibilityLiveRegion (p0: Int ) setAccessibilityPaneTitle [androidJvm] open fun setAccessibilityPaneTitle (p0: CharSequence ?) setAccessibilityTraversalAfter [androidJvm] open fun setAccessibilityTraversalAfter (p0: Int ) setAccessibilityTraversalBefore [androidJvm] open fun setAccessibilityTraversalBefore (p0: Int ) setActivated [androidJvm] open fun setActivated (p0: Boolean ) setAddStatesFromChildren [androidJvm] open fun setAddStatesFromChildren (p0: Boolean ) setAllowClickWhenDisabled [androidJvm] open fun setAllowClickWhenDisabled (p0: Boolean ) setAlpha [androidJvm] open fun setAlpha (p0: Float ) setAnimation [androidJvm] open fun setAnimation (p0: Animation ) setAnimationMatrix [androidJvm] open fun setAnimationMatrix (p0: Matrix ?) setAutofillHints [androidJvm] open fun setAutofillHints (vararg p0: String ) setAutofillId [androidJvm] open fun setAutofillId (p0: AutofillId ?) setBackground [androidJvm] open fun setBackground (p0: Drawable ) setBackgroundColor [androidJvm] open override fun setBackgroundColor (p0: Int ) setBackgroundResource [androidJvm] open fun setBackgroundResource (p0: Int ) setBackgroundTintBlendMode [androidJvm] open fun setBackgroundTintBlendMode (p0: BlendMode ?) setBackgroundTintList [androidJvm] open fun setBackgroundTintList (p0: ColorStateList ?) setBackgroundTintMode [androidJvm] open fun setBackgroundTintMode (p0: PorterDuff.Mode ?) setBottom [androidJvm] fun setBottom (p0: Int ) setCameraDistance [androidJvm] open fun setCameraDistance (p0: Float ) setChildrenDrawingOrderEnabled [androidJvm] open fun setChildrenDrawingOrderEnabled (p0: Boolean ) setClickable [androidJvm] open fun setClickable (p0: Boolean ) setClipBounds [androidJvm] open fun setClipBounds (p0: Rect ) setClipChildren [androidJvm] open fun setClipChildren (p0: Boolean ) setClipToOutline [androidJvm] open fun setClipToOutline (p0: Boolean ) setClipToPadding [androidJvm] open fun setClipToPadding (p0: Boolean ) setContentCaptureSession [androidJvm] open fun setContentCaptureSession (p0: ContentCaptureSession ?) setContentDescription [androidJvm] open fun setContentDescription (p0: CharSequence ) setContextClickable [androidJvm] open fun setContextClickable (p0: Boolean ) setCurrentItem [androidJvm] fun setCurrentItem (item: Int , smoothScroll: Boolean ) Set the currently selected page. setDefaultFocusHighlightEnabled [androidJvm] open fun setDefaultFocusHighlightEnabled (p0: Boolean ) setDescendantFocusability [androidJvm] open fun setDescendantFocusability (p0: Int ) setDownloadListener [androidJvm] open fun setDownloadListener (p0: DownloadListener ?) setDuplicateParentStateEnabled [androidJvm] open fun setDuplicateParentStateEnabled (p0: Boolean ) setElevation [androidJvm] open fun setElevation (p0: Float ) setEnabled [androidJvm] open fun setEnabled (p0: Boolean ) setFadingEdgeLength [androidJvm] open fun setFadingEdgeLength (p0: Int ) setFilterTouchesWhenObscured [androidJvm] open fun setFilterTouchesWhenObscured (p0: Boolean ) setFindListener [androidJvm] open fun setFindListener (p0: WebView.FindListener ?) setFitsSystemWindows [androidJvm] open fun setFitsSystemWindows (p0: Boolean ) setFocusable [androidJvm] open fun setFocusable (p0: Boolean ) open fun setFocusable (p0: Int ) setFocusableInTouchMode [androidJvm] open fun setFocusableInTouchMode (p0: Boolean ) setFocusedByDefault [androidJvm] open fun setFocusedByDefault (p0: Boolean ) setForceDarkAllowed [androidJvm] open fun setForceDarkAllowed (p0: Boolean ) setForeground [androidJvm] open fun setForeground (p0: Drawable ) setForegroundGravity [androidJvm] open fun setForegroundGravity (p0: Int ) setForegroundTintBlendMode [androidJvm] open fun setForegroundTintBlendMode (p0: BlendMode ?) setForegroundTintList [androidJvm] open fun setForegroundTintList (p0: ColorStateList ?) setForegroundTintMode [androidJvm] open fun setForegroundTintMode (p0: PorterDuff.Mode ?) setHapticFeedbackEnabled [androidJvm] open fun setHapticFeedbackEnabled (p0: Boolean ) setHasTransientState [androidJvm] open fun setHasTransientState (p0: Boolean ) setHorizontalFadingEdgeEnabled [androidJvm] open fun setHorizontalFadingEdgeEnabled (p0: Boolean ) setHorizontalScrollBarEnabled [androidJvm] open fun setHorizontalScrollBarEnabled (p0: Boolean ) setHorizontalScrollbarThumbDrawable [androidJvm] open fun setHorizontalScrollbarThumbDrawable (p0: Drawable ?) setHorizontalScrollbarTrackDrawable [androidJvm] open fun setHorizontalScrollbarTrackDrawable (p0: Drawable ?) setHovered [androidJvm] open fun setHovered (p0: Boolean ) setId [androidJvm] open fun setId (p0: Int ) setImportantForAccessibility [androidJvm] open fun setImportantForAccessibility (p0: Int ) setImportantForAutofill [androidJvm] open fun setImportantForAutofill (p0: Int ) setImportantForContentCapture [androidJvm] open fun setImportantForContentCapture (p0: Int ) setInitialScale [androidJvm] open fun setInitialScale (p0: Int ) setKeepScreenOn [androidJvm] open fun setKeepScreenOn (p0: Boolean ) setKeyboardNavigationCluster [androidJvm] open fun setKeyboardNavigationCluster (p0: Boolean ) setLabelFor [androidJvm] open fun setLabelFor (p0: Int ) setLayerPaint [androidJvm] open fun setLayerPaint (p0: Paint ?) setLayerType [androidJvm] open override fun setLayerType (p0: Int , p1: Paint ?) setLayoutAnimation [androidJvm] open fun setLayoutAnimation (p0: LayoutAnimationController ) setLayoutAnimationListener [androidJvm] open fun setLayoutAnimationListener (p0: Animation.AnimationListener ) setLayoutDirection [androidJvm] open fun setLayoutDirection (p0: Int ) setLayoutMode [androidJvm] open fun setLayoutMode (p0: Int ) setLayoutParams [androidJvm] open override fun setLayoutParams (p0: ViewGroup.LayoutParams ) setLayoutTransition [androidJvm] open fun setLayoutTransition (p0: LayoutTransition ) setLeft [androidJvm] fun setLeft (p0: Int ) setLeftTopRightBottom [androidJvm] fun setLeftTopRightBottom (p0: Int , p1: Int , p2: Int , p3: Int ) setLongClickable [androidJvm] open fun setLongClickable (p0: Boolean ) setMeasuredDimension [androidJvm] fun setMeasuredDimension (p0: Int , p1: Int ) setMinimumHeight [androidJvm] open fun setMinimumHeight (p0: Int ) setMinimumWidth [androidJvm] open fun setMinimumWidth (p0: Int ) setMotionEventSplittingEnabled [androidJvm] open fun setMotionEventSplittingEnabled (p0: Boolean ) setNestedScrollingEnabled [androidJvm] open fun setNestedScrollingEnabled (p0: Boolean ) setNetworkAvailable [androidJvm] open fun setNetworkAvailable (p0: Boolean ) setNextClusterForwardId [androidJvm] open fun setNextClusterForwardId (p0: Int ) setNextFocusDownId [androidJvm] open fun setNextFocusDownId (p0: Int ) setNextFocusForwardId [androidJvm] open fun setNextFocusForwardId (p0: Int ) setNextFocusLeftId [androidJvm] open fun setNextFocusLeftId (p0: Int ) setNextFocusRightId [androidJvm] open fun setNextFocusRightId (p0: Int ) setNextFocusUpId [androidJvm] open fun setNextFocusUpId (p0: Int ) setOnApplyWindowInsetsListener [androidJvm] open fun setOnApplyWindowInsetsListener (p0: View.OnApplyWindowInsetsListener ) setOnCapturedPointerListener [androidJvm] open fun setOnCapturedPointerListener (p0: View.OnCapturedPointerListener ) setOnClickListener [androidJvm] open fun setOnClickListener (p0: View.OnClickListener ?) setOnContextClickListener [androidJvm] open fun setOnContextClickListener (p0: View.OnContextClickListener ?) setOnCreateContextMenuListener [androidJvm] open fun setOnCreateContextMenuListener (p0: View.OnCreateContextMenuListener ) setOnDragListener [androidJvm] open fun setOnDragListener (p0: View.OnDragListener ) setOnFocusChangeListener [androidJvm] open fun setOnFocusChangeListener (p0: View.OnFocusChangeListener ) setOnGenericMotionListener [androidJvm] open fun setOnGenericMotionListener (p0: View.OnGenericMotionListener ) setOnHierarchyChangeListener [androidJvm] open fun setOnHierarchyChangeListener (p0: ViewGroup.OnHierarchyChangeListener ) setOnHoverListener [androidJvm] open fun setOnHoverListener (p0: View.OnHoverListener ) setOnKeyListener [androidJvm] open fun setOnKeyListener (p0: View.OnKeyListener ) setOnLongClickListener [androidJvm] open fun setOnLongClickListener (p0: View.OnLongClickListener ?) setOnOverScrolledCallback [androidJvm] fun setOnOverScrolledCallback (callback: R2BasicWebView.OnOverScrolledCallback ) setOnReceiveContentListener [androidJvm] open fun setOnReceiveContentListener (p0: Array < String >?, p1: OnReceiveContentListener ?) setOnScrollChangeListener [androidJvm] open fun setOnScrollChangeListener (p0: View.OnScrollChangeListener ) setOnTouchListener [androidJvm] open fun setOnTouchListener (p0: View.OnTouchListener ) setOutlineAmbientShadowColor [androidJvm] open fun setOutlineAmbientShadowColor (p0: Int ) setOutlineProvider [androidJvm] open fun setOutlineProvider (p0: ViewOutlineProvider ) setOutlineSpotShadowColor [androidJvm] open fun setOutlineSpotShadowColor (p0: Int ) setOverScrollMode [androidJvm] open override fun setOverScrollMode (p0: Int ) setPadding [androidJvm] open fun setPadding (p0: Int , p1: Int , p2: Int , p3: Int ) setPaddingRelative [androidJvm] open fun setPaddingRelative (p0: Int , p1: Int , p2: Int , p3: Int ) setPivotX [androidJvm] open fun setPivotX (p0: Float ) setPivotY [androidJvm] open fun setPivotY (p0: Float ) setPointerIcon [androidJvm] open fun setPointerIcon (p0: PointerIcon ) setPressed [androidJvm] open fun setPressed (p0: Boolean ) setProperty [androidJvm] fun setProperty (key: String , value: String ) setRenderEffect [androidJvm] open fun setRenderEffect (p0: RenderEffect ?) setRendererPriorityPolicy [androidJvm] open fun setRendererPriorityPolicy (p0: Int , p1: Boolean ) setRevealOnFocusHint [androidJvm] fun setRevealOnFocusHint (p0: Boolean ) setRight [androidJvm] fun setRight (p0: Int ) setRotation [androidJvm] open fun setRotation (p0: Float ) setRotationX [androidJvm] open fun setRotationX (p0: Float ) setRotationY [androidJvm] open fun setRotationY (p0: Float ) setSaveEnabled [androidJvm] open fun setSaveEnabled (p0: Boolean ) setSaveFromParentEnabled [androidJvm] open fun setSaveFromParentEnabled (p0: Boolean ) setScaleX [androidJvm] open fun setScaleX (p0: Float ) setScaleY [androidJvm] open fun setScaleY (p0: Float ) setScreenReaderFocusable [androidJvm] open fun setScreenReaderFocusable (p0: Boolean ) setScrollBarDefaultDelayBeforeFade [androidJvm] open fun setScrollBarDefaultDelayBeforeFade (p0: Int ) setScrollBarFadeDuration [androidJvm] open fun setScrollBarFadeDuration (p0: Int ) setScrollbarFadingEnabled [androidJvm] open fun setScrollbarFadingEnabled (p0: Boolean ) setScrollBarSize [androidJvm] open fun setScrollBarSize (p0: Int ) setScrollBarStyle [androidJvm] open override fun setScrollBarStyle (p0: Int ) setScrollCaptureCallback [androidJvm] fun setScrollCaptureCallback (p0: ScrollCaptureCallback ?) setScrollCaptureHint [androidJvm] open fun setScrollCaptureHint (p0: Int ) setScrollContainer [androidJvm] open fun setScrollContainer (p0: Boolean ) setScrollIndicators [androidJvm] open fun setScrollIndicators (p0: Int ) open fun setScrollIndicators (p0: Int , p1: Int ) setScrollMode [androidJvm] fun setScrollMode (scrollMode: Boolean ) setScrollX [androidJvm] open fun setScrollX (p0: Int ) setScrollY [androidJvm] open fun setScrollY (p0: Int ) setSelected [androidJvm] open fun setSelected (p0: Boolean ) setSoundEffectsEnabled [androidJvm] open fun setSoundEffectsEnabled (p0: Boolean ) setStateDescription [androidJvm] open fun setStateDescription (p0: CharSequence ?) setStateListAnimator [androidJvm] open fun setStateListAnimator (p0: StateListAnimator ) setStaticTransformationsEnabled [androidJvm] open fun setStaticTransformationsEnabled (p0: Boolean ) setSystemGestureExclusionRects [androidJvm] open fun setSystemGestureExclusionRects (p0: MutableList < Rect >) setTag [androidJvm] open fun setTag (p0: Any ) open fun setTag (p0: Int , p1: Any ) setTextAlignment [androidJvm] open fun setTextAlignment (p0: Int ) setTextClassifier [androidJvm] open fun setTextClassifier (p0: TextClassifier ?) setTextDirection [androidJvm] open fun setTextDirection (p0: Int ) setTooltipText [androidJvm] open fun setTooltipText (p0: CharSequence ?) setTop [androidJvm] fun setTop (p0: Int ) setTouchDelegate [androidJvm] open fun setTouchDelegate (p0: TouchDelegate ) setTouchscreenBlocksFocus [androidJvm] open fun setTouchscreenBlocksFocus (p0: Boolean ) setTransitionAlpha [androidJvm] open fun setTransitionAlpha (p0: Float ) setTransitionGroup [androidJvm] open fun setTransitionGroup (p0: Boolean ) setTransitionName [androidJvm] fun setTransitionName (p0: String ) setTransitionVisibility [androidJvm] open fun setTransitionVisibility (p0: Int ) setTranslationX [androidJvm] open fun setTranslationX (p0: Float ) setTranslationY [androidJvm] open fun setTranslationY (p0: Float ) setTranslationZ [androidJvm] open fun setTranslationZ (p0: Float ) setVerticalFadingEdgeEnabled [androidJvm] open fun setVerticalFadingEdgeEnabled (p0: Boolean ) setVerticalScrollBarEnabled [androidJvm] open fun setVerticalScrollBarEnabled (p0: Boolean ) setVerticalScrollbarPosition [androidJvm] open fun setVerticalScrollbarPosition (p0: Int ) setVerticalScrollbarThumbDrawable [androidJvm] open fun setVerticalScrollbarThumbDrawable (p0: Drawable ?) setVerticalScrollbarTrackDrawable [androidJvm] open fun setVerticalScrollbarTrackDrawable (p0: Drawable ?) setViewTranslationCallback [androidJvm] open fun setViewTranslationCallback (p0: ViewTranslationCallback ) setVisibility [androidJvm] open fun setVisibility (p0: Int ) setWebChromeClient [androidJvm] open fun setWebChromeClient (p0: WebChromeClient ?) setWebViewClient [androidJvm] open fun setWebViewClient (p0: WebViewClient ) setWebViewRenderProcessClient [androidJvm] open fun setWebViewRenderProcessClient (p0: WebViewRenderProcessClient ?) open fun setWebViewRenderProcessClient (p0: Executor , p1: WebViewRenderProcessClient ) setWillNotDraw [androidJvm] open fun setWillNotDraw (p0: Boolean ) setWindowInsetsAnimationCallback [androidJvm] open override fun setWindowInsetsAnimationCallback (p0: WindowInsetsAnimation.Callback ?) setX [androidJvm] open fun setX (p0: Float ) setY [androidJvm] open fun setY (p0: Float ) setZ [androidJvm] open fun setZ (p0: Float ) showContextMenu [androidJvm] open fun showContextMenu (): Boolean open fun showContextMenu (p0: Float , p1: Float ): Boolean showContextMenuForChild [androidJvm] open override fun showContextMenuForChild (p0: View ): Boolean open override fun showContextMenuForChild (p0: View , p1: Float , p2: Float ): Boolean startActionMode [androidJvm] open override fun startActionMode (callback: ActionMode.Callback ?): ActionMode ? @ RequiresApi (value = 23) open override fun startActionMode (callback: ActionMode.Callback ?, type: Int ): ActionMode ? startActionModeForChild [androidJvm] open override fun startActionModeForChild (p0: View , p1: ActionMode.Callback ): ActionMode open override fun startActionModeForChild (p0: View , p1: ActionMode.Callback , p2: Int ): ActionMode startAnimation [androidJvm] open fun startAnimation (p0: Animation ) startDragAndDrop [androidJvm] fun startDragAndDrop (p0: ClipData , p1: View.DragShadowBuilder , p2: Any , p3: Int ): Boolean startLayoutAnimation [androidJvm] open fun startLayoutAnimation () startNestedScroll [androidJvm] open fun startNestedScroll (p0: Int ): Boolean startViewTransition [androidJvm] open fun startViewTransition (p0: View ) stopLoading [androidJvm] open fun stopLoading () stopNestedScroll [androidJvm] open fun stopNestedScroll () suppressLayout [androidJvm] open fun suppressLayout (p0: Boolean ) toInt [androidJvm] fun Boolean . toInt (): Int toString [androidJvm] open override fun toString (): String transformMatrixToGlobal [androidJvm] open fun transformMatrixToGlobal (p0: Matrix ) transformMatrixToLocal [androidJvm] open fun transformMatrixToLocal (p0: Matrix ) unscheduleDrawable [androidJvm] open fun unscheduleDrawable (p0: Drawable ) open override fun unscheduleDrawable (p0: Drawable , p1: Runnable ) updateDragShadow [androidJvm] fun updateDragShadow (p0: View.DragShadowBuilder ) updateViewLayout [androidJvm] open override fun updateViewLayout (p0: View , p1: ViewGroup.LayoutParams ) verifyDrawable [androidJvm] open fun verifyDrawable (p0: Drawable ): Boolean willNotDraw [androidJvm] open fun willNotDraw (): Boolean zoomBy [androidJvm] open fun zoomBy (p0: Float ) zoomIn [androidJvm] open fun zoomIn (): Boolean zoomOut [androidJvm] open fun zoomOut (): Boolean","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/#properties","text":"Name Summary callback [androidJvm] var callback : R2BasicWebView.OnOverScrolledCallback ? = null listener [androidJvm] lateinit var listener : R2BasicWebView.Listener navigator [androidJvm] lateinit var navigator : Navigator progression [androidJvm] val progression : Double Computes the current progression in the resource. resourceUrl [androidJvm] var resourceUrl : String ? = null scrollMode [androidJvm] val scrollMode : Boolean","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/-r2-web-view/","text":"// navigator / org.readium.r2.navigator / R2WebView / R2WebView R2WebView \u00b6 [androidJvm]\\ fun R2WebView (context: Context , attrs: AttributeSet )","title":" r2 web view"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/-r2-web-view/#r2webview","text":"[androidJvm]\\ fun R2WebView (context: Context , attrs: AttributeSet )","title":"R2WebView"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/compute-scroll/","text":"// navigator / org.readium.r2.navigator / R2WebView / computeScroll computeScroll \u00b6 [androidJvm]\\ open override fun computeScroll ()","title":"Compute scroll"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/compute-scroll/#computescroll","text":"[androidJvm]\\ open override fun computeScroll ()","title":"computeScroll"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/dispatch-key-event/","text":"// navigator / org.readium.r2.navigator / R2WebView / dispatchKeyEvent dispatchKeyEvent \u00b6 [androidJvm]\\ open override fun dispatchKeyEvent (event: KeyEvent ): Boolean","title":"Dispatch key event"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/dispatch-key-event/#dispatchkeyevent","text":"[androidJvm]\\ open override fun dispatchKeyEvent (event: KeyEvent ): Boolean","title":"dispatchKeyEvent"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/get-content-height/","text":"// navigator / org.readium.r2.navigator / R2WebView / getContentHeight getContentHeight \u00b6 [androidJvm]\\ open override fun getContentHeight (): Int","title":"Get content height"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/get-content-height/#getcontentheight","text":"[androidJvm]\\ open override fun getContentHeight (): Int","title":"getContentHeight"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/on-touch-event/","text":"// navigator / org.readium.r2.navigator / R2WebView / onTouchEvent onTouchEvent \u00b6 [androidJvm]\\ open override fun onTouchEvent (ev: MotionEvent ): Boolean","title":"On touch event"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/on-touch-event/#ontouchevent","text":"[androidJvm]\\ open override fun onTouchEvent (ev: MotionEvent ): Boolean","title":"onTouchEvent"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/scroll-left/","text":"// navigator / org.readium.r2.navigator / R2WebView / scrollLeft scrollLeft \u00b6 [androidJvm]\\ open override fun scrollLeft (animated: Boolean )","title":"Scroll left"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/scroll-left/#scrollleft","text":"[androidJvm]\\ open override fun scrollLeft (animated: Boolean )","title":"scrollLeft"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/scroll-right/","text":"// navigator / org.readium.r2.navigator / R2WebView / scrollRight scrollRight \u00b6 [androidJvm]\\ open override fun scrollRight (animated: Boolean )","title":"Scroll right"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/scroll-right/#scrollright","text":"[androidJvm]\\ open override fun scrollRight (animated: Boolean )","title":"scrollRight"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/set-current-item/","text":"// navigator / org.readium.r2.navigator / R2WebView / setCurrentItem setCurrentItem \u00b6 [androidJvm]\\ fun setCurrentItem (item: Int , smoothScroll: Boolean ) Set the currently selected page. Parameters \u00b6 androidJvm item Item index to select smoothScroll True to smoothly scroll to the new item, false to transition immediately","title":"Set current item"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/set-current-item/#setcurrentitem","text":"[androidJvm]\\ fun setCurrentItem (item: Int , smoothScroll: Boolean ) Set the currently selected page.","title":"setCurrentItem"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/set-current-item/#parameters","text":"androidJvm item Item index to select smoothScroll True to smoothly scroll to the new item, false to transition immediately","title":"Parameters"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/-layout-params/","text":"// navigator / org.readium.r2.navigator / R2WebView / LayoutParams LayoutParams \u00b6 [androidJvm]\\ class LayoutParams : ViewGroup.LayoutParams Layout parameters that should be supplied for views added to a ViewPager. Constructors \u00b6 LayoutParams [androidJvm] fun LayoutParams () LayoutParams [androidJvm] fun LayoutParams (context: Context , attrs: AttributeSet ) Functions \u00b6 Name Summary resolveLayoutDirection [androidJvm] open fun resolveLayoutDirection (p0: Int ) setBaseAttributes [androidJvm] open fun setBaseAttributes (p0: TypedArray , p1: Int , p2: Int ) Properties \u00b6 Name Summary gravity [androidJvm] var gravity : Int = 0 Gravity setting for use on decor views only: Where to position the view page within the overall ViewPager container; constants are defined in android.view.Gravity . height [androidJvm] val height : Int isDecor [androidJvm] var isDecor : Boolean = false true if this view is a decoration on the pager itself and not a view supplied by the adapter. layoutAnimationParameters [androidJvm] val layoutAnimationParameters : LayoutAnimationController.AnimationParameters width [androidJvm] val width : Int","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/-layout-params/#layoutparams","text":"[androidJvm]\\ class LayoutParams : ViewGroup.LayoutParams Layout parameters that should be supplied for views added to a ViewPager.","title":"LayoutParams"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/-layout-params/#constructors","text":"LayoutParams [androidJvm] fun LayoutParams () LayoutParams [androidJvm] fun LayoutParams (context: Context , attrs: AttributeSet )","title":"Constructors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/-layout-params/#functions","text":"Name Summary resolveLayoutDirection [androidJvm] open fun resolveLayoutDirection (p0: Int ) setBaseAttributes [androidJvm] open fun setBaseAttributes (p0: TypedArray , p1: Int , p2: Int )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/-layout-params/#properties","text":"Name Summary gravity [androidJvm] var gravity : Int = 0 Gravity setting for use on decor views only: Where to position the view page within the overall ViewPager container; constants are defined in android.view.Gravity . height [androidJvm] val height : Int isDecor [androidJvm] var isDecor : Boolean = false true if this view is a decoration on the pager itself and not a view supplied by the adapter. layoutAnimationParameters [androidJvm] val layoutAnimationParameters : LayoutAnimationController.AnimationParameters width [androidJvm] val width : Int","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/-layout-params/-layout-params/","text":"// navigator / org.readium.r2.navigator / R2WebView / LayoutParams / LayoutParams LayoutParams \u00b6 [androidJvm]\\ fun LayoutParams () fun LayoutParams (context: Context , attrs: AttributeSet )","title":" layout params"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/-layout-params/-layout-params/#layoutparams","text":"[androidJvm]\\ fun LayoutParams () fun LayoutParams (context: Context , attrs: AttributeSet )","title":"LayoutParams"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/-layout-params/gravity/","text":"// navigator / org.readium.r2.navigator / R2WebView / LayoutParams / gravity gravity \u00b6 [androidJvm]\\ var gravity : Int = 0 Gravity setting for use on decor views only: Where to position the view page within the overall ViewPager container; constants are defined in android.view.Gravity .","title":"Gravity"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/-layout-params/gravity/#gravity","text":"[androidJvm]\\ var gravity : Int = 0 Gravity setting for use on decor views only: Where to position the view page within the overall ViewPager container; constants are defined in android.view.Gravity .","title":"gravity"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/-layout-params/is-decor/","text":"// navigator / org.readium.r2.navigator / R2WebView / LayoutParams / isDecor isDecor \u00b6 [androidJvm]\\ var isDecor : Boolean = false true if this view is a decoration on the pager itself and not a view supplied by the adapter.","title":"Is decor"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-r2-web-view/-layout-params/is-decor/#isdecor","text":"[androidJvm]\\ var isDecor : Boolean = false true if this view is a decoration on the pager itself and not a view supplied by the adapter.","title":"isDecor"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-selectable-navigator/","text":"// navigator / org.readium.r2.navigator / SelectableNavigator SelectableNavigator \u00b6 [androidJvm]\\ interface SelectableNavigator : Navigator A navigator supporting user selection. Functions \u00b6 Name Summary clearSelection [androidJvm] abstract fun clearSelection () Clears the current selection. currentSelection [androidJvm] abstract suspend fun currentSelection (): Selection ? Currently selected content. go [androidJvm] abstract fun go (link: Link , animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the position in the publication targeted by the given link. [androidJvm] abstract fun go (locator: Locator , animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the position in the publication corresponding to the given Locator . goBackward [androidJvm] abstract fun goBackward (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the previous content portion (eg. page) in the reading progression direction. goForward [androidJvm] abstract fun goForward (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the next content portion (eg. page) in the reading progression direction. Properties \u00b6 Name Summary currentLocator [androidJvm] abstract val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position. publication [androidJvm] abstract val publication : Publication Publication rendered by this navigator. Inheritors \u00b6 Name EpubNavigatorFragment","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-selectable-navigator/#selectablenavigator","text":"[androidJvm]\\ interface SelectableNavigator : Navigator A navigator supporting user selection.","title":"SelectableNavigator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-selectable-navigator/#functions","text":"Name Summary clearSelection [androidJvm] abstract fun clearSelection () Clears the current selection. currentSelection [androidJvm] abstract suspend fun currentSelection (): Selection ? Currently selected content. go [androidJvm] abstract fun go (link: Link , animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the position in the publication targeted by the given link. [androidJvm] abstract fun go (locator: Locator , animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the position in the publication corresponding to the given Locator . goBackward [androidJvm] abstract fun goBackward (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the previous content portion (eg. page) in the reading progression direction. goForward [androidJvm] abstract fun goForward (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the next content portion (eg. page) in the reading progression direction.","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-selectable-navigator/#properties","text":"Name Summary currentLocator [androidJvm] abstract val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position. publication [androidJvm] abstract val publication : Publication Publication rendered by this navigator.","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-selectable-navigator/#inheritors","text":"Name EpubNavigatorFragment","title":"Inheritors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-selectable-navigator/clear-selection/","text":"// navigator / org.readium.r2.navigator / SelectableNavigator / clearSelection clearSelection \u00b6 [androidJvm]\\ abstract fun clearSelection () Clears the current selection.","title":"Clear selection"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-selectable-navigator/clear-selection/#clearselection","text":"[androidJvm]\\ abstract fun clearSelection () Clears the current selection.","title":"clearSelection"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-selectable-navigator/current-selection/","text":"// navigator / org.readium.r2.navigator / SelectableNavigator / currentSelection currentSelection \u00b6 [androidJvm]\\ abstract suspend fun currentSelection (): Selection ? Currently selected content.","title":"Current selection"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-selectable-navigator/current-selection/#currentselection","text":"[androidJvm]\\ abstract suspend fun currentSelection (): Selection ? Currently selected content.","title":"currentSelection"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-selection/","text":"// navigator / org.readium.r2.navigator / Selection Selection \u00b6 [androidJvm]\\ data class Selection (locator: Locator , rect: RectF ?) Represents a user content selection in a navigator. Parameters \u00b6 androidJvm locator Location of the user selection in the publication. rect Frame of the bounding rect for the selection, in the coordinate of the navigator view. This is only useful in the context of a VisualNavigator. Constructors \u00b6 Selection [androidJvm] fun Selection (locator: Locator , rect: RectF ?) Properties \u00b6 Name Summary locator [androidJvm] val locator : Locator rect [androidJvm] val rect : RectF ?","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-selection/#selection","text":"[androidJvm]\\ data class Selection (locator: Locator , rect: RectF ?) Represents a user content selection in a navigator.","title":"Selection"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-selection/#parameters","text":"androidJvm locator Location of the user selection in the publication. rect Frame of the bounding rect for the selection, in the coordinate of the navigator view. This is only useful in the context of a VisualNavigator.","title":"Parameters"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-selection/#constructors","text":"Selection [androidJvm] fun Selection (locator: Locator , rect: RectF ?)","title":"Constructors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-selection/#properties","text":"Name Summary locator [androidJvm] val locator : Locator rect [androidJvm] val rect : RectF ?","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-selection/-selection/","text":"// navigator / org.readium.r2.navigator / Selection / Selection Selection \u00b6 [androidJvm]\\ fun Selection (locator: Locator , rect: RectF ?) Parameters \u00b6 androidJvm locator Location of the user selection in the publication. rect Frame of the bounding rect for the selection, in the coordinate of the navigator view. This is only useful in the context of a VisualNavigator.","title":" selection"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-selection/-selection/#selection","text":"[androidJvm]\\ fun Selection (locator: Locator , rect: RectF ?)","title":"Selection"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-selection/-selection/#parameters","text":"androidJvm locator Location of the user selection in the publication. rect Frame of the bounding rect for the selection, in the coordinate of the navigator view. This is only useful in the context of a VisualNavigator.","title":"Parameters"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-selection/locator/","text":"// navigator / org.readium.r2.navigator / Selection / locator locator \u00b6 [androidJvm]\\ val locator : Locator","title":"Locator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-selection/locator/#locator","text":"[androidJvm]\\ val locator : Locator","title":"locator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-selection/rect/","text":"// navigator / org.readium.r2.navigator / Selection / rect rect \u00b6 [androidJvm]\\ val rect : RectF ?","title":"Rect"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-selection/rect/#rect","text":"[androidJvm]\\ val rect : RectF ?","title":"rect"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-visual-navigator/","text":"// navigator / org.readium.r2.navigator / VisualNavigator VisualNavigator \u00b6 [androidJvm]\\ interface VisualNavigator : Navigator A navigator rendering the publication visually on-screen. Types \u00b6 Name Summary Listener [androidJvm] interface Listener : Navigator.Listener Functions \u00b6 Name Summary go [androidJvm] abstract fun go (link: Link , animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the position in the publication targeted by the given link. [androidJvm] abstract fun go (locator: Locator , animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the position in the publication corresponding to the given Locator . goBackward [androidJvm] abstract fun goBackward (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the previous content portion (eg. page) in the reading progression direction. goForward [androidJvm] abstract fun goForward (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the next content portion (eg. page) in the reading progression direction. Properties \u00b6 Name Summary currentLocator [androidJvm] abstract val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position. publication [androidJvm] abstract val publication : Publication Publication rendered by this navigator. readingProgression [androidJvm] abstract val readingProgression : ReadingProgression Current reading progression direction. Inheritors \u00b6 Name R2AudiobookActivity R2CbzActivity EpubNavigatorFragment R2EpubActivity ImageNavigatorFragment PdfNavigatorFragment Extensions \u00b6 Name Summary goLeft [androidJvm] fun VisualNavigator . goLeft (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the left content portion (eg. page) relative to the reading progression direction. goRight [androidJvm] fun VisualNavigator . goRight (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the right content portion (eg. page) relative to the reading progression direction.","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-visual-navigator/#visualnavigator","text":"[androidJvm]\\ interface VisualNavigator : Navigator A navigator rendering the publication visually on-screen.","title":"VisualNavigator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-visual-navigator/#types","text":"Name Summary Listener [androidJvm] interface Listener : Navigator.Listener","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-visual-navigator/#functions","text":"Name Summary go [androidJvm] abstract fun go (link: Link , animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the position in the publication targeted by the given link. [androidJvm] abstract fun go (locator: Locator , animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the position in the publication corresponding to the given Locator . goBackward [androidJvm] abstract fun goBackward (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the previous content portion (eg. page) in the reading progression direction. goForward [androidJvm] abstract fun goForward (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the next content portion (eg. page) in the reading progression direction.","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-visual-navigator/#properties","text":"Name Summary currentLocator [androidJvm] abstract val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position. publication [androidJvm] abstract val publication : Publication Publication rendered by this navigator. readingProgression [androidJvm] abstract val readingProgression : ReadingProgression Current reading progression direction.","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-visual-navigator/#inheritors","text":"Name R2AudiobookActivity R2CbzActivity EpubNavigatorFragment R2EpubActivity ImageNavigatorFragment PdfNavigatorFragment","title":"Inheritors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-visual-navigator/#extensions","text":"Name Summary goLeft [androidJvm] fun VisualNavigator . goLeft (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the left content portion (eg. page) relative to the reading progression direction. goRight [androidJvm] fun VisualNavigator . goRight (animated: Boolean = false, completion: () -> Unit = {}): Boolean Moves to the right content portion (eg. page) relative to the reading progression direction.","title":"Extensions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-visual-navigator/reading-progression/","text":"// navigator / org.readium.r2.navigator / VisualNavigator / readingProgression readingProgression \u00b6 [androidJvm]\\ abstract val readingProgression : ReadingProgression Current reading progression direction.","title":"Reading progression"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-visual-navigator/reading-progression/#readingprogression","text":"[androidJvm]\\ abstract val readingProgression : ReadingProgression Current reading progression direction.","title":"readingProgression"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-visual-navigator/-listener/","text":"// navigator / org.readium.r2.navigator / VisualNavigator / Listener Listener \u00b6 [androidJvm]\\ interface Listener : Navigator.Listener Functions \u00b6 Name Summary onTap [androidJvm] open fun onTap (point: PointF ): Boolean Called when the user tapped the content, but nothing handled the event internally (eg. by following an internal link). Inheritors \u00b6 Name R2DiViNaActivity EpubNavigatorFragment ImageNavigatorFragment PdfNavigatorFragment","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-visual-navigator/-listener/#listener","text":"[androidJvm]\\ interface Listener : Navigator.Listener","title":"Listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-visual-navigator/-listener/#functions","text":"Name Summary onTap [androidJvm] open fun onTap (point: PointF ): Boolean Called when the user tapped the content, but nothing handled the event internally (eg. by following an internal link).","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-visual-navigator/-listener/#inheritors","text":"Name R2DiViNaActivity EpubNavigatorFragment ImageNavigatorFragment PdfNavigatorFragment","title":"Inheritors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-visual-navigator/-listener/on-tap/","text":"// navigator / org.readium.r2.navigator / VisualNavigator / Listener / onTap onTap \u00b6 [androidJvm]\\ open fun onTap (point: PointF ): Boolean Called when the user tapped the content, but nothing handled the event internally (eg. by following an internal link). Can be used in the reading app to toggle the navigation bars, or switch to the previous/next page if the tapped occurred on the edges. The point is relative to the navigator's view.","title":"On tap"},{"location":"readium/navigator/navigator/org.readium.r2.navigator/-visual-navigator/-listener/on-tap/#ontap","text":"[androidJvm]\\ open fun onTap (point: PointF ): Boolean Called when the user tapped the content, but nothing handled the event internally (eg. by following an internal link). Can be used in the reading app to toggle the navigation bars, or switch to the previous/next page if the tapped occurred on the edges. The point is relative to the navigator's view.","title":"onTap"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/","text":"// navigator / org.readium.r2.navigator.audiobook Package org.readium.r2.navigator.audiobook \u00b6 Types \u00b6 Name Summary MediaPlayerCallback [androidJvm] interface MediaPlayerCallback R2AudiobookActivity [androidJvm] open class R2AudiobookActivity : AppCompatActivity , CoroutineScope, IR2Activity , MediaPlayerCallback , VisualNavigator R2MediaPlayer [androidJvm] class R2MediaPlayer (items: List < Link >, callback: MediaPlayerCallback ) : MediaPlayer.OnPreparedListener","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/#package-orgreadiumr2navigatoraudiobook","text":"","title":"Package org.readium.r2.navigator.audiobook"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/#types","text":"Name Summary MediaPlayerCallback [androidJvm] interface MediaPlayerCallback R2AudiobookActivity [androidJvm] open class R2AudiobookActivity : AppCompatActivity , CoroutineScope, IR2Activity , MediaPlayerCallback , VisualNavigator R2MediaPlayer [androidJvm] class R2MediaPlayer (items: List < Link >, callback: MediaPlayerCallback ) : MediaPlayer.OnPreparedListener","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-media-player-callback/","text":"// navigator / org.readium.r2.navigator.audiobook / MediaPlayerCallback MediaPlayerCallback \u00b6 [androidJvm]\\ interface MediaPlayerCallback Functions \u00b6 Name Summary onComplete [androidJvm] abstract fun onComplete (index: Int , currentPosition: Int , duration: Int ) onPrepared [androidJvm] abstract fun onPrepared () Inheritors \u00b6 Name R2AudiobookActivity","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-media-player-callback/#mediaplayercallback","text":"[androidJvm]\\ interface MediaPlayerCallback","title":"MediaPlayerCallback"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-media-player-callback/#functions","text":"Name Summary onComplete [androidJvm] abstract fun onComplete (index: Int , currentPosition: Int , duration: Int ) onPrepared [androidJvm] abstract fun onPrepared ()","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-media-player-callback/#inheritors","text":"Name R2AudiobookActivity","title":"Inheritors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-media-player-callback/on-complete/","text":"// navigator / org.readium.r2.navigator.audiobook / MediaPlayerCallback / onComplete onComplete \u00b6 [androidJvm]\\ abstract fun onComplete (index: Int , currentPosition: Int , duration: Int )","title":"On complete"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-media-player-callback/on-complete/#oncomplete","text":"[androidJvm]\\ abstract fun onComplete (index: Int , currentPosition: Int , duration: Int )","title":"onComplete"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-media-player-callback/on-prepared/","text":"// navigator / org.readium.r2.navigator.audiobook / MediaPlayerCallback / onPrepared onPrepared \u00b6 [androidJvm]\\ abstract fun onPrepared ()","title":"On prepared"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-media-player-callback/on-prepared/#onprepared","text":"[androidJvm]\\ abstract fun onPrepared ()","title":"onPrepared"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/","text":"// navigator / org.readium.r2.navigator.audiobook / R2AudiobookActivity R2AudiobookActivity \u00b6 [androidJvm]\\ open class R2AudiobookActivity : AppCompatActivity , CoroutineScope, IR2Activity , MediaPlayerCallback , VisualNavigator Functions \u00b6 Name Summary addContentView [androidJvm] open override fun addContentView (p0: View , p1: ViewGroup.LayoutParams ) addOnContextAvailableListener [androidJvm] override fun addOnContextAvailableListener (@ NonNull listener: OnContextAvailableListener ) applyOverrideConfiguration [androidJvm] open fun applyOverrideConfiguration (p0: Configuration ) attachBaseContext [androidJvm] open override fun attachBaseContext (p0: Context ) bindIsolatedService [androidJvm] open override fun bindIsolatedService (p0: Intent , p1: Int , p2: String , p3: Executor , p4: ServiceConnection ): Boolean bindService [androidJvm] open override fun bindService (p0: Intent , p1: ServiceConnection , p2: Int ): Boolean open override fun bindService (p0: Intent , p1: Int , p2: Executor , p3: ServiceConnection ): Boolean bindServiceAsUser [androidJvm] open override fun bindServiceAsUser (p0: Intent , p1: ServiceConnection , p2: Int , p3: UserHandle ): Boolean checkCallingOrSelfPermission [androidJvm] open override fun checkCallingOrSelfPermission (p0: String ): Int checkCallingOrSelfUriPermission [androidJvm] open override fun checkCallingOrSelfUriPermission (p0: Uri , p1: Int ): Int checkCallingOrSelfUriPermissions [androidJvm] open override fun checkCallingOrSelfUriPermissions (p0: MutableList < Uri >, p1: Int ): IntArray checkCallingPermission [androidJvm] open override fun checkCallingPermission (p0: String ): Int checkCallingUriPermission [androidJvm] open override fun checkCallingUriPermission (p0: Uri , p1: Int ): Int checkCallingUriPermissions [androidJvm] open override fun checkCallingUriPermissions (p0: MutableList < Uri >, p1: Int ): IntArray checkPermission [androidJvm] open override fun checkPermission (p0: String , p1: Int , p2: Int ): Int checkSelfPermission [androidJvm] open override fun checkSelfPermission (p0: String ): Int checkUriPermission [androidJvm] open override fun checkUriPermission (p0: Uri , p1: Int , p2: Int , p3: Int ): Int open override fun checkUriPermission (p0: Uri ?, p1: String ?, p2: String ?, p3: Int , p4: Int , p5: Int ): Int checkUriPermissions [androidJvm] open override fun checkUriPermissions (p0: MutableList < Uri >, p1: Int , p2: Int , p3: Int ): IntArray closeContextMenu [androidJvm] open fun closeContextMenu () closeOptionsMenu [androidJvm] open override fun closeOptionsMenu () createAttributionContext [androidJvm] open override fun createAttributionContext (p0: String ?): Context createConfigurationContext [androidJvm] open override fun createConfigurationContext (p0: Configuration ): Context createContext [androidJvm] open override fun createContext (p0: ContextParams ): Context createContextForSplit [androidJvm] open override fun createContextForSplit (p0: String ): Context createDeviceProtectedStorageContext [androidJvm] open override fun createDeviceProtectedStorageContext (): Context createDisplayContext [androidJvm] open override fun createDisplayContext (p0: Display ): Context createPackageContext [androidJvm] open override fun createPackageContext (p0: String , p1: Int ): Context createPendingResult [androidJvm] open fun createPendingResult (p0: Int , p1: Intent , p2: Int ): PendingIntent createWindowContext [androidJvm] open override fun createWindowContext (p0: Int , p1: Bundle ?): Context open override fun createWindowContext (p0: Display , p1: Int , p2: Bundle ?): Context databaseList [androidJvm] open override fun databaseList (): Array < String > deleteDatabase [androidJvm] open override fun deleteDatabase (p0: String ): Boolean deleteFile [androidJvm] open override fun deleteFile (p0: String ): Boolean deleteSharedPreferences [androidJvm] open override fun deleteSharedPreferences (p0: String ): Boolean dismissKeyboardShortcutsHelper [androidJvm] fun dismissKeyboardShortcutsHelper () dispatchFragmentsOnCreateView [androidJvm] @ Nullable fun dispatchFragmentsOnCreateView (@ Nullable p0: View ?, @ NonNull p1: String , @ NonNull p2: Context , @ NonNull p3: AttributeSet ): View ? dispatchGenericMotionEvent [androidJvm] open override fun dispatchGenericMotionEvent (p0: MotionEvent ): Boolean dispatchKeyEvent [androidJvm] open override fun dispatchKeyEvent (p0: KeyEvent ): Boolean dispatchKeyShortcutEvent [androidJvm] open override fun dispatchKeyShortcutEvent (event: KeyEvent ): Boolean dispatchPopulateAccessibilityEvent [androidJvm] open override fun dispatchPopulateAccessibilityEvent (p0: AccessibilityEvent ): Boolean dispatchTouchEvent [androidJvm] open override fun dispatchTouchEvent (p0: MotionEvent ): Boolean dispatchTrackballEvent [androidJvm] open override fun dispatchTrackballEvent (p0: MotionEvent ): Boolean dump [androidJvm] open override fun dump (@ NonNull p0: String , @ Nullable p1: FileDescriptor ?, @ NonNull p2: PrintWriter , @ Nullable p3: Array < String >?) enforceCallingOrSelfPermission [androidJvm] open override fun enforceCallingOrSelfPermission (p0: String , p1: String ?) enforceCallingOrSelfUriPermission [androidJvm] open override fun enforceCallingOrSelfUriPermission (p0: Uri , p1: Int , p2: String ) enforceCallingPermission [androidJvm] open override fun enforceCallingPermission (p0: String , p1: String ?) enforceCallingUriPermission [androidJvm] open override fun enforceCallingUriPermission (p0: Uri , p1: Int , p2: String ) enforcePermission [androidJvm] open override fun enforcePermission (p0: String , p1: Int , p2: Int , p3: String ?) enforceUriPermission [androidJvm] open override fun enforceUriPermission (p0: Uri , p1: Int , p2: Int , p3: Int , p4: String ) open override fun enforceUriPermission (p0: Uri ?, p1: String ?, p2: String ?, p3: Int , p4: Int , p5: Int , p6: String ?) ensureViewModelStore [androidJvm] open fun ensureViewModelStore () enterPictureInPictureMode [androidJvm] open fun enterPictureInPictureMode (p0: PictureInPictureParams ): Boolean fileList [androidJvm] open override fun fileList (): Array < String > findViewById [androidJvm] open override fun < T : View > findViewById (@ IdRes p0: Int ): T finish [androidJvm] open override fun finish () finishActivity [androidJvm] open fun finishActivity (p0: Int ) finishAffinity [androidJvm] open fun finishAffinity () finishAfterTransition [androidJvm] open fun finishAfterTransition () finishAndRemoveTask [androidJvm] open fun finishAndRemoveTask () getActionBar [androidJvm] open fun getActionBar (): ActionBar ? getActivityResultRegistry [androidJvm] @ NonNull override fun getActivityResultRegistry (): ActivityResultRegistry getApplication [androidJvm] fun getApplication (): Application getApplicationContext [androidJvm] open override fun getApplicationContext (): Context getApplicationInfo [androidJvm] open override fun getApplicationInfo (): ApplicationInfo getAssets [androidJvm] open override fun getAssets (): AssetManager getAttributionSource [androidJvm] open override fun getAttributionSource (): AttributionSource getAttributionTag [androidJvm] open override fun getAttributionTag (): String ? getBaseContext [androidJvm] open fun getBaseContext (): Context getCacheDir [androidJvm] open override fun getCacheDir (): File getCallingActivity [androidJvm] open fun getCallingActivity (): ComponentName ? getCallingPackage [androidJvm] open fun getCallingPackage (): String ? getChangingConfigurations [androidJvm] open fun getChangingConfigurations (): Int getClassLoader [androidJvm] open override fun getClassLoader (): ClassLoader getCodeCacheDir [androidJvm] open override fun getCodeCacheDir (): File getColor [androidJvm] fun getColor (p0: Int ): Int getColorStateList [androidJvm] fun getColorStateList (p0: Int ): ColorStateList getComponentName [androidJvm] open fun getComponentName (): ComponentName getContentResolver [androidJvm] open override fun getContentResolver (): ContentResolver getContentScene [androidJvm] open fun getContentScene (): Scene getContentTransitionManager [androidJvm] open fun getContentTransitionManager (): TransitionManager getCurrentFocus [androidJvm] open fun getCurrentFocus (): View ? getDatabasePath [androidJvm] open override fun getDatabasePath (p0: String ): File getDataDir [androidJvm] open override fun getDataDir (): File getDefaultViewModelProviderFactory [androidJvm] @ NonNull open override fun getDefaultViewModelProviderFactory (): ViewModelProvider.Factory getDelegate [androidJvm] @ NonNull open fun getDelegate (): AppCompatDelegate getDir [androidJvm] open override fun getDir (p0: String , p1: Int ): File getDisplay [androidJvm] open override fun getDisplay (): Display ? getDrawable [androidJvm] fun getDrawable (p0: Int ): Drawable ? getDrawerToggleDelegate [androidJvm] @ Nullable open override fun getDrawerToggleDelegate (): ActionBarDrawerToggle.Delegate ? getExternalCacheDir [androidJvm] open override fun getExternalCacheDir (): File ? getExternalCacheDirs [androidJvm] open override fun getExternalCacheDirs (): Array < File > getExternalFilesDir [androidJvm] open override fun getExternalFilesDir (p0: String ?): File ? getExternalFilesDirs [androidJvm] open override fun getExternalFilesDirs (p0: String ): Array < File > getExternalMediaDirs [androidJvm] open override fun getExternalMediaDirs (): Array < File > getFilesDir [androidJvm] open override fun getFilesDir (): File getFileStreamPath [androidJvm] open override fun getFileStreamPath (p0: String ): File getIntent [androidJvm] open fun getIntent (): Intent getLastNonConfigurationInstance [androidJvm] open fun getLastNonConfigurationInstance (): Any ? getLayoutInflater [androidJvm] open fun getLayoutInflater (): LayoutInflater getLifecycle [androidJvm] @ NonNull open override fun getLifecycle (): Lifecycle getLocalClassName [androidJvm] open fun getLocalClassName (): String getMainExecutor [androidJvm] open override fun getMainExecutor (): Executor getMainLooper [androidJvm] open override fun getMainLooper (): Looper getMaxNumPictureInPictureActions [androidJvm] open fun getMaxNumPictureInPictureActions (): Int getMediaController [androidJvm] fun getMediaController (): MediaController getMenuInflater [androidJvm] @ NonNull open override fun getMenuInflater (): MenuInflater getNoBackupFilesDir [androidJvm] open override fun getNoBackupFilesDir (): File getObbDir [androidJvm] open override fun getObbDir (): File getObbDirs [androidJvm] open override fun getObbDirs (): Array < File > getOnBackPressedDispatcher [androidJvm] @ NonNull override fun getOnBackPressedDispatcher (): OnBackPressedDispatcher getOpPackageName [androidJvm] open override fun getOpPackageName (): String getPackageCodePath [androidJvm] open override fun getPackageCodePath (): String getPackageManager [androidJvm] open override fun getPackageManager (): PackageManager getPackageName [androidJvm] open override fun getPackageName (): String getPackageResourcePath [androidJvm] open override fun getPackageResourcePath (): String getParams [androidJvm] open override fun getParams (): ContextParams ? getParent [androidJvm] fun getParent (): Activity getParentActivityIntent [androidJvm] open fun getParentActivityIntent (): Intent ? getPreferences [androidJvm] open fun getPreferences (p0: Int ): SharedPreferences getReferrer [androidJvm] open fun getReferrer (): Uri ? getRequestedOrientation [androidJvm] open fun getRequestedOrientation (): Int getResources [androidJvm] open override fun getResources (): Resources getSavedStateRegistry [androidJvm] @ NonNull override fun getSavedStateRegistry (): SavedStateRegistry getSearchEvent [androidJvm] fun getSearchEvent (): SearchEvent getSharedPreferences [androidJvm] open override fun getSharedPreferences (p0: String , p1: Int ): SharedPreferences getSplashScreen [androidJvm] fun getSplashScreen (): SplashScreen getString [androidJvm] fun getString (p0: Int ): String fun getString (p0: Int , vararg p1: Any ): String getSupportActionBar [androidJvm] @ Nullable open fun getSupportActionBar (): ActionBar ? getSupportFragmentManager [androidJvm] @ NonNull open fun getSupportFragmentManager (): FragmentManager getSupportParentActivityIntent [androidJvm] @ Nullable open override fun getSupportParentActivityIntent (): Intent ? getSystemService [androidJvm] open override fun getSystemService (p0: String ): Any fun < T : Any > getSystemService (p0: Class < T >): T getSystemServiceName [androidJvm] open override fun getSystemServiceName (p0: Class <*>): String ? getTaskId [androidJvm] open fun getTaskId (): Int getText [androidJvm] fun getText (p0: Int ): CharSequence getTheme [androidJvm] open override fun getTheme (): Resources.Theme getTitle [androidJvm] fun getTitle (): CharSequence getTitleColor [androidJvm] fun getTitleColor (): Int getViewModelStore [androidJvm] @ NonNull open override fun getViewModelStore (): ViewModelStore getVoiceInteractor [androidJvm] open fun getVoiceInteractor (): VoiceInteractor getVolumeControlStream [androidJvm] fun getVolumeControlStream (): Int getWindow [androidJvm] open fun getWindow (): Window getWindowManager [androidJvm] open fun getWindowManager (): WindowManager go [androidJvm] open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link. [androidJvm] open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . goBackward [androidJvm] open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction. goForward [androidJvm] open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction. grantUriPermission [androidJvm] open override fun grantUriPermission (p0: String , p1: Uri , p2: Int ) hasWindowFocus [androidJvm] open fun hasWindowFocus (): Boolean highlightActivated [androidJvm] open fun highlightActivated (id: String ) highlightAnnotationMarkActivated [androidJvm] open fun highlightAnnotationMarkActivated (id: String ) invalidateOptionsMenu [androidJvm] open override fun invalidateOptionsMenu () isActivityTransitionRunning [androidJvm] open fun isActivityTransitionRunning (): Boolean isChangingConfigurations [androidJvm] open fun isChangingConfigurations (): Boolean isChild [androidJvm] fun isChild (): Boolean isDestroyed [androidJvm] open fun isDestroyed (): Boolean isDeviceProtectedStorage [androidJvm] open override fun isDeviceProtectedStorage (): Boolean isFinishing [androidJvm] open fun isFinishing (): Boolean isImmersive [androidJvm] open fun isImmersive (): Boolean isInMultiWindowMode [androidJvm] open fun isInMultiWindowMode (): Boolean isInPictureInPictureMode [androidJvm] open fun isInPictureInPictureMode (): Boolean isLaunchedFromBubble [androidJvm] open fun isLaunchedFromBubble (): Boolean isLocalVoiceInteractionSupported [androidJvm] open fun isLocalVoiceInteractionSupported (): Boolean isRestricted [androidJvm] open override fun isRestricted (): Boolean isTaskRoot [androidJvm] open fun isTaskRoot (): Boolean isUiContext [androidJvm] open override fun isUiContext (): Boolean isVoiceInteraction [androidJvm] open fun isVoiceInteraction (): Boolean isVoiceInteractionRoot [androidJvm] open fun isVoiceInteractionRoot (): Boolean markFragmentsCreated [androidJvm] open fun markFragmentsCreated () moveDatabaseFrom [androidJvm] open override fun moveDatabaseFrom (p0: Context , p1: String ): Boolean moveSharedPreferencesFrom [androidJvm] open override fun moveSharedPreferencesFrom (p0: Context , p1: String ): Boolean moveTaskToBack [androidJvm] open fun moveTaskToBack (p0: Boolean ): Boolean navigateUpTo [androidJvm] open fun navigateUpTo (p0: Intent ): Boolean nextResource [androidJvm] open fun nextResource (v: View ? = null) obtainStyledAttributes [androidJvm] fun obtainStyledAttributes (p0: IntArray ): TypedArray fun obtainStyledAttributes (p0: AttributeSet ?, p1: IntArray ): TypedArray fun obtainStyledAttributes (p0: Int , p1: IntArray ): TypedArray fun obtainStyledAttributes (p0: AttributeSet ?, p1: IntArray , p2: Int , p3: Int ): TypedArray onActionModeFinished [androidJvm] open override fun onActionModeFinished (p0: ActionMode ) onActionModeStarted [androidJvm] open override fun onActionModeStarted (p0: ActionMode ) onActivityReenter [androidJvm] open fun onActivityReenter (p0: Int , p1: Intent ) onApplyThemeResource [androidJvm] open override fun onApplyThemeResource (p0: Resources.Theme , p1: Int , p2: Boolean ) onAttachedToWindow [androidJvm] open override fun onAttachedToWindow () onBackPressed [androidJvm] @ MainThread open override fun onBackPressed () onChildTitleChanged [androidJvm] open fun onChildTitleChanged (p0: Activity , p1: CharSequence ) onComplete [androidJvm] open override fun onComplete (index: Int , currentPosition: Int , duration: Int ) onConfigurationChanged [androidJvm] open override fun onConfigurationChanged (@ NonNull p0: Configuration ) onContentChanged [androidJvm] open override fun onContentChanged () onContextItemSelected [androidJvm] open fun onContextItemSelected (p0: MenuItem ): Boolean onContextMenuClosed [androidJvm] open fun onContextMenuClosed (p0: Menu ) onCreate [androidJvm] open fun onCreate (p0: Bundle ?, p1: PersistableBundle ?) onCreateContextMenu [androidJvm] open override fun onCreateContextMenu (p0: ContextMenu , p1: View , p2: ContextMenu.ContextMenuInfo ) onCreateDescription [androidJvm] open fun onCreateDescription (): CharSequence ? onCreateNavigateUpTaskStack [androidJvm] open fun onCreateNavigateUpTaskStack (p0: TaskStackBuilder ) onCreateOptionsMenu [androidJvm] open fun onCreateOptionsMenu (p0: Menu ): Boolean onCreatePanelMenu [androidJvm] open override fun onCreatePanelMenu (p0: Int , @ NonNull p1: Menu ): Boolean onCreatePanelView [androidJvm] open override fun onCreatePanelView (p0: Int ): View ? onCreateSupportNavigateUpTaskStack [androidJvm] open fun onCreateSupportNavigateUpTaskStack (@ NonNull p0: TaskStackBuilder ) onCreateView [androidJvm] @ Nullable open override fun onCreateView (@ NonNull p0: String , @ NonNull p1: Context , @ NonNull p2: AttributeSet ): View ? @ Nullable open override fun onCreateView (@ Nullable p0: View ?, @ NonNull p1: String , @ NonNull p2: Context , @ NonNull p3: AttributeSet ): View ? onDetachedFromWindow [androidJvm] open override fun onDetachedFromWindow () onEnterAnimationComplete [androidJvm] open fun onEnterAnimationComplete () onGenericMotionEvent [androidJvm] open fun onGenericMotionEvent (p0: MotionEvent ): Boolean onGetDirectActions [androidJvm] open fun onGetDirectActions (p0: CancellationSignal , p1: Consumer < MutableList < DirectAction >>) onKeyDown [androidJvm] open override fun onKeyDown (p0: Int , p1: KeyEvent ): Boolean onKeyLongPress [androidJvm] open override fun onKeyLongPress (p0: Int , p1: KeyEvent ): Boolean onKeyMultiple [androidJvm] open override fun onKeyMultiple (p0: Int , p1: Int , p2: KeyEvent ): Boolean onKeyShortcut [androidJvm] open fun onKeyShortcut (p0: Int , p1: KeyEvent ): Boolean onKeyUp [androidJvm] open override fun onKeyUp (p0: Int , p1: KeyEvent ): Boolean onLocalVoiceInteractionStarted [androidJvm] open fun onLocalVoiceInteractionStarted () onLocalVoiceInteractionStopped [androidJvm] open fun onLocalVoiceInteractionStopped () onLowMemory [androidJvm] open override fun onLowMemory () onMenuItemSelected [androidJvm] override fun onMenuItemSelected (p0: Int , @ NonNull p1: MenuItem ): Boolean onMenuOpened [androidJvm] open override fun onMenuOpened (p0: Int , p1: Menu ): Boolean onMultiWindowModeChanged [androidJvm] @ CallSuper open override fun onMultiWindowModeChanged (p0: Boolean ) open fun onMultiWindowModeChanged (p0: Boolean , p1: Configuration ) onNavigateUp [androidJvm] open fun onNavigateUp (): Boolean onNewIntent [androidJvm] @ CallSuper open override fun onNewIntent (p0: Intent ) onNightModeChanged [androidJvm] open fun onNightModeChanged (p0: Int ) onOptionsItemSelected [androidJvm] open fun onOptionsItemSelected (p0: MenuItem ): Boolean onOptionsMenuClosed [androidJvm] open fun onOptionsMenuClosed (p0: Menu ) onPageChanged [androidJvm] open fun onPageChanged (pageIndex: Int , totalPages: Int , url: String ) onPageEnded [androidJvm] open fun onPageEnded (end: Boolean ) onPageLoaded [androidJvm] open fun onPageLoaded () onPanelClosed [androidJvm] open override fun onPanelClosed (p0: Int , @ NonNull p1: Menu ) onPerformDirectAction [androidJvm] open fun onPerformDirectAction (p0: String , p1: Bundle , p2: CancellationSignal , p3: Consumer < Bundle >) onPictureInPictureModeChanged [androidJvm] @ CallSuper open override fun onPictureInPictureModeChanged (p0: Boolean ) open fun onPictureInPictureModeChanged (p0: Boolean , p1: Configuration ) onPictureInPictureRequested [androidJvm] open fun onPictureInPictureRequested (): Boolean onPictureInPictureUiStateChanged [androidJvm] open fun onPictureInPictureUiStateChanged (p0: PictureInPictureUiState ) onPointerCaptureChanged [androidJvm] open fun onPointerCaptureChanged (p0: Boolean ) onPostCreate [androidJvm] open override fun onPostCreate (@ Nullable p0: Bundle ?) open fun onPostCreate (p0: Bundle ?, p1: PersistableBundle ?) onPostResume [androidJvm] open override fun onPostResume () onPrepared [androidJvm] open override fun onPrepared () onPrepareNavigateUpTaskStack [androidJvm] open fun onPrepareNavigateUpTaskStack (p0: TaskStackBuilder ) onPrepareOptionsMenu [androidJvm] open fun onPrepareOptionsMenu (p0: Menu ): Boolean onPreparePanel [androidJvm] open override fun onPreparePanel (p0: Int , @ Nullable p1: View ?, @ NonNull p2: Menu ): Boolean onPrepareSupportNavigateUpTaskStack [androidJvm] open fun onPrepareSupportNavigateUpTaskStack (@ NonNull p0: TaskStackBuilder ) onProvideAssistContent [androidJvm] open fun onProvideAssistContent (p0: AssistContent ) onProvideAssistData [androidJvm] open fun onProvideAssistData (p0: Bundle ) onProvideKeyboardShortcuts [androidJvm] open override fun onProvideKeyboardShortcuts (p0: MutableList < KeyboardShortcutGroup >, p1: Menu ?, p2: Int ) onProvideReferrer [androidJvm] open fun onProvideReferrer (): Uri onRequestPermissionsResult [androidJvm] @ CallSuper open override fun onRequestPermissionsResult (p0: Int , @ NonNull p1: Array < String >, @ NonNull p2: IntArray ) onRestart [androidJvm] open fun onRestart () onRestoreInstanceState [androidJvm] open fun onRestoreInstanceState (p0: Bundle ) open fun onRestoreInstanceState (p0: Bundle ?, p1: PersistableBundle ?) onResumeFragments [androidJvm] open fun onResumeFragments () onRetainNonConfigurationInstance [androidJvm] @ Nullable override fun onRetainNonConfigurationInstance (): Any ? onSaveInstanceState [androidJvm] @ CallSuper open override fun onSaveInstanceState (@ NonNull outState: Bundle ) open fun onSaveInstanceState (p0: Bundle , p1: PersistableBundle ) onSearchRequested [androidJvm] open override fun onSearchRequested (): Boolean open override fun onSearchRequested (p0: SearchEvent ?): Boolean onStart [androidJvm] open override fun onStart () onStateNotSaved [androidJvm] open override fun onStateNotSaved () onSupportActionModeFinished [androidJvm] @ CallSuper open override fun onSupportActionModeFinished (@ NonNull p0: ActionMode ) onSupportActionModeStarted [androidJvm] @ CallSuper open override fun onSupportActionModeStarted (@ NonNull p0: ActionMode ) onSupportNavigateUp [androidJvm] open fun onSupportNavigateUp (): Boolean onTitleChanged [androidJvm] open override fun onTitleChanged (p0: CharSequence , p1: Int ) onTopResumedActivityChanged [androidJvm] open fun onTopResumedActivityChanged (p0: Boolean ) onTouchEvent [androidJvm] open fun onTouchEvent (p0: MotionEvent ): Boolean onTrackballEvent [androidJvm] open fun onTrackballEvent (p0: MotionEvent ): Boolean onTrimMemory [androidJvm] open override fun onTrimMemory (p0: Int ) onUserInteraction [androidJvm] open fun onUserInteraction () onUserLeaveHint [androidJvm] open fun onUserLeaveHint () onWindowAttributesChanged [androidJvm] open override fun onWindowAttributesChanged (p0: WindowManager.LayoutParams ) onWindowFocusChanged [androidJvm] open override fun onWindowFocusChanged (p0: Boolean ) onWindowStartingActionMode [androidJvm] open override fun onWindowStartingActionMode (p0: ActionMode.Callback ): ActionMode ? open override fun onWindowStartingActionMode (p0: ActionMode.Callback , p1: Int ): ActionMode ? onWindowStartingSupportActionMode [androidJvm] @ Nullable open override fun onWindowStartingSupportActionMode (@ NonNull p0: ActionMode.Callback ): ActionMode ? openContextMenu [androidJvm] open fun openContextMenu (p0: View ) openFileInput [androidJvm] open override fun openFileInput (p0: String ): FileInputStream openFileOutput [androidJvm] open override fun openFileOutput (p0: String , p1: Int ): FileOutputStream openOptionsMenu [androidJvm] open override fun openOptionsMenu () openOrCreateDatabase [androidJvm] open override fun openOrCreateDatabase (p0: String , p1: Int , p2: SQLiteDatabase.CursorFactory ): SQLiteDatabase open override fun openOrCreateDatabase (p0: String , p1: Int , p2: SQLiteDatabase.CursorFactory , p3: DatabaseErrorHandler ?): SQLiteDatabase overridePendingTransition [androidJvm] open fun overridePendingTransition (p0: Int , p1: Int ) peekAvailableContext [androidJvm] @ Nullable open override fun peekAvailableContext (): Context ? postponeEnterTransition [androidJvm] open fun postponeEnterTransition () previousResource [androidJvm] open fun previousResource (v: View ? = null) recreate [androidJvm] open fun recreate () registerActivityLifecycleCallbacks [androidJvm] open fun registerActivityLifecycleCallbacks (p0: Application.ActivityLifecycleCallbacks ) registerComponentCallbacks [androidJvm] open fun registerComponentCallbacks (p0: ComponentCallbacks ) registerForActivityResult [androidJvm] @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull contract: ActivityResultContract < I , O >, @ NonNull callback: ActivityResultCallback < O >): ActivityResultLauncher < I > @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull contract: ActivityResultContract < I , O >, @ NonNull registry: ActivityResultRegistry , @ NonNull callback: ActivityResultCallback < O >): ActivityResultLauncher < I > registerForContextMenu [androidJvm] open fun registerForContextMenu (p0: View ) registerReceiver [androidJvm] open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter ): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: Int ): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: String ?, p3: Handler ?): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: String ?, p3: Handler ?, p4: Int ): Intent ? releaseInstance [androidJvm] open fun releaseInstance (): Boolean removeOnContextAvailableListener [androidJvm] override fun removeOnContextAvailableListener (@ NonNull listener: OnContextAvailableListener ) reportFullyDrawn [androidJvm] open override fun reportFullyDrawn () requestDragAndDropPermissions [androidJvm] open fun requestDragAndDropPermissions (p0: DragEvent ): DragAndDropPermissions requestPermissions [androidJvm] fun requestPermissions (p0: Array < String >, p1: Int ) requestShowKeyboardShortcuts [androidJvm] fun requestShowKeyboardShortcuts () requestWindowFeature [androidJvm] fun requestWindowFeature (p0: Int ): Boolean requireViewById [androidJvm] fun < T : View > requireViewById (p0: Int ): T revokeUriPermission [androidJvm] open override fun revokeUriPermission (p0: Uri , p1: Int ) open override fun revokeUriPermission (p0: String , p1: Uri , p2: Int ) runOnUiThread [androidJvm] fun runOnUiThread (p0: Runnable ) sendBroadcast [androidJvm] open override fun sendBroadcast (p0: Intent ) open override fun sendBroadcast (p0: Intent , p1: String ?) sendBroadcastAsUser [androidJvm] open override fun sendBroadcastAsUser (p0: Intent , p1: UserHandle ) open override fun sendBroadcastAsUser (p0: Intent , p1: UserHandle , p2: String ?) sendBroadcastWithMultiplePermissions [androidJvm] open fun sendBroadcastWithMultiplePermissions (p0: Intent , p1: Array < String >) sendOrderedBroadcast [androidJvm] open override fun sendOrderedBroadcast (p0: Intent , p1: String ?) open override fun sendOrderedBroadcast (p0: Intent , p1: String ?, p2: BroadcastReceiver ?, p3: Handler ?, p4: Int , p5: String ?, p6: Bundle ?) open override fun sendOrderedBroadcast (p0: Intent , p1: String ?, p2: String ?, p3: BroadcastReceiver ?, p4: Handler ?, p5: Int , p6: String ?, p7: Bundle ?) open fun sendOrderedBroadcast (p0: Intent , p1: Int , p2: String ?, p3: String ?, p4: BroadcastReceiver ?, p5: Handler ?, p6: String ?, p7: Bundle ?, p8: Bundle ?) sendOrderedBroadcastAsUser [androidJvm] open override fun sendOrderedBroadcastAsUser (p0: Intent , p1: UserHandle , p2: String ?, p3: BroadcastReceiver ?, p4: Handler ?, p5: Int , p6: String ?, p7: Bundle ?) setActionBar [androidJvm] open fun setActionBar (p0: Toolbar ?) setContentTransitionManager [androidJvm] open fun setContentTransitionManager (p0: TransitionManager ) setContentView [androidJvm] open override fun setContentView (p0: View ) open override fun setContentView (@ LayoutRes p0: Int ) open override fun setContentView (p0: View , p1: ViewGroup.LayoutParams ) setDefaultKeyMode [androidJvm] fun setDefaultKeyMode (p0: Int ) setEnterSharedElementCallback [androidJvm] open fun setEnterSharedElementCallback (p0: SharedElementCallback ) open fun setEnterSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setExitSharedElementCallback [androidJvm] open fun setExitSharedElementCallback (p0: SharedElementCallback ) open fun setExitSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setFeatureDrawable [androidJvm] fun setFeatureDrawable (p0: Int , p1: Drawable ) setFeatureDrawableAlpha [androidJvm] fun setFeatureDrawableAlpha (p0: Int , p1: Int ) setFeatureDrawableResource [androidJvm] fun setFeatureDrawableResource (p0: Int , p1: Int ) setFeatureDrawableUri [androidJvm] fun setFeatureDrawableUri (p0: Int , p1: Uri ) setFinishOnTouchOutside [androidJvm] open fun setFinishOnTouchOutside (p0: Boolean ) setImmersive [androidJvm] open fun setImmersive (p0: Boolean ) setInheritShowWhenLocked [androidJvm] open fun setInheritShowWhenLocked (p0: Boolean ) setIntent [androidJvm] open fun setIntent (p0: Intent ) setLocusContext [androidJvm] open fun setLocusContext (p0: LocusId ?, p1: Bundle ?) setMediaController [androidJvm] fun setMediaController (p0: MediaController ) setPictureInPictureParams [androidJvm] open fun setPictureInPictureParams (p0: PictureInPictureParams ) setRequestedOrientation [androidJvm] open fun setRequestedOrientation (p0: Int ) setResult [androidJvm] fun setResult (p0: Int ) fun setResult (p0: Int , p1: Intent ) setShowWhenLocked [androidJvm] open fun setShowWhenLocked (p0: Boolean ) setSupportActionBar [androidJvm] open fun setSupportActionBar (@ Nullable p0: Toolbar ?) setTaskDescription [androidJvm] open fun setTaskDescription (p0: ActivityManager.TaskDescription ) setTheme [androidJvm] open fun setTheme (p0: Resources.Theme ?) open override fun setTheme (@ StyleRes p0: Int ) setTitle [androidJvm] open fun setTitle (p0: CharSequence ) open fun setTitle (p0: Int ) setTranslucent [androidJvm] open fun setTranslucent (p0: Boolean ): Boolean setTurnScreenOn [androidJvm] open fun setTurnScreenOn (p0: Boolean ) setVisible [androidJvm] open fun setVisible (p0: Boolean ) setVolumeControlStream [androidJvm] fun setVolumeControlStream (p0: Int ) setVrModeEnabled [androidJvm] open fun setVrModeEnabled (p0: Boolean , p1: ComponentName ) shouldShowRequestPermissionRationale [androidJvm] open fun shouldShowRequestPermissionRationale (p0: String ): Boolean shouldUpRecreateTask [androidJvm] open fun shouldUpRecreateTask (p0: Intent ): Boolean showAssist [androidJvm] open fun showAssist (p0: Bundle ): Boolean showLockTaskEscapeMessage [androidJvm] open fun showLockTaskEscapeMessage () startActionMode [androidJvm] open fun startActionMode (p0: ActionMode.Callback ): ActionMode ? open fun startActionMode (p0: ActionMode.Callback , p1: Int ): ActionMode ? startActivities [androidJvm] open override fun startActivities (p0: Array < Intent >) open override fun startActivities (p0: Array < Intent >, p1: Bundle ?) startActivity [androidJvm] open override fun startActivity (p0: Intent ) open override fun startActivity (p0: Intent , p1: Bundle ?) startActivityFromFragment [androidJvm] open fun startActivityFromFragment (@ NonNull p0: Fragment , p1: Intent , p2: Int ) open fun startActivityFromFragment (@ NonNull p0: Fragment , p1: Intent , p2: Int , @ Nullable p3: Bundle ?) startActivityIfNeeded [androidJvm] open fun startActivityIfNeeded (p0: Intent , p1: Int ): Boolean open fun startActivityIfNeeded (p0: Intent , p1: Int , p2: Bundle ?): Boolean startForegroundService [androidJvm] open override fun startForegroundService (p0: Intent ): ComponentName ? startInstrumentation [androidJvm] open override fun startInstrumentation (p0: ComponentName , p1: String ?, p2: Bundle ?): Boolean startIntentSender [androidJvm] open override fun startIntentSender (p0: IntentSender , p1: Intent ?, p2: Int , p3: Int , p4: Int ) open override fun startIntentSender (p0: IntentSender , p1: Intent ?, p2: Int , p3: Int , p4: Int , p5: Bundle ?) startLocalVoiceInteraction [androidJvm] open fun startLocalVoiceInteraction (p0: Bundle ) startLockTask [androidJvm] open fun startLockTask () startNextMatchingActivity [androidJvm] open fun startNextMatchingActivity (p0: Intent ): Boolean open fun startNextMatchingActivity (p0: Intent , p1: Bundle ?): Boolean startPostponedEnterTransition [androidJvm] open fun startPostponedEnterTransition () startSearch [androidJvm] open fun startSearch (p0: String ?, p1: Boolean , p2: Bundle ?, p3: Boolean ) startService [androidJvm] open override fun startService (p0: Intent ): ComponentName ? startSupportActionMode [androidJvm] @ Nullable open fun startSupportActionMode (@ NonNull p0: ActionMode.Callback ): ActionMode ? stopLocalVoiceInteraction [androidJvm] open fun stopLocalVoiceInteraction () stopLockTask [androidJvm] open fun stopLockTask () stopService [androidJvm] open override fun stopService (p0: Intent ): Boolean superDispatchKeyEvent [androidJvm] open override fun superDispatchKeyEvent (event: KeyEvent ): Boolean supportFinishAfterTransition [androidJvm] open fun supportFinishAfterTransition () supportInvalidateOptionsMenu [androidJvm] open override fun supportInvalidateOptionsMenu () supportNavigateUpTo [androidJvm] open fun supportNavigateUpTo (@ NonNull p0: Intent ) supportPostponeEnterTransition [androidJvm] open fun supportPostponeEnterTransition () supportRequestWindowFeature [androidJvm] open fun supportRequestWindowFeature (p0: Int ): Boolean supportShouldUpRecreateTask [androidJvm] open fun supportShouldUpRecreateTask (@ NonNull p0: Intent ): Boolean supportStartPostponedEnterTransition [androidJvm] open fun supportStartPostponedEnterTransition () takeKeyEvents [androidJvm] open fun takeKeyEvents (p0: Boolean ) toggleActionBar [androidJvm] open fun toggleActionBar () open fun toggleActionBar (v: View ? = null) triggerSearch [androidJvm] open fun triggerSearch (p0: String , p1: Bundle ?) unbindService [androidJvm] open override fun unbindService (p0: ServiceConnection ) unregisterActivityLifecycleCallbacks [androidJvm] open fun unregisterActivityLifecycleCallbacks (p0: Application.ActivityLifecycleCallbacks ) unregisterComponentCallbacks [androidJvm] open fun unregisterComponentCallbacks (p0: ComponentCallbacks ) unregisterForContextMenu [androidJvm] open fun unregisterForContextMenu (p0: View ) unregisterReceiver [androidJvm] open override fun unregisterReceiver (p0: BroadcastReceiver ) updateServiceGroup [androidJvm] open override fun updateServiceGroup (p0: ServiceConnection , p1: Int , p2: Int ) Properties \u00b6 Name Summary allowToggleActionBar [androidJvm] open val allowToggleActionBar : Boolean bookId [androidJvm] open override var bookId : Long coroutineContext [androidJvm] open override val coroutineContext : CoroutineContext Context of this scope. currentLocator [androidJvm] open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position. currentResource [androidJvm] var currentResource : Int = 0 isSeekTracking [androidJvm] var isSeekTracking : Boolean = false mContextAwareHelper [androidJvm] val mContextAwareHelper : ContextAwareHelper mCreated [androidJvm] val mCreated : Boolean mediaPlayer [androidJvm] lateinit var mediaPlayer : R2MediaPlayer mFragmentLifecycleRegistry [androidJvm] val mFragmentLifecycleRegistry : LifecycleRegistry mFragments [androidJvm] val mFragments : FragmentController mResumed [androidJvm] val mResumed : Boolean mSavedStateRegistryController [androidJvm] val mSavedStateRegistryController : SavedStateRegistryController mStopped [androidJvm] val mStopped : Boolean preferences [androidJvm] open lateinit override var preferences : SharedPreferences publication [androidJvm] open lateinit override var publication : Publication Publication rendered by this navigator. publicationFileName [androidJvm] open lateinit override var publicationFileName : String publicationIdentifier [androidJvm] open lateinit override var publicationIdentifier : String publicationPath [androidJvm] open lateinit override var publicationPath : String readingProgression [androidJvm] open override val readingProgression : ReadingProgression Current reading progression direction. resourcePager [androidJvm] open val resourcePager : R2ViewPager ? startTime [androidJvm] var startTime : Double = 0.0","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/#r2audiobookactivity","text":"[androidJvm]\\ open class R2AudiobookActivity : AppCompatActivity , CoroutineScope, IR2Activity , MediaPlayerCallback , VisualNavigator","title":"R2AudiobookActivity"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/#functions","text":"Name Summary addContentView [androidJvm] open override fun addContentView (p0: View , p1: ViewGroup.LayoutParams ) addOnContextAvailableListener [androidJvm] override fun addOnContextAvailableListener (@ NonNull listener: OnContextAvailableListener ) applyOverrideConfiguration [androidJvm] open fun applyOverrideConfiguration (p0: Configuration ) attachBaseContext [androidJvm] open override fun attachBaseContext (p0: Context ) bindIsolatedService [androidJvm] open override fun bindIsolatedService (p0: Intent , p1: Int , p2: String , p3: Executor , p4: ServiceConnection ): Boolean bindService [androidJvm] open override fun bindService (p0: Intent , p1: ServiceConnection , p2: Int ): Boolean open override fun bindService (p0: Intent , p1: Int , p2: Executor , p3: ServiceConnection ): Boolean bindServiceAsUser [androidJvm] open override fun bindServiceAsUser (p0: Intent , p1: ServiceConnection , p2: Int , p3: UserHandle ): Boolean checkCallingOrSelfPermission [androidJvm] open override fun checkCallingOrSelfPermission (p0: String ): Int checkCallingOrSelfUriPermission [androidJvm] open override fun checkCallingOrSelfUriPermission (p0: Uri , p1: Int ): Int checkCallingOrSelfUriPermissions [androidJvm] open override fun checkCallingOrSelfUriPermissions (p0: MutableList < Uri >, p1: Int ): IntArray checkCallingPermission [androidJvm] open override fun checkCallingPermission (p0: String ): Int checkCallingUriPermission [androidJvm] open override fun checkCallingUriPermission (p0: Uri , p1: Int ): Int checkCallingUriPermissions [androidJvm] open override fun checkCallingUriPermissions (p0: MutableList < Uri >, p1: Int ): IntArray checkPermission [androidJvm] open override fun checkPermission (p0: String , p1: Int , p2: Int ): Int checkSelfPermission [androidJvm] open override fun checkSelfPermission (p0: String ): Int checkUriPermission [androidJvm] open override fun checkUriPermission (p0: Uri , p1: Int , p2: Int , p3: Int ): Int open override fun checkUriPermission (p0: Uri ?, p1: String ?, p2: String ?, p3: Int , p4: Int , p5: Int ): Int checkUriPermissions [androidJvm] open override fun checkUriPermissions (p0: MutableList < Uri >, p1: Int , p2: Int , p3: Int ): IntArray closeContextMenu [androidJvm] open fun closeContextMenu () closeOptionsMenu [androidJvm] open override fun closeOptionsMenu () createAttributionContext [androidJvm] open override fun createAttributionContext (p0: String ?): Context createConfigurationContext [androidJvm] open override fun createConfigurationContext (p0: Configuration ): Context createContext [androidJvm] open override fun createContext (p0: ContextParams ): Context createContextForSplit [androidJvm] open override fun createContextForSplit (p0: String ): Context createDeviceProtectedStorageContext [androidJvm] open override fun createDeviceProtectedStorageContext (): Context createDisplayContext [androidJvm] open override fun createDisplayContext (p0: Display ): Context createPackageContext [androidJvm] open override fun createPackageContext (p0: String , p1: Int ): Context createPendingResult [androidJvm] open fun createPendingResult (p0: Int , p1: Intent , p2: Int ): PendingIntent createWindowContext [androidJvm] open override fun createWindowContext (p0: Int , p1: Bundle ?): Context open override fun createWindowContext (p0: Display , p1: Int , p2: Bundle ?): Context databaseList [androidJvm] open override fun databaseList (): Array < String > deleteDatabase [androidJvm] open override fun deleteDatabase (p0: String ): Boolean deleteFile [androidJvm] open override fun deleteFile (p0: String ): Boolean deleteSharedPreferences [androidJvm] open override fun deleteSharedPreferences (p0: String ): Boolean dismissKeyboardShortcutsHelper [androidJvm] fun dismissKeyboardShortcutsHelper () dispatchFragmentsOnCreateView [androidJvm] @ Nullable fun dispatchFragmentsOnCreateView (@ Nullable p0: View ?, @ NonNull p1: String , @ NonNull p2: Context , @ NonNull p3: AttributeSet ): View ? dispatchGenericMotionEvent [androidJvm] open override fun dispatchGenericMotionEvent (p0: MotionEvent ): Boolean dispatchKeyEvent [androidJvm] open override fun dispatchKeyEvent (p0: KeyEvent ): Boolean dispatchKeyShortcutEvent [androidJvm] open override fun dispatchKeyShortcutEvent (event: KeyEvent ): Boolean dispatchPopulateAccessibilityEvent [androidJvm] open override fun dispatchPopulateAccessibilityEvent (p0: AccessibilityEvent ): Boolean dispatchTouchEvent [androidJvm] open override fun dispatchTouchEvent (p0: MotionEvent ): Boolean dispatchTrackballEvent [androidJvm] open override fun dispatchTrackballEvent (p0: MotionEvent ): Boolean dump [androidJvm] open override fun dump (@ NonNull p0: String , @ Nullable p1: FileDescriptor ?, @ NonNull p2: PrintWriter , @ Nullable p3: Array < String >?) enforceCallingOrSelfPermission [androidJvm] open override fun enforceCallingOrSelfPermission (p0: String , p1: String ?) enforceCallingOrSelfUriPermission [androidJvm] open override fun enforceCallingOrSelfUriPermission (p0: Uri , p1: Int , p2: String ) enforceCallingPermission [androidJvm] open override fun enforceCallingPermission (p0: String , p1: String ?) enforceCallingUriPermission [androidJvm] open override fun enforceCallingUriPermission (p0: Uri , p1: Int , p2: String ) enforcePermission [androidJvm] open override fun enforcePermission (p0: String , p1: Int , p2: Int , p3: String ?) enforceUriPermission [androidJvm] open override fun enforceUriPermission (p0: Uri , p1: Int , p2: Int , p3: Int , p4: String ) open override fun enforceUriPermission (p0: Uri ?, p1: String ?, p2: String ?, p3: Int , p4: Int , p5: Int , p6: String ?) ensureViewModelStore [androidJvm] open fun ensureViewModelStore () enterPictureInPictureMode [androidJvm] open fun enterPictureInPictureMode (p0: PictureInPictureParams ): Boolean fileList [androidJvm] open override fun fileList (): Array < String > findViewById [androidJvm] open override fun < T : View > findViewById (@ IdRes p0: Int ): T finish [androidJvm] open override fun finish () finishActivity [androidJvm] open fun finishActivity (p0: Int ) finishAffinity [androidJvm] open fun finishAffinity () finishAfterTransition [androidJvm] open fun finishAfterTransition () finishAndRemoveTask [androidJvm] open fun finishAndRemoveTask () getActionBar [androidJvm] open fun getActionBar (): ActionBar ? getActivityResultRegistry [androidJvm] @ NonNull override fun getActivityResultRegistry (): ActivityResultRegistry getApplication [androidJvm] fun getApplication (): Application getApplicationContext [androidJvm] open override fun getApplicationContext (): Context getApplicationInfo [androidJvm] open override fun getApplicationInfo (): ApplicationInfo getAssets [androidJvm] open override fun getAssets (): AssetManager getAttributionSource [androidJvm] open override fun getAttributionSource (): AttributionSource getAttributionTag [androidJvm] open override fun getAttributionTag (): String ? getBaseContext [androidJvm] open fun getBaseContext (): Context getCacheDir [androidJvm] open override fun getCacheDir (): File getCallingActivity [androidJvm] open fun getCallingActivity (): ComponentName ? getCallingPackage [androidJvm] open fun getCallingPackage (): String ? getChangingConfigurations [androidJvm] open fun getChangingConfigurations (): Int getClassLoader [androidJvm] open override fun getClassLoader (): ClassLoader getCodeCacheDir [androidJvm] open override fun getCodeCacheDir (): File getColor [androidJvm] fun getColor (p0: Int ): Int getColorStateList [androidJvm] fun getColorStateList (p0: Int ): ColorStateList getComponentName [androidJvm] open fun getComponentName (): ComponentName getContentResolver [androidJvm] open override fun getContentResolver (): ContentResolver getContentScene [androidJvm] open fun getContentScene (): Scene getContentTransitionManager [androidJvm] open fun getContentTransitionManager (): TransitionManager getCurrentFocus [androidJvm] open fun getCurrentFocus (): View ? getDatabasePath [androidJvm] open override fun getDatabasePath (p0: String ): File getDataDir [androidJvm] open override fun getDataDir (): File getDefaultViewModelProviderFactory [androidJvm] @ NonNull open override fun getDefaultViewModelProviderFactory (): ViewModelProvider.Factory getDelegate [androidJvm] @ NonNull open fun getDelegate (): AppCompatDelegate getDir [androidJvm] open override fun getDir (p0: String , p1: Int ): File getDisplay [androidJvm] open override fun getDisplay (): Display ? getDrawable [androidJvm] fun getDrawable (p0: Int ): Drawable ? getDrawerToggleDelegate [androidJvm] @ Nullable open override fun getDrawerToggleDelegate (): ActionBarDrawerToggle.Delegate ? getExternalCacheDir [androidJvm] open override fun getExternalCacheDir (): File ? getExternalCacheDirs [androidJvm] open override fun getExternalCacheDirs (): Array < File > getExternalFilesDir [androidJvm] open override fun getExternalFilesDir (p0: String ?): File ? getExternalFilesDirs [androidJvm] open override fun getExternalFilesDirs (p0: String ): Array < File > getExternalMediaDirs [androidJvm] open override fun getExternalMediaDirs (): Array < File > getFilesDir [androidJvm] open override fun getFilesDir (): File getFileStreamPath [androidJvm] open override fun getFileStreamPath (p0: String ): File getIntent [androidJvm] open fun getIntent (): Intent getLastNonConfigurationInstance [androidJvm] open fun getLastNonConfigurationInstance (): Any ? getLayoutInflater [androidJvm] open fun getLayoutInflater (): LayoutInflater getLifecycle [androidJvm] @ NonNull open override fun getLifecycle (): Lifecycle getLocalClassName [androidJvm] open fun getLocalClassName (): String getMainExecutor [androidJvm] open override fun getMainExecutor (): Executor getMainLooper [androidJvm] open override fun getMainLooper (): Looper getMaxNumPictureInPictureActions [androidJvm] open fun getMaxNumPictureInPictureActions (): Int getMediaController [androidJvm] fun getMediaController (): MediaController getMenuInflater [androidJvm] @ NonNull open override fun getMenuInflater (): MenuInflater getNoBackupFilesDir [androidJvm] open override fun getNoBackupFilesDir (): File getObbDir [androidJvm] open override fun getObbDir (): File getObbDirs [androidJvm] open override fun getObbDirs (): Array < File > getOnBackPressedDispatcher [androidJvm] @ NonNull override fun getOnBackPressedDispatcher (): OnBackPressedDispatcher getOpPackageName [androidJvm] open override fun getOpPackageName (): String getPackageCodePath [androidJvm] open override fun getPackageCodePath (): String getPackageManager [androidJvm] open override fun getPackageManager (): PackageManager getPackageName [androidJvm] open override fun getPackageName (): String getPackageResourcePath [androidJvm] open override fun getPackageResourcePath (): String getParams [androidJvm] open override fun getParams (): ContextParams ? getParent [androidJvm] fun getParent (): Activity getParentActivityIntent [androidJvm] open fun getParentActivityIntent (): Intent ? getPreferences [androidJvm] open fun getPreferences (p0: Int ): SharedPreferences getReferrer [androidJvm] open fun getReferrer (): Uri ? getRequestedOrientation [androidJvm] open fun getRequestedOrientation (): Int getResources [androidJvm] open override fun getResources (): Resources getSavedStateRegistry [androidJvm] @ NonNull override fun getSavedStateRegistry (): SavedStateRegistry getSearchEvent [androidJvm] fun getSearchEvent (): SearchEvent getSharedPreferences [androidJvm] open override fun getSharedPreferences (p0: String , p1: Int ): SharedPreferences getSplashScreen [androidJvm] fun getSplashScreen (): SplashScreen getString [androidJvm] fun getString (p0: Int ): String fun getString (p0: Int , vararg p1: Any ): String getSupportActionBar [androidJvm] @ Nullable open fun getSupportActionBar (): ActionBar ? getSupportFragmentManager [androidJvm] @ NonNull open fun getSupportFragmentManager (): FragmentManager getSupportParentActivityIntent [androidJvm] @ Nullable open override fun getSupportParentActivityIntent (): Intent ? getSystemService [androidJvm] open override fun getSystemService (p0: String ): Any fun < T : Any > getSystemService (p0: Class < T >): T getSystemServiceName [androidJvm] open override fun getSystemServiceName (p0: Class <*>): String ? getTaskId [androidJvm] open fun getTaskId (): Int getText [androidJvm] fun getText (p0: Int ): CharSequence getTheme [androidJvm] open override fun getTheme (): Resources.Theme getTitle [androidJvm] fun getTitle (): CharSequence getTitleColor [androidJvm] fun getTitleColor (): Int getViewModelStore [androidJvm] @ NonNull open override fun getViewModelStore (): ViewModelStore getVoiceInteractor [androidJvm] open fun getVoiceInteractor (): VoiceInteractor getVolumeControlStream [androidJvm] fun getVolumeControlStream (): Int getWindow [androidJvm] open fun getWindow (): Window getWindowManager [androidJvm] open fun getWindowManager (): WindowManager go [androidJvm] open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link. [androidJvm] open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . goBackward [androidJvm] open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction. goForward [androidJvm] open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction. grantUriPermission [androidJvm] open override fun grantUriPermission (p0: String , p1: Uri , p2: Int ) hasWindowFocus [androidJvm] open fun hasWindowFocus (): Boolean highlightActivated [androidJvm] open fun highlightActivated (id: String ) highlightAnnotationMarkActivated [androidJvm] open fun highlightAnnotationMarkActivated (id: String ) invalidateOptionsMenu [androidJvm] open override fun invalidateOptionsMenu () isActivityTransitionRunning [androidJvm] open fun isActivityTransitionRunning (): Boolean isChangingConfigurations [androidJvm] open fun isChangingConfigurations (): Boolean isChild [androidJvm] fun isChild (): Boolean isDestroyed [androidJvm] open fun isDestroyed (): Boolean isDeviceProtectedStorage [androidJvm] open override fun isDeviceProtectedStorage (): Boolean isFinishing [androidJvm] open fun isFinishing (): Boolean isImmersive [androidJvm] open fun isImmersive (): Boolean isInMultiWindowMode [androidJvm] open fun isInMultiWindowMode (): Boolean isInPictureInPictureMode [androidJvm] open fun isInPictureInPictureMode (): Boolean isLaunchedFromBubble [androidJvm] open fun isLaunchedFromBubble (): Boolean isLocalVoiceInteractionSupported [androidJvm] open fun isLocalVoiceInteractionSupported (): Boolean isRestricted [androidJvm] open override fun isRestricted (): Boolean isTaskRoot [androidJvm] open fun isTaskRoot (): Boolean isUiContext [androidJvm] open override fun isUiContext (): Boolean isVoiceInteraction [androidJvm] open fun isVoiceInteraction (): Boolean isVoiceInteractionRoot [androidJvm] open fun isVoiceInteractionRoot (): Boolean markFragmentsCreated [androidJvm] open fun markFragmentsCreated () moveDatabaseFrom [androidJvm] open override fun moveDatabaseFrom (p0: Context , p1: String ): Boolean moveSharedPreferencesFrom [androidJvm] open override fun moveSharedPreferencesFrom (p0: Context , p1: String ): Boolean moveTaskToBack [androidJvm] open fun moveTaskToBack (p0: Boolean ): Boolean navigateUpTo [androidJvm] open fun navigateUpTo (p0: Intent ): Boolean nextResource [androidJvm] open fun nextResource (v: View ? = null) obtainStyledAttributes [androidJvm] fun obtainStyledAttributes (p0: IntArray ): TypedArray fun obtainStyledAttributes (p0: AttributeSet ?, p1: IntArray ): TypedArray fun obtainStyledAttributes (p0: Int , p1: IntArray ): TypedArray fun obtainStyledAttributes (p0: AttributeSet ?, p1: IntArray , p2: Int , p3: Int ): TypedArray onActionModeFinished [androidJvm] open override fun onActionModeFinished (p0: ActionMode ) onActionModeStarted [androidJvm] open override fun onActionModeStarted (p0: ActionMode ) onActivityReenter [androidJvm] open fun onActivityReenter (p0: Int , p1: Intent ) onApplyThemeResource [androidJvm] open override fun onApplyThemeResource (p0: Resources.Theme , p1: Int , p2: Boolean ) onAttachedToWindow [androidJvm] open override fun onAttachedToWindow () onBackPressed [androidJvm] @ MainThread open override fun onBackPressed () onChildTitleChanged [androidJvm] open fun onChildTitleChanged (p0: Activity , p1: CharSequence ) onComplete [androidJvm] open override fun onComplete (index: Int , currentPosition: Int , duration: Int ) onConfigurationChanged [androidJvm] open override fun onConfigurationChanged (@ NonNull p0: Configuration ) onContentChanged [androidJvm] open override fun onContentChanged () onContextItemSelected [androidJvm] open fun onContextItemSelected (p0: MenuItem ): Boolean onContextMenuClosed [androidJvm] open fun onContextMenuClosed (p0: Menu ) onCreate [androidJvm] open fun onCreate (p0: Bundle ?, p1: PersistableBundle ?) onCreateContextMenu [androidJvm] open override fun onCreateContextMenu (p0: ContextMenu , p1: View , p2: ContextMenu.ContextMenuInfo ) onCreateDescription [androidJvm] open fun onCreateDescription (): CharSequence ? onCreateNavigateUpTaskStack [androidJvm] open fun onCreateNavigateUpTaskStack (p0: TaskStackBuilder ) onCreateOptionsMenu [androidJvm] open fun onCreateOptionsMenu (p0: Menu ): Boolean onCreatePanelMenu [androidJvm] open override fun onCreatePanelMenu (p0: Int , @ NonNull p1: Menu ): Boolean onCreatePanelView [androidJvm] open override fun onCreatePanelView (p0: Int ): View ? onCreateSupportNavigateUpTaskStack [androidJvm] open fun onCreateSupportNavigateUpTaskStack (@ NonNull p0: TaskStackBuilder ) onCreateView [androidJvm] @ Nullable open override fun onCreateView (@ NonNull p0: String , @ NonNull p1: Context , @ NonNull p2: AttributeSet ): View ? @ Nullable open override fun onCreateView (@ Nullable p0: View ?, @ NonNull p1: String , @ NonNull p2: Context , @ NonNull p3: AttributeSet ): View ? onDetachedFromWindow [androidJvm] open override fun onDetachedFromWindow () onEnterAnimationComplete [androidJvm] open fun onEnterAnimationComplete () onGenericMotionEvent [androidJvm] open fun onGenericMotionEvent (p0: MotionEvent ): Boolean onGetDirectActions [androidJvm] open fun onGetDirectActions (p0: CancellationSignal , p1: Consumer < MutableList < DirectAction >>) onKeyDown [androidJvm] open override fun onKeyDown (p0: Int , p1: KeyEvent ): Boolean onKeyLongPress [androidJvm] open override fun onKeyLongPress (p0: Int , p1: KeyEvent ): Boolean onKeyMultiple [androidJvm] open override fun onKeyMultiple (p0: Int , p1: Int , p2: KeyEvent ): Boolean onKeyShortcut [androidJvm] open fun onKeyShortcut (p0: Int , p1: KeyEvent ): Boolean onKeyUp [androidJvm] open override fun onKeyUp (p0: Int , p1: KeyEvent ): Boolean onLocalVoiceInteractionStarted [androidJvm] open fun onLocalVoiceInteractionStarted () onLocalVoiceInteractionStopped [androidJvm] open fun onLocalVoiceInteractionStopped () onLowMemory [androidJvm] open override fun onLowMemory () onMenuItemSelected [androidJvm] override fun onMenuItemSelected (p0: Int , @ NonNull p1: MenuItem ): Boolean onMenuOpened [androidJvm] open override fun onMenuOpened (p0: Int , p1: Menu ): Boolean onMultiWindowModeChanged [androidJvm] @ CallSuper open override fun onMultiWindowModeChanged (p0: Boolean ) open fun onMultiWindowModeChanged (p0: Boolean , p1: Configuration ) onNavigateUp [androidJvm] open fun onNavigateUp (): Boolean onNewIntent [androidJvm] @ CallSuper open override fun onNewIntent (p0: Intent ) onNightModeChanged [androidJvm] open fun onNightModeChanged (p0: Int ) onOptionsItemSelected [androidJvm] open fun onOptionsItemSelected (p0: MenuItem ): Boolean onOptionsMenuClosed [androidJvm] open fun onOptionsMenuClosed (p0: Menu ) onPageChanged [androidJvm] open fun onPageChanged (pageIndex: Int , totalPages: Int , url: String ) onPageEnded [androidJvm] open fun onPageEnded (end: Boolean ) onPageLoaded [androidJvm] open fun onPageLoaded () onPanelClosed [androidJvm] open override fun onPanelClosed (p0: Int , @ NonNull p1: Menu ) onPerformDirectAction [androidJvm] open fun onPerformDirectAction (p0: String , p1: Bundle , p2: CancellationSignal , p3: Consumer < Bundle >) onPictureInPictureModeChanged [androidJvm] @ CallSuper open override fun onPictureInPictureModeChanged (p0: Boolean ) open fun onPictureInPictureModeChanged (p0: Boolean , p1: Configuration ) onPictureInPictureRequested [androidJvm] open fun onPictureInPictureRequested (): Boolean onPictureInPictureUiStateChanged [androidJvm] open fun onPictureInPictureUiStateChanged (p0: PictureInPictureUiState ) onPointerCaptureChanged [androidJvm] open fun onPointerCaptureChanged (p0: Boolean ) onPostCreate [androidJvm] open override fun onPostCreate (@ Nullable p0: Bundle ?) open fun onPostCreate (p0: Bundle ?, p1: PersistableBundle ?) onPostResume [androidJvm] open override fun onPostResume () onPrepared [androidJvm] open override fun onPrepared () onPrepareNavigateUpTaskStack [androidJvm] open fun onPrepareNavigateUpTaskStack (p0: TaskStackBuilder ) onPrepareOptionsMenu [androidJvm] open fun onPrepareOptionsMenu (p0: Menu ): Boolean onPreparePanel [androidJvm] open override fun onPreparePanel (p0: Int , @ Nullable p1: View ?, @ NonNull p2: Menu ): Boolean onPrepareSupportNavigateUpTaskStack [androidJvm] open fun onPrepareSupportNavigateUpTaskStack (@ NonNull p0: TaskStackBuilder ) onProvideAssistContent [androidJvm] open fun onProvideAssistContent (p0: AssistContent ) onProvideAssistData [androidJvm] open fun onProvideAssistData (p0: Bundle ) onProvideKeyboardShortcuts [androidJvm] open override fun onProvideKeyboardShortcuts (p0: MutableList < KeyboardShortcutGroup >, p1: Menu ?, p2: Int ) onProvideReferrer [androidJvm] open fun onProvideReferrer (): Uri onRequestPermissionsResult [androidJvm] @ CallSuper open override fun onRequestPermissionsResult (p0: Int , @ NonNull p1: Array < String >, @ NonNull p2: IntArray ) onRestart [androidJvm] open fun onRestart () onRestoreInstanceState [androidJvm] open fun onRestoreInstanceState (p0: Bundle ) open fun onRestoreInstanceState (p0: Bundle ?, p1: PersistableBundle ?) onResumeFragments [androidJvm] open fun onResumeFragments () onRetainNonConfigurationInstance [androidJvm] @ Nullable override fun onRetainNonConfigurationInstance (): Any ? onSaveInstanceState [androidJvm] @ CallSuper open override fun onSaveInstanceState (@ NonNull outState: Bundle ) open fun onSaveInstanceState (p0: Bundle , p1: PersistableBundle ) onSearchRequested [androidJvm] open override fun onSearchRequested (): Boolean open override fun onSearchRequested (p0: SearchEvent ?): Boolean onStart [androidJvm] open override fun onStart () onStateNotSaved [androidJvm] open override fun onStateNotSaved () onSupportActionModeFinished [androidJvm] @ CallSuper open override fun onSupportActionModeFinished (@ NonNull p0: ActionMode ) onSupportActionModeStarted [androidJvm] @ CallSuper open override fun onSupportActionModeStarted (@ NonNull p0: ActionMode ) onSupportNavigateUp [androidJvm] open fun onSupportNavigateUp (): Boolean onTitleChanged [androidJvm] open override fun onTitleChanged (p0: CharSequence , p1: Int ) onTopResumedActivityChanged [androidJvm] open fun onTopResumedActivityChanged (p0: Boolean ) onTouchEvent [androidJvm] open fun onTouchEvent (p0: MotionEvent ): Boolean onTrackballEvent [androidJvm] open fun onTrackballEvent (p0: MotionEvent ): Boolean onTrimMemory [androidJvm] open override fun onTrimMemory (p0: Int ) onUserInteraction [androidJvm] open fun onUserInteraction () onUserLeaveHint [androidJvm] open fun onUserLeaveHint () onWindowAttributesChanged [androidJvm] open override fun onWindowAttributesChanged (p0: WindowManager.LayoutParams ) onWindowFocusChanged [androidJvm] open override fun onWindowFocusChanged (p0: Boolean ) onWindowStartingActionMode [androidJvm] open override fun onWindowStartingActionMode (p0: ActionMode.Callback ): ActionMode ? open override fun onWindowStartingActionMode (p0: ActionMode.Callback , p1: Int ): ActionMode ? onWindowStartingSupportActionMode [androidJvm] @ Nullable open override fun onWindowStartingSupportActionMode (@ NonNull p0: ActionMode.Callback ): ActionMode ? openContextMenu [androidJvm] open fun openContextMenu (p0: View ) openFileInput [androidJvm] open override fun openFileInput (p0: String ): FileInputStream openFileOutput [androidJvm] open override fun openFileOutput (p0: String , p1: Int ): FileOutputStream openOptionsMenu [androidJvm] open override fun openOptionsMenu () openOrCreateDatabase [androidJvm] open override fun openOrCreateDatabase (p0: String , p1: Int , p2: SQLiteDatabase.CursorFactory ): SQLiteDatabase open override fun openOrCreateDatabase (p0: String , p1: Int , p2: SQLiteDatabase.CursorFactory , p3: DatabaseErrorHandler ?): SQLiteDatabase overridePendingTransition [androidJvm] open fun overridePendingTransition (p0: Int , p1: Int ) peekAvailableContext [androidJvm] @ Nullable open override fun peekAvailableContext (): Context ? postponeEnterTransition [androidJvm] open fun postponeEnterTransition () previousResource [androidJvm] open fun previousResource (v: View ? = null) recreate [androidJvm] open fun recreate () registerActivityLifecycleCallbacks [androidJvm] open fun registerActivityLifecycleCallbacks (p0: Application.ActivityLifecycleCallbacks ) registerComponentCallbacks [androidJvm] open fun registerComponentCallbacks (p0: ComponentCallbacks ) registerForActivityResult [androidJvm] @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull contract: ActivityResultContract < I , O >, @ NonNull callback: ActivityResultCallback < O >): ActivityResultLauncher < I > @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull contract: ActivityResultContract < I , O >, @ NonNull registry: ActivityResultRegistry , @ NonNull callback: ActivityResultCallback < O >): ActivityResultLauncher < I > registerForContextMenu [androidJvm] open fun registerForContextMenu (p0: View ) registerReceiver [androidJvm] open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter ): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: Int ): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: String ?, p3: Handler ?): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: String ?, p3: Handler ?, p4: Int ): Intent ? releaseInstance [androidJvm] open fun releaseInstance (): Boolean removeOnContextAvailableListener [androidJvm] override fun removeOnContextAvailableListener (@ NonNull listener: OnContextAvailableListener ) reportFullyDrawn [androidJvm] open override fun reportFullyDrawn () requestDragAndDropPermissions [androidJvm] open fun requestDragAndDropPermissions (p0: DragEvent ): DragAndDropPermissions requestPermissions [androidJvm] fun requestPermissions (p0: Array < String >, p1: Int ) requestShowKeyboardShortcuts [androidJvm] fun requestShowKeyboardShortcuts () requestWindowFeature [androidJvm] fun requestWindowFeature (p0: Int ): Boolean requireViewById [androidJvm] fun < T : View > requireViewById (p0: Int ): T revokeUriPermission [androidJvm] open override fun revokeUriPermission (p0: Uri , p1: Int ) open override fun revokeUriPermission (p0: String , p1: Uri , p2: Int ) runOnUiThread [androidJvm] fun runOnUiThread (p0: Runnable ) sendBroadcast [androidJvm] open override fun sendBroadcast (p0: Intent ) open override fun sendBroadcast (p0: Intent , p1: String ?) sendBroadcastAsUser [androidJvm] open override fun sendBroadcastAsUser (p0: Intent , p1: UserHandle ) open override fun sendBroadcastAsUser (p0: Intent , p1: UserHandle , p2: String ?) sendBroadcastWithMultiplePermissions [androidJvm] open fun sendBroadcastWithMultiplePermissions (p0: Intent , p1: Array < String >) sendOrderedBroadcast [androidJvm] open override fun sendOrderedBroadcast (p0: Intent , p1: String ?) open override fun sendOrderedBroadcast (p0: Intent , p1: String ?, p2: BroadcastReceiver ?, p3: Handler ?, p4: Int , p5: String ?, p6: Bundle ?) open override fun sendOrderedBroadcast (p0: Intent , p1: String ?, p2: String ?, p3: BroadcastReceiver ?, p4: Handler ?, p5: Int , p6: String ?, p7: Bundle ?) open fun sendOrderedBroadcast (p0: Intent , p1: Int , p2: String ?, p3: String ?, p4: BroadcastReceiver ?, p5: Handler ?, p6: String ?, p7: Bundle ?, p8: Bundle ?) sendOrderedBroadcastAsUser [androidJvm] open override fun sendOrderedBroadcastAsUser (p0: Intent , p1: UserHandle , p2: String ?, p3: BroadcastReceiver ?, p4: Handler ?, p5: Int , p6: String ?, p7: Bundle ?) setActionBar [androidJvm] open fun setActionBar (p0: Toolbar ?) setContentTransitionManager [androidJvm] open fun setContentTransitionManager (p0: TransitionManager ) setContentView [androidJvm] open override fun setContentView (p0: View ) open override fun setContentView (@ LayoutRes p0: Int ) open override fun setContentView (p0: View , p1: ViewGroup.LayoutParams ) setDefaultKeyMode [androidJvm] fun setDefaultKeyMode (p0: Int ) setEnterSharedElementCallback [androidJvm] open fun setEnterSharedElementCallback (p0: SharedElementCallback ) open fun setEnterSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setExitSharedElementCallback [androidJvm] open fun setExitSharedElementCallback (p0: SharedElementCallback ) open fun setExitSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setFeatureDrawable [androidJvm] fun setFeatureDrawable (p0: Int , p1: Drawable ) setFeatureDrawableAlpha [androidJvm] fun setFeatureDrawableAlpha (p0: Int , p1: Int ) setFeatureDrawableResource [androidJvm] fun setFeatureDrawableResource (p0: Int , p1: Int ) setFeatureDrawableUri [androidJvm] fun setFeatureDrawableUri (p0: Int , p1: Uri ) setFinishOnTouchOutside [androidJvm] open fun setFinishOnTouchOutside (p0: Boolean ) setImmersive [androidJvm] open fun setImmersive (p0: Boolean ) setInheritShowWhenLocked [androidJvm] open fun setInheritShowWhenLocked (p0: Boolean ) setIntent [androidJvm] open fun setIntent (p0: Intent ) setLocusContext [androidJvm] open fun setLocusContext (p0: LocusId ?, p1: Bundle ?) setMediaController [androidJvm] fun setMediaController (p0: MediaController ) setPictureInPictureParams [androidJvm] open fun setPictureInPictureParams (p0: PictureInPictureParams ) setRequestedOrientation [androidJvm] open fun setRequestedOrientation (p0: Int ) setResult [androidJvm] fun setResult (p0: Int ) fun setResult (p0: Int , p1: Intent ) setShowWhenLocked [androidJvm] open fun setShowWhenLocked (p0: Boolean ) setSupportActionBar [androidJvm] open fun setSupportActionBar (@ Nullable p0: Toolbar ?) setTaskDescription [androidJvm] open fun setTaskDescription (p0: ActivityManager.TaskDescription ) setTheme [androidJvm] open fun setTheme (p0: Resources.Theme ?) open override fun setTheme (@ StyleRes p0: Int ) setTitle [androidJvm] open fun setTitle (p0: CharSequence ) open fun setTitle (p0: Int ) setTranslucent [androidJvm] open fun setTranslucent (p0: Boolean ): Boolean setTurnScreenOn [androidJvm] open fun setTurnScreenOn (p0: Boolean ) setVisible [androidJvm] open fun setVisible (p0: Boolean ) setVolumeControlStream [androidJvm] fun setVolumeControlStream (p0: Int ) setVrModeEnabled [androidJvm] open fun setVrModeEnabled (p0: Boolean , p1: ComponentName ) shouldShowRequestPermissionRationale [androidJvm] open fun shouldShowRequestPermissionRationale (p0: String ): Boolean shouldUpRecreateTask [androidJvm] open fun shouldUpRecreateTask (p0: Intent ): Boolean showAssist [androidJvm] open fun showAssist (p0: Bundle ): Boolean showLockTaskEscapeMessage [androidJvm] open fun showLockTaskEscapeMessage () startActionMode [androidJvm] open fun startActionMode (p0: ActionMode.Callback ): ActionMode ? open fun startActionMode (p0: ActionMode.Callback , p1: Int ): ActionMode ? startActivities [androidJvm] open override fun startActivities (p0: Array < Intent >) open override fun startActivities (p0: Array < Intent >, p1: Bundle ?) startActivity [androidJvm] open override fun startActivity (p0: Intent ) open override fun startActivity (p0: Intent , p1: Bundle ?) startActivityFromFragment [androidJvm] open fun startActivityFromFragment (@ NonNull p0: Fragment , p1: Intent , p2: Int ) open fun startActivityFromFragment (@ NonNull p0: Fragment , p1: Intent , p2: Int , @ Nullable p3: Bundle ?) startActivityIfNeeded [androidJvm] open fun startActivityIfNeeded (p0: Intent , p1: Int ): Boolean open fun startActivityIfNeeded (p0: Intent , p1: Int , p2: Bundle ?): Boolean startForegroundService [androidJvm] open override fun startForegroundService (p0: Intent ): ComponentName ? startInstrumentation [androidJvm] open override fun startInstrumentation (p0: ComponentName , p1: String ?, p2: Bundle ?): Boolean startIntentSender [androidJvm] open override fun startIntentSender (p0: IntentSender , p1: Intent ?, p2: Int , p3: Int , p4: Int ) open override fun startIntentSender (p0: IntentSender , p1: Intent ?, p2: Int , p3: Int , p4: Int , p5: Bundle ?) startLocalVoiceInteraction [androidJvm] open fun startLocalVoiceInteraction (p0: Bundle ) startLockTask [androidJvm] open fun startLockTask () startNextMatchingActivity [androidJvm] open fun startNextMatchingActivity (p0: Intent ): Boolean open fun startNextMatchingActivity (p0: Intent , p1: Bundle ?): Boolean startPostponedEnterTransition [androidJvm] open fun startPostponedEnterTransition () startSearch [androidJvm] open fun startSearch (p0: String ?, p1: Boolean , p2: Bundle ?, p3: Boolean ) startService [androidJvm] open override fun startService (p0: Intent ): ComponentName ? startSupportActionMode [androidJvm] @ Nullable open fun startSupportActionMode (@ NonNull p0: ActionMode.Callback ): ActionMode ? stopLocalVoiceInteraction [androidJvm] open fun stopLocalVoiceInteraction () stopLockTask [androidJvm] open fun stopLockTask () stopService [androidJvm] open override fun stopService (p0: Intent ): Boolean superDispatchKeyEvent [androidJvm] open override fun superDispatchKeyEvent (event: KeyEvent ): Boolean supportFinishAfterTransition [androidJvm] open fun supportFinishAfterTransition () supportInvalidateOptionsMenu [androidJvm] open override fun supportInvalidateOptionsMenu () supportNavigateUpTo [androidJvm] open fun supportNavigateUpTo (@ NonNull p0: Intent ) supportPostponeEnterTransition [androidJvm] open fun supportPostponeEnterTransition () supportRequestWindowFeature [androidJvm] open fun supportRequestWindowFeature (p0: Int ): Boolean supportShouldUpRecreateTask [androidJvm] open fun supportShouldUpRecreateTask (@ NonNull p0: Intent ): Boolean supportStartPostponedEnterTransition [androidJvm] open fun supportStartPostponedEnterTransition () takeKeyEvents [androidJvm] open fun takeKeyEvents (p0: Boolean ) toggleActionBar [androidJvm] open fun toggleActionBar () open fun toggleActionBar (v: View ? = null) triggerSearch [androidJvm] open fun triggerSearch (p0: String , p1: Bundle ?) unbindService [androidJvm] open override fun unbindService (p0: ServiceConnection ) unregisterActivityLifecycleCallbacks [androidJvm] open fun unregisterActivityLifecycleCallbacks (p0: Application.ActivityLifecycleCallbacks ) unregisterComponentCallbacks [androidJvm] open fun unregisterComponentCallbacks (p0: ComponentCallbacks ) unregisterForContextMenu [androidJvm] open fun unregisterForContextMenu (p0: View ) unregisterReceiver [androidJvm] open override fun unregisterReceiver (p0: BroadcastReceiver ) updateServiceGroup [androidJvm] open override fun updateServiceGroup (p0: ServiceConnection , p1: Int , p2: Int )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/#properties","text":"Name Summary allowToggleActionBar [androidJvm] open val allowToggleActionBar : Boolean bookId [androidJvm] open override var bookId : Long coroutineContext [androidJvm] open override val coroutineContext : CoroutineContext Context of this scope. currentLocator [androidJvm] open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position. currentResource [androidJvm] var currentResource : Int = 0 isSeekTracking [androidJvm] var isSeekTracking : Boolean = false mContextAwareHelper [androidJvm] val mContextAwareHelper : ContextAwareHelper mCreated [androidJvm] val mCreated : Boolean mediaPlayer [androidJvm] lateinit var mediaPlayer : R2MediaPlayer mFragmentLifecycleRegistry [androidJvm] val mFragmentLifecycleRegistry : LifecycleRegistry mFragments [androidJvm] val mFragments : FragmentController mResumed [androidJvm] val mResumed : Boolean mSavedStateRegistryController [androidJvm] val mSavedStateRegistryController : SavedStateRegistryController mStopped [androidJvm] val mStopped : Boolean preferences [androidJvm] open lateinit override var preferences : SharedPreferences publication [androidJvm] open lateinit override var publication : Publication Publication rendered by this navigator. publicationFileName [androidJvm] open lateinit override var publicationFileName : String publicationIdentifier [androidJvm] open lateinit override var publicationIdentifier : String publicationPath [androidJvm] open lateinit override var publicationPath : String readingProgression [androidJvm] open override val readingProgression : ReadingProgression Current reading progression direction. resourcePager [androidJvm] open val resourcePager : R2ViewPager ? startTime [androidJvm] var startTime : Double = 0.0","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/-r2-audiobook-activity/","text":"// navigator / org.readium.r2.navigator.audiobook / R2AudiobookActivity / R2AudiobookActivity R2AudiobookActivity \u00b6 [androidJvm]\\ fun R2AudiobookActivity ()","title":" r2 audiobook activity"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/-r2-audiobook-activity/#r2audiobookactivity","text":"[androidJvm]\\ fun R2AudiobookActivity ()","title":"R2AudiobookActivity"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/book-id/","text":"// navigator / org.readium.r2.navigator.audiobook / R2AudiobookActivity / bookId bookId \u00b6 [androidJvm]\\ open override var bookId : Long","title":"Book id"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/book-id/#bookid","text":"[androidJvm]\\ open override var bookId : Long","title":"bookId"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/coroutine-context/","text":"// navigator / org.readium.r2.navigator.audiobook / R2AudiobookActivity / coroutineContext coroutineContext \u00b6 [androidJvm]\\ open override val coroutineContext : CoroutineContext Context of this scope.","title":"Coroutine context"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/coroutine-context/#coroutinecontext","text":"[androidJvm]\\ open override val coroutineContext : CoroutineContext Context of this scope.","title":"coroutineContext"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/current-locator/","text":"// navigator / org.readium.r2.navigator.audiobook / R2AudiobookActivity / currentLocator currentLocator \u00b6 [androidJvm]\\ open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position.","title":"Current locator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/current-locator/#currentlocator","text":"[androidJvm]\\ open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position.","title":"currentLocator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/current-resource/","text":"// navigator / org.readium.r2.navigator.audiobook / R2AudiobookActivity / currentResource currentResource \u00b6 [androidJvm]\\ var currentResource : Int = 0","title":"Current resource"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/current-resource/#currentresource","text":"[androidJvm]\\ var currentResource : Int = 0","title":"currentResource"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/finish/","text":"// navigator / org.readium.r2.navigator.audiobook / R2AudiobookActivity / finish finish \u00b6 [androidJvm]\\ open override fun finish ()","title":"Finish"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/finish/#finish","text":"[androidJvm]\\ open override fun finish ()","title":"finish"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/go-backward/","text":"// navigator / org.readium.r2.navigator.audiobook / R2AudiobookActivity / goBackward goBackward \u00b6 [androidJvm]\\ open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction.","title":"Go backward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/go-backward/#gobackward","text":"[androidJvm]\\ open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction.","title":"goBackward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/go-forward/","text":"// navigator / org.readium.r2.navigator.audiobook / R2AudiobookActivity / goForward goForward \u00b6 [androidJvm]\\ open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction.","title":"Go forward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/go-forward/#goforward","text":"[androidJvm]\\ open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction.","title":"goForward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/go/","text":"// navigator / org.readium.r2.navigator.audiobook / R2AudiobookActivity / go go \u00b6 [androidJvm]\\ open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . [androidJvm]\\ open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link.","title":"Go"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/go/#go","text":"[androidJvm]\\ open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . [androidJvm]\\ open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link.","title":"go"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/is-seek-tracking/","text":"// navigator / org.readium.r2.navigator.audiobook / R2AudiobookActivity / isSeekTracking isSeekTracking \u00b6 [androidJvm]\\ var isSeekTracking : Boolean = false","title":"Is seek tracking"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/is-seek-tracking/#isseektracking","text":"[androidJvm]\\ var isSeekTracking : Boolean = false","title":"isSeekTracking"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/media-player/","text":"// navigator / org.readium.r2.navigator.audiobook / R2AudiobookActivity / mediaPlayer mediaPlayer \u00b6 [androidJvm]\\ lateinit var mediaPlayer : R2MediaPlayer","title":"Media player"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/media-player/#mediaplayer","text":"[androidJvm]\\ lateinit var mediaPlayer : R2MediaPlayer","title":"mediaPlayer"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/on-complete/","text":"// navigator / org.readium.r2.navigator.audiobook / R2AudiobookActivity / onComplete onComplete \u00b6 [androidJvm]\\ open override fun onComplete (index: Int , currentPosition: Int , duration: Int )","title":"On complete"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/on-complete/#oncomplete","text":"[androidJvm]\\ open override fun onComplete (index: Int , currentPosition: Int , duration: Int )","title":"onComplete"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/on-prepared/","text":"// navigator / org.readium.r2.navigator.audiobook / R2AudiobookActivity / onPrepared onPrepared \u00b6 [androidJvm]\\ open override fun onPrepared ()","title":"On prepared"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/on-prepared/#onprepared","text":"[androidJvm]\\ open override fun onPrepared ()","title":"onPrepared"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/preferences/","text":"// navigator / org.readium.r2.navigator.audiobook / R2AudiobookActivity / preferences preferences \u00b6 [androidJvm]\\ open lateinit override var preferences : SharedPreferences","title":"Preferences"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/preferences/#preferences","text":"[androidJvm]\\ open lateinit override var preferences : SharedPreferences","title":"preferences"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/publication-file-name/","text":"// navigator / org.readium.r2.navigator.audiobook / R2AudiobookActivity / publicationFileName publicationFileName \u00b6 [androidJvm]\\ open lateinit override var publicationFileName : String","title":"Publication file name"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/publication-file-name/#publicationfilename","text":"[androidJvm]\\ open lateinit override var publicationFileName : String","title":"publicationFileName"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/publication-identifier/","text":"// navigator / org.readium.r2.navigator.audiobook / R2AudiobookActivity / publicationIdentifier publicationIdentifier \u00b6 [androidJvm]\\ open lateinit override var publicationIdentifier : String","title":"Publication identifier"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/publication-identifier/#publicationidentifier","text":"[androidJvm]\\ open lateinit override var publicationIdentifier : String","title":"publicationIdentifier"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/publication-path/","text":"// navigator / org.readium.r2.navigator.audiobook / R2AudiobookActivity / publicationPath publicationPath \u00b6 [androidJvm]\\ open lateinit override var publicationPath : String","title":"Publication path"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/publication-path/#publicationpath","text":"[androidJvm]\\ open lateinit override var publicationPath : String","title":"publicationPath"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/publication/","text":"// navigator / org.readium.r2.navigator.audiobook / R2AudiobookActivity / publication publication \u00b6 [androidJvm]\\ open lateinit override var publication : Publication Publication rendered by this navigator.","title":"Publication"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/publication/#publication","text":"[androidJvm]\\ open lateinit override var publication : Publication Publication rendered by this navigator.","title":"publication"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/reading-progression/","text":"// navigator / org.readium.r2.navigator.audiobook / R2AudiobookActivity / readingProgression readingProgression \u00b6 [androidJvm]\\ open override val readingProgression : ReadingProgression Current reading progression direction.","title":"Reading progression"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/reading-progression/#readingprogression","text":"[androidJvm]\\ open override val readingProgression : ReadingProgression Current reading progression direction.","title":"readingProgression"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/start-time/","text":"// navigator / org.readium.r2.navigator.audiobook / R2AudiobookActivity / startTime startTime \u00b6 [androidJvm]\\ var startTime : Double = 0.0","title":"Start time"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-audiobook-activity/start-time/#starttime","text":"[androidJvm]\\ var startTime : Double = 0.0","title":"startTime"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/","text":"// navigator / org.readium.r2.navigator.audiobook / R2MediaPlayer R2MediaPlayer \u00b6 [androidJvm]\\ class R2MediaPlayer (items: List < Link >, callback: MediaPlayerCallback ) : MediaPlayer.OnPreparedListener Functions \u00b6 Name Summary goTo [androidJvm] fun goTo (index: Int ) next [androidJvm] fun next () onPrepared [androidJvm] open override fun onPrepared (mp: MediaPlayer ?) Called when the media file is ready for playback. pause [androidJvm] fun pause () previous [androidJvm] fun previous () resume [androidJvm] fun resume () seekTo [androidJvm] fun seekTo (progression: Any ) start [androidJvm] fun start () startPlayer [androidJvm] fun startPlayer () stop [androidJvm] fun stop () Properties \u00b6 Name Summary currentPosition [androidJvm] val currentPosition : Double duration [androidJvm] val duration : Double isPaused [androidJvm] var isPaused : Boolean isPlaying [androidJvm] val isPlaying : Boolean isPrepared [androidJvm] var isPrepared : Boolean mediaPlayer [androidJvm] var mediaPlayer : MediaPlayer progress [androidJvm] var progress : ProgressDialog ? = null","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/#r2mediaplayer","text":"[androidJvm]\\ class R2MediaPlayer (items: List < Link >, callback: MediaPlayerCallback ) : MediaPlayer.OnPreparedListener","title":"R2MediaPlayer"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/#functions","text":"Name Summary goTo [androidJvm] fun goTo (index: Int ) next [androidJvm] fun next () onPrepared [androidJvm] open override fun onPrepared (mp: MediaPlayer ?) Called when the media file is ready for playback. pause [androidJvm] fun pause () previous [androidJvm] fun previous () resume [androidJvm] fun resume () seekTo [androidJvm] fun seekTo (progression: Any ) start [androidJvm] fun start () startPlayer [androidJvm] fun startPlayer () stop [androidJvm] fun stop ()","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/#properties","text":"Name Summary currentPosition [androidJvm] val currentPosition : Double duration [androidJvm] val duration : Double isPaused [androidJvm] var isPaused : Boolean isPlaying [androidJvm] val isPlaying : Boolean isPrepared [androidJvm] var isPrepared : Boolean mediaPlayer [androidJvm] var mediaPlayer : MediaPlayer progress [androidJvm] var progress : ProgressDialog ? = null","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/-r2-media-player/","text":"// navigator / org.readium.r2.navigator.audiobook / R2MediaPlayer / R2MediaPlayer R2MediaPlayer \u00b6 [androidJvm]\\ fun R2MediaPlayer (items: List < Link >, callback: MediaPlayerCallback )","title":" r2 media player"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/-r2-media-player/#r2mediaplayer","text":"[androidJvm]\\ fun R2MediaPlayer (items: List < Link >, callback: MediaPlayerCallback )","title":"R2MediaPlayer"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/current-position/","text":"// navigator / org.readium.r2.navigator.audiobook / R2MediaPlayer / currentPosition currentPosition \u00b6 [androidJvm]\\ val currentPosition : Double","title":"Current position"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/current-position/#currentposition","text":"[androidJvm]\\ val currentPosition : Double","title":"currentPosition"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/duration/","text":"// navigator / org.readium.r2.navigator.audiobook / R2MediaPlayer / duration duration \u00b6 [androidJvm]\\ val duration : Double","title":"Duration"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/duration/#duration","text":"[androidJvm]\\ val duration : Double","title":"duration"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/go-to/","text":"// navigator / org.readium.r2.navigator.audiobook / R2MediaPlayer / goTo goTo \u00b6 [androidJvm]\\ fun goTo (index: Int )","title":"Go to"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/go-to/#goto","text":"[androidJvm]\\ fun goTo (index: Int )","title":"goTo"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/is-paused/","text":"// navigator / org.readium.r2.navigator.audiobook / R2MediaPlayer / isPaused isPaused \u00b6 [androidJvm]\\ var isPaused : Boolean","title":"Is paused"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/is-paused/#ispaused","text":"[androidJvm]\\ var isPaused : Boolean","title":"isPaused"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/is-playing/","text":"// navigator / org.readium.r2.navigator.audiobook / R2MediaPlayer / isPlaying isPlaying \u00b6 [androidJvm]\\ val isPlaying : Boolean","title":"Is playing"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/is-playing/#isplaying","text":"[androidJvm]\\ val isPlaying : Boolean","title":"isPlaying"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/is-prepared/","text":"// navigator / org.readium.r2.navigator.audiobook / R2MediaPlayer / isPrepared isPrepared \u00b6 [androidJvm]\\ var isPrepared : Boolean","title":"Is prepared"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/is-prepared/#isprepared","text":"[androidJvm]\\ var isPrepared : Boolean","title":"isPrepared"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/media-player/","text":"// navigator / org.readium.r2.navigator.audiobook / R2MediaPlayer / mediaPlayer mediaPlayer \u00b6 [androidJvm]\\ var mediaPlayer : MediaPlayer","title":"Media player"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/media-player/#mediaplayer","text":"[androidJvm]\\ var mediaPlayer : MediaPlayer","title":"mediaPlayer"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/next/","text":"// navigator / org.readium.r2.navigator.audiobook / R2MediaPlayer / next next \u00b6 [androidJvm]\\ fun next ()","title":"Next"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/next/#next","text":"[androidJvm]\\ fun next ()","title":"next"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/on-prepared/","text":"// navigator / org.readium.r2.navigator.audiobook / R2MediaPlayer / onPrepared onPrepared \u00b6 [androidJvm]\\ open override fun onPrepared (mp: MediaPlayer ?) Called when the media file is ready for playback. Parameters \u00b6 androidJvm mp the MediaPlayer that is ready for playback","title":"On prepared"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/on-prepared/#onprepared","text":"[androidJvm]\\ open override fun onPrepared (mp: MediaPlayer ?) Called when the media file is ready for playback.","title":"onPrepared"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/on-prepared/#parameters","text":"androidJvm mp the MediaPlayer that is ready for playback","title":"Parameters"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/pause/","text":"// navigator / org.readium.r2.navigator.audiobook / R2MediaPlayer / pause pause \u00b6 [androidJvm]\\ fun pause ()","title":"Pause"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/pause/#pause","text":"[androidJvm]\\ fun pause ()","title":"pause"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/previous/","text":"// navigator / org.readium.r2.navigator.audiobook / R2MediaPlayer / previous previous \u00b6 [androidJvm]\\ fun previous ()","title":"Previous"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/previous/#previous","text":"[androidJvm]\\ fun previous ()","title":"previous"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/progress/","text":"// navigator / org.readium.r2.navigator.audiobook / R2MediaPlayer / progress progress \u00b6 [androidJvm]\\ var progress : ProgressDialog ? = null","title":"Progress"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/progress/#progress","text":"[androidJvm]\\ var progress : ProgressDialog ? = null","title":"progress"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/resume/","text":"// navigator / org.readium.r2.navigator.audiobook / R2MediaPlayer / resume resume \u00b6 [androidJvm]\\ fun resume ()","title":"Resume"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/resume/#resume","text":"[androidJvm]\\ fun resume ()","title":"resume"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/seek-to/","text":"// navigator / org.readium.r2.navigator.audiobook / R2MediaPlayer / seekTo seekTo \u00b6 [androidJvm]\\ fun seekTo (progression: Any )","title":"Seek to"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/seek-to/#seekto","text":"[androidJvm]\\ fun seekTo (progression: Any )","title":"seekTo"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/start-player/","text":"// navigator / org.readium.r2.navigator.audiobook / R2MediaPlayer / startPlayer startPlayer \u00b6 [androidJvm]\\ fun startPlayer ()","title":"Start player"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/start-player/#startplayer","text":"[androidJvm]\\ fun startPlayer ()","title":"startPlayer"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/start/","text":"// navigator / org.readium.r2.navigator.audiobook / R2MediaPlayer / start start \u00b6 [androidJvm]\\ fun start ()","title":"Start"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/start/#start","text":"[androidJvm]\\ fun start ()","title":"start"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/stop/","text":"// navigator / org.readium.r2.navigator.audiobook / R2MediaPlayer / stop stop \u00b6 [androidJvm]\\ fun stop ()","title":"Stop"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.audiobook/-r2-media-player/stop/#stop","text":"[androidJvm]\\ fun stop ()","title":"stop"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/","text":"// navigator / org.readium.r2.navigator.cbz Package org.readium.r2.navigator.cbz \u00b6 Types \u00b6 Name Summary R2CbzActivity [androidJvm] open class R2CbzActivity : AppCompatActivity , CoroutineScope, IR2Activity , VisualNavigator , ImageNavigatorFragment.Listener","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/#package-orgreadiumr2navigatorcbz","text":"","title":"Package org.readium.r2.navigator.cbz"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/#types","text":"Name Summary R2CbzActivity [androidJvm] open class R2CbzActivity : AppCompatActivity , CoroutineScope, IR2Activity , VisualNavigator , ImageNavigatorFragment.Listener","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/","text":"// navigator / org.readium.r2.navigator.cbz / R2CbzActivity R2CbzActivity \u00b6 [androidJvm]\\ open class R2CbzActivity : AppCompatActivity , CoroutineScope, IR2Activity , VisualNavigator , ImageNavigatorFragment.Listener Functions \u00b6 Name Summary addContentView [androidJvm] open override fun addContentView (p0: View , p1: ViewGroup.LayoutParams ) addOnContextAvailableListener [androidJvm] override fun addOnContextAvailableListener (@ NonNull listener: OnContextAvailableListener ) applyOverrideConfiguration [androidJvm] open fun applyOverrideConfiguration (p0: Configuration ) attachBaseContext [androidJvm] open override fun attachBaseContext (p0: Context ) bindIsolatedService [androidJvm] open override fun bindIsolatedService (p0: Intent , p1: Int , p2: String , p3: Executor , p4: ServiceConnection ): Boolean bindService [androidJvm] open override fun bindService (p0: Intent , p1: ServiceConnection , p2: Int ): Boolean open override fun bindService (p0: Intent , p1: Int , p2: Executor , p3: ServiceConnection ): Boolean bindServiceAsUser [androidJvm] open override fun bindServiceAsUser (p0: Intent , p1: ServiceConnection , p2: Int , p3: UserHandle ): Boolean checkCallingOrSelfPermission [androidJvm] open override fun checkCallingOrSelfPermission (p0: String ): Int checkCallingOrSelfUriPermission [androidJvm] open override fun checkCallingOrSelfUriPermission (p0: Uri , p1: Int ): Int checkCallingOrSelfUriPermissions [androidJvm] open override fun checkCallingOrSelfUriPermissions (p0: MutableList < Uri >, p1: Int ): IntArray checkCallingPermission [androidJvm] open override fun checkCallingPermission (p0: String ): Int checkCallingUriPermission [androidJvm] open override fun checkCallingUriPermission (p0: Uri , p1: Int ): Int checkCallingUriPermissions [androidJvm] open override fun checkCallingUriPermissions (p0: MutableList < Uri >, p1: Int ): IntArray checkPermission [androidJvm] open override fun checkPermission (p0: String , p1: Int , p2: Int ): Int checkSelfPermission [androidJvm] open override fun checkSelfPermission (p0: String ): Int checkUriPermission [androidJvm] open override fun checkUriPermission (p0: Uri , p1: Int , p2: Int , p3: Int ): Int open override fun checkUriPermission (p0: Uri ?, p1: String ?, p2: String ?, p3: Int , p4: Int , p5: Int ): Int checkUriPermissions [androidJvm] open override fun checkUriPermissions (p0: MutableList < Uri >, p1: Int , p2: Int , p3: Int ): IntArray closeContextMenu [androidJvm] open fun closeContextMenu () closeOptionsMenu [androidJvm] open override fun closeOptionsMenu () createAttributionContext [androidJvm] open override fun createAttributionContext (p0: String ?): Context createConfigurationContext [androidJvm] open override fun createConfigurationContext (p0: Configuration ): Context createContext [androidJvm] open override fun createContext (p0: ContextParams ): Context createContextForSplit [androidJvm] open override fun createContextForSplit (p0: String ): Context createDeviceProtectedStorageContext [androidJvm] open override fun createDeviceProtectedStorageContext (): Context createDisplayContext [androidJvm] open override fun createDisplayContext (p0: Display ): Context createPackageContext [androidJvm] open override fun createPackageContext (p0: String , p1: Int ): Context createPendingResult [androidJvm] open fun createPendingResult (p0: Int , p1: Intent , p2: Int ): PendingIntent createWindowContext [androidJvm] open override fun createWindowContext (p0: Int , p1: Bundle ?): Context open override fun createWindowContext (p0: Display , p1: Int , p2: Bundle ?): Context databaseList [androidJvm] open override fun databaseList (): Array < String > deleteDatabase [androidJvm] open override fun deleteDatabase (p0: String ): Boolean deleteFile [androidJvm] open override fun deleteFile (p0: String ): Boolean deleteSharedPreferences [androidJvm] open override fun deleteSharedPreferences (p0: String ): Boolean dismissKeyboardShortcutsHelper [androidJvm] fun dismissKeyboardShortcutsHelper () dispatchFragmentsOnCreateView [androidJvm] @ Nullable fun dispatchFragmentsOnCreateView (@ Nullable p0: View ?, @ NonNull p1: String , @ NonNull p2: Context , @ NonNull p3: AttributeSet ): View ? dispatchGenericMotionEvent [androidJvm] open override fun dispatchGenericMotionEvent (p0: MotionEvent ): Boolean dispatchKeyEvent [androidJvm] open override fun dispatchKeyEvent (p0: KeyEvent ): Boolean dispatchKeyShortcutEvent [androidJvm] open override fun dispatchKeyShortcutEvent (event: KeyEvent ): Boolean dispatchPopulateAccessibilityEvent [androidJvm] open override fun dispatchPopulateAccessibilityEvent (p0: AccessibilityEvent ): Boolean dispatchTouchEvent [androidJvm] open override fun dispatchTouchEvent (p0: MotionEvent ): Boolean dispatchTrackballEvent [androidJvm] open override fun dispatchTrackballEvent (p0: MotionEvent ): Boolean dump [androidJvm] open override fun dump (@ NonNull p0: String , @ Nullable p1: FileDescriptor ?, @ NonNull p2: PrintWriter , @ Nullable p3: Array < String >?) enforceCallingOrSelfPermission [androidJvm] open override fun enforceCallingOrSelfPermission (p0: String , p1: String ?) enforceCallingOrSelfUriPermission [androidJvm] open override fun enforceCallingOrSelfUriPermission (p0: Uri , p1: Int , p2: String ) enforceCallingPermission [androidJvm] open override fun enforceCallingPermission (p0: String , p1: String ?) enforceCallingUriPermission [androidJvm] open override fun enforceCallingUriPermission (p0: Uri , p1: Int , p2: String ) enforcePermission [androidJvm] open override fun enforcePermission (p0: String , p1: Int , p2: Int , p3: String ?) enforceUriPermission [androidJvm] open override fun enforceUriPermission (p0: Uri , p1: Int , p2: Int , p3: Int , p4: String ) open override fun enforceUriPermission (p0: Uri ?, p1: String ?, p2: String ?, p3: Int , p4: Int , p5: Int , p6: String ?) ensureViewModelStore [androidJvm] open fun ensureViewModelStore () enterPictureInPictureMode [androidJvm] open fun enterPictureInPictureMode (p0: PictureInPictureParams ): Boolean fileList [androidJvm] open override fun fileList (): Array < String > findViewById [androidJvm] open override fun < T : View > findViewById (@ IdRes p0: Int ): T finish [androidJvm] open override fun finish () finishActivity [androidJvm] open fun finishActivity (p0: Int ) finishAffinity [androidJvm] open fun finishAffinity () finishAfterTransition [androidJvm] open fun finishAfterTransition () finishAndRemoveTask [androidJvm] open fun finishAndRemoveTask () getActionBar [androidJvm] open fun getActionBar (): ActionBar ? getActivityResultRegistry [androidJvm] @ NonNull override fun getActivityResultRegistry (): ActivityResultRegistry getApplication [androidJvm] fun getApplication (): Application getApplicationContext [androidJvm] open override fun getApplicationContext (): Context getApplicationInfo [androidJvm] open override fun getApplicationInfo (): ApplicationInfo getAssets [androidJvm] open override fun getAssets (): AssetManager getAttributionSource [androidJvm] open override fun getAttributionSource (): AttributionSource getAttributionTag [androidJvm] open override fun getAttributionTag (): String ? getBaseContext [androidJvm] open fun getBaseContext (): Context getCacheDir [androidJvm] open override fun getCacheDir (): File getCallingActivity [androidJvm] open fun getCallingActivity (): ComponentName ? getCallingPackage [androidJvm] open fun getCallingPackage (): String ? getChangingConfigurations [androidJvm] open fun getChangingConfigurations (): Int getClassLoader [androidJvm] open override fun getClassLoader (): ClassLoader getCodeCacheDir [androidJvm] open override fun getCodeCacheDir (): File getColor [androidJvm] fun getColor (p0: Int ): Int getColorStateList [androidJvm] fun getColorStateList (p0: Int ): ColorStateList getComponentName [androidJvm] open fun getComponentName (): ComponentName getContentResolver [androidJvm] open override fun getContentResolver (): ContentResolver getContentScene [androidJvm] open fun getContentScene (): Scene getContentTransitionManager [androidJvm] open fun getContentTransitionManager (): TransitionManager getCurrentFocus [androidJvm] open fun getCurrentFocus (): View ? getDatabasePath [androidJvm] open override fun getDatabasePath (p0: String ): File getDataDir [androidJvm] open override fun getDataDir (): File getDefaultViewModelProviderFactory [androidJvm] @ NonNull open override fun getDefaultViewModelProviderFactory (): ViewModelProvider.Factory getDelegate [androidJvm] @ NonNull open fun getDelegate (): AppCompatDelegate getDir [androidJvm] open override fun getDir (p0: String , p1: Int ): File getDisplay [androidJvm] open override fun getDisplay (): Display ? getDrawable [androidJvm] fun getDrawable (p0: Int ): Drawable ? getDrawerToggleDelegate [androidJvm] @ Nullable open override fun getDrawerToggleDelegate (): ActionBarDrawerToggle.Delegate ? getExternalCacheDir [androidJvm] open override fun getExternalCacheDir (): File ? getExternalCacheDirs [androidJvm] open override fun getExternalCacheDirs (): Array < File > getExternalFilesDir [androidJvm] open override fun getExternalFilesDir (p0: String ?): File ? getExternalFilesDirs [androidJvm] open override fun getExternalFilesDirs (p0: String ): Array < File > getExternalMediaDirs [androidJvm] open override fun getExternalMediaDirs (): Array < File > getFilesDir [androidJvm] open override fun getFilesDir (): File getFileStreamPath [androidJvm] open override fun getFileStreamPath (p0: String ): File getIntent [androidJvm] open fun getIntent (): Intent getLastNonConfigurationInstance [androidJvm] open fun getLastNonConfigurationInstance (): Any ? getLayoutInflater [androidJvm] open fun getLayoutInflater (): LayoutInflater getLifecycle [androidJvm] @ NonNull open override fun getLifecycle (): Lifecycle getLocalClassName [androidJvm] open fun getLocalClassName (): String getMainExecutor [androidJvm] open override fun getMainExecutor (): Executor getMainLooper [androidJvm] open override fun getMainLooper (): Looper getMaxNumPictureInPictureActions [androidJvm] open fun getMaxNumPictureInPictureActions (): Int getMediaController [androidJvm] fun getMediaController (): MediaController getMenuInflater [androidJvm] @ NonNull open override fun getMenuInflater (): MenuInflater getNoBackupFilesDir [androidJvm] open override fun getNoBackupFilesDir (): File getObbDir [androidJvm] open override fun getObbDir (): File getObbDirs [androidJvm] open override fun getObbDirs (): Array < File > getOnBackPressedDispatcher [androidJvm] @ NonNull override fun getOnBackPressedDispatcher (): OnBackPressedDispatcher getOpPackageName [androidJvm] open override fun getOpPackageName (): String getPackageCodePath [androidJvm] open override fun getPackageCodePath (): String getPackageManager [androidJvm] open override fun getPackageManager (): PackageManager getPackageName [androidJvm] open override fun getPackageName (): String getPackageResourcePath [androidJvm] open override fun getPackageResourcePath (): String getParams [androidJvm] open override fun getParams (): ContextParams ? getParent [androidJvm] fun getParent (): Activity getParentActivityIntent [androidJvm] open fun getParentActivityIntent (): Intent ? getPreferences [androidJvm] open fun getPreferences (p0: Int ): SharedPreferences getReferrer [androidJvm] open fun getReferrer (): Uri ? getRequestedOrientation [androidJvm] open fun getRequestedOrientation (): Int getResources [androidJvm] open override fun getResources (): Resources getSavedStateRegistry [androidJvm] @ NonNull override fun getSavedStateRegistry (): SavedStateRegistry getSearchEvent [androidJvm] fun getSearchEvent (): SearchEvent getSharedPreferences [androidJvm] open override fun getSharedPreferences (p0: String , p1: Int ): SharedPreferences getSplashScreen [androidJvm] fun getSplashScreen (): SplashScreen getString [androidJvm] fun getString (p0: Int ): String fun getString (p0: Int , vararg p1: Any ): String getSupportActionBar [androidJvm] @ Nullable open fun getSupportActionBar (): ActionBar ? getSupportFragmentManager [androidJvm] @ NonNull open fun getSupportFragmentManager (): FragmentManager getSupportParentActivityIntent [androidJvm] @ Nullable open override fun getSupportParentActivityIntent (): Intent ? getSystemService [androidJvm] open override fun getSystemService (p0: String ): Any fun < T : Any > getSystemService (p0: Class < T >): T getSystemServiceName [androidJvm] open override fun getSystemServiceName (p0: Class <*>): String ? getTaskId [androidJvm] open fun getTaskId (): Int getText [androidJvm] fun getText (p0: Int ): CharSequence getTheme [androidJvm] open override fun getTheme (): Resources.Theme getTitle [androidJvm] fun getTitle (): CharSequence getTitleColor [androidJvm] fun getTitleColor (): Int getViewModelStore [androidJvm] @ NonNull open override fun getViewModelStore (): ViewModelStore getVoiceInteractor [androidJvm] open fun getVoiceInteractor (): VoiceInteractor getVolumeControlStream [androidJvm] fun getVolumeControlStream (): Int getWindow [androidJvm] open fun getWindow (): Window getWindowManager [androidJvm] open fun getWindowManager (): WindowManager go [androidJvm] open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link. [androidJvm] open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . goBackward [androidJvm] open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction. goForward [androidJvm] open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction. grantUriPermission [androidJvm] open override fun grantUriPermission (p0: String , p1: Uri , p2: Int ) hasWindowFocus [androidJvm] open fun hasWindowFocus (): Boolean highlightActivated [androidJvm] open fun highlightActivated (id: String ) highlightAnnotationMarkActivated [androidJvm] open fun highlightAnnotationMarkActivated (id: String ) invalidateOptionsMenu [androidJvm] open override fun invalidateOptionsMenu () isActivityTransitionRunning [androidJvm] open fun isActivityTransitionRunning (): Boolean isChangingConfigurations [androidJvm] open fun isChangingConfigurations (): Boolean isChild [androidJvm] fun isChild (): Boolean isDestroyed [androidJvm] open fun isDestroyed (): Boolean isDeviceProtectedStorage [androidJvm] open override fun isDeviceProtectedStorage (): Boolean isFinishing [androidJvm] open fun isFinishing (): Boolean isImmersive [androidJvm] open fun isImmersive (): Boolean isInMultiWindowMode [androidJvm] open fun isInMultiWindowMode (): Boolean isInPictureInPictureMode [androidJvm] open fun isInPictureInPictureMode (): Boolean isLaunchedFromBubble [androidJvm] open fun isLaunchedFromBubble (): Boolean isLocalVoiceInteractionSupported [androidJvm] open fun isLocalVoiceInteractionSupported (): Boolean isRestricted [androidJvm] open override fun isRestricted (): Boolean isTaskRoot [androidJvm] open fun isTaskRoot (): Boolean isUiContext [androidJvm] open override fun isUiContext (): Boolean isVoiceInteraction [androidJvm] open fun isVoiceInteraction (): Boolean isVoiceInteractionRoot [androidJvm] open fun isVoiceInteractionRoot (): Boolean markFragmentsCreated [androidJvm] open fun markFragmentsCreated () moveDatabaseFrom [androidJvm] open override fun moveDatabaseFrom (p0: Context , p1: String ): Boolean moveSharedPreferencesFrom [androidJvm] open override fun moveSharedPreferencesFrom (p0: Context , p1: String ): Boolean moveTaskToBack [androidJvm] open fun moveTaskToBack (p0: Boolean ): Boolean navigateUpTo [androidJvm] open fun navigateUpTo (p0: Intent ): Boolean obtainStyledAttributes [androidJvm] fun obtainStyledAttributes (p0: IntArray ): TypedArray fun obtainStyledAttributes (p0: AttributeSet ?, p1: IntArray ): TypedArray fun obtainStyledAttributes (p0: Int , p1: IntArray ): TypedArray fun obtainStyledAttributes (p0: AttributeSet ?, p1: IntArray , p2: Int , p3: Int ): TypedArray onActionModeFinished [androidJvm] open override fun onActionModeFinished (p0: ActionMode ) onActionModeStarted [androidJvm] open override fun onActionModeStarted (p0: ActionMode ) onActivityReenter [androidJvm] open fun onActivityReenter (p0: Int , p1: Intent ) onApplyThemeResource [androidJvm] open override fun onApplyThemeResource (p0: Resources.Theme , p1: Int , p2: Boolean ) onAttachedToWindow [androidJvm] open override fun onAttachedToWindow () onBackPressed [androidJvm] @ MainThread open override fun onBackPressed () onChildTitleChanged [androidJvm] open fun onChildTitleChanged (p0: Activity , p1: CharSequence ) onConfigurationChanged [androidJvm] open override fun onConfigurationChanged (@ NonNull p0: Configuration ) onContentChanged [androidJvm] open override fun onContentChanged () onContextItemSelected [androidJvm] open fun onContextItemSelected (p0: MenuItem ): Boolean onContextMenuClosed [androidJvm] open fun onContextMenuClosed (p0: Menu ) onCreate [androidJvm] open fun onCreate (p0: Bundle ?, p1: PersistableBundle ?) onCreateContextMenu [androidJvm] open override fun onCreateContextMenu (p0: ContextMenu , p1: View , p2: ContextMenu.ContextMenuInfo ) onCreateDescription [androidJvm] open fun onCreateDescription (): CharSequence ? onCreateNavigateUpTaskStack [androidJvm] open fun onCreateNavigateUpTaskStack (p0: TaskStackBuilder ) onCreateOptionsMenu [androidJvm] open fun onCreateOptionsMenu (p0: Menu ): Boolean onCreatePanelMenu [androidJvm] open override fun onCreatePanelMenu (p0: Int , @ NonNull p1: Menu ): Boolean onCreatePanelView [androidJvm] open override fun onCreatePanelView (p0: Int ): View ? onCreateSupportNavigateUpTaskStack [androidJvm] open fun onCreateSupportNavigateUpTaskStack (@ NonNull p0: TaskStackBuilder ) onCreateView [androidJvm] @ Nullable open override fun onCreateView (@ NonNull p0: String , @ NonNull p1: Context , @ NonNull p2: AttributeSet ): View ? @ Nullable open override fun onCreateView (@ Nullable p0: View ?, @ NonNull p1: String , @ NonNull p2: Context , @ NonNull p3: AttributeSet ): View ? onDestroy [androidJvm] open override fun onDestroy () onDetachedFromWindow [androidJvm] open override fun onDetachedFromWindow () onEnterAnimationComplete [androidJvm] open fun onEnterAnimationComplete () onGenericMotionEvent [androidJvm] open fun onGenericMotionEvent (p0: MotionEvent ): Boolean onGetDirectActions [androidJvm] open fun onGetDirectActions (p0: CancellationSignal , p1: Consumer < MutableList < DirectAction >>) onKeyDown [androidJvm] open override fun onKeyDown (p0: Int , p1: KeyEvent ): Boolean onKeyLongPress [androidJvm] open override fun onKeyLongPress (p0: Int , p1: KeyEvent ): Boolean onKeyMultiple [androidJvm] open override fun onKeyMultiple (p0: Int , p1: Int , p2: KeyEvent ): Boolean onKeyShortcut [androidJvm] open fun onKeyShortcut (p0: Int , p1: KeyEvent ): Boolean onKeyUp [androidJvm] open override fun onKeyUp (p0: Int , p1: KeyEvent ): Boolean onLocalVoiceInteractionStarted [androidJvm] open fun onLocalVoiceInteractionStarted () onLocalVoiceInteractionStopped [androidJvm] open fun onLocalVoiceInteractionStopped () onLowMemory [androidJvm] open override fun onLowMemory () onMenuItemSelected [androidJvm] override fun onMenuItemSelected (p0: Int , @ NonNull p1: MenuItem ): Boolean onMenuOpened [androidJvm] open override fun onMenuOpened (p0: Int , p1: Menu ): Boolean onMultiWindowModeChanged [androidJvm] @ CallSuper open override fun onMultiWindowModeChanged (p0: Boolean ) open fun onMultiWindowModeChanged (p0: Boolean , p1: Configuration ) onNavigateUp [androidJvm] open fun onNavigateUp (): Boolean onNewIntent [androidJvm] @ CallSuper open override fun onNewIntent (p0: Intent ) onNightModeChanged [androidJvm] open fun onNightModeChanged (p0: Int ) onOptionsItemSelected [androidJvm] open fun onOptionsItemSelected (p0: MenuItem ): Boolean onOptionsMenuClosed [androidJvm] open fun onOptionsMenuClosed (p0: Menu ) onPageChanged [androidJvm] open fun onPageChanged (pageIndex: Int , totalPages: Int , url: String ) onPageEnded [androidJvm] open fun onPageEnded (end: Boolean ) onPageLoaded [androidJvm] open fun onPageLoaded () onPanelClosed [androidJvm] open override fun onPanelClosed (p0: Int , @ NonNull p1: Menu ) onPause [androidJvm] open override fun onPause () onPerformDirectAction [androidJvm] open fun onPerformDirectAction (p0: String , p1: Bundle , p2: CancellationSignal , p3: Consumer < Bundle >) onPictureInPictureModeChanged [androidJvm] @ CallSuper open override fun onPictureInPictureModeChanged (p0: Boolean ) open fun onPictureInPictureModeChanged (p0: Boolean , p1: Configuration ) onPictureInPictureRequested [androidJvm] open fun onPictureInPictureRequested (): Boolean onPictureInPictureUiStateChanged [androidJvm] open fun onPictureInPictureUiStateChanged (p0: PictureInPictureUiState ) onPointerCaptureChanged [androidJvm] open fun onPointerCaptureChanged (p0: Boolean ) onPostCreate [androidJvm] open override fun onPostCreate (@ Nullable p0: Bundle ?) open fun onPostCreate (p0: Bundle ?, p1: PersistableBundle ?) onPostResume [androidJvm] open override fun onPostResume () onPrepareNavigateUpTaskStack [androidJvm] open fun onPrepareNavigateUpTaskStack (p0: TaskStackBuilder ) onPrepareOptionsMenu [androidJvm] open fun onPrepareOptionsMenu (p0: Menu ): Boolean onPreparePanel [androidJvm] open override fun onPreparePanel (p0: Int , @ Nullable p1: View ?, @ NonNull p2: Menu ): Boolean onPrepareSupportNavigateUpTaskStack [androidJvm] open fun onPrepareSupportNavigateUpTaskStack (@ NonNull p0: TaskStackBuilder ) onProvideAssistContent [androidJvm] open fun onProvideAssistContent (p0: AssistContent ) onProvideAssistData [androidJvm] open fun onProvideAssistData (p0: Bundle ) onProvideKeyboardShortcuts [androidJvm] open override fun onProvideKeyboardShortcuts (p0: MutableList < KeyboardShortcutGroup >, p1: Menu ?, p2: Int ) onProvideReferrer [androidJvm] open fun onProvideReferrer (): Uri onRequestPermissionsResult [androidJvm] @ CallSuper open override fun onRequestPermissionsResult (p0: Int , @ NonNull p1: Array < String >, @ NonNull p2: IntArray ) onRestart [androidJvm] open fun onRestart () onRestoreInstanceState [androidJvm] open fun onRestoreInstanceState (p0: Bundle ) open fun onRestoreInstanceState (p0: Bundle ?, p1: PersistableBundle ?) onResume [androidJvm] open override fun onResume () onResumeFragments [androidJvm] open fun onResumeFragments () onRetainNonConfigurationInstance [androidJvm] @ Nullable override fun onRetainNonConfigurationInstance (): Any ? onSaveInstanceState [androidJvm] @ CallSuper open override fun onSaveInstanceState (@ NonNull outState: Bundle ) open fun onSaveInstanceState (p0: Bundle , p1: PersistableBundle ) onSearchRequested [androidJvm] open override fun onSearchRequested (): Boolean open override fun onSearchRequested (p0: SearchEvent ?): Boolean onStart [androidJvm] open override fun onStart () onStateNotSaved [androidJvm] open override fun onStateNotSaved () onStop [androidJvm] open override fun onStop () onSupportActionModeFinished [androidJvm] @ CallSuper open override fun onSupportActionModeFinished (@ NonNull p0: ActionMode ) onSupportActionModeStarted [androidJvm] @ CallSuper open override fun onSupportActionModeStarted (@ NonNull p0: ActionMode ) onSupportNavigateUp [androidJvm] open fun onSupportNavigateUp (): Boolean onTap [androidJvm] open override fun onTap (point: PointF ): Boolean Called when the user tapped the content, but nothing handled the event internally (eg. by following an internal link). onTitleChanged [androidJvm] open override fun onTitleChanged (p0: CharSequence , p1: Int ) onTopResumedActivityChanged [androidJvm] open fun onTopResumedActivityChanged (p0: Boolean ) onTouchEvent [androidJvm] open fun onTouchEvent (p0: MotionEvent ): Boolean onTrackballEvent [androidJvm] open fun onTrackballEvent (p0: MotionEvent ): Boolean onTrimMemory [androidJvm] open override fun onTrimMemory (p0: Int ) onUserInteraction [androidJvm] open fun onUserInteraction () onUserLeaveHint [androidJvm] open fun onUserLeaveHint () onWindowAttributesChanged [androidJvm] open override fun onWindowAttributesChanged (p0: WindowManager.LayoutParams ) onWindowFocusChanged [androidJvm] open override fun onWindowFocusChanged (p0: Boolean ) onWindowStartingActionMode [androidJvm] open override fun onWindowStartingActionMode (p0: ActionMode.Callback ): ActionMode ? open override fun onWindowStartingActionMode (p0: ActionMode.Callback , p1: Int ): ActionMode ? onWindowStartingSupportActionMode [androidJvm] @ Nullable open override fun onWindowStartingSupportActionMode (@ NonNull p0: ActionMode.Callback ): ActionMode ? openContextMenu [androidJvm] open fun openContextMenu (p0: View ) openFileInput [androidJvm] open override fun openFileInput (p0: String ): FileInputStream openFileOutput [androidJvm] open override fun openFileOutput (p0: String , p1: Int ): FileOutputStream openOptionsMenu [androidJvm] open override fun openOptionsMenu () openOrCreateDatabase [androidJvm] open override fun openOrCreateDatabase (p0: String , p1: Int , p2: SQLiteDatabase.CursorFactory ): SQLiteDatabase open override fun openOrCreateDatabase (p0: String , p1: Int , p2: SQLiteDatabase.CursorFactory , p3: DatabaseErrorHandler ?): SQLiteDatabase overridePendingTransition [androidJvm] open fun overridePendingTransition (p0: Int , p1: Int ) peekAvailableContext [androidJvm] @ Nullable open override fun peekAvailableContext (): Context ? postponeEnterTransition [androidJvm] open fun postponeEnterTransition () recreate [androidJvm] open fun recreate () registerActivityLifecycleCallbacks [androidJvm] open fun registerActivityLifecycleCallbacks (p0: Application.ActivityLifecycleCallbacks ) registerComponentCallbacks [androidJvm] open fun registerComponentCallbacks (p0: ComponentCallbacks ) registerForActivityResult [androidJvm] @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull contract: ActivityResultContract < I , O >, @ NonNull callback: ActivityResultCallback < O >): ActivityResultLauncher < I > @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull contract: ActivityResultContract < I , O >, @ NonNull registry: ActivityResultRegistry , @ NonNull callback: ActivityResultCallback < O >): ActivityResultLauncher < I > registerForContextMenu [androidJvm] open fun registerForContextMenu (p0: View ) registerReceiver [androidJvm] open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter ): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: Int ): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: String ?, p3: Handler ?): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: String ?, p3: Handler ?, p4: Int ): Intent ? releaseInstance [androidJvm] open fun releaseInstance (): Boolean removeOnContextAvailableListener [androidJvm] override fun removeOnContextAvailableListener (@ NonNull listener: OnContextAvailableListener ) reportFullyDrawn [androidJvm] open override fun reportFullyDrawn () requestDragAndDropPermissions [androidJvm] open fun requestDragAndDropPermissions (p0: DragEvent ): DragAndDropPermissions requestPermissions [androidJvm] fun requestPermissions (p0: Array < String >, p1: Int ) requestShowKeyboardShortcuts [androidJvm] fun requestShowKeyboardShortcuts () requestWindowFeature [androidJvm] fun requestWindowFeature (p0: Int ): Boolean requireViewById [androidJvm] fun < T : View > requireViewById (p0: Int ): T revokeUriPermission [androidJvm] open override fun revokeUriPermission (p0: Uri , p1: Int ) open override fun revokeUriPermission (p0: String , p1: Uri , p2: Int ) runOnUiThread [androidJvm] fun runOnUiThread (p0: Runnable ) sendBroadcast [androidJvm] open override fun sendBroadcast (p0: Intent ) open override fun sendBroadcast (p0: Intent , p1: String ?) sendBroadcastAsUser [androidJvm] open override fun sendBroadcastAsUser (p0: Intent , p1: UserHandle ) open override fun sendBroadcastAsUser (p0: Intent , p1: UserHandle , p2: String ?) sendBroadcastWithMultiplePermissions [androidJvm] open fun sendBroadcastWithMultiplePermissions (p0: Intent , p1: Array < String >) sendOrderedBroadcast [androidJvm] open override fun sendOrderedBroadcast (p0: Intent , p1: String ?) open override fun sendOrderedBroadcast (p0: Intent , p1: String ?, p2: BroadcastReceiver ?, p3: Handler ?, p4: Int , p5: String ?, p6: Bundle ?) open override fun sendOrderedBroadcast (p0: Intent , p1: String ?, p2: String ?, p3: BroadcastReceiver ?, p4: Handler ?, p5: Int , p6: String ?, p7: Bundle ?) open fun sendOrderedBroadcast (p0: Intent , p1: Int , p2: String ?, p3: String ?, p4: BroadcastReceiver ?, p5: Handler ?, p6: String ?, p7: Bundle ?, p8: Bundle ?) sendOrderedBroadcastAsUser [androidJvm] open override fun sendOrderedBroadcastAsUser (p0: Intent , p1: UserHandle , p2: String ?, p3: BroadcastReceiver ?, p4: Handler ?, p5: Int , p6: String ?, p7: Bundle ?) setActionBar [androidJvm] open fun setActionBar (p0: Toolbar ?) setContentTransitionManager [androidJvm] open fun setContentTransitionManager (p0: TransitionManager ) setContentView [androidJvm] open override fun setContentView (p0: View ) open override fun setContentView (@ LayoutRes p0: Int ) open override fun setContentView (p0: View , p1: ViewGroup.LayoutParams ) setDefaultKeyMode [androidJvm] fun setDefaultKeyMode (p0: Int ) setEnterSharedElementCallback [androidJvm] open fun setEnterSharedElementCallback (p0: SharedElementCallback ) open fun setEnterSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setExitSharedElementCallback [androidJvm] open fun setExitSharedElementCallback (p0: SharedElementCallback ) open fun setExitSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setFeatureDrawable [androidJvm] fun setFeatureDrawable (p0: Int , p1: Drawable ) setFeatureDrawableAlpha [androidJvm] fun setFeatureDrawableAlpha (p0: Int , p1: Int ) setFeatureDrawableResource [androidJvm] fun setFeatureDrawableResource (p0: Int , p1: Int ) setFeatureDrawableUri [androidJvm] fun setFeatureDrawableUri (p0: Int , p1: Uri ) setFinishOnTouchOutside [androidJvm] open fun setFinishOnTouchOutside (p0: Boolean ) setImmersive [androidJvm] open fun setImmersive (p0: Boolean ) setInheritShowWhenLocked [androidJvm] open fun setInheritShowWhenLocked (p0: Boolean ) setIntent [androidJvm] open fun setIntent (p0: Intent ) setLocusContext [androidJvm] open fun setLocusContext (p0: LocusId ?, p1: Bundle ?) setMediaController [androidJvm] fun setMediaController (p0: MediaController ) setPictureInPictureParams [androidJvm] open fun setPictureInPictureParams (p0: PictureInPictureParams ) setRequestedOrientation [androidJvm] open fun setRequestedOrientation (p0: Int ) setResult [androidJvm] fun setResult (p0: Int ) fun setResult (p0: Int , p1: Intent ) setShowWhenLocked [androidJvm] open fun setShowWhenLocked (p0: Boolean ) setSupportActionBar [androidJvm] open fun setSupportActionBar (@ Nullable p0: Toolbar ?) setTaskDescription [androidJvm] open fun setTaskDescription (p0: ActivityManager.TaskDescription ) setTheme [androidJvm] open fun setTheme (p0: Resources.Theme ?) open override fun setTheme (@ StyleRes p0: Int ) setTitle [androidJvm] open fun setTitle (p0: CharSequence ) open fun setTitle (p0: Int ) setTranslucent [androidJvm] open fun setTranslucent (p0: Boolean ): Boolean setTurnScreenOn [androidJvm] open fun setTurnScreenOn (p0: Boolean ) setVisible [androidJvm] open fun setVisible (p0: Boolean ) setVolumeControlStream [androidJvm] fun setVolumeControlStream (p0: Int ) setVrModeEnabled [androidJvm] open fun setVrModeEnabled (p0: Boolean , p1: ComponentName ) shouldShowRequestPermissionRationale [androidJvm] open fun shouldShowRequestPermissionRationale (p0: String ): Boolean shouldUpRecreateTask [androidJvm] open fun shouldUpRecreateTask (p0: Intent ): Boolean showAssist [androidJvm] open fun showAssist (p0: Bundle ): Boolean showLockTaskEscapeMessage [androidJvm] open fun showLockTaskEscapeMessage () startActionMode [androidJvm] open fun startActionMode (p0: ActionMode.Callback ): ActionMode ? open fun startActionMode (p0: ActionMode.Callback , p1: Int ): ActionMode ? startActivities [androidJvm] open override fun startActivities (p0: Array < Intent >) open override fun startActivities (p0: Array < Intent >, p1: Bundle ?) startActivity [androidJvm] open override fun startActivity (p0: Intent ) open override fun startActivity (p0: Intent , p1: Bundle ?) startActivityFromFragment [androidJvm] open fun startActivityFromFragment (@ NonNull p0: Fragment , p1: Intent , p2: Int ) open fun startActivityFromFragment (@ NonNull p0: Fragment , p1: Intent , p2: Int , @ Nullable p3: Bundle ?) startActivityIfNeeded [androidJvm] open fun startActivityIfNeeded (p0: Intent , p1: Int ): Boolean open fun startActivityIfNeeded (p0: Intent , p1: Int , p2: Bundle ?): Boolean startForegroundService [androidJvm] open override fun startForegroundService (p0: Intent ): ComponentName ? startInstrumentation [androidJvm] open override fun startInstrumentation (p0: ComponentName , p1: String ?, p2: Bundle ?): Boolean startIntentSender [androidJvm] open override fun startIntentSender (p0: IntentSender , p1: Intent ?, p2: Int , p3: Int , p4: Int ) open override fun startIntentSender (p0: IntentSender , p1: Intent ?, p2: Int , p3: Int , p4: Int , p5: Bundle ?) startLocalVoiceInteraction [androidJvm] open fun startLocalVoiceInteraction (p0: Bundle ) startLockTask [androidJvm] open fun startLockTask () startNextMatchingActivity [androidJvm] open fun startNextMatchingActivity (p0: Intent ): Boolean open fun startNextMatchingActivity (p0: Intent , p1: Bundle ?): Boolean startPostponedEnterTransition [androidJvm] open fun startPostponedEnterTransition () startSearch [androidJvm] open fun startSearch (p0: String ?, p1: Boolean , p2: Bundle ?, p3: Boolean ) startService [androidJvm] open override fun startService (p0: Intent ): ComponentName ? startSupportActionMode [androidJvm] @ Nullable open fun startSupportActionMode (@ NonNull p0: ActionMode.Callback ): ActionMode ? stopLocalVoiceInteraction [androidJvm] open fun stopLocalVoiceInteraction () stopLockTask [androidJvm] open fun stopLockTask () stopService [androidJvm] open override fun stopService (p0: Intent ): Boolean superDispatchKeyEvent [androidJvm] open override fun superDispatchKeyEvent (event: KeyEvent ): Boolean supportFinishAfterTransition [androidJvm] open fun supportFinishAfterTransition () supportInvalidateOptionsMenu [androidJvm] open override fun supportInvalidateOptionsMenu () supportNavigateUpTo [androidJvm] open fun supportNavigateUpTo (@ NonNull p0: Intent ) supportPostponeEnterTransition [androidJvm] open fun supportPostponeEnterTransition () supportRequestWindowFeature [androidJvm] open fun supportRequestWindowFeature (p0: Int ): Boolean supportShouldUpRecreateTask [androidJvm] open fun supportShouldUpRecreateTask (@ NonNull p0: Intent ): Boolean supportStartPostponedEnterTransition [androidJvm] open fun supportStartPostponedEnterTransition () takeKeyEvents [androidJvm] open fun takeKeyEvents (p0: Boolean ) toggleActionBar [androidJvm] open override fun toggleActionBar () open override fun toggleActionBar (v: View ?) triggerSearch [androidJvm] open fun triggerSearch (p0: String , p1: Bundle ?) unbindService [androidJvm] open override fun unbindService (p0: ServiceConnection ) unregisterActivityLifecycleCallbacks [androidJvm] open fun unregisterActivityLifecycleCallbacks (p0: Application.ActivityLifecycleCallbacks ) unregisterComponentCallbacks [androidJvm] open fun unregisterComponentCallbacks (p0: ComponentCallbacks ) unregisterForContextMenu [androidJvm] open fun unregisterForContextMenu (p0: View ) unregisterReceiver [androidJvm] open override fun unregisterReceiver (p0: BroadcastReceiver ) updateServiceGroup [androidJvm] open override fun updateServiceGroup (p0: ServiceConnection , p1: Int , p2: Int ) Properties \u00b6 Name Summary adapter [androidJvm] lateinit var adapter : R2PagerAdapter allowToggleActionBar [androidJvm] open val allowToggleActionBar : Boolean bookId [androidJvm] open override var bookId : Long coroutineContext [androidJvm] open override val coroutineContext : CoroutineContext Context of this scope. currentLocator [androidJvm] open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position. currentPagerPosition [androidJvm] val currentPagerPosition : Int mContextAwareHelper [androidJvm] val mContextAwareHelper : ContextAwareHelper mCreated [androidJvm] val mCreated : Boolean mFragmentLifecycleRegistry [androidJvm] val mFragmentLifecycleRegistry : LifecycleRegistry mFragments [androidJvm] val mFragments : FragmentController mResumed [androidJvm] val mResumed : Boolean mSavedStateRegistryController [androidJvm] val mSavedStateRegistryController : SavedStateRegistryController mStopped [androidJvm] val mStopped : Boolean preferences [androidJvm] open lateinit override var preferences : SharedPreferences publication [androidJvm] open lateinit override var publication : Publication Publication rendered by this navigator. publicationFileName [androidJvm] open lateinit override var publicationFileName : String publicationIdentifier [androidJvm] open lateinit override var publicationIdentifier : String publicationPath [androidJvm] open lateinit override var publicationPath : String readingProgression [androidJvm] open override val readingProgression : ReadingProgression Current reading progression direction. resourcePager [androidJvm] open lateinit override var resourcePager : R2ViewPager resources [androidJvm] var resources : List < String >","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/#r2cbzactivity","text":"[androidJvm]\\ open class R2CbzActivity : AppCompatActivity , CoroutineScope, IR2Activity , VisualNavigator , ImageNavigatorFragment.Listener","title":"R2CbzActivity"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/#functions","text":"Name Summary addContentView [androidJvm] open override fun addContentView (p0: View , p1: ViewGroup.LayoutParams ) addOnContextAvailableListener [androidJvm] override fun addOnContextAvailableListener (@ NonNull listener: OnContextAvailableListener ) applyOverrideConfiguration [androidJvm] open fun applyOverrideConfiguration (p0: Configuration ) attachBaseContext [androidJvm] open override fun attachBaseContext (p0: Context ) bindIsolatedService [androidJvm] open override fun bindIsolatedService (p0: Intent , p1: Int , p2: String , p3: Executor , p4: ServiceConnection ): Boolean bindService [androidJvm] open override fun bindService (p0: Intent , p1: ServiceConnection , p2: Int ): Boolean open override fun bindService (p0: Intent , p1: Int , p2: Executor , p3: ServiceConnection ): Boolean bindServiceAsUser [androidJvm] open override fun bindServiceAsUser (p0: Intent , p1: ServiceConnection , p2: Int , p3: UserHandle ): Boolean checkCallingOrSelfPermission [androidJvm] open override fun checkCallingOrSelfPermission (p0: String ): Int checkCallingOrSelfUriPermission [androidJvm] open override fun checkCallingOrSelfUriPermission (p0: Uri , p1: Int ): Int checkCallingOrSelfUriPermissions [androidJvm] open override fun checkCallingOrSelfUriPermissions (p0: MutableList < Uri >, p1: Int ): IntArray checkCallingPermission [androidJvm] open override fun checkCallingPermission (p0: String ): Int checkCallingUriPermission [androidJvm] open override fun checkCallingUriPermission (p0: Uri , p1: Int ): Int checkCallingUriPermissions [androidJvm] open override fun checkCallingUriPermissions (p0: MutableList < Uri >, p1: Int ): IntArray checkPermission [androidJvm] open override fun checkPermission (p0: String , p1: Int , p2: Int ): Int checkSelfPermission [androidJvm] open override fun checkSelfPermission (p0: String ): Int checkUriPermission [androidJvm] open override fun checkUriPermission (p0: Uri , p1: Int , p2: Int , p3: Int ): Int open override fun checkUriPermission (p0: Uri ?, p1: String ?, p2: String ?, p3: Int , p4: Int , p5: Int ): Int checkUriPermissions [androidJvm] open override fun checkUriPermissions (p0: MutableList < Uri >, p1: Int , p2: Int , p3: Int ): IntArray closeContextMenu [androidJvm] open fun closeContextMenu () closeOptionsMenu [androidJvm] open override fun closeOptionsMenu () createAttributionContext [androidJvm] open override fun createAttributionContext (p0: String ?): Context createConfigurationContext [androidJvm] open override fun createConfigurationContext (p0: Configuration ): Context createContext [androidJvm] open override fun createContext (p0: ContextParams ): Context createContextForSplit [androidJvm] open override fun createContextForSplit (p0: String ): Context createDeviceProtectedStorageContext [androidJvm] open override fun createDeviceProtectedStorageContext (): Context createDisplayContext [androidJvm] open override fun createDisplayContext (p0: Display ): Context createPackageContext [androidJvm] open override fun createPackageContext (p0: String , p1: Int ): Context createPendingResult [androidJvm] open fun createPendingResult (p0: Int , p1: Intent , p2: Int ): PendingIntent createWindowContext [androidJvm] open override fun createWindowContext (p0: Int , p1: Bundle ?): Context open override fun createWindowContext (p0: Display , p1: Int , p2: Bundle ?): Context databaseList [androidJvm] open override fun databaseList (): Array < String > deleteDatabase [androidJvm] open override fun deleteDatabase (p0: String ): Boolean deleteFile [androidJvm] open override fun deleteFile (p0: String ): Boolean deleteSharedPreferences [androidJvm] open override fun deleteSharedPreferences (p0: String ): Boolean dismissKeyboardShortcutsHelper [androidJvm] fun dismissKeyboardShortcutsHelper () dispatchFragmentsOnCreateView [androidJvm] @ Nullable fun dispatchFragmentsOnCreateView (@ Nullable p0: View ?, @ NonNull p1: String , @ NonNull p2: Context , @ NonNull p3: AttributeSet ): View ? dispatchGenericMotionEvent [androidJvm] open override fun dispatchGenericMotionEvent (p0: MotionEvent ): Boolean dispatchKeyEvent [androidJvm] open override fun dispatchKeyEvent (p0: KeyEvent ): Boolean dispatchKeyShortcutEvent [androidJvm] open override fun dispatchKeyShortcutEvent (event: KeyEvent ): Boolean dispatchPopulateAccessibilityEvent [androidJvm] open override fun dispatchPopulateAccessibilityEvent (p0: AccessibilityEvent ): Boolean dispatchTouchEvent [androidJvm] open override fun dispatchTouchEvent (p0: MotionEvent ): Boolean dispatchTrackballEvent [androidJvm] open override fun dispatchTrackballEvent (p0: MotionEvent ): Boolean dump [androidJvm] open override fun dump (@ NonNull p0: String , @ Nullable p1: FileDescriptor ?, @ NonNull p2: PrintWriter , @ Nullable p3: Array < String >?) enforceCallingOrSelfPermission [androidJvm] open override fun enforceCallingOrSelfPermission (p0: String , p1: String ?) enforceCallingOrSelfUriPermission [androidJvm] open override fun enforceCallingOrSelfUriPermission (p0: Uri , p1: Int , p2: String ) enforceCallingPermission [androidJvm] open override fun enforceCallingPermission (p0: String , p1: String ?) enforceCallingUriPermission [androidJvm] open override fun enforceCallingUriPermission (p0: Uri , p1: Int , p2: String ) enforcePermission [androidJvm] open override fun enforcePermission (p0: String , p1: Int , p2: Int , p3: String ?) enforceUriPermission [androidJvm] open override fun enforceUriPermission (p0: Uri , p1: Int , p2: Int , p3: Int , p4: String ) open override fun enforceUriPermission (p0: Uri ?, p1: String ?, p2: String ?, p3: Int , p4: Int , p5: Int , p6: String ?) ensureViewModelStore [androidJvm] open fun ensureViewModelStore () enterPictureInPictureMode [androidJvm] open fun enterPictureInPictureMode (p0: PictureInPictureParams ): Boolean fileList [androidJvm] open override fun fileList (): Array < String > findViewById [androidJvm] open override fun < T : View > findViewById (@ IdRes p0: Int ): T finish [androidJvm] open override fun finish () finishActivity [androidJvm] open fun finishActivity (p0: Int ) finishAffinity [androidJvm] open fun finishAffinity () finishAfterTransition [androidJvm] open fun finishAfterTransition () finishAndRemoveTask [androidJvm] open fun finishAndRemoveTask () getActionBar [androidJvm] open fun getActionBar (): ActionBar ? getActivityResultRegistry [androidJvm] @ NonNull override fun getActivityResultRegistry (): ActivityResultRegistry getApplication [androidJvm] fun getApplication (): Application getApplicationContext [androidJvm] open override fun getApplicationContext (): Context getApplicationInfo [androidJvm] open override fun getApplicationInfo (): ApplicationInfo getAssets [androidJvm] open override fun getAssets (): AssetManager getAttributionSource [androidJvm] open override fun getAttributionSource (): AttributionSource getAttributionTag [androidJvm] open override fun getAttributionTag (): String ? getBaseContext [androidJvm] open fun getBaseContext (): Context getCacheDir [androidJvm] open override fun getCacheDir (): File getCallingActivity [androidJvm] open fun getCallingActivity (): ComponentName ? getCallingPackage [androidJvm] open fun getCallingPackage (): String ? getChangingConfigurations [androidJvm] open fun getChangingConfigurations (): Int getClassLoader [androidJvm] open override fun getClassLoader (): ClassLoader getCodeCacheDir [androidJvm] open override fun getCodeCacheDir (): File getColor [androidJvm] fun getColor (p0: Int ): Int getColorStateList [androidJvm] fun getColorStateList (p0: Int ): ColorStateList getComponentName [androidJvm] open fun getComponentName (): ComponentName getContentResolver [androidJvm] open override fun getContentResolver (): ContentResolver getContentScene [androidJvm] open fun getContentScene (): Scene getContentTransitionManager [androidJvm] open fun getContentTransitionManager (): TransitionManager getCurrentFocus [androidJvm] open fun getCurrentFocus (): View ? getDatabasePath [androidJvm] open override fun getDatabasePath (p0: String ): File getDataDir [androidJvm] open override fun getDataDir (): File getDefaultViewModelProviderFactory [androidJvm] @ NonNull open override fun getDefaultViewModelProviderFactory (): ViewModelProvider.Factory getDelegate [androidJvm] @ NonNull open fun getDelegate (): AppCompatDelegate getDir [androidJvm] open override fun getDir (p0: String , p1: Int ): File getDisplay [androidJvm] open override fun getDisplay (): Display ? getDrawable [androidJvm] fun getDrawable (p0: Int ): Drawable ? getDrawerToggleDelegate [androidJvm] @ Nullable open override fun getDrawerToggleDelegate (): ActionBarDrawerToggle.Delegate ? getExternalCacheDir [androidJvm] open override fun getExternalCacheDir (): File ? getExternalCacheDirs [androidJvm] open override fun getExternalCacheDirs (): Array < File > getExternalFilesDir [androidJvm] open override fun getExternalFilesDir (p0: String ?): File ? getExternalFilesDirs [androidJvm] open override fun getExternalFilesDirs (p0: String ): Array < File > getExternalMediaDirs [androidJvm] open override fun getExternalMediaDirs (): Array < File > getFilesDir [androidJvm] open override fun getFilesDir (): File getFileStreamPath [androidJvm] open override fun getFileStreamPath (p0: String ): File getIntent [androidJvm] open fun getIntent (): Intent getLastNonConfigurationInstance [androidJvm] open fun getLastNonConfigurationInstance (): Any ? getLayoutInflater [androidJvm] open fun getLayoutInflater (): LayoutInflater getLifecycle [androidJvm] @ NonNull open override fun getLifecycle (): Lifecycle getLocalClassName [androidJvm] open fun getLocalClassName (): String getMainExecutor [androidJvm] open override fun getMainExecutor (): Executor getMainLooper [androidJvm] open override fun getMainLooper (): Looper getMaxNumPictureInPictureActions [androidJvm] open fun getMaxNumPictureInPictureActions (): Int getMediaController [androidJvm] fun getMediaController (): MediaController getMenuInflater [androidJvm] @ NonNull open override fun getMenuInflater (): MenuInflater getNoBackupFilesDir [androidJvm] open override fun getNoBackupFilesDir (): File getObbDir [androidJvm] open override fun getObbDir (): File getObbDirs [androidJvm] open override fun getObbDirs (): Array < File > getOnBackPressedDispatcher [androidJvm] @ NonNull override fun getOnBackPressedDispatcher (): OnBackPressedDispatcher getOpPackageName [androidJvm] open override fun getOpPackageName (): String getPackageCodePath [androidJvm] open override fun getPackageCodePath (): String getPackageManager [androidJvm] open override fun getPackageManager (): PackageManager getPackageName [androidJvm] open override fun getPackageName (): String getPackageResourcePath [androidJvm] open override fun getPackageResourcePath (): String getParams [androidJvm] open override fun getParams (): ContextParams ? getParent [androidJvm] fun getParent (): Activity getParentActivityIntent [androidJvm] open fun getParentActivityIntent (): Intent ? getPreferences [androidJvm] open fun getPreferences (p0: Int ): SharedPreferences getReferrer [androidJvm] open fun getReferrer (): Uri ? getRequestedOrientation [androidJvm] open fun getRequestedOrientation (): Int getResources [androidJvm] open override fun getResources (): Resources getSavedStateRegistry [androidJvm] @ NonNull override fun getSavedStateRegistry (): SavedStateRegistry getSearchEvent [androidJvm] fun getSearchEvent (): SearchEvent getSharedPreferences [androidJvm] open override fun getSharedPreferences (p0: String , p1: Int ): SharedPreferences getSplashScreen [androidJvm] fun getSplashScreen (): SplashScreen getString [androidJvm] fun getString (p0: Int ): String fun getString (p0: Int , vararg p1: Any ): String getSupportActionBar [androidJvm] @ Nullable open fun getSupportActionBar (): ActionBar ? getSupportFragmentManager [androidJvm] @ NonNull open fun getSupportFragmentManager (): FragmentManager getSupportParentActivityIntent [androidJvm] @ Nullable open override fun getSupportParentActivityIntent (): Intent ? getSystemService [androidJvm] open override fun getSystemService (p0: String ): Any fun < T : Any > getSystemService (p0: Class < T >): T getSystemServiceName [androidJvm] open override fun getSystemServiceName (p0: Class <*>): String ? getTaskId [androidJvm] open fun getTaskId (): Int getText [androidJvm] fun getText (p0: Int ): CharSequence getTheme [androidJvm] open override fun getTheme (): Resources.Theme getTitle [androidJvm] fun getTitle (): CharSequence getTitleColor [androidJvm] fun getTitleColor (): Int getViewModelStore [androidJvm] @ NonNull open override fun getViewModelStore (): ViewModelStore getVoiceInteractor [androidJvm] open fun getVoiceInteractor (): VoiceInteractor getVolumeControlStream [androidJvm] fun getVolumeControlStream (): Int getWindow [androidJvm] open fun getWindow (): Window getWindowManager [androidJvm] open fun getWindowManager (): WindowManager go [androidJvm] open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link. [androidJvm] open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . goBackward [androidJvm] open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction. goForward [androidJvm] open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction. grantUriPermission [androidJvm] open override fun grantUriPermission (p0: String , p1: Uri , p2: Int ) hasWindowFocus [androidJvm] open fun hasWindowFocus (): Boolean highlightActivated [androidJvm] open fun highlightActivated (id: String ) highlightAnnotationMarkActivated [androidJvm] open fun highlightAnnotationMarkActivated (id: String ) invalidateOptionsMenu [androidJvm] open override fun invalidateOptionsMenu () isActivityTransitionRunning [androidJvm] open fun isActivityTransitionRunning (): Boolean isChangingConfigurations [androidJvm] open fun isChangingConfigurations (): Boolean isChild [androidJvm] fun isChild (): Boolean isDestroyed [androidJvm] open fun isDestroyed (): Boolean isDeviceProtectedStorage [androidJvm] open override fun isDeviceProtectedStorage (): Boolean isFinishing [androidJvm] open fun isFinishing (): Boolean isImmersive [androidJvm] open fun isImmersive (): Boolean isInMultiWindowMode [androidJvm] open fun isInMultiWindowMode (): Boolean isInPictureInPictureMode [androidJvm] open fun isInPictureInPictureMode (): Boolean isLaunchedFromBubble [androidJvm] open fun isLaunchedFromBubble (): Boolean isLocalVoiceInteractionSupported [androidJvm] open fun isLocalVoiceInteractionSupported (): Boolean isRestricted [androidJvm] open override fun isRestricted (): Boolean isTaskRoot [androidJvm] open fun isTaskRoot (): Boolean isUiContext [androidJvm] open override fun isUiContext (): Boolean isVoiceInteraction [androidJvm] open fun isVoiceInteraction (): Boolean isVoiceInteractionRoot [androidJvm] open fun isVoiceInteractionRoot (): Boolean markFragmentsCreated [androidJvm] open fun markFragmentsCreated () moveDatabaseFrom [androidJvm] open override fun moveDatabaseFrom (p0: Context , p1: String ): Boolean moveSharedPreferencesFrom [androidJvm] open override fun moveSharedPreferencesFrom (p0: Context , p1: String ): Boolean moveTaskToBack [androidJvm] open fun moveTaskToBack (p0: Boolean ): Boolean navigateUpTo [androidJvm] open fun navigateUpTo (p0: Intent ): Boolean obtainStyledAttributes [androidJvm] fun obtainStyledAttributes (p0: IntArray ): TypedArray fun obtainStyledAttributes (p0: AttributeSet ?, p1: IntArray ): TypedArray fun obtainStyledAttributes (p0: Int , p1: IntArray ): TypedArray fun obtainStyledAttributes (p0: AttributeSet ?, p1: IntArray , p2: Int , p3: Int ): TypedArray onActionModeFinished [androidJvm] open override fun onActionModeFinished (p0: ActionMode ) onActionModeStarted [androidJvm] open override fun onActionModeStarted (p0: ActionMode ) onActivityReenter [androidJvm] open fun onActivityReenter (p0: Int , p1: Intent ) onApplyThemeResource [androidJvm] open override fun onApplyThemeResource (p0: Resources.Theme , p1: Int , p2: Boolean ) onAttachedToWindow [androidJvm] open override fun onAttachedToWindow () onBackPressed [androidJvm] @ MainThread open override fun onBackPressed () onChildTitleChanged [androidJvm] open fun onChildTitleChanged (p0: Activity , p1: CharSequence ) onConfigurationChanged [androidJvm] open override fun onConfigurationChanged (@ NonNull p0: Configuration ) onContentChanged [androidJvm] open override fun onContentChanged () onContextItemSelected [androidJvm] open fun onContextItemSelected (p0: MenuItem ): Boolean onContextMenuClosed [androidJvm] open fun onContextMenuClosed (p0: Menu ) onCreate [androidJvm] open fun onCreate (p0: Bundle ?, p1: PersistableBundle ?) onCreateContextMenu [androidJvm] open override fun onCreateContextMenu (p0: ContextMenu , p1: View , p2: ContextMenu.ContextMenuInfo ) onCreateDescription [androidJvm] open fun onCreateDescription (): CharSequence ? onCreateNavigateUpTaskStack [androidJvm] open fun onCreateNavigateUpTaskStack (p0: TaskStackBuilder ) onCreateOptionsMenu [androidJvm] open fun onCreateOptionsMenu (p0: Menu ): Boolean onCreatePanelMenu [androidJvm] open override fun onCreatePanelMenu (p0: Int , @ NonNull p1: Menu ): Boolean onCreatePanelView [androidJvm] open override fun onCreatePanelView (p0: Int ): View ? onCreateSupportNavigateUpTaskStack [androidJvm] open fun onCreateSupportNavigateUpTaskStack (@ NonNull p0: TaskStackBuilder ) onCreateView [androidJvm] @ Nullable open override fun onCreateView (@ NonNull p0: String , @ NonNull p1: Context , @ NonNull p2: AttributeSet ): View ? @ Nullable open override fun onCreateView (@ Nullable p0: View ?, @ NonNull p1: String , @ NonNull p2: Context , @ NonNull p3: AttributeSet ): View ? onDestroy [androidJvm] open override fun onDestroy () onDetachedFromWindow [androidJvm] open override fun onDetachedFromWindow () onEnterAnimationComplete [androidJvm] open fun onEnterAnimationComplete () onGenericMotionEvent [androidJvm] open fun onGenericMotionEvent (p0: MotionEvent ): Boolean onGetDirectActions [androidJvm] open fun onGetDirectActions (p0: CancellationSignal , p1: Consumer < MutableList < DirectAction >>) onKeyDown [androidJvm] open override fun onKeyDown (p0: Int , p1: KeyEvent ): Boolean onKeyLongPress [androidJvm] open override fun onKeyLongPress (p0: Int , p1: KeyEvent ): Boolean onKeyMultiple [androidJvm] open override fun onKeyMultiple (p0: Int , p1: Int , p2: KeyEvent ): Boolean onKeyShortcut [androidJvm] open fun onKeyShortcut (p0: Int , p1: KeyEvent ): Boolean onKeyUp [androidJvm] open override fun onKeyUp (p0: Int , p1: KeyEvent ): Boolean onLocalVoiceInteractionStarted [androidJvm] open fun onLocalVoiceInteractionStarted () onLocalVoiceInteractionStopped [androidJvm] open fun onLocalVoiceInteractionStopped () onLowMemory [androidJvm] open override fun onLowMemory () onMenuItemSelected [androidJvm] override fun onMenuItemSelected (p0: Int , @ NonNull p1: MenuItem ): Boolean onMenuOpened [androidJvm] open override fun onMenuOpened (p0: Int , p1: Menu ): Boolean onMultiWindowModeChanged [androidJvm] @ CallSuper open override fun onMultiWindowModeChanged (p0: Boolean ) open fun onMultiWindowModeChanged (p0: Boolean , p1: Configuration ) onNavigateUp [androidJvm] open fun onNavigateUp (): Boolean onNewIntent [androidJvm] @ CallSuper open override fun onNewIntent (p0: Intent ) onNightModeChanged [androidJvm] open fun onNightModeChanged (p0: Int ) onOptionsItemSelected [androidJvm] open fun onOptionsItemSelected (p0: MenuItem ): Boolean onOptionsMenuClosed [androidJvm] open fun onOptionsMenuClosed (p0: Menu ) onPageChanged [androidJvm] open fun onPageChanged (pageIndex: Int , totalPages: Int , url: String ) onPageEnded [androidJvm] open fun onPageEnded (end: Boolean ) onPageLoaded [androidJvm] open fun onPageLoaded () onPanelClosed [androidJvm] open override fun onPanelClosed (p0: Int , @ NonNull p1: Menu ) onPause [androidJvm] open override fun onPause () onPerformDirectAction [androidJvm] open fun onPerformDirectAction (p0: String , p1: Bundle , p2: CancellationSignal , p3: Consumer < Bundle >) onPictureInPictureModeChanged [androidJvm] @ CallSuper open override fun onPictureInPictureModeChanged (p0: Boolean ) open fun onPictureInPictureModeChanged (p0: Boolean , p1: Configuration ) onPictureInPictureRequested [androidJvm] open fun onPictureInPictureRequested (): Boolean onPictureInPictureUiStateChanged [androidJvm] open fun onPictureInPictureUiStateChanged (p0: PictureInPictureUiState ) onPointerCaptureChanged [androidJvm] open fun onPointerCaptureChanged (p0: Boolean ) onPostCreate [androidJvm] open override fun onPostCreate (@ Nullable p0: Bundle ?) open fun onPostCreate (p0: Bundle ?, p1: PersistableBundle ?) onPostResume [androidJvm] open override fun onPostResume () onPrepareNavigateUpTaskStack [androidJvm] open fun onPrepareNavigateUpTaskStack (p0: TaskStackBuilder ) onPrepareOptionsMenu [androidJvm] open fun onPrepareOptionsMenu (p0: Menu ): Boolean onPreparePanel [androidJvm] open override fun onPreparePanel (p0: Int , @ Nullable p1: View ?, @ NonNull p2: Menu ): Boolean onPrepareSupportNavigateUpTaskStack [androidJvm] open fun onPrepareSupportNavigateUpTaskStack (@ NonNull p0: TaskStackBuilder ) onProvideAssistContent [androidJvm] open fun onProvideAssistContent (p0: AssistContent ) onProvideAssistData [androidJvm] open fun onProvideAssistData (p0: Bundle ) onProvideKeyboardShortcuts [androidJvm] open override fun onProvideKeyboardShortcuts (p0: MutableList < KeyboardShortcutGroup >, p1: Menu ?, p2: Int ) onProvideReferrer [androidJvm] open fun onProvideReferrer (): Uri onRequestPermissionsResult [androidJvm] @ CallSuper open override fun onRequestPermissionsResult (p0: Int , @ NonNull p1: Array < String >, @ NonNull p2: IntArray ) onRestart [androidJvm] open fun onRestart () onRestoreInstanceState [androidJvm] open fun onRestoreInstanceState (p0: Bundle ) open fun onRestoreInstanceState (p0: Bundle ?, p1: PersistableBundle ?) onResume [androidJvm] open override fun onResume () onResumeFragments [androidJvm] open fun onResumeFragments () onRetainNonConfigurationInstance [androidJvm] @ Nullable override fun onRetainNonConfigurationInstance (): Any ? onSaveInstanceState [androidJvm] @ CallSuper open override fun onSaveInstanceState (@ NonNull outState: Bundle ) open fun onSaveInstanceState (p0: Bundle , p1: PersistableBundle ) onSearchRequested [androidJvm] open override fun onSearchRequested (): Boolean open override fun onSearchRequested (p0: SearchEvent ?): Boolean onStart [androidJvm] open override fun onStart () onStateNotSaved [androidJvm] open override fun onStateNotSaved () onStop [androidJvm] open override fun onStop () onSupportActionModeFinished [androidJvm] @ CallSuper open override fun onSupportActionModeFinished (@ NonNull p0: ActionMode ) onSupportActionModeStarted [androidJvm] @ CallSuper open override fun onSupportActionModeStarted (@ NonNull p0: ActionMode ) onSupportNavigateUp [androidJvm] open fun onSupportNavigateUp (): Boolean onTap [androidJvm] open override fun onTap (point: PointF ): Boolean Called when the user tapped the content, but nothing handled the event internally (eg. by following an internal link). onTitleChanged [androidJvm] open override fun onTitleChanged (p0: CharSequence , p1: Int ) onTopResumedActivityChanged [androidJvm] open fun onTopResumedActivityChanged (p0: Boolean ) onTouchEvent [androidJvm] open fun onTouchEvent (p0: MotionEvent ): Boolean onTrackballEvent [androidJvm] open fun onTrackballEvent (p0: MotionEvent ): Boolean onTrimMemory [androidJvm] open override fun onTrimMemory (p0: Int ) onUserInteraction [androidJvm] open fun onUserInteraction () onUserLeaveHint [androidJvm] open fun onUserLeaveHint () onWindowAttributesChanged [androidJvm] open override fun onWindowAttributesChanged (p0: WindowManager.LayoutParams ) onWindowFocusChanged [androidJvm] open override fun onWindowFocusChanged (p0: Boolean ) onWindowStartingActionMode [androidJvm] open override fun onWindowStartingActionMode (p0: ActionMode.Callback ): ActionMode ? open override fun onWindowStartingActionMode (p0: ActionMode.Callback , p1: Int ): ActionMode ? onWindowStartingSupportActionMode [androidJvm] @ Nullable open override fun onWindowStartingSupportActionMode (@ NonNull p0: ActionMode.Callback ): ActionMode ? openContextMenu [androidJvm] open fun openContextMenu (p0: View ) openFileInput [androidJvm] open override fun openFileInput (p0: String ): FileInputStream openFileOutput [androidJvm] open override fun openFileOutput (p0: String , p1: Int ): FileOutputStream openOptionsMenu [androidJvm] open override fun openOptionsMenu () openOrCreateDatabase [androidJvm] open override fun openOrCreateDatabase (p0: String , p1: Int , p2: SQLiteDatabase.CursorFactory ): SQLiteDatabase open override fun openOrCreateDatabase (p0: String , p1: Int , p2: SQLiteDatabase.CursorFactory , p3: DatabaseErrorHandler ?): SQLiteDatabase overridePendingTransition [androidJvm] open fun overridePendingTransition (p0: Int , p1: Int ) peekAvailableContext [androidJvm] @ Nullable open override fun peekAvailableContext (): Context ? postponeEnterTransition [androidJvm] open fun postponeEnterTransition () recreate [androidJvm] open fun recreate () registerActivityLifecycleCallbacks [androidJvm] open fun registerActivityLifecycleCallbacks (p0: Application.ActivityLifecycleCallbacks ) registerComponentCallbacks [androidJvm] open fun registerComponentCallbacks (p0: ComponentCallbacks ) registerForActivityResult [androidJvm] @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull contract: ActivityResultContract < I , O >, @ NonNull callback: ActivityResultCallback < O >): ActivityResultLauncher < I > @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull contract: ActivityResultContract < I , O >, @ NonNull registry: ActivityResultRegistry , @ NonNull callback: ActivityResultCallback < O >): ActivityResultLauncher < I > registerForContextMenu [androidJvm] open fun registerForContextMenu (p0: View ) registerReceiver [androidJvm] open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter ): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: Int ): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: String ?, p3: Handler ?): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: String ?, p3: Handler ?, p4: Int ): Intent ? releaseInstance [androidJvm] open fun releaseInstance (): Boolean removeOnContextAvailableListener [androidJvm] override fun removeOnContextAvailableListener (@ NonNull listener: OnContextAvailableListener ) reportFullyDrawn [androidJvm] open override fun reportFullyDrawn () requestDragAndDropPermissions [androidJvm] open fun requestDragAndDropPermissions (p0: DragEvent ): DragAndDropPermissions requestPermissions [androidJvm] fun requestPermissions (p0: Array < String >, p1: Int ) requestShowKeyboardShortcuts [androidJvm] fun requestShowKeyboardShortcuts () requestWindowFeature [androidJvm] fun requestWindowFeature (p0: Int ): Boolean requireViewById [androidJvm] fun < T : View > requireViewById (p0: Int ): T revokeUriPermission [androidJvm] open override fun revokeUriPermission (p0: Uri , p1: Int ) open override fun revokeUriPermission (p0: String , p1: Uri , p2: Int ) runOnUiThread [androidJvm] fun runOnUiThread (p0: Runnable ) sendBroadcast [androidJvm] open override fun sendBroadcast (p0: Intent ) open override fun sendBroadcast (p0: Intent , p1: String ?) sendBroadcastAsUser [androidJvm] open override fun sendBroadcastAsUser (p0: Intent , p1: UserHandle ) open override fun sendBroadcastAsUser (p0: Intent , p1: UserHandle , p2: String ?) sendBroadcastWithMultiplePermissions [androidJvm] open fun sendBroadcastWithMultiplePermissions (p0: Intent , p1: Array < String >) sendOrderedBroadcast [androidJvm] open override fun sendOrderedBroadcast (p0: Intent , p1: String ?) open override fun sendOrderedBroadcast (p0: Intent , p1: String ?, p2: BroadcastReceiver ?, p3: Handler ?, p4: Int , p5: String ?, p6: Bundle ?) open override fun sendOrderedBroadcast (p0: Intent , p1: String ?, p2: String ?, p3: BroadcastReceiver ?, p4: Handler ?, p5: Int , p6: String ?, p7: Bundle ?) open fun sendOrderedBroadcast (p0: Intent , p1: Int , p2: String ?, p3: String ?, p4: BroadcastReceiver ?, p5: Handler ?, p6: String ?, p7: Bundle ?, p8: Bundle ?) sendOrderedBroadcastAsUser [androidJvm] open override fun sendOrderedBroadcastAsUser (p0: Intent , p1: UserHandle , p2: String ?, p3: BroadcastReceiver ?, p4: Handler ?, p5: Int , p6: String ?, p7: Bundle ?) setActionBar [androidJvm] open fun setActionBar (p0: Toolbar ?) setContentTransitionManager [androidJvm] open fun setContentTransitionManager (p0: TransitionManager ) setContentView [androidJvm] open override fun setContentView (p0: View ) open override fun setContentView (@ LayoutRes p0: Int ) open override fun setContentView (p0: View , p1: ViewGroup.LayoutParams ) setDefaultKeyMode [androidJvm] fun setDefaultKeyMode (p0: Int ) setEnterSharedElementCallback [androidJvm] open fun setEnterSharedElementCallback (p0: SharedElementCallback ) open fun setEnterSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setExitSharedElementCallback [androidJvm] open fun setExitSharedElementCallback (p0: SharedElementCallback ) open fun setExitSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setFeatureDrawable [androidJvm] fun setFeatureDrawable (p0: Int , p1: Drawable ) setFeatureDrawableAlpha [androidJvm] fun setFeatureDrawableAlpha (p0: Int , p1: Int ) setFeatureDrawableResource [androidJvm] fun setFeatureDrawableResource (p0: Int , p1: Int ) setFeatureDrawableUri [androidJvm] fun setFeatureDrawableUri (p0: Int , p1: Uri ) setFinishOnTouchOutside [androidJvm] open fun setFinishOnTouchOutside (p0: Boolean ) setImmersive [androidJvm] open fun setImmersive (p0: Boolean ) setInheritShowWhenLocked [androidJvm] open fun setInheritShowWhenLocked (p0: Boolean ) setIntent [androidJvm] open fun setIntent (p0: Intent ) setLocusContext [androidJvm] open fun setLocusContext (p0: LocusId ?, p1: Bundle ?) setMediaController [androidJvm] fun setMediaController (p0: MediaController ) setPictureInPictureParams [androidJvm] open fun setPictureInPictureParams (p0: PictureInPictureParams ) setRequestedOrientation [androidJvm] open fun setRequestedOrientation (p0: Int ) setResult [androidJvm] fun setResult (p0: Int ) fun setResult (p0: Int , p1: Intent ) setShowWhenLocked [androidJvm] open fun setShowWhenLocked (p0: Boolean ) setSupportActionBar [androidJvm] open fun setSupportActionBar (@ Nullable p0: Toolbar ?) setTaskDescription [androidJvm] open fun setTaskDescription (p0: ActivityManager.TaskDescription ) setTheme [androidJvm] open fun setTheme (p0: Resources.Theme ?) open override fun setTheme (@ StyleRes p0: Int ) setTitle [androidJvm] open fun setTitle (p0: CharSequence ) open fun setTitle (p0: Int ) setTranslucent [androidJvm] open fun setTranslucent (p0: Boolean ): Boolean setTurnScreenOn [androidJvm] open fun setTurnScreenOn (p0: Boolean ) setVisible [androidJvm] open fun setVisible (p0: Boolean ) setVolumeControlStream [androidJvm] fun setVolumeControlStream (p0: Int ) setVrModeEnabled [androidJvm] open fun setVrModeEnabled (p0: Boolean , p1: ComponentName ) shouldShowRequestPermissionRationale [androidJvm] open fun shouldShowRequestPermissionRationale (p0: String ): Boolean shouldUpRecreateTask [androidJvm] open fun shouldUpRecreateTask (p0: Intent ): Boolean showAssist [androidJvm] open fun showAssist (p0: Bundle ): Boolean showLockTaskEscapeMessage [androidJvm] open fun showLockTaskEscapeMessage () startActionMode [androidJvm] open fun startActionMode (p0: ActionMode.Callback ): ActionMode ? open fun startActionMode (p0: ActionMode.Callback , p1: Int ): ActionMode ? startActivities [androidJvm] open override fun startActivities (p0: Array < Intent >) open override fun startActivities (p0: Array < Intent >, p1: Bundle ?) startActivity [androidJvm] open override fun startActivity (p0: Intent ) open override fun startActivity (p0: Intent , p1: Bundle ?) startActivityFromFragment [androidJvm] open fun startActivityFromFragment (@ NonNull p0: Fragment , p1: Intent , p2: Int ) open fun startActivityFromFragment (@ NonNull p0: Fragment , p1: Intent , p2: Int , @ Nullable p3: Bundle ?) startActivityIfNeeded [androidJvm] open fun startActivityIfNeeded (p0: Intent , p1: Int ): Boolean open fun startActivityIfNeeded (p0: Intent , p1: Int , p2: Bundle ?): Boolean startForegroundService [androidJvm] open override fun startForegroundService (p0: Intent ): ComponentName ? startInstrumentation [androidJvm] open override fun startInstrumentation (p0: ComponentName , p1: String ?, p2: Bundle ?): Boolean startIntentSender [androidJvm] open override fun startIntentSender (p0: IntentSender , p1: Intent ?, p2: Int , p3: Int , p4: Int ) open override fun startIntentSender (p0: IntentSender , p1: Intent ?, p2: Int , p3: Int , p4: Int , p5: Bundle ?) startLocalVoiceInteraction [androidJvm] open fun startLocalVoiceInteraction (p0: Bundle ) startLockTask [androidJvm] open fun startLockTask () startNextMatchingActivity [androidJvm] open fun startNextMatchingActivity (p0: Intent ): Boolean open fun startNextMatchingActivity (p0: Intent , p1: Bundle ?): Boolean startPostponedEnterTransition [androidJvm] open fun startPostponedEnterTransition () startSearch [androidJvm] open fun startSearch (p0: String ?, p1: Boolean , p2: Bundle ?, p3: Boolean ) startService [androidJvm] open override fun startService (p0: Intent ): ComponentName ? startSupportActionMode [androidJvm] @ Nullable open fun startSupportActionMode (@ NonNull p0: ActionMode.Callback ): ActionMode ? stopLocalVoiceInteraction [androidJvm] open fun stopLocalVoiceInteraction () stopLockTask [androidJvm] open fun stopLockTask () stopService [androidJvm] open override fun stopService (p0: Intent ): Boolean superDispatchKeyEvent [androidJvm] open override fun superDispatchKeyEvent (event: KeyEvent ): Boolean supportFinishAfterTransition [androidJvm] open fun supportFinishAfterTransition () supportInvalidateOptionsMenu [androidJvm] open override fun supportInvalidateOptionsMenu () supportNavigateUpTo [androidJvm] open fun supportNavigateUpTo (@ NonNull p0: Intent ) supportPostponeEnterTransition [androidJvm] open fun supportPostponeEnterTransition () supportRequestWindowFeature [androidJvm] open fun supportRequestWindowFeature (p0: Int ): Boolean supportShouldUpRecreateTask [androidJvm] open fun supportShouldUpRecreateTask (@ NonNull p0: Intent ): Boolean supportStartPostponedEnterTransition [androidJvm] open fun supportStartPostponedEnterTransition () takeKeyEvents [androidJvm] open fun takeKeyEvents (p0: Boolean ) toggleActionBar [androidJvm] open override fun toggleActionBar () open override fun toggleActionBar (v: View ?) triggerSearch [androidJvm] open fun triggerSearch (p0: String , p1: Bundle ?) unbindService [androidJvm] open override fun unbindService (p0: ServiceConnection ) unregisterActivityLifecycleCallbacks [androidJvm] open fun unregisterActivityLifecycleCallbacks (p0: Application.ActivityLifecycleCallbacks ) unregisterComponentCallbacks [androidJvm] open fun unregisterComponentCallbacks (p0: ComponentCallbacks ) unregisterForContextMenu [androidJvm] open fun unregisterForContextMenu (p0: View ) unregisterReceiver [androidJvm] open override fun unregisterReceiver (p0: BroadcastReceiver ) updateServiceGroup [androidJvm] open override fun updateServiceGroup (p0: ServiceConnection , p1: Int , p2: Int )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/#properties","text":"Name Summary adapter [androidJvm] lateinit var adapter : R2PagerAdapter allowToggleActionBar [androidJvm] open val allowToggleActionBar : Boolean bookId [androidJvm] open override var bookId : Long coroutineContext [androidJvm] open override val coroutineContext : CoroutineContext Context of this scope. currentLocator [androidJvm] open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position. currentPagerPosition [androidJvm] val currentPagerPosition : Int mContextAwareHelper [androidJvm] val mContextAwareHelper : ContextAwareHelper mCreated [androidJvm] val mCreated : Boolean mFragmentLifecycleRegistry [androidJvm] val mFragmentLifecycleRegistry : LifecycleRegistry mFragments [androidJvm] val mFragments : FragmentController mResumed [androidJvm] val mResumed : Boolean mSavedStateRegistryController [androidJvm] val mSavedStateRegistryController : SavedStateRegistryController mStopped [androidJvm] val mStopped : Boolean preferences [androidJvm] open lateinit override var preferences : SharedPreferences publication [androidJvm] open lateinit override var publication : Publication Publication rendered by this navigator. publicationFileName [androidJvm] open lateinit override var publicationFileName : String publicationIdentifier [androidJvm] open lateinit override var publicationIdentifier : String publicationPath [androidJvm] open lateinit override var publicationPath : String readingProgression [androidJvm] open override val readingProgression : ReadingProgression Current reading progression direction. resourcePager [androidJvm] open lateinit override var resourcePager : R2ViewPager resources [androidJvm] var resources : List < String >","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/-r2-cbz-activity/","text":"// navigator / org.readium.r2.navigator.cbz / R2CbzActivity / R2CbzActivity R2CbzActivity \u00b6 [androidJvm]\\ fun R2CbzActivity ()","title":" r2 cbz activity"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/-r2-cbz-activity/#r2cbzactivity","text":"[androidJvm]\\ fun R2CbzActivity ()","title":"R2CbzActivity"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/adapter/","text":"// navigator / org.readium.r2.navigator.cbz / R2CbzActivity / adapter adapter \u00b6 [androidJvm]\\ lateinit var adapter : R2PagerAdapter","title":"Adapter"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/adapter/#adapter","text":"[androidJvm]\\ lateinit var adapter : R2PagerAdapter","title":"adapter"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/book-id/","text":"// navigator / org.readium.r2.navigator.cbz / R2CbzActivity / bookId bookId \u00b6 [androidJvm]\\ open override var bookId : Long","title":"Book id"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/book-id/#bookid","text":"[androidJvm]\\ open override var bookId : Long","title":"bookId"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/coroutine-context/","text":"// navigator / org.readium.r2.navigator.cbz / R2CbzActivity / coroutineContext coroutineContext \u00b6 [androidJvm]\\ open override val coroutineContext : CoroutineContext Context of this scope.","title":"Coroutine context"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/coroutine-context/#coroutinecontext","text":"[androidJvm]\\ open override val coroutineContext : CoroutineContext Context of this scope.","title":"coroutineContext"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/current-locator/","text":"// navigator / org.readium.r2.navigator.cbz / R2CbzActivity / currentLocator currentLocator \u00b6 [androidJvm]\\ open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position.","title":"Current locator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/current-locator/#currentlocator","text":"[androidJvm]\\ open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position.","title":"currentLocator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/current-pager-position/","text":"// navigator / org.readium.r2.navigator.cbz / R2CbzActivity / currentPagerPosition currentPagerPosition \u00b6 [androidJvm]\\ val currentPagerPosition : Int","title":"Current pager position"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/current-pager-position/#currentpagerposition","text":"[androidJvm]\\ val currentPagerPosition : Int","title":"currentPagerPosition"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/finish/","text":"// navigator / org.readium.r2.navigator.cbz / R2CbzActivity / finish finish \u00b6 [androidJvm]\\ open override fun finish ()","title":"Finish"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/finish/#finish","text":"[androidJvm]\\ open override fun finish ()","title":"finish"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/go-backward/","text":"// navigator / org.readium.r2.navigator.cbz / R2CbzActivity / goBackward goBackward \u00b6 [androidJvm]\\ open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction.","title":"Go backward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/go-backward/#gobackward","text":"[androidJvm]\\ open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction.","title":"goBackward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/go-forward/","text":"// navigator / org.readium.r2.navigator.cbz / R2CbzActivity / goForward goForward \u00b6 [androidJvm]\\ open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction.","title":"Go forward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/go-forward/#goforward","text":"[androidJvm]\\ open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction.","title":"goForward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/go/","text":"// navigator / org.readium.r2.navigator.cbz / R2CbzActivity / go go \u00b6 [androidJvm]\\ open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . [androidJvm]\\ open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link.","title":"Go"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/go/#go","text":"[androidJvm]\\ open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . [androidJvm]\\ open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link.","title":"go"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/on-tap/","text":"// navigator / org.readium.r2.navigator.cbz / R2CbzActivity / onTap onTap \u00b6 [androidJvm]\\ open override fun onTap (point: PointF ): Boolean Called when the user tapped the content, but nothing handled the event internally (eg. by following an internal link). Can be used in the reading app to toggle the navigation bars, or switch to the previous/next page if the tapped occurred on the edges. The point is relative to the navigator's view.","title":"On tap"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/on-tap/#ontap","text":"[androidJvm]\\ open override fun onTap (point: PointF ): Boolean Called when the user tapped the content, but nothing handled the event internally (eg. by following an internal link). Can be used in the reading app to toggle the navigation bars, or switch to the previous/next page if the tapped occurred on the edges. The point is relative to the navigator's view.","title":"onTap"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/preferences/","text":"// navigator / org.readium.r2.navigator.cbz / R2CbzActivity / preferences preferences \u00b6 [androidJvm]\\ open lateinit override var preferences : SharedPreferences","title":"Preferences"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/preferences/#preferences","text":"[androidJvm]\\ open lateinit override var preferences : SharedPreferences","title":"preferences"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/publication-file-name/","text":"// navigator / org.readium.r2.navigator.cbz / R2CbzActivity / publicationFileName publicationFileName \u00b6 [androidJvm]\\ open lateinit override var publicationFileName : String","title":"Publication file name"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/publication-file-name/#publicationfilename","text":"[androidJvm]\\ open lateinit override var publicationFileName : String","title":"publicationFileName"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/publication-identifier/","text":"// navigator / org.readium.r2.navigator.cbz / R2CbzActivity / publicationIdentifier publicationIdentifier \u00b6 [androidJvm]\\ open lateinit override var publicationIdentifier : String","title":"Publication identifier"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/publication-identifier/#publicationidentifier","text":"[androidJvm]\\ open lateinit override var publicationIdentifier : String","title":"publicationIdentifier"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/publication-path/","text":"// navigator / org.readium.r2.navigator.cbz / R2CbzActivity / publicationPath publicationPath \u00b6 [androidJvm]\\ open lateinit override var publicationPath : String","title":"Publication path"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/publication-path/#publicationpath","text":"[androidJvm]\\ open lateinit override var publicationPath : String","title":"publicationPath"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/publication/","text":"// navigator / org.readium.r2.navigator.cbz / R2CbzActivity / publication publication \u00b6 [androidJvm]\\ open lateinit override var publication : Publication Publication rendered by this navigator.","title":"Publication"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/publication/#publication","text":"[androidJvm]\\ open lateinit override var publication : Publication Publication rendered by this navigator.","title":"publication"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/reading-progression/","text":"// navigator / org.readium.r2.navigator.cbz / R2CbzActivity / readingProgression readingProgression \u00b6 [androidJvm]\\ open override val readingProgression : ReadingProgression Current reading progression direction.","title":"Reading progression"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/reading-progression/#readingprogression","text":"[androidJvm]\\ open override val readingProgression : ReadingProgression Current reading progression direction.","title":"readingProgression"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/resource-pager/","text":"// navigator / org.readium.r2.navigator.cbz / R2CbzActivity / resourcePager resourcePager \u00b6 [androidJvm]\\ open lateinit override var resourcePager : R2ViewPager","title":"Resource pager"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/resource-pager/#resourcepager","text":"[androidJvm]\\ open lateinit override var resourcePager : R2ViewPager","title":"resourcePager"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/resources/","text":"// navigator / org.readium.r2.navigator.cbz / R2CbzActivity / resources resources \u00b6 [androidJvm]\\ var resources : List < String >","title":"Resources"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/resources/#resources","text":"[androidJvm]\\ var resources : List < String >","title":"resources"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/toggle-action-bar/","text":"// navigator / org.readium.r2.navigator.cbz / R2CbzActivity / toggleActionBar toggleActionBar \u00b6 [androidJvm]\\ open override fun toggleActionBar () open override fun toggleActionBar (v: View ?)","title":"Toggle action bar"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.cbz/-r2-cbz-activity/toggle-action-bar/#toggleactionbar","text":"[androidJvm]\\ open override fun toggleActionBar () open override fun toggleActionBar (v: View ?)","title":"toggleActionBar"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/","text":"// navigator / org.readium.r2.navigator.divina Package org.readium.r2.navigator.divina \u00b6 Types \u00b6 Name Summary R2DiViNaActivity [androidJvm] open class R2DiViNaActivity : AppCompatActivity , CoroutineScope, IR2Activity , VisualNavigator.Listener","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/#package-orgreadiumr2navigatordivina","text":"","title":"Package org.readium.r2.navigator.divina"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/#types","text":"Name Summary R2DiViNaActivity [androidJvm] open class R2DiViNaActivity : AppCompatActivity , CoroutineScope, IR2Activity , VisualNavigator.Listener","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/-r2-di-vi-na-activity/","text":"// navigator / org.readium.r2.navigator.divina / R2DiViNaActivity R2DiViNaActivity \u00b6 [androidJvm]\\ open class R2DiViNaActivity : AppCompatActivity , CoroutineScope, IR2Activity , VisualNavigator.Listener Functions \u00b6 Name Summary addContentView [androidJvm] open override fun addContentView (p0: View , p1: ViewGroup.LayoutParams ) addOnContextAvailableListener [androidJvm] override fun addOnContextAvailableListener (@ NonNull listener: OnContextAvailableListener ) applyOverrideConfiguration [androidJvm] open fun applyOverrideConfiguration (p0: Configuration ) attachBaseContext [androidJvm] open override fun attachBaseContext (p0: Context ) bindIsolatedService [androidJvm] open override fun bindIsolatedService (p0: Intent , p1: Int , p2: String , p3: Executor , p4: ServiceConnection ): Boolean bindService [androidJvm] open override fun bindService (p0: Intent , p1: ServiceConnection , p2: Int ): Boolean open override fun bindService (p0: Intent , p1: Int , p2: Executor , p3: ServiceConnection ): Boolean bindServiceAsUser [androidJvm] open override fun bindServiceAsUser (p0: Intent , p1: ServiceConnection , p2: Int , p3: UserHandle ): Boolean checkCallingOrSelfPermission [androidJvm] open override fun checkCallingOrSelfPermission (p0: String ): Int checkCallingOrSelfUriPermission [androidJvm] open override fun checkCallingOrSelfUriPermission (p0: Uri , p1: Int ): Int checkCallingOrSelfUriPermissions [androidJvm] open override fun checkCallingOrSelfUriPermissions (p0: MutableList < Uri >, p1: Int ): IntArray checkCallingPermission [androidJvm] open override fun checkCallingPermission (p0: String ): Int checkCallingUriPermission [androidJvm] open override fun checkCallingUriPermission (p0: Uri , p1: Int ): Int checkCallingUriPermissions [androidJvm] open override fun checkCallingUriPermissions (p0: MutableList < Uri >, p1: Int ): IntArray checkPermission [androidJvm] open override fun checkPermission (p0: String , p1: Int , p2: Int ): Int checkSelfPermission [androidJvm] open override fun checkSelfPermission (p0: String ): Int checkUriPermission [androidJvm] open override fun checkUriPermission (p0: Uri , p1: Int , p2: Int , p3: Int ): Int open override fun checkUriPermission (p0: Uri ?, p1: String ?, p2: String ?, p3: Int , p4: Int , p5: Int ): Int checkUriPermissions [androidJvm] open override fun checkUriPermissions (p0: MutableList < Uri >, p1: Int , p2: Int , p3: Int ): IntArray closeContextMenu [androidJvm] open fun closeContextMenu () closeOptionsMenu [androidJvm] open override fun closeOptionsMenu () createAttributionContext [androidJvm] open override fun createAttributionContext (p0: String ?): Context createConfigurationContext [androidJvm] open override fun createConfigurationContext (p0: Configuration ): Context createContext [androidJvm] open override fun createContext (p0: ContextParams ): Context createContextForSplit [androidJvm] open override fun createContextForSplit (p0: String ): Context createDeviceProtectedStorageContext [androidJvm] open override fun createDeviceProtectedStorageContext (): Context createDisplayContext [androidJvm] open override fun createDisplayContext (p0: Display ): Context createPackageContext [androidJvm] open override fun createPackageContext (p0: String , p1: Int ): Context createPendingResult [androidJvm] open fun createPendingResult (p0: Int , p1: Intent , p2: Int ): PendingIntent createWindowContext [androidJvm] open override fun createWindowContext (p0: Int , p1: Bundle ?): Context open override fun createWindowContext (p0: Display , p1: Int , p2: Bundle ?): Context databaseList [androidJvm] open override fun databaseList (): Array < String > deleteDatabase [androidJvm] open override fun deleteDatabase (p0: String ): Boolean deleteFile [androidJvm] open override fun deleteFile (p0: String ): Boolean deleteSharedPreferences [androidJvm] open override fun deleteSharedPreferences (p0: String ): Boolean dismissKeyboardShortcutsHelper [androidJvm] fun dismissKeyboardShortcutsHelper () dispatchFragmentsOnCreateView [androidJvm] @ Nullable fun dispatchFragmentsOnCreateView (@ Nullable p0: View ?, @ NonNull p1: String , @ NonNull p2: Context , @ NonNull p3: AttributeSet ): View ? dispatchGenericMotionEvent [androidJvm] open override fun dispatchGenericMotionEvent (p0: MotionEvent ): Boolean dispatchKeyEvent [androidJvm] open override fun dispatchKeyEvent (p0: KeyEvent ): Boolean dispatchKeyShortcutEvent [androidJvm] open override fun dispatchKeyShortcutEvent (event: KeyEvent ): Boolean dispatchPopulateAccessibilityEvent [androidJvm] open override fun dispatchPopulateAccessibilityEvent (p0: AccessibilityEvent ): Boolean dispatchTouchEvent [androidJvm] open override fun dispatchTouchEvent (p0: MotionEvent ): Boolean dispatchTrackballEvent [androidJvm] open override fun dispatchTrackballEvent (p0: MotionEvent ): Boolean dump [androidJvm] open override fun dump (@ NonNull p0: String , @ Nullable p1: FileDescriptor ?, @ NonNull p2: PrintWriter , @ Nullable p3: Array < String >?) enforceCallingOrSelfPermission [androidJvm] open override fun enforceCallingOrSelfPermission (p0: String , p1: String ?) enforceCallingOrSelfUriPermission [androidJvm] open override fun enforceCallingOrSelfUriPermission (p0: Uri , p1: Int , p2: String ) enforceCallingPermission [androidJvm] open override fun enforceCallingPermission (p0: String , p1: String ?) enforceCallingUriPermission [androidJvm] open override fun enforceCallingUriPermission (p0: Uri , p1: Int , p2: String ) enforcePermission [androidJvm] open override fun enforcePermission (p0: String , p1: Int , p2: Int , p3: String ?) enforceUriPermission [androidJvm] open override fun enforceUriPermission (p0: Uri , p1: Int , p2: Int , p3: Int , p4: String ) open override fun enforceUriPermission (p0: Uri ?, p1: String ?, p2: String ?, p3: Int , p4: Int , p5: Int , p6: String ?) ensureViewModelStore [androidJvm] open fun ensureViewModelStore () enterPictureInPictureMode [androidJvm] open fun enterPictureInPictureMode (p0: PictureInPictureParams ): Boolean fileList [androidJvm] open override fun fileList (): Array < String > findViewById [androidJvm] open override fun < T : View > findViewById (@ IdRes p0: Int ): T finish [androidJvm] open override fun finish () finishActivity [androidJvm] open fun finishActivity (p0: Int ) finishAffinity [androidJvm] open fun finishAffinity () finishAfterTransition [androidJvm] open fun finishAfterTransition () finishAndRemoveTask [androidJvm] open fun finishAndRemoveTask () getActionBar [androidJvm] open fun getActionBar (): ActionBar ? getActivityResultRegistry [androidJvm] @ NonNull override fun getActivityResultRegistry (): ActivityResultRegistry getApplication [androidJvm] fun getApplication (): Application getApplicationContext [androidJvm] open override fun getApplicationContext (): Context getApplicationInfo [androidJvm] open override fun getApplicationInfo (): ApplicationInfo getAssets [androidJvm] open override fun getAssets (): AssetManager getAttributionSource [androidJvm] open override fun getAttributionSource (): AttributionSource getAttributionTag [androidJvm] open override fun getAttributionTag (): String ? getBaseContext [androidJvm] open fun getBaseContext (): Context getCacheDir [androidJvm] open override fun getCacheDir (): File getCallingActivity [androidJvm] open fun getCallingActivity (): ComponentName ? getCallingPackage [androidJvm] open fun getCallingPackage (): String ? getChangingConfigurations [androidJvm] open fun getChangingConfigurations (): Int getClassLoader [androidJvm] open override fun getClassLoader (): ClassLoader getCodeCacheDir [androidJvm] open override fun getCodeCacheDir (): File getColor [androidJvm] fun getColor (p0: Int ): Int getColorStateList [androidJvm] fun getColorStateList (p0: Int ): ColorStateList getComponentName [androidJvm] open fun getComponentName (): ComponentName getContentResolver [androidJvm] open override fun getContentResolver (): ContentResolver getContentScene [androidJvm] open fun getContentScene (): Scene getContentTransitionManager [androidJvm] open fun getContentTransitionManager (): TransitionManager getCurrentFocus [androidJvm] open fun getCurrentFocus (): View ? getDatabasePath [androidJvm] open override fun getDatabasePath (p0: String ): File getDataDir [androidJvm] open override fun getDataDir (): File getDefaultViewModelProviderFactory [androidJvm] @ NonNull open override fun getDefaultViewModelProviderFactory (): ViewModelProvider.Factory getDelegate [androidJvm] @ NonNull open fun getDelegate (): AppCompatDelegate getDir [androidJvm] open override fun getDir (p0: String , p1: Int ): File getDisplay [androidJvm] open override fun getDisplay (): Display ? getDrawable [androidJvm] fun getDrawable (p0: Int ): Drawable ? getDrawerToggleDelegate [androidJvm] @ Nullable open override fun getDrawerToggleDelegate (): ActionBarDrawerToggle.Delegate ? getExternalCacheDir [androidJvm] open override fun getExternalCacheDir (): File ? getExternalCacheDirs [androidJvm] open override fun getExternalCacheDirs (): Array < File > getExternalFilesDir [androidJvm] open override fun getExternalFilesDir (p0: String ?): File ? getExternalFilesDirs [androidJvm] open override fun getExternalFilesDirs (p0: String ): Array < File > getExternalMediaDirs [androidJvm] open override fun getExternalMediaDirs (): Array < File > getFilesDir [androidJvm] open override fun getFilesDir (): File getFileStreamPath [androidJvm] open override fun getFileStreamPath (p0: String ): File getIntent [androidJvm] open fun getIntent (): Intent getLastNonConfigurationInstance [androidJvm] open fun getLastNonConfigurationInstance (): Any ? getLayoutInflater [androidJvm] open fun getLayoutInflater (): LayoutInflater getLifecycle [androidJvm] @ NonNull open override fun getLifecycle (): Lifecycle getLocalClassName [androidJvm] open fun getLocalClassName (): String getMainExecutor [androidJvm] open override fun getMainExecutor (): Executor getMainLooper [androidJvm] open override fun getMainLooper (): Looper getMaxNumPictureInPictureActions [androidJvm] open fun getMaxNumPictureInPictureActions (): Int getMediaController [androidJvm] fun getMediaController (): MediaController getMenuInflater [androidJvm] @ NonNull open override fun getMenuInflater (): MenuInflater getNoBackupFilesDir [androidJvm] open override fun getNoBackupFilesDir (): File getObbDir [androidJvm] open override fun getObbDir (): File getObbDirs [androidJvm] open override fun getObbDirs (): Array < File > getOnBackPressedDispatcher [androidJvm] @ NonNull override fun getOnBackPressedDispatcher (): OnBackPressedDispatcher getOpPackageName [androidJvm] open override fun getOpPackageName (): String getPackageCodePath [androidJvm] open override fun getPackageCodePath (): String getPackageManager [androidJvm] open override fun getPackageManager (): PackageManager getPackageName [androidJvm] open override fun getPackageName (): String getPackageResourcePath [androidJvm] open override fun getPackageResourcePath (): String getParams [androidJvm] open override fun getParams (): ContextParams ? getParent [androidJvm] fun getParent (): Activity getParentActivityIntent [androidJvm] open fun getParentActivityIntent (): Intent ? getPreferences [androidJvm] open fun getPreferences (p0: Int ): SharedPreferences getReferrer [androidJvm] open fun getReferrer (): Uri ? getRequestedOrientation [androidJvm] open fun getRequestedOrientation (): Int getResources [androidJvm] open override fun getResources (): Resources getSavedStateRegistry [androidJvm] @ NonNull override fun getSavedStateRegistry (): SavedStateRegistry getSearchEvent [androidJvm] fun getSearchEvent (): SearchEvent getSharedPreferences [androidJvm] open override fun getSharedPreferences (p0: String , p1: Int ): SharedPreferences getSplashScreen [androidJvm] fun getSplashScreen (): SplashScreen getString [androidJvm] fun getString (p0: Int ): String fun getString (p0: Int , vararg p1: Any ): String getSupportActionBar [androidJvm] @ Nullable open fun getSupportActionBar (): ActionBar ? getSupportFragmentManager [androidJvm] @ NonNull open fun getSupportFragmentManager (): FragmentManager getSupportParentActivityIntent [androidJvm] @ Nullable open override fun getSupportParentActivityIntent (): Intent ? getSystemService [androidJvm] open override fun getSystemService (p0: String ): Any fun < T : Any > getSystemService (p0: Class < T >): T getSystemServiceName [androidJvm] open override fun getSystemServiceName (p0: Class <*>): String ? getTaskId [androidJvm] open fun getTaskId (): Int getText [androidJvm] fun getText (p0: Int ): CharSequence getTheme [androidJvm] open override fun getTheme (): Resources.Theme getTitle [androidJvm] fun getTitle (): CharSequence getTitleColor [androidJvm] fun getTitleColor (): Int getViewModelStore [androidJvm] @ NonNull open override fun getViewModelStore (): ViewModelStore getVoiceInteractor [androidJvm] open fun getVoiceInteractor (): VoiceInteractor getVolumeControlStream [androidJvm] fun getVolumeControlStream (): Int getWindow [androidJvm] open fun getWindow (): Window getWindowManager [androidJvm] open fun getWindowManager (): WindowManager grantUriPermission [androidJvm] open override fun grantUriPermission (p0: String , p1: Uri , p2: Int ) hasWindowFocus [androidJvm] open fun hasWindowFocus (): Boolean highlightActivated [androidJvm] open fun highlightActivated (id: String ) highlightAnnotationMarkActivated [androidJvm] open fun highlightAnnotationMarkActivated (id: String ) invalidateOptionsMenu [androidJvm] open override fun invalidateOptionsMenu () isActivityTransitionRunning [androidJvm] open fun isActivityTransitionRunning (): Boolean isChangingConfigurations [androidJvm] open fun isChangingConfigurations (): Boolean isChild [androidJvm] fun isChild (): Boolean isDestroyed [androidJvm] open fun isDestroyed (): Boolean isDeviceProtectedStorage [androidJvm] open override fun isDeviceProtectedStorage (): Boolean isFinishing [androidJvm] open fun isFinishing (): Boolean isImmersive [androidJvm] open fun isImmersive (): Boolean isInMultiWindowMode [androidJvm] open fun isInMultiWindowMode (): Boolean isInPictureInPictureMode [androidJvm] open fun isInPictureInPictureMode (): Boolean isLaunchedFromBubble [androidJvm] open fun isLaunchedFromBubble (): Boolean isLocalVoiceInteractionSupported [androidJvm] open fun isLocalVoiceInteractionSupported (): Boolean isRestricted [androidJvm] open override fun isRestricted (): Boolean isTaskRoot [androidJvm] open fun isTaskRoot (): Boolean isUiContext [androidJvm] open override fun isUiContext (): Boolean isVoiceInteraction [androidJvm] open fun isVoiceInteraction (): Boolean isVoiceInteractionRoot [androidJvm] open fun isVoiceInteractionRoot (): Boolean markFragmentsCreated [androidJvm] open fun markFragmentsCreated () moveDatabaseFrom [androidJvm] open override fun moveDatabaseFrom (p0: Context , p1: String ): Boolean moveSharedPreferencesFrom [androidJvm] open override fun moveSharedPreferencesFrom (p0: Context , p1: String ): Boolean moveTaskToBack [androidJvm] open fun moveTaskToBack (p0: Boolean ): Boolean navigateUpTo [androidJvm] open fun navigateUpTo (p0: Intent ): Boolean nextResource [androidJvm] open fun nextResource (v: View ? = null) obtainStyledAttributes [androidJvm] fun obtainStyledAttributes (p0: IntArray ): TypedArray fun obtainStyledAttributes (p0: AttributeSet ?, p1: IntArray ): TypedArray fun obtainStyledAttributes (p0: Int , p1: IntArray ): TypedArray fun obtainStyledAttributes (p0: AttributeSet ?, p1: IntArray , p2: Int , p3: Int ): TypedArray onActionModeFinished [androidJvm] open override fun onActionModeFinished (p0: ActionMode ) onActionModeStarted [androidJvm] open override fun onActionModeStarted (p0: ActionMode ) onActivityReenter [androidJvm] open fun onActivityReenter (p0: Int , p1: Intent ) onActivityResult [androidJvm] @ CallSuper open override fun onActivityResult (p0: Int , p1: Int , @ Nullable p2: Intent ?) onApplyThemeResource [androidJvm] open override fun onApplyThemeResource (p0: Resources.Theme , p1: Int , p2: Boolean ) onAttachedToWindow [androidJvm] open override fun onAttachedToWindow () onBackPressed [androidJvm] @ MainThread open override fun onBackPressed () onChildTitleChanged [androidJvm] open fun onChildTitleChanged (p0: Activity , p1: CharSequence ) onConfigurationChanged [androidJvm] open override fun onConfigurationChanged (@ NonNull p0: Configuration ) onContentChanged [androidJvm] open override fun onContentChanged () onContextItemSelected [androidJvm] open fun onContextItemSelected (p0: MenuItem ): Boolean onContextMenuClosed [androidJvm] open fun onContextMenuClosed (p0: Menu ) onCreate [androidJvm] open fun onCreate (p0: Bundle ?, p1: PersistableBundle ?) onCreateContextMenu [androidJvm] open override fun onCreateContextMenu (p0: ContextMenu , p1: View , p2: ContextMenu.ContextMenuInfo ) onCreateDescription [androidJvm] open fun onCreateDescription (): CharSequence ? onCreateNavigateUpTaskStack [androidJvm] open fun onCreateNavigateUpTaskStack (p0: TaskStackBuilder ) onCreateOptionsMenu [androidJvm] open fun onCreateOptionsMenu (p0: Menu ): Boolean onCreatePanelMenu [androidJvm] open override fun onCreatePanelMenu (p0: Int , @ NonNull p1: Menu ): Boolean onCreatePanelView [androidJvm] open override fun onCreatePanelView (p0: Int ): View ? onCreateSupportNavigateUpTaskStack [androidJvm] open fun onCreateSupportNavigateUpTaskStack (@ NonNull p0: TaskStackBuilder ) onCreateView [androidJvm] @ Nullable open override fun onCreateView (@ NonNull p0: String , @ NonNull p1: Context , @ NonNull p2: AttributeSet ): View ? @ Nullable open override fun onCreateView (@ Nullable p0: View ?, @ NonNull p1: String , @ NonNull p2: Context , @ NonNull p3: AttributeSet ): View ? onDetachedFromWindow [androidJvm] open override fun onDetachedFromWindow () onEnterAnimationComplete [androidJvm] open fun onEnterAnimationComplete () onGenericMotionEvent [androidJvm] open fun onGenericMotionEvent (p0: MotionEvent ): Boolean onGetDirectActions [androidJvm] open fun onGetDirectActions (p0: CancellationSignal , p1: Consumer < MutableList < DirectAction >>) onKeyDown [androidJvm] open override fun onKeyDown (p0: Int , p1: KeyEvent ): Boolean onKeyLongPress [androidJvm] open override fun onKeyLongPress (p0: Int , p1: KeyEvent ): Boolean onKeyMultiple [androidJvm] open override fun onKeyMultiple (p0: Int , p1: Int , p2: KeyEvent ): Boolean onKeyShortcut [androidJvm] open fun onKeyShortcut (p0: Int , p1: KeyEvent ): Boolean onKeyUp [androidJvm] open override fun onKeyUp (p0: Int , p1: KeyEvent ): Boolean onLocalVoiceInteractionStarted [androidJvm] open fun onLocalVoiceInteractionStarted () onLocalVoiceInteractionStopped [androidJvm] open fun onLocalVoiceInteractionStopped () onLowMemory [androidJvm] open override fun onLowMemory () onMenuItemSelected [androidJvm] override fun onMenuItemSelected (p0: Int , @ NonNull p1: MenuItem ): Boolean onMenuOpened [androidJvm] open override fun onMenuOpened (p0: Int , p1: Menu ): Boolean onMultiWindowModeChanged [androidJvm] @ CallSuper open override fun onMultiWindowModeChanged (p0: Boolean ) open fun onMultiWindowModeChanged (p0: Boolean , p1: Configuration ) onNavigateUp [androidJvm] open fun onNavigateUp (): Boolean onNewIntent [androidJvm] @ CallSuper open override fun onNewIntent (p0: Intent ) onNightModeChanged [androidJvm] open fun onNightModeChanged (p0: Int ) onOptionsItemSelected [androidJvm] open fun onOptionsItemSelected (p0: MenuItem ): Boolean onOptionsMenuClosed [androidJvm] open fun onOptionsMenuClosed (p0: Menu ) onPageChanged [androidJvm] open fun onPageChanged (pageIndex: Int , totalPages: Int , url: String ) onPageEnded [androidJvm] open fun onPageEnded (end: Boolean ) onPageLoaded [androidJvm] open fun onPageLoaded () onPanelClosed [androidJvm] open override fun onPanelClosed (p0: Int , @ NonNull p1: Menu ) onPause [androidJvm] open override fun onPause () onPerformDirectAction [androidJvm] open fun onPerformDirectAction (p0: String , p1: Bundle , p2: CancellationSignal , p3: Consumer < Bundle >) onPictureInPictureModeChanged [androidJvm] @ CallSuper open override fun onPictureInPictureModeChanged (p0: Boolean ) open fun onPictureInPictureModeChanged (p0: Boolean , p1: Configuration ) onPictureInPictureRequested [androidJvm] open fun onPictureInPictureRequested (): Boolean onPictureInPictureUiStateChanged [androidJvm] open fun onPictureInPictureUiStateChanged (p0: PictureInPictureUiState ) onPointerCaptureChanged [androidJvm] open fun onPointerCaptureChanged (p0: Boolean ) onPostCreate [androidJvm] open override fun onPostCreate (@ Nullable p0: Bundle ?) open fun onPostCreate (p0: Bundle ?, p1: PersistableBundle ?) onPostResume [androidJvm] open override fun onPostResume () onPrepareNavigateUpTaskStack [androidJvm] open fun onPrepareNavigateUpTaskStack (p0: TaskStackBuilder ) onPrepareOptionsMenu [androidJvm] open fun onPrepareOptionsMenu (p0: Menu ): Boolean onPreparePanel [androidJvm] open override fun onPreparePanel (p0: Int , @ Nullable p1: View ?, @ NonNull p2: Menu ): Boolean onPrepareSupportNavigateUpTaskStack [androidJvm] open fun onPrepareSupportNavigateUpTaskStack (@ NonNull p0: TaskStackBuilder ) onProvideAssistContent [androidJvm] open fun onProvideAssistContent (p0: AssistContent ) onProvideAssistData [androidJvm] open fun onProvideAssistData (p0: Bundle ) onProvideKeyboardShortcuts [androidJvm] open override fun onProvideKeyboardShortcuts (p0: MutableList < KeyboardShortcutGroup >, p1: Menu ?, p2: Int ) onProvideReferrer [androidJvm] open fun onProvideReferrer (): Uri onRequestPermissionsResult [androidJvm] @ CallSuper open override fun onRequestPermissionsResult (p0: Int , @ NonNull p1: Array < String >, @ NonNull p2: IntArray ) onRestart [androidJvm] open fun onRestart () onRestoreInstanceState [androidJvm] open fun onRestoreInstanceState (p0: Bundle ) open fun onRestoreInstanceState (p0: Bundle ?, p1: PersistableBundle ?) onResume [androidJvm] open override fun onResume () onResumeFragments [androidJvm] open fun onResumeFragments () onRetainNonConfigurationInstance [androidJvm] @ Nullable override fun onRetainNonConfigurationInstance (): Any ? onSaveInstanceState [androidJvm] @ CallSuper open override fun onSaveInstanceState (@ NonNull outState: Bundle ) open fun onSaveInstanceState (p0: Bundle , p1: PersistableBundle ) onSearchRequested [androidJvm] open override fun onSearchRequested (): Boolean open override fun onSearchRequested (p0: SearchEvent ?): Boolean onStart [androidJvm] open override fun onStart () onStateNotSaved [androidJvm] open override fun onStateNotSaved () onStop [androidJvm] open override fun onStop () onSupportActionModeFinished [androidJvm] @ CallSuper open override fun onSupportActionModeFinished (@ NonNull p0: ActionMode ) onSupportActionModeStarted [androidJvm] @ CallSuper open override fun onSupportActionModeStarted (@ NonNull p0: ActionMode ) onSupportNavigateUp [androidJvm] open fun onSupportNavigateUp (): Boolean onTap [androidJvm] open fun onTap (point: PointF ): Boolean Called when the user tapped the content, but nothing handled the event internally (eg. by following an internal link). onTitleChanged [androidJvm] open override fun onTitleChanged (p0: CharSequence , p1: Int ) onTopResumedActivityChanged [androidJvm] open fun onTopResumedActivityChanged (p0: Boolean ) onTouchEvent [androidJvm] open fun onTouchEvent (p0: MotionEvent ): Boolean onTrackballEvent [androidJvm] open fun onTrackballEvent (p0: MotionEvent ): Boolean onTrimMemory [androidJvm] open override fun onTrimMemory (p0: Int ) onUserInteraction [androidJvm] open fun onUserInteraction () onUserLeaveHint [androidJvm] open fun onUserLeaveHint () onWindowAttributesChanged [androidJvm] open override fun onWindowAttributesChanged (p0: WindowManager.LayoutParams ) onWindowFocusChanged [androidJvm] open override fun onWindowFocusChanged (p0: Boolean ) onWindowStartingActionMode [androidJvm] open override fun onWindowStartingActionMode (p0: ActionMode.Callback ): ActionMode ? open override fun onWindowStartingActionMode (p0: ActionMode.Callback , p1: Int ): ActionMode ? onWindowStartingSupportActionMode [androidJvm] @ Nullable open override fun onWindowStartingSupportActionMode (@ NonNull p0: ActionMode.Callback ): ActionMode ? openContextMenu [androidJvm] open fun openContextMenu (p0: View ) openFileInput [androidJvm] open override fun openFileInput (p0: String ): FileInputStream openFileOutput [androidJvm] open override fun openFileOutput (p0: String , p1: Int ): FileOutputStream openOptionsMenu [androidJvm] open override fun openOptionsMenu () openOrCreateDatabase [androidJvm] open override fun openOrCreateDatabase (p0: String , p1: Int , p2: SQLiteDatabase.CursorFactory ): SQLiteDatabase open override fun openOrCreateDatabase (p0: String , p1: Int , p2: SQLiteDatabase.CursorFactory , p3: DatabaseErrorHandler ?): SQLiteDatabase overridePendingTransition [androidJvm] open fun overridePendingTransition (p0: Int , p1: Int ) peekAvailableContext [androidJvm] @ Nullable open override fun peekAvailableContext (): Context ? postponeEnterTransition [androidJvm] open fun postponeEnterTransition () previousResource [androidJvm] open fun previousResource (v: View ? = null) recreate [androidJvm] open fun recreate () registerActivityLifecycleCallbacks [androidJvm] open fun registerActivityLifecycleCallbacks (p0: Application.ActivityLifecycleCallbacks ) registerComponentCallbacks [androidJvm] open fun registerComponentCallbacks (p0: ComponentCallbacks ) registerForActivityResult [androidJvm] @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull contract: ActivityResultContract < I , O >, @ NonNull callback: ActivityResultCallback < O >): ActivityResultLauncher < I > @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull contract: ActivityResultContract < I , O >, @ NonNull registry: ActivityResultRegistry , @ NonNull callback: ActivityResultCallback < O >): ActivityResultLauncher < I > registerForContextMenu [androidJvm] open fun registerForContextMenu (p0: View ) registerReceiver [androidJvm] open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter ): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: Int ): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: String ?, p3: Handler ?): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: String ?, p3: Handler ?, p4: Int ): Intent ? releaseInstance [androidJvm] open fun releaseInstance (): Boolean removeOnContextAvailableListener [androidJvm] override fun removeOnContextAvailableListener (@ NonNull listener: OnContextAvailableListener ) reportFullyDrawn [androidJvm] open override fun reportFullyDrawn () requestDragAndDropPermissions [androidJvm] open fun requestDragAndDropPermissions (p0: DragEvent ): DragAndDropPermissions requestPermissions [androidJvm] fun requestPermissions (p0: Array < String >, p1: Int ) requestShowKeyboardShortcuts [androidJvm] fun requestShowKeyboardShortcuts () requestWindowFeature [androidJvm] fun requestWindowFeature (p0: Int ): Boolean requireViewById [androidJvm] fun < T : View > requireViewById (p0: Int ): T revokeUriPermission [androidJvm] open override fun revokeUriPermission (p0: Uri , p1: Int ) open override fun revokeUriPermission (p0: String , p1: Uri , p2: Int ) runOnUiThread [androidJvm] fun runOnUiThread (p0: Runnable ) sendBroadcast [androidJvm] open override fun sendBroadcast (p0: Intent ) open override fun sendBroadcast (p0: Intent , p1: String ?) sendBroadcastAsUser [androidJvm] open override fun sendBroadcastAsUser (p0: Intent , p1: UserHandle ) open override fun sendBroadcastAsUser (p0: Intent , p1: UserHandle , p2: String ?) sendBroadcastWithMultiplePermissions [androidJvm] open fun sendBroadcastWithMultiplePermissions (p0: Intent , p1: Array < String >) sendOrderedBroadcast [androidJvm] open override fun sendOrderedBroadcast (p0: Intent , p1: String ?) open override fun sendOrderedBroadcast (p0: Intent , p1: String ?, p2: BroadcastReceiver ?, p3: Handler ?, p4: Int , p5: String ?, p6: Bundle ?) open override fun sendOrderedBroadcast (p0: Intent , p1: String ?, p2: String ?, p3: BroadcastReceiver ?, p4: Handler ?, p5: Int , p6: String ?, p7: Bundle ?) open fun sendOrderedBroadcast (p0: Intent , p1: Int , p2: String ?, p3: String ?, p4: BroadcastReceiver ?, p5: Handler ?, p6: String ?, p7: Bundle ?, p8: Bundle ?) sendOrderedBroadcastAsUser [androidJvm] open override fun sendOrderedBroadcastAsUser (p0: Intent , p1: UserHandle , p2: String ?, p3: BroadcastReceiver ?, p4: Handler ?, p5: Int , p6: String ?, p7: Bundle ?) setActionBar [androidJvm] open fun setActionBar (p0: Toolbar ?) setContentTransitionManager [androidJvm] open fun setContentTransitionManager (p0: TransitionManager ) setContentView [androidJvm] open override fun setContentView (p0: View ) open override fun setContentView (@ LayoutRes p0: Int ) open override fun setContentView (p0: View , p1: ViewGroup.LayoutParams ) setDefaultKeyMode [androidJvm] fun setDefaultKeyMode (p0: Int ) setEnterSharedElementCallback [androidJvm] open fun setEnterSharedElementCallback (p0: SharedElementCallback ) open fun setEnterSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setExitSharedElementCallback [androidJvm] open fun setExitSharedElementCallback (p0: SharedElementCallback ) open fun setExitSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setFeatureDrawable [androidJvm] fun setFeatureDrawable (p0: Int , p1: Drawable ) setFeatureDrawableAlpha [androidJvm] fun setFeatureDrawableAlpha (p0: Int , p1: Int ) setFeatureDrawableResource [androidJvm] fun setFeatureDrawableResource (p0: Int , p1: Int ) setFeatureDrawableUri [androidJvm] fun setFeatureDrawableUri (p0: Int , p1: Uri ) setFinishOnTouchOutside [androidJvm] open fun setFinishOnTouchOutside (p0: Boolean ) setImmersive [androidJvm] open fun setImmersive (p0: Boolean ) setInheritShowWhenLocked [androidJvm] open fun setInheritShowWhenLocked (p0: Boolean ) setIntent [androidJvm] open fun setIntent (p0: Intent ) setLocusContext [androidJvm] open fun setLocusContext (p0: LocusId ?, p1: Bundle ?) setMediaController [androidJvm] fun setMediaController (p0: MediaController ) setPictureInPictureParams [androidJvm] open fun setPictureInPictureParams (p0: PictureInPictureParams ) setRequestedOrientation [androidJvm] open fun setRequestedOrientation (p0: Int ) setResult [androidJvm] fun setResult (p0: Int ) fun setResult (p0: Int , p1: Intent ) setShowWhenLocked [androidJvm] open fun setShowWhenLocked (p0: Boolean ) setSupportActionBar [androidJvm] open fun setSupportActionBar (@ Nullable p0: Toolbar ?) setTaskDescription [androidJvm] open fun setTaskDescription (p0: ActivityManager.TaskDescription ) setTheme [androidJvm] open fun setTheme (p0: Resources.Theme ?) open override fun setTheme (@ StyleRes p0: Int ) setTitle [androidJvm] open fun setTitle (p0: CharSequence ) open fun setTitle (p0: Int ) setTranslucent [androidJvm] open fun setTranslucent (p0: Boolean ): Boolean setTurnScreenOn [androidJvm] open fun setTurnScreenOn (p0: Boolean ) setVisible [androidJvm] open fun setVisible (p0: Boolean ) setVolumeControlStream [androidJvm] fun setVolumeControlStream (p0: Int ) setVrModeEnabled [androidJvm] open fun setVrModeEnabled (p0: Boolean , p1: ComponentName ) shouldShowRequestPermissionRationale [androidJvm] open fun shouldShowRequestPermissionRationale (p0: String ): Boolean shouldUpRecreateTask [androidJvm] open fun shouldUpRecreateTask (p0: Intent ): Boolean showAssist [androidJvm] open fun showAssist (p0: Bundle ): Boolean showLockTaskEscapeMessage [androidJvm] open fun showLockTaskEscapeMessage () startActionMode [androidJvm] open fun startActionMode (p0: ActionMode.Callback ): ActionMode ? open fun startActionMode (p0: ActionMode.Callback , p1: Int ): ActionMode ? startActivities [androidJvm] open override fun startActivities (p0: Array < Intent >) open override fun startActivities (p0: Array < Intent >, p1: Bundle ?) startActivity [androidJvm] open override fun startActivity (p0: Intent ) open override fun startActivity (p0: Intent , p1: Bundle ?) startActivityFromFragment [androidJvm] open fun startActivityFromFragment (@ NonNull p0: Fragment , p1: Intent , p2: Int ) open fun startActivityFromFragment (@ NonNull p0: Fragment , p1: Intent , p2: Int , @ Nullable p3: Bundle ?) startActivityIfNeeded [androidJvm] open fun startActivityIfNeeded (p0: Intent , p1: Int ): Boolean open fun startActivityIfNeeded (p0: Intent , p1: Int , p2: Bundle ?): Boolean startForegroundService [androidJvm] open override fun startForegroundService (p0: Intent ): ComponentName ? startInstrumentation [androidJvm] open override fun startInstrumentation (p0: ComponentName , p1: String ?, p2: Bundle ?): Boolean startIntentSender [androidJvm] open override fun startIntentSender (p0: IntentSender , p1: Intent ?, p2: Int , p3: Int , p4: Int ) open override fun startIntentSender (p0: IntentSender , p1: Intent ?, p2: Int , p3: Int , p4: Int , p5: Bundle ?) startLocalVoiceInteraction [androidJvm] open fun startLocalVoiceInteraction (p0: Bundle ) startLockTask [androidJvm] open fun startLockTask () startNextMatchingActivity [androidJvm] open fun startNextMatchingActivity (p0: Intent ): Boolean open fun startNextMatchingActivity (p0: Intent , p1: Bundle ?): Boolean startPostponedEnterTransition [androidJvm] open fun startPostponedEnterTransition () startSearch [androidJvm] open fun startSearch (p0: String ?, p1: Boolean , p2: Bundle ?, p3: Boolean ) startService [androidJvm] open override fun startService (p0: Intent ): ComponentName ? startSupportActionMode [androidJvm] @ Nullable open fun startSupportActionMode (@ NonNull p0: ActionMode.Callback ): ActionMode ? stopLocalVoiceInteraction [androidJvm] open fun stopLocalVoiceInteraction () stopLockTask [androidJvm] open fun stopLockTask () stopService [androidJvm] open override fun stopService (p0: Intent ): Boolean superDispatchKeyEvent [androidJvm] open override fun superDispatchKeyEvent (event: KeyEvent ): Boolean supportFinishAfterTransition [androidJvm] open fun supportFinishAfterTransition () supportInvalidateOptionsMenu [androidJvm] open override fun supportInvalidateOptionsMenu () supportNavigateUpTo [androidJvm] open fun supportNavigateUpTo (@ NonNull p0: Intent ) supportPostponeEnterTransition [androidJvm] open fun supportPostponeEnterTransition () supportRequestWindowFeature [androidJvm] open fun supportRequestWindowFeature (p0: Int ): Boolean supportShouldUpRecreateTask [androidJvm] open fun supportShouldUpRecreateTask (@ NonNull p0: Intent ): Boolean supportStartPostponedEnterTransition [androidJvm] open fun supportStartPostponedEnterTransition () takeKeyEvents [androidJvm] open fun takeKeyEvents (p0: Boolean ) toggleActionBar [androidJvm] open override fun toggleActionBar () open fun toggleActionBar (v: View ? = null) triggerSearch [androidJvm] open fun triggerSearch (p0: String , p1: Bundle ?) unbindService [androidJvm] open override fun unbindService (p0: ServiceConnection ) unregisterActivityLifecycleCallbacks [androidJvm] open fun unregisterActivityLifecycleCallbacks (p0: Application.ActivityLifecycleCallbacks ) unregisterComponentCallbacks [androidJvm] open fun unregisterComponentCallbacks (p0: ComponentCallbacks ) unregisterForContextMenu [androidJvm] open fun unregisterForContextMenu (p0: View ) unregisterReceiver [androidJvm] open override fun unregisterReceiver (p0: BroadcastReceiver ) updateServiceGroup [androidJvm] open override fun updateServiceGroup (p0: ServiceConnection , p1: Int , p2: Int ) Properties \u00b6 Name Summary allowToggleActionBar [androidJvm] open val allowToggleActionBar : Boolean bookId [androidJvm] open override var bookId : Long coroutineContext [androidJvm] open override val coroutineContext : CoroutineContext Context of this scope. divinaWebView [androidJvm] lateinit var divinaWebView : R2BasicWebView mContextAwareHelper [androidJvm] val mContextAwareHelper : ContextAwareHelper mCreated [androidJvm] val mCreated : Boolean mFragmentLifecycleRegistry [androidJvm] val mFragmentLifecycleRegistry : LifecycleRegistry mFragments [androidJvm] val mFragments : FragmentController mResumed [androidJvm] val mResumed : Boolean mSavedStateRegistryController [androidJvm] val mSavedStateRegistryController : SavedStateRegistryController mStopped [androidJvm] val mStopped : Boolean preferences [androidJvm] open lateinit override var preferences : SharedPreferences publication [androidJvm] open lateinit override var publication : Publication publicationFileName [androidJvm] open lateinit override var publicationFileName : String publicationIdentifier [androidJvm] open lateinit override var publicationIdentifier : String publicationPath [androidJvm] open lateinit override var publicationPath : String resourcePager [androidJvm] open val resourcePager : R2ViewPager ?","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/-r2-di-vi-na-activity/#r2divinaactivity","text":"[androidJvm]\\ open class R2DiViNaActivity : AppCompatActivity , CoroutineScope, IR2Activity , VisualNavigator.Listener","title":"R2DiViNaActivity"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/-r2-di-vi-na-activity/#functions","text":"Name Summary addContentView [androidJvm] open override fun addContentView (p0: View , p1: ViewGroup.LayoutParams ) addOnContextAvailableListener [androidJvm] override fun addOnContextAvailableListener (@ NonNull listener: OnContextAvailableListener ) applyOverrideConfiguration [androidJvm] open fun applyOverrideConfiguration (p0: Configuration ) attachBaseContext [androidJvm] open override fun attachBaseContext (p0: Context ) bindIsolatedService [androidJvm] open override fun bindIsolatedService (p0: Intent , p1: Int , p2: String , p3: Executor , p4: ServiceConnection ): Boolean bindService [androidJvm] open override fun bindService (p0: Intent , p1: ServiceConnection , p2: Int ): Boolean open override fun bindService (p0: Intent , p1: Int , p2: Executor , p3: ServiceConnection ): Boolean bindServiceAsUser [androidJvm] open override fun bindServiceAsUser (p0: Intent , p1: ServiceConnection , p2: Int , p3: UserHandle ): Boolean checkCallingOrSelfPermission [androidJvm] open override fun checkCallingOrSelfPermission (p0: String ): Int checkCallingOrSelfUriPermission [androidJvm] open override fun checkCallingOrSelfUriPermission (p0: Uri , p1: Int ): Int checkCallingOrSelfUriPermissions [androidJvm] open override fun checkCallingOrSelfUriPermissions (p0: MutableList < Uri >, p1: Int ): IntArray checkCallingPermission [androidJvm] open override fun checkCallingPermission (p0: String ): Int checkCallingUriPermission [androidJvm] open override fun checkCallingUriPermission (p0: Uri , p1: Int ): Int checkCallingUriPermissions [androidJvm] open override fun checkCallingUriPermissions (p0: MutableList < Uri >, p1: Int ): IntArray checkPermission [androidJvm] open override fun checkPermission (p0: String , p1: Int , p2: Int ): Int checkSelfPermission [androidJvm] open override fun checkSelfPermission (p0: String ): Int checkUriPermission [androidJvm] open override fun checkUriPermission (p0: Uri , p1: Int , p2: Int , p3: Int ): Int open override fun checkUriPermission (p0: Uri ?, p1: String ?, p2: String ?, p3: Int , p4: Int , p5: Int ): Int checkUriPermissions [androidJvm] open override fun checkUriPermissions (p0: MutableList < Uri >, p1: Int , p2: Int , p3: Int ): IntArray closeContextMenu [androidJvm] open fun closeContextMenu () closeOptionsMenu [androidJvm] open override fun closeOptionsMenu () createAttributionContext [androidJvm] open override fun createAttributionContext (p0: String ?): Context createConfigurationContext [androidJvm] open override fun createConfigurationContext (p0: Configuration ): Context createContext [androidJvm] open override fun createContext (p0: ContextParams ): Context createContextForSplit [androidJvm] open override fun createContextForSplit (p0: String ): Context createDeviceProtectedStorageContext [androidJvm] open override fun createDeviceProtectedStorageContext (): Context createDisplayContext [androidJvm] open override fun createDisplayContext (p0: Display ): Context createPackageContext [androidJvm] open override fun createPackageContext (p0: String , p1: Int ): Context createPendingResult [androidJvm] open fun createPendingResult (p0: Int , p1: Intent , p2: Int ): PendingIntent createWindowContext [androidJvm] open override fun createWindowContext (p0: Int , p1: Bundle ?): Context open override fun createWindowContext (p0: Display , p1: Int , p2: Bundle ?): Context databaseList [androidJvm] open override fun databaseList (): Array < String > deleteDatabase [androidJvm] open override fun deleteDatabase (p0: String ): Boolean deleteFile [androidJvm] open override fun deleteFile (p0: String ): Boolean deleteSharedPreferences [androidJvm] open override fun deleteSharedPreferences (p0: String ): Boolean dismissKeyboardShortcutsHelper [androidJvm] fun dismissKeyboardShortcutsHelper () dispatchFragmentsOnCreateView [androidJvm] @ Nullable fun dispatchFragmentsOnCreateView (@ Nullable p0: View ?, @ NonNull p1: String , @ NonNull p2: Context , @ NonNull p3: AttributeSet ): View ? dispatchGenericMotionEvent [androidJvm] open override fun dispatchGenericMotionEvent (p0: MotionEvent ): Boolean dispatchKeyEvent [androidJvm] open override fun dispatchKeyEvent (p0: KeyEvent ): Boolean dispatchKeyShortcutEvent [androidJvm] open override fun dispatchKeyShortcutEvent (event: KeyEvent ): Boolean dispatchPopulateAccessibilityEvent [androidJvm] open override fun dispatchPopulateAccessibilityEvent (p0: AccessibilityEvent ): Boolean dispatchTouchEvent [androidJvm] open override fun dispatchTouchEvent (p0: MotionEvent ): Boolean dispatchTrackballEvent [androidJvm] open override fun dispatchTrackballEvent (p0: MotionEvent ): Boolean dump [androidJvm] open override fun dump (@ NonNull p0: String , @ Nullable p1: FileDescriptor ?, @ NonNull p2: PrintWriter , @ Nullable p3: Array < String >?) enforceCallingOrSelfPermission [androidJvm] open override fun enforceCallingOrSelfPermission (p0: String , p1: String ?) enforceCallingOrSelfUriPermission [androidJvm] open override fun enforceCallingOrSelfUriPermission (p0: Uri , p1: Int , p2: String ) enforceCallingPermission [androidJvm] open override fun enforceCallingPermission (p0: String , p1: String ?) enforceCallingUriPermission [androidJvm] open override fun enforceCallingUriPermission (p0: Uri , p1: Int , p2: String ) enforcePermission [androidJvm] open override fun enforcePermission (p0: String , p1: Int , p2: Int , p3: String ?) enforceUriPermission [androidJvm] open override fun enforceUriPermission (p0: Uri , p1: Int , p2: Int , p3: Int , p4: String ) open override fun enforceUriPermission (p0: Uri ?, p1: String ?, p2: String ?, p3: Int , p4: Int , p5: Int , p6: String ?) ensureViewModelStore [androidJvm] open fun ensureViewModelStore () enterPictureInPictureMode [androidJvm] open fun enterPictureInPictureMode (p0: PictureInPictureParams ): Boolean fileList [androidJvm] open override fun fileList (): Array < String > findViewById [androidJvm] open override fun < T : View > findViewById (@ IdRes p0: Int ): T finish [androidJvm] open override fun finish () finishActivity [androidJvm] open fun finishActivity (p0: Int ) finishAffinity [androidJvm] open fun finishAffinity () finishAfterTransition [androidJvm] open fun finishAfterTransition () finishAndRemoveTask [androidJvm] open fun finishAndRemoveTask () getActionBar [androidJvm] open fun getActionBar (): ActionBar ? getActivityResultRegistry [androidJvm] @ NonNull override fun getActivityResultRegistry (): ActivityResultRegistry getApplication [androidJvm] fun getApplication (): Application getApplicationContext [androidJvm] open override fun getApplicationContext (): Context getApplicationInfo [androidJvm] open override fun getApplicationInfo (): ApplicationInfo getAssets [androidJvm] open override fun getAssets (): AssetManager getAttributionSource [androidJvm] open override fun getAttributionSource (): AttributionSource getAttributionTag [androidJvm] open override fun getAttributionTag (): String ? getBaseContext [androidJvm] open fun getBaseContext (): Context getCacheDir [androidJvm] open override fun getCacheDir (): File getCallingActivity [androidJvm] open fun getCallingActivity (): ComponentName ? getCallingPackage [androidJvm] open fun getCallingPackage (): String ? getChangingConfigurations [androidJvm] open fun getChangingConfigurations (): Int getClassLoader [androidJvm] open override fun getClassLoader (): ClassLoader getCodeCacheDir [androidJvm] open override fun getCodeCacheDir (): File getColor [androidJvm] fun getColor (p0: Int ): Int getColorStateList [androidJvm] fun getColorStateList (p0: Int ): ColorStateList getComponentName [androidJvm] open fun getComponentName (): ComponentName getContentResolver [androidJvm] open override fun getContentResolver (): ContentResolver getContentScene [androidJvm] open fun getContentScene (): Scene getContentTransitionManager [androidJvm] open fun getContentTransitionManager (): TransitionManager getCurrentFocus [androidJvm] open fun getCurrentFocus (): View ? getDatabasePath [androidJvm] open override fun getDatabasePath (p0: String ): File getDataDir [androidJvm] open override fun getDataDir (): File getDefaultViewModelProviderFactory [androidJvm] @ NonNull open override fun getDefaultViewModelProviderFactory (): ViewModelProvider.Factory getDelegate [androidJvm] @ NonNull open fun getDelegate (): AppCompatDelegate getDir [androidJvm] open override fun getDir (p0: String , p1: Int ): File getDisplay [androidJvm] open override fun getDisplay (): Display ? getDrawable [androidJvm] fun getDrawable (p0: Int ): Drawable ? getDrawerToggleDelegate [androidJvm] @ Nullable open override fun getDrawerToggleDelegate (): ActionBarDrawerToggle.Delegate ? getExternalCacheDir [androidJvm] open override fun getExternalCacheDir (): File ? getExternalCacheDirs [androidJvm] open override fun getExternalCacheDirs (): Array < File > getExternalFilesDir [androidJvm] open override fun getExternalFilesDir (p0: String ?): File ? getExternalFilesDirs [androidJvm] open override fun getExternalFilesDirs (p0: String ): Array < File > getExternalMediaDirs [androidJvm] open override fun getExternalMediaDirs (): Array < File > getFilesDir [androidJvm] open override fun getFilesDir (): File getFileStreamPath [androidJvm] open override fun getFileStreamPath (p0: String ): File getIntent [androidJvm] open fun getIntent (): Intent getLastNonConfigurationInstance [androidJvm] open fun getLastNonConfigurationInstance (): Any ? getLayoutInflater [androidJvm] open fun getLayoutInflater (): LayoutInflater getLifecycle [androidJvm] @ NonNull open override fun getLifecycle (): Lifecycle getLocalClassName [androidJvm] open fun getLocalClassName (): String getMainExecutor [androidJvm] open override fun getMainExecutor (): Executor getMainLooper [androidJvm] open override fun getMainLooper (): Looper getMaxNumPictureInPictureActions [androidJvm] open fun getMaxNumPictureInPictureActions (): Int getMediaController [androidJvm] fun getMediaController (): MediaController getMenuInflater [androidJvm] @ NonNull open override fun getMenuInflater (): MenuInflater getNoBackupFilesDir [androidJvm] open override fun getNoBackupFilesDir (): File getObbDir [androidJvm] open override fun getObbDir (): File getObbDirs [androidJvm] open override fun getObbDirs (): Array < File > getOnBackPressedDispatcher [androidJvm] @ NonNull override fun getOnBackPressedDispatcher (): OnBackPressedDispatcher getOpPackageName [androidJvm] open override fun getOpPackageName (): String getPackageCodePath [androidJvm] open override fun getPackageCodePath (): String getPackageManager [androidJvm] open override fun getPackageManager (): PackageManager getPackageName [androidJvm] open override fun getPackageName (): String getPackageResourcePath [androidJvm] open override fun getPackageResourcePath (): String getParams [androidJvm] open override fun getParams (): ContextParams ? getParent [androidJvm] fun getParent (): Activity getParentActivityIntent [androidJvm] open fun getParentActivityIntent (): Intent ? getPreferences [androidJvm] open fun getPreferences (p0: Int ): SharedPreferences getReferrer [androidJvm] open fun getReferrer (): Uri ? getRequestedOrientation [androidJvm] open fun getRequestedOrientation (): Int getResources [androidJvm] open override fun getResources (): Resources getSavedStateRegistry [androidJvm] @ NonNull override fun getSavedStateRegistry (): SavedStateRegistry getSearchEvent [androidJvm] fun getSearchEvent (): SearchEvent getSharedPreferences [androidJvm] open override fun getSharedPreferences (p0: String , p1: Int ): SharedPreferences getSplashScreen [androidJvm] fun getSplashScreen (): SplashScreen getString [androidJvm] fun getString (p0: Int ): String fun getString (p0: Int , vararg p1: Any ): String getSupportActionBar [androidJvm] @ Nullable open fun getSupportActionBar (): ActionBar ? getSupportFragmentManager [androidJvm] @ NonNull open fun getSupportFragmentManager (): FragmentManager getSupportParentActivityIntent [androidJvm] @ Nullable open override fun getSupportParentActivityIntent (): Intent ? getSystemService [androidJvm] open override fun getSystemService (p0: String ): Any fun < T : Any > getSystemService (p0: Class < T >): T getSystemServiceName [androidJvm] open override fun getSystemServiceName (p0: Class <*>): String ? getTaskId [androidJvm] open fun getTaskId (): Int getText [androidJvm] fun getText (p0: Int ): CharSequence getTheme [androidJvm] open override fun getTheme (): Resources.Theme getTitle [androidJvm] fun getTitle (): CharSequence getTitleColor [androidJvm] fun getTitleColor (): Int getViewModelStore [androidJvm] @ NonNull open override fun getViewModelStore (): ViewModelStore getVoiceInteractor [androidJvm] open fun getVoiceInteractor (): VoiceInteractor getVolumeControlStream [androidJvm] fun getVolumeControlStream (): Int getWindow [androidJvm] open fun getWindow (): Window getWindowManager [androidJvm] open fun getWindowManager (): WindowManager grantUriPermission [androidJvm] open override fun grantUriPermission (p0: String , p1: Uri , p2: Int ) hasWindowFocus [androidJvm] open fun hasWindowFocus (): Boolean highlightActivated [androidJvm] open fun highlightActivated (id: String ) highlightAnnotationMarkActivated [androidJvm] open fun highlightAnnotationMarkActivated (id: String ) invalidateOptionsMenu [androidJvm] open override fun invalidateOptionsMenu () isActivityTransitionRunning [androidJvm] open fun isActivityTransitionRunning (): Boolean isChangingConfigurations [androidJvm] open fun isChangingConfigurations (): Boolean isChild [androidJvm] fun isChild (): Boolean isDestroyed [androidJvm] open fun isDestroyed (): Boolean isDeviceProtectedStorage [androidJvm] open override fun isDeviceProtectedStorage (): Boolean isFinishing [androidJvm] open fun isFinishing (): Boolean isImmersive [androidJvm] open fun isImmersive (): Boolean isInMultiWindowMode [androidJvm] open fun isInMultiWindowMode (): Boolean isInPictureInPictureMode [androidJvm] open fun isInPictureInPictureMode (): Boolean isLaunchedFromBubble [androidJvm] open fun isLaunchedFromBubble (): Boolean isLocalVoiceInteractionSupported [androidJvm] open fun isLocalVoiceInteractionSupported (): Boolean isRestricted [androidJvm] open override fun isRestricted (): Boolean isTaskRoot [androidJvm] open fun isTaskRoot (): Boolean isUiContext [androidJvm] open override fun isUiContext (): Boolean isVoiceInteraction [androidJvm] open fun isVoiceInteraction (): Boolean isVoiceInteractionRoot [androidJvm] open fun isVoiceInteractionRoot (): Boolean markFragmentsCreated [androidJvm] open fun markFragmentsCreated () moveDatabaseFrom [androidJvm] open override fun moveDatabaseFrom (p0: Context , p1: String ): Boolean moveSharedPreferencesFrom [androidJvm] open override fun moveSharedPreferencesFrom (p0: Context , p1: String ): Boolean moveTaskToBack [androidJvm] open fun moveTaskToBack (p0: Boolean ): Boolean navigateUpTo [androidJvm] open fun navigateUpTo (p0: Intent ): Boolean nextResource [androidJvm] open fun nextResource (v: View ? = null) obtainStyledAttributes [androidJvm] fun obtainStyledAttributes (p0: IntArray ): TypedArray fun obtainStyledAttributes (p0: AttributeSet ?, p1: IntArray ): TypedArray fun obtainStyledAttributes (p0: Int , p1: IntArray ): TypedArray fun obtainStyledAttributes (p0: AttributeSet ?, p1: IntArray , p2: Int , p3: Int ): TypedArray onActionModeFinished [androidJvm] open override fun onActionModeFinished (p0: ActionMode ) onActionModeStarted [androidJvm] open override fun onActionModeStarted (p0: ActionMode ) onActivityReenter [androidJvm] open fun onActivityReenter (p0: Int , p1: Intent ) onActivityResult [androidJvm] @ CallSuper open override fun onActivityResult (p0: Int , p1: Int , @ Nullable p2: Intent ?) onApplyThemeResource [androidJvm] open override fun onApplyThemeResource (p0: Resources.Theme , p1: Int , p2: Boolean ) onAttachedToWindow [androidJvm] open override fun onAttachedToWindow () onBackPressed [androidJvm] @ MainThread open override fun onBackPressed () onChildTitleChanged [androidJvm] open fun onChildTitleChanged (p0: Activity , p1: CharSequence ) onConfigurationChanged [androidJvm] open override fun onConfigurationChanged (@ NonNull p0: Configuration ) onContentChanged [androidJvm] open override fun onContentChanged () onContextItemSelected [androidJvm] open fun onContextItemSelected (p0: MenuItem ): Boolean onContextMenuClosed [androidJvm] open fun onContextMenuClosed (p0: Menu ) onCreate [androidJvm] open fun onCreate (p0: Bundle ?, p1: PersistableBundle ?) onCreateContextMenu [androidJvm] open override fun onCreateContextMenu (p0: ContextMenu , p1: View , p2: ContextMenu.ContextMenuInfo ) onCreateDescription [androidJvm] open fun onCreateDescription (): CharSequence ? onCreateNavigateUpTaskStack [androidJvm] open fun onCreateNavigateUpTaskStack (p0: TaskStackBuilder ) onCreateOptionsMenu [androidJvm] open fun onCreateOptionsMenu (p0: Menu ): Boolean onCreatePanelMenu [androidJvm] open override fun onCreatePanelMenu (p0: Int , @ NonNull p1: Menu ): Boolean onCreatePanelView [androidJvm] open override fun onCreatePanelView (p0: Int ): View ? onCreateSupportNavigateUpTaskStack [androidJvm] open fun onCreateSupportNavigateUpTaskStack (@ NonNull p0: TaskStackBuilder ) onCreateView [androidJvm] @ Nullable open override fun onCreateView (@ NonNull p0: String , @ NonNull p1: Context , @ NonNull p2: AttributeSet ): View ? @ Nullable open override fun onCreateView (@ Nullable p0: View ?, @ NonNull p1: String , @ NonNull p2: Context , @ NonNull p3: AttributeSet ): View ? onDetachedFromWindow [androidJvm] open override fun onDetachedFromWindow () onEnterAnimationComplete [androidJvm] open fun onEnterAnimationComplete () onGenericMotionEvent [androidJvm] open fun onGenericMotionEvent (p0: MotionEvent ): Boolean onGetDirectActions [androidJvm] open fun onGetDirectActions (p0: CancellationSignal , p1: Consumer < MutableList < DirectAction >>) onKeyDown [androidJvm] open override fun onKeyDown (p0: Int , p1: KeyEvent ): Boolean onKeyLongPress [androidJvm] open override fun onKeyLongPress (p0: Int , p1: KeyEvent ): Boolean onKeyMultiple [androidJvm] open override fun onKeyMultiple (p0: Int , p1: Int , p2: KeyEvent ): Boolean onKeyShortcut [androidJvm] open fun onKeyShortcut (p0: Int , p1: KeyEvent ): Boolean onKeyUp [androidJvm] open override fun onKeyUp (p0: Int , p1: KeyEvent ): Boolean onLocalVoiceInteractionStarted [androidJvm] open fun onLocalVoiceInteractionStarted () onLocalVoiceInteractionStopped [androidJvm] open fun onLocalVoiceInteractionStopped () onLowMemory [androidJvm] open override fun onLowMemory () onMenuItemSelected [androidJvm] override fun onMenuItemSelected (p0: Int , @ NonNull p1: MenuItem ): Boolean onMenuOpened [androidJvm] open override fun onMenuOpened (p0: Int , p1: Menu ): Boolean onMultiWindowModeChanged [androidJvm] @ CallSuper open override fun onMultiWindowModeChanged (p0: Boolean ) open fun onMultiWindowModeChanged (p0: Boolean , p1: Configuration ) onNavigateUp [androidJvm] open fun onNavigateUp (): Boolean onNewIntent [androidJvm] @ CallSuper open override fun onNewIntent (p0: Intent ) onNightModeChanged [androidJvm] open fun onNightModeChanged (p0: Int ) onOptionsItemSelected [androidJvm] open fun onOptionsItemSelected (p0: MenuItem ): Boolean onOptionsMenuClosed [androidJvm] open fun onOptionsMenuClosed (p0: Menu ) onPageChanged [androidJvm] open fun onPageChanged (pageIndex: Int , totalPages: Int , url: String ) onPageEnded [androidJvm] open fun onPageEnded (end: Boolean ) onPageLoaded [androidJvm] open fun onPageLoaded () onPanelClosed [androidJvm] open override fun onPanelClosed (p0: Int , @ NonNull p1: Menu ) onPause [androidJvm] open override fun onPause () onPerformDirectAction [androidJvm] open fun onPerformDirectAction (p0: String , p1: Bundle , p2: CancellationSignal , p3: Consumer < Bundle >) onPictureInPictureModeChanged [androidJvm] @ CallSuper open override fun onPictureInPictureModeChanged (p0: Boolean ) open fun onPictureInPictureModeChanged (p0: Boolean , p1: Configuration ) onPictureInPictureRequested [androidJvm] open fun onPictureInPictureRequested (): Boolean onPictureInPictureUiStateChanged [androidJvm] open fun onPictureInPictureUiStateChanged (p0: PictureInPictureUiState ) onPointerCaptureChanged [androidJvm] open fun onPointerCaptureChanged (p0: Boolean ) onPostCreate [androidJvm] open override fun onPostCreate (@ Nullable p0: Bundle ?) open fun onPostCreate (p0: Bundle ?, p1: PersistableBundle ?) onPostResume [androidJvm] open override fun onPostResume () onPrepareNavigateUpTaskStack [androidJvm] open fun onPrepareNavigateUpTaskStack (p0: TaskStackBuilder ) onPrepareOptionsMenu [androidJvm] open fun onPrepareOptionsMenu (p0: Menu ): Boolean onPreparePanel [androidJvm] open override fun onPreparePanel (p0: Int , @ Nullable p1: View ?, @ NonNull p2: Menu ): Boolean onPrepareSupportNavigateUpTaskStack [androidJvm] open fun onPrepareSupportNavigateUpTaskStack (@ NonNull p0: TaskStackBuilder ) onProvideAssistContent [androidJvm] open fun onProvideAssistContent (p0: AssistContent ) onProvideAssistData [androidJvm] open fun onProvideAssistData (p0: Bundle ) onProvideKeyboardShortcuts [androidJvm] open override fun onProvideKeyboardShortcuts (p0: MutableList < KeyboardShortcutGroup >, p1: Menu ?, p2: Int ) onProvideReferrer [androidJvm] open fun onProvideReferrer (): Uri onRequestPermissionsResult [androidJvm] @ CallSuper open override fun onRequestPermissionsResult (p0: Int , @ NonNull p1: Array < String >, @ NonNull p2: IntArray ) onRestart [androidJvm] open fun onRestart () onRestoreInstanceState [androidJvm] open fun onRestoreInstanceState (p0: Bundle ) open fun onRestoreInstanceState (p0: Bundle ?, p1: PersistableBundle ?) onResume [androidJvm] open override fun onResume () onResumeFragments [androidJvm] open fun onResumeFragments () onRetainNonConfigurationInstance [androidJvm] @ Nullable override fun onRetainNonConfigurationInstance (): Any ? onSaveInstanceState [androidJvm] @ CallSuper open override fun onSaveInstanceState (@ NonNull outState: Bundle ) open fun onSaveInstanceState (p0: Bundle , p1: PersistableBundle ) onSearchRequested [androidJvm] open override fun onSearchRequested (): Boolean open override fun onSearchRequested (p0: SearchEvent ?): Boolean onStart [androidJvm] open override fun onStart () onStateNotSaved [androidJvm] open override fun onStateNotSaved () onStop [androidJvm] open override fun onStop () onSupportActionModeFinished [androidJvm] @ CallSuper open override fun onSupportActionModeFinished (@ NonNull p0: ActionMode ) onSupportActionModeStarted [androidJvm] @ CallSuper open override fun onSupportActionModeStarted (@ NonNull p0: ActionMode ) onSupportNavigateUp [androidJvm] open fun onSupportNavigateUp (): Boolean onTap [androidJvm] open fun onTap (point: PointF ): Boolean Called when the user tapped the content, but nothing handled the event internally (eg. by following an internal link). onTitleChanged [androidJvm] open override fun onTitleChanged (p0: CharSequence , p1: Int ) onTopResumedActivityChanged [androidJvm] open fun onTopResumedActivityChanged (p0: Boolean ) onTouchEvent [androidJvm] open fun onTouchEvent (p0: MotionEvent ): Boolean onTrackballEvent [androidJvm] open fun onTrackballEvent (p0: MotionEvent ): Boolean onTrimMemory [androidJvm] open override fun onTrimMemory (p0: Int ) onUserInteraction [androidJvm] open fun onUserInteraction () onUserLeaveHint [androidJvm] open fun onUserLeaveHint () onWindowAttributesChanged [androidJvm] open override fun onWindowAttributesChanged (p0: WindowManager.LayoutParams ) onWindowFocusChanged [androidJvm] open override fun onWindowFocusChanged (p0: Boolean ) onWindowStartingActionMode [androidJvm] open override fun onWindowStartingActionMode (p0: ActionMode.Callback ): ActionMode ? open override fun onWindowStartingActionMode (p0: ActionMode.Callback , p1: Int ): ActionMode ? onWindowStartingSupportActionMode [androidJvm] @ Nullable open override fun onWindowStartingSupportActionMode (@ NonNull p0: ActionMode.Callback ): ActionMode ? openContextMenu [androidJvm] open fun openContextMenu (p0: View ) openFileInput [androidJvm] open override fun openFileInput (p0: String ): FileInputStream openFileOutput [androidJvm] open override fun openFileOutput (p0: String , p1: Int ): FileOutputStream openOptionsMenu [androidJvm] open override fun openOptionsMenu () openOrCreateDatabase [androidJvm] open override fun openOrCreateDatabase (p0: String , p1: Int , p2: SQLiteDatabase.CursorFactory ): SQLiteDatabase open override fun openOrCreateDatabase (p0: String , p1: Int , p2: SQLiteDatabase.CursorFactory , p3: DatabaseErrorHandler ?): SQLiteDatabase overridePendingTransition [androidJvm] open fun overridePendingTransition (p0: Int , p1: Int ) peekAvailableContext [androidJvm] @ Nullable open override fun peekAvailableContext (): Context ? postponeEnterTransition [androidJvm] open fun postponeEnterTransition () previousResource [androidJvm] open fun previousResource (v: View ? = null) recreate [androidJvm] open fun recreate () registerActivityLifecycleCallbacks [androidJvm] open fun registerActivityLifecycleCallbacks (p0: Application.ActivityLifecycleCallbacks ) registerComponentCallbacks [androidJvm] open fun registerComponentCallbacks (p0: ComponentCallbacks ) registerForActivityResult [androidJvm] @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull contract: ActivityResultContract < I , O >, @ NonNull callback: ActivityResultCallback < O >): ActivityResultLauncher < I > @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull contract: ActivityResultContract < I , O >, @ NonNull registry: ActivityResultRegistry , @ NonNull callback: ActivityResultCallback < O >): ActivityResultLauncher < I > registerForContextMenu [androidJvm] open fun registerForContextMenu (p0: View ) registerReceiver [androidJvm] open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter ): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: Int ): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: String ?, p3: Handler ?): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: String ?, p3: Handler ?, p4: Int ): Intent ? releaseInstance [androidJvm] open fun releaseInstance (): Boolean removeOnContextAvailableListener [androidJvm] override fun removeOnContextAvailableListener (@ NonNull listener: OnContextAvailableListener ) reportFullyDrawn [androidJvm] open override fun reportFullyDrawn () requestDragAndDropPermissions [androidJvm] open fun requestDragAndDropPermissions (p0: DragEvent ): DragAndDropPermissions requestPermissions [androidJvm] fun requestPermissions (p0: Array < String >, p1: Int ) requestShowKeyboardShortcuts [androidJvm] fun requestShowKeyboardShortcuts () requestWindowFeature [androidJvm] fun requestWindowFeature (p0: Int ): Boolean requireViewById [androidJvm] fun < T : View > requireViewById (p0: Int ): T revokeUriPermission [androidJvm] open override fun revokeUriPermission (p0: Uri , p1: Int ) open override fun revokeUriPermission (p0: String , p1: Uri , p2: Int ) runOnUiThread [androidJvm] fun runOnUiThread (p0: Runnable ) sendBroadcast [androidJvm] open override fun sendBroadcast (p0: Intent ) open override fun sendBroadcast (p0: Intent , p1: String ?) sendBroadcastAsUser [androidJvm] open override fun sendBroadcastAsUser (p0: Intent , p1: UserHandle ) open override fun sendBroadcastAsUser (p0: Intent , p1: UserHandle , p2: String ?) sendBroadcastWithMultiplePermissions [androidJvm] open fun sendBroadcastWithMultiplePermissions (p0: Intent , p1: Array < String >) sendOrderedBroadcast [androidJvm] open override fun sendOrderedBroadcast (p0: Intent , p1: String ?) open override fun sendOrderedBroadcast (p0: Intent , p1: String ?, p2: BroadcastReceiver ?, p3: Handler ?, p4: Int , p5: String ?, p6: Bundle ?) open override fun sendOrderedBroadcast (p0: Intent , p1: String ?, p2: String ?, p3: BroadcastReceiver ?, p4: Handler ?, p5: Int , p6: String ?, p7: Bundle ?) open fun sendOrderedBroadcast (p0: Intent , p1: Int , p2: String ?, p3: String ?, p4: BroadcastReceiver ?, p5: Handler ?, p6: String ?, p7: Bundle ?, p8: Bundle ?) sendOrderedBroadcastAsUser [androidJvm] open override fun sendOrderedBroadcastAsUser (p0: Intent , p1: UserHandle , p2: String ?, p3: BroadcastReceiver ?, p4: Handler ?, p5: Int , p6: String ?, p7: Bundle ?) setActionBar [androidJvm] open fun setActionBar (p0: Toolbar ?) setContentTransitionManager [androidJvm] open fun setContentTransitionManager (p0: TransitionManager ) setContentView [androidJvm] open override fun setContentView (p0: View ) open override fun setContentView (@ LayoutRes p0: Int ) open override fun setContentView (p0: View , p1: ViewGroup.LayoutParams ) setDefaultKeyMode [androidJvm] fun setDefaultKeyMode (p0: Int ) setEnterSharedElementCallback [androidJvm] open fun setEnterSharedElementCallback (p0: SharedElementCallback ) open fun setEnterSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setExitSharedElementCallback [androidJvm] open fun setExitSharedElementCallback (p0: SharedElementCallback ) open fun setExitSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setFeatureDrawable [androidJvm] fun setFeatureDrawable (p0: Int , p1: Drawable ) setFeatureDrawableAlpha [androidJvm] fun setFeatureDrawableAlpha (p0: Int , p1: Int ) setFeatureDrawableResource [androidJvm] fun setFeatureDrawableResource (p0: Int , p1: Int ) setFeatureDrawableUri [androidJvm] fun setFeatureDrawableUri (p0: Int , p1: Uri ) setFinishOnTouchOutside [androidJvm] open fun setFinishOnTouchOutside (p0: Boolean ) setImmersive [androidJvm] open fun setImmersive (p0: Boolean ) setInheritShowWhenLocked [androidJvm] open fun setInheritShowWhenLocked (p0: Boolean ) setIntent [androidJvm] open fun setIntent (p0: Intent ) setLocusContext [androidJvm] open fun setLocusContext (p0: LocusId ?, p1: Bundle ?) setMediaController [androidJvm] fun setMediaController (p0: MediaController ) setPictureInPictureParams [androidJvm] open fun setPictureInPictureParams (p0: PictureInPictureParams ) setRequestedOrientation [androidJvm] open fun setRequestedOrientation (p0: Int ) setResult [androidJvm] fun setResult (p0: Int ) fun setResult (p0: Int , p1: Intent ) setShowWhenLocked [androidJvm] open fun setShowWhenLocked (p0: Boolean ) setSupportActionBar [androidJvm] open fun setSupportActionBar (@ Nullable p0: Toolbar ?) setTaskDescription [androidJvm] open fun setTaskDescription (p0: ActivityManager.TaskDescription ) setTheme [androidJvm] open fun setTheme (p0: Resources.Theme ?) open override fun setTheme (@ StyleRes p0: Int ) setTitle [androidJvm] open fun setTitle (p0: CharSequence ) open fun setTitle (p0: Int ) setTranslucent [androidJvm] open fun setTranslucent (p0: Boolean ): Boolean setTurnScreenOn [androidJvm] open fun setTurnScreenOn (p0: Boolean ) setVisible [androidJvm] open fun setVisible (p0: Boolean ) setVolumeControlStream [androidJvm] fun setVolumeControlStream (p0: Int ) setVrModeEnabled [androidJvm] open fun setVrModeEnabled (p0: Boolean , p1: ComponentName ) shouldShowRequestPermissionRationale [androidJvm] open fun shouldShowRequestPermissionRationale (p0: String ): Boolean shouldUpRecreateTask [androidJvm] open fun shouldUpRecreateTask (p0: Intent ): Boolean showAssist [androidJvm] open fun showAssist (p0: Bundle ): Boolean showLockTaskEscapeMessage [androidJvm] open fun showLockTaskEscapeMessage () startActionMode [androidJvm] open fun startActionMode (p0: ActionMode.Callback ): ActionMode ? open fun startActionMode (p0: ActionMode.Callback , p1: Int ): ActionMode ? startActivities [androidJvm] open override fun startActivities (p0: Array < Intent >) open override fun startActivities (p0: Array < Intent >, p1: Bundle ?) startActivity [androidJvm] open override fun startActivity (p0: Intent ) open override fun startActivity (p0: Intent , p1: Bundle ?) startActivityFromFragment [androidJvm] open fun startActivityFromFragment (@ NonNull p0: Fragment , p1: Intent , p2: Int ) open fun startActivityFromFragment (@ NonNull p0: Fragment , p1: Intent , p2: Int , @ Nullable p3: Bundle ?) startActivityIfNeeded [androidJvm] open fun startActivityIfNeeded (p0: Intent , p1: Int ): Boolean open fun startActivityIfNeeded (p0: Intent , p1: Int , p2: Bundle ?): Boolean startForegroundService [androidJvm] open override fun startForegroundService (p0: Intent ): ComponentName ? startInstrumentation [androidJvm] open override fun startInstrumentation (p0: ComponentName , p1: String ?, p2: Bundle ?): Boolean startIntentSender [androidJvm] open override fun startIntentSender (p0: IntentSender , p1: Intent ?, p2: Int , p3: Int , p4: Int ) open override fun startIntentSender (p0: IntentSender , p1: Intent ?, p2: Int , p3: Int , p4: Int , p5: Bundle ?) startLocalVoiceInteraction [androidJvm] open fun startLocalVoiceInteraction (p0: Bundle ) startLockTask [androidJvm] open fun startLockTask () startNextMatchingActivity [androidJvm] open fun startNextMatchingActivity (p0: Intent ): Boolean open fun startNextMatchingActivity (p0: Intent , p1: Bundle ?): Boolean startPostponedEnterTransition [androidJvm] open fun startPostponedEnterTransition () startSearch [androidJvm] open fun startSearch (p0: String ?, p1: Boolean , p2: Bundle ?, p3: Boolean ) startService [androidJvm] open override fun startService (p0: Intent ): ComponentName ? startSupportActionMode [androidJvm] @ Nullable open fun startSupportActionMode (@ NonNull p0: ActionMode.Callback ): ActionMode ? stopLocalVoiceInteraction [androidJvm] open fun stopLocalVoiceInteraction () stopLockTask [androidJvm] open fun stopLockTask () stopService [androidJvm] open override fun stopService (p0: Intent ): Boolean superDispatchKeyEvent [androidJvm] open override fun superDispatchKeyEvent (event: KeyEvent ): Boolean supportFinishAfterTransition [androidJvm] open fun supportFinishAfterTransition () supportInvalidateOptionsMenu [androidJvm] open override fun supportInvalidateOptionsMenu () supportNavigateUpTo [androidJvm] open fun supportNavigateUpTo (@ NonNull p0: Intent ) supportPostponeEnterTransition [androidJvm] open fun supportPostponeEnterTransition () supportRequestWindowFeature [androidJvm] open fun supportRequestWindowFeature (p0: Int ): Boolean supportShouldUpRecreateTask [androidJvm] open fun supportShouldUpRecreateTask (@ NonNull p0: Intent ): Boolean supportStartPostponedEnterTransition [androidJvm] open fun supportStartPostponedEnterTransition () takeKeyEvents [androidJvm] open fun takeKeyEvents (p0: Boolean ) toggleActionBar [androidJvm] open override fun toggleActionBar () open fun toggleActionBar (v: View ? = null) triggerSearch [androidJvm] open fun triggerSearch (p0: String , p1: Bundle ?) unbindService [androidJvm] open override fun unbindService (p0: ServiceConnection ) unregisterActivityLifecycleCallbacks [androidJvm] open fun unregisterActivityLifecycleCallbacks (p0: Application.ActivityLifecycleCallbacks ) unregisterComponentCallbacks [androidJvm] open fun unregisterComponentCallbacks (p0: ComponentCallbacks ) unregisterForContextMenu [androidJvm] open fun unregisterForContextMenu (p0: View ) unregisterReceiver [androidJvm] open override fun unregisterReceiver (p0: BroadcastReceiver ) updateServiceGroup [androidJvm] open override fun updateServiceGroup (p0: ServiceConnection , p1: Int , p2: Int )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/-r2-di-vi-na-activity/#properties","text":"Name Summary allowToggleActionBar [androidJvm] open val allowToggleActionBar : Boolean bookId [androidJvm] open override var bookId : Long coroutineContext [androidJvm] open override val coroutineContext : CoroutineContext Context of this scope. divinaWebView [androidJvm] lateinit var divinaWebView : R2BasicWebView mContextAwareHelper [androidJvm] val mContextAwareHelper : ContextAwareHelper mCreated [androidJvm] val mCreated : Boolean mFragmentLifecycleRegistry [androidJvm] val mFragmentLifecycleRegistry : LifecycleRegistry mFragments [androidJvm] val mFragments : FragmentController mResumed [androidJvm] val mResumed : Boolean mSavedStateRegistryController [androidJvm] val mSavedStateRegistryController : SavedStateRegistryController mStopped [androidJvm] val mStopped : Boolean preferences [androidJvm] open lateinit override var preferences : SharedPreferences publication [androidJvm] open lateinit override var publication : Publication publicationFileName [androidJvm] open lateinit override var publicationFileName : String publicationIdentifier [androidJvm] open lateinit override var publicationIdentifier : String publicationPath [androidJvm] open lateinit override var publicationPath : String resourcePager [androidJvm] open val resourcePager : R2ViewPager ?","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/-r2-di-vi-na-activity/-r2-di-vi-na-activity/","text":"// navigator / org.readium.r2.navigator.divina / R2DiViNaActivity / R2DiViNaActivity R2DiViNaActivity \u00b6 [androidJvm]\\ fun R2DiViNaActivity ()","title":" r2 di vi na activity"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/-r2-di-vi-na-activity/-r2-di-vi-na-activity/#r2divinaactivity","text":"[androidJvm]\\ fun R2DiViNaActivity ()","title":"R2DiViNaActivity"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/-r2-di-vi-na-activity/book-id/","text":"// navigator / org.readium.r2.navigator.divina / R2DiViNaActivity / bookId bookId \u00b6 [androidJvm]\\ open override var bookId : Long","title":"Book id"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/-r2-di-vi-na-activity/book-id/#bookid","text":"[androidJvm]\\ open override var bookId : Long","title":"bookId"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/-r2-di-vi-na-activity/coroutine-context/","text":"// navigator / org.readium.r2.navigator.divina / R2DiViNaActivity / coroutineContext coroutineContext \u00b6 [androidJvm]\\ open override val coroutineContext : CoroutineContext Context of this scope.","title":"Coroutine context"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/-r2-di-vi-na-activity/coroutine-context/#coroutinecontext","text":"[androidJvm]\\ open override val coroutineContext : CoroutineContext Context of this scope.","title":"coroutineContext"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/-r2-di-vi-na-activity/divina-web-view/","text":"// navigator / org.readium.r2.navigator.divina / R2DiViNaActivity / divinaWebView divinaWebView \u00b6 [androidJvm]\\ lateinit var divinaWebView : R2BasicWebView","title":"Divina web view"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/-r2-di-vi-na-activity/divina-web-view/#divinawebview","text":"[androidJvm]\\ lateinit var divinaWebView : R2BasicWebView","title":"divinaWebView"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/-r2-di-vi-na-activity/finish/","text":"// navigator / org.readium.r2.navigator.divina / R2DiViNaActivity / finish finish \u00b6 [androidJvm]\\ open override fun finish ()","title":"Finish"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/-r2-di-vi-na-activity/finish/#finish","text":"[androidJvm]\\ open override fun finish ()","title":"finish"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/-r2-di-vi-na-activity/preferences/","text":"// navigator / org.readium.r2.navigator.divina / R2DiViNaActivity / preferences preferences \u00b6 [androidJvm]\\ open lateinit override var preferences : SharedPreferences","title":"Preferences"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/-r2-di-vi-na-activity/preferences/#preferences","text":"[androidJvm]\\ open lateinit override var preferences : SharedPreferences","title":"preferences"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/-r2-di-vi-na-activity/publication-file-name/","text":"// navigator / org.readium.r2.navigator.divina / R2DiViNaActivity / publicationFileName publicationFileName \u00b6 [androidJvm]\\ open lateinit override var publicationFileName : String","title":"Publication file name"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/-r2-di-vi-na-activity/publication-file-name/#publicationfilename","text":"[androidJvm]\\ open lateinit override var publicationFileName : String","title":"publicationFileName"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/-r2-di-vi-na-activity/publication-identifier/","text":"// navigator / org.readium.r2.navigator.divina / R2DiViNaActivity / publicationIdentifier publicationIdentifier \u00b6 [androidJvm]\\ open lateinit override var publicationIdentifier : String","title":"Publication identifier"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/-r2-di-vi-na-activity/publication-identifier/#publicationidentifier","text":"[androidJvm]\\ open lateinit override var publicationIdentifier : String","title":"publicationIdentifier"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/-r2-di-vi-na-activity/publication-path/","text":"// navigator / org.readium.r2.navigator.divina / R2DiViNaActivity / publicationPath publicationPath \u00b6 [androidJvm]\\ open lateinit override var publicationPath : String","title":"Publication path"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/-r2-di-vi-na-activity/publication-path/#publicationpath","text":"[androidJvm]\\ open lateinit override var publicationPath : String","title":"publicationPath"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/-r2-di-vi-na-activity/publication/","text":"// navigator / org.readium.r2.navigator.divina / R2DiViNaActivity / publication publication \u00b6 [androidJvm]\\ open lateinit override var publication : Publication","title":"Publication"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/-r2-di-vi-na-activity/publication/#publication","text":"[androidJvm]\\ open lateinit override var publication : Publication","title":"publication"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/-r2-di-vi-na-activity/toggle-action-bar/","text":"// navigator / org.readium.r2.navigator.divina / R2DiViNaActivity / toggleActionBar toggleActionBar \u00b6 [androidJvm]\\ open override fun toggleActionBar ()","title":"Toggle action bar"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.divina/-r2-di-vi-na-activity/toggle-action-bar/#toggleactionbar","text":"[androidJvm]\\ open override fun toggleActionBar ()","title":"toggleActionBar"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/","text":"// navigator / org.readium.r2.navigator.epub Package org.readium.r2.navigator.epub \u00b6 Types \u00b6 Name Summary EpubNavigatorFragment [androidJvm] class EpubNavigatorFragment : Fragment , CoroutineScope, VisualNavigator , SelectableNavigator , DecorableNavigator , R2BasicWebView.Listener Navigator for EPUB publications. Highlight [androidJvm] data class Highlight (id: String , locator: Locator , color: Int , style: Style , annotationMarkStyle: String ?) IR2Highlightable [androidJvm] interface IR2Highlightable IR2Selectable [androidJvm] interface IR2Selectable R2EpubActivity [androidJvm] open class R2EpubActivity : AppCompatActivity , IR2Activity , IR2Selectable , IR2Highlightable , IR2TTS , CoroutineScope, VisualNavigator , EpubNavigatorFragment.Listener Style [androidJvm] enum Style : Enum < Style >","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/#package-orgreadiumr2navigatorepub","text":"","title":"Package org.readium.r2.navigator.epub"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/#types","text":"Name Summary EpubNavigatorFragment [androidJvm] class EpubNavigatorFragment : Fragment , CoroutineScope, VisualNavigator , SelectableNavigator , DecorableNavigator , R2BasicWebView.Listener Navigator for EPUB publications. Highlight [androidJvm] data class Highlight (id: String , locator: Locator , color: Int , style: Style , annotationMarkStyle: String ?) IR2Highlightable [androidJvm] interface IR2Highlightable IR2Selectable [androidJvm] interface IR2Selectable R2EpubActivity [androidJvm] open class R2EpubActivity : AppCompatActivity , IR2Activity , IR2Selectable , IR2Highlightable , IR2TTS , CoroutineScope, VisualNavigator , EpubNavigatorFragment.Listener Style [androidJvm] enum Style : Enum < Style >","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment EpubNavigatorFragment \u00b6 [androidJvm]\\ class EpubNavigatorFragment : Fragment , CoroutineScope, VisualNavigator , SelectableNavigator , DecorableNavigator , R2BasicWebView.Listener Navigator for EPUB publications. To use this Fragment , create a factory with EpubNavigatorFragment.createFactory(). Types \u00b6 Name Summary Companion [androidJvm] object Companion Configuration [androidJvm] data class Configuration (decorationTemplates: HtmlDecorationTemplates , selectionActionModeCallback: ActionMode.Callback ?) Listener [androidJvm] interface Listener : VisualNavigator.Listener PaginationListener [androidJvm] interface PaginationListener Functions \u00b6 Name Summary addDecorationListener [androidJvm] open override fun addDecorationListener (group: String , listener: DecorableNavigator.Listener ) Registers a new listener for decoration interactions in the given group . applyDecorations [androidJvm] open suspend override fun applyDecorations (decorations: List < Decoration >, group: String ) Declares the current state of the decorations in the given decoration group . callStartTransitionListener [androidJvm] open fun callStartTransitionListener (p0: Boolean ) clearSelection [androidJvm] open override fun clearSelection () Clears the current selection. createFragmentContainer [androidJvm] @ NonNull open fun createFragmentContainer (): FragmentContainer currentSelection [androidJvm] open suspend override fun currentSelection (): Selection ? Currently selected content. dump [androidJvm] open fun dump (@ NonNull p0: String , @ Nullable p1: FileDescriptor ?, @ NonNull p2: PrintWriter , @ Nullable p3: Array < String >?) equals [androidJvm] operator override fun equals (@ Nullable other: Any ?): Boolean findFragmentByWho [androidJvm] @ Nullable open fun findFragmentByWho (@ NonNull p0: String ): Fragment ? generateActivityResultKey [androidJvm] @ NonNull open fun generateActivityResultKey (): String getActivity [androidJvm] @ Nullable fun getActivity (): FragmentActivity ? getAllowEnterTransitionOverlap [androidJvm] open fun getAllowEnterTransitionOverlap (): Boolean getAllowReturnTransitionOverlap [androidJvm] open fun getAllowReturnTransitionOverlap (): Boolean getAnimatingAway [androidJvm] open fun getAnimatingAway (): View getAnimator [androidJvm] open fun getAnimator (): Animator getArguments [androidJvm] @ Nullable fun getArguments (): Bundle ? getChildFragmentManager [androidJvm] @ NonNull fun getChildFragmentManager (): FragmentManager getContext [androidJvm] @ Nullable open fun getContext (): Context ? getDefaultViewModelProviderFactory [androidJvm] @ NonNull open override fun getDefaultViewModelProviderFactory (): ViewModelProvider.Factory getEnterAnim [androidJvm] open fun getEnterAnim (): Int getEnterTransition [androidJvm] @ Nullable open fun getEnterTransition (): Any ? getEnterTransitionCallback [androidJvm] open fun getEnterTransitionCallback (): SharedElementCallback getExitAnim [androidJvm] open fun getExitAnim (): Int getExitTransition [androidJvm] @ Nullable open fun getExitTransition (): Any ? getExitTransitionCallback [androidJvm] open fun getExitTransitionCallback (): SharedElementCallback getFocusedView [androidJvm] open fun getFocusedView (): View getHost [androidJvm] @ Nullable fun getHost (): Any ? getId [androidJvm] fun getId (): Int getLayoutInflater [androidJvm] @ NonNull fun getLayoutInflater (): LayoutInflater getLifecycle [androidJvm] @ NonNull open override fun getLifecycle (): Lifecycle getNextTransition [androidJvm] open fun getNextTransition (): Int getParentFragment [androidJvm] @ Nullable fun getParentFragment (): Fragment ? getParentFragmentManager [androidJvm] @ NonNull fun getParentFragmentManager (): FragmentManager getPopDirection [androidJvm] open fun getPopDirection (): Boolean getPopEnterAnim [androidJvm] open fun getPopEnterAnim (): Int getPopExitAnim [androidJvm] open fun getPopExitAnim (): Int getPostOnViewCreatedAlpha [androidJvm] open fun getPostOnViewCreatedAlpha (): Float getReenterTransition [androidJvm] @ Nullable open fun getReenterTransition (): Any ? getResources [androidJvm] @ NonNull fun getResources (): Resources getReturnTransition [androidJvm] @ Nullable open fun getReturnTransition (): Any ? getSavedStateRegistry [androidJvm] @ NonNull override fun getSavedStateRegistry (): SavedStateRegistry getSharedElementEnterTransition [androidJvm] @ Nullable open fun getSharedElementEnterTransition (): Any ? getSharedElementReturnTransition [androidJvm] @ Nullable open fun getSharedElementReturnTransition (): Any ? getSharedElementSourceNames [androidJvm] @ NonNull open fun getSharedElementSourceNames (): ArrayList < String > getSharedElementTargetNames [androidJvm] @ NonNull open fun getSharedElementTargetNames (): ArrayList < String > getString [androidJvm] @ NonNull fun getString (@ StringRes p0: Int ): String @ NonNull fun getString (@ StringRes p0: Int , @ Nullable vararg p1: Any ): String getTag [androidJvm] @ Nullable fun getTag (): String ? getText [androidJvm] @ NonNull fun getText (@ StringRes p0: Int ): CharSequence getView [androidJvm] @ Nullable open fun getView (): View ? getViewLifecycleOwner [androidJvm] @ MainThread @ NonNull open fun getViewLifecycleOwner (): LifecycleOwner getViewLifecycleOwnerLiveData [androidJvm] @ NonNull open fun getViewLifecycleOwnerLiveData (): LiveData < LifecycleOwner > getViewModelStore [androidJvm] @ NonNull open override fun getViewModelStore (): ViewModelStore go [androidJvm] open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link. [androidJvm] open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . goBackward [androidJvm] open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction. goForward [androidJvm] open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction. hashCode [androidJvm] override fun hashCode (): Int hasOptionsMenu [androidJvm] fun hasOptionsMenu (): Boolean initState [androidJvm] open fun initState () isAdded [androidJvm] fun isAdded (): Boolean isDetached [androidJvm] fun isDetached (): Boolean isHidden [androidJvm] fun isHidden (): Boolean isHideReplaced [androidJvm] open fun isHideReplaced (): Boolean isInBackStack [androidJvm] fun isInBackStack (): Boolean isInLayout [androidJvm] fun isInLayout (): Boolean isMenuVisible [androidJvm] fun isMenuVisible (): Boolean isPostponed [androidJvm] open fun isPostponed (): Boolean isRemoving [androidJvm] fun isRemoving (): Boolean isRemovingParent [androidJvm] fun isRemovingParent (): Boolean isResumed [androidJvm] fun isResumed (): Boolean isStateSaved [androidJvm] fun isStateSaved (): Boolean isVisible [androidJvm] fun isVisible (): Boolean noteStateNotSaved [androidJvm] open fun noteStateNotSaved () onAttach [androidJvm] open override fun onAttach (context: Context ) onConfigurationChanged [androidJvm] @ CallSuper open override fun onConfigurationChanged (@ NonNull p0: Configuration ) onContextItemSelected [androidJvm] @ MainThread open fun onContextItemSelected (@ NonNull p0: MenuItem ): Boolean onCreate [androidJvm] @ MainThread @ CallSuper open fun onCreate (@ Nullable p0: Bundle ?) onCreateAnimation [androidJvm] @ MainThread @ Nullable open fun onCreateAnimation (p0: Int , p1: Boolean , p2: Int ): Animation ? onCreateAnimator [androidJvm] @ MainThread @ Nullable open fun onCreateAnimator (p0: Int , p1: Boolean , p2: Int ): Animator ? onCreateContextMenu [androidJvm] @ MainThread open override fun onCreateContextMenu (@ NonNull p0: ContextMenu , @ NonNull p1: View , @ Nullable p2: ContextMenu.ContextMenuInfo ?) onCreateOptionsMenu [androidJvm] @ MainThread open fun onCreateOptionsMenu (@ NonNull p0: Menu , @ NonNull p1: MenuInflater ) onCreateView [androidJvm] open override fun onCreateView (inflater: LayoutInflater , container: ViewGroup ?, savedInstanceState: Bundle ?): View onDecorationActivated [androidJvm] open override fun onDecorationActivated (id: DecorationId , group: String , rect: RectF , point: PointF ): Boolean onDestroy [androidJvm] @ MainThread @ CallSuper open fun onDestroy () onDestroyOptionsMenu [androidJvm] @ MainThread open fun onDestroyOptionsMenu () onDestroyView [androidJvm] @ MainThread @ CallSuper open fun onDestroyView () onDetach [androidJvm] @ MainThread @ CallSuper open fun onDetach () onGetLayoutInflater [androidJvm] @ NonNull open fun onGetLayoutInflater (@ Nullable p0: Bundle ?): LayoutInflater onHiddenChanged [androidJvm] @ MainThread open fun onHiddenChanged (p0: Boolean ) onHighlightActivated [androidJvm] open override fun onHighlightActivated (id: String ) onHighlightAnnotationMarkActivated [androidJvm] open override fun onHighlightAnnotationMarkActivated (id: String ) onInflate [androidJvm] @ UiThread @ CallSuper open fun onInflate (@ NonNull p0: Context , @ NonNull p1: AttributeSet , @ Nullable p2: Bundle ?) onLowMemory [androidJvm] @ MainThread @ CallSuper open override fun onLowMemory () onMultiWindowModeChanged [androidJvm] open fun onMultiWindowModeChanged (p0: Boolean ) onOptionsItemSelected [androidJvm] @ MainThread open fun onOptionsItemSelected (@ NonNull p0: MenuItem ): Boolean onOptionsMenuClosed [androidJvm] @ MainThread open fun onOptionsMenuClosed (@ NonNull p0: Menu ) onPageChanged [androidJvm] open override fun onPageChanged (pageIndex: Int , totalPages: Int , url: String ) onPageEnded [androidJvm] open override fun onPageEnded (end: Boolean ) onPageLoaded [androidJvm] open override fun onPageLoaded () onPause [androidJvm] @ MainThread @ CallSuper open fun onPause () onPictureInPictureModeChanged [androidJvm] open fun onPictureInPictureModeChanged (p0: Boolean ) onPrepareOptionsMenu [androidJvm] @ MainThread open fun onPrepareOptionsMenu (@ NonNull p0: Menu ) onPrimaryNavigationFragmentChanged [androidJvm] @ MainThread open fun onPrimaryNavigationFragmentChanged (p0: Boolean ) onProgressionChanged [androidJvm] open override fun onProgressionChanged () onResourceLoaded [androidJvm] open override fun onResourceLoaded (link: Link ?, webView: R2BasicWebView , url: String ?) onResume [androidJvm] open override fun onResume () onSaveInstanceState [androidJvm] open override fun onSaveInstanceState (outState: Bundle ) onScroll [androidJvm] open override fun onScroll () onStart [androidJvm] @ MainThread @ CallSuper open fun onStart () onStop [androidJvm] @ MainThread @ CallSuper open fun onStop () onTap [androidJvm] open override fun onTap (point: PointF ): Boolean onViewCreated [androidJvm] @ MainThread open fun onViewCreated (@ NonNull p0: View , @ Nullable p1: Bundle ?) onViewStateRestored [androidJvm] @ MainThread @ CallSuper open fun onViewStateRestored (@ Nullable p0: Bundle ?) performActivityCreated [androidJvm] open fun performActivityCreated (p0: Bundle ) performAttach [androidJvm] open fun performAttach () performConfigurationChanged [androidJvm] open fun performConfigurationChanged (@ NonNull p0: Configuration ) performContextItemSelected [androidJvm] open fun performContextItemSelected (@ NonNull p0: MenuItem ): Boolean performCreate [androidJvm] open fun performCreate (p0: Bundle ) performCreateOptionsMenu [androidJvm] open fun performCreateOptionsMenu (@ NonNull p0: Menu , @ NonNull p1: MenuInflater ): Boolean performCreateView [androidJvm] open fun performCreateView (@ NonNull p0: LayoutInflater , @ Nullable p1: ViewGroup ?, @ Nullable p2: Bundle ?) performDestroy [androidJvm] open fun performDestroy () performDestroyView [androidJvm] open fun performDestroyView () performDetach [androidJvm] open fun performDetach () performGetLayoutInflater [androidJvm] @ NonNull open fun performGetLayoutInflater (@ Nullable p0: Bundle ?): LayoutInflater performLowMemory [androidJvm] open fun performLowMemory () performMultiWindowModeChanged [androidJvm] open fun performMultiWindowModeChanged (p0: Boolean ) performOptionsItemSelected [androidJvm] open fun performOptionsItemSelected (@ NonNull p0: MenuItem ): Boolean performOptionsMenuClosed [androidJvm] open fun performOptionsMenuClosed (@ NonNull p0: Menu ) performPause [androidJvm] open fun performPause () performPictureInPictureModeChanged [androidJvm] open fun performPictureInPictureModeChanged (p0: Boolean ) performPrepareOptionsMenu [androidJvm] open fun performPrepareOptionsMenu (@ NonNull p0: Menu ): Boolean performPrimaryNavigationFragmentChanged [androidJvm] open fun performPrimaryNavigationFragmentChanged () performResume [androidJvm] open fun performResume () performSaveInstanceState [androidJvm] open fun performSaveInstanceState (p0: Bundle ) performStart [androidJvm] open fun performStart () performStop [androidJvm] open fun performStop () performViewCreated [androidJvm] open fun performViewCreated () postponeEnterTransition [androidJvm] open fun postponeEnterTransition () fun postponeEnterTransition (p0: Long , @ NonNull p1: TimeUnit ) registerForActivityResult [androidJvm] @ MainThread @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull p0: ActivityResultContract < I , O >, @ NonNull p1: ActivityResultCallback < O >): ActivityResultLauncher < I > @ MainThread @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull p0: ActivityResultContract < I , O >, @ NonNull p1: ActivityResultRegistry , @ NonNull p2: ActivityResultCallback < O >): ActivityResultLauncher < I > registerForContextMenu [androidJvm] open fun registerForContextMenu (@ NonNull p0: View ) removeDecorationListener [androidJvm] open override fun removeDecorationListener (listener: DecorableNavigator.Listener ) Removes the given listener for all decoration interactions. requireActivity [androidJvm] @ NonNull fun requireActivity (): FragmentActivity requireArguments [androidJvm] @ NonNull fun requireArguments (): Bundle requireContext [androidJvm] @ NonNull fun requireContext (): Context requireHost [androidJvm] @ NonNull fun requireHost (): Any requireParentFragment [androidJvm] @ NonNull fun requireParentFragment (): Fragment requireView [androidJvm] @ NonNull fun requireView (): View restoreChildFragmentState [androidJvm] open fun restoreChildFragmentState (@ Nullable p0: Bundle ?) restoreViewState [androidJvm] fun restoreViewState (p0: Bundle ) setAllowEnterTransitionOverlap [androidJvm] open fun setAllowEnterTransitionOverlap (p0: Boolean ) setAllowReturnTransitionOverlap [androidJvm] open fun setAllowReturnTransitionOverlap (p0: Boolean ) setAnimatingAway [androidJvm] open fun setAnimatingAway (p0: View ) setAnimations [androidJvm] open fun setAnimations (p0: Int , p1: Int , p2: Int , p3: Int ) setAnimator [androidJvm] open fun setAnimator (p0: Animator ) setArguments [androidJvm] open fun setArguments (@ Nullable p0: Bundle ?) setEnterSharedElementCallback [androidJvm] open fun setEnterSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setEnterTransition [androidJvm] open fun setEnterTransition (@ Nullable p0: Any ?) setExitSharedElementCallback [androidJvm] open fun setExitSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setExitTransition [androidJvm] open fun setExitTransition (@ Nullable p0: Any ?) setFocusedView [androidJvm] open fun setFocusedView (p0: View ) setHasOptionsMenu [androidJvm] open fun setHasOptionsMenu (p0: Boolean ) setHideReplaced [androidJvm] open fun setHideReplaced (p0: Boolean ) setInitialSavedState [androidJvm] open fun setInitialSavedState (@ Nullable p0: Fragment.SavedState ?) setMenuVisibility [androidJvm] open fun setMenuVisibility (p0: Boolean ) setNextTransition [androidJvm] open fun setNextTransition (p0: Int ) setOnStartEnterTransitionListener [androidJvm] open fun setOnStartEnterTransitionListener (p0: Fragment.OnStartEnterTransitionListener ) setPopDirection [androidJvm] open fun setPopDirection (p0: Boolean ) setPostOnViewCreatedAlpha [androidJvm] open fun setPostOnViewCreatedAlpha (p0: Float ) setReenterTransition [androidJvm] open fun setReenterTransition (@ Nullable p0: Any ?) setReturnTransition [androidJvm] open fun setReturnTransition (@ Nullable p0: Any ?) setSharedElementEnterTransition [androidJvm] open fun setSharedElementEnterTransition (@ Nullable p0: Any ?) setSharedElementNames [androidJvm] open fun setSharedElementNames (@ Nullable p0: ArrayList < String >?, @ Nullable p1: ArrayList < String >?) setSharedElementReturnTransition [androidJvm] open fun setSharedElementReturnTransition (@ Nullable p0: Any ?) shouldShowRequestPermissionRationale [androidJvm] open fun shouldShowRequestPermissionRationale (@ NonNull p0: String ): Boolean startActivity [androidJvm] open fun startActivity (p0: Intent ) open fun startActivity (p0: Intent , @ Nullable p1: Bundle ?) startPostponedEnterTransition [androidJvm] open fun startPostponedEnterTransition () supportsDecorationStyle [androidJvm] open override fun < T : Decoration.Style > supportsDecorationStyle (style: KClass < T >): Boolean Indicates whether the Navigator supports the given decoration style class. toString [androidJvm] @ NonNull open override fun toString (): String unregisterForContextMenu [androidJvm] open fun unregisterForContextMenu (@ NonNull p0: View ) Properties \u00b6 Name Summary coroutineContext [androidJvm] open override val coroutineContext : CoroutineContext currentLocator [androidJvm] open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position. mAdded [androidJvm] val mAdded : Boolean mAnimationInfo [androidJvm] val mAnimationInfo : Fragment.AnimationInfo mArguments [androidJvm] val mArguments : Bundle mBackStackNesting [androidJvm] val mBackStackNesting : Int mChildFragmentManager [androidJvm] @ NonNull val mChildFragmentManager : FragmentManager mContainer [androidJvm] val mContainer : ViewGroup mContainerId [androidJvm] val mContainerId : Int mDefaultFactory [androidJvm] val mDefaultFactory : ViewModelProvider.Factory mDeferStart [androidJvm] val mDeferStart : Boolean mDetached [androidJvm] val mDetached : Boolean mFragmentId [androidJvm] val mFragmentId : Int mFragmentManager [androidJvm] val mFragmentManager : FragmentManager mFromLayout [androidJvm] val mFromLayout : Boolean mHasMenu [androidJvm] val mHasMenu : Boolean mHidden [androidJvm] val mHidden : Boolean mHiddenChanged [androidJvm] val mHiddenChanged : Boolean mHost [androidJvm] val mHost : FragmentHostCallback <*> mInLayout [androidJvm] val mInLayout : Boolean mIsCreated [androidJvm] val mIsCreated : Boolean mIsNewlyAdded [androidJvm] val mIsNewlyAdded : Boolean mLayoutInflater [androidJvm] val mLayoutInflater : LayoutInflater mLifecycleRegistry [androidJvm] val mLifecycleRegistry : LifecycleRegistry mMaxState [androidJvm] val mMaxState : Lifecycle.State mMenuVisible [androidJvm] val mMenuVisible : Boolean mParentFragment [androidJvm] val mParentFragment : Fragment mPerformedCreateView [androidJvm] val mPerformedCreateView : Boolean mPostponedAlpha [androidJvm] val mPostponedAlpha : Float mPostponedDurationRunnable [androidJvm] val mPostponedDurationRunnable : Runnable mRemoving [androidJvm] val mRemoving : Boolean mRestored [androidJvm] val mRestored : Boolean mRetainInstance [androidJvm] val mRetainInstance : Boolean mRetainInstanceChangedWhileDetached [androidJvm] val mRetainInstanceChangedWhileDetached : Boolean mSavedFragmentState [androidJvm] val mSavedFragmentState : Bundle mSavedStateRegistryController [androidJvm] val mSavedStateRegistryController : SavedStateRegistryController mSavedUserVisibleHint [androidJvm] @ Nullable val mSavedUserVisibleHint : Boolean ? mSavedViewRegistryState [androidJvm] val mSavedViewRegistryState : Bundle mSavedViewState [androidJvm] val mSavedViewState : SparseArray < Parcelable > mState [androidJvm] val mState : Int mTag [androidJvm] val mTag : String mTarget [androidJvm] val mTarget : Fragment mTargetRequestCode [androidJvm] val mTargetRequestCode : Int mTargetWho [androidJvm] val mTargetWho : String mUserVisibleHint [androidJvm] val mUserVisibleHint : Boolean mView [androidJvm] val mView : View mViewLifecycleOwner [androidJvm] @ Nullable val mViewLifecycleOwner : FragmentViewLifecycleOwner ? mViewLifecycleOwnerLiveData [androidJvm] val mViewLifecycleOwnerLiveData : MutableLiveData < LifecycleOwner > mWho [androidJvm] @ NonNull val mWho : String preferences [androidJvm] lateinit var preferences : SharedPreferences publication [androidJvm] open override val publication : Publication Publication rendered by this navigator. readingProgression [androidJvm] open override val readingProgression : ReadingProgression Current reading progression direction. resourcePager [androidJvm] lateinit var resourcePager : R2ViewPager selectionActionModeCallback [androidJvm] open override val selectionActionModeCallback : ActionMode.Callback ? Returns the custom ActionMode.Callback to be used with the text selection menu.","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/#epubnavigatorfragment","text":"[androidJvm]\\ class EpubNavigatorFragment : Fragment , CoroutineScope, VisualNavigator , SelectableNavigator , DecorableNavigator , R2BasicWebView.Listener Navigator for EPUB publications. To use this Fragment , create a factory with EpubNavigatorFragment.createFactory().","title":"EpubNavigatorFragment"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/#types","text":"Name Summary Companion [androidJvm] object Companion Configuration [androidJvm] data class Configuration (decorationTemplates: HtmlDecorationTemplates , selectionActionModeCallback: ActionMode.Callback ?) Listener [androidJvm] interface Listener : VisualNavigator.Listener PaginationListener [androidJvm] interface PaginationListener","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/#functions","text":"Name Summary addDecorationListener [androidJvm] open override fun addDecorationListener (group: String , listener: DecorableNavigator.Listener ) Registers a new listener for decoration interactions in the given group . applyDecorations [androidJvm] open suspend override fun applyDecorations (decorations: List < Decoration >, group: String ) Declares the current state of the decorations in the given decoration group . callStartTransitionListener [androidJvm] open fun callStartTransitionListener (p0: Boolean ) clearSelection [androidJvm] open override fun clearSelection () Clears the current selection. createFragmentContainer [androidJvm] @ NonNull open fun createFragmentContainer (): FragmentContainer currentSelection [androidJvm] open suspend override fun currentSelection (): Selection ? Currently selected content. dump [androidJvm] open fun dump (@ NonNull p0: String , @ Nullable p1: FileDescriptor ?, @ NonNull p2: PrintWriter , @ Nullable p3: Array < String >?) equals [androidJvm] operator override fun equals (@ Nullable other: Any ?): Boolean findFragmentByWho [androidJvm] @ Nullable open fun findFragmentByWho (@ NonNull p0: String ): Fragment ? generateActivityResultKey [androidJvm] @ NonNull open fun generateActivityResultKey (): String getActivity [androidJvm] @ Nullable fun getActivity (): FragmentActivity ? getAllowEnterTransitionOverlap [androidJvm] open fun getAllowEnterTransitionOverlap (): Boolean getAllowReturnTransitionOverlap [androidJvm] open fun getAllowReturnTransitionOverlap (): Boolean getAnimatingAway [androidJvm] open fun getAnimatingAway (): View getAnimator [androidJvm] open fun getAnimator (): Animator getArguments [androidJvm] @ Nullable fun getArguments (): Bundle ? getChildFragmentManager [androidJvm] @ NonNull fun getChildFragmentManager (): FragmentManager getContext [androidJvm] @ Nullable open fun getContext (): Context ? getDefaultViewModelProviderFactory [androidJvm] @ NonNull open override fun getDefaultViewModelProviderFactory (): ViewModelProvider.Factory getEnterAnim [androidJvm] open fun getEnterAnim (): Int getEnterTransition [androidJvm] @ Nullable open fun getEnterTransition (): Any ? getEnterTransitionCallback [androidJvm] open fun getEnterTransitionCallback (): SharedElementCallback getExitAnim [androidJvm] open fun getExitAnim (): Int getExitTransition [androidJvm] @ Nullable open fun getExitTransition (): Any ? getExitTransitionCallback [androidJvm] open fun getExitTransitionCallback (): SharedElementCallback getFocusedView [androidJvm] open fun getFocusedView (): View getHost [androidJvm] @ Nullable fun getHost (): Any ? getId [androidJvm] fun getId (): Int getLayoutInflater [androidJvm] @ NonNull fun getLayoutInflater (): LayoutInflater getLifecycle [androidJvm] @ NonNull open override fun getLifecycle (): Lifecycle getNextTransition [androidJvm] open fun getNextTransition (): Int getParentFragment [androidJvm] @ Nullable fun getParentFragment (): Fragment ? getParentFragmentManager [androidJvm] @ NonNull fun getParentFragmentManager (): FragmentManager getPopDirection [androidJvm] open fun getPopDirection (): Boolean getPopEnterAnim [androidJvm] open fun getPopEnterAnim (): Int getPopExitAnim [androidJvm] open fun getPopExitAnim (): Int getPostOnViewCreatedAlpha [androidJvm] open fun getPostOnViewCreatedAlpha (): Float getReenterTransition [androidJvm] @ Nullable open fun getReenterTransition (): Any ? getResources [androidJvm] @ NonNull fun getResources (): Resources getReturnTransition [androidJvm] @ Nullable open fun getReturnTransition (): Any ? getSavedStateRegistry [androidJvm] @ NonNull override fun getSavedStateRegistry (): SavedStateRegistry getSharedElementEnterTransition [androidJvm] @ Nullable open fun getSharedElementEnterTransition (): Any ? getSharedElementReturnTransition [androidJvm] @ Nullable open fun getSharedElementReturnTransition (): Any ? getSharedElementSourceNames [androidJvm] @ NonNull open fun getSharedElementSourceNames (): ArrayList < String > getSharedElementTargetNames [androidJvm] @ NonNull open fun getSharedElementTargetNames (): ArrayList < String > getString [androidJvm] @ NonNull fun getString (@ StringRes p0: Int ): String @ NonNull fun getString (@ StringRes p0: Int , @ Nullable vararg p1: Any ): String getTag [androidJvm] @ Nullable fun getTag (): String ? getText [androidJvm] @ NonNull fun getText (@ StringRes p0: Int ): CharSequence getView [androidJvm] @ Nullable open fun getView (): View ? getViewLifecycleOwner [androidJvm] @ MainThread @ NonNull open fun getViewLifecycleOwner (): LifecycleOwner getViewLifecycleOwnerLiveData [androidJvm] @ NonNull open fun getViewLifecycleOwnerLiveData (): LiveData < LifecycleOwner > getViewModelStore [androidJvm] @ NonNull open override fun getViewModelStore (): ViewModelStore go [androidJvm] open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link. [androidJvm] open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . goBackward [androidJvm] open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction. goForward [androidJvm] open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction. hashCode [androidJvm] override fun hashCode (): Int hasOptionsMenu [androidJvm] fun hasOptionsMenu (): Boolean initState [androidJvm] open fun initState () isAdded [androidJvm] fun isAdded (): Boolean isDetached [androidJvm] fun isDetached (): Boolean isHidden [androidJvm] fun isHidden (): Boolean isHideReplaced [androidJvm] open fun isHideReplaced (): Boolean isInBackStack [androidJvm] fun isInBackStack (): Boolean isInLayout [androidJvm] fun isInLayout (): Boolean isMenuVisible [androidJvm] fun isMenuVisible (): Boolean isPostponed [androidJvm] open fun isPostponed (): Boolean isRemoving [androidJvm] fun isRemoving (): Boolean isRemovingParent [androidJvm] fun isRemovingParent (): Boolean isResumed [androidJvm] fun isResumed (): Boolean isStateSaved [androidJvm] fun isStateSaved (): Boolean isVisible [androidJvm] fun isVisible (): Boolean noteStateNotSaved [androidJvm] open fun noteStateNotSaved () onAttach [androidJvm] open override fun onAttach (context: Context ) onConfigurationChanged [androidJvm] @ CallSuper open override fun onConfigurationChanged (@ NonNull p0: Configuration ) onContextItemSelected [androidJvm] @ MainThread open fun onContextItemSelected (@ NonNull p0: MenuItem ): Boolean onCreate [androidJvm] @ MainThread @ CallSuper open fun onCreate (@ Nullable p0: Bundle ?) onCreateAnimation [androidJvm] @ MainThread @ Nullable open fun onCreateAnimation (p0: Int , p1: Boolean , p2: Int ): Animation ? onCreateAnimator [androidJvm] @ MainThread @ Nullable open fun onCreateAnimator (p0: Int , p1: Boolean , p2: Int ): Animator ? onCreateContextMenu [androidJvm] @ MainThread open override fun onCreateContextMenu (@ NonNull p0: ContextMenu , @ NonNull p1: View , @ Nullable p2: ContextMenu.ContextMenuInfo ?) onCreateOptionsMenu [androidJvm] @ MainThread open fun onCreateOptionsMenu (@ NonNull p0: Menu , @ NonNull p1: MenuInflater ) onCreateView [androidJvm] open override fun onCreateView (inflater: LayoutInflater , container: ViewGroup ?, savedInstanceState: Bundle ?): View onDecorationActivated [androidJvm] open override fun onDecorationActivated (id: DecorationId , group: String , rect: RectF , point: PointF ): Boolean onDestroy [androidJvm] @ MainThread @ CallSuper open fun onDestroy () onDestroyOptionsMenu [androidJvm] @ MainThread open fun onDestroyOptionsMenu () onDestroyView [androidJvm] @ MainThread @ CallSuper open fun onDestroyView () onDetach [androidJvm] @ MainThread @ CallSuper open fun onDetach () onGetLayoutInflater [androidJvm] @ NonNull open fun onGetLayoutInflater (@ Nullable p0: Bundle ?): LayoutInflater onHiddenChanged [androidJvm] @ MainThread open fun onHiddenChanged (p0: Boolean ) onHighlightActivated [androidJvm] open override fun onHighlightActivated (id: String ) onHighlightAnnotationMarkActivated [androidJvm] open override fun onHighlightAnnotationMarkActivated (id: String ) onInflate [androidJvm] @ UiThread @ CallSuper open fun onInflate (@ NonNull p0: Context , @ NonNull p1: AttributeSet , @ Nullable p2: Bundle ?) onLowMemory [androidJvm] @ MainThread @ CallSuper open override fun onLowMemory () onMultiWindowModeChanged [androidJvm] open fun onMultiWindowModeChanged (p0: Boolean ) onOptionsItemSelected [androidJvm] @ MainThread open fun onOptionsItemSelected (@ NonNull p0: MenuItem ): Boolean onOptionsMenuClosed [androidJvm] @ MainThread open fun onOptionsMenuClosed (@ NonNull p0: Menu ) onPageChanged [androidJvm] open override fun onPageChanged (pageIndex: Int , totalPages: Int , url: String ) onPageEnded [androidJvm] open override fun onPageEnded (end: Boolean ) onPageLoaded [androidJvm] open override fun onPageLoaded () onPause [androidJvm] @ MainThread @ CallSuper open fun onPause () onPictureInPictureModeChanged [androidJvm] open fun onPictureInPictureModeChanged (p0: Boolean ) onPrepareOptionsMenu [androidJvm] @ MainThread open fun onPrepareOptionsMenu (@ NonNull p0: Menu ) onPrimaryNavigationFragmentChanged [androidJvm] @ MainThread open fun onPrimaryNavigationFragmentChanged (p0: Boolean ) onProgressionChanged [androidJvm] open override fun onProgressionChanged () onResourceLoaded [androidJvm] open override fun onResourceLoaded (link: Link ?, webView: R2BasicWebView , url: String ?) onResume [androidJvm] open override fun onResume () onSaveInstanceState [androidJvm] open override fun onSaveInstanceState (outState: Bundle ) onScroll [androidJvm] open override fun onScroll () onStart [androidJvm] @ MainThread @ CallSuper open fun onStart () onStop [androidJvm] @ MainThread @ CallSuper open fun onStop () onTap [androidJvm] open override fun onTap (point: PointF ): Boolean onViewCreated [androidJvm] @ MainThread open fun onViewCreated (@ NonNull p0: View , @ Nullable p1: Bundle ?) onViewStateRestored [androidJvm] @ MainThread @ CallSuper open fun onViewStateRestored (@ Nullable p0: Bundle ?) performActivityCreated [androidJvm] open fun performActivityCreated (p0: Bundle ) performAttach [androidJvm] open fun performAttach () performConfigurationChanged [androidJvm] open fun performConfigurationChanged (@ NonNull p0: Configuration ) performContextItemSelected [androidJvm] open fun performContextItemSelected (@ NonNull p0: MenuItem ): Boolean performCreate [androidJvm] open fun performCreate (p0: Bundle ) performCreateOptionsMenu [androidJvm] open fun performCreateOptionsMenu (@ NonNull p0: Menu , @ NonNull p1: MenuInflater ): Boolean performCreateView [androidJvm] open fun performCreateView (@ NonNull p0: LayoutInflater , @ Nullable p1: ViewGroup ?, @ Nullable p2: Bundle ?) performDestroy [androidJvm] open fun performDestroy () performDestroyView [androidJvm] open fun performDestroyView () performDetach [androidJvm] open fun performDetach () performGetLayoutInflater [androidJvm] @ NonNull open fun performGetLayoutInflater (@ Nullable p0: Bundle ?): LayoutInflater performLowMemory [androidJvm] open fun performLowMemory () performMultiWindowModeChanged [androidJvm] open fun performMultiWindowModeChanged (p0: Boolean ) performOptionsItemSelected [androidJvm] open fun performOptionsItemSelected (@ NonNull p0: MenuItem ): Boolean performOptionsMenuClosed [androidJvm] open fun performOptionsMenuClosed (@ NonNull p0: Menu ) performPause [androidJvm] open fun performPause () performPictureInPictureModeChanged [androidJvm] open fun performPictureInPictureModeChanged (p0: Boolean ) performPrepareOptionsMenu [androidJvm] open fun performPrepareOptionsMenu (@ NonNull p0: Menu ): Boolean performPrimaryNavigationFragmentChanged [androidJvm] open fun performPrimaryNavigationFragmentChanged () performResume [androidJvm] open fun performResume () performSaveInstanceState [androidJvm] open fun performSaveInstanceState (p0: Bundle ) performStart [androidJvm] open fun performStart () performStop [androidJvm] open fun performStop () performViewCreated [androidJvm] open fun performViewCreated () postponeEnterTransition [androidJvm] open fun postponeEnterTransition () fun postponeEnterTransition (p0: Long , @ NonNull p1: TimeUnit ) registerForActivityResult [androidJvm] @ MainThread @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull p0: ActivityResultContract < I , O >, @ NonNull p1: ActivityResultCallback < O >): ActivityResultLauncher < I > @ MainThread @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull p0: ActivityResultContract < I , O >, @ NonNull p1: ActivityResultRegistry , @ NonNull p2: ActivityResultCallback < O >): ActivityResultLauncher < I > registerForContextMenu [androidJvm] open fun registerForContextMenu (@ NonNull p0: View ) removeDecorationListener [androidJvm] open override fun removeDecorationListener (listener: DecorableNavigator.Listener ) Removes the given listener for all decoration interactions. requireActivity [androidJvm] @ NonNull fun requireActivity (): FragmentActivity requireArguments [androidJvm] @ NonNull fun requireArguments (): Bundle requireContext [androidJvm] @ NonNull fun requireContext (): Context requireHost [androidJvm] @ NonNull fun requireHost (): Any requireParentFragment [androidJvm] @ NonNull fun requireParentFragment (): Fragment requireView [androidJvm] @ NonNull fun requireView (): View restoreChildFragmentState [androidJvm] open fun restoreChildFragmentState (@ Nullable p0: Bundle ?) restoreViewState [androidJvm] fun restoreViewState (p0: Bundle ) setAllowEnterTransitionOverlap [androidJvm] open fun setAllowEnterTransitionOverlap (p0: Boolean ) setAllowReturnTransitionOverlap [androidJvm] open fun setAllowReturnTransitionOverlap (p0: Boolean ) setAnimatingAway [androidJvm] open fun setAnimatingAway (p0: View ) setAnimations [androidJvm] open fun setAnimations (p0: Int , p1: Int , p2: Int , p3: Int ) setAnimator [androidJvm] open fun setAnimator (p0: Animator ) setArguments [androidJvm] open fun setArguments (@ Nullable p0: Bundle ?) setEnterSharedElementCallback [androidJvm] open fun setEnterSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setEnterTransition [androidJvm] open fun setEnterTransition (@ Nullable p0: Any ?) setExitSharedElementCallback [androidJvm] open fun setExitSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setExitTransition [androidJvm] open fun setExitTransition (@ Nullable p0: Any ?) setFocusedView [androidJvm] open fun setFocusedView (p0: View ) setHasOptionsMenu [androidJvm] open fun setHasOptionsMenu (p0: Boolean ) setHideReplaced [androidJvm] open fun setHideReplaced (p0: Boolean ) setInitialSavedState [androidJvm] open fun setInitialSavedState (@ Nullable p0: Fragment.SavedState ?) setMenuVisibility [androidJvm] open fun setMenuVisibility (p0: Boolean ) setNextTransition [androidJvm] open fun setNextTransition (p0: Int ) setOnStartEnterTransitionListener [androidJvm] open fun setOnStartEnterTransitionListener (p0: Fragment.OnStartEnterTransitionListener ) setPopDirection [androidJvm] open fun setPopDirection (p0: Boolean ) setPostOnViewCreatedAlpha [androidJvm] open fun setPostOnViewCreatedAlpha (p0: Float ) setReenterTransition [androidJvm] open fun setReenterTransition (@ Nullable p0: Any ?) setReturnTransition [androidJvm] open fun setReturnTransition (@ Nullable p0: Any ?) setSharedElementEnterTransition [androidJvm] open fun setSharedElementEnterTransition (@ Nullable p0: Any ?) setSharedElementNames [androidJvm] open fun setSharedElementNames (@ Nullable p0: ArrayList < String >?, @ Nullable p1: ArrayList < String >?) setSharedElementReturnTransition [androidJvm] open fun setSharedElementReturnTransition (@ Nullable p0: Any ?) shouldShowRequestPermissionRationale [androidJvm] open fun shouldShowRequestPermissionRationale (@ NonNull p0: String ): Boolean startActivity [androidJvm] open fun startActivity (p0: Intent ) open fun startActivity (p0: Intent , @ Nullable p1: Bundle ?) startPostponedEnterTransition [androidJvm] open fun startPostponedEnterTransition () supportsDecorationStyle [androidJvm] open override fun < T : Decoration.Style > supportsDecorationStyle (style: KClass < T >): Boolean Indicates whether the Navigator supports the given decoration style class. toString [androidJvm] @ NonNull open override fun toString (): String unregisterForContextMenu [androidJvm] open fun unregisterForContextMenu (@ NonNull p0: View )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/#properties","text":"Name Summary coroutineContext [androidJvm] open override val coroutineContext : CoroutineContext currentLocator [androidJvm] open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position. mAdded [androidJvm] val mAdded : Boolean mAnimationInfo [androidJvm] val mAnimationInfo : Fragment.AnimationInfo mArguments [androidJvm] val mArguments : Bundle mBackStackNesting [androidJvm] val mBackStackNesting : Int mChildFragmentManager [androidJvm] @ NonNull val mChildFragmentManager : FragmentManager mContainer [androidJvm] val mContainer : ViewGroup mContainerId [androidJvm] val mContainerId : Int mDefaultFactory [androidJvm] val mDefaultFactory : ViewModelProvider.Factory mDeferStart [androidJvm] val mDeferStart : Boolean mDetached [androidJvm] val mDetached : Boolean mFragmentId [androidJvm] val mFragmentId : Int mFragmentManager [androidJvm] val mFragmentManager : FragmentManager mFromLayout [androidJvm] val mFromLayout : Boolean mHasMenu [androidJvm] val mHasMenu : Boolean mHidden [androidJvm] val mHidden : Boolean mHiddenChanged [androidJvm] val mHiddenChanged : Boolean mHost [androidJvm] val mHost : FragmentHostCallback <*> mInLayout [androidJvm] val mInLayout : Boolean mIsCreated [androidJvm] val mIsCreated : Boolean mIsNewlyAdded [androidJvm] val mIsNewlyAdded : Boolean mLayoutInflater [androidJvm] val mLayoutInflater : LayoutInflater mLifecycleRegistry [androidJvm] val mLifecycleRegistry : LifecycleRegistry mMaxState [androidJvm] val mMaxState : Lifecycle.State mMenuVisible [androidJvm] val mMenuVisible : Boolean mParentFragment [androidJvm] val mParentFragment : Fragment mPerformedCreateView [androidJvm] val mPerformedCreateView : Boolean mPostponedAlpha [androidJvm] val mPostponedAlpha : Float mPostponedDurationRunnable [androidJvm] val mPostponedDurationRunnable : Runnable mRemoving [androidJvm] val mRemoving : Boolean mRestored [androidJvm] val mRestored : Boolean mRetainInstance [androidJvm] val mRetainInstance : Boolean mRetainInstanceChangedWhileDetached [androidJvm] val mRetainInstanceChangedWhileDetached : Boolean mSavedFragmentState [androidJvm] val mSavedFragmentState : Bundle mSavedStateRegistryController [androidJvm] val mSavedStateRegistryController : SavedStateRegistryController mSavedUserVisibleHint [androidJvm] @ Nullable val mSavedUserVisibleHint : Boolean ? mSavedViewRegistryState [androidJvm] val mSavedViewRegistryState : Bundle mSavedViewState [androidJvm] val mSavedViewState : SparseArray < Parcelable > mState [androidJvm] val mState : Int mTag [androidJvm] val mTag : String mTarget [androidJvm] val mTarget : Fragment mTargetRequestCode [androidJvm] val mTargetRequestCode : Int mTargetWho [androidJvm] val mTargetWho : String mUserVisibleHint [androidJvm] val mUserVisibleHint : Boolean mView [androidJvm] val mView : View mViewLifecycleOwner [androidJvm] @ Nullable val mViewLifecycleOwner : FragmentViewLifecycleOwner ? mViewLifecycleOwnerLiveData [androidJvm] val mViewLifecycleOwnerLiveData : MutableLiveData < LifecycleOwner > mWho [androidJvm] @ NonNull val mWho : String preferences [androidJvm] lateinit var preferences : SharedPreferences publication [androidJvm] open override val publication : Publication Publication rendered by this navigator. readingProgression [androidJvm] open override val readingProgression : ReadingProgression Current reading progression direction. resourcePager [androidJvm] lateinit var resourcePager : R2ViewPager selectionActionModeCallback [androidJvm] open override val selectionActionModeCallback : ActionMode.Callback ? Returns the custom ActionMode.Callback to be used with the text selection menu.","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/add-decoration-listener/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / addDecorationListener addDecorationListener \u00b6 [androidJvm]\\ open override fun addDecorationListener (group: String , listener: DecorableNavigator.Listener ) Registers a new listener for decoration interactions in the given group .","title":"Add decoration listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/add-decoration-listener/#adddecorationlistener","text":"[androidJvm]\\ open override fun addDecorationListener (group: String , listener: DecorableNavigator.Listener ) Registers a new listener for decoration interactions in the given group .","title":"addDecorationListener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/apply-decorations/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / applyDecorations applyDecorations \u00b6 [androidJvm]\\ open suspend override fun applyDecorations (decorations: List < Decoration >, group: String ) Declares the current state of the decorations in the given decoration group . The Navigator will decide when to actually render each decoration efficiently. Your only responsibility is to submit the updated list of decorations when there are changes. Name each decoration group as you see fit. A good practice is to use the name of the feature requiring decorations, e.g. annotation, search, tts, etc.","title":"Apply decorations"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/apply-decorations/#applydecorations","text":"[androidJvm]\\ open suspend override fun applyDecorations (decorations: List < Decoration >, group: String ) Declares the current state of the decorations in the given decoration group . The Navigator will decide when to actually render each decoration efficiently. Your only responsibility is to submit the updated list of decorations when there are changes. Name each decoration group as you see fit. A good practice is to use the name of the feature requiring decorations, e.g. annotation, search, tts, etc.","title":"applyDecorations"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/clear-selection/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / clearSelection clearSelection \u00b6 [androidJvm]\\ open override fun clearSelection () Clears the current selection.","title":"Clear selection"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/clear-selection/#clearselection","text":"[androidJvm]\\ open override fun clearSelection () Clears the current selection.","title":"clearSelection"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/current-locator/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / currentLocator currentLocator \u00b6 [androidJvm]\\ open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position.","title":"Current locator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/current-locator/#currentlocator","text":"[androidJvm]\\ open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position.","title":"currentLocator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/current-selection/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / currentSelection currentSelection \u00b6 [androidJvm]\\ open suspend override fun currentSelection (): Selection ? Currently selected content.","title":"Current selection"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/current-selection/#currentselection","text":"[androidJvm]\\ open suspend override fun currentSelection (): Selection ? Currently selected content.","title":"currentSelection"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/go-backward/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / goBackward goBackward \u00b6 [androidJvm]\\ open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction.","title":"Go backward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/go-backward/#gobackward","text":"[androidJvm]\\ open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction.","title":"goBackward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/go-forward/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / goForward goForward \u00b6 [androidJvm]\\ open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction.","title":"Go forward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/go-forward/#goforward","text":"[androidJvm]\\ open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction.","title":"goForward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/go/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / go go \u00b6 [androidJvm]\\ open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . [androidJvm]\\ open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link.","title":"Go"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/go/#go","text":"[androidJvm]\\ open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . [androidJvm]\\ open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link.","title":"go"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-attach/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / onAttach onAttach \u00b6 [androidJvm]\\ open override fun onAttach (context: Context )","title":"On attach"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-attach/#onattach","text":"[androidJvm]\\ open override fun onAttach (context: Context )","title":"onAttach"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-create-view/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / onCreateView onCreateView \u00b6 [androidJvm]\\ open override fun onCreateView (inflater: LayoutInflater , container: ViewGroup ?, savedInstanceState: Bundle ?): View","title":"On create view"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-create-view/#oncreateview","text":"[androidJvm]\\ open override fun onCreateView (inflater: LayoutInflater , container: ViewGroup ?, savedInstanceState: Bundle ?): View","title":"onCreateView"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-decoration-activated/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / onDecorationActivated onDecorationActivated \u00b6 [androidJvm]\\ open override fun onDecorationActivated (id: DecorationId , group: String , rect: RectF , point: PointF ): Boolean","title":"On decoration activated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-decoration-activated/#ondecorationactivated","text":"[androidJvm]\\ open override fun onDecorationActivated (id: DecorationId , group: String , rect: RectF , point: PointF ): Boolean","title":"onDecorationActivated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-highlight-activated/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / onHighlightActivated onHighlightActivated \u00b6 [androidJvm]\\ open override fun onHighlightActivated (id: String )","title":"On highlight activated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-highlight-activated/#onhighlightactivated","text":"[androidJvm]\\ open override fun onHighlightActivated (id: String )","title":"onHighlightActivated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-highlight-annotation-mark-activated/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / onHighlightAnnotationMarkActivated onHighlightAnnotationMarkActivated \u00b6 [androidJvm]\\ open override fun onHighlightAnnotationMarkActivated (id: String )","title":"On highlight annotation mark activated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-highlight-annotation-mark-activated/#onhighlightannotationmarkactivated","text":"[androidJvm]\\ open override fun onHighlightAnnotationMarkActivated (id: String )","title":"onHighlightAnnotationMarkActivated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-page-changed/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / onPageChanged onPageChanged \u00b6 [androidJvm]\\ open override fun onPageChanged (pageIndex: Int , totalPages: Int , url: String )","title":"On page changed"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-page-changed/#onpagechanged","text":"[androidJvm]\\ open override fun onPageChanged (pageIndex: Int , totalPages: Int , url: String )","title":"onPageChanged"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-page-ended/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / onPageEnded onPageEnded \u00b6 [androidJvm]\\ open override fun onPageEnded (end: Boolean )","title":"On page ended"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-page-ended/#onpageended","text":"[androidJvm]\\ open override fun onPageEnded (end: Boolean )","title":"onPageEnded"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-page-loaded/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / onPageLoaded onPageLoaded \u00b6 [androidJvm]\\ open override fun onPageLoaded ()","title":"On page loaded"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-page-loaded/#onpageloaded","text":"[androidJvm]\\ open override fun onPageLoaded ()","title":"onPageLoaded"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-progression-changed/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / onProgressionChanged onProgressionChanged \u00b6 [androidJvm]\\ open override fun onProgressionChanged ()","title":"On progression changed"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-progression-changed/#onprogressionchanged","text":"[androidJvm]\\ open override fun onProgressionChanged ()","title":"onProgressionChanged"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-resource-loaded/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / onResourceLoaded onResourceLoaded \u00b6 [androidJvm]\\ open override fun onResourceLoaded (link: Link ?, webView: R2BasicWebView , url: String ?)","title":"On resource loaded"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-resource-loaded/#onresourceloaded","text":"[androidJvm]\\ open override fun onResourceLoaded (link: Link ?, webView: R2BasicWebView , url: String ?)","title":"onResourceLoaded"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-resume/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / onResume onResume \u00b6 [androidJvm]\\ open override fun onResume ()","title":"On resume"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-resume/#onresume","text":"[androidJvm]\\ open override fun onResume ()","title":"onResume"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-save-instance-state/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / onSaveInstanceState onSaveInstanceState \u00b6 [androidJvm]\\ open override fun onSaveInstanceState (outState: Bundle )","title":"On save instance state"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-save-instance-state/#onsaveinstancestate","text":"[androidJvm]\\ open override fun onSaveInstanceState (outState: Bundle )","title":"onSaveInstanceState"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-scroll/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / onScroll onScroll \u00b6 [androidJvm]\\ open override fun onScroll ()","title":"On scroll"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-scroll/#onscroll","text":"[androidJvm]\\ open override fun onScroll ()","title":"onScroll"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-tap/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / onTap onTap \u00b6 [androidJvm]\\ open override fun onTap (point: PointF ): Boolean","title":"On tap"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/on-tap/#ontap","text":"[androidJvm]\\ open override fun onTap (point: PointF ): Boolean","title":"onTap"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/preferences/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / preferences preferences \u00b6 [androidJvm]\\ lateinit var preferences : SharedPreferences","title":"Preferences"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/preferences/#preferences","text":"[androidJvm]\\ lateinit var preferences : SharedPreferences","title":"preferences"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/publication/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / publication publication \u00b6 [androidJvm]\\ open override val publication : Publication Publication rendered by this navigator.","title":"Publication"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/publication/#publication","text":"[androidJvm]\\ open override val publication : Publication Publication rendered by this navigator.","title":"publication"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/reading-progression/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / readingProgression readingProgression \u00b6 [androidJvm]\\ open override val readingProgression : ReadingProgression Current reading progression direction.","title":"Reading progression"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/reading-progression/#readingprogression","text":"[androidJvm]\\ open override val readingProgression : ReadingProgression Current reading progression direction.","title":"readingProgression"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/remove-decoration-listener/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / removeDecorationListener removeDecorationListener \u00b6 [androidJvm]\\ open override fun removeDecorationListener (listener: DecorableNavigator.Listener ) Removes the given listener for all decoration interactions.","title":"Remove decoration listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/remove-decoration-listener/#removedecorationlistener","text":"[androidJvm]\\ open override fun removeDecorationListener (listener: DecorableNavigator.Listener ) Removes the given listener for all decoration interactions.","title":"removeDecorationListener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/resource-pager/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / resourcePager resourcePager \u00b6 [androidJvm]\\ lateinit var resourcePager : R2ViewPager","title":"Resource pager"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/resource-pager/#resourcepager","text":"[androidJvm]\\ lateinit var resourcePager : R2ViewPager","title":"resourcePager"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/selection-action-mode-callback/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / selectionActionModeCallback selectionActionModeCallback \u00b6 [androidJvm]\\ open override val selectionActionModeCallback : ActionMode.Callback ? Returns the custom ActionMode.Callback to be used with the text selection menu.","title":"Selection action mode callback"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/selection-action-mode-callback/#selectionactionmodecallback","text":"[androidJvm]\\ open override val selectionActionModeCallback : ActionMode.Callback ? Returns the custom ActionMode.Callback to be used with the text selection menu.","title":"selectionActionModeCallback"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/supports-decoration-style/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / supportsDecorationStyle supportsDecorationStyle \u00b6 [androidJvm]\\ open override fun < T : Decoration.Style > supportsDecorationStyle (style: KClass < T >): Boolean Indicates whether the Navigator supports the given decoration style class. You should check whether the Navigator supports drawing the decoration styles required by a particular feature before enabling it. For example, underlining an audiobook does not make sense, so an Audiobook Navigator would not support the underline decoration style.","title":"Supports decoration style"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/supports-decoration-style/#supportsdecorationstyle","text":"[androidJvm]\\ open override fun < T : Decoration.Style > supportsDecorationStyle (style: KClass < T >): Boolean Indicates whether the Navigator supports the given decoration style class. You should check whether the Navigator supports drawing the decoration styles required by a particular feature before enabling it. For example, underlining an audiobook does not make sense, so an Audiobook Navigator would not support the underline decoration style.","title":"supportsDecorationStyle"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/-companion/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary createFactory [androidJvm] fun createFactory (publication: Publication , baseUrl: String , initialLocator: Locator ? = null, listener: EpubNavigatorFragment.Listener ? = null, paginationListener: EpubNavigatorFragment.PaginationListener ? = null, config: EpubNavigatorFragment.Configuration = Configuration()): FragmentFactory Creates a factory for EpubNavigatorFragment .","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/-companion/#functions","text":"Name Summary createFactory [androidJvm] fun createFactory (publication: Publication , baseUrl: String , initialLocator: Locator ? = null, listener: EpubNavigatorFragment.Listener ? = null, paginationListener: EpubNavigatorFragment.PaginationListener ? = null, config: EpubNavigatorFragment.Configuration = Configuration()): FragmentFactory Creates a factory for EpubNavigatorFragment .","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/-companion/create-factory/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / Companion / createFactory createFactory \u00b6 [androidJvm]\\ fun createFactory (publication: Publication , baseUrl: String , initialLocator: Locator ? = null, listener: EpubNavigatorFragment.Listener ? = null, paginationListener: EpubNavigatorFragment.PaginationListener ? = null, config: EpubNavigatorFragment.Configuration = Configuration()): FragmentFactory Creates a factory for EpubNavigatorFragment . Parameters \u00b6 androidJvm publication EPUB publication to render in the navigator. baseUrl A base URL where this publication is served from. initialLocator The first location which should be visible when rendering the publication. Can be used to restore the last reading location. listener Optional listener to implement to observe events, such as user taps. config Additional configuration.","title":"Create factory"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/-companion/create-factory/#createfactory","text":"[androidJvm]\\ fun createFactory (publication: Publication , baseUrl: String , initialLocator: Locator ? = null, listener: EpubNavigatorFragment.Listener ? = null, paginationListener: EpubNavigatorFragment.PaginationListener ? = null, config: EpubNavigatorFragment.Configuration = Configuration()): FragmentFactory Creates a factory for EpubNavigatorFragment .","title":"createFactory"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/-companion/create-factory/#parameters","text":"androidJvm publication EPUB publication to render in the navigator. baseUrl A base URL where this publication is served from. initialLocator The first location which should be visible when rendering the publication. Can be used to restore the last reading location. listener Optional listener to implement to observe events, such as user taps. config Additional configuration.","title":"Parameters"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/-configuration/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / Configuration Configuration \u00b6 [androidJvm]\\ data class Configuration (decorationTemplates: HtmlDecorationTemplates , selectionActionModeCallback: ActionMode.Callback ?) Properties \u00b6 Name Summary decorationTemplates [androidJvm] val decorationTemplates : HtmlDecorationTemplates Supported HTML decoration templates. selectionActionModeCallback [androidJvm] var selectionActionModeCallback : ActionMode.Callback ? = null Custom ActionMode.Callback to be used when the user selects content.","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/-configuration/#configuration","text":"[androidJvm]\\ data class Configuration (decorationTemplates: HtmlDecorationTemplates , selectionActionModeCallback: ActionMode.Callback ?)","title":"Configuration"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/-configuration/#properties","text":"Name Summary decorationTemplates [androidJvm] val decorationTemplates : HtmlDecorationTemplates Supported HTML decoration templates. selectionActionModeCallback [androidJvm] var selectionActionModeCallback : ActionMode.Callback ? = null Custom ActionMode.Callback to be used when the user selects content.","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/-configuration/-configuration/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / Configuration / Configuration Configuration \u00b6 [androidJvm]\\ fun Configuration (decorationTemplates: HtmlDecorationTemplates = HtmlDecorationTemplates.defaultTemplates(), selectionActionModeCallback: ActionMode.Callback ? = null)","title":" configuration"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/-configuration/-configuration/#configuration","text":"[androidJvm]\\ fun Configuration (decorationTemplates: HtmlDecorationTemplates = HtmlDecorationTemplates.defaultTemplates(), selectionActionModeCallback: ActionMode.Callback ? = null)","title":"Configuration"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/-configuration/decoration-templates/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / Configuration / decorationTemplates decorationTemplates \u00b6 [androidJvm]\\ val decorationTemplates : HtmlDecorationTemplates Supported HTML decoration templates.","title":"Decoration templates"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/-configuration/decoration-templates/#decorationtemplates","text":"[androidJvm]\\ val decorationTemplates : HtmlDecorationTemplates Supported HTML decoration templates.","title":"decorationTemplates"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/-configuration/selection-action-mode-callback/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / Configuration / selectionActionModeCallback selectionActionModeCallback \u00b6 [androidJvm]\\ var selectionActionModeCallback : ActionMode.Callback ? = null Custom ActionMode.Callback to be used when the user selects content. Provide one if you want to customize the selection context menu items.","title":"Selection action mode callback"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/-configuration/selection-action-mode-callback/#selectionactionmodecallback","text":"[androidJvm]\\ var selectionActionModeCallback : ActionMode.Callback ? = null Custom ActionMode.Callback to be used when the user selects content. Provide one if you want to customize the selection context menu items.","title":"selectionActionModeCallback"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/-listener/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / Listener Listener \u00b6 [androidJvm]\\ interface Listener : VisualNavigator.Listener Functions \u00b6 Name Summary onTap [androidJvm] open fun onTap (point: PointF ): Boolean Called when the user tapped the content, but nothing handled the event internally (eg. by following an internal link). Inheritors \u00b6 Name R2EpubActivity","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/-listener/#listener","text":"[androidJvm]\\ interface Listener : VisualNavigator.Listener","title":"Listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/-listener/#functions","text":"Name Summary onTap [androidJvm] open fun onTap (point: PointF ): Boolean Called when the user tapped the content, but nothing handled the event internally (eg. by following an internal link).","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/-listener/#inheritors","text":"Name R2EpubActivity","title":"Inheritors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/-pagination-listener/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / PaginationListener PaginationListener \u00b6 [androidJvm]\\ interface PaginationListener Functions \u00b6 Name Summary onPageChanged [androidJvm] open fun onPageChanged (pageIndex: Int , totalPages: Int , locator: Locator ) onPageLoaded [androidJvm] open fun onPageLoaded ()","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/-pagination-listener/#paginationlistener","text":"[androidJvm]\\ interface PaginationListener","title":"PaginationListener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/-pagination-listener/#functions","text":"Name Summary onPageChanged [androidJvm] open fun onPageChanged (pageIndex: Int , totalPages: Int , locator: Locator ) onPageLoaded [androidJvm] open fun onPageLoaded ()","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/-pagination-listener/on-page-changed/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / PaginationListener / onPageChanged onPageChanged \u00b6 [androidJvm]\\ open fun onPageChanged (pageIndex: Int , totalPages: Int , locator: Locator )","title":"On page changed"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/-pagination-listener/on-page-changed/#onpagechanged","text":"[androidJvm]\\ open fun onPageChanged (pageIndex: Int , totalPages: Int , locator: Locator )","title":"onPageChanged"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/-pagination-listener/on-page-loaded/","text":"// navigator / org.readium.r2.navigator.epub / EpubNavigatorFragment / PaginationListener / onPageLoaded onPageLoaded \u00b6 [androidJvm]\\ open fun onPageLoaded ()","title":"On page loaded"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-epub-navigator-fragment/-pagination-listener/on-page-loaded/#onpageloaded","text":"[androidJvm]\\ open fun onPageLoaded ()","title":"onPageLoaded"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-highlight/","text":"// navigator / org.readium.r2.navigator.epub / Highlight Highlight \u00b6 [androidJvm]\\ data class Highlight (id: String , locator: Locator , color: Int , style: Style , annotationMarkStyle: String ?) Properties \u00b6 Name Summary annotationMarkStyle [androidJvm] val annotationMarkStyle : String ? = null color [androidJvm] val color : Int id [androidJvm] val id : String locator [androidJvm] val locator : Locator style [androidJvm] val style : Style","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-highlight/#highlight","text":"[androidJvm]\\ data class Highlight (id: String , locator: Locator , color: Int , style: Style , annotationMarkStyle: String ?)","title":"Highlight"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-highlight/#properties","text":"Name Summary annotationMarkStyle [androidJvm] val annotationMarkStyle : String ? = null color [androidJvm] val color : Int id [androidJvm] val id : String locator [androidJvm] val locator : Locator style [androidJvm] val style : Style","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-highlight/-highlight/","text":"// navigator / org.readium.r2.navigator.epub / Highlight / Highlight Highlight \u00b6 [androidJvm]\\ fun Highlight (id: String , locator: Locator , color: Int , style: Style , annotationMarkStyle: String ? = null)","title":" highlight"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-highlight/-highlight/#highlight","text":"[androidJvm]\\ fun Highlight (id: String , locator: Locator , color: Int , style: Style , annotationMarkStyle: String ? = null)","title":"Highlight"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-highlight/annotation-mark-style/","text":"// navigator / org.readium.r2.navigator.epub / Highlight / annotationMarkStyle annotationMarkStyle \u00b6 [androidJvm]\\ val annotationMarkStyle : String ? = null","title":"Annotation mark style"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-highlight/annotation-mark-style/#annotationmarkstyle","text":"[androidJvm]\\ val annotationMarkStyle : String ? = null","title":"annotationMarkStyle"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-highlight/color/","text":"// navigator / org.readium.r2.navigator.epub / Highlight / color color \u00b6 [androidJvm]\\ val color : Int","title":"Color"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-highlight/color/#color","text":"[androidJvm]\\ val color : Int","title":"color"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-highlight/id/","text":"// navigator / org.readium.r2.navigator.epub / Highlight / id id \u00b6 [androidJvm]\\ val id : String","title":"Id"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-highlight/id/#id","text":"[androidJvm]\\ val id : String","title":"id"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-highlight/locator/","text":"// navigator / org.readium.r2.navigator.epub / Highlight / locator locator \u00b6 [androidJvm]\\ val locator : Locator","title":"Locator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-highlight/locator/#locator","text":"[androidJvm]\\ val locator : Locator","title":"locator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-highlight/style/","text":"// navigator / org.readium.r2.navigator.epub / Highlight / style style \u00b6 [androidJvm]\\ val style : Style","title":"Style"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-highlight/style/#style","text":"[androidJvm]\\ val style : Style","title":"style"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-highlightable/","text":"// navigator / org.readium.r2.navigator.epub / IR2Highlightable IR2Highlightable \u00b6 [androidJvm]\\ interface IR2Highlightable Functions \u00b6 Name Summary hideAllHighlights [androidJvm] abstract fun hideAllHighlights () hideHighlightWithID [androidJvm] abstract fun hideHighlightWithID (id: String ) highlightActivated [androidJvm] abstract fun highlightActivated (id: String ) highlightAnnotationMarkActivated [androidJvm] abstract fun highlightAnnotationMarkActivated (id: String ) rectangleForHighlightAnnotationMarkWithID [androidJvm] abstract fun rectangleForHighlightAnnotationMarkWithID (id: String ): Rect ? rectangleForHighlightWithID [androidJvm] abstract fun rectangleForHighlightWithID (id: String , callback: ( Rect ?) -> Unit ) registerHighlightAnnotationMarkStyle [androidJvm] abstract fun registerHighlightAnnotationMarkStyle (name: String , css: String ) showHighlight [androidJvm] abstract fun showHighlight (highlight: Highlight ) showHighlights [androidJvm] abstract fun showHighlights (highlights: Array < Highlight >) Inheritors \u00b6 Name R2EpubActivity","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-highlightable/#ir2highlightable","text":"[androidJvm]\\ interface IR2Highlightable","title":"IR2Highlightable"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-highlightable/#functions","text":"Name Summary hideAllHighlights [androidJvm] abstract fun hideAllHighlights () hideHighlightWithID [androidJvm] abstract fun hideHighlightWithID (id: String ) highlightActivated [androidJvm] abstract fun highlightActivated (id: String ) highlightAnnotationMarkActivated [androidJvm] abstract fun highlightAnnotationMarkActivated (id: String ) rectangleForHighlightAnnotationMarkWithID [androidJvm] abstract fun rectangleForHighlightAnnotationMarkWithID (id: String ): Rect ? rectangleForHighlightWithID [androidJvm] abstract fun rectangleForHighlightWithID (id: String , callback: ( Rect ?) -> Unit ) registerHighlightAnnotationMarkStyle [androidJvm] abstract fun registerHighlightAnnotationMarkStyle (name: String , css: String ) showHighlight [androidJvm] abstract fun showHighlight (highlight: Highlight ) showHighlights [androidJvm] abstract fun showHighlights (highlights: Array < Highlight >)","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-highlightable/#inheritors","text":"Name R2EpubActivity","title":"Inheritors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-highlightable/hide-all-highlights/","text":"// navigator / org.readium.r2.navigator.epub / IR2Highlightable / hideAllHighlights hideAllHighlights \u00b6 [androidJvm]\\ abstract fun hideAllHighlights ()","title":"Hide all highlights"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-highlightable/hide-all-highlights/#hideallhighlights","text":"[androidJvm]\\ abstract fun hideAllHighlights ()","title":"hideAllHighlights"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-highlightable/hide-highlight-with-i-d/","text":"// navigator / org.readium.r2.navigator.epub / IR2Highlightable / hideHighlightWithID hideHighlightWithID \u00b6 [androidJvm]\\ abstract fun hideHighlightWithID (id: String )","title":"Hide highlight with i d"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-highlightable/hide-highlight-with-i-d/#hidehighlightwithid","text":"[androidJvm]\\ abstract fun hideHighlightWithID (id: String )","title":"hideHighlightWithID"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-highlightable/highlight-activated/","text":"// navigator / org.readium.r2.navigator.epub / IR2Highlightable / highlightActivated highlightActivated \u00b6 [androidJvm]\\ abstract fun highlightActivated (id: String )","title":"Highlight activated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-highlightable/highlight-activated/#highlightactivated","text":"[androidJvm]\\ abstract fun highlightActivated (id: String )","title":"highlightActivated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-highlightable/highlight-annotation-mark-activated/","text":"// navigator / org.readium.r2.navigator.epub / IR2Highlightable / highlightAnnotationMarkActivated highlightAnnotationMarkActivated \u00b6 [androidJvm]\\ abstract fun highlightAnnotationMarkActivated (id: String )","title":"Highlight annotation mark activated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-highlightable/highlight-annotation-mark-activated/#highlightannotationmarkactivated","text":"[androidJvm]\\ abstract fun highlightAnnotationMarkActivated (id: String )","title":"highlightAnnotationMarkActivated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-highlightable/rectangle-for-highlight-annotation-mark-with-i-d/","text":"// navigator / org.readium.r2.navigator.epub / IR2Highlightable / rectangleForHighlightAnnotationMarkWithID rectangleForHighlightAnnotationMarkWithID \u00b6 [androidJvm]\\ abstract fun rectangleForHighlightAnnotationMarkWithID (id: String ): Rect ?","title":"Rectangle for highlight annotation mark with i d"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-highlightable/rectangle-for-highlight-annotation-mark-with-i-d/#rectangleforhighlightannotationmarkwithid","text":"[androidJvm]\\ abstract fun rectangleForHighlightAnnotationMarkWithID (id: String ): Rect ?","title":"rectangleForHighlightAnnotationMarkWithID"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-highlightable/rectangle-for-highlight-with-i-d/","text":"// navigator / org.readium.r2.navigator.epub / IR2Highlightable / rectangleForHighlightWithID rectangleForHighlightWithID \u00b6 [androidJvm]\\ abstract fun rectangleForHighlightWithID (id: String , callback: ( Rect ?) -> Unit )","title":"Rectangle for highlight with i d"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-highlightable/rectangle-for-highlight-with-i-d/#rectangleforhighlightwithid","text":"[androidJvm]\\ abstract fun rectangleForHighlightWithID (id: String , callback: ( Rect ?) -> Unit )","title":"rectangleForHighlightWithID"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-highlightable/register-highlight-annotation-mark-style/","text":"// navigator / org.readium.r2.navigator.epub / IR2Highlightable / registerHighlightAnnotationMarkStyle registerHighlightAnnotationMarkStyle \u00b6 [androidJvm]\\ abstract fun registerHighlightAnnotationMarkStyle (name: String , css: String )","title":"Register highlight annotation mark style"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-highlightable/register-highlight-annotation-mark-style/#registerhighlightannotationmarkstyle","text":"[androidJvm]\\ abstract fun registerHighlightAnnotationMarkStyle (name: String , css: String )","title":"registerHighlightAnnotationMarkStyle"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-highlightable/show-highlight/","text":"// navigator / org.readium.r2.navigator.epub / IR2Highlightable / showHighlight showHighlight \u00b6 [androidJvm]\\ abstract fun showHighlight (highlight: Highlight )","title":"Show highlight"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-highlightable/show-highlight/#showhighlight","text":"[androidJvm]\\ abstract fun showHighlight (highlight: Highlight )","title":"showHighlight"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-highlightable/show-highlights/","text":"// navigator / org.readium.r2.navigator.epub / IR2Highlightable / showHighlights showHighlights \u00b6 [androidJvm]\\ abstract fun showHighlights (highlights: Array < Highlight >)","title":"Show highlights"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-highlightable/show-highlights/#showhighlights","text":"[androidJvm]\\ abstract fun showHighlights (highlights: Array < Highlight >)","title":"showHighlights"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-selectable/","text":"// navigator / org.readium.r2.navigator.epub / IR2Selectable IR2Selectable \u00b6 [androidJvm]\\ interface IR2Selectable Functions \u00b6 Name Summary currentSelection [androidJvm] abstract fun currentSelection (callback: ( Locator ?) -> Unit ) Inheritors \u00b6 Name R2EpubActivity","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-selectable/#ir2selectable","text":"[androidJvm]\\ interface IR2Selectable","title":"IR2Selectable"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-selectable/#functions","text":"Name Summary currentSelection [androidJvm] abstract fun currentSelection (callback: ( Locator ?) -> Unit )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-selectable/#inheritors","text":"Name R2EpubActivity","title":"Inheritors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-selectable/current-selection/","text":"// navigator / org.readium.r2.navigator.epub / IR2Selectable / currentSelection currentSelection \u00b6 [androidJvm]\\ abstract fun currentSelection (callback: ( Locator ?) -> Unit )","title":"Current selection"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-i-r2-selectable/current-selection/#currentselection","text":"[androidJvm]\\ abstract fun currentSelection (callback: ( Locator ?) -> Unit )","title":"currentSelection"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity R2EpubActivity \u00b6 [androidJvm]\\ open class R2EpubActivity : AppCompatActivity , IR2Activity , IR2Selectable , IR2Highlightable , IR2TTS , CoroutineScope, VisualNavigator , EpubNavigatorFragment.Listener Functions \u00b6 Name Summary addContentView [androidJvm] open override fun addContentView (p0: View , p1: ViewGroup.LayoutParams ) addOnContextAvailableListener [androidJvm] override fun addOnContextAvailableListener (@ NonNull listener: OnContextAvailableListener ) applyOverrideConfiguration [androidJvm] open fun applyOverrideConfiguration (p0: Configuration ) attachBaseContext [androidJvm] open override fun attachBaseContext (p0: Context ) bindIsolatedService [androidJvm] open override fun bindIsolatedService (p0: Intent , p1: Int , p2: String , p3: Executor , p4: ServiceConnection ): Boolean bindService [androidJvm] open override fun bindService (p0: Intent , p1: ServiceConnection , p2: Int ): Boolean open override fun bindService (p0: Intent , p1: Int , p2: Executor , p3: ServiceConnection ): Boolean bindServiceAsUser [androidJvm] open override fun bindServiceAsUser (p0: Intent , p1: ServiceConnection , p2: Int , p3: UserHandle ): Boolean checkCallingOrSelfPermission [androidJvm] open override fun checkCallingOrSelfPermission (p0: String ): Int checkCallingOrSelfUriPermission [androidJvm] open override fun checkCallingOrSelfUriPermission (p0: Uri , p1: Int ): Int checkCallingOrSelfUriPermissions [androidJvm] open override fun checkCallingOrSelfUriPermissions (p0: MutableList < Uri >, p1: Int ): IntArray checkCallingPermission [androidJvm] open override fun checkCallingPermission (p0: String ): Int checkCallingUriPermission [androidJvm] open override fun checkCallingUriPermission (p0: Uri , p1: Int ): Int checkCallingUriPermissions [androidJvm] open override fun checkCallingUriPermissions (p0: MutableList < Uri >, p1: Int ): IntArray checkPermission [androidJvm] open override fun checkPermission (p0: String , p1: Int , p2: Int ): Int checkSelfPermission [androidJvm] open override fun checkSelfPermission (p0: String ): Int checkUriPermission [androidJvm] open override fun checkUriPermission (p0: Uri , p1: Int , p2: Int , p3: Int ): Int open override fun checkUriPermission (p0: Uri ?, p1: String ?, p2: String ?, p3: Int , p4: Int , p5: Int ): Int checkUriPermissions [androidJvm] open override fun checkUriPermissions (p0: MutableList < Uri >, p1: Int , p2: Int , p3: Int ): IntArray closeContextMenu [androidJvm] open fun closeContextMenu () closeOptionsMenu [androidJvm] open override fun closeOptionsMenu () createAnnotation [androidJvm] fun createAnnotation (highlight: Highlight ?, callback: ( Highlight ) -> Unit ) createAttributionContext [androidJvm] open override fun createAttributionContext (p0: String ?): Context createConfigurationContext [androidJvm] open override fun createConfigurationContext (p0: Configuration ): Context createContext [androidJvm] open override fun createContext (p0: ContextParams ): Context createContextForSplit [androidJvm] open override fun createContextForSplit (p0: String ): Context createDeviceProtectedStorageContext [androidJvm] open override fun createDeviceProtectedStorageContext (): Context createDisplayContext [androidJvm] open override fun createDisplayContext (p0: Display ): Context createHighlight [androidJvm] fun createHighlight (color: Int , callback: ( Highlight ) -> Unit ) createPackageContext [androidJvm] open override fun createPackageContext (p0: String , p1: Int ): Context createPendingResult [androidJvm] open fun createPendingResult (p0: Int , p1: Intent , p2: Int ): PendingIntent createWindowContext [androidJvm] open override fun createWindowContext (p0: Int , p1: Bundle ?): Context open override fun createWindowContext (p0: Display , p1: Int , p2: Bundle ?): Context currentSelection [androidJvm] open override fun currentSelection (callback: ( Locator ?) -> Unit ) databaseList [androidJvm] open override fun databaseList (): Array < String > deleteDatabase [androidJvm] open override fun deleteDatabase (p0: String ): Boolean deleteFile [androidJvm] open override fun deleteFile (p0: String ): Boolean deleteSharedPreferences [androidJvm] open override fun deleteSharedPreferences (p0: String ): Boolean dismissKeyboardShortcutsHelper [androidJvm] fun dismissKeyboardShortcutsHelper () dismissScreenReader [androidJvm] open fun dismissScreenReader () dispatchFragmentsOnCreateView [androidJvm] @ Nullable fun dispatchFragmentsOnCreateView (@ Nullable p0: View ?, @ NonNull p1: String , @ NonNull p2: Context , @ NonNull p3: AttributeSet ): View ? dispatchGenericMotionEvent [androidJvm] open override fun dispatchGenericMotionEvent (p0: MotionEvent ): Boolean dispatchKeyEvent [androidJvm] open override fun dispatchKeyEvent (p0: KeyEvent ): Boolean dispatchKeyShortcutEvent [androidJvm] open override fun dispatchKeyShortcutEvent (event: KeyEvent ): Boolean dispatchPopulateAccessibilityEvent [androidJvm] open override fun dispatchPopulateAccessibilityEvent (p0: AccessibilityEvent ): Boolean dispatchTouchEvent [androidJvm] open override fun dispatchTouchEvent (p0: MotionEvent ): Boolean dispatchTrackballEvent [androidJvm] open override fun dispatchTrackballEvent (p0: MotionEvent ): Boolean dump [androidJvm] open override fun dump (@ NonNull p0: String , @ Nullable p1: FileDescriptor ?, @ NonNull p2: PrintWriter , @ Nullable p3: Array < String >?) enforceCallingOrSelfPermission [androidJvm] open override fun enforceCallingOrSelfPermission (p0: String , p1: String ?) enforceCallingOrSelfUriPermission [androidJvm] open override fun enforceCallingOrSelfUriPermission (p0: Uri , p1: Int , p2: String ) enforceCallingPermission [androidJvm] open override fun enforceCallingPermission (p0: String , p1: String ?) enforceCallingUriPermission [androidJvm] open override fun enforceCallingUriPermission (p0: Uri , p1: Int , p2: String ) enforcePermission [androidJvm] open override fun enforcePermission (p0: String , p1: Int , p2: Int , p3: String ?) enforceUriPermission [androidJvm] open override fun enforceUriPermission (p0: Uri , p1: Int , p2: Int , p3: Int , p4: String ) open override fun enforceUriPermission (p0: Uri ?, p1: String ?, p2: String ?, p3: Int , p4: Int , p5: Int , p6: String ?) ensureViewModelStore [androidJvm] open fun ensureViewModelStore () enterPictureInPictureMode [androidJvm] open fun enterPictureInPictureMode (p0: PictureInPictureParams ): Boolean fileList [androidJvm] open override fun fileList (): Array < String > findViewById [androidJvm] open override fun < T : View > findViewById (@ IdRes p0: Int ): T finish [androidJvm] open override fun finish () finishActivity [androidJvm] open fun finishActivity (p0: Int ) finishAffinity [androidJvm] open fun finishAffinity () finishAfterTransition [androidJvm] open fun finishAfterTransition () finishAndRemoveTask [androidJvm] open fun finishAndRemoveTask () getActionBar [androidJvm] open fun getActionBar (): ActionBar ? getActivityResultRegistry [androidJvm] @ NonNull override fun getActivityResultRegistry (): ActivityResultRegistry getApplication [androidJvm] fun getApplication (): Application getApplicationContext [androidJvm] open override fun getApplicationContext (): Context getApplicationInfo [androidJvm] open override fun getApplicationInfo (): ApplicationInfo getAssets [androidJvm] open override fun getAssets (): AssetManager getAttributionSource [androidJvm] open override fun getAttributionSource (): AttributionSource getAttributionTag [androidJvm] open override fun getAttributionTag (): String ? getBaseContext [androidJvm] open fun getBaseContext (): Context getCacheDir [androidJvm] open override fun getCacheDir (): File getCallingActivity [androidJvm] open fun getCallingActivity (): ComponentName ? getCallingPackage [androidJvm] open fun getCallingPackage (): String ? getChangingConfigurations [androidJvm] open fun getChangingConfigurations (): Int getClassLoader [androidJvm] open override fun getClassLoader (): ClassLoader getCodeCacheDir [androidJvm] open override fun getCodeCacheDir (): File getColor [androidJvm] fun getColor (p0: Int ): Int getColorStateList [androidJvm] fun getColorStateList (p0: Int ): ColorStateList getComponentName [androidJvm] open fun getComponentName (): ComponentName getContentResolver [androidJvm] open override fun getContentResolver (): ContentResolver getContentScene [androidJvm] open fun getContentScene (): Scene getContentTransitionManager [androidJvm] open fun getContentTransitionManager (): TransitionManager getCurrentFocus [androidJvm] open fun getCurrentFocus (): View ? getDatabasePath [androidJvm] open override fun getDatabasePath (p0: String ): File getDataDir [androidJvm] open override fun getDataDir (): File getDefaultViewModelProviderFactory [androidJvm] @ NonNull open override fun getDefaultViewModelProviderFactory (): ViewModelProvider.Factory getDelegate [androidJvm] @ NonNull open fun getDelegate (): AppCompatDelegate getDir [androidJvm] open override fun getDir (p0: String , p1: Int ): File getDisplay [androidJvm] open override fun getDisplay (): Display ? getDrawable [androidJvm] fun getDrawable (p0: Int ): Drawable ? getDrawerToggleDelegate [androidJvm] @ Nullable open override fun getDrawerToggleDelegate (): ActionBarDrawerToggle.Delegate ? getExternalCacheDir [androidJvm] open override fun getExternalCacheDir (): File ? getExternalCacheDirs [androidJvm] open override fun getExternalCacheDirs (): Array < File > getExternalFilesDir [androidJvm] open override fun getExternalFilesDir (p0: String ?): File ? getExternalFilesDirs [androidJvm] open override fun getExternalFilesDirs (p0: String ): Array < File > getExternalMediaDirs [androidJvm] open override fun getExternalMediaDirs (): Array < File > getFilesDir [androidJvm] open override fun getFilesDir (): File getFileStreamPath [androidJvm] open override fun getFileStreamPath (p0: String ): File getIntent [androidJvm] open fun getIntent (): Intent getLastNonConfigurationInstance [androidJvm] open fun getLastNonConfigurationInstance (): Any ? getLayoutInflater [androidJvm] open fun getLayoutInflater (): LayoutInflater getLifecycle [androidJvm] @ NonNull open override fun getLifecycle (): Lifecycle getLocalClassName [androidJvm] open fun getLocalClassName (): String getMainExecutor [androidJvm] open override fun getMainExecutor (): Executor getMainLooper [androidJvm] open override fun getMainLooper (): Looper getMaxNumPictureInPictureActions [androidJvm] open fun getMaxNumPictureInPictureActions (): Int getMediaController [androidJvm] fun getMediaController (): MediaController getMenuInflater [androidJvm] @ NonNull open override fun getMenuInflater (): MenuInflater getNoBackupFilesDir [androidJvm] open override fun getNoBackupFilesDir (): File getObbDir [androidJvm] open override fun getObbDir (): File getObbDirs [androidJvm] open override fun getObbDirs (): Array < File > getOnBackPressedDispatcher [androidJvm] @ NonNull override fun getOnBackPressedDispatcher (): OnBackPressedDispatcher getOpPackageName [androidJvm] open override fun getOpPackageName (): String getPackageCodePath [androidJvm] open override fun getPackageCodePath (): String getPackageManager [androidJvm] open override fun getPackageManager (): PackageManager getPackageName [androidJvm] open override fun getPackageName (): String getPackageResourcePath [androidJvm] open override fun getPackageResourcePath (): String getParams [androidJvm] open override fun getParams (): ContextParams ? getParent [androidJvm] fun getParent (): Activity getParentActivityIntent [androidJvm] open fun getParentActivityIntent (): Intent ? getPreferences [androidJvm] open fun getPreferences (p0: Int ): SharedPreferences getReferrer [androidJvm] open fun getReferrer (): Uri ? getRequestedOrientation [androidJvm] open fun getRequestedOrientation (): Int getResources [androidJvm] open override fun getResources (): Resources getSavedStateRegistry [androidJvm] @ NonNull override fun getSavedStateRegistry (): SavedStateRegistry getSearchEvent [androidJvm] fun getSearchEvent (): SearchEvent getSharedPreferences [androidJvm] open override fun getSharedPreferences (p0: String , p1: Int ): SharedPreferences getSplashScreen [androidJvm] fun getSplashScreen (): SplashScreen getString [androidJvm] fun getString (p0: Int ): String fun getString (p0: Int , vararg p1: Any ): String getSupportActionBar [androidJvm] @ Nullable open fun getSupportActionBar (): ActionBar ? getSupportFragmentManager [androidJvm] @ NonNull open fun getSupportFragmentManager (): FragmentManager getSupportParentActivityIntent [androidJvm] @ Nullable open override fun getSupportParentActivityIntent (): Intent ? getSystemService [androidJvm] open override fun getSystemService (p0: String ): Any fun < T : Any > getSystemService (p0: Class < T >): T getSystemServiceName [androidJvm] open override fun getSystemServiceName (p0: Class <*>): String ? getTaskId [androidJvm] open fun getTaskId (): Int getText [androidJvm] fun getText (p0: Int ): CharSequence getTheme [androidJvm] open override fun getTheme (): Resources.Theme getTitle [androidJvm] fun getTitle (): CharSequence getTitleColor [androidJvm] fun getTitleColor (): Int getViewModelStore [androidJvm] @ NonNull open override fun getViewModelStore (): ViewModelStore getVoiceInteractor [androidJvm] open fun getVoiceInteractor (): VoiceInteractor getVolumeControlStream [androidJvm] fun getVolumeControlStream (): Int getWindow [androidJvm] open fun getWindow (): Window getWindowManager [androidJvm] open fun getWindowManager (): WindowManager go [androidJvm] open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link. [androidJvm] open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . goBackward [androidJvm] open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction. goForward [androidJvm] open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction. grantUriPermission [androidJvm] open override fun grantUriPermission (p0: String , p1: Uri , p2: Int ) hasWindowFocus [androidJvm] open fun hasWindowFocus (): Boolean hideAllHighlights [androidJvm] open override fun hideAllHighlights () hideHighlightWithID [androidJvm] open override fun hideHighlightWithID (id: String ) highlightActivated [androidJvm] open override fun highlightActivated (id: String ) highlightAnnotationMarkActivated [androidJvm] open override fun highlightAnnotationMarkActivated (id: String ) invalidateOptionsMenu [androidJvm] open override fun invalidateOptionsMenu () isActivityTransitionRunning [androidJvm] open fun isActivityTransitionRunning (): Boolean isChangingConfigurations [androidJvm] open fun isChangingConfigurations (): Boolean isChild [androidJvm] fun isChild (): Boolean isDestroyed [androidJvm] open fun isDestroyed (): Boolean isDeviceProtectedStorage [androidJvm] open override fun isDeviceProtectedStorage (): Boolean isFinishing [androidJvm] open fun isFinishing (): Boolean isImmersive [androidJvm] open fun isImmersive (): Boolean isInMultiWindowMode [androidJvm] open fun isInMultiWindowMode (): Boolean isInPictureInPictureMode [androidJvm] open fun isInPictureInPictureMode (): Boolean isLaunchedFromBubble [androidJvm] open fun isLaunchedFromBubble (): Boolean isLocalVoiceInteractionSupported [androidJvm] open fun isLocalVoiceInteractionSupported (): Boolean isRestricted [androidJvm] open override fun isRestricted (): Boolean isTaskRoot [androidJvm] open fun isTaskRoot (): Boolean isUiContext [androidJvm] open override fun isUiContext (): Boolean isVoiceInteraction [androidJvm] open fun isVoiceInteraction (): Boolean isVoiceInteractionRoot [androidJvm] open fun isVoiceInteractionRoot (): Boolean markFragmentsCreated [androidJvm] open fun markFragmentsCreated () moveDatabaseFrom [androidJvm] open override fun moveDatabaseFrom (p0: Context , p1: String ): Boolean moveSharedPreferencesFrom [androidJvm] open override fun moveSharedPreferencesFrom (p0: Context , p1: String ): Boolean moveTaskToBack [androidJvm] open fun moveTaskToBack (p0: Boolean ): Boolean navigateUpTo [androidJvm] open fun navigateUpTo (p0: Intent ): Boolean navigatorFragment [androidJvm] open fun navigatorFragment (): EpubNavigatorFragment Locates the EpubNavigatorFragment instance. nextResource [androidJvm] open fun nextResource (v: View ? = null) obtainStyledAttributes [androidJvm] fun obtainStyledAttributes (p0: IntArray ): TypedArray fun obtainStyledAttributes (p0: AttributeSet ?, p1: IntArray ): TypedArray fun obtainStyledAttributes (p0: Int , p1: IntArray ): TypedArray fun obtainStyledAttributes (p0: AttributeSet ?, p1: IntArray , p2: Int , p3: Int ): TypedArray onActionModeFinished [androidJvm] open override fun onActionModeFinished (p0: ActionMode ) onActionModeStarted [androidJvm] open override fun onActionModeStarted (mode: ActionMode ?) onActivityReenter [androidJvm] open fun onActivityReenter (p0: Int , p1: Intent ) onApplyThemeResource [androidJvm] open override fun onApplyThemeResource (p0: Resources.Theme , p1: Int , p2: Boolean ) onAttachedToWindow [androidJvm] open override fun onAttachedToWindow () onBackPressed [androidJvm] @ MainThread open override fun onBackPressed () onChildTitleChanged [androidJvm] open fun onChildTitleChanged (p0: Activity , p1: CharSequence ) onConfigurationChanged [androidJvm] open override fun onConfigurationChanged (@ NonNull p0: Configuration ) onContentChanged [androidJvm] open override fun onContentChanged () onContextItemSelected [androidJvm] open fun onContextItemSelected (p0: MenuItem ): Boolean onContextMenuClosed [androidJvm] open fun onContextMenuClosed (p0: Menu ) onCreate [androidJvm] open fun onCreate (p0: Bundle ?, p1: PersistableBundle ?) onCreateContextMenu [androidJvm] open override fun onCreateContextMenu (p0: ContextMenu , p1: View , p2: ContextMenu.ContextMenuInfo ) onCreateDescription [androidJvm] open fun onCreateDescription (): CharSequence ? onCreateNavigateUpTaskStack [androidJvm] open fun onCreateNavigateUpTaskStack (p0: TaskStackBuilder ) onCreateOptionsMenu [androidJvm] open fun onCreateOptionsMenu (p0: Menu ): Boolean onCreatePanelMenu [androidJvm] open override fun onCreatePanelMenu (p0: Int , @ NonNull p1: Menu ): Boolean onCreatePanelView [androidJvm] open override fun onCreatePanelView (p0: Int ): View ? onCreateSupportNavigateUpTaskStack [androidJvm] open fun onCreateSupportNavigateUpTaskStack (@ NonNull p0: TaskStackBuilder ) onCreateView [androidJvm] @ Nullable open override fun onCreateView (@ NonNull p0: String , @ NonNull p1: Context , @ NonNull p2: AttributeSet ): View ? @ Nullable open override fun onCreateView (@ Nullable p0: View ?, @ NonNull p1: String , @ NonNull p2: Context , @ NonNull p3: AttributeSet ): View ? onDestroy [androidJvm] open override fun onDestroy () onDetachedFromWindow [androidJvm] open override fun onDetachedFromWindow () onEnterAnimationComplete [androidJvm] open fun onEnterAnimationComplete () onGenericMotionEvent [androidJvm] open fun onGenericMotionEvent (p0: MotionEvent ): Boolean onGetDirectActions [androidJvm] open fun onGetDirectActions (p0: CancellationSignal , p1: Consumer < MutableList < DirectAction >>) onKeyDown [androidJvm] open override fun onKeyDown (p0: Int , p1: KeyEvent ): Boolean onKeyLongPress [androidJvm] open override fun onKeyLongPress (p0: Int , p1: KeyEvent ): Boolean onKeyMultiple [androidJvm] open override fun onKeyMultiple (p0: Int , p1: Int , p2: KeyEvent ): Boolean onKeyShortcut [androidJvm] open fun onKeyShortcut (p0: Int , p1: KeyEvent ): Boolean onKeyUp [androidJvm] open override fun onKeyUp (p0: Int , p1: KeyEvent ): Boolean onLocalVoiceInteractionStarted [androidJvm] open fun onLocalVoiceInteractionStarted () onLocalVoiceInteractionStopped [androidJvm] open fun onLocalVoiceInteractionStopped () onLowMemory [androidJvm] open override fun onLowMemory () onMenuItemSelected [androidJvm] override fun onMenuItemSelected (p0: Int , @ NonNull p1: MenuItem ): Boolean onMenuOpened [androidJvm] open override fun onMenuOpened (p0: Int , p1: Menu ): Boolean onMultiWindowModeChanged [androidJvm] @ CallSuper open override fun onMultiWindowModeChanged (p0: Boolean ) open fun onMultiWindowModeChanged (p0: Boolean , p1: Configuration ) onNavigateUp [androidJvm] open fun onNavigateUp (): Boolean onNewIntent [androidJvm] @ CallSuper open override fun onNewIntent (p0: Intent ) onNightModeChanged [androidJvm] open fun onNightModeChanged (p0: Int ) onOptionsItemSelected [androidJvm] open fun onOptionsItemSelected (p0: MenuItem ): Boolean onOptionsMenuClosed [androidJvm] open fun onOptionsMenuClosed (p0: Menu ) onPageChanged [androidJvm] open fun onPageChanged (pageIndex: Int , totalPages: Int , url: String ) onPageEnded [androidJvm] open fun onPageEnded (end: Boolean ) onPageLoaded [androidJvm] open fun onPageLoaded () onPanelClosed [androidJvm] open override fun onPanelClosed (p0: Int , @ NonNull p1: Menu ) onPause [androidJvm] open override fun onPause () onPerformDirectAction [androidJvm] open fun onPerformDirectAction (p0: String , p1: Bundle , p2: CancellationSignal , p3: Consumer < Bundle >) onPictureInPictureModeChanged [androidJvm] @ CallSuper open override fun onPictureInPictureModeChanged (p0: Boolean ) open fun onPictureInPictureModeChanged (p0: Boolean , p1: Configuration ) onPictureInPictureRequested [androidJvm] open fun onPictureInPictureRequested (): Boolean onPictureInPictureUiStateChanged [androidJvm] open fun onPictureInPictureUiStateChanged (p0: PictureInPictureUiState ) onPointerCaptureChanged [androidJvm] open fun onPointerCaptureChanged (p0: Boolean ) onPostCreate [androidJvm] open override fun onPostCreate (@ Nullable p0: Bundle ?) open fun onPostCreate (p0: Bundle ?, p1: PersistableBundle ?) onPostResume [androidJvm] open override fun onPostResume () onPrepareNavigateUpTaskStack [androidJvm] open fun onPrepareNavigateUpTaskStack (p0: TaskStackBuilder ) onPrepareOptionsMenu [androidJvm] open fun onPrepareOptionsMenu (p0: Menu ): Boolean onPreparePanel [androidJvm] open override fun onPreparePanel (p0: Int , @ Nullable p1: View ?, @ NonNull p2: Menu ): Boolean onPrepareSupportNavigateUpTaskStack [androidJvm] open fun onPrepareSupportNavigateUpTaskStack (@ NonNull p0: TaskStackBuilder ) onProvideAssistContent [androidJvm] open fun onProvideAssistContent (p0: AssistContent ) onProvideAssistData [androidJvm] open fun onProvideAssistData (p0: Bundle ) onProvideKeyboardShortcuts [androidJvm] open override fun onProvideKeyboardShortcuts (p0: MutableList < KeyboardShortcutGroup >, p1: Menu ?, p2: Int ) onProvideReferrer [androidJvm] open fun onProvideReferrer (): Uri onRequestPermissionsResult [androidJvm] @ CallSuper open override fun onRequestPermissionsResult (p0: Int , @ NonNull p1: Array < String >, @ NonNull p2: IntArray ) onRestart [androidJvm] open fun onRestart () onRestoreInstanceState [androidJvm] open fun onRestoreInstanceState (p0: Bundle ) open fun onRestoreInstanceState (p0: Bundle ?, p1: PersistableBundle ?) onResume [androidJvm] open override fun onResume () onResumeFragments [androidJvm] open fun onResumeFragments () onRetainNonConfigurationInstance [androidJvm] @ Nullable override fun onRetainNonConfigurationInstance (): Any ? onSaveInstanceState [androidJvm] @ CallSuper open override fun onSaveInstanceState (@ NonNull outState: Bundle ) open fun onSaveInstanceState (p0: Bundle , p1: PersistableBundle ) onSearchRequested [androidJvm] open override fun onSearchRequested (): Boolean open override fun onSearchRequested (p0: SearchEvent ?): Boolean onStart [androidJvm] open override fun onStart () onStateNotSaved [androidJvm] open override fun onStateNotSaved () onStop [androidJvm] open override fun onStop () onSupportActionModeFinished [androidJvm] @ CallSuper open override fun onSupportActionModeFinished (@ NonNull p0: ActionMode ) onSupportActionModeStarted [androidJvm] @ CallSuper open override fun onSupportActionModeStarted (@ NonNull p0: ActionMode ) onSupportNavigateUp [androidJvm] open fun onSupportNavigateUp (): Boolean onTap [androidJvm] open override fun onTap (point: PointF ): Boolean Called when the user tapped the content, but nothing handled the event internally (eg. by following an internal link). onTitleChanged [androidJvm] open override fun onTitleChanged (p0: CharSequence , p1: Int ) onTopResumedActivityChanged [androidJvm] open fun onTopResumedActivityChanged (p0: Boolean ) onTouchEvent [androidJvm] open fun onTouchEvent (p0: MotionEvent ): Boolean onTrackballEvent [androidJvm] open fun onTrackballEvent (p0: MotionEvent ): Boolean onTrimMemory [androidJvm] open override fun onTrimMemory (p0: Int ) onUserInteraction [androidJvm] open fun onUserInteraction () onUserLeaveHint [androidJvm] open fun onUserLeaveHint () onWindowAttributesChanged [androidJvm] open override fun onWindowAttributesChanged (p0: WindowManager.LayoutParams ) onWindowFocusChanged [androidJvm] open override fun onWindowFocusChanged (p0: Boolean ) onWindowStartingActionMode [androidJvm] open override fun onWindowStartingActionMode (p0: ActionMode.Callback ): ActionMode ? open override fun onWindowStartingActionMode (p0: ActionMode.Callback , p1: Int ): ActionMode ? onWindowStartingSupportActionMode [androidJvm] @ Nullable open override fun onWindowStartingSupportActionMode (@ NonNull p0: ActionMode.Callback ): ActionMode ? openContextMenu [androidJvm] open fun openContextMenu (p0: View ) openFileInput [androidJvm] open override fun openFileInput (p0: String ): FileInputStream openFileOutput [androidJvm] open override fun openFileOutput (p0: String , p1: Int ): FileOutputStream openOptionsMenu [androidJvm] open override fun openOptionsMenu () openOrCreateDatabase [androidJvm] open override fun openOrCreateDatabase (p0: String , p1: Int , p2: SQLiteDatabase.CursorFactory ): SQLiteDatabase open override fun openOrCreateDatabase (p0: String , p1: Int , p2: SQLiteDatabase.CursorFactory , p3: DatabaseErrorHandler ?): SQLiteDatabase overridePendingTransition [androidJvm] open fun overridePendingTransition (p0: Int , p1: Int ) peekAvailableContext [androidJvm] @ Nullable open override fun peekAvailableContext (): Context ? playStateChanged [androidJvm] open fun playStateChanged (playing: Boolean ) playTextChanged [androidJvm] open fun playTextChanged (text: String ) postponeEnterTransition [androidJvm] open fun postponeEnterTransition () previousResource [androidJvm] open fun previousResource (v: View ? = null) recreate [androidJvm] open fun recreate () rectangleForHighlightAnnotationMarkWithID [androidJvm] open override fun rectangleForHighlightAnnotationMarkWithID (id: String ): Rect ? rectangleForHighlightWithID [androidJvm] open override fun rectangleForHighlightWithID (id: String , callback: ( Rect ?) -> Unit ) registerActivityLifecycleCallbacks [androidJvm] open fun registerActivityLifecycleCallbacks (p0: Application.ActivityLifecycleCallbacks ) registerComponentCallbacks [androidJvm] open fun registerComponentCallbacks (p0: ComponentCallbacks ) registerForActivityResult [androidJvm] @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull contract: ActivityResultContract < I , O >, @ NonNull callback: ActivityResultCallback < O >): ActivityResultLauncher < I > @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull contract: ActivityResultContract < I , O >, @ NonNull registry: ActivityResultRegistry , @ NonNull callback: ActivityResultCallback < O >): ActivityResultLauncher < I > registerForContextMenu [androidJvm] open fun registerForContextMenu (p0: View ) registerHighlightAnnotationMarkStyle [androidJvm] open override fun registerHighlightAnnotationMarkStyle (name: String , css: String ) registerReceiver [androidJvm] open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter ): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: Int ): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: String ?, p3: Handler ?): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: String ?, p3: Handler ?, p4: Int ): Intent ? releaseInstance [androidJvm] open fun releaseInstance (): Boolean removeOnContextAvailableListener [androidJvm] override fun removeOnContextAvailableListener (@ NonNull listener: OnContextAvailableListener ) reportFullyDrawn [androidJvm] open override fun reportFullyDrawn () requestDragAndDropPermissions [androidJvm] open fun requestDragAndDropPermissions (p0: DragEvent ): DragAndDropPermissions requestPermissions [androidJvm] fun requestPermissions (p0: Array < String >, p1: Int ) requestShowKeyboardShortcuts [androidJvm] fun requestShowKeyboardShortcuts () requestWindowFeature [androidJvm] fun requestWindowFeature (p0: Int ): Boolean requireViewById [androidJvm] fun < T : View > requireViewById (p0: Int ): T revokeUriPermission [androidJvm] open override fun revokeUriPermission (p0: Uri , p1: Int ) open override fun revokeUriPermission (p0: String , p1: Uri , p2: Int ) runOnUiThread [androidJvm] fun runOnUiThread (p0: Runnable ) sendBroadcast [androidJvm] open override fun sendBroadcast (p0: Intent ) open override fun sendBroadcast (p0: Intent , p1: String ?) sendBroadcastAsUser [androidJvm] open override fun sendBroadcastAsUser (p0: Intent , p1: UserHandle ) open override fun sendBroadcastAsUser (p0: Intent , p1: UserHandle , p2: String ?) sendBroadcastWithMultiplePermissions [androidJvm] open fun sendBroadcastWithMultiplePermissions (p0: Intent , p1: Array < String >) sendOrderedBroadcast [androidJvm] open override fun sendOrderedBroadcast (p0: Intent , p1: String ?) open override fun sendOrderedBroadcast (p0: Intent , p1: String ?, p2: BroadcastReceiver ?, p3: Handler ?, p4: Int , p5: String ?, p6: Bundle ?) open override fun sendOrderedBroadcast (p0: Intent , p1: String ?, p2: String ?, p3: BroadcastReceiver ?, p4: Handler ?, p5: Int , p6: String ?, p7: Bundle ?) open fun sendOrderedBroadcast (p0: Intent , p1: Int , p2: String ?, p3: String ?, p4: BroadcastReceiver ?, p5: Handler ?, p6: String ?, p7: Bundle ?, p8: Bundle ?) sendOrderedBroadcastAsUser [androidJvm] open override fun sendOrderedBroadcastAsUser (p0: Intent , p1: UserHandle , p2: String ?, p3: BroadcastReceiver ?, p4: Handler ?, p5: Int , p6: String ?, p7: Bundle ?) setActionBar [androidJvm] open fun setActionBar (p0: Toolbar ?) setContentTransitionManager [androidJvm] open fun setContentTransitionManager (p0: TransitionManager ) setContentView [androidJvm] open override fun setContentView (p0: View ) open override fun setContentView (@ LayoutRes p0: Int ) open override fun setContentView (p0: View , p1: ViewGroup.LayoutParams ) setDefaultKeyMode [androidJvm] fun setDefaultKeyMode (p0: Int ) setEnterSharedElementCallback [androidJvm] open fun setEnterSharedElementCallback (p0: SharedElementCallback ) open fun setEnterSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setExitSharedElementCallback [androidJvm] open fun setExitSharedElementCallback (p0: SharedElementCallback ) open fun setExitSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setFeatureDrawable [androidJvm] fun setFeatureDrawable (p0: Int , p1: Drawable ) setFeatureDrawableAlpha [androidJvm] fun setFeatureDrawableAlpha (p0: Int , p1: Int ) setFeatureDrawableResource [androidJvm] fun setFeatureDrawableResource (p0: Int , p1: Int ) setFeatureDrawableUri [androidJvm] fun setFeatureDrawableUri (p0: Int , p1: Uri ) setFinishOnTouchOutside [androidJvm] open fun setFinishOnTouchOutside (p0: Boolean ) setImmersive [androidJvm] open fun setImmersive (p0: Boolean ) setInheritShowWhenLocked [androidJvm] open fun setInheritShowWhenLocked (p0: Boolean ) setIntent [androidJvm] open fun setIntent (p0: Intent ) setLocusContext [androidJvm] open fun setLocusContext (p0: LocusId ?, p1: Bundle ?) setMediaController [androidJvm] fun setMediaController (p0: MediaController ) setPictureInPictureParams [androidJvm] open fun setPictureInPictureParams (p0: PictureInPictureParams ) setRequestedOrientation [androidJvm] open fun setRequestedOrientation (p0: Int ) setResult [androidJvm] fun setResult (p0: Int ) fun setResult (p0: Int , p1: Intent ) setShowWhenLocked [androidJvm] open fun setShowWhenLocked (p0: Boolean ) setSupportActionBar [androidJvm] open fun setSupportActionBar (@ Nullable p0: Toolbar ?) setTaskDescription [androidJvm] open fun setTaskDescription (p0: ActivityManager.TaskDescription ) setTheme [androidJvm] open fun setTheme (p0: Resources.Theme ?) open override fun setTheme (@ StyleRes p0: Int ) setTitle [androidJvm] open fun setTitle (p0: CharSequence ) open fun setTitle (p0: Int ) setTranslucent [androidJvm] open fun setTranslucent (p0: Boolean ): Boolean setTurnScreenOn [androidJvm] open fun setTurnScreenOn (p0: Boolean ) setVisible [androidJvm] open fun setVisible (p0: Boolean ) setVolumeControlStream [androidJvm] fun setVolumeControlStream (p0: Int ) setVrModeEnabled [androidJvm] open fun setVrModeEnabled (p0: Boolean , p1: ComponentName ) shouldShowRequestPermissionRationale [androidJvm] open fun shouldShowRequestPermissionRationale (p0: String ): Boolean shouldUpRecreateTask [androidJvm] open fun shouldUpRecreateTask (p0: Intent ): Boolean showAssist [androidJvm] open fun showAssist (p0: Bundle ): Boolean showHighlight [androidJvm] open override fun showHighlight (highlight: Highlight ) showHighlights [androidJvm] open override fun showHighlights (highlights: Array < Highlight >) showLockTaskEscapeMessage [androidJvm] open fun showLockTaskEscapeMessage () startActionMode [androidJvm] open fun startActionMode (p0: ActionMode.Callback ): ActionMode ? open fun startActionMode (p0: ActionMode.Callback , p1: Int ): ActionMode ? startActivities [androidJvm] open override fun startActivities (p0: Array < Intent >) open override fun startActivities (p0: Array < Intent >, p1: Bundle ?) startActivity [androidJvm] open override fun startActivity (p0: Intent ) open override fun startActivity (p0: Intent , p1: Bundle ?) startActivityFromFragment [androidJvm] open fun startActivityFromFragment (@ NonNull p0: Fragment , p1: Intent , p2: Int ) open fun startActivityFromFragment (@ NonNull p0: Fragment , p1: Intent , p2: Int , @ Nullable p3: Bundle ?) startActivityIfNeeded [androidJvm] open fun startActivityIfNeeded (p0: Intent , p1: Int ): Boolean open fun startActivityIfNeeded (p0: Intent , p1: Int , p2: Bundle ?): Boolean startForegroundService [androidJvm] open override fun startForegroundService (p0: Intent ): ComponentName ? startInstrumentation [androidJvm] open override fun startInstrumentation (p0: ComponentName , p1: String ?, p2: Bundle ?): Boolean startIntentSender [androidJvm] open override fun startIntentSender (p0: IntentSender , p1: Intent ?, p2: Int , p3: Int , p4: Int ) open override fun startIntentSender (p0: IntentSender , p1: Intent ?, p2: Int , p3: Int , p4: Int , p5: Bundle ?) startLocalVoiceInteraction [androidJvm] open fun startLocalVoiceInteraction (p0: Bundle ) startLockTask [androidJvm] open fun startLockTask () startNextMatchingActivity [androidJvm] open fun startNextMatchingActivity (p0: Intent ): Boolean open fun startNextMatchingActivity (p0: Intent , p1: Bundle ?): Boolean startPostponedEnterTransition [androidJvm] open fun startPostponedEnterTransition () startSearch [androidJvm] open fun startSearch (p0: String ?, p1: Boolean , p2: Bundle ?, p3: Boolean ) startService [androidJvm] open override fun startService (p0: Intent ): ComponentName ? startSupportActionMode [androidJvm] @ Nullable open fun startSupportActionMode (@ NonNull p0: ActionMode.Callback ): ActionMode ? stopLocalVoiceInteraction [androidJvm] open fun stopLocalVoiceInteraction () stopLockTask [androidJvm] open fun stopLockTask () stopService [androidJvm] open override fun stopService (p0: Intent ): Boolean superDispatchKeyEvent [androidJvm] open override fun superDispatchKeyEvent (event: KeyEvent ): Boolean supportFinishAfterTransition [androidJvm] open fun supportFinishAfterTransition () supportInvalidateOptionsMenu [androidJvm] open override fun supportInvalidateOptionsMenu () supportNavigateUpTo [androidJvm] open fun supportNavigateUpTo (@ NonNull p0: Intent ) supportPostponeEnterTransition [androidJvm] open fun supportPostponeEnterTransition () supportRequestWindowFeature [androidJvm] open fun supportRequestWindowFeature (p0: Int ): Boolean supportShouldUpRecreateTask [androidJvm] open fun supportShouldUpRecreateTask (@ NonNull p0: Intent ): Boolean supportStartPostponedEnterTransition [androidJvm] open fun supportStartPostponedEnterTransition () takeKeyEvents [androidJvm] open fun takeKeyEvents (p0: Boolean ) toggleActionBar [androidJvm] open override fun toggleActionBar () open fun toggleActionBar (v: View ? = null) triggerSearch [androidJvm] open fun triggerSearch (p0: String , p1: Bundle ?) unbindService [androidJvm] open override fun unbindService (p0: ServiceConnection ) unregisterActivityLifecycleCallbacks [androidJvm] open fun unregisterActivityLifecycleCallbacks (p0: Application.ActivityLifecycleCallbacks ) unregisterComponentCallbacks [androidJvm] open fun unregisterComponentCallbacks (p0: ComponentCallbacks ) unregisterForContextMenu [androidJvm] open fun unregisterForContextMenu (p0: View ) unregisterReceiver [androidJvm] open override fun unregisterReceiver (p0: BroadcastReceiver ) updateServiceGroup [androidJvm] open override fun updateServiceGroup (p0: ServiceConnection , p1: Int , p2: Int ) Properties \u00b6 Name Summary adapter [androidJvm] val adapter : R2PagerAdapter allowToggleActionBar [androidJvm] open override var allowToggleActionBar : Boolean = true bookId [androidJvm] open override var bookId : Long coroutineContext [androidJvm] open override val coroutineContext : CoroutineContext Context of this scope. currentLocator [androidJvm] open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position. currentPagerPosition [androidJvm] val currentPagerPosition : Int mContextAwareHelper [androidJvm] val mContextAwareHelper : ContextAwareHelper mCreated [androidJvm] val mCreated : Boolean mFragmentLifecycleRegistry [androidJvm] val mFragmentLifecycleRegistry : LifecycleRegistry mFragments [androidJvm] val mFragments : FragmentController mResumed [androidJvm] val mResumed : Boolean mSavedStateRegistryController [androidJvm] val mSavedStateRegistryController : SavedStateRegistryController mStopped [androidJvm] val mStopped : Boolean positions [androidJvm] val positions : List < Locator > preferences [androidJvm] open lateinit override var preferences : SharedPreferences publication [androidJvm] open lateinit override var publication : Publication Publication rendered by this navigator. publicationFileName [androidJvm] open lateinit override var publicationFileName : String publicationIdentifier [androidJvm] open lateinit override var publicationIdentifier : String publicationPath [androidJvm] open lateinit override var publicationPath : String readingProgression [androidJvm] open override val readingProgression : ReadingProgression Current reading progression direction. resourcePager [androidJvm] open override val resourcePager : R2ViewPager","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/#r2epubactivity","text":"[androidJvm]\\ open class R2EpubActivity : AppCompatActivity , IR2Activity , IR2Selectable , IR2Highlightable , IR2TTS , CoroutineScope, VisualNavigator , EpubNavigatorFragment.Listener","title":"R2EpubActivity"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/#functions","text":"Name Summary addContentView [androidJvm] open override fun addContentView (p0: View , p1: ViewGroup.LayoutParams ) addOnContextAvailableListener [androidJvm] override fun addOnContextAvailableListener (@ NonNull listener: OnContextAvailableListener ) applyOverrideConfiguration [androidJvm] open fun applyOverrideConfiguration (p0: Configuration ) attachBaseContext [androidJvm] open override fun attachBaseContext (p0: Context ) bindIsolatedService [androidJvm] open override fun bindIsolatedService (p0: Intent , p1: Int , p2: String , p3: Executor , p4: ServiceConnection ): Boolean bindService [androidJvm] open override fun bindService (p0: Intent , p1: ServiceConnection , p2: Int ): Boolean open override fun bindService (p0: Intent , p1: Int , p2: Executor , p3: ServiceConnection ): Boolean bindServiceAsUser [androidJvm] open override fun bindServiceAsUser (p0: Intent , p1: ServiceConnection , p2: Int , p3: UserHandle ): Boolean checkCallingOrSelfPermission [androidJvm] open override fun checkCallingOrSelfPermission (p0: String ): Int checkCallingOrSelfUriPermission [androidJvm] open override fun checkCallingOrSelfUriPermission (p0: Uri , p1: Int ): Int checkCallingOrSelfUriPermissions [androidJvm] open override fun checkCallingOrSelfUriPermissions (p0: MutableList < Uri >, p1: Int ): IntArray checkCallingPermission [androidJvm] open override fun checkCallingPermission (p0: String ): Int checkCallingUriPermission [androidJvm] open override fun checkCallingUriPermission (p0: Uri , p1: Int ): Int checkCallingUriPermissions [androidJvm] open override fun checkCallingUriPermissions (p0: MutableList < Uri >, p1: Int ): IntArray checkPermission [androidJvm] open override fun checkPermission (p0: String , p1: Int , p2: Int ): Int checkSelfPermission [androidJvm] open override fun checkSelfPermission (p0: String ): Int checkUriPermission [androidJvm] open override fun checkUriPermission (p0: Uri , p1: Int , p2: Int , p3: Int ): Int open override fun checkUriPermission (p0: Uri ?, p1: String ?, p2: String ?, p3: Int , p4: Int , p5: Int ): Int checkUriPermissions [androidJvm] open override fun checkUriPermissions (p0: MutableList < Uri >, p1: Int , p2: Int , p3: Int ): IntArray closeContextMenu [androidJvm] open fun closeContextMenu () closeOptionsMenu [androidJvm] open override fun closeOptionsMenu () createAnnotation [androidJvm] fun createAnnotation (highlight: Highlight ?, callback: ( Highlight ) -> Unit ) createAttributionContext [androidJvm] open override fun createAttributionContext (p0: String ?): Context createConfigurationContext [androidJvm] open override fun createConfigurationContext (p0: Configuration ): Context createContext [androidJvm] open override fun createContext (p0: ContextParams ): Context createContextForSplit [androidJvm] open override fun createContextForSplit (p0: String ): Context createDeviceProtectedStorageContext [androidJvm] open override fun createDeviceProtectedStorageContext (): Context createDisplayContext [androidJvm] open override fun createDisplayContext (p0: Display ): Context createHighlight [androidJvm] fun createHighlight (color: Int , callback: ( Highlight ) -> Unit ) createPackageContext [androidJvm] open override fun createPackageContext (p0: String , p1: Int ): Context createPendingResult [androidJvm] open fun createPendingResult (p0: Int , p1: Intent , p2: Int ): PendingIntent createWindowContext [androidJvm] open override fun createWindowContext (p0: Int , p1: Bundle ?): Context open override fun createWindowContext (p0: Display , p1: Int , p2: Bundle ?): Context currentSelection [androidJvm] open override fun currentSelection (callback: ( Locator ?) -> Unit ) databaseList [androidJvm] open override fun databaseList (): Array < String > deleteDatabase [androidJvm] open override fun deleteDatabase (p0: String ): Boolean deleteFile [androidJvm] open override fun deleteFile (p0: String ): Boolean deleteSharedPreferences [androidJvm] open override fun deleteSharedPreferences (p0: String ): Boolean dismissKeyboardShortcutsHelper [androidJvm] fun dismissKeyboardShortcutsHelper () dismissScreenReader [androidJvm] open fun dismissScreenReader () dispatchFragmentsOnCreateView [androidJvm] @ Nullable fun dispatchFragmentsOnCreateView (@ Nullable p0: View ?, @ NonNull p1: String , @ NonNull p2: Context , @ NonNull p3: AttributeSet ): View ? dispatchGenericMotionEvent [androidJvm] open override fun dispatchGenericMotionEvent (p0: MotionEvent ): Boolean dispatchKeyEvent [androidJvm] open override fun dispatchKeyEvent (p0: KeyEvent ): Boolean dispatchKeyShortcutEvent [androidJvm] open override fun dispatchKeyShortcutEvent (event: KeyEvent ): Boolean dispatchPopulateAccessibilityEvent [androidJvm] open override fun dispatchPopulateAccessibilityEvent (p0: AccessibilityEvent ): Boolean dispatchTouchEvent [androidJvm] open override fun dispatchTouchEvent (p0: MotionEvent ): Boolean dispatchTrackballEvent [androidJvm] open override fun dispatchTrackballEvent (p0: MotionEvent ): Boolean dump [androidJvm] open override fun dump (@ NonNull p0: String , @ Nullable p1: FileDescriptor ?, @ NonNull p2: PrintWriter , @ Nullable p3: Array < String >?) enforceCallingOrSelfPermission [androidJvm] open override fun enforceCallingOrSelfPermission (p0: String , p1: String ?) enforceCallingOrSelfUriPermission [androidJvm] open override fun enforceCallingOrSelfUriPermission (p0: Uri , p1: Int , p2: String ) enforceCallingPermission [androidJvm] open override fun enforceCallingPermission (p0: String , p1: String ?) enforceCallingUriPermission [androidJvm] open override fun enforceCallingUriPermission (p0: Uri , p1: Int , p2: String ) enforcePermission [androidJvm] open override fun enforcePermission (p0: String , p1: Int , p2: Int , p3: String ?) enforceUriPermission [androidJvm] open override fun enforceUriPermission (p0: Uri , p1: Int , p2: Int , p3: Int , p4: String ) open override fun enforceUriPermission (p0: Uri ?, p1: String ?, p2: String ?, p3: Int , p4: Int , p5: Int , p6: String ?) ensureViewModelStore [androidJvm] open fun ensureViewModelStore () enterPictureInPictureMode [androidJvm] open fun enterPictureInPictureMode (p0: PictureInPictureParams ): Boolean fileList [androidJvm] open override fun fileList (): Array < String > findViewById [androidJvm] open override fun < T : View > findViewById (@ IdRes p0: Int ): T finish [androidJvm] open override fun finish () finishActivity [androidJvm] open fun finishActivity (p0: Int ) finishAffinity [androidJvm] open fun finishAffinity () finishAfterTransition [androidJvm] open fun finishAfterTransition () finishAndRemoveTask [androidJvm] open fun finishAndRemoveTask () getActionBar [androidJvm] open fun getActionBar (): ActionBar ? getActivityResultRegistry [androidJvm] @ NonNull override fun getActivityResultRegistry (): ActivityResultRegistry getApplication [androidJvm] fun getApplication (): Application getApplicationContext [androidJvm] open override fun getApplicationContext (): Context getApplicationInfo [androidJvm] open override fun getApplicationInfo (): ApplicationInfo getAssets [androidJvm] open override fun getAssets (): AssetManager getAttributionSource [androidJvm] open override fun getAttributionSource (): AttributionSource getAttributionTag [androidJvm] open override fun getAttributionTag (): String ? getBaseContext [androidJvm] open fun getBaseContext (): Context getCacheDir [androidJvm] open override fun getCacheDir (): File getCallingActivity [androidJvm] open fun getCallingActivity (): ComponentName ? getCallingPackage [androidJvm] open fun getCallingPackage (): String ? getChangingConfigurations [androidJvm] open fun getChangingConfigurations (): Int getClassLoader [androidJvm] open override fun getClassLoader (): ClassLoader getCodeCacheDir [androidJvm] open override fun getCodeCacheDir (): File getColor [androidJvm] fun getColor (p0: Int ): Int getColorStateList [androidJvm] fun getColorStateList (p0: Int ): ColorStateList getComponentName [androidJvm] open fun getComponentName (): ComponentName getContentResolver [androidJvm] open override fun getContentResolver (): ContentResolver getContentScene [androidJvm] open fun getContentScene (): Scene getContentTransitionManager [androidJvm] open fun getContentTransitionManager (): TransitionManager getCurrentFocus [androidJvm] open fun getCurrentFocus (): View ? getDatabasePath [androidJvm] open override fun getDatabasePath (p0: String ): File getDataDir [androidJvm] open override fun getDataDir (): File getDefaultViewModelProviderFactory [androidJvm] @ NonNull open override fun getDefaultViewModelProviderFactory (): ViewModelProvider.Factory getDelegate [androidJvm] @ NonNull open fun getDelegate (): AppCompatDelegate getDir [androidJvm] open override fun getDir (p0: String , p1: Int ): File getDisplay [androidJvm] open override fun getDisplay (): Display ? getDrawable [androidJvm] fun getDrawable (p0: Int ): Drawable ? getDrawerToggleDelegate [androidJvm] @ Nullable open override fun getDrawerToggleDelegate (): ActionBarDrawerToggle.Delegate ? getExternalCacheDir [androidJvm] open override fun getExternalCacheDir (): File ? getExternalCacheDirs [androidJvm] open override fun getExternalCacheDirs (): Array < File > getExternalFilesDir [androidJvm] open override fun getExternalFilesDir (p0: String ?): File ? getExternalFilesDirs [androidJvm] open override fun getExternalFilesDirs (p0: String ): Array < File > getExternalMediaDirs [androidJvm] open override fun getExternalMediaDirs (): Array < File > getFilesDir [androidJvm] open override fun getFilesDir (): File getFileStreamPath [androidJvm] open override fun getFileStreamPath (p0: String ): File getIntent [androidJvm] open fun getIntent (): Intent getLastNonConfigurationInstance [androidJvm] open fun getLastNonConfigurationInstance (): Any ? getLayoutInflater [androidJvm] open fun getLayoutInflater (): LayoutInflater getLifecycle [androidJvm] @ NonNull open override fun getLifecycle (): Lifecycle getLocalClassName [androidJvm] open fun getLocalClassName (): String getMainExecutor [androidJvm] open override fun getMainExecutor (): Executor getMainLooper [androidJvm] open override fun getMainLooper (): Looper getMaxNumPictureInPictureActions [androidJvm] open fun getMaxNumPictureInPictureActions (): Int getMediaController [androidJvm] fun getMediaController (): MediaController getMenuInflater [androidJvm] @ NonNull open override fun getMenuInflater (): MenuInflater getNoBackupFilesDir [androidJvm] open override fun getNoBackupFilesDir (): File getObbDir [androidJvm] open override fun getObbDir (): File getObbDirs [androidJvm] open override fun getObbDirs (): Array < File > getOnBackPressedDispatcher [androidJvm] @ NonNull override fun getOnBackPressedDispatcher (): OnBackPressedDispatcher getOpPackageName [androidJvm] open override fun getOpPackageName (): String getPackageCodePath [androidJvm] open override fun getPackageCodePath (): String getPackageManager [androidJvm] open override fun getPackageManager (): PackageManager getPackageName [androidJvm] open override fun getPackageName (): String getPackageResourcePath [androidJvm] open override fun getPackageResourcePath (): String getParams [androidJvm] open override fun getParams (): ContextParams ? getParent [androidJvm] fun getParent (): Activity getParentActivityIntent [androidJvm] open fun getParentActivityIntent (): Intent ? getPreferences [androidJvm] open fun getPreferences (p0: Int ): SharedPreferences getReferrer [androidJvm] open fun getReferrer (): Uri ? getRequestedOrientation [androidJvm] open fun getRequestedOrientation (): Int getResources [androidJvm] open override fun getResources (): Resources getSavedStateRegistry [androidJvm] @ NonNull override fun getSavedStateRegistry (): SavedStateRegistry getSearchEvent [androidJvm] fun getSearchEvent (): SearchEvent getSharedPreferences [androidJvm] open override fun getSharedPreferences (p0: String , p1: Int ): SharedPreferences getSplashScreen [androidJvm] fun getSplashScreen (): SplashScreen getString [androidJvm] fun getString (p0: Int ): String fun getString (p0: Int , vararg p1: Any ): String getSupportActionBar [androidJvm] @ Nullable open fun getSupportActionBar (): ActionBar ? getSupportFragmentManager [androidJvm] @ NonNull open fun getSupportFragmentManager (): FragmentManager getSupportParentActivityIntent [androidJvm] @ Nullable open override fun getSupportParentActivityIntent (): Intent ? getSystemService [androidJvm] open override fun getSystemService (p0: String ): Any fun < T : Any > getSystemService (p0: Class < T >): T getSystemServiceName [androidJvm] open override fun getSystemServiceName (p0: Class <*>): String ? getTaskId [androidJvm] open fun getTaskId (): Int getText [androidJvm] fun getText (p0: Int ): CharSequence getTheme [androidJvm] open override fun getTheme (): Resources.Theme getTitle [androidJvm] fun getTitle (): CharSequence getTitleColor [androidJvm] fun getTitleColor (): Int getViewModelStore [androidJvm] @ NonNull open override fun getViewModelStore (): ViewModelStore getVoiceInteractor [androidJvm] open fun getVoiceInteractor (): VoiceInteractor getVolumeControlStream [androidJvm] fun getVolumeControlStream (): Int getWindow [androidJvm] open fun getWindow (): Window getWindowManager [androidJvm] open fun getWindowManager (): WindowManager go [androidJvm] open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link. [androidJvm] open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . goBackward [androidJvm] open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction. goForward [androidJvm] open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction. grantUriPermission [androidJvm] open override fun grantUriPermission (p0: String , p1: Uri , p2: Int ) hasWindowFocus [androidJvm] open fun hasWindowFocus (): Boolean hideAllHighlights [androidJvm] open override fun hideAllHighlights () hideHighlightWithID [androidJvm] open override fun hideHighlightWithID (id: String ) highlightActivated [androidJvm] open override fun highlightActivated (id: String ) highlightAnnotationMarkActivated [androidJvm] open override fun highlightAnnotationMarkActivated (id: String ) invalidateOptionsMenu [androidJvm] open override fun invalidateOptionsMenu () isActivityTransitionRunning [androidJvm] open fun isActivityTransitionRunning (): Boolean isChangingConfigurations [androidJvm] open fun isChangingConfigurations (): Boolean isChild [androidJvm] fun isChild (): Boolean isDestroyed [androidJvm] open fun isDestroyed (): Boolean isDeviceProtectedStorage [androidJvm] open override fun isDeviceProtectedStorage (): Boolean isFinishing [androidJvm] open fun isFinishing (): Boolean isImmersive [androidJvm] open fun isImmersive (): Boolean isInMultiWindowMode [androidJvm] open fun isInMultiWindowMode (): Boolean isInPictureInPictureMode [androidJvm] open fun isInPictureInPictureMode (): Boolean isLaunchedFromBubble [androidJvm] open fun isLaunchedFromBubble (): Boolean isLocalVoiceInteractionSupported [androidJvm] open fun isLocalVoiceInteractionSupported (): Boolean isRestricted [androidJvm] open override fun isRestricted (): Boolean isTaskRoot [androidJvm] open fun isTaskRoot (): Boolean isUiContext [androidJvm] open override fun isUiContext (): Boolean isVoiceInteraction [androidJvm] open fun isVoiceInteraction (): Boolean isVoiceInteractionRoot [androidJvm] open fun isVoiceInteractionRoot (): Boolean markFragmentsCreated [androidJvm] open fun markFragmentsCreated () moveDatabaseFrom [androidJvm] open override fun moveDatabaseFrom (p0: Context , p1: String ): Boolean moveSharedPreferencesFrom [androidJvm] open override fun moveSharedPreferencesFrom (p0: Context , p1: String ): Boolean moveTaskToBack [androidJvm] open fun moveTaskToBack (p0: Boolean ): Boolean navigateUpTo [androidJvm] open fun navigateUpTo (p0: Intent ): Boolean navigatorFragment [androidJvm] open fun navigatorFragment (): EpubNavigatorFragment Locates the EpubNavigatorFragment instance. nextResource [androidJvm] open fun nextResource (v: View ? = null) obtainStyledAttributes [androidJvm] fun obtainStyledAttributes (p0: IntArray ): TypedArray fun obtainStyledAttributes (p0: AttributeSet ?, p1: IntArray ): TypedArray fun obtainStyledAttributes (p0: Int , p1: IntArray ): TypedArray fun obtainStyledAttributes (p0: AttributeSet ?, p1: IntArray , p2: Int , p3: Int ): TypedArray onActionModeFinished [androidJvm] open override fun onActionModeFinished (p0: ActionMode ) onActionModeStarted [androidJvm] open override fun onActionModeStarted (mode: ActionMode ?) onActivityReenter [androidJvm] open fun onActivityReenter (p0: Int , p1: Intent ) onApplyThemeResource [androidJvm] open override fun onApplyThemeResource (p0: Resources.Theme , p1: Int , p2: Boolean ) onAttachedToWindow [androidJvm] open override fun onAttachedToWindow () onBackPressed [androidJvm] @ MainThread open override fun onBackPressed () onChildTitleChanged [androidJvm] open fun onChildTitleChanged (p0: Activity , p1: CharSequence ) onConfigurationChanged [androidJvm] open override fun onConfigurationChanged (@ NonNull p0: Configuration ) onContentChanged [androidJvm] open override fun onContentChanged () onContextItemSelected [androidJvm] open fun onContextItemSelected (p0: MenuItem ): Boolean onContextMenuClosed [androidJvm] open fun onContextMenuClosed (p0: Menu ) onCreate [androidJvm] open fun onCreate (p0: Bundle ?, p1: PersistableBundle ?) onCreateContextMenu [androidJvm] open override fun onCreateContextMenu (p0: ContextMenu , p1: View , p2: ContextMenu.ContextMenuInfo ) onCreateDescription [androidJvm] open fun onCreateDescription (): CharSequence ? onCreateNavigateUpTaskStack [androidJvm] open fun onCreateNavigateUpTaskStack (p0: TaskStackBuilder ) onCreateOptionsMenu [androidJvm] open fun onCreateOptionsMenu (p0: Menu ): Boolean onCreatePanelMenu [androidJvm] open override fun onCreatePanelMenu (p0: Int , @ NonNull p1: Menu ): Boolean onCreatePanelView [androidJvm] open override fun onCreatePanelView (p0: Int ): View ? onCreateSupportNavigateUpTaskStack [androidJvm] open fun onCreateSupportNavigateUpTaskStack (@ NonNull p0: TaskStackBuilder ) onCreateView [androidJvm] @ Nullable open override fun onCreateView (@ NonNull p0: String , @ NonNull p1: Context , @ NonNull p2: AttributeSet ): View ? @ Nullable open override fun onCreateView (@ Nullable p0: View ?, @ NonNull p1: String , @ NonNull p2: Context , @ NonNull p3: AttributeSet ): View ? onDestroy [androidJvm] open override fun onDestroy () onDetachedFromWindow [androidJvm] open override fun onDetachedFromWindow () onEnterAnimationComplete [androidJvm] open fun onEnterAnimationComplete () onGenericMotionEvent [androidJvm] open fun onGenericMotionEvent (p0: MotionEvent ): Boolean onGetDirectActions [androidJvm] open fun onGetDirectActions (p0: CancellationSignal , p1: Consumer < MutableList < DirectAction >>) onKeyDown [androidJvm] open override fun onKeyDown (p0: Int , p1: KeyEvent ): Boolean onKeyLongPress [androidJvm] open override fun onKeyLongPress (p0: Int , p1: KeyEvent ): Boolean onKeyMultiple [androidJvm] open override fun onKeyMultiple (p0: Int , p1: Int , p2: KeyEvent ): Boolean onKeyShortcut [androidJvm] open fun onKeyShortcut (p0: Int , p1: KeyEvent ): Boolean onKeyUp [androidJvm] open override fun onKeyUp (p0: Int , p1: KeyEvent ): Boolean onLocalVoiceInteractionStarted [androidJvm] open fun onLocalVoiceInteractionStarted () onLocalVoiceInteractionStopped [androidJvm] open fun onLocalVoiceInteractionStopped () onLowMemory [androidJvm] open override fun onLowMemory () onMenuItemSelected [androidJvm] override fun onMenuItemSelected (p0: Int , @ NonNull p1: MenuItem ): Boolean onMenuOpened [androidJvm] open override fun onMenuOpened (p0: Int , p1: Menu ): Boolean onMultiWindowModeChanged [androidJvm] @ CallSuper open override fun onMultiWindowModeChanged (p0: Boolean ) open fun onMultiWindowModeChanged (p0: Boolean , p1: Configuration ) onNavigateUp [androidJvm] open fun onNavigateUp (): Boolean onNewIntent [androidJvm] @ CallSuper open override fun onNewIntent (p0: Intent ) onNightModeChanged [androidJvm] open fun onNightModeChanged (p0: Int ) onOptionsItemSelected [androidJvm] open fun onOptionsItemSelected (p0: MenuItem ): Boolean onOptionsMenuClosed [androidJvm] open fun onOptionsMenuClosed (p0: Menu ) onPageChanged [androidJvm] open fun onPageChanged (pageIndex: Int , totalPages: Int , url: String ) onPageEnded [androidJvm] open fun onPageEnded (end: Boolean ) onPageLoaded [androidJvm] open fun onPageLoaded () onPanelClosed [androidJvm] open override fun onPanelClosed (p0: Int , @ NonNull p1: Menu ) onPause [androidJvm] open override fun onPause () onPerformDirectAction [androidJvm] open fun onPerformDirectAction (p0: String , p1: Bundle , p2: CancellationSignal , p3: Consumer < Bundle >) onPictureInPictureModeChanged [androidJvm] @ CallSuper open override fun onPictureInPictureModeChanged (p0: Boolean ) open fun onPictureInPictureModeChanged (p0: Boolean , p1: Configuration ) onPictureInPictureRequested [androidJvm] open fun onPictureInPictureRequested (): Boolean onPictureInPictureUiStateChanged [androidJvm] open fun onPictureInPictureUiStateChanged (p0: PictureInPictureUiState ) onPointerCaptureChanged [androidJvm] open fun onPointerCaptureChanged (p0: Boolean ) onPostCreate [androidJvm] open override fun onPostCreate (@ Nullable p0: Bundle ?) open fun onPostCreate (p0: Bundle ?, p1: PersistableBundle ?) onPostResume [androidJvm] open override fun onPostResume () onPrepareNavigateUpTaskStack [androidJvm] open fun onPrepareNavigateUpTaskStack (p0: TaskStackBuilder ) onPrepareOptionsMenu [androidJvm] open fun onPrepareOptionsMenu (p0: Menu ): Boolean onPreparePanel [androidJvm] open override fun onPreparePanel (p0: Int , @ Nullable p1: View ?, @ NonNull p2: Menu ): Boolean onPrepareSupportNavigateUpTaskStack [androidJvm] open fun onPrepareSupportNavigateUpTaskStack (@ NonNull p0: TaskStackBuilder ) onProvideAssistContent [androidJvm] open fun onProvideAssistContent (p0: AssistContent ) onProvideAssistData [androidJvm] open fun onProvideAssistData (p0: Bundle ) onProvideKeyboardShortcuts [androidJvm] open override fun onProvideKeyboardShortcuts (p0: MutableList < KeyboardShortcutGroup >, p1: Menu ?, p2: Int ) onProvideReferrer [androidJvm] open fun onProvideReferrer (): Uri onRequestPermissionsResult [androidJvm] @ CallSuper open override fun onRequestPermissionsResult (p0: Int , @ NonNull p1: Array < String >, @ NonNull p2: IntArray ) onRestart [androidJvm] open fun onRestart () onRestoreInstanceState [androidJvm] open fun onRestoreInstanceState (p0: Bundle ) open fun onRestoreInstanceState (p0: Bundle ?, p1: PersistableBundle ?) onResume [androidJvm] open override fun onResume () onResumeFragments [androidJvm] open fun onResumeFragments () onRetainNonConfigurationInstance [androidJvm] @ Nullable override fun onRetainNonConfigurationInstance (): Any ? onSaveInstanceState [androidJvm] @ CallSuper open override fun onSaveInstanceState (@ NonNull outState: Bundle ) open fun onSaveInstanceState (p0: Bundle , p1: PersistableBundle ) onSearchRequested [androidJvm] open override fun onSearchRequested (): Boolean open override fun onSearchRequested (p0: SearchEvent ?): Boolean onStart [androidJvm] open override fun onStart () onStateNotSaved [androidJvm] open override fun onStateNotSaved () onStop [androidJvm] open override fun onStop () onSupportActionModeFinished [androidJvm] @ CallSuper open override fun onSupportActionModeFinished (@ NonNull p0: ActionMode ) onSupportActionModeStarted [androidJvm] @ CallSuper open override fun onSupportActionModeStarted (@ NonNull p0: ActionMode ) onSupportNavigateUp [androidJvm] open fun onSupportNavigateUp (): Boolean onTap [androidJvm] open override fun onTap (point: PointF ): Boolean Called when the user tapped the content, but nothing handled the event internally (eg. by following an internal link). onTitleChanged [androidJvm] open override fun onTitleChanged (p0: CharSequence , p1: Int ) onTopResumedActivityChanged [androidJvm] open fun onTopResumedActivityChanged (p0: Boolean ) onTouchEvent [androidJvm] open fun onTouchEvent (p0: MotionEvent ): Boolean onTrackballEvent [androidJvm] open fun onTrackballEvent (p0: MotionEvent ): Boolean onTrimMemory [androidJvm] open override fun onTrimMemory (p0: Int ) onUserInteraction [androidJvm] open fun onUserInteraction () onUserLeaveHint [androidJvm] open fun onUserLeaveHint () onWindowAttributesChanged [androidJvm] open override fun onWindowAttributesChanged (p0: WindowManager.LayoutParams ) onWindowFocusChanged [androidJvm] open override fun onWindowFocusChanged (p0: Boolean ) onWindowStartingActionMode [androidJvm] open override fun onWindowStartingActionMode (p0: ActionMode.Callback ): ActionMode ? open override fun onWindowStartingActionMode (p0: ActionMode.Callback , p1: Int ): ActionMode ? onWindowStartingSupportActionMode [androidJvm] @ Nullable open override fun onWindowStartingSupportActionMode (@ NonNull p0: ActionMode.Callback ): ActionMode ? openContextMenu [androidJvm] open fun openContextMenu (p0: View ) openFileInput [androidJvm] open override fun openFileInput (p0: String ): FileInputStream openFileOutput [androidJvm] open override fun openFileOutput (p0: String , p1: Int ): FileOutputStream openOptionsMenu [androidJvm] open override fun openOptionsMenu () openOrCreateDatabase [androidJvm] open override fun openOrCreateDatabase (p0: String , p1: Int , p2: SQLiteDatabase.CursorFactory ): SQLiteDatabase open override fun openOrCreateDatabase (p0: String , p1: Int , p2: SQLiteDatabase.CursorFactory , p3: DatabaseErrorHandler ?): SQLiteDatabase overridePendingTransition [androidJvm] open fun overridePendingTransition (p0: Int , p1: Int ) peekAvailableContext [androidJvm] @ Nullable open override fun peekAvailableContext (): Context ? playStateChanged [androidJvm] open fun playStateChanged (playing: Boolean ) playTextChanged [androidJvm] open fun playTextChanged (text: String ) postponeEnterTransition [androidJvm] open fun postponeEnterTransition () previousResource [androidJvm] open fun previousResource (v: View ? = null) recreate [androidJvm] open fun recreate () rectangleForHighlightAnnotationMarkWithID [androidJvm] open override fun rectangleForHighlightAnnotationMarkWithID (id: String ): Rect ? rectangleForHighlightWithID [androidJvm] open override fun rectangleForHighlightWithID (id: String , callback: ( Rect ?) -> Unit ) registerActivityLifecycleCallbacks [androidJvm] open fun registerActivityLifecycleCallbacks (p0: Application.ActivityLifecycleCallbacks ) registerComponentCallbacks [androidJvm] open fun registerComponentCallbacks (p0: ComponentCallbacks ) registerForActivityResult [androidJvm] @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull contract: ActivityResultContract < I , O >, @ NonNull callback: ActivityResultCallback < O >): ActivityResultLauncher < I > @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull contract: ActivityResultContract < I , O >, @ NonNull registry: ActivityResultRegistry , @ NonNull callback: ActivityResultCallback < O >): ActivityResultLauncher < I > registerForContextMenu [androidJvm] open fun registerForContextMenu (p0: View ) registerHighlightAnnotationMarkStyle [androidJvm] open override fun registerHighlightAnnotationMarkStyle (name: String , css: String ) registerReceiver [androidJvm] open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter ): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: Int ): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: String ?, p3: Handler ?): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: String ?, p3: Handler ?, p4: Int ): Intent ? releaseInstance [androidJvm] open fun releaseInstance (): Boolean removeOnContextAvailableListener [androidJvm] override fun removeOnContextAvailableListener (@ NonNull listener: OnContextAvailableListener ) reportFullyDrawn [androidJvm] open override fun reportFullyDrawn () requestDragAndDropPermissions [androidJvm] open fun requestDragAndDropPermissions (p0: DragEvent ): DragAndDropPermissions requestPermissions [androidJvm] fun requestPermissions (p0: Array < String >, p1: Int ) requestShowKeyboardShortcuts [androidJvm] fun requestShowKeyboardShortcuts () requestWindowFeature [androidJvm] fun requestWindowFeature (p0: Int ): Boolean requireViewById [androidJvm] fun < T : View > requireViewById (p0: Int ): T revokeUriPermission [androidJvm] open override fun revokeUriPermission (p0: Uri , p1: Int ) open override fun revokeUriPermission (p0: String , p1: Uri , p2: Int ) runOnUiThread [androidJvm] fun runOnUiThread (p0: Runnable ) sendBroadcast [androidJvm] open override fun sendBroadcast (p0: Intent ) open override fun sendBroadcast (p0: Intent , p1: String ?) sendBroadcastAsUser [androidJvm] open override fun sendBroadcastAsUser (p0: Intent , p1: UserHandle ) open override fun sendBroadcastAsUser (p0: Intent , p1: UserHandle , p2: String ?) sendBroadcastWithMultiplePermissions [androidJvm] open fun sendBroadcastWithMultiplePermissions (p0: Intent , p1: Array < String >) sendOrderedBroadcast [androidJvm] open override fun sendOrderedBroadcast (p0: Intent , p1: String ?) open override fun sendOrderedBroadcast (p0: Intent , p1: String ?, p2: BroadcastReceiver ?, p3: Handler ?, p4: Int , p5: String ?, p6: Bundle ?) open override fun sendOrderedBroadcast (p0: Intent , p1: String ?, p2: String ?, p3: BroadcastReceiver ?, p4: Handler ?, p5: Int , p6: String ?, p7: Bundle ?) open fun sendOrderedBroadcast (p0: Intent , p1: Int , p2: String ?, p3: String ?, p4: BroadcastReceiver ?, p5: Handler ?, p6: String ?, p7: Bundle ?, p8: Bundle ?) sendOrderedBroadcastAsUser [androidJvm] open override fun sendOrderedBroadcastAsUser (p0: Intent , p1: UserHandle , p2: String ?, p3: BroadcastReceiver ?, p4: Handler ?, p5: Int , p6: String ?, p7: Bundle ?) setActionBar [androidJvm] open fun setActionBar (p0: Toolbar ?) setContentTransitionManager [androidJvm] open fun setContentTransitionManager (p0: TransitionManager ) setContentView [androidJvm] open override fun setContentView (p0: View ) open override fun setContentView (@ LayoutRes p0: Int ) open override fun setContentView (p0: View , p1: ViewGroup.LayoutParams ) setDefaultKeyMode [androidJvm] fun setDefaultKeyMode (p0: Int ) setEnterSharedElementCallback [androidJvm] open fun setEnterSharedElementCallback (p0: SharedElementCallback ) open fun setEnterSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setExitSharedElementCallback [androidJvm] open fun setExitSharedElementCallback (p0: SharedElementCallback ) open fun setExitSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setFeatureDrawable [androidJvm] fun setFeatureDrawable (p0: Int , p1: Drawable ) setFeatureDrawableAlpha [androidJvm] fun setFeatureDrawableAlpha (p0: Int , p1: Int ) setFeatureDrawableResource [androidJvm] fun setFeatureDrawableResource (p0: Int , p1: Int ) setFeatureDrawableUri [androidJvm] fun setFeatureDrawableUri (p0: Int , p1: Uri ) setFinishOnTouchOutside [androidJvm] open fun setFinishOnTouchOutside (p0: Boolean ) setImmersive [androidJvm] open fun setImmersive (p0: Boolean ) setInheritShowWhenLocked [androidJvm] open fun setInheritShowWhenLocked (p0: Boolean ) setIntent [androidJvm] open fun setIntent (p0: Intent ) setLocusContext [androidJvm] open fun setLocusContext (p0: LocusId ?, p1: Bundle ?) setMediaController [androidJvm] fun setMediaController (p0: MediaController ) setPictureInPictureParams [androidJvm] open fun setPictureInPictureParams (p0: PictureInPictureParams ) setRequestedOrientation [androidJvm] open fun setRequestedOrientation (p0: Int ) setResult [androidJvm] fun setResult (p0: Int ) fun setResult (p0: Int , p1: Intent ) setShowWhenLocked [androidJvm] open fun setShowWhenLocked (p0: Boolean ) setSupportActionBar [androidJvm] open fun setSupportActionBar (@ Nullable p0: Toolbar ?) setTaskDescription [androidJvm] open fun setTaskDescription (p0: ActivityManager.TaskDescription ) setTheme [androidJvm] open fun setTheme (p0: Resources.Theme ?) open override fun setTheme (@ StyleRes p0: Int ) setTitle [androidJvm] open fun setTitle (p0: CharSequence ) open fun setTitle (p0: Int ) setTranslucent [androidJvm] open fun setTranslucent (p0: Boolean ): Boolean setTurnScreenOn [androidJvm] open fun setTurnScreenOn (p0: Boolean ) setVisible [androidJvm] open fun setVisible (p0: Boolean ) setVolumeControlStream [androidJvm] fun setVolumeControlStream (p0: Int ) setVrModeEnabled [androidJvm] open fun setVrModeEnabled (p0: Boolean , p1: ComponentName ) shouldShowRequestPermissionRationale [androidJvm] open fun shouldShowRequestPermissionRationale (p0: String ): Boolean shouldUpRecreateTask [androidJvm] open fun shouldUpRecreateTask (p0: Intent ): Boolean showAssist [androidJvm] open fun showAssist (p0: Bundle ): Boolean showHighlight [androidJvm] open override fun showHighlight (highlight: Highlight ) showHighlights [androidJvm] open override fun showHighlights (highlights: Array < Highlight >) showLockTaskEscapeMessage [androidJvm] open fun showLockTaskEscapeMessage () startActionMode [androidJvm] open fun startActionMode (p0: ActionMode.Callback ): ActionMode ? open fun startActionMode (p0: ActionMode.Callback , p1: Int ): ActionMode ? startActivities [androidJvm] open override fun startActivities (p0: Array < Intent >) open override fun startActivities (p0: Array < Intent >, p1: Bundle ?) startActivity [androidJvm] open override fun startActivity (p0: Intent ) open override fun startActivity (p0: Intent , p1: Bundle ?) startActivityFromFragment [androidJvm] open fun startActivityFromFragment (@ NonNull p0: Fragment , p1: Intent , p2: Int ) open fun startActivityFromFragment (@ NonNull p0: Fragment , p1: Intent , p2: Int , @ Nullable p3: Bundle ?) startActivityIfNeeded [androidJvm] open fun startActivityIfNeeded (p0: Intent , p1: Int ): Boolean open fun startActivityIfNeeded (p0: Intent , p1: Int , p2: Bundle ?): Boolean startForegroundService [androidJvm] open override fun startForegroundService (p0: Intent ): ComponentName ? startInstrumentation [androidJvm] open override fun startInstrumentation (p0: ComponentName , p1: String ?, p2: Bundle ?): Boolean startIntentSender [androidJvm] open override fun startIntentSender (p0: IntentSender , p1: Intent ?, p2: Int , p3: Int , p4: Int ) open override fun startIntentSender (p0: IntentSender , p1: Intent ?, p2: Int , p3: Int , p4: Int , p5: Bundle ?) startLocalVoiceInteraction [androidJvm] open fun startLocalVoiceInteraction (p0: Bundle ) startLockTask [androidJvm] open fun startLockTask () startNextMatchingActivity [androidJvm] open fun startNextMatchingActivity (p0: Intent ): Boolean open fun startNextMatchingActivity (p0: Intent , p1: Bundle ?): Boolean startPostponedEnterTransition [androidJvm] open fun startPostponedEnterTransition () startSearch [androidJvm] open fun startSearch (p0: String ?, p1: Boolean , p2: Bundle ?, p3: Boolean ) startService [androidJvm] open override fun startService (p0: Intent ): ComponentName ? startSupportActionMode [androidJvm] @ Nullable open fun startSupportActionMode (@ NonNull p0: ActionMode.Callback ): ActionMode ? stopLocalVoiceInteraction [androidJvm] open fun stopLocalVoiceInteraction () stopLockTask [androidJvm] open fun stopLockTask () stopService [androidJvm] open override fun stopService (p0: Intent ): Boolean superDispatchKeyEvent [androidJvm] open override fun superDispatchKeyEvent (event: KeyEvent ): Boolean supportFinishAfterTransition [androidJvm] open fun supportFinishAfterTransition () supportInvalidateOptionsMenu [androidJvm] open override fun supportInvalidateOptionsMenu () supportNavigateUpTo [androidJvm] open fun supportNavigateUpTo (@ NonNull p0: Intent ) supportPostponeEnterTransition [androidJvm] open fun supportPostponeEnterTransition () supportRequestWindowFeature [androidJvm] open fun supportRequestWindowFeature (p0: Int ): Boolean supportShouldUpRecreateTask [androidJvm] open fun supportShouldUpRecreateTask (@ NonNull p0: Intent ): Boolean supportStartPostponedEnterTransition [androidJvm] open fun supportStartPostponedEnterTransition () takeKeyEvents [androidJvm] open fun takeKeyEvents (p0: Boolean ) toggleActionBar [androidJvm] open override fun toggleActionBar () open fun toggleActionBar (v: View ? = null) triggerSearch [androidJvm] open fun triggerSearch (p0: String , p1: Bundle ?) unbindService [androidJvm] open override fun unbindService (p0: ServiceConnection ) unregisterActivityLifecycleCallbacks [androidJvm] open fun unregisterActivityLifecycleCallbacks (p0: Application.ActivityLifecycleCallbacks ) unregisterComponentCallbacks [androidJvm] open fun unregisterComponentCallbacks (p0: ComponentCallbacks ) unregisterForContextMenu [androidJvm] open fun unregisterForContextMenu (p0: View ) unregisterReceiver [androidJvm] open override fun unregisterReceiver (p0: BroadcastReceiver ) updateServiceGroup [androidJvm] open override fun updateServiceGroup (p0: ServiceConnection , p1: Int , p2: Int )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/#properties","text":"Name Summary adapter [androidJvm] val adapter : R2PagerAdapter allowToggleActionBar [androidJvm] open override var allowToggleActionBar : Boolean = true bookId [androidJvm] open override var bookId : Long coroutineContext [androidJvm] open override val coroutineContext : CoroutineContext Context of this scope. currentLocator [androidJvm] open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position. currentPagerPosition [androidJvm] val currentPagerPosition : Int mContextAwareHelper [androidJvm] val mContextAwareHelper : ContextAwareHelper mCreated [androidJvm] val mCreated : Boolean mFragmentLifecycleRegistry [androidJvm] val mFragmentLifecycleRegistry : LifecycleRegistry mFragments [androidJvm] val mFragments : FragmentController mResumed [androidJvm] val mResumed : Boolean mSavedStateRegistryController [androidJvm] val mSavedStateRegistryController : SavedStateRegistryController mStopped [androidJvm] val mStopped : Boolean positions [androidJvm] val positions : List < Locator > preferences [androidJvm] open lateinit override var preferences : SharedPreferences publication [androidJvm] open lateinit override var publication : Publication Publication rendered by this navigator. publicationFileName [androidJvm] open lateinit override var publicationFileName : String publicationIdentifier [androidJvm] open lateinit override var publicationIdentifier : String publicationPath [androidJvm] open lateinit override var publicationPath : String readingProgression [androidJvm] open override val readingProgression : ReadingProgression Current reading progression direction. resourcePager [androidJvm] open override val resourcePager : R2ViewPager","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/-r2-epub-activity/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / R2EpubActivity R2EpubActivity \u00b6 [androidJvm]\\ fun R2EpubActivity ()","title":" r2 epub activity"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/-r2-epub-activity/#r2epubactivity","text":"[androidJvm]\\ fun R2EpubActivity ()","title":"R2EpubActivity"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/adapter/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / adapter adapter \u00b6 [androidJvm]\\ val adapter : R2PagerAdapter","title":"Adapter"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/adapter/#adapter","text":"[androidJvm]\\ val adapter : R2PagerAdapter","title":"adapter"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/allow-toggle-action-bar/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / allowToggleActionBar allowToggleActionBar \u00b6 [androidJvm]\\ open override var allowToggleActionBar : Boolean = true","title":"Allow toggle action bar"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/allow-toggle-action-bar/#allowtoggleactionbar","text":"[androidJvm]\\ open override var allowToggleActionBar : Boolean = true","title":"allowToggleActionBar"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/book-id/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / bookId bookId \u00b6 [androidJvm]\\ open override var bookId : Long","title":"Book id"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/book-id/#bookid","text":"[androidJvm]\\ open override var bookId : Long","title":"bookId"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/coroutine-context/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / coroutineContext coroutineContext \u00b6 [androidJvm]\\ open override val coroutineContext : CoroutineContext Context of this scope.","title":"Coroutine context"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/coroutine-context/#coroutinecontext","text":"[androidJvm]\\ open override val coroutineContext : CoroutineContext Context of this scope.","title":"coroutineContext"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/create-annotation/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / createAnnotation createAnnotation \u00b6 [androidJvm]\\ fun createAnnotation (highlight: Highlight ?, callback: ( Highlight ) -> Unit )","title":"Create annotation"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/create-annotation/#createannotation","text":"[androidJvm]\\ fun createAnnotation (highlight: Highlight ?, callback: ( Highlight ) -> Unit )","title":"createAnnotation"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/create-highlight/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / createHighlight createHighlight \u00b6 [androidJvm]\\ fun createHighlight (color: Int , callback: ( Highlight ) -> Unit )","title":"Create highlight"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/create-highlight/#createhighlight","text":"[androidJvm]\\ fun createHighlight (color: Int , callback: ( Highlight ) -> Unit )","title":"createHighlight"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/current-locator/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / currentLocator currentLocator \u00b6 [androidJvm]\\ open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position.","title":"Current locator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/current-locator/#currentlocator","text":"[androidJvm]\\ open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position.","title":"currentLocator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/current-pager-position/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / currentPagerPosition currentPagerPosition \u00b6 [androidJvm]\\ val currentPagerPosition : Int","title":"Current pager position"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/current-pager-position/#currentpagerposition","text":"[androidJvm]\\ val currentPagerPosition : Int","title":"currentPagerPosition"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/current-selection/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / currentSelection currentSelection \u00b6 [androidJvm]\\ open override fun currentSelection (callback: ( Locator ?) -> Unit )","title":"Current selection"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/current-selection/#currentselection","text":"[androidJvm]\\ open override fun currentSelection (callback: ( Locator ?) -> Unit )","title":"currentSelection"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/finish/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / finish finish \u00b6 [androidJvm]\\ open override fun finish ()","title":"Finish"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/finish/#finish","text":"[androidJvm]\\ open override fun finish ()","title":"finish"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/go-backward/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / goBackward goBackward \u00b6 [androidJvm]\\ open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction.","title":"Go backward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/go-backward/#gobackward","text":"[androidJvm]\\ open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction.","title":"goBackward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/go-forward/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / goForward goForward \u00b6 [androidJvm]\\ open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction.","title":"Go forward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/go-forward/#goforward","text":"[androidJvm]\\ open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction.","title":"goForward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/go/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / go go \u00b6 [androidJvm]\\ open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . [androidJvm]\\ open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link.","title":"Go"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/go/#go","text":"[androidJvm]\\ open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . [androidJvm]\\ open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link.","title":"go"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/hide-all-highlights/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / hideAllHighlights hideAllHighlights \u00b6 [androidJvm]\\ open override fun hideAllHighlights ()","title":"Hide all highlights"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/hide-all-highlights/#hideallhighlights","text":"[androidJvm]\\ open override fun hideAllHighlights ()","title":"hideAllHighlights"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/hide-highlight-with-i-d/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / hideHighlightWithID hideHighlightWithID \u00b6 [androidJvm]\\ open override fun hideHighlightWithID (id: String )","title":"Hide highlight with i d"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/hide-highlight-with-i-d/#hidehighlightwithid","text":"[androidJvm]\\ open override fun hideHighlightWithID (id: String )","title":"hideHighlightWithID"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/highlight-activated/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / highlightActivated highlightActivated \u00b6 [androidJvm]\\ open override fun highlightActivated (id: String )","title":"Highlight activated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/highlight-activated/#highlightactivated","text":"[androidJvm]\\ open override fun highlightActivated (id: String )","title":"highlightActivated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/highlight-annotation-mark-activated/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / highlightAnnotationMarkActivated highlightAnnotationMarkActivated \u00b6 [androidJvm]\\ open override fun highlightAnnotationMarkActivated (id: String )","title":"Highlight annotation mark activated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/highlight-annotation-mark-activated/#highlightannotationmarkactivated","text":"[androidJvm]\\ open override fun highlightAnnotationMarkActivated (id: String )","title":"highlightAnnotationMarkActivated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/navigator-fragment/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / navigatorFragment navigatorFragment \u00b6 [androidJvm]\\ open fun navigatorFragment (): EpubNavigatorFragment Locates the EpubNavigatorFragment instance. Reading apps may override this method to provide their own path to the navigator fragment.","title":"Navigator fragment"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/navigator-fragment/#navigatorfragment","text":"[androidJvm]\\ open fun navigatorFragment (): EpubNavigatorFragment Locates the EpubNavigatorFragment instance. Reading apps may override this method to provide their own path to the navigator fragment.","title":"navigatorFragment"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/on-action-mode-started/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / onActionModeStarted onActionModeStarted \u00b6 [androidJvm]\\ open override fun onActionModeStarted (mode: ActionMode ?)","title":"On action mode started"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/on-action-mode-started/#onactionmodestarted","text":"[androidJvm]\\ open override fun onActionModeStarted (mode: ActionMode ?)","title":"onActionModeStarted"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/on-tap/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / onTap onTap \u00b6 [androidJvm]\\ open override fun onTap (point: PointF ): Boolean Called when the user tapped the content, but nothing handled the event internally (eg. by following an internal link). Can be used in the reading app to toggle the navigation bars, or switch to the previous/next page if the tapped occurred on the edges. The point is relative to the navigator's view.","title":"On tap"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/on-tap/#ontap","text":"[androidJvm]\\ open override fun onTap (point: PointF ): Boolean Called when the user tapped the content, but nothing handled the event internally (eg. by following an internal link). Can be used in the reading app to toggle the navigation bars, or switch to the previous/next page if the tapped occurred on the edges. The point is relative to the navigator's view.","title":"onTap"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/positions/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / positions positions \u00b6 [androidJvm]\\ val positions : List < Locator >","title":"Positions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/positions/#positions","text":"[androidJvm]\\ val positions : List < Locator >","title":"positions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/preferences/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / preferences preferences \u00b6 [androidJvm]\\ open lateinit override var preferences : SharedPreferences","title":"Preferences"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/preferences/#preferences","text":"[androidJvm]\\ open lateinit override var preferences : SharedPreferences","title":"preferences"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/publication-file-name/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / publicationFileName publicationFileName \u00b6 [androidJvm]\\ open lateinit override var publicationFileName : String","title":"Publication file name"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/publication-file-name/#publicationfilename","text":"[androidJvm]\\ open lateinit override var publicationFileName : String","title":"publicationFileName"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/publication-identifier/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / publicationIdentifier publicationIdentifier \u00b6 [androidJvm]\\ open lateinit override var publicationIdentifier : String","title":"Publication identifier"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/publication-identifier/#publicationidentifier","text":"[androidJvm]\\ open lateinit override var publicationIdentifier : String","title":"publicationIdentifier"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/publication-path/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / publicationPath publicationPath \u00b6 [androidJvm]\\ open lateinit override var publicationPath : String","title":"Publication path"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/publication-path/#publicationpath","text":"[androidJvm]\\ open lateinit override var publicationPath : String","title":"publicationPath"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/publication/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / publication publication \u00b6 [androidJvm]\\ open lateinit override var publication : Publication Publication rendered by this navigator.","title":"Publication"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/publication/#publication","text":"[androidJvm]\\ open lateinit override var publication : Publication Publication rendered by this navigator.","title":"publication"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/reading-progression/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / readingProgression readingProgression \u00b6 [androidJvm]\\ open override val readingProgression : ReadingProgression Current reading progression direction.","title":"Reading progression"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/reading-progression/#readingprogression","text":"[androidJvm]\\ open override val readingProgression : ReadingProgression Current reading progression direction.","title":"readingProgression"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/rectangle-for-highlight-annotation-mark-with-i-d/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / rectangleForHighlightAnnotationMarkWithID rectangleForHighlightAnnotationMarkWithID \u00b6 [androidJvm]\\ open override fun rectangleForHighlightAnnotationMarkWithID (id: String ): Rect ?","title":"Rectangle for highlight annotation mark with i d"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/rectangle-for-highlight-annotation-mark-with-i-d/#rectangleforhighlightannotationmarkwithid","text":"[androidJvm]\\ open override fun rectangleForHighlightAnnotationMarkWithID (id: String ): Rect ?","title":"rectangleForHighlightAnnotationMarkWithID"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/rectangle-for-highlight-with-i-d/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / rectangleForHighlightWithID rectangleForHighlightWithID \u00b6 [androidJvm]\\ open override fun rectangleForHighlightWithID (id: String , callback: ( Rect ?) -> Unit )","title":"Rectangle for highlight with i d"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/rectangle-for-highlight-with-i-d/#rectangleforhighlightwithid","text":"[androidJvm]\\ open override fun rectangleForHighlightWithID (id: String , callback: ( Rect ?) -> Unit )","title":"rectangleForHighlightWithID"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/register-highlight-annotation-mark-style/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / registerHighlightAnnotationMarkStyle registerHighlightAnnotationMarkStyle \u00b6 [androidJvm]\\ open override fun registerHighlightAnnotationMarkStyle (name: String , css: String )","title":"Register highlight annotation mark style"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/register-highlight-annotation-mark-style/#registerhighlightannotationmarkstyle","text":"[androidJvm]\\ open override fun registerHighlightAnnotationMarkStyle (name: String , css: String )","title":"registerHighlightAnnotationMarkStyle"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/resource-pager/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / resourcePager resourcePager \u00b6 [androidJvm]\\ open override val resourcePager : R2ViewPager","title":"Resource pager"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/resource-pager/#resourcepager","text":"[androidJvm]\\ open override val resourcePager : R2ViewPager","title":"resourcePager"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/show-highlight/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / showHighlight showHighlight \u00b6 [androidJvm]\\ open override fun showHighlight (highlight: Highlight )","title":"Show highlight"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/show-highlight/#showhighlight","text":"[androidJvm]\\ open override fun showHighlight (highlight: Highlight )","title":"showHighlight"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/show-highlights/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / showHighlights showHighlights \u00b6 [androidJvm]\\ open override fun showHighlights (highlights: Array < Highlight >)","title":"Show highlights"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/show-highlights/#showhighlights","text":"[androidJvm]\\ open override fun showHighlights (highlights: Array < Highlight >)","title":"showHighlights"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/toggle-action-bar/","text":"// navigator / org.readium.r2.navigator.epub / R2EpubActivity / toggleActionBar toggleActionBar \u00b6 [androidJvm]\\ open override fun toggleActionBar ()","title":"Toggle action bar"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-r2-epub-activity/toggle-action-bar/#toggleactionbar","text":"[androidJvm]\\ open override fun toggleActionBar ()","title":"toggleActionBar"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-style/","text":"// navigator / org.readium.r2.navigator.epub / Style Style \u00b6 [androidJvm]\\ enum Style : Enum < Style > Entries \u00b6 strikethrough [androidJvm] strikethrough () underline [androidJvm] underline () highlight [androidJvm] highlight () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-style/#style","text":"[androidJvm]\\ enum Style : Enum < Style >","title":"Style"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-style/#entries","text":"strikethrough [androidJvm] strikethrough () underline [androidJvm] underline () highlight [androidJvm] highlight ()","title":"Entries"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-style/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-style/highlight/","text":"// navigator / org.readium.r2.navigator.epub / Style / highlight highlight \u00b6 [androidJvm]\\ highlight () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-style/highlight/#highlight","text":"[androidJvm]\\ highlight ()","title":"highlight"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-style/highlight/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-style/strikethrough/","text":"// navigator / org.readium.r2.navigator.epub / Style / strikethrough strikethrough \u00b6 [androidJvm]\\ strikethrough () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-style/strikethrough/#strikethrough","text":"[androidJvm]\\ strikethrough ()","title":"strikethrough"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-style/strikethrough/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-style/underline/","text":"// navigator / org.readium.r2.navigator.epub / Style / underline underline \u00b6 [androidJvm]\\ underline () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-style/underline/#underline","text":"[androidJvm]\\ underline ()","title":"underline"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub/-style/underline/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/","text":"// navigator / org.readium.r2.navigator.epub.fxl Package org.readium.r2.navigator.epub.fxl \u00b6 Types \u00b6 Name Summary R2FXLLayout [androidJvm] class R2FXLLayout : FrameLayout R2FXLOnDoubleTapListener [androidJvm] class R2FXLOnDoubleTapListener (threeStep: Boolean ) : R2FXLLayout.OnDoubleTapListener R2FXLScroller [androidJvm] abstract class R2FXLScroller R2FXLUtils [androidJvm] object R2FXLUtils","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/#package-orgreadiumr2navigatorepubfxl","text":"","title":"Package org.readium.r2.navigator.epub.fxl"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/#types","text":"Name Summary R2FXLLayout [androidJvm] class R2FXLLayout : FrameLayout R2FXLOnDoubleTapListener [androidJvm] class R2FXLOnDoubleTapListener (threeStep: Boolean ) : R2FXLLayout.OnDoubleTapListener R2FXLScroller [androidJvm] abstract class R2FXLScroller R2FXLUtils [androidJvm] object R2FXLUtils","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout R2FXLLayout \u00b6 [androidJvm]\\ class R2FXLLayout : FrameLayout Constructors \u00b6 R2FXLLayout [androidJvm] fun R2FXLLayout (context: Context ) R2FXLLayout [androidJvm] fun R2FXLLayout (context: Context , attrs: AttributeSet ) R2FXLLayout [androidJvm] fun R2FXLLayout (context: Context , attrs: AttributeSet , defStyleAttr: Int ) Types \u00b6 Name Summary Companion [androidJvm] object Companion OnDoubleTapListener [androidJvm] interface OnDoubleTapListener OnLongTapListener [androidJvm] interface OnLongTapListener OnPanListener [androidJvm] interface OnPanListener OnTapListener [androidJvm] interface OnTapListener OnTouchListener [androidJvm] interface OnTouchListener OnZoomListener [androidJvm] interface OnZoomListener TapInfo [androidJvm] class TapInfo (r2FXLLayout: R2FXLLayout , e: MotionEvent ) Functions \u00b6 Name Summary addChildrenForAccessibility [androidJvm] open override fun addChildrenForAccessibility (p0: ArrayList < View >) addExtraDataToAccessibilityNodeInfo [androidJvm] open override fun addExtraDataToAccessibilityNodeInfo (p0: AccessibilityNodeInfo , p1: String , p2: Bundle ?) addFocusables [androidJvm] open fun addFocusables (p0: ArrayList < View >, p1: Int ) open override fun addFocusables (p0: ArrayList < View >, p1: Int , p2: Int ) addKeyboardNavigationClusters [androidJvm] open override fun addKeyboardNavigationClusters (p0: MutableCollection < View >, p1: Int ) addOnAttachStateChangeListener [androidJvm] open fun addOnAttachStateChangeListener (p0: View.OnAttachStateChangeListener ) addOnDoubleTapListener [androidJvm] fun addOnDoubleTapListener (l: R2FXLLayout.OnDoubleTapListener ) addOnLayoutChangeListener [androidJvm] open fun addOnLayoutChangeListener (p0: View.OnLayoutChangeListener ) addOnTapListener [androidJvm] fun addOnTapListener (l: R2FXLLayout.OnTapListener ) addOnUnhandledKeyEventListener [androidJvm] open fun addOnUnhandledKeyEventListener (p0: View.OnUnhandledKeyEventListener ) addStatesFromChildren [androidJvm] open fun addStatesFromChildren (): Boolean addTouchables [androidJvm] open override fun addTouchables (p0: ArrayList < View >) addView [androidJvm] open fun addView (p0: View ) open override fun addView (p0: View , p1: ViewGroup.LayoutParams ) open fun addView (p0: View , p1: Int ) open fun addView (p0: View , p1: Int , p2: ViewGroup.LayoutParams ) open fun addView (p0: View , p1: Int , p2: Int ) addViewInLayout [androidJvm] open fun addViewInLayout (p0: View , p1: Int , p2: ViewGroup.LayoutParams ): Boolean open fun addViewInLayout (p0: View , p1: Int , p2: ViewGroup.LayoutParams , p3: Boolean ): Boolean animate [androidJvm] open fun animate (): ViewPropertyAnimator announceForAccessibility [androidJvm] open fun announceForAccessibility (p0: CharSequence ) attachLayoutAnimationParameters [androidJvm] open fun attachLayoutAnimationParameters (p0: View , p1: ViewGroup.LayoutParams , p2: Int , p3: Int ) attachViewToParent [androidJvm] open fun attachViewToParent (p0: View , p1: Int , p2: ViewGroup.LayoutParams ) autofill [androidJvm] open fun autofill (p0: SparseArray < AutofillValue >) open fun autofill (p0: AutofillValue ) awakenScrollBars [androidJvm] open fun awakenScrollBars (): Boolean open fun awakenScrollBars (p0: Int ): Boolean open fun awakenScrollBars (p0: Int , p1: Boolean ): Boolean bringChildToFront [androidJvm] open override fun bringChildToFront (p0: View ) bringToFront [androidJvm] open fun bringToFront () buildLayer [androidJvm] open fun buildLayer () callOnClick [androidJvm] open fun callOnClick (): Boolean canAnimate [androidJvm] open fun canAnimate (): Boolean cancelDragAndDrop [androidJvm] fun cancelDragAndDrop () cancelLongPress [androidJvm] open fun cancelLongPress () cancelPendingInputEvents [androidJvm] fun cancelPendingInputEvents () canResolveLayoutDirection [androidJvm] open fun canResolveLayoutDirection (): Boolean canResolveTextAlignment [androidJvm] open fun canResolveTextAlignment (): Boolean canResolveTextDirection [androidJvm] open fun canResolveTextDirection (): Boolean canScrollHorizontally [androidJvm] open fun canScrollHorizontally (p0: Int ): Boolean canScrollVertically [androidJvm] open fun canScrollVertically (p0: Int ): Boolean checkInputConnectionProxy [androidJvm] open fun checkInputConnectionProxy (p0: View ): Boolean checkLayoutParams [androidJvm] open override fun checkLayoutParams (p0: ViewGroup.LayoutParams ): Boolean childDrawableStateChanged [androidJvm] open override fun childDrawableStateChanged (p0: View ) childHasTransientStateChanged [androidJvm] open override fun childHasTransientStateChanged (p0: View , p1: Boolean ) cleanupLayoutState [androidJvm] open fun cleanupLayoutState (p0: View ) clearAnimation [androidJvm] open fun clearAnimation () clearChildFocus [androidJvm] open override fun clearChildFocus (p0: View ) clearDisappearingChildren [androidJvm] open fun clearDisappearingChildren () clearFocus [androidJvm] open override fun clearFocus () clearViewTranslationCallback [androidJvm] open fun clearViewTranslationCallback () computeHorizontalScrollExtent [androidJvm] open fun computeHorizontalScrollExtent (): Int computeHorizontalScrollOffset [androidJvm] open fun computeHorizontalScrollOffset (): Int computeHorizontalScrollRange [androidJvm] open fun computeHorizontalScrollRange (): Int computeScroll [androidJvm] open fun computeScroll () computeSystemWindowInsets [androidJvm] open fun computeSystemWindowInsets (p0: WindowInsets , p1: Rect ): WindowInsets computeVerticalScrollExtent [androidJvm] open fun computeVerticalScrollExtent (): Int computeVerticalScrollOffset [androidJvm] open fun computeVerticalScrollOffset (): Int computeVerticalScrollRange [androidJvm] open fun computeVerticalScrollRange (): Int createAccessibilityNodeInfo [androidJvm] open fun createAccessibilityNodeInfo (): AccessibilityNodeInfo createContextMenu [androidJvm] open fun createContextMenu (p0: ContextMenu ) debug [androidJvm] open fun debug (p0: Int ) detachAllViewsFromParent [androidJvm] open fun detachAllViewsFromParent () detachViewFromParent [androidJvm] open fun detachViewFromParent (p0: View ) open fun detachViewFromParent (p0: Int ) detachViewsFromParent [androidJvm] open fun detachViewsFromParent (p0: Int , p1: Int ) dispatchApplyWindowInsets [androidJvm] open override fun dispatchApplyWindowInsets (p0: WindowInsets ): WindowInsets dispatchCapturedPointerEvent [androidJvm] open override fun dispatchCapturedPointerEvent (p0: MotionEvent ): Boolean dispatchConfigurationChanged [androidJvm] open override fun dispatchConfigurationChanged (p0: Configuration ) dispatchCreateViewTranslationRequest [androidJvm] open override fun dispatchCreateViewTranslationRequest (p0: MutableMap < AutofillId , LongArray >, p1: IntArray , p2: TranslationCapability , p3: MutableList < ViewTranslationRequest >) dispatchDisplayHint [androidJvm] open override fun dispatchDisplayHint (p0: Int ) dispatchDragEvent [androidJvm] open override fun dispatchDragEvent (p0: DragEvent ): Boolean dispatchDrawableHotspotChanged [androidJvm] open override fun dispatchDrawableHotspotChanged (p0: Float , p1: Float ) dispatchFinishTemporaryDetach [androidJvm] open override fun dispatchFinishTemporaryDetach () dispatchFreezeSelfOnly [androidJvm] open fun dispatchFreezeSelfOnly (p0: SparseArray < Parcelable >) dispatchGenericFocusedEvent [androidJvm] open override fun dispatchGenericFocusedEvent (p0: MotionEvent ): Boolean dispatchGenericMotionEvent [androidJvm] open fun dispatchGenericMotionEvent (p0: MotionEvent ): Boolean dispatchGenericPointerEvent [androidJvm] open override fun dispatchGenericPointerEvent (p0: MotionEvent ): Boolean dispatchHoverEvent [androidJvm] open override fun dispatchHoverEvent (p0: MotionEvent ): Boolean dispatchKeyEvent [androidJvm] open override fun dispatchKeyEvent (p0: KeyEvent ): Boolean dispatchKeyEventPreIme [androidJvm] open override fun dispatchKeyEventPreIme (p0: KeyEvent ): Boolean dispatchKeyShortcutEvent [androidJvm] open override fun dispatchKeyShortcutEvent (p0: KeyEvent ): Boolean dispatchNestedFling [androidJvm] open fun dispatchNestedFling (p0: Float , p1: Float , p2: Boolean ): Boolean dispatchNestedPreFling [androidJvm] open fun dispatchNestedPreFling (p0: Float , p1: Float ): Boolean dispatchNestedPrePerformAccessibilityAction [androidJvm] open fun dispatchNestedPrePerformAccessibilityAction (p0: Int , p1: Bundle ): Boolean dispatchNestedPreScroll [androidJvm] open fun dispatchNestedPreScroll (p0: Int , p1: Int , p2: IntArray ?, p3: IntArray ?): Boolean dispatchNestedScroll [androidJvm] open fun dispatchNestedScroll (p0: Int , p1: Int , p2: Int , p3: Int , p4: IntArray ?): Boolean dispatchPointerCaptureChanged [androidJvm] open override fun dispatchPointerCaptureChanged (p0: Boolean ) dispatchPopulateAccessibilityEvent [androidJvm] open fun dispatchPopulateAccessibilityEvent (p0: AccessibilityEvent ): Boolean dispatchProvideAutofillStructure [androidJvm] open override fun dispatchProvideAutofillStructure (p0: ViewStructure , p1: Int ) dispatchProvideStructure [androidJvm] open override fun dispatchProvideStructure (p0: ViewStructure ) dispatchRestoreInstanceState [androidJvm] open override fun dispatchRestoreInstanceState (p0: SparseArray < Parcelable >) dispatchSaveInstanceState [androidJvm] open override fun dispatchSaveInstanceState (p0: SparseArray < Parcelable >) dispatchScrollCaptureSearch [androidJvm] open override fun dispatchScrollCaptureSearch (p0: Rect , p1: Point , p2: Consumer < ScrollCaptureTarget >) dispatchSetActivated [androidJvm] open override fun dispatchSetActivated (p0: Boolean ) dispatchSetPressed [androidJvm] open override fun dispatchSetPressed (p0: Boolean ) dispatchSetSelected [androidJvm] open override fun dispatchSetSelected (p0: Boolean ) dispatchStartTemporaryDetach [androidJvm] open override fun dispatchStartTemporaryDetach () dispatchThawSelfOnly [androidJvm] open fun dispatchThawSelfOnly (p0: SparseArray < Parcelable >) dispatchTouchEvent [androidJvm] open override fun dispatchTouchEvent (ev: MotionEvent ): Boolean dispatchTrackballEvent [androidJvm] open override fun dispatchTrackballEvent (p0: MotionEvent ): Boolean dispatchUnhandledMove [androidJvm] open override fun dispatchUnhandledMove (p0: View , p1: Int ): Boolean dispatchVisibilityChanged [androidJvm] open override fun dispatchVisibilityChanged (p0: View , p1: Int ) dispatchWindowFocusChanged [androidJvm] open override fun dispatchWindowFocusChanged (p0: Boolean ) dispatchWindowInsetsAnimationEnd [androidJvm] open override fun dispatchWindowInsetsAnimationEnd (p0: WindowInsetsAnimation ) dispatchWindowInsetsAnimationPrepare [androidJvm] open override fun dispatchWindowInsetsAnimationPrepare (p0: WindowInsetsAnimation ) dispatchWindowInsetsAnimationProgress [androidJvm] open override fun dispatchWindowInsetsAnimationProgress (p0: WindowInsets , p1: MutableList < WindowInsetsAnimation >): WindowInsets dispatchWindowInsetsAnimationStart [androidJvm] open override fun dispatchWindowInsetsAnimationStart (p0: WindowInsetsAnimation , p1: WindowInsetsAnimation.Bounds ): WindowInsetsAnimation.Bounds dispatchWindowVisibilityChanged [androidJvm] open override fun dispatchWindowVisibilityChanged (p0: Int ) draw [androidJvm] open fun draw (p0: Canvas ) drawableHotspotChanged [androidJvm] open fun drawableHotspotChanged (p0: Float , p1: Float ) drawableStateChanged [androidJvm] open override fun drawableStateChanged () drawChild [androidJvm] open fun drawChild (p0: Canvas , p1: View , p2: Long ): Boolean endViewTransition [androidJvm] open fun endViewTransition (p0: View ) findFocus [androidJvm] open override fun findFocus (): View findViewById [androidJvm] fun < T : View > findViewById (p0: Int ): T findViewsWithText [androidJvm] open override fun findViewsWithText (p0: ArrayList < View >, p1: CharSequence , p2: Int ) findViewWithTag [androidJvm] fun < T : View > findViewWithTag (p0: Any ): T focusableViewAvailable [androidJvm] open override fun focusableViewAvailable (p0: View ) focusSearch [androidJvm] open fun focusSearch (p0: Int ): View open override fun focusSearch (p0: View , p1: Int ): View forceHasOverlappingRendering [androidJvm] open fun forceHasOverlappingRendering (p0: Boolean ) forceLayout [androidJvm] open fun forceLayout () gatherTransparentRegion [androidJvm] open override fun gatherTransparentRegion (p0: Region ?): Boolean generateDefaultLayoutParams [androidJvm] open override fun generateDefaultLayoutParams (): FrameLayout.LayoutParams generateDisplayHash [androidJvm] open fun generateDisplayHash (p0: String , p1: Rect ?, p2: Executor , p3: DisplayHashResultCallback ) generateLayoutParams [androidJvm] open override fun generateLayoutParams (p0: AttributeSet ): FrameLayout.LayoutParams open override fun generateLayoutParams (p0: ViewGroup.LayoutParams ): ViewGroup.LayoutParams getAccessibilityClassName [androidJvm] open override fun getAccessibilityClassName (): CharSequence getAccessibilityDelegate [androidJvm] open fun getAccessibilityDelegate (): View.AccessibilityDelegate getAccessibilityLiveRegion [androidJvm] open fun getAccessibilityLiveRegion (): Int getAccessibilityNodeProvider [androidJvm] open fun getAccessibilityNodeProvider (): AccessibilityNodeProvider getAccessibilityPaneTitle [androidJvm] open fun getAccessibilityPaneTitle (): CharSequence ? getAccessibilityTraversalAfter [androidJvm] open fun getAccessibilityTraversalAfter (): Int getAccessibilityTraversalBefore [androidJvm] open fun getAccessibilityTraversalBefore (): Int getAlpha [androidJvm] open fun getAlpha (): Float getAnimation [androidJvm] open fun getAnimation (): Animation getAnimationMatrix [androidJvm] open fun getAnimationMatrix (): Matrix ? getApplicationWindowToken [androidJvm] open fun getApplicationWindowToken (): IBinder getAttributeResolutionStack [androidJvm] open fun getAttributeResolutionStack (p0: Int ): IntArray getAttributeSourceResourceMap [androidJvm] open fun getAttributeSourceResourceMap (): MutableMap < Int , Int > getAutofillHints [androidJvm] open fun getAutofillHints (): Array < String >? getAutofillId [androidJvm] fun getAutofillId (): AutofillId getAutofillType [androidJvm] open fun getAutofillType (): Int getAutofillValue [androidJvm] open fun getAutofillValue (): AutofillValue ? getBackground [androidJvm] open fun getBackground (): Drawable getBackgroundTintBlendMode [androidJvm] open fun getBackgroundTintBlendMode (): BlendMode ? getBackgroundTintList [androidJvm] open fun getBackgroundTintList (): ColorStateList ? getBackgroundTintMode [androidJvm] open fun getBackgroundTintMode (): PorterDuff.Mode ? getBaseline [androidJvm] open fun getBaseline (): Int getBottom [androidJvm] fun getBottom (): Int getBottomFadingEdgeStrength [androidJvm] open fun getBottomFadingEdgeStrength (): Float getBottomPaddingOffset [androidJvm] open fun getBottomPaddingOffset (): Int getCameraDistance [androidJvm] open fun getCameraDistance (): Float getChildAt [androidJvm] open fun getChildAt (p0: Int ): View getChildCount [androidJvm] open fun getChildCount (): Int getChildDrawingOrder [androidJvm] fun getChildDrawingOrder (p0: Int ): Int open fun getChildDrawingOrder (p0: Int , p1: Int ): Int getChildStaticTransformation [androidJvm] open fun getChildStaticTransformation (p0: View , p1: Transformation ): Boolean getChildVisibleRect [androidJvm] open override fun getChildVisibleRect (p0: View , p1: Rect , p2: Point ): Boolean getClipBounds [androidJvm] open fun getClipBounds (): Rect open fun getClipBounds (p0: Rect ): Boolean getClipChildren [androidJvm] open fun getClipChildren (): Boolean getClipToOutline [androidJvm] fun getClipToOutline (): Boolean getClipToPadding [androidJvm] open fun getClipToPadding (): Boolean getContentCaptureSession [androidJvm] fun getContentCaptureSession (): ContentCaptureSession ? getContentDescription [androidJvm] open fun getContentDescription (): CharSequence getContext [androidJvm] fun getContext (): Context getContextMenuInfo [androidJvm] open fun getContextMenuInfo (): ContextMenu.ContextMenuInfo getDefaultFocusHighlightEnabled [androidJvm] fun getDefaultFocusHighlightEnabled (): Boolean getDescendantFocusability [androidJvm] open fun getDescendantFocusability (): Int getDisplay [androidJvm] open fun getDisplay (): Display getDrawableState [androidJvm] fun getDrawableState (): IntArray getDrawingRect [androidJvm] open fun getDrawingRect (p0: Rect ) getDrawingTime [androidJvm] open fun getDrawingTime (): Long getElevation [androidJvm] open fun getElevation (): Float getExplicitStyle [androidJvm] open fun getExplicitStyle (): Int getFilterTouchesWhenObscured [androidJvm] open fun getFilterTouchesWhenObscured (): Boolean getFitsSystemWindows [androidJvm] open fun getFitsSystemWindows (): Boolean getFocusable [androidJvm] open fun getFocusable (): Int getFocusables [androidJvm] open fun getFocusables (p0: Int ): ArrayList < View > getFocusedChild [androidJvm] open fun getFocusedChild (): View getFocusedRect [androidJvm] open fun getFocusedRect (p0: Rect ) getForeground [androidJvm] open fun getForeground (): Drawable getForegroundGravity [androidJvm] open fun getForegroundGravity (): Int getForegroundTintBlendMode [androidJvm] open fun getForegroundTintBlendMode (): BlendMode ? getForegroundTintList [androidJvm] open fun getForegroundTintList (): ColorStateList ? getForegroundTintMode [androidJvm] open fun getForegroundTintMode (): PorterDuff.Mode ? getGlobalVisibleRect [androidJvm] fun getGlobalVisibleRect (p0: Rect ): Boolean open fun getGlobalVisibleRect (p0: Rect , p1: Point ): Boolean getHandler [androidJvm] open fun getHandler (): Handler getHasOverlappingRendering [androidJvm] fun getHasOverlappingRendering (): Boolean getHeight [androidJvm] fun getHeight (): Int getHitRect [androidJvm] open fun getHitRect (p0: Rect ) getHorizontalFadingEdgeLength [androidJvm] open fun getHorizontalFadingEdgeLength (): Int getHorizontalScrollbarHeight [androidJvm] open fun getHorizontalScrollbarHeight (): Int getHorizontalScrollbarThumbDrawable [androidJvm] open fun getHorizontalScrollbarThumbDrawable (): Drawable ? getHorizontalScrollbarTrackDrawable [androidJvm] open fun getHorizontalScrollbarTrackDrawable (): Drawable ? getId [androidJvm] open fun getId (): Int getImportantForAccessibility [androidJvm] open fun getImportantForAccessibility (): Int getImportantForAutofill [androidJvm] open fun getImportantForAutofill (): Int getImportantForContentCapture [androidJvm] open fun getImportantForContentCapture (): Int getKeepScreenOn [androidJvm] open fun getKeepScreenOn (): Boolean getKeyDispatcherState [androidJvm] open fun getKeyDispatcherState (): KeyEvent.DispatcherState getLabelFor [androidJvm] open fun getLabelFor (): Int getLayerType [androidJvm] open fun getLayerType (): Int getLayoutAnimation [androidJvm] open fun getLayoutAnimation (): LayoutAnimationController getLayoutAnimationListener [androidJvm] open fun getLayoutAnimationListener (): Animation.AnimationListener getLayoutDirection [androidJvm] open fun getLayoutDirection (): Int getLayoutMode [androidJvm] open fun getLayoutMode (): Int getLayoutParams [androidJvm] open fun getLayoutParams (): ViewGroup.LayoutParams getLayoutTransition [androidJvm] open fun getLayoutTransition (): LayoutTransition getLeft [androidJvm] fun getLeft (): Int getLeftFadingEdgeStrength [androidJvm] open fun getLeftFadingEdgeStrength (): Float getLeftPaddingOffset [androidJvm] open fun getLeftPaddingOffset (): Int getLocalVisibleRect [androidJvm] fun getLocalVisibleRect (p0: Rect ): Boolean getLocationInSurface [androidJvm] open fun getLocationInSurface (p0: IntArray ) getLocationInWindow [androidJvm] open fun getLocationInWindow (p0: IntArray ) getLocationOnScreen [androidJvm] open fun getLocationOnScreen (p0: IntArray ) getMatrix [androidJvm] open fun getMatrix (): Matrix getMeasureAllChildren [androidJvm] open fun getMeasureAllChildren (): Boolean getMeasuredHeight [androidJvm] fun getMeasuredHeight (): Int getMeasuredHeightAndState [androidJvm] fun getMeasuredHeightAndState (): Int getMeasuredState [androidJvm] fun getMeasuredState (): Int getMeasuredWidth [androidJvm] fun getMeasuredWidth (): Int getMeasuredWidthAndState [androidJvm] fun getMeasuredWidthAndState (): Int getMinimumHeight [androidJvm] open fun getMinimumHeight (): Int getMinimumWidth [androidJvm] open fun getMinimumWidth (): Int getNestedScrollAxes [androidJvm] open fun getNestedScrollAxes (): Int getNextClusterForwardId [androidJvm] open fun getNextClusterForwardId (): Int getNextFocusDownId [androidJvm] open fun getNextFocusDownId (): Int getNextFocusForwardId [androidJvm] open fun getNextFocusForwardId (): Int getNextFocusLeftId [androidJvm] open fun getNextFocusLeftId (): Int getNextFocusRightId [androidJvm] open fun getNextFocusRightId (): Int getNextFocusUpId [androidJvm] open fun getNextFocusUpId (): Int getOnFocusChangeListener [androidJvm] open fun getOnFocusChangeListener (): View.OnFocusChangeListener getOutlineAmbientShadowColor [androidJvm] open fun getOutlineAmbientShadowColor (): Int getOutlineProvider [androidJvm] open fun getOutlineProvider (): ViewOutlineProvider getOutlineSpotShadowColor [androidJvm] open fun getOutlineSpotShadowColor (): Int getOverlay [androidJvm] open override fun getOverlay (): ViewGroupOverlay getOverScrollMode [androidJvm] open fun getOverScrollMode (): Int getPaddingBottom [androidJvm] open fun getPaddingBottom (): Int getPaddingEnd [androidJvm] open fun getPaddingEnd (): Int getPaddingLeft [androidJvm] open fun getPaddingLeft (): Int getPaddingRight [androidJvm] open fun getPaddingRight (): Int getPaddingStart [androidJvm] open fun getPaddingStart (): Int getPaddingTop [androidJvm] open fun getPaddingTop (): Int getParent [androidJvm] fun getParent (): ViewParent getParentForAccessibility [androidJvm] open fun getParentForAccessibility (): ViewParent getPivotX [androidJvm] open fun getPivotX (): Float getPivotY [androidJvm] open fun getPivotY (): Float getPointerIcon [androidJvm] open fun getPointerIcon (): PointerIcon getReceiveContentMimeTypes [androidJvm] open fun getReceiveContentMimeTypes (): Array < String >? getResources [androidJvm] open fun getResources (): Resources getRevealOnFocusHint [androidJvm] fun getRevealOnFocusHint (): Boolean getRight [androidJvm] fun getRight (): Int getRightFadingEdgeStrength [androidJvm] open fun getRightFadingEdgeStrength (): Float getRightPaddingOffset [androidJvm] open fun getRightPaddingOffset (): Int getRootSurfaceControl [androidJvm] open fun getRootSurfaceControl (): AttachedSurfaceControl ? getRootView [androidJvm] open fun getRootView (): View getRootWindowInsets [androidJvm] open fun getRootWindowInsets (): WindowInsets getRotation [androidJvm] open fun getRotation (): Float getRotationX [androidJvm] open fun getRotationX (): Float getRotationY [androidJvm] open fun getRotationY (): Float getScaleX [androidJvm] open fun getScaleX (): Float getScaleY [androidJvm] open fun getScaleY (): Float getScrollBarDefaultDelayBeforeFade [androidJvm] open fun getScrollBarDefaultDelayBeforeFade (): Int getScrollBarFadeDuration [androidJvm] open fun getScrollBarFadeDuration (): Int getScrollBarSize [androidJvm] open fun getScrollBarSize (): Int getScrollBarStyle [androidJvm] open fun getScrollBarStyle (): Int getScrollCaptureHint [androidJvm] open fun getScrollCaptureHint (): Int getScrollIndicators [androidJvm] open fun getScrollIndicators (): Int getScrollX [androidJvm] fun getScrollX (): Int getScrollY [androidJvm] fun getScrollY (): Int getSolidColor [androidJvm] open fun getSolidColor (): Int getSourceLayoutResId [androidJvm] open fun getSourceLayoutResId (): Int getStateDescription [androidJvm] fun getStateDescription (): CharSequence ? getStateListAnimator [androidJvm] open fun getStateListAnimator (): StateListAnimator getSuggestedMinimumHeight [androidJvm] open fun getSuggestedMinimumHeight (): Int getSuggestedMinimumWidth [androidJvm] open fun getSuggestedMinimumWidth (): Int getSystemGestureExclusionRects [androidJvm] open fun getSystemGestureExclusionRects (): MutableList < Rect > getTag [androidJvm] open fun getTag (): Any open fun getTag (p0: Int ): Any getTextAlignment [androidJvm] open fun getTextAlignment (): Int getTextDirection [androidJvm] open fun getTextDirection (): Int getTooltipText [androidJvm] open fun getTooltipText (): CharSequence ? getTop [androidJvm] fun getTop (): Int getTopFadingEdgeStrength [androidJvm] open fun getTopFadingEdgeStrength (): Float getTopPaddingOffset [androidJvm] open fun getTopPaddingOffset (): Int getTouchables [androidJvm] open fun getTouchables (): ArrayList < View > getTouchDelegate [androidJvm] open fun getTouchDelegate (): TouchDelegate getTouchscreenBlocksFocus [androidJvm] open fun getTouchscreenBlocksFocus (): Boolean getTransitionAlpha [androidJvm] open fun getTransitionAlpha (): Float getTransitionName [androidJvm] open fun getTransitionName (): String getTranslationX [androidJvm] open fun getTranslationX (): Float getTranslationY [androidJvm] open fun getTranslationY (): Float getTranslationZ [androidJvm] open fun getTranslationZ (): Float getUniqueDrawingId [androidJvm] open fun getUniqueDrawingId (): Long getVerticalFadingEdgeLength [androidJvm] open fun getVerticalFadingEdgeLength (): Int getVerticalScrollbarPosition [androidJvm] open fun getVerticalScrollbarPosition (): Int getVerticalScrollbarThumbDrawable [androidJvm] open fun getVerticalScrollbarThumbDrawable (): Drawable ? getVerticalScrollbarTrackDrawable [androidJvm] open fun getVerticalScrollbarTrackDrawable (): Drawable ? getVerticalScrollbarWidth [androidJvm] open fun getVerticalScrollbarWidth (): Int getViewTranslationResponse [androidJvm] open fun getViewTranslationResponse (): ViewTranslationResponse ? getViewTreeObserver [androidJvm] open fun getViewTreeObserver (): ViewTreeObserver getVisibility [androidJvm] open fun getVisibility (): Int getWidth [androidJvm] fun getWidth (): Int getWindowAttachCount [androidJvm] open fun getWindowAttachCount (): Int getWindowId [androidJvm] open fun getWindowId (): WindowId getWindowInsetsController [androidJvm] open fun getWindowInsetsController (): WindowInsetsController ? getWindowToken [androidJvm] open fun getWindowToken (): IBinder getWindowVisibility [androidJvm] open fun getWindowVisibility (): Int getWindowVisibleDisplayFrame [androidJvm] open fun getWindowVisibleDisplayFrame (p0: Rect ) getX [androidJvm] open fun getX (): Float getY [androidJvm] open fun getY (): Float getZ [androidJvm] open fun getZ (): Float hasExplicitFocusable [androidJvm] open fun hasExplicitFocusable (): Boolean hasFocus [androidJvm] open override fun hasFocus (): Boolean hasFocusable [androidJvm] open fun hasFocusable (): Boolean hasNestedScrollingParent [androidJvm] open fun hasNestedScrollingParent (): Boolean hasOnClickListeners [androidJvm] open fun hasOnClickListeners (): Boolean hasOnLongClickListeners [androidJvm] open fun hasOnLongClickListeners (): Boolean hasOverlappingRendering [androidJvm] open fun hasOverlappingRendering (): Boolean hasPointerCapture [androidJvm] open fun hasPointerCapture (): Boolean hasTransientState [androidJvm] open override fun hasTransientState (): Boolean hasWindowFocus [androidJvm] open fun hasWindowFocus (): Boolean indexOfChild [androidJvm] open fun indexOfChild (p0: View ): Int invalidate [androidJvm] open fun invalidate () invalidateDrawable [androidJvm] open override fun invalidateDrawable (p0: Drawable ) invalidateOutline [androidJvm] open fun invalidateOutline () isAccessibilityFocused [androidJvm] open fun isAccessibilityFocused (): Boolean isAccessibilityHeading [androidJvm] open fun isAccessibilityHeading (): Boolean isActivated [androidJvm] open fun isActivated (): Boolean isAttachedToWindow [androidJvm] open fun isAttachedToWindow (): Boolean isChildrenDrawingOrderEnabled [androidJvm] open fun isChildrenDrawingOrderEnabled (): Boolean isClickable [androidJvm] open fun isClickable (): Boolean isContextClickable [androidJvm] open fun isContextClickable (): Boolean isDirty [androidJvm] open fun isDirty (): Boolean isDuplicateParentStateEnabled [androidJvm] open fun isDuplicateParentStateEnabled (): Boolean isEnabled [androidJvm] open fun isEnabled (): Boolean isFocusable [androidJvm] fun isFocusable (): Boolean isFocusableInTouchMode [androidJvm] fun isFocusableInTouchMode (): Boolean isFocused [androidJvm] open fun isFocused (): Boolean isFocusedByDefault [androidJvm] fun isFocusedByDefault (): Boolean isForceDarkAllowed [androidJvm] open fun isForceDarkAllowed (): Boolean isHapticFeedbackEnabled [androidJvm] open fun isHapticFeedbackEnabled (): Boolean isHardwareAccelerated [androidJvm] open fun isHardwareAccelerated (): Boolean isHorizontalFadingEdgeEnabled [androidJvm] open fun isHorizontalFadingEdgeEnabled (): Boolean isHorizontalScrollBarEnabled [androidJvm] open fun isHorizontalScrollBarEnabled (): Boolean isHovered [androidJvm] open fun isHovered (): Boolean isImportantForAccessibility [androidJvm] open fun isImportantForAccessibility (): Boolean isImportantForAutofill [androidJvm] fun isImportantForAutofill (): Boolean isImportantForContentCapture [androidJvm] fun isImportantForContentCapture (): Boolean isInEditMode [androidJvm] open fun isInEditMode (): Boolean isInLayout [androidJvm] open fun isInLayout (): Boolean isInTouchMode [androidJvm] open fun isInTouchMode (): Boolean isKeyboardNavigationCluster [androidJvm] fun isKeyboardNavigationCluster (): Boolean isLaidOut [androidJvm] open fun isLaidOut (): Boolean isLayoutDirectionResolved [androidJvm] open fun isLayoutDirectionResolved (): Boolean isLayoutRequested [androidJvm] open fun isLayoutRequested (): Boolean isLayoutSuppressed [androidJvm] open fun isLayoutSuppressed (): Boolean isLongClickable [androidJvm] open fun isLongClickable (): Boolean isMotionEventSplittingEnabled [androidJvm] open fun isMotionEventSplittingEnabled (): Boolean isNestedScrollingEnabled [androidJvm] open fun isNestedScrollingEnabled (): Boolean isOpaque [androidJvm] open fun isOpaque (): Boolean isPaddingOffsetRequired [androidJvm] open fun isPaddingOffsetRequired (): Boolean isPaddingRelative [androidJvm] open fun isPaddingRelative (): Boolean isPivotSet [androidJvm] open fun isPivotSet (): Boolean isPressed [androidJvm] open fun isPressed (): Boolean isSaveEnabled [androidJvm] open fun isSaveEnabled (): Boolean isSaveFromParentEnabled [androidJvm] open fun isSaveFromParentEnabled (): Boolean isScreenReaderFocusable [androidJvm] open fun isScreenReaderFocusable (): Boolean isScrollbarFadingEnabled [androidJvm] open fun isScrollbarFadingEnabled (): Boolean isScrollContainer [androidJvm] open fun isScrollContainer (): Boolean isSelected [androidJvm] open fun isSelected (): Boolean isShowingLayoutBounds [androidJvm] fun isShowingLayoutBounds (): Boolean isShown [androidJvm] open fun isShown (): Boolean isSoundEffectsEnabled [androidJvm] open fun isSoundEffectsEnabled (): Boolean isTemporarilyDetached [androidJvm] fun isTemporarilyDetached (): Boolean isTextAlignmentResolved [androidJvm] open fun isTextAlignmentResolved (): Boolean isTextDirectionResolved [androidJvm] open fun isTextDirectionResolved (): Boolean isTransitionGroup [androidJvm] open fun isTransitionGroup (): Boolean isVerticalFadingEdgeEnabled [androidJvm] open fun isVerticalFadingEdgeEnabled (): Boolean isVerticalScrollBarEnabled [androidJvm] open fun isVerticalScrollBarEnabled (): Boolean isVisibleToUserForAutofill [androidJvm] open fun isVisibleToUserForAutofill (p0: Int ): Boolean jumpDrawablesToCurrentState [androidJvm] open override fun jumpDrawablesToCurrentState () keyboardNavigationClusterSearch [androidJvm] open fun keyboardNavigationClusterSearch (p0: View , p1: Int ): View layout [androidJvm] override fun layout (p0: Int , p1: Int , p2: Int , p3: Int ) measure [androidJvm] fun measure (p0: Int , p1: Int ) measureChild [androidJvm] open fun measureChild (p0: View , p1: Int , p2: Int ) measureChildren [androidJvm] open fun measureChildren (p0: Int , p1: Int ) measureChildWithMargins [androidJvm] open fun measureChildWithMargins (p0: View , p1: Int , p2: Int , p3: Int , p4: Int ) notifySubtreeAccessibilityStateChanged [androidJvm] open override fun notifySubtreeAccessibilityStateChanged (p0: View , p1: View , p2: Int ) offsetDescendantRectToMyCoords [androidJvm] fun offsetDescendantRectToMyCoords (p0: View , p1: Rect ) offsetLeftAndRight [androidJvm] open fun offsetLeftAndRight (p0: Int ) offsetRectIntoDescendantCoords [androidJvm] fun offsetRectIntoDescendantCoords (p0: View , p1: Rect ) offsetTopAndBottom [androidJvm] open fun offsetTopAndBottom (p0: Int ) onAnimationEnd [androidJvm] open fun onAnimationEnd () onAnimationStart [androidJvm] open fun onAnimationStart () onApplyWindowInsets [androidJvm] open fun onApplyWindowInsets (p0: WindowInsets ): WindowInsets onAttachedToWindow [androidJvm] open override fun onAttachedToWindow () onCancelPendingInputEvents [androidJvm] open fun onCancelPendingInputEvents () onCapturedPointerEvent [androidJvm] open fun onCapturedPointerEvent (p0: MotionEvent ): Boolean onCheckIsTextEditor [androidJvm] open fun onCheckIsTextEditor (): Boolean onConfigurationChanged [androidJvm] open fun onConfigurationChanged (p0: Configuration ) onCreateContextMenu [androidJvm] open fun onCreateContextMenu (p0: ContextMenu ) onCreateDrawableState [androidJvm] open override fun onCreateDrawableState (p0: Int ): IntArray onCreateInputConnection [androidJvm] open fun onCreateInputConnection (p0: EditorInfo ): InputConnection onCreateViewTranslationRequest [androidJvm] open fun onCreateViewTranslationRequest (p0: IntArray , p1: Consumer < ViewTranslationRequest >) onCreateVirtualViewTranslationRequests [androidJvm] open fun onCreateVirtualViewTranslationRequests (p0: LongArray , p1: IntArray , p2: Consumer < ViewTranslationRequest >) onDescendantInvalidated [androidJvm] open override fun onDescendantInvalidated (p0: View , p1: View ) onDisplayHint [androidJvm] open fun onDisplayHint (p0: Int ) onDragEvent [androidJvm] open fun onDragEvent (p0: DragEvent ): Boolean onDraw [androidJvm] open fun onDraw (p0: Canvas ) onDrawForeground [androidJvm] open fun onDrawForeground (p0: Canvas ) onDrawScrollBars [androidJvm] fun onDrawScrollBars (p0: Canvas ) onFilterTouchEventForSecurity [androidJvm] open fun onFilterTouchEventForSecurity (p0: MotionEvent ): Boolean onFinishInflate [androidJvm] open fun onFinishInflate () onFinishTemporaryDetach [androidJvm] open fun onFinishTemporaryDetach () onFocusChanged [androidJvm] open fun onFocusChanged (p0: Boolean , p1: Int , p2: Rect ?) onGenericMotionEvent [androidJvm] open fun onGenericMotionEvent (p0: MotionEvent ): Boolean onHoverChanged [androidJvm] open fun onHoverChanged (p0: Boolean ) onHoverEvent [androidJvm] open fun onHoverEvent (p0: MotionEvent ): Boolean onInitializeAccessibilityEvent [androidJvm] open fun onInitializeAccessibilityEvent (p0: AccessibilityEvent ) onInitializeAccessibilityNodeInfo [androidJvm] open fun onInitializeAccessibilityNodeInfo (p0: AccessibilityNodeInfo ) onInterceptHoverEvent [androidJvm] open fun onInterceptHoverEvent (p0: MotionEvent ): Boolean onInterceptTouchEvent [androidJvm] open override fun onInterceptTouchEvent (ev: MotionEvent ): Boolean onKeyDown [androidJvm] open override fun onKeyDown (p0: Int , p1: KeyEvent ): Boolean onKeyLongPress [androidJvm] open override fun onKeyLongPress (p0: Int , p1: KeyEvent ): Boolean onKeyMultiple [androidJvm] open override fun onKeyMultiple (p0: Int , p1: Int , p2: KeyEvent ): Boolean onKeyPreIme [androidJvm] open fun onKeyPreIme (p0: Int , p1: KeyEvent ): Boolean onKeyShortcut [androidJvm] open fun onKeyShortcut (p0: Int , p1: KeyEvent ): Boolean onKeyUp [androidJvm] open override fun onKeyUp (p0: Int , p1: KeyEvent ): Boolean onLayout [androidJvm] open override fun onLayout (p0: Boolean , p1: Int , p2: Int , p3: Int , p4: Int ) onMeasure [androidJvm] open override fun onMeasure (p0: Int , p1: Int ) onNestedFling [androidJvm] open override fun onNestedFling (p0: View , p1: Float , p2: Float , p3: Boolean ): Boolean onNestedPreFling [androidJvm] open override fun onNestedPreFling (p0: View , p1: Float , p2: Float ): Boolean onNestedPrePerformAccessibilityAction [androidJvm] open override fun onNestedPrePerformAccessibilityAction (p0: View , p1: Int , p2: Bundle ): Boolean onNestedPreScroll [androidJvm] open override fun onNestedPreScroll (p0: View , p1: Int , p2: Int , p3: IntArray ) onNestedScroll [androidJvm] open override fun onNestedScroll (p0: View , p1: Int , p2: Int , p3: Int , p4: Int ) onNestedScrollAccepted [androidJvm] open override fun onNestedScrollAccepted (p0: View , p1: View , p2: Int ) onOverScrolled [androidJvm] open fun onOverScrolled (p0: Int , p1: Int , p2: Boolean , p3: Boolean ) onPointerCaptureChange [androidJvm] open fun onPointerCaptureChange (p0: Boolean ) onPopulateAccessibilityEvent [androidJvm] open fun onPopulateAccessibilityEvent (p0: AccessibilityEvent ) onProvideAutofillStructure [androidJvm] open fun onProvideAutofillStructure (p0: ViewStructure , p1: Int ) onProvideAutofillVirtualStructure [androidJvm] open fun onProvideAutofillVirtualStructure (p0: ViewStructure , p1: Int ) onProvideContentCaptureStructure [androidJvm] open fun onProvideContentCaptureStructure (p0: ViewStructure , p1: Int ) onProvideStructure [androidJvm] open fun onProvideStructure (p0: ViewStructure ) onProvideVirtualStructure [androidJvm] open fun onProvideVirtualStructure (p0: ViewStructure ) onReceiveContent [androidJvm] open fun onReceiveContent (p0: ContentInfo ): ContentInfo ? onRequestFocusInDescendants [androidJvm] open fun onRequestFocusInDescendants (p0: Int , p1: Rect ): Boolean onRequestSendAccessibilityEvent [androidJvm] open fun onRequestSendAccessibilityEvent (p0: View , p1: AccessibilityEvent ): Boolean onResolvePointerIcon [androidJvm] open override fun onResolvePointerIcon (p0: MotionEvent , p1: Int ): PointerIcon onRestoreInstanceState [androidJvm] open fun onRestoreInstanceState (p0: Parcelable ) onRtlPropertiesChanged [androidJvm] open fun onRtlPropertiesChanged (p0: Int ) onSaveInstanceState [androidJvm] open fun onSaveInstanceState (): Parcelable ? onScreenStateChanged [androidJvm] open fun onScreenStateChanged (p0: Int ) onScrollCaptureSearch [androidJvm] open fun onScrollCaptureSearch (p0: Rect , p1: Point , p2: Consumer < ScrollCaptureTarget >) onScrollChanged [androidJvm] open fun onScrollChanged (p0: Int , p1: Int , p2: Int , p3: Int ) onSetAlpha [androidJvm] open fun onSetAlpha (p0: Int ): Boolean onSizeChanged [androidJvm] open fun onSizeChanged (p0: Int , p1: Int , p2: Int , p3: Int ) onStartNestedScroll [androidJvm] open override fun onStartNestedScroll (p0: View , p1: View , p2: Int ): Boolean onStartTemporaryDetach [androidJvm] open fun onStartTemporaryDetach () onStopNestedScroll [androidJvm] open override fun onStopNestedScroll (p0: View ) onTouchEvent [androidJvm] open override fun onTouchEvent (ev: MotionEvent ): Boolean onTrackballEvent [androidJvm] open fun onTrackballEvent (p0: MotionEvent ): Boolean onViewAdded [androidJvm] open fun onViewAdded (p0: View ) onViewRemoved [androidJvm] open fun onViewRemoved (p0: View ) onViewTranslationResponse [androidJvm] open fun onViewTranslationResponse (p0: ViewTranslationResponse ) onVirtualViewTranslationResponses [androidJvm] open fun onVirtualViewTranslationResponses (p0: LongSparseArray < ViewTranslationResponse >) onVisibilityAggregated [androidJvm] open fun onVisibilityAggregated (p0: Boolean ) onVisibilityChanged [androidJvm] open fun onVisibilityChanged (p0: View , p1: Int ) onWindowFocusChanged [androidJvm] open fun onWindowFocusChanged (p0: Boolean ) onWindowVisibilityChanged [androidJvm] open fun onWindowVisibilityChanged (p0: Int ) overScrollBy [androidJvm] open fun overScrollBy (p0: Int , p1: Int , p2: Int , p3: Int , p4: Int , p5: Int , p6: Int , p7: Int , p8: Boolean ): Boolean performAccessibilityAction [androidJvm] open fun performAccessibilityAction (p0: Int , p1: Bundle ): Boolean performClick [androidJvm] open fun performClick (): Boolean performContextClick [androidJvm] open fun performContextClick (): Boolean open fun performContextClick (p0: Float , p1: Float ): Boolean performHapticFeedback [androidJvm] open fun performHapticFeedback (p0: Int ): Boolean open fun performHapticFeedback (p0: Int , p1: Int ): Boolean performLongClick [androidJvm] open fun performLongClick (): Boolean open fun performLongClick (p0: Float , p1: Float ): Boolean performReceiveContent [androidJvm] open fun performReceiveContent (p0: ContentInfo ): ContentInfo ? playSoundEffect [androidJvm] open fun playSoundEffect (p0: Int ) post [androidJvm] open fun post (p0: Runnable ): Boolean postDelayed [androidJvm] open fun postDelayed (p0: Runnable , p1: Long ): Boolean postInvalidate [androidJvm] open fun postInvalidate () open fun postInvalidate (p0: Int , p1: Int , p2: Int , p3: Int ) postInvalidateDelayed [androidJvm] open fun postInvalidateDelayed (p0: Long ) open fun postInvalidateDelayed (p0: Long , p1: Int , p2: Int , p3: Int , p4: Int ) postInvalidateOnAnimation [androidJvm] open fun postInvalidateOnAnimation () open fun postInvalidateOnAnimation (p0: Int , p1: Int , p2: Int , p3: Int ) postOnAnimation [androidJvm] open fun postOnAnimation (p0: Runnable ) postOnAnimationDelayed [androidJvm] open fun postOnAnimationDelayed (p0: Runnable , p1: Long ) recomputeViewAttributes [androidJvm] open override fun recomputeViewAttributes (p0: View ) refreshDrawableState [androidJvm] open fun refreshDrawableState () releasePointerCapture [androidJvm] open fun releasePointerCapture () removeAllViews [androidJvm] open fun removeAllViews () removeAllViewsInLayout [androidJvm] open fun removeAllViewsInLayout () removeCallbacks [androidJvm] open fun removeCallbacks (p0: Runnable ): Boolean removeDetachedView [androidJvm] open fun removeDetachedView (p0: View , p1: Boolean ) removeOnAttachStateChangeListener [androidJvm] open fun removeOnAttachStateChangeListener (p0: View.OnAttachStateChangeListener ) removeOnLayoutChangeListener [androidJvm] open fun removeOnLayoutChangeListener (p0: View.OnLayoutChangeListener ) removeOnUnhandledKeyEventListener [androidJvm] open fun removeOnUnhandledKeyEventListener (p0: View.OnUnhandledKeyEventListener ) removeView [androidJvm] open override fun removeView (p0: View ) removeViewAt [androidJvm] open fun removeViewAt (p0: Int ) removeViewInLayout [androidJvm] open fun removeViewInLayout (p0: View ) removeViews [androidJvm] open fun removeViews (p0: Int , p1: Int ) removeViewsInLayout [androidJvm] open fun removeViewsInLayout (p0: Int , p1: Int ) requestApplyInsets [androidJvm] open fun requestApplyInsets () requestChildFocus [androidJvm] open override fun requestChildFocus (p0: View , p1: View ) requestChildRectangleOnScreen [androidJvm] open override fun requestChildRectangleOnScreen (p0: View , p1: Rect , p2: Boolean ): Boolean requestDisallowInterceptTouchEvent [androidJvm] open override fun requestDisallowInterceptTouchEvent (p0: Boolean ) requestFocus [androidJvm] fun requestFocus (): Boolean fun requestFocus (p0: Int ): Boolean open override fun requestFocus (p0: Int , p1: Rect ): Boolean requestFocusFromTouch [androidJvm] fun requestFocusFromTouch (): Boolean requestLayout [androidJvm] open fun requestLayout () requestPointerCapture [androidJvm] open fun requestPointerCapture () requestRectangleOnScreen [androidJvm] open fun requestRectangleOnScreen (p0: Rect ): Boolean open fun requestRectangleOnScreen (p0: Rect , p1: Boolean ): Boolean requestSendAccessibilityEvent [androidJvm] open override fun requestSendAccessibilityEvent (p0: View , p1: AccessibilityEvent ): Boolean requestTransparentRegion [androidJvm] open override fun requestTransparentRegion (p0: View ) requestUnbufferedDispatch [androidJvm] fun requestUnbufferedDispatch (p0: MotionEvent ) fun requestUnbufferedDispatch (p0: Int ) requireViewById [androidJvm] fun < T : View > requireViewById (p0: Int ): T resetPivot [androidJvm] open fun resetPivot () restoreDefaultFocus [androidJvm] open override fun restoreDefaultFocus (): Boolean restoreHierarchyState [androidJvm] open fun restoreHierarchyState (p0: SparseArray < Parcelable >) saveAttributeDataForStyleable [androidJvm] fun saveAttributeDataForStyleable (p0: Context , p1: IntArray , p2: AttributeSet ?, p3: TypedArray , p4: Int , p5: Int ) saveHierarchyState [androidJvm] open fun saveHierarchyState (p0: SparseArray < Parcelable >) scheduleDrawable [androidJvm] open override fun scheduleDrawable (p0: Drawable , p1: Runnable , p2: Long ) scheduleLayoutAnimation [androidJvm] open fun scheduleLayoutAnimation () scrollBy [androidJvm] open fun scrollBy (p0: Int , p1: Int ) scrollTo [androidJvm] open fun scrollTo (p0: Int , p1: Int ) sendAccessibilityEvent [androidJvm] open override fun sendAccessibilityEvent (p0: Int ) sendAccessibilityEventUnchecked [androidJvm] open override fun sendAccessibilityEventUnchecked (p0: AccessibilityEvent ) setAccessibilityDelegate [androidJvm] open fun setAccessibilityDelegate (p0: View.AccessibilityDelegate ?) setAccessibilityHeading [androidJvm] open fun setAccessibilityHeading (p0: Boolean ) setAccessibilityLiveRegion [androidJvm] open fun setAccessibilityLiveRegion (p0: Int ) setAccessibilityPaneTitle [androidJvm] open fun setAccessibilityPaneTitle (p0: CharSequence ?) setAccessibilityTraversalAfter [androidJvm] open fun setAccessibilityTraversalAfter (p0: Int ) setAccessibilityTraversalBefore [androidJvm] open fun setAccessibilityTraversalBefore (p0: Int ) setActivated [androidJvm] open fun setActivated (p0: Boolean ) setAddStatesFromChildren [androidJvm] open fun setAddStatesFromChildren (p0: Boolean ) setAllowClickWhenDisabled [androidJvm] open fun setAllowClickWhenDisabled (p0: Boolean ) setAlpha [androidJvm] open fun setAlpha (p0: Float ) setAnimation [androidJvm] open fun setAnimation (p0: Animation ) setAnimationMatrix [androidJvm] open fun setAnimationMatrix (p0: Matrix ?) setAutofillHints [androidJvm] open fun setAutofillHints (vararg p0: String ) setAutofillId [androidJvm] open fun setAutofillId (p0: AutofillId ?) setBackground [androidJvm] open fun setBackground (p0: Drawable ) setBackgroundColor [androidJvm] open fun setBackgroundColor (p0: Int ) setBackgroundResource [androidJvm] open fun setBackgroundResource (p0: Int ) setBackgroundTintBlendMode [androidJvm] open fun setBackgroundTintBlendMode (p0: BlendMode ?) setBackgroundTintList [androidJvm] open fun setBackgroundTintList (p0: ColorStateList ?) setBackgroundTintMode [androidJvm] open fun setBackgroundTintMode (p0: PorterDuff.Mode ?) setBottom [androidJvm] fun setBottom (p0: Int ) setCameraDistance [androidJvm] open fun setCameraDistance (p0: Float ) setChildrenDrawingOrderEnabled [androidJvm] open fun setChildrenDrawingOrderEnabled (p0: Boolean ) setClickable [androidJvm] open fun setClickable (p0: Boolean ) setClipBounds [androidJvm] open fun setClipBounds (p0: Rect ) setClipChildren [androidJvm] open fun setClipChildren (p0: Boolean ) setClipToOutline [androidJvm] open fun setClipToOutline (p0: Boolean ) setClipToPadding [androidJvm] open fun setClipToPadding (p0: Boolean ) setContentCaptureSession [androidJvm] open fun setContentCaptureSession (p0: ContentCaptureSession ?) setContentDescription [androidJvm] open fun setContentDescription (p0: CharSequence ) setContextClickable [androidJvm] open fun setContextClickable (p0: Boolean ) setDefaultFocusHighlightEnabled [androidJvm] open fun setDefaultFocusHighlightEnabled (p0: Boolean ) setDescendantFocusability [androidJvm] open fun setDescendantFocusability (p0: Int ) setDuplicateParentStateEnabled [androidJvm] open fun setDuplicateParentStateEnabled (p0: Boolean ) setElevation [androidJvm] open fun setElevation (p0: Float ) setEnabled [androidJvm] open fun setEnabled (p0: Boolean ) setFadingEdgeLength [androidJvm] open fun setFadingEdgeLength (p0: Int ) setFilterTouchesWhenObscured [androidJvm] open fun setFilterTouchesWhenObscured (p0: Boolean ) setFitsSystemWindows [androidJvm] open fun setFitsSystemWindows (p0: Boolean ) setFocusable [androidJvm] open fun setFocusable (p0: Boolean ) open fun setFocusable (p0: Int ) setFocusableInTouchMode [androidJvm] open fun setFocusableInTouchMode (p0: Boolean ) setFocusedByDefault [androidJvm] open fun setFocusedByDefault (p0: Boolean ) setForceDarkAllowed [androidJvm] open fun setForceDarkAllowed (p0: Boolean ) setForeground [androidJvm] open fun setForeground (p0: Drawable ) setForegroundGravity [androidJvm] open override fun setForegroundGravity (p0: Int ) setForegroundTintBlendMode [androidJvm] open fun setForegroundTintBlendMode (p0: BlendMode ?) setForegroundTintList [androidJvm] open fun setForegroundTintList (p0: ColorStateList ?) setForegroundTintMode [androidJvm] open fun setForegroundTintMode (p0: PorterDuff.Mode ?) setHapticFeedbackEnabled [androidJvm] open fun setHapticFeedbackEnabled (p0: Boolean ) setHasTransientState [androidJvm] open fun setHasTransientState (p0: Boolean ) setHorizontalFadingEdgeEnabled [androidJvm] open fun setHorizontalFadingEdgeEnabled (p0: Boolean ) setHorizontalScrollBarEnabled [androidJvm] open fun setHorizontalScrollBarEnabled (p0: Boolean ) setHorizontalScrollbarThumbDrawable [androidJvm] open fun setHorizontalScrollbarThumbDrawable (p0: Drawable ?) setHorizontalScrollbarTrackDrawable [androidJvm] open fun setHorizontalScrollbarTrackDrawable (p0: Drawable ?) setHovered [androidJvm] open fun setHovered (p0: Boolean ) setId [androidJvm] open fun setId (p0: Int ) setImportantForAccessibility [androidJvm] open fun setImportantForAccessibility (p0: Int ) setImportantForAutofill [androidJvm] open fun setImportantForAutofill (p0: Int ) setImportantForContentCapture [androidJvm] open fun setImportantForContentCapture (p0: Int ) setKeepScreenOn [androidJvm] open fun setKeepScreenOn (p0: Boolean ) setKeyboardNavigationCluster [androidJvm] open fun setKeyboardNavigationCluster (p0: Boolean ) setLabelFor [androidJvm] open fun setLabelFor (p0: Int ) setLayerPaint [androidJvm] open fun setLayerPaint (p0: Paint ?) setLayerType [androidJvm] open fun setLayerType (p0: Int , p1: Paint ?) setLayoutAnimation [androidJvm] open fun setLayoutAnimation (p0: LayoutAnimationController ) setLayoutAnimationListener [androidJvm] open fun setLayoutAnimationListener (p0: Animation.AnimationListener ) setLayoutDirection [androidJvm] open fun setLayoutDirection (p0: Int ) setLayoutMode [androidJvm] open fun setLayoutMode (p0: Int ) setLayoutParams [androidJvm] open fun setLayoutParams (p0: ViewGroup.LayoutParams ) setLayoutTransition [androidJvm] open fun setLayoutTransition (p0: LayoutTransition ) setLeft [androidJvm] fun setLeft (p0: Int ) setLeftTopRightBottom [androidJvm] fun setLeftTopRightBottom (p0: Int , p1: Int , p2: Int , p3: Int ) setLongClickable [androidJvm] open fun setLongClickable (p0: Boolean ) setMeasureAllChildren [androidJvm] open fun setMeasureAllChildren (p0: Boolean ) setMeasuredDimension [androidJvm] fun setMeasuredDimension (p0: Int , p1: Int ) setMinimumHeight [androidJvm] open fun setMinimumHeight (p0: Int ) setMinimumWidth [androidJvm] open fun setMinimumWidth (p0: Int ) setMotionEventSplittingEnabled [androidJvm] open fun setMotionEventSplittingEnabled (p0: Boolean ) setNestedScrollingEnabled [androidJvm] open fun setNestedScrollingEnabled (p0: Boolean ) setNextClusterForwardId [androidJvm] open fun setNextClusterForwardId (p0: Int ) setNextFocusDownId [androidJvm] open fun setNextFocusDownId (p0: Int ) setNextFocusForwardId [androidJvm] open fun setNextFocusForwardId (p0: Int ) setNextFocusLeftId [androidJvm] open fun setNextFocusLeftId (p0: Int ) setNextFocusRightId [androidJvm] open fun setNextFocusRightId (p0: Int ) setNextFocusUpId [androidJvm] open fun setNextFocusUpId (p0: Int ) setOnApplyWindowInsetsListener [androidJvm] open fun setOnApplyWindowInsetsListener (p0: View.OnApplyWindowInsetsListener ) setOnCapturedPointerListener [androidJvm] open fun setOnCapturedPointerListener (p0: View.OnCapturedPointerListener ) setOnClickListener [androidJvm] open override fun setOnClickListener (l: View.OnClickListener ?) setOnContextClickListener [androidJvm] open fun setOnContextClickListener (p0: View.OnContextClickListener ?) setOnCreateContextMenuListener [androidJvm] open fun setOnCreateContextMenuListener (p0: View.OnCreateContextMenuListener ) setOnDragListener [androidJvm] open fun setOnDragListener (p0: View.OnDragListener ) setOnFocusChangeListener [androidJvm] open fun setOnFocusChangeListener (p0: View.OnFocusChangeListener ) setOnGenericMotionListener [androidJvm] open fun setOnGenericMotionListener (p0: View.OnGenericMotionListener ) setOnHierarchyChangeListener [androidJvm] open fun setOnHierarchyChangeListener (p0: ViewGroup.OnHierarchyChangeListener ) setOnHoverListener [androidJvm] open fun setOnHoverListener (p0: View.OnHoverListener ) setOnKeyListener [androidJvm] open fun setOnKeyListener (p0: View.OnKeyListener ) setOnLongClickListener [androidJvm] open override fun setOnLongClickListener (l: View.OnLongClickListener ?) setOnReceiveContentListener [androidJvm] open fun setOnReceiveContentListener (p0: Array < String >?, p1: OnReceiveContentListener ?) setOnScrollChangeListener [androidJvm] open fun setOnScrollChangeListener (p0: View.OnScrollChangeListener ) setOnTouchListener [androidJvm] open override fun setOnTouchListener (l: View.OnTouchListener ) setOutlineAmbientShadowColor [androidJvm] open fun setOutlineAmbientShadowColor (p0: Int ) setOutlineProvider [androidJvm] open fun setOutlineProvider (p0: ViewOutlineProvider ) setOutlineSpotShadowColor [androidJvm] open fun setOutlineSpotShadowColor (p0: Int ) setOverScrollMode [androidJvm] open fun setOverScrollMode (p0: Int ) setPadding [androidJvm] open fun setPadding (p0: Int , p1: Int , p2: Int , p3: Int ) setPaddingRelative [androidJvm] open fun setPaddingRelative (p0: Int , p1: Int , p2: Int , p3: Int ) setPivotX [androidJvm] open fun setPivotX (p0: Float ) setPivotY [androidJvm] open fun setPivotY (p0: Float ) setPointerIcon [androidJvm] open fun setPointerIcon (p0: PointerIcon ) setPressed [androidJvm] open fun setPressed (p0: Boolean ) setRenderEffect [androidJvm] open fun setRenderEffect (p0: RenderEffect ?) setRevealOnFocusHint [androidJvm] fun setRevealOnFocusHint (p0: Boolean ) setRight [androidJvm] fun setRight (p0: Int ) setRotation [androidJvm] open fun setRotation (p0: Float ) setRotationX [androidJvm] open fun setRotationX (p0: Float ) setRotationY [androidJvm] open fun setRotationY (p0: Float ) setSaveEnabled [androidJvm] open fun setSaveEnabled (p0: Boolean ) setSaveFromParentEnabled [androidJvm] open fun setSaveFromParentEnabled (p0: Boolean ) setScale [androidJvm] fun setScale (scale: Float , animate: Boolean ) fun setScale (scale_in: Float , focusX: Float , focusY: Float , animate: Boolean ) setScaleX [androidJvm] open fun setScaleX (p0: Float ) setScaleY [androidJvm] open fun setScaleY (p0: Float ) setScreenReaderFocusable [androidJvm] open fun setScreenReaderFocusable (p0: Boolean ) setScrollBarDefaultDelayBeforeFade [androidJvm] open fun setScrollBarDefaultDelayBeforeFade (p0: Int ) setScrollBarFadeDuration [androidJvm] open fun setScrollBarFadeDuration (p0: Int ) setScrollbarFadingEnabled [androidJvm] open fun setScrollbarFadingEnabled (p0: Boolean ) setScrollBarSize [androidJvm] open fun setScrollBarSize (p0: Int ) setScrollBarStyle [androidJvm] open fun setScrollBarStyle (p0: Int ) setScrollCaptureCallback [androidJvm] fun setScrollCaptureCallback (p0: ScrollCaptureCallback ?) setScrollCaptureHint [androidJvm] open fun setScrollCaptureHint (p0: Int ) setScrollContainer [androidJvm] open fun setScrollContainer (p0: Boolean ) setScrollIndicators [androidJvm] open fun setScrollIndicators (p0: Int ) open fun setScrollIndicators (p0: Int , p1: Int ) setScrollX [androidJvm] open fun setScrollX (p0: Int ) setScrollY [androidJvm] open fun setScrollY (p0: Int ) setSelected [androidJvm] open fun setSelected (p0: Boolean ) setSoundEffectsEnabled [androidJvm] open fun setSoundEffectsEnabled (p0: Boolean ) setStateDescription [androidJvm] open fun setStateDescription (p0: CharSequence ?) setStateListAnimator [androidJvm] open fun setStateListAnimator (p0: StateListAnimator ) setStaticTransformationsEnabled [androidJvm] open fun setStaticTransformationsEnabled (p0: Boolean ) setSystemGestureExclusionRects [androidJvm] open fun setSystemGestureExclusionRects (p0: MutableList < Rect >) setTag [androidJvm] open fun setTag (p0: Any ) open fun setTag (p0: Int , p1: Any ) setTextAlignment [androidJvm] open fun setTextAlignment (p0: Int ) setTextDirection [androidJvm] open fun setTextDirection (p0: Int ) setTooltipText [androidJvm] open fun setTooltipText (p0: CharSequence ?) setTop [androidJvm] fun setTop (p0: Int ) setTouchDelegate [androidJvm] open fun setTouchDelegate (p0: TouchDelegate ) setTouchscreenBlocksFocus [androidJvm] open fun setTouchscreenBlocksFocus (p0: Boolean ) setTransitionAlpha [androidJvm] open fun setTransitionAlpha (p0: Float ) setTransitionGroup [androidJvm] open fun setTransitionGroup (p0: Boolean ) setTransitionName [androidJvm] fun setTransitionName (p0: String ) setTransitionVisibility [androidJvm] open fun setTransitionVisibility (p0: Int ) setTranslationX [androidJvm] open fun setTranslationX (p0: Float ) setTranslationY [androidJvm] open fun setTranslationY (p0: Float ) setTranslationZ [androidJvm] open fun setTranslationZ (p0: Float ) setVerticalFadingEdgeEnabled [androidJvm] open fun setVerticalFadingEdgeEnabled (p0: Boolean ) setVerticalScrollBarEnabled [androidJvm] open fun setVerticalScrollBarEnabled (p0: Boolean ) setVerticalScrollbarPosition [androidJvm] open fun setVerticalScrollbarPosition (p0: Int ) setVerticalScrollbarThumbDrawable [androidJvm] open fun setVerticalScrollbarThumbDrawable (p0: Drawable ?) setVerticalScrollbarTrackDrawable [androidJvm] open fun setVerticalScrollbarTrackDrawable (p0: Drawable ?) setViewTranslationCallback [androidJvm] open fun setViewTranslationCallback (p0: ViewTranslationCallback ) setVisibility [androidJvm] open fun setVisibility (p0: Int ) setWillNotDraw [androidJvm] open fun setWillNotDraw (p0: Boolean ) setWindowInsetsAnimationCallback [androidJvm] open override fun setWindowInsetsAnimationCallback (p0: WindowInsetsAnimation.Callback ?) setX [androidJvm] open fun setX (p0: Float ) setY [androidJvm] open fun setY (p0: Float ) setZ [androidJvm] open fun setZ (p0: Float ) shouldDelayChildPressedState [androidJvm] open override fun shouldDelayChildPressedState (): Boolean showContextMenu [androidJvm] open fun showContextMenu (): Boolean open fun showContextMenu (p0: Float , p1: Float ): Boolean showContextMenuForChild [androidJvm] open override fun showContextMenuForChild (p0: View ): Boolean open override fun showContextMenuForChild (p0: View , p1: Float , p2: Float ): Boolean startActionMode [androidJvm] open fun startActionMode (p0: ActionMode.Callback ): ActionMode open fun startActionMode (p0: ActionMode.Callback , p1: Int ): ActionMode startActionModeForChild [androidJvm] open override fun startActionModeForChild (p0: View , p1: ActionMode.Callback ): ActionMode open override fun startActionModeForChild (p0: View , p1: ActionMode.Callback , p2: Int ): ActionMode startAnimation [androidJvm] open fun startAnimation (p0: Animation ) startDragAndDrop [androidJvm] fun startDragAndDrop (p0: ClipData , p1: View.DragShadowBuilder , p2: Any , p3: Int ): Boolean startLayoutAnimation [androidJvm] open fun startLayoutAnimation () startNestedScroll [androidJvm] open fun startNestedScroll (p0: Int ): Boolean startViewTransition [androidJvm] open fun startViewTransition (p0: View ) stopNestedScroll [androidJvm] open fun stopNestedScroll () suppressLayout [androidJvm] open fun suppressLayout (p0: Boolean ) toString [androidJvm] open override fun toString (): String transformMatrixToGlobal [androidJvm] open fun transformMatrixToGlobal (p0: Matrix ) transformMatrixToLocal [androidJvm] open fun transformMatrixToLocal (p0: Matrix ) unscheduleDrawable [androidJvm] open fun unscheduleDrawable (p0: Drawable ) open override fun unscheduleDrawable (p0: Drawable , p1: Runnable ) updateDragShadow [androidJvm] fun updateDragShadow (p0: View.DragShadowBuilder ) updateViewLayout [androidJvm] open override fun updateViewLayout (p0: View , p1: ViewGroup.LayoutParams ) verifyDrawable [androidJvm] open fun verifyDrawable (p0: Drawable ): Boolean willNotDraw [androidJvm] open fun willNotDraw (): Boolean Properties \u00b6 Name Summary isAllowParentInterceptOnEdge [androidJvm] var isAllowParentInterceptOnEdge : Boolean = true isAllowParentInterceptOnScaled [androidJvm] var isAllowParentInterceptOnScaled : Boolean = false isScaled [androidJvm] val isScaled : Boolean maxScale [androidJvm] var maxScale : Float = 3.0f minScale [androidJvm] var minScale : Float = 1.0f posX [androidJvm] val posX : Float Get the current x-translation posY [androidJvm] val posY : Float Get the current y-translation scale [androidJvm] var scale : Float zoomDuration [androidJvm] var zoomDuration : Int","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/#r2fxllayout","text":"[androidJvm]\\ class R2FXLLayout : FrameLayout","title":"R2FXLLayout"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/#constructors","text":"R2FXLLayout [androidJvm] fun R2FXLLayout (context: Context ) R2FXLLayout [androidJvm] fun R2FXLLayout (context: Context , attrs: AttributeSet ) R2FXLLayout [androidJvm] fun R2FXLLayout (context: Context , attrs: AttributeSet , defStyleAttr: Int )","title":"Constructors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/#types","text":"Name Summary Companion [androidJvm] object Companion OnDoubleTapListener [androidJvm] interface OnDoubleTapListener OnLongTapListener [androidJvm] interface OnLongTapListener OnPanListener [androidJvm] interface OnPanListener OnTapListener [androidJvm] interface OnTapListener OnTouchListener [androidJvm] interface OnTouchListener OnZoomListener [androidJvm] interface OnZoomListener TapInfo [androidJvm] class TapInfo (r2FXLLayout: R2FXLLayout , e: MotionEvent )","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/#functions","text":"Name Summary addChildrenForAccessibility [androidJvm] open override fun addChildrenForAccessibility (p0: ArrayList < View >) addExtraDataToAccessibilityNodeInfo [androidJvm] open override fun addExtraDataToAccessibilityNodeInfo (p0: AccessibilityNodeInfo , p1: String , p2: Bundle ?) addFocusables [androidJvm] open fun addFocusables (p0: ArrayList < View >, p1: Int ) open override fun addFocusables (p0: ArrayList < View >, p1: Int , p2: Int ) addKeyboardNavigationClusters [androidJvm] open override fun addKeyboardNavigationClusters (p0: MutableCollection < View >, p1: Int ) addOnAttachStateChangeListener [androidJvm] open fun addOnAttachStateChangeListener (p0: View.OnAttachStateChangeListener ) addOnDoubleTapListener [androidJvm] fun addOnDoubleTapListener (l: R2FXLLayout.OnDoubleTapListener ) addOnLayoutChangeListener [androidJvm] open fun addOnLayoutChangeListener (p0: View.OnLayoutChangeListener ) addOnTapListener [androidJvm] fun addOnTapListener (l: R2FXLLayout.OnTapListener ) addOnUnhandledKeyEventListener [androidJvm] open fun addOnUnhandledKeyEventListener (p0: View.OnUnhandledKeyEventListener ) addStatesFromChildren [androidJvm] open fun addStatesFromChildren (): Boolean addTouchables [androidJvm] open override fun addTouchables (p0: ArrayList < View >) addView [androidJvm] open fun addView (p0: View ) open override fun addView (p0: View , p1: ViewGroup.LayoutParams ) open fun addView (p0: View , p1: Int ) open fun addView (p0: View , p1: Int , p2: ViewGroup.LayoutParams ) open fun addView (p0: View , p1: Int , p2: Int ) addViewInLayout [androidJvm] open fun addViewInLayout (p0: View , p1: Int , p2: ViewGroup.LayoutParams ): Boolean open fun addViewInLayout (p0: View , p1: Int , p2: ViewGroup.LayoutParams , p3: Boolean ): Boolean animate [androidJvm] open fun animate (): ViewPropertyAnimator announceForAccessibility [androidJvm] open fun announceForAccessibility (p0: CharSequence ) attachLayoutAnimationParameters [androidJvm] open fun attachLayoutAnimationParameters (p0: View , p1: ViewGroup.LayoutParams , p2: Int , p3: Int ) attachViewToParent [androidJvm] open fun attachViewToParent (p0: View , p1: Int , p2: ViewGroup.LayoutParams ) autofill [androidJvm] open fun autofill (p0: SparseArray < AutofillValue >) open fun autofill (p0: AutofillValue ) awakenScrollBars [androidJvm] open fun awakenScrollBars (): Boolean open fun awakenScrollBars (p0: Int ): Boolean open fun awakenScrollBars (p0: Int , p1: Boolean ): Boolean bringChildToFront [androidJvm] open override fun bringChildToFront (p0: View ) bringToFront [androidJvm] open fun bringToFront () buildLayer [androidJvm] open fun buildLayer () callOnClick [androidJvm] open fun callOnClick (): Boolean canAnimate [androidJvm] open fun canAnimate (): Boolean cancelDragAndDrop [androidJvm] fun cancelDragAndDrop () cancelLongPress [androidJvm] open fun cancelLongPress () cancelPendingInputEvents [androidJvm] fun cancelPendingInputEvents () canResolveLayoutDirection [androidJvm] open fun canResolveLayoutDirection (): Boolean canResolveTextAlignment [androidJvm] open fun canResolveTextAlignment (): Boolean canResolveTextDirection [androidJvm] open fun canResolveTextDirection (): Boolean canScrollHorizontally [androidJvm] open fun canScrollHorizontally (p0: Int ): Boolean canScrollVertically [androidJvm] open fun canScrollVertically (p0: Int ): Boolean checkInputConnectionProxy [androidJvm] open fun checkInputConnectionProxy (p0: View ): Boolean checkLayoutParams [androidJvm] open override fun checkLayoutParams (p0: ViewGroup.LayoutParams ): Boolean childDrawableStateChanged [androidJvm] open override fun childDrawableStateChanged (p0: View ) childHasTransientStateChanged [androidJvm] open override fun childHasTransientStateChanged (p0: View , p1: Boolean ) cleanupLayoutState [androidJvm] open fun cleanupLayoutState (p0: View ) clearAnimation [androidJvm] open fun clearAnimation () clearChildFocus [androidJvm] open override fun clearChildFocus (p0: View ) clearDisappearingChildren [androidJvm] open fun clearDisappearingChildren () clearFocus [androidJvm] open override fun clearFocus () clearViewTranslationCallback [androidJvm] open fun clearViewTranslationCallback () computeHorizontalScrollExtent [androidJvm] open fun computeHorizontalScrollExtent (): Int computeHorizontalScrollOffset [androidJvm] open fun computeHorizontalScrollOffset (): Int computeHorizontalScrollRange [androidJvm] open fun computeHorizontalScrollRange (): Int computeScroll [androidJvm] open fun computeScroll () computeSystemWindowInsets [androidJvm] open fun computeSystemWindowInsets (p0: WindowInsets , p1: Rect ): WindowInsets computeVerticalScrollExtent [androidJvm] open fun computeVerticalScrollExtent (): Int computeVerticalScrollOffset [androidJvm] open fun computeVerticalScrollOffset (): Int computeVerticalScrollRange [androidJvm] open fun computeVerticalScrollRange (): Int createAccessibilityNodeInfo [androidJvm] open fun createAccessibilityNodeInfo (): AccessibilityNodeInfo createContextMenu [androidJvm] open fun createContextMenu (p0: ContextMenu ) debug [androidJvm] open fun debug (p0: Int ) detachAllViewsFromParent [androidJvm] open fun detachAllViewsFromParent () detachViewFromParent [androidJvm] open fun detachViewFromParent (p0: View ) open fun detachViewFromParent (p0: Int ) detachViewsFromParent [androidJvm] open fun detachViewsFromParent (p0: Int , p1: Int ) dispatchApplyWindowInsets [androidJvm] open override fun dispatchApplyWindowInsets (p0: WindowInsets ): WindowInsets dispatchCapturedPointerEvent [androidJvm] open override fun dispatchCapturedPointerEvent (p0: MotionEvent ): Boolean dispatchConfigurationChanged [androidJvm] open override fun dispatchConfigurationChanged (p0: Configuration ) dispatchCreateViewTranslationRequest [androidJvm] open override fun dispatchCreateViewTranslationRequest (p0: MutableMap < AutofillId , LongArray >, p1: IntArray , p2: TranslationCapability , p3: MutableList < ViewTranslationRequest >) dispatchDisplayHint [androidJvm] open override fun dispatchDisplayHint (p0: Int ) dispatchDragEvent [androidJvm] open override fun dispatchDragEvent (p0: DragEvent ): Boolean dispatchDrawableHotspotChanged [androidJvm] open override fun dispatchDrawableHotspotChanged (p0: Float , p1: Float ) dispatchFinishTemporaryDetach [androidJvm] open override fun dispatchFinishTemporaryDetach () dispatchFreezeSelfOnly [androidJvm] open fun dispatchFreezeSelfOnly (p0: SparseArray < Parcelable >) dispatchGenericFocusedEvent [androidJvm] open override fun dispatchGenericFocusedEvent (p0: MotionEvent ): Boolean dispatchGenericMotionEvent [androidJvm] open fun dispatchGenericMotionEvent (p0: MotionEvent ): Boolean dispatchGenericPointerEvent [androidJvm] open override fun dispatchGenericPointerEvent (p0: MotionEvent ): Boolean dispatchHoverEvent [androidJvm] open override fun dispatchHoverEvent (p0: MotionEvent ): Boolean dispatchKeyEvent [androidJvm] open override fun dispatchKeyEvent (p0: KeyEvent ): Boolean dispatchKeyEventPreIme [androidJvm] open override fun dispatchKeyEventPreIme (p0: KeyEvent ): Boolean dispatchKeyShortcutEvent [androidJvm] open override fun dispatchKeyShortcutEvent (p0: KeyEvent ): Boolean dispatchNestedFling [androidJvm] open fun dispatchNestedFling (p0: Float , p1: Float , p2: Boolean ): Boolean dispatchNestedPreFling [androidJvm] open fun dispatchNestedPreFling (p0: Float , p1: Float ): Boolean dispatchNestedPrePerformAccessibilityAction [androidJvm] open fun dispatchNestedPrePerformAccessibilityAction (p0: Int , p1: Bundle ): Boolean dispatchNestedPreScroll [androidJvm] open fun dispatchNestedPreScroll (p0: Int , p1: Int , p2: IntArray ?, p3: IntArray ?): Boolean dispatchNestedScroll [androidJvm] open fun dispatchNestedScroll (p0: Int , p1: Int , p2: Int , p3: Int , p4: IntArray ?): Boolean dispatchPointerCaptureChanged [androidJvm] open override fun dispatchPointerCaptureChanged (p0: Boolean ) dispatchPopulateAccessibilityEvent [androidJvm] open fun dispatchPopulateAccessibilityEvent (p0: AccessibilityEvent ): Boolean dispatchProvideAutofillStructure [androidJvm] open override fun dispatchProvideAutofillStructure (p0: ViewStructure , p1: Int ) dispatchProvideStructure [androidJvm] open override fun dispatchProvideStructure (p0: ViewStructure ) dispatchRestoreInstanceState [androidJvm] open override fun dispatchRestoreInstanceState (p0: SparseArray < Parcelable >) dispatchSaveInstanceState [androidJvm] open override fun dispatchSaveInstanceState (p0: SparseArray < Parcelable >) dispatchScrollCaptureSearch [androidJvm] open override fun dispatchScrollCaptureSearch (p0: Rect , p1: Point , p2: Consumer < ScrollCaptureTarget >) dispatchSetActivated [androidJvm] open override fun dispatchSetActivated (p0: Boolean ) dispatchSetPressed [androidJvm] open override fun dispatchSetPressed (p0: Boolean ) dispatchSetSelected [androidJvm] open override fun dispatchSetSelected (p0: Boolean ) dispatchStartTemporaryDetach [androidJvm] open override fun dispatchStartTemporaryDetach () dispatchThawSelfOnly [androidJvm] open fun dispatchThawSelfOnly (p0: SparseArray < Parcelable >) dispatchTouchEvent [androidJvm] open override fun dispatchTouchEvent (ev: MotionEvent ): Boolean dispatchTrackballEvent [androidJvm] open override fun dispatchTrackballEvent (p0: MotionEvent ): Boolean dispatchUnhandledMove [androidJvm] open override fun dispatchUnhandledMove (p0: View , p1: Int ): Boolean dispatchVisibilityChanged [androidJvm] open override fun dispatchVisibilityChanged (p0: View , p1: Int ) dispatchWindowFocusChanged [androidJvm] open override fun dispatchWindowFocusChanged (p0: Boolean ) dispatchWindowInsetsAnimationEnd [androidJvm] open override fun dispatchWindowInsetsAnimationEnd (p0: WindowInsetsAnimation ) dispatchWindowInsetsAnimationPrepare [androidJvm] open override fun dispatchWindowInsetsAnimationPrepare (p0: WindowInsetsAnimation ) dispatchWindowInsetsAnimationProgress [androidJvm] open override fun dispatchWindowInsetsAnimationProgress (p0: WindowInsets , p1: MutableList < WindowInsetsAnimation >): WindowInsets dispatchWindowInsetsAnimationStart [androidJvm] open override fun dispatchWindowInsetsAnimationStart (p0: WindowInsetsAnimation , p1: WindowInsetsAnimation.Bounds ): WindowInsetsAnimation.Bounds dispatchWindowVisibilityChanged [androidJvm] open override fun dispatchWindowVisibilityChanged (p0: Int ) draw [androidJvm] open fun draw (p0: Canvas ) drawableHotspotChanged [androidJvm] open fun drawableHotspotChanged (p0: Float , p1: Float ) drawableStateChanged [androidJvm] open override fun drawableStateChanged () drawChild [androidJvm] open fun drawChild (p0: Canvas , p1: View , p2: Long ): Boolean endViewTransition [androidJvm] open fun endViewTransition (p0: View ) findFocus [androidJvm] open override fun findFocus (): View findViewById [androidJvm] fun < T : View > findViewById (p0: Int ): T findViewsWithText [androidJvm] open override fun findViewsWithText (p0: ArrayList < View >, p1: CharSequence , p2: Int ) findViewWithTag [androidJvm] fun < T : View > findViewWithTag (p0: Any ): T focusableViewAvailable [androidJvm] open override fun focusableViewAvailable (p0: View ) focusSearch [androidJvm] open fun focusSearch (p0: Int ): View open override fun focusSearch (p0: View , p1: Int ): View forceHasOverlappingRendering [androidJvm] open fun forceHasOverlappingRendering (p0: Boolean ) forceLayout [androidJvm] open fun forceLayout () gatherTransparentRegion [androidJvm] open override fun gatherTransparentRegion (p0: Region ?): Boolean generateDefaultLayoutParams [androidJvm] open override fun generateDefaultLayoutParams (): FrameLayout.LayoutParams generateDisplayHash [androidJvm] open fun generateDisplayHash (p0: String , p1: Rect ?, p2: Executor , p3: DisplayHashResultCallback ) generateLayoutParams [androidJvm] open override fun generateLayoutParams (p0: AttributeSet ): FrameLayout.LayoutParams open override fun generateLayoutParams (p0: ViewGroup.LayoutParams ): ViewGroup.LayoutParams getAccessibilityClassName [androidJvm] open override fun getAccessibilityClassName (): CharSequence getAccessibilityDelegate [androidJvm] open fun getAccessibilityDelegate (): View.AccessibilityDelegate getAccessibilityLiveRegion [androidJvm] open fun getAccessibilityLiveRegion (): Int getAccessibilityNodeProvider [androidJvm] open fun getAccessibilityNodeProvider (): AccessibilityNodeProvider getAccessibilityPaneTitle [androidJvm] open fun getAccessibilityPaneTitle (): CharSequence ? getAccessibilityTraversalAfter [androidJvm] open fun getAccessibilityTraversalAfter (): Int getAccessibilityTraversalBefore [androidJvm] open fun getAccessibilityTraversalBefore (): Int getAlpha [androidJvm] open fun getAlpha (): Float getAnimation [androidJvm] open fun getAnimation (): Animation getAnimationMatrix [androidJvm] open fun getAnimationMatrix (): Matrix ? getApplicationWindowToken [androidJvm] open fun getApplicationWindowToken (): IBinder getAttributeResolutionStack [androidJvm] open fun getAttributeResolutionStack (p0: Int ): IntArray getAttributeSourceResourceMap [androidJvm] open fun getAttributeSourceResourceMap (): MutableMap < Int , Int > getAutofillHints [androidJvm] open fun getAutofillHints (): Array < String >? getAutofillId [androidJvm] fun getAutofillId (): AutofillId getAutofillType [androidJvm] open fun getAutofillType (): Int getAutofillValue [androidJvm] open fun getAutofillValue (): AutofillValue ? getBackground [androidJvm] open fun getBackground (): Drawable getBackgroundTintBlendMode [androidJvm] open fun getBackgroundTintBlendMode (): BlendMode ? getBackgroundTintList [androidJvm] open fun getBackgroundTintList (): ColorStateList ? getBackgroundTintMode [androidJvm] open fun getBackgroundTintMode (): PorterDuff.Mode ? getBaseline [androidJvm] open fun getBaseline (): Int getBottom [androidJvm] fun getBottom (): Int getBottomFadingEdgeStrength [androidJvm] open fun getBottomFadingEdgeStrength (): Float getBottomPaddingOffset [androidJvm] open fun getBottomPaddingOffset (): Int getCameraDistance [androidJvm] open fun getCameraDistance (): Float getChildAt [androidJvm] open fun getChildAt (p0: Int ): View getChildCount [androidJvm] open fun getChildCount (): Int getChildDrawingOrder [androidJvm] fun getChildDrawingOrder (p0: Int ): Int open fun getChildDrawingOrder (p0: Int , p1: Int ): Int getChildStaticTransformation [androidJvm] open fun getChildStaticTransformation (p0: View , p1: Transformation ): Boolean getChildVisibleRect [androidJvm] open override fun getChildVisibleRect (p0: View , p1: Rect , p2: Point ): Boolean getClipBounds [androidJvm] open fun getClipBounds (): Rect open fun getClipBounds (p0: Rect ): Boolean getClipChildren [androidJvm] open fun getClipChildren (): Boolean getClipToOutline [androidJvm] fun getClipToOutline (): Boolean getClipToPadding [androidJvm] open fun getClipToPadding (): Boolean getContentCaptureSession [androidJvm] fun getContentCaptureSession (): ContentCaptureSession ? getContentDescription [androidJvm] open fun getContentDescription (): CharSequence getContext [androidJvm] fun getContext (): Context getContextMenuInfo [androidJvm] open fun getContextMenuInfo (): ContextMenu.ContextMenuInfo getDefaultFocusHighlightEnabled [androidJvm] fun getDefaultFocusHighlightEnabled (): Boolean getDescendantFocusability [androidJvm] open fun getDescendantFocusability (): Int getDisplay [androidJvm] open fun getDisplay (): Display getDrawableState [androidJvm] fun getDrawableState (): IntArray getDrawingRect [androidJvm] open fun getDrawingRect (p0: Rect ) getDrawingTime [androidJvm] open fun getDrawingTime (): Long getElevation [androidJvm] open fun getElevation (): Float getExplicitStyle [androidJvm] open fun getExplicitStyle (): Int getFilterTouchesWhenObscured [androidJvm] open fun getFilterTouchesWhenObscured (): Boolean getFitsSystemWindows [androidJvm] open fun getFitsSystemWindows (): Boolean getFocusable [androidJvm] open fun getFocusable (): Int getFocusables [androidJvm] open fun getFocusables (p0: Int ): ArrayList < View > getFocusedChild [androidJvm] open fun getFocusedChild (): View getFocusedRect [androidJvm] open fun getFocusedRect (p0: Rect ) getForeground [androidJvm] open fun getForeground (): Drawable getForegroundGravity [androidJvm] open fun getForegroundGravity (): Int getForegroundTintBlendMode [androidJvm] open fun getForegroundTintBlendMode (): BlendMode ? getForegroundTintList [androidJvm] open fun getForegroundTintList (): ColorStateList ? getForegroundTintMode [androidJvm] open fun getForegroundTintMode (): PorterDuff.Mode ? getGlobalVisibleRect [androidJvm] fun getGlobalVisibleRect (p0: Rect ): Boolean open fun getGlobalVisibleRect (p0: Rect , p1: Point ): Boolean getHandler [androidJvm] open fun getHandler (): Handler getHasOverlappingRendering [androidJvm] fun getHasOverlappingRendering (): Boolean getHeight [androidJvm] fun getHeight (): Int getHitRect [androidJvm] open fun getHitRect (p0: Rect ) getHorizontalFadingEdgeLength [androidJvm] open fun getHorizontalFadingEdgeLength (): Int getHorizontalScrollbarHeight [androidJvm] open fun getHorizontalScrollbarHeight (): Int getHorizontalScrollbarThumbDrawable [androidJvm] open fun getHorizontalScrollbarThumbDrawable (): Drawable ? getHorizontalScrollbarTrackDrawable [androidJvm] open fun getHorizontalScrollbarTrackDrawable (): Drawable ? getId [androidJvm] open fun getId (): Int getImportantForAccessibility [androidJvm] open fun getImportantForAccessibility (): Int getImportantForAutofill [androidJvm] open fun getImportantForAutofill (): Int getImportantForContentCapture [androidJvm] open fun getImportantForContentCapture (): Int getKeepScreenOn [androidJvm] open fun getKeepScreenOn (): Boolean getKeyDispatcherState [androidJvm] open fun getKeyDispatcherState (): KeyEvent.DispatcherState getLabelFor [androidJvm] open fun getLabelFor (): Int getLayerType [androidJvm] open fun getLayerType (): Int getLayoutAnimation [androidJvm] open fun getLayoutAnimation (): LayoutAnimationController getLayoutAnimationListener [androidJvm] open fun getLayoutAnimationListener (): Animation.AnimationListener getLayoutDirection [androidJvm] open fun getLayoutDirection (): Int getLayoutMode [androidJvm] open fun getLayoutMode (): Int getLayoutParams [androidJvm] open fun getLayoutParams (): ViewGroup.LayoutParams getLayoutTransition [androidJvm] open fun getLayoutTransition (): LayoutTransition getLeft [androidJvm] fun getLeft (): Int getLeftFadingEdgeStrength [androidJvm] open fun getLeftFadingEdgeStrength (): Float getLeftPaddingOffset [androidJvm] open fun getLeftPaddingOffset (): Int getLocalVisibleRect [androidJvm] fun getLocalVisibleRect (p0: Rect ): Boolean getLocationInSurface [androidJvm] open fun getLocationInSurface (p0: IntArray ) getLocationInWindow [androidJvm] open fun getLocationInWindow (p0: IntArray ) getLocationOnScreen [androidJvm] open fun getLocationOnScreen (p0: IntArray ) getMatrix [androidJvm] open fun getMatrix (): Matrix getMeasureAllChildren [androidJvm] open fun getMeasureAllChildren (): Boolean getMeasuredHeight [androidJvm] fun getMeasuredHeight (): Int getMeasuredHeightAndState [androidJvm] fun getMeasuredHeightAndState (): Int getMeasuredState [androidJvm] fun getMeasuredState (): Int getMeasuredWidth [androidJvm] fun getMeasuredWidth (): Int getMeasuredWidthAndState [androidJvm] fun getMeasuredWidthAndState (): Int getMinimumHeight [androidJvm] open fun getMinimumHeight (): Int getMinimumWidth [androidJvm] open fun getMinimumWidth (): Int getNestedScrollAxes [androidJvm] open fun getNestedScrollAxes (): Int getNextClusterForwardId [androidJvm] open fun getNextClusterForwardId (): Int getNextFocusDownId [androidJvm] open fun getNextFocusDownId (): Int getNextFocusForwardId [androidJvm] open fun getNextFocusForwardId (): Int getNextFocusLeftId [androidJvm] open fun getNextFocusLeftId (): Int getNextFocusRightId [androidJvm] open fun getNextFocusRightId (): Int getNextFocusUpId [androidJvm] open fun getNextFocusUpId (): Int getOnFocusChangeListener [androidJvm] open fun getOnFocusChangeListener (): View.OnFocusChangeListener getOutlineAmbientShadowColor [androidJvm] open fun getOutlineAmbientShadowColor (): Int getOutlineProvider [androidJvm] open fun getOutlineProvider (): ViewOutlineProvider getOutlineSpotShadowColor [androidJvm] open fun getOutlineSpotShadowColor (): Int getOverlay [androidJvm] open override fun getOverlay (): ViewGroupOverlay getOverScrollMode [androidJvm] open fun getOverScrollMode (): Int getPaddingBottom [androidJvm] open fun getPaddingBottom (): Int getPaddingEnd [androidJvm] open fun getPaddingEnd (): Int getPaddingLeft [androidJvm] open fun getPaddingLeft (): Int getPaddingRight [androidJvm] open fun getPaddingRight (): Int getPaddingStart [androidJvm] open fun getPaddingStart (): Int getPaddingTop [androidJvm] open fun getPaddingTop (): Int getParent [androidJvm] fun getParent (): ViewParent getParentForAccessibility [androidJvm] open fun getParentForAccessibility (): ViewParent getPivotX [androidJvm] open fun getPivotX (): Float getPivotY [androidJvm] open fun getPivotY (): Float getPointerIcon [androidJvm] open fun getPointerIcon (): PointerIcon getReceiveContentMimeTypes [androidJvm] open fun getReceiveContentMimeTypes (): Array < String >? getResources [androidJvm] open fun getResources (): Resources getRevealOnFocusHint [androidJvm] fun getRevealOnFocusHint (): Boolean getRight [androidJvm] fun getRight (): Int getRightFadingEdgeStrength [androidJvm] open fun getRightFadingEdgeStrength (): Float getRightPaddingOffset [androidJvm] open fun getRightPaddingOffset (): Int getRootSurfaceControl [androidJvm] open fun getRootSurfaceControl (): AttachedSurfaceControl ? getRootView [androidJvm] open fun getRootView (): View getRootWindowInsets [androidJvm] open fun getRootWindowInsets (): WindowInsets getRotation [androidJvm] open fun getRotation (): Float getRotationX [androidJvm] open fun getRotationX (): Float getRotationY [androidJvm] open fun getRotationY (): Float getScaleX [androidJvm] open fun getScaleX (): Float getScaleY [androidJvm] open fun getScaleY (): Float getScrollBarDefaultDelayBeforeFade [androidJvm] open fun getScrollBarDefaultDelayBeforeFade (): Int getScrollBarFadeDuration [androidJvm] open fun getScrollBarFadeDuration (): Int getScrollBarSize [androidJvm] open fun getScrollBarSize (): Int getScrollBarStyle [androidJvm] open fun getScrollBarStyle (): Int getScrollCaptureHint [androidJvm] open fun getScrollCaptureHint (): Int getScrollIndicators [androidJvm] open fun getScrollIndicators (): Int getScrollX [androidJvm] fun getScrollX (): Int getScrollY [androidJvm] fun getScrollY (): Int getSolidColor [androidJvm] open fun getSolidColor (): Int getSourceLayoutResId [androidJvm] open fun getSourceLayoutResId (): Int getStateDescription [androidJvm] fun getStateDescription (): CharSequence ? getStateListAnimator [androidJvm] open fun getStateListAnimator (): StateListAnimator getSuggestedMinimumHeight [androidJvm] open fun getSuggestedMinimumHeight (): Int getSuggestedMinimumWidth [androidJvm] open fun getSuggestedMinimumWidth (): Int getSystemGestureExclusionRects [androidJvm] open fun getSystemGestureExclusionRects (): MutableList < Rect > getTag [androidJvm] open fun getTag (): Any open fun getTag (p0: Int ): Any getTextAlignment [androidJvm] open fun getTextAlignment (): Int getTextDirection [androidJvm] open fun getTextDirection (): Int getTooltipText [androidJvm] open fun getTooltipText (): CharSequence ? getTop [androidJvm] fun getTop (): Int getTopFadingEdgeStrength [androidJvm] open fun getTopFadingEdgeStrength (): Float getTopPaddingOffset [androidJvm] open fun getTopPaddingOffset (): Int getTouchables [androidJvm] open fun getTouchables (): ArrayList < View > getTouchDelegate [androidJvm] open fun getTouchDelegate (): TouchDelegate getTouchscreenBlocksFocus [androidJvm] open fun getTouchscreenBlocksFocus (): Boolean getTransitionAlpha [androidJvm] open fun getTransitionAlpha (): Float getTransitionName [androidJvm] open fun getTransitionName (): String getTranslationX [androidJvm] open fun getTranslationX (): Float getTranslationY [androidJvm] open fun getTranslationY (): Float getTranslationZ [androidJvm] open fun getTranslationZ (): Float getUniqueDrawingId [androidJvm] open fun getUniqueDrawingId (): Long getVerticalFadingEdgeLength [androidJvm] open fun getVerticalFadingEdgeLength (): Int getVerticalScrollbarPosition [androidJvm] open fun getVerticalScrollbarPosition (): Int getVerticalScrollbarThumbDrawable [androidJvm] open fun getVerticalScrollbarThumbDrawable (): Drawable ? getVerticalScrollbarTrackDrawable [androidJvm] open fun getVerticalScrollbarTrackDrawable (): Drawable ? getVerticalScrollbarWidth [androidJvm] open fun getVerticalScrollbarWidth (): Int getViewTranslationResponse [androidJvm] open fun getViewTranslationResponse (): ViewTranslationResponse ? getViewTreeObserver [androidJvm] open fun getViewTreeObserver (): ViewTreeObserver getVisibility [androidJvm] open fun getVisibility (): Int getWidth [androidJvm] fun getWidth (): Int getWindowAttachCount [androidJvm] open fun getWindowAttachCount (): Int getWindowId [androidJvm] open fun getWindowId (): WindowId getWindowInsetsController [androidJvm] open fun getWindowInsetsController (): WindowInsetsController ? getWindowToken [androidJvm] open fun getWindowToken (): IBinder getWindowVisibility [androidJvm] open fun getWindowVisibility (): Int getWindowVisibleDisplayFrame [androidJvm] open fun getWindowVisibleDisplayFrame (p0: Rect ) getX [androidJvm] open fun getX (): Float getY [androidJvm] open fun getY (): Float getZ [androidJvm] open fun getZ (): Float hasExplicitFocusable [androidJvm] open fun hasExplicitFocusable (): Boolean hasFocus [androidJvm] open override fun hasFocus (): Boolean hasFocusable [androidJvm] open fun hasFocusable (): Boolean hasNestedScrollingParent [androidJvm] open fun hasNestedScrollingParent (): Boolean hasOnClickListeners [androidJvm] open fun hasOnClickListeners (): Boolean hasOnLongClickListeners [androidJvm] open fun hasOnLongClickListeners (): Boolean hasOverlappingRendering [androidJvm] open fun hasOverlappingRendering (): Boolean hasPointerCapture [androidJvm] open fun hasPointerCapture (): Boolean hasTransientState [androidJvm] open override fun hasTransientState (): Boolean hasWindowFocus [androidJvm] open fun hasWindowFocus (): Boolean indexOfChild [androidJvm] open fun indexOfChild (p0: View ): Int invalidate [androidJvm] open fun invalidate () invalidateDrawable [androidJvm] open override fun invalidateDrawable (p0: Drawable ) invalidateOutline [androidJvm] open fun invalidateOutline () isAccessibilityFocused [androidJvm] open fun isAccessibilityFocused (): Boolean isAccessibilityHeading [androidJvm] open fun isAccessibilityHeading (): Boolean isActivated [androidJvm] open fun isActivated (): Boolean isAttachedToWindow [androidJvm] open fun isAttachedToWindow (): Boolean isChildrenDrawingOrderEnabled [androidJvm] open fun isChildrenDrawingOrderEnabled (): Boolean isClickable [androidJvm] open fun isClickable (): Boolean isContextClickable [androidJvm] open fun isContextClickable (): Boolean isDirty [androidJvm] open fun isDirty (): Boolean isDuplicateParentStateEnabled [androidJvm] open fun isDuplicateParentStateEnabled (): Boolean isEnabled [androidJvm] open fun isEnabled (): Boolean isFocusable [androidJvm] fun isFocusable (): Boolean isFocusableInTouchMode [androidJvm] fun isFocusableInTouchMode (): Boolean isFocused [androidJvm] open fun isFocused (): Boolean isFocusedByDefault [androidJvm] fun isFocusedByDefault (): Boolean isForceDarkAllowed [androidJvm] open fun isForceDarkAllowed (): Boolean isHapticFeedbackEnabled [androidJvm] open fun isHapticFeedbackEnabled (): Boolean isHardwareAccelerated [androidJvm] open fun isHardwareAccelerated (): Boolean isHorizontalFadingEdgeEnabled [androidJvm] open fun isHorizontalFadingEdgeEnabled (): Boolean isHorizontalScrollBarEnabled [androidJvm] open fun isHorizontalScrollBarEnabled (): Boolean isHovered [androidJvm] open fun isHovered (): Boolean isImportantForAccessibility [androidJvm] open fun isImportantForAccessibility (): Boolean isImportantForAutofill [androidJvm] fun isImportantForAutofill (): Boolean isImportantForContentCapture [androidJvm] fun isImportantForContentCapture (): Boolean isInEditMode [androidJvm] open fun isInEditMode (): Boolean isInLayout [androidJvm] open fun isInLayout (): Boolean isInTouchMode [androidJvm] open fun isInTouchMode (): Boolean isKeyboardNavigationCluster [androidJvm] fun isKeyboardNavigationCluster (): Boolean isLaidOut [androidJvm] open fun isLaidOut (): Boolean isLayoutDirectionResolved [androidJvm] open fun isLayoutDirectionResolved (): Boolean isLayoutRequested [androidJvm] open fun isLayoutRequested (): Boolean isLayoutSuppressed [androidJvm] open fun isLayoutSuppressed (): Boolean isLongClickable [androidJvm] open fun isLongClickable (): Boolean isMotionEventSplittingEnabled [androidJvm] open fun isMotionEventSplittingEnabled (): Boolean isNestedScrollingEnabled [androidJvm] open fun isNestedScrollingEnabled (): Boolean isOpaque [androidJvm] open fun isOpaque (): Boolean isPaddingOffsetRequired [androidJvm] open fun isPaddingOffsetRequired (): Boolean isPaddingRelative [androidJvm] open fun isPaddingRelative (): Boolean isPivotSet [androidJvm] open fun isPivotSet (): Boolean isPressed [androidJvm] open fun isPressed (): Boolean isSaveEnabled [androidJvm] open fun isSaveEnabled (): Boolean isSaveFromParentEnabled [androidJvm] open fun isSaveFromParentEnabled (): Boolean isScreenReaderFocusable [androidJvm] open fun isScreenReaderFocusable (): Boolean isScrollbarFadingEnabled [androidJvm] open fun isScrollbarFadingEnabled (): Boolean isScrollContainer [androidJvm] open fun isScrollContainer (): Boolean isSelected [androidJvm] open fun isSelected (): Boolean isShowingLayoutBounds [androidJvm] fun isShowingLayoutBounds (): Boolean isShown [androidJvm] open fun isShown (): Boolean isSoundEffectsEnabled [androidJvm] open fun isSoundEffectsEnabled (): Boolean isTemporarilyDetached [androidJvm] fun isTemporarilyDetached (): Boolean isTextAlignmentResolved [androidJvm] open fun isTextAlignmentResolved (): Boolean isTextDirectionResolved [androidJvm] open fun isTextDirectionResolved (): Boolean isTransitionGroup [androidJvm] open fun isTransitionGroup (): Boolean isVerticalFadingEdgeEnabled [androidJvm] open fun isVerticalFadingEdgeEnabled (): Boolean isVerticalScrollBarEnabled [androidJvm] open fun isVerticalScrollBarEnabled (): Boolean isVisibleToUserForAutofill [androidJvm] open fun isVisibleToUserForAutofill (p0: Int ): Boolean jumpDrawablesToCurrentState [androidJvm] open override fun jumpDrawablesToCurrentState () keyboardNavigationClusterSearch [androidJvm] open fun keyboardNavigationClusterSearch (p0: View , p1: Int ): View layout [androidJvm] override fun layout (p0: Int , p1: Int , p2: Int , p3: Int ) measure [androidJvm] fun measure (p0: Int , p1: Int ) measureChild [androidJvm] open fun measureChild (p0: View , p1: Int , p2: Int ) measureChildren [androidJvm] open fun measureChildren (p0: Int , p1: Int ) measureChildWithMargins [androidJvm] open fun measureChildWithMargins (p0: View , p1: Int , p2: Int , p3: Int , p4: Int ) notifySubtreeAccessibilityStateChanged [androidJvm] open override fun notifySubtreeAccessibilityStateChanged (p0: View , p1: View , p2: Int ) offsetDescendantRectToMyCoords [androidJvm] fun offsetDescendantRectToMyCoords (p0: View , p1: Rect ) offsetLeftAndRight [androidJvm] open fun offsetLeftAndRight (p0: Int ) offsetRectIntoDescendantCoords [androidJvm] fun offsetRectIntoDescendantCoords (p0: View , p1: Rect ) offsetTopAndBottom [androidJvm] open fun offsetTopAndBottom (p0: Int ) onAnimationEnd [androidJvm] open fun onAnimationEnd () onAnimationStart [androidJvm] open fun onAnimationStart () onApplyWindowInsets [androidJvm] open fun onApplyWindowInsets (p0: WindowInsets ): WindowInsets onAttachedToWindow [androidJvm] open override fun onAttachedToWindow () onCancelPendingInputEvents [androidJvm] open fun onCancelPendingInputEvents () onCapturedPointerEvent [androidJvm] open fun onCapturedPointerEvent (p0: MotionEvent ): Boolean onCheckIsTextEditor [androidJvm] open fun onCheckIsTextEditor (): Boolean onConfigurationChanged [androidJvm] open fun onConfigurationChanged (p0: Configuration ) onCreateContextMenu [androidJvm] open fun onCreateContextMenu (p0: ContextMenu ) onCreateDrawableState [androidJvm] open override fun onCreateDrawableState (p0: Int ): IntArray onCreateInputConnection [androidJvm] open fun onCreateInputConnection (p0: EditorInfo ): InputConnection onCreateViewTranslationRequest [androidJvm] open fun onCreateViewTranslationRequest (p0: IntArray , p1: Consumer < ViewTranslationRequest >) onCreateVirtualViewTranslationRequests [androidJvm] open fun onCreateVirtualViewTranslationRequests (p0: LongArray , p1: IntArray , p2: Consumer < ViewTranslationRequest >) onDescendantInvalidated [androidJvm] open override fun onDescendantInvalidated (p0: View , p1: View ) onDisplayHint [androidJvm] open fun onDisplayHint (p0: Int ) onDragEvent [androidJvm] open fun onDragEvent (p0: DragEvent ): Boolean onDraw [androidJvm] open fun onDraw (p0: Canvas ) onDrawForeground [androidJvm] open fun onDrawForeground (p0: Canvas ) onDrawScrollBars [androidJvm] fun onDrawScrollBars (p0: Canvas ) onFilterTouchEventForSecurity [androidJvm] open fun onFilterTouchEventForSecurity (p0: MotionEvent ): Boolean onFinishInflate [androidJvm] open fun onFinishInflate () onFinishTemporaryDetach [androidJvm] open fun onFinishTemporaryDetach () onFocusChanged [androidJvm] open fun onFocusChanged (p0: Boolean , p1: Int , p2: Rect ?) onGenericMotionEvent [androidJvm] open fun onGenericMotionEvent (p0: MotionEvent ): Boolean onHoverChanged [androidJvm] open fun onHoverChanged (p0: Boolean ) onHoverEvent [androidJvm] open fun onHoverEvent (p0: MotionEvent ): Boolean onInitializeAccessibilityEvent [androidJvm] open fun onInitializeAccessibilityEvent (p0: AccessibilityEvent ) onInitializeAccessibilityNodeInfo [androidJvm] open fun onInitializeAccessibilityNodeInfo (p0: AccessibilityNodeInfo ) onInterceptHoverEvent [androidJvm] open fun onInterceptHoverEvent (p0: MotionEvent ): Boolean onInterceptTouchEvent [androidJvm] open override fun onInterceptTouchEvent (ev: MotionEvent ): Boolean onKeyDown [androidJvm] open override fun onKeyDown (p0: Int , p1: KeyEvent ): Boolean onKeyLongPress [androidJvm] open override fun onKeyLongPress (p0: Int , p1: KeyEvent ): Boolean onKeyMultiple [androidJvm] open override fun onKeyMultiple (p0: Int , p1: Int , p2: KeyEvent ): Boolean onKeyPreIme [androidJvm] open fun onKeyPreIme (p0: Int , p1: KeyEvent ): Boolean onKeyShortcut [androidJvm] open fun onKeyShortcut (p0: Int , p1: KeyEvent ): Boolean onKeyUp [androidJvm] open override fun onKeyUp (p0: Int , p1: KeyEvent ): Boolean onLayout [androidJvm] open override fun onLayout (p0: Boolean , p1: Int , p2: Int , p3: Int , p4: Int ) onMeasure [androidJvm] open override fun onMeasure (p0: Int , p1: Int ) onNestedFling [androidJvm] open override fun onNestedFling (p0: View , p1: Float , p2: Float , p3: Boolean ): Boolean onNestedPreFling [androidJvm] open override fun onNestedPreFling (p0: View , p1: Float , p2: Float ): Boolean onNestedPrePerformAccessibilityAction [androidJvm] open override fun onNestedPrePerformAccessibilityAction (p0: View , p1: Int , p2: Bundle ): Boolean onNestedPreScroll [androidJvm] open override fun onNestedPreScroll (p0: View , p1: Int , p2: Int , p3: IntArray ) onNestedScroll [androidJvm] open override fun onNestedScroll (p0: View , p1: Int , p2: Int , p3: Int , p4: Int ) onNestedScrollAccepted [androidJvm] open override fun onNestedScrollAccepted (p0: View , p1: View , p2: Int ) onOverScrolled [androidJvm] open fun onOverScrolled (p0: Int , p1: Int , p2: Boolean , p3: Boolean ) onPointerCaptureChange [androidJvm] open fun onPointerCaptureChange (p0: Boolean ) onPopulateAccessibilityEvent [androidJvm] open fun onPopulateAccessibilityEvent (p0: AccessibilityEvent ) onProvideAutofillStructure [androidJvm] open fun onProvideAutofillStructure (p0: ViewStructure , p1: Int ) onProvideAutofillVirtualStructure [androidJvm] open fun onProvideAutofillVirtualStructure (p0: ViewStructure , p1: Int ) onProvideContentCaptureStructure [androidJvm] open fun onProvideContentCaptureStructure (p0: ViewStructure , p1: Int ) onProvideStructure [androidJvm] open fun onProvideStructure (p0: ViewStructure ) onProvideVirtualStructure [androidJvm] open fun onProvideVirtualStructure (p0: ViewStructure ) onReceiveContent [androidJvm] open fun onReceiveContent (p0: ContentInfo ): ContentInfo ? onRequestFocusInDescendants [androidJvm] open fun onRequestFocusInDescendants (p0: Int , p1: Rect ): Boolean onRequestSendAccessibilityEvent [androidJvm] open fun onRequestSendAccessibilityEvent (p0: View , p1: AccessibilityEvent ): Boolean onResolvePointerIcon [androidJvm] open override fun onResolvePointerIcon (p0: MotionEvent , p1: Int ): PointerIcon onRestoreInstanceState [androidJvm] open fun onRestoreInstanceState (p0: Parcelable ) onRtlPropertiesChanged [androidJvm] open fun onRtlPropertiesChanged (p0: Int ) onSaveInstanceState [androidJvm] open fun onSaveInstanceState (): Parcelable ? onScreenStateChanged [androidJvm] open fun onScreenStateChanged (p0: Int ) onScrollCaptureSearch [androidJvm] open fun onScrollCaptureSearch (p0: Rect , p1: Point , p2: Consumer < ScrollCaptureTarget >) onScrollChanged [androidJvm] open fun onScrollChanged (p0: Int , p1: Int , p2: Int , p3: Int ) onSetAlpha [androidJvm] open fun onSetAlpha (p0: Int ): Boolean onSizeChanged [androidJvm] open fun onSizeChanged (p0: Int , p1: Int , p2: Int , p3: Int ) onStartNestedScroll [androidJvm] open override fun onStartNestedScroll (p0: View , p1: View , p2: Int ): Boolean onStartTemporaryDetach [androidJvm] open fun onStartTemporaryDetach () onStopNestedScroll [androidJvm] open override fun onStopNestedScroll (p0: View ) onTouchEvent [androidJvm] open override fun onTouchEvent (ev: MotionEvent ): Boolean onTrackballEvent [androidJvm] open fun onTrackballEvent (p0: MotionEvent ): Boolean onViewAdded [androidJvm] open fun onViewAdded (p0: View ) onViewRemoved [androidJvm] open fun onViewRemoved (p0: View ) onViewTranslationResponse [androidJvm] open fun onViewTranslationResponse (p0: ViewTranslationResponse ) onVirtualViewTranslationResponses [androidJvm] open fun onVirtualViewTranslationResponses (p0: LongSparseArray < ViewTranslationResponse >) onVisibilityAggregated [androidJvm] open fun onVisibilityAggregated (p0: Boolean ) onVisibilityChanged [androidJvm] open fun onVisibilityChanged (p0: View , p1: Int ) onWindowFocusChanged [androidJvm] open fun onWindowFocusChanged (p0: Boolean ) onWindowVisibilityChanged [androidJvm] open fun onWindowVisibilityChanged (p0: Int ) overScrollBy [androidJvm] open fun overScrollBy (p0: Int , p1: Int , p2: Int , p3: Int , p4: Int , p5: Int , p6: Int , p7: Int , p8: Boolean ): Boolean performAccessibilityAction [androidJvm] open fun performAccessibilityAction (p0: Int , p1: Bundle ): Boolean performClick [androidJvm] open fun performClick (): Boolean performContextClick [androidJvm] open fun performContextClick (): Boolean open fun performContextClick (p0: Float , p1: Float ): Boolean performHapticFeedback [androidJvm] open fun performHapticFeedback (p0: Int ): Boolean open fun performHapticFeedback (p0: Int , p1: Int ): Boolean performLongClick [androidJvm] open fun performLongClick (): Boolean open fun performLongClick (p0: Float , p1: Float ): Boolean performReceiveContent [androidJvm] open fun performReceiveContent (p0: ContentInfo ): ContentInfo ? playSoundEffect [androidJvm] open fun playSoundEffect (p0: Int ) post [androidJvm] open fun post (p0: Runnable ): Boolean postDelayed [androidJvm] open fun postDelayed (p0: Runnable , p1: Long ): Boolean postInvalidate [androidJvm] open fun postInvalidate () open fun postInvalidate (p0: Int , p1: Int , p2: Int , p3: Int ) postInvalidateDelayed [androidJvm] open fun postInvalidateDelayed (p0: Long ) open fun postInvalidateDelayed (p0: Long , p1: Int , p2: Int , p3: Int , p4: Int ) postInvalidateOnAnimation [androidJvm] open fun postInvalidateOnAnimation () open fun postInvalidateOnAnimation (p0: Int , p1: Int , p2: Int , p3: Int ) postOnAnimation [androidJvm] open fun postOnAnimation (p0: Runnable ) postOnAnimationDelayed [androidJvm] open fun postOnAnimationDelayed (p0: Runnable , p1: Long ) recomputeViewAttributes [androidJvm] open override fun recomputeViewAttributes (p0: View ) refreshDrawableState [androidJvm] open fun refreshDrawableState () releasePointerCapture [androidJvm] open fun releasePointerCapture () removeAllViews [androidJvm] open fun removeAllViews () removeAllViewsInLayout [androidJvm] open fun removeAllViewsInLayout () removeCallbacks [androidJvm] open fun removeCallbacks (p0: Runnable ): Boolean removeDetachedView [androidJvm] open fun removeDetachedView (p0: View , p1: Boolean ) removeOnAttachStateChangeListener [androidJvm] open fun removeOnAttachStateChangeListener (p0: View.OnAttachStateChangeListener ) removeOnLayoutChangeListener [androidJvm] open fun removeOnLayoutChangeListener (p0: View.OnLayoutChangeListener ) removeOnUnhandledKeyEventListener [androidJvm] open fun removeOnUnhandledKeyEventListener (p0: View.OnUnhandledKeyEventListener ) removeView [androidJvm] open override fun removeView (p0: View ) removeViewAt [androidJvm] open fun removeViewAt (p0: Int ) removeViewInLayout [androidJvm] open fun removeViewInLayout (p0: View ) removeViews [androidJvm] open fun removeViews (p0: Int , p1: Int ) removeViewsInLayout [androidJvm] open fun removeViewsInLayout (p0: Int , p1: Int ) requestApplyInsets [androidJvm] open fun requestApplyInsets () requestChildFocus [androidJvm] open override fun requestChildFocus (p0: View , p1: View ) requestChildRectangleOnScreen [androidJvm] open override fun requestChildRectangleOnScreen (p0: View , p1: Rect , p2: Boolean ): Boolean requestDisallowInterceptTouchEvent [androidJvm] open override fun requestDisallowInterceptTouchEvent (p0: Boolean ) requestFocus [androidJvm] fun requestFocus (): Boolean fun requestFocus (p0: Int ): Boolean open override fun requestFocus (p0: Int , p1: Rect ): Boolean requestFocusFromTouch [androidJvm] fun requestFocusFromTouch (): Boolean requestLayout [androidJvm] open fun requestLayout () requestPointerCapture [androidJvm] open fun requestPointerCapture () requestRectangleOnScreen [androidJvm] open fun requestRectangleOnScreen (p0: Rect ): Boolean open fun requestRectangleOnScreen (p0: Rect , p1: Boolean ): Boolean requestSendAccessibilityEvent [androidJvm] open override fun requestSendAccessibilityEvent (p0: View , p1: AccessibilityEvent ): Boolean requestTransparentRegion [androidJvm] open override fun requestTransparentRegion (p0: View ) requestUnbufferedDispatch [androidJvm] fun requestUnbufferedDispatch (p0: MotionEvent ) fun requestUnbufferedDispatch (p0: Int ) requireViewById [androidJvm] fun < T : View > requireViewById (p0: Int ): T resetPivot [androidJvm] open fun resetPivot () restoreDefaultFocus [androidJvm] open override fun restoreDefaultFocus (): Boolean restoreHierarchyState [androidJvm] open fun restoreHierarchyState (p0: SparseArray < Parcelable >) saveAttributeDataForStyleable [androidJvm] fun saveAttributeDataForStyleable (p0: Context , p1: IntArray , p2: AttributeSet ?, p3: TypedArray , p4: Int , p5: Int ) saveHierarchyState [androidJvm] open fun saveHierarchyState (p0: SparseArray < Parcelable >) scheduleDrawable [androidJvm] open override fun scheduleDrawable (p0: Drawable , p1: Runnable , p2: Long ) scheduleLayoutAnimation [androidJvm] open fun scheduleLayoutAnimation () scrollBy [androidJvm] open fun scrollBy (p0: Int , p1: Int ) scrollTo [androidJvm] open fun scrollTo (p0: Int , p1: Int ) sendAccessibilityEvent [androidJvm] open override fun sendAccessibilityEvent (p0: Int ) sendAccessibilityEventUnchecked [androidJvm] open override fun sendAccessibilityEventUnchecked (p0: AccessibilityEvent ) setAccessibilityDelegate [androidJvm] open fun setAccessibilityDelegate (p0: View.AccessibilityDelegate ?) setAccessibilityHeading [androidJvm] open fun setAccessibilityHeading (p0: Boolean ) setAccessibilityLiveRegion [androidJvm] open fun setAccessibilityLiveRegion (p0: Int ) setAccessibilityPaneTitle [androidJvm] open fun setAccessibilityPaneTitle (p0: CharSequence ?) setAccessibilityTraversalAfter [androidJvm] open fun setAccessibilityTraversalAfter (p0: Int ) setAccessibilityTraversalBefore [androidJvm] open fun setAccessibilityTraversalBefore (p0: Int ) setActivated [androidJvm] open fun setActivated (p0: Boolean ) setAddStatesFromChildren [androidJvm] open fun setAddStatesFromChildren (p0: Boolean ) setAllowClickWhenDisabled [androidJvm] open fun setAllowClickWhenDisabled (p0: Boolean ) setAlpha [androidJvm] open fun setAlpha (p0: Float ) setAnimation [androidJvm] open fun setAnimation (p0: Animation ) setAnimationMatrix [androidJvm] open fun setAnimationMatrix (p0: Matrix ?) setAutofillHints [androidJvm] open fun setAutofillHints (vararg p0: String ) setAutofillId [androidJvm] open fun setAutofillId (p0: AutofillId ?) setBackground [androidJvm] open fun setBackground (p0: Drawable ) setBackgroundColor [androidJvm] open fun setBackgroundColor (p0: Int ) setBackgroundResource [androidJvm] open fun setBackgroundResource (p0: Int ) setBackgroundTintBlendMode [androidJvm] open fun setBackgroundTintBlendMode (p0: BlendMode ?) setBackgroundTintList [androidJvm] open fun setBackgroundTintList (p0: ColorStateList ?) setBackgroundTintMode [androidJvm] open fun setBackgroundTintMode (p0: PorterDuff.Mode ?) setBottom [androidJvm] fun setBottom (p0: Int ) setCameraDistance [androidJvm] open fun setCameraDistance (p0: Float ) setChildrenDrawingOrderEnabled [androidJvm] open fun setChildrenDrawingOrderEnabled (p0: Boolean ) setClickable [androidJvm] open fun setClickable (p0: Boolean ) setClipBounds [androidJvm] open fun setClipBounds (p0: Rect ) setClipChildren [androidJvm] open fun setClipChildren (p0: Boolean ) setClipToOutline [androidJvm] open fun setClipToOutline (p0: Boolean ) setClipToPadding [androidJvm] open fun setClipToPadding (p0: Boolean ) setContentCaptureSession [androidJvm] open fun setContentCaptureSession (p0: ContentCaptureSession ?) setContentDescription [androidJvm] open fun setContentDescription (p0: CharSequence ) setContextClickable [androidJvm] open fun setContextClickable (p0: Boolean ) setDefaultFocusHighlightEnabled [androidJvm] open fun setDefaultFocusHighlightEnabled (p0: Boolean ) setDescendantFocusability [androidJvm] open fun setDescendantFocusability (p0: Int ) setDuplicateParentStateEnabled [androidJvm] open fun setDuplicateParentStateEnabled (p0: Boolean ) setElevation [androidJvm] open fun setElevation (p0: Float ) setEnabled [androidJvm] open fun setEnabled (p0: Boolean ) setFadingEdgeLength [androidJvm] open fun setFadingEdgeLength (p0: Int ) setFilterTouchesWhenObscured [androidJvm] open fun setFilterTouchesWhenObscured (p0: Boolean ) setFitsSystemWindows [androidJvm] open fun setFitsSystemWindows (p0: Boolean ) setFocusable [androidJvm] open fun setFocusable (p0: Boolean ) open fun setFocusable (p0: Int ) setFocusableInTouchMode [androidJvm] open fun setFocusableInTouchMode (p0: Boolean ) setFocusedByDefault [androidJvm] open fun setFocusedByDefault (p0: Boolean ) setForceDarkAllowed [androidJvm] open fun setForceDarkAllowed (p0: Boolean ) setForeground [androidJvm] open fun setForeground (p0: Drawable ) setForegroundGravity [androidJvm] open override fun setForegroundGravity (p0: Int ) setForegroundTintBlendMode [androidJvm] open fun setForegroundTintBlendMode (p0: BlendMode ?) setForegroundTintList [androidJvm] open fun setForegroundTintList (p0: ColorStateList ?) setForegroundTintMode [androidJvm] open fun setForegroundTintMode (p0: PorterDuff.Mode ?) setHapticFeedbackEnabled [androidJvm] open fun setHapticFeedbackEnabled (p0: Boolean ) setHasTransientState [androidJvm] open fun setHasTransientState (p0: Boolean ) setHorizontalFadingEdgeEnabled [androidJvm] open fun setHorizontalFadingEdgeEnabled (p0: Boolean ) setHorizontalScrollBarEnabled [androidJvm] open fun setHorizontalScrollBarEnabled (p0: Boolean ) setHorizontalScrollbarThumbDrawable [androidJvm] open fun setHorizontalScrollbarThumbDrawable (p0: Drawable ?) setHorizontalScrollbarTrackDrawable [androidJvm] open fun setHorizontalScrollbarTrackDrawable (p0: Drawable ?) setHovered [androidJvm] open fun setHovered (p0: Boolean ) setId [androidJvm] open fun setId (p0: Int ) setImportantForAccessibility [androidJvm] open fun setImportantForAccessibility (p0: Int ) setImportantForAutofill [androidJvm] open fun setImportantForAutofill (p0: Int ) setImportantForContentCapture [androidJvm] open fun setImportantForContentCapture (p0: Int ) setKeepScreenOn [androidJvm] open fun setKeepScreenOn (p0: Boolean ) setKeyboardNavigationCluster [androidJvm] open fun setKeyboardNavigationCluster (p0: Boolean ) setLabelFor [androidJvm] open fun setLabelFor (p0: Int ) setLayerPaint [androidJvm] open fun setLayerPaint (p0: Paint ?) setLayerType [androidJvm] open fun setLayerType (p0: Int , p1: Paint ?) setLayoutAnimation [androidJvm] open fun setLayoutAnimation (p0: LayoutAnimationController ) setLayoutAnimationListener [androidJvm] open fun setLayoutAnimationListener (p0: Animation.AnimationListener ) setLayoutDirection [androidJvm] open fun setLayoutDirection (p0: Int ) setLayoutMode [androidJvm] open fun setLayoutMode (p0: Int ) setLayoutParams [androidJvm] open fun setLayoutParams (p0: ViewGroup.LayoutParams ) setLayoutTransition [androidJvm] open fun setLayoutTransition (p0: LayoutTransition ) setLeft [androidJvm] fun setLeft (p0: Int ) setLeftTopRightBottom [androidJvm] fun setLeftTopRightBottom (p0: Int , p1: Int , p2: Int , p3: Int ) setLongClickable [androidJvm] open fun setLongClickable (p0: Boolean ) setMeasureAllChildren [androidJvm] open fun setMeasureAllChildren (p0: Boolean ) setMeasuredDimension [androidJvm] fun setMeasuredDimension (p0: Int , p1: Int ) setMinimumHeight [androidJvm] open fun setMinimumHeight (p0: Int ) setMinimumWidth [androidJvm] open fun setMinimumWidth (p0: Int ) setMotionEventSplittingEnabled [androidJvm] open fun setMotionEventSplittingEnabled (p0: Boolean ) setNestedScrollingEnabled [androidJvm] open fun setNestedScrollingEnabled (p0: Boolean ) setNextClusterForwardId [androidJvm] open fun setNextClusterForwardId (p0: Int ) setNextFocusDownId [androidJvm] open fun setNextFocusDownId (p0: Int ) setNextFocusForwardId [androidJvm] open fun setNextFocusForwardId (p0: Int ) setNextFocusLeftId [androidJvm] open fun setNextFocusLeftId (p0: Int ) setNextFocusRightId [androidJvm] open fun setNextFocusRightId (p0: Int ) setNextFocusUpId [androidJvm] open fun setNextFocusUpId (p0: Int ) setOnApplyWindowInsetsListener [androidJvm] open fun setOnApplyWindowInsetsListener (p0: View.OnApplyWindowInsetsListener ) setOnCapturedPointerListener [androidJvm] open fun setOnCapturedPointerListener (p0: View.OnCapturedPointerListener ) setOnClickListener [androidJvm] open override fun setOnClickListener (l: View.OnClickListener ?) setOnContextClickListener [androidJvm] open fun setOnContextClickListener (p0: View.OnContextClickListener ?) setOnCreateContextMenuListener [androidJvm] open fun setOnCreateContextMenuListener (p0: View.OnCreateContextMenuListener ) setOnDragListener [androidJvm] open fun setOnDragListener (p0: View.OnDragListener ) setOnFocusChangeListener [androidJvm] open fun setOnFocusChangeListener (p0: View.OnFocusChangeListener ) setOnGenericMotionListener [androidJvm] open fun setOnGenericMotionListener (p0: View.OnGenericMotionListener ) setOnHierarchyChangeListener [androidJvm] open fun setOnHierarchyChangeListener (p0: ViewGroup.OnHierarchyChangeListener ) setOnHoverListener [androidJvm] open fun setOnHoverListener (p0: View.OnHoverListener ) setOnKeyListener [androidJvm] open fun setOnKeyListener (p0: View.OnKeyListener ) setOnLongClickListener [androidJvm] open override fun setOnLongClickListener (l: View.OnLongClickListener ?) setOnReceiveContentListener [androidJvm] open fun setOnReceiveContentListener (p0: Array < String >?, p1: OnReceiveContentListener ?) setOnScrollChangeListener [androidJvm] open fun setOnScrollChangeListener (p0: View.OnScrollChangeListener ) setOnTouchListener [androidJvm] open override fun setOnTouchListener (l: View.OnTouchListener ) setOutlineAmbientShadowColor [androidJvm] open fun setOutlineAmbientShadowColor (p0: Int ) setOutlineProvider [androidJvm] open fun setOutlineProvider (p0: ViewOutlineProvider ) setOutlineSpotShadowColor [androidJvm] open fun setOutlineSpotShadowColor (p0: Int ) setOverScrollMode [androidJvm] open fun setOverScrollMode (p0: Int ) setPadding [androidJvm] open fun setPadding (p0: Int , p1: Int , p2: Int , p3: Int ) setPaddingRelative [androidJvm] open fun setPaddingRelative (p0: Int , p1: Int , p2: Int , p3: Int ) setPivotX [androidJvm] open fun setPivotX (p0: Float ) setPivotY [androidJvm] open fun setPivotY (p0: Float ) setPointerIcon [androidJvm] open fun setPointerIcon (p0: PointerIcon ) setPressed [androidJvm] open fun setPressed (p0: Boolean ) setRenderEffect [androidJvm] open fun setRenderEffect (p0: RenderEffect ?) setRevealOnFocusHint [androidJvm] fun setRevealOnFocusHint (p0: Boolean ) setRight [androidJvm] fun setRight (p0: Int ) setRotation [androidJvm] open fun setRotation (p0: Float ) setRotationX [androidJvm] open fun setRotationX (p0: Float ) setRotationY [androidJvm] open fun setRotationY (p0: Float ) setSaveEnabled [androidJvm] open fun setSaveEnabled (p0: Boolean ) setSaveFromParentEnabled [androidJvm] open fun setSaveFromParentEnabled (p0: Boolean ) setScale [androidJvm] fun setScale (scale: Float , animate: Boolean ) fun setScale (scale_in: Float , focusX: Float , focusY: Float , animate: Boolean ) setScaleX [androidJvm] open fun setScaleX (p0: Float ) setScaleY [androidJvm] open fun setScaleY (p0: Float ) setScreenReaderFocusable [androidJvm] open fun setScreenReaderFocusable (p0: Boolean ) setScrollBarDefaultDelayBeforeFade [androidJvm] open fun setScrollBarDefaultDelayBeforeFade (p0: Int ) setScrollBarFadeDuration [androidJvm] open fun setScrollBarFadeDuration (p0: Int ) setScrollbarFadingEnabled [androidJvm] open fun setScrollbarFadingEnabled (p0: Boolean ) setScrollBarSize [androidJvm] open fun setScrollBarSize (p0: Int ) setScrollBarStyle [androidJvm] open fun setScrollBarStyle (p0: Int ) setScrollCaptureCallback [androidJvm] fun setScrollCaptureCallback (p0: ScrollCaptureCallback ?) setScrollCaptureHint [androidJvm] open fun setScrollCaptureHint (p0: Int ) setScrollContainer [androidJvm] open fun setScrollContainer (p0: Boolean ) setScrollIndicators [androidJvm] open fun setScrollIndicators (p0: Int ) open fun setScrollIndicators (p0: Int , p1: Int ) setScrollX [androidJvm] open fun setScrollX (p0: Int ) setScrollY [androidJvm] open fun setScrollY (p0: Int ) setSelected [androidJvm] open fun setSelected (p0: Boolean ) setSoundEffectsEnabled [androidJvm] open fun setSoundEffectsEnabled (p0: Boolean ) setStateDescription [androidJvm] open fun setStateDescription (p0: CharSequence ?) setStateListAnimator [androidJvm] open fun setStateListAnimator (p0: StateListAnimator ) setStaticTransformationsEnabled [androidJvm] open fun setStaticTransformationsEnabled (p0: Boolean ) setSystemGestureExclusionRects [androidJvm] open fun setSystemGestureExclusionRects (p0: MutableList < Rect >) setTag [androidJvm] open fun setTag (p0: Any ) open fun setTag (p0: Int , p1: Any ) setTextAlignment [androidJvm] open fun setTextAlignment (p0: Int ) setTextDirection [androidJvm] open fun setTextDirection (p0: Int ) setTooltipText [androidJvm] open fun setTooltipText (p0: CharSequence ?) setTop [androidJvm] fun setTop (p0: Int ) setTouchDelegate [androidJvm] open fun setTouchDelegate (p0: TouchDelegate ) setTouchscreenBlocksFocus [androidJvm] open fun setTouchscreenBlocksFocus (p0: Boolean ) setTransitionAlpha [androidJvm] open fun setTransitionAlpha (p0: Float ) setTransitionGroup [androidJvm] open fun setTransitionGroup (p0: Boolean ) setTransitionName [androidJvm] fun setTransitionName (p0: String ) setTransitionVisibility [androidJvm] open fun setTransitionVisibility (p0: Int ) setTranslationX [androidJvm] open fun setTranslationX (p0: Float ) setTranslationY [androidJvm] open fun setTranslationY (p0: Float ) setTranslationZ [androidJvm] open fun setTranslationZ (p0: Float ) setVerticalFadingEdgeEnabled [androidJvm] open fun setVerticalFadingEdgeEnabled (p0: Boolean ) setVerticalScrollBarEnabled [androidJvm] open fun setVerticalScrollBarEnabled (p0: Boolean ) setVerticalScrollbarPosition [androidJvm] open fun setVerticalScrollbarPosition (p0: Int ) setVerticalScrollbarThumbDrawable [androidJvm] open fun setVerticalScrollbarThumbDrawable (p0: Drawable ?) setVerticalScrollbarTrackDrawable [androidJvm] open fun setVerticalScrollbarTrackDrawable (p0: Drawable ?) setViewTranslationCallback [androidJvm] open fun setViewTranslationCallback (p0: ViewTranslationCallback ) setVisibility [androidJvm] open fun setVisibility (p0: Int ) setWillNotDraw [androidJvm] open fun setWillNotDraw (p0: Boolean ) setWindowInsetsAnimationCallback [androidJvm] open override fun setWindowInsetsAnimationCallback (p0: WindowInsetsAnimation.Callback ?) setX [androidJvm] open fun setX (p0: Float ) setY [androidJvm] open fun setY (p0: Float ) setZ [androidJvm] open fun setZ (p0: Float ) shouldDelayChildPressedState [androidJvm] open override fun shouldDelayChildPressedState (): Boolean showContextMenu [androidJvm] open fun showContextMenu (): Boolean open fun showContextMenu (p0: Float , p1: Float ): Boolean showContextMenuForChild [androidJvm] open override fun showContextMenuForChild (p0: View ): Boolean open override fun showContextMenuForChild (p0: View , p1: Float , p2: Float ): Boolean startActionMode [androidJvm] open fun startActionMode (p0: ActionMode.Callback ): ActionMode open fun startActionMode (p0: ActionMode.Callback , p1: Int ): ActionMode startActionModeForChild [androidJvm] open override fun startActionModeForChild (p0: View , p1: ActionMode.Callback ): ActionMode open override fun startActionModeForChild (p0: View , p1: ActionMode.Callback , p2: Int ): ActionMode startAnimation [androidJvm] open fun startAnimation (p0: Animation ) startDragAndDrop [androidJvm] fun startDragAndDrop (p0: ClipData , p1: View.DragShadowBuilder , p2: Any , p3: Int ): Boolean startLayoutAnimation [androidJvm] open fun startLayoutAnimation () startNestedScroll [androidJvm] open fun startNestedScroll (p0: Int ): Boolean startViewTransition [androidJvm] open fun startViewTransition (p0: View ) stopNestedScroll [androidJvm] open fun stopNestedScroll () suppressLayout [androidJvm] open fun suppressLayout (p0: Boolean ) toString [androidJvm] open override fun toString (): String transformMatrixToGlobal [androidJvm] open fun transformMatrixToGlobal (p0: Matrix ) transformMatrixToLocal [androidJvm] open fun transformMatrixToLocal (p0: Matrix ) unscheduleDrawable [androidJvm] open fun unscheduleDrawable (p0: Drawable ) open override fun unscheduleDrawable (p0: Drawable , p1: Runnable ) updateDragShadow [androidJvm] fun updateDragShadow (p0: View.DragShadowBuilder ) updateViewLayout [androidJvm] open override fun updateViewLayout (p0: View , p1: ViewGroup.LayoutParams ) verifyDrawable [androidJvm] open fun verifyDrawable (p0: Drawable ): Boolean willNotDraw [androidJvm] open fun willNotDraw (): Boolean","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/#properties","text":"Name Summary isAllowParentInterceptOnEdge [androidJvm] var isAllowParentInterceptOnEdge : Boolean = true isAllowParentInterceptOnScaled [androidJvm] var isAllowParentInterceptOnScaled : Boolean = false isScaled [androidJvm] val isScaled : Boolean maxScale [androidJvm] var maxScale : Float = 3.0f minScale [androidJvm] var minScale : Float = 1.0f posX [androidJvm] val posX : Float Get the current x-translation posY [androidJvm] val posY : Float Get the current y-translation scale [androidJvm] var scale : Float zoomDuration [androidJvm] var zoomDuration : Int","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-r2-f-x-l-layout/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / R2FXLLayout R2FXLLayout \u00b6 [androidJvm]\\ fun R2FXLLayout (context: Context ) fun R2FXLLayout (context: Context , attrs: AttributeSet ) fun R2FXLLayout (context: Context , attrs: AttributeSet , defStyleAttr: Int )","title":" r2 f x l layout"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-r2-f-x-l-layout/#r2fxllayout","text":"[androidJvm]\\ fun R2FXLLayout (context: Context ) fun R2FXLLayout (context: Context , attrs: AttributeSet ) fun R2FXLLayout (context: Context , attrs: AttributeSet , defStyleAttr: Int )","title":"R2FXLLayout"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/add-on-double-tap-listener/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / addOnDoubleTapListener addOnDoubleTapListener \u00b6 [androidJvm]\\ fun addOnDoubleTapListener (l: R2FXLLayout.OnDoubleTapListener )","title":"Add on double tap listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/add-on-double-tap-listener/#addondoubletaplistener","text":"[androidJvm]\\ fun addOnDoubleTapListener (l: R2FXLLayout.OnDoubleTapListener )","title":"addOnDoubleTapListener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/add-on-tap-listener/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / addOnTapListener addOnTapListener \u00b6 [androidJvm]\\ fun addOnTapListener (l: R2FXLLayout.OnTapListener )","title":"Add on tap listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/add-on-tap-listener/#addontaplistener","text":"[androidJvm]\\ fun addOnTapListener (l: R2FXLLayout.OnTapListener )","title":"addOnTapListener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/dispatch-touch-event/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / dispatchTouchEvent dispatchTouchEvent \u00b6 [androidJvm]\\ open override fun dispatchTouchEvent (ev: MotionEvent ): Boolean","title":"Dispatch touch event"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/dispatch-touch-event/#dispatchtouchevent","text":"[androidJvm]\\ open override fun dispatchTouchEvent (ev: MotionEvent ): Boolean","title":"dispatchTouchEvent"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/is-allow-parent-intercept-on-edge/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / isAllowParentInterceptOnEdge isAllowParentInterceptOnEdge \u00b6 [androidJvm]\\ var isAllowParentInterceptOnEdge : Boolean = true","title":"Is allow parent intercept on edge"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/is-allow-parent-intercept-on-edge/#isallowparentinterceptonedge","text":"[androidJvm]\\ var isAllowParentInterceptOnEdge : Boolean = true","title":"isAllowParentInterceptOnEdge"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/is-allow-parent-intercept-on-scaled/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / isAllowParentInterceptOnScaled isAllowParentInterceptOnScaled \u00b6 [androidJvm]\\ var isAllowParentInterceptOnScaled : Boolean = false","title":"Is allow parent intercept on scaled"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/is-allow-parent-intercept-on-scaled/#isallowparentinterceptonscaled","text":"[androidJvm]\\ var isAllowParentInterceptOnScaled : Boolean = false","title":"isAllowParentInterceptOnScaled"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/is-scaled/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / isScaled isScaled \u00b6 [androidJvm]\\ val isScaled : Boolean","title":"Is scaled"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/is-scaled/#isscaled","text":"[androidJvm]\\ val isScaled : Boolean","title":"isScaled"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/max-scale/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / maxScale maxScale \u00b6 [androidJvm]\\ var maxScale : Float = 3.0f","title":"Max scale"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/max-scale/#maxscale","text":"[androidJvm]\\ var maxScale : Float = 3.0f","title":"maxScale"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/min-scale/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / minScale minScale \u00b6 [androidJvm]\\ var minScale : Float = 1.0f","title":"Min scale"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/min-scale/#minscale","text":"[androidJvm]\\ var minScale : Float = 1.0f","title":"minScale"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/on-intercept-touch-event/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / onInterceptTouchEvent onInterceptTouchEvent \u00b6 [androidJvm]\\ open override fun onInterceptTouchEvent (ev: MotionEvent ): Boolean","title":"On intercept touch event"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/on-intercept-touch-event/#onintercepttouchevent","text":"[androidJvm]\\ open override fun onInterceptTouchEvent (ev: MotionEvent ): Boolean","title":"onInterceptTouchEvent"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/on-touch-event/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / onTouchEvent onTouchEvent \u00b6 [androidJvm]\\ open override fun onTouchEvent (ev: MotionEvent ): Boolean","title":"On touch event"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/on-touch-event/#ontouchevent","text":"[androidJvm]\\ open override fun onTouchEvent (ev: MotionEvent ): Boolean","title":"onTouchEvent"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/pos-x/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / posX posX \u00b6 [androidJvm]\\ val posX : Float Get the current x-translation","title":"Pos x"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/pos-x/#posx","text":"[androidJvm]\\ val posX : Float Get the current x-translation","title":"posX"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/pos-y/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / posY posY \u00b6 [androidJvm]\\ val posY : Float Get the current y-translation","title":"Pos y"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/pos-y/#posy","text":"[androidJvm]\\ val posY : Float Get the current y-translation","title":"posY"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/scale/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / scale scale \u00b6 [androidJvm]\\ var scale : Float","title":"Scale"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/scale/#scale","text":"[androidJvm]\\ var scale : Float","title":"scale"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/set-on-click-listener/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / setOnClickListener setOnClickListener \u00b6 [androidJvm]\\ open override fun setOnClickListener (l: View.OnClickListener ?)","title":"Set on click listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/set-on-click-listener/#setonclicklistener","text":"[androidJvm]\\ open override fun setOnClickListener (l: View.OnClickListener ?)","title":"setOnClickListener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/set-on-long-click-listener/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / setOnLongClickListener setOnLongClickListener \u00b6 [androidJvm]\\ open override fun setOnLongClickListener (l: View.OnLongClickListener ?)","title":"Set on long click listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/set-on-long-click-listener/#setonlongclicklistener","text":"[androidJvm]\\ open override fun setOnLongClickListener (l: View.OnLongClickListener ?)","title":"setOnLongClickListener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/set-on-touch-listener/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / setOnTouchListener setOnTouchListener \u00b6 [androidJvm]\\ open override fun setOnTouchListener (l: View.OnTouchListener )","title":"Set on touch listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/set-on-touch-listener/#setontouchlistener","text":"[androidJvm]\\ open override fun setOnTouchListener (l: View.OnTouchListener )","title":"setOnTouchListener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/set-scale/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / setScale setScale \u00b6 [androidJvm]\\ fun setScale (scale: Float , animate: Boolean ) fun setScale (scale_in: Float , focusX: Float , focusY: Float , animate: Boolean )","title":"Set scale"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/set-scale/#setscale","text":"[androidJvm]\\ fun setScale (scale: Float , animate: Boolean ) fun setScale (scale_in: Float , focusX: Float , focusY: Float , animate: Boolean )","title":"setScale"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/zoom-duration/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / zoomDuration zoomDuration \u00b6 [androidJvm]\\ var zoomDuration : Int","title":"Zoom duration"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/zoom-duration/#zoomduration","text":"[androidJvm]\\ var zoomDuration : Int","title":"zoomDuration"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-companion/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary removeGlobal [androidJvm] fun removeGlobal (v: View , listener: ViewTreeObserver.OnGlobalLayoutListener ?)","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-companion/#functions","text":"Name Summary removeGlobal [androidJvm] fun removeGlobal (v: View , listener: ViewTreeObserver.OnGlobalLayoutListener ?)","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-companion/remove-global/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / Companion / removeGlobal removeGlobal \u00b6 [androidJvm]\\ fun removeGlobal (v: View , listener: ViewTreeObserver.OnGlobalLayoutListener ?)","title":"Remove global"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-companion/remove-global/#removeglobal","text":"[androidJvm]\\ fun removeGlobal (v: View , listener: ViewTreeObserver.OnGlobalLayoutListener ?)","title":"removeGlobal"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-double-tap-listener/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / OnDoubleTapListener OnDoubleTapListener \u00b6 [androidJvm]\\ interface OnDoubleTapListener Functions \u00b6 Name Summary onDoubleTap [androidJvm] abstract fun onDoubleTap (view: R2FXLLayout , info: R2FXLLayout.TapInfo ): Boolean Inheritors \u00b6 Name R2FXLOnDoubleTapListener","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-double-tap-listener/#ondoubletaplistener","text":"[androidJvm]\\ interface OnDoubleTapListener","title":"OnDoubleTapListener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-double-tap-listener/#functions","text":"Name Summary onDoubleTap [androidJvm] abstract fun onDoubleTap (view: R2FXLLayout , info: R2FXLLayout.TapInfo ): Boolean","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-double-tap-listener/#inheritors","text":"Name R2FXLOnDoubleTapListener","title":"Inheritors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-double-tap-listener/on-double-tap/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / OnDoubleTapListener / onDoubleTap onDoubleTap \u00b6 [androidJvm]\\ abstract fun onDoubleTap (view: R2FXLLayout , info: R2FXLLayout.TapInfo ): Boolean","title":"On double tap"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-double-tap-listener/on-double-tap/#ondoubletap","text":"[androidJvm]\\ abstract fun onDoubleTap (view: R2FXLLayout , info: R2FXLLayout.TapInfo ): Boolean","title":"onDoubleTap"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-long-tap-listener/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / OnLongTapListener OnLongTapListener \u00b6 [androidJvm]\\ interface OnLongTapListener Functions \u00b6 Name Summary onLongTap [androidJvm] abstract fun onLongTap (view: R2FXLLayout , info: R2FXLLayout.TapInfo )","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-long-tap-listener/#onlongtaplistener","text":"[androidJvm]\\ interface OnLongTapListener","title":"OnLongTapListener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-long-tap-listener/#functions","text":"Name Summary onLongTap [androidJvm] abstract fun onLongTap (view: R2FXLLayout , info: R2FXLLayout.TapInfo )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-long-tap-listener/on-long-tap/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / OnLongTapListener / onLongTap onLongTap \u00b6 [androidJvm]\\ abstract fun onLongTap (view: R2FXLLayout , info: R2FXLLayout.TapInfo )","title":"On long tap"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-long-tap-listener/on-long-tap/#onlongtap","text":"[androidJvm]\\ abstract fun onLongTap (view: R2FXLLayout , info: R2FXLLayout.TapInfo )","title":"onLongTap"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-pan-listener/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / OnPanListener OnPanListener \u00b6 [androidJvm]\\ interface OnPanListener Functions \u00b6 Name Summary onPan [androidJvm] abstract fun onPan (view: R2FXLLayout ) onPanBegin [androidJvm] abstract fun onPanBegin (view: R2FXLLayout ) onPanEnd [androidJvm] abstract fun onPanEnd (view: R2FXLLayout )","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-pan-listener/#onpanlistener","text":"[androidJvm]\\ interface OnPanListener","title":"OnPanListener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-pan-listener/#functions","text":"Name Summary onPan [androidJvm] abstract fun onPan (view: R2FXLLayout ) onPanBegin [androidJvm] abstract fun onPanBegin (view: R2FXLLayout ) onPanEnd [androidJvm] abstract fun onPanEnd (view: R2FXLLayout )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-pan-listener/on-pan-begin/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / OnPanListener / onPanBegin onPanBegin \u00b6 [androidJvm]\\ abstract fun onPanBegin (view: R2FXLLayout )","title":"On pan begin"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-pan-listener/on-pan-begin/#onpanbegin","text":"[androidJvm]\\ abstract fun onPanBegin (view: R2FXLLayout )","title":"onPanBegin"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-pan-listener/on-pan-end/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / OnPanListener / onPanEnd onPanEnd \u00b6 [androidJvm]\\ abstract fun onPanEnd (view: R2FXLLayout )","title":"On pan end"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-pan-listener/on-pan-end/#onpanend","text":"[androidJvm]\\ abstract fun onPanEnd (view: R2FXLLayout )","title":"onPanEnd"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-pan-listener/on-pan/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / OnPanListener / onPan onPan \u00b6 [androidJvm]\\ abstract fun onPan (view: R2FXLLayout )","title":"On pan"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-pan-listener/on-pan/#onpan","text":"[androidJvm]\\ abstract fun onPan (view: R2FXLLayout )","title":"onPan"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-tap-listener/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / OnTapListener OnTapListener \u00b6 [androidJvm]\\ interface OnTapListener Functions \u00b6 Name Summary onTap [androidJvm] abstract fun onTap (view: R2FXLLayout , info: R2FXLLayout.TapInfo ): Boolean","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-tap-listener/#ontaplistener","text":"[androidJvm]\\ interface OnTapListener","title":"OnTapListener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-tap-listener/#functions","text":"Name Summary onTap [androidJvm] abstract fun onTap (view: R2FXLLayout , info: R2FXLLayout.TapInfo ): Boolean","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-tap-listener/on-tap/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / OnTapListener / onTap onTap \u00b6 [androidJvm]\\ abstract fun onTap (view: R2FXLLayout , info: R2FXLLayout.TapInfo ): Boolean","title":"On tap"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-tap-listener/on-tap/#ontap","text":"[androidJvm]\\ abstract fun onTap (view: R2FXLLayout , info: R2FXLLayout.TapInfo ): Boolean","title":"onTap"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-touch-listener/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / OnTouchListener OnTouchListener \u00b6 [androidJvm]\\ interface OnTouchListener Functions \u00b6 Name Summary onTouch [androidJvm] abstract fun onTouch (view: R2FXLLayout , action: Int , info: R2FXLLayout.TapInfo ): Boolean","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-touch-listener/#ontouchlistener","text":"[androidJvm]\\ interface OnTouchListener","title":"OnTouchListener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-touch-listener/#functions","text":"Name Summary onTouch [androidJvm] abstract fun onTouch (view: R2FXLLayout , action: Int , info: R2FXLLayout.TapInfo ): Boolean","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-touch-listener/on-touch/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / OnTouchListener / onTouch onTouch \u00b6 [androidJvm]\\ abstract fun onTouch (view: R2FXLLayout , action: Int , info: R2FXLLayout.TapInfo ): Boolean","title":"On touch"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-touch-listener/on-touch/#ontouch","text":"[androidJvm]\\ abstract fun onTouch (view: R2FXLLayout , action: Int , info: R2FXLLayout.TapInfo ): Boolean","title":"onTouch"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-zoom-listener/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / OnZoomListener OnZoomListener \u00b6 [androidJvm]\\ interface OnZoomListener Functions \u00b6 Name Summary onZoom [androidJvm] abstract fun onZoom (view: R2FXLLayout , scale: Float ) onZoomBegin [androidJvm] abstract fun onZoomBegin (view: R2FXLLayout , scale: Float ) onZoomEnd [androidJvm] abstract fun onZoomEnd (view: R2FXLLayout , scale: Float )","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-zoom-listener/#onzoomlistener","text":"[androidJvm]\\ interface OnZoomListener","title":"OnZoomListener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-zoom-listener/#functions","text":"Name Summary onZoom [androidJvm] abstract fun onZoom (view: R2FXLLayout , scale: Float ) onZoomBegin [androidJvm] abstract fun onZoomBegin (view: R2FXLLayout , scale: Float ) onZoomEnd [androidJvm] abstract fun onZoomEnd (view: R2FXLLayout , scale: Float )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-zoom-listener/on-zoom-begin/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / OnZoomListener / onZoomBegin onZoomBegin \u00b6 [androidJvm]\\ abstract fun onZoomBegin (view: R2FXLLayout , scale: Float )","title":"On zoom begin"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-zoom-listener/on-zoom-begin/#onzoombegin","text":"[androidJvm]\\ abstract fun onZoomBegin (view: R2FXLLayout , scale: Float )","title":"onZoomBegin"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-zoom-listener/on-zoom-end/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / OnZoomListener / onZoomEnd onZoomEnd \u00b6 [androidJvm]\\ abstract fun onZoomEnd (view: R2FXLLayout , scale: Float )","title":"On zoom end"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-zoom-listener/on-zoom-end/#onzoomend","text":"[androidJvm]\\ abstract fun onZoomEnd (view: R2FXLLayout , scale: Float )","title":"onZoomEnd"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-zoom-listener/on-zoom/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / OnZoomListener / onZoom onZoom \u00b6 [androidJvm]\\ abstract fun onZoom (view: R2FXLLayout , scale: Float )","title":"On zoom"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-on-zoom-listener/on-zoom/#onzoom","text":"[androidJvm]\\ abstract fun onZoom (view: R2FXLLayout , scale: Float )","title":"onZoom"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-tap-info/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / TapInfo TapInfo \u00b6 [androidJvm]\\ class TapInfo (r2FXLLayout: R2FXLLayout , e: MotionEvent ) Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary toString [androidJvm] open override fun toString (): String Properties \u00b6 Name Summary view [androidJvm] var view : View x [androidJvm] var x : Float y [androidJvm] var y : Float","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-tap-info/#tapinfo","text":"[androidJvm]\\ class TapInfo (r2FXLLayout: R2FXLLayout , e: MotionEvent )","title":"TapInfo"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-tap-info/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-tap-info/#functions","text":"Name Summary toString [androidJvm] open override fun toString (): String","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-tap-info/#properties","text":"Name Summary view [androidJvm] var view : View x [androidJvm] var x : Float y [androidJvm] var y : Float","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-tap-info/-tap-info/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / TapInfo / TapInfo TapInfo \u00b6 [androidJvm]\\ fun TapInfo (r2FXLLayout: R2FXLLayout , e: MotionEvent )","title":" tap info"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-tap-info/-tap-info/#tapinfo","text":"[androidJvm]\\ fun TapInfo (r2FXLLayout: R2FXLLayout , e: MotionEvent )","title":"TapInfo"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-tap-info/to-string/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / TapInfo / toString toString \u00b6 [androidJvm]\\ open override fun toString (): String","title":"To string"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-tap-info/to-string/#tostring","text":"[androidJvm]\\ open override fun toString (): String","title":"toString"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-tap-info/view/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / TapInfo / view view \u00b6 [androidJvm]\\ var view : View","title":"View"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-tap-info/view/#view","text":"[androidJvm]\\ var view : View","title":"view"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-tap-info/x/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / TapInfo / x x \u00b6 [androidJvm]\\ var x : Float","title":"X"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-tap-info/x/#x","text":"[androidJvm]\\ var x : Float","title":"x"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-tap-info/y/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / TapInfo / y y \u00b6 [androidJvm]\\ var y : Float","title":"Y"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-tap-info/y/#y","text":"[androidJvm]\\ var y : Float","title":"y"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-tap-info/-companion/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLLayout / TapInfo / Companion Companion \u00b6 [androidJvm]\\ object Companion","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-layout/-tap-info/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-on-double-tap-listener/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLOnDoubleTapListener R2FXLOnDoubleTapListener \u00b6 [androidJvm]\\ class R2FXLOnDoubleTapListener (threeStep: Boolean ) : R2FXLLayout.OnDoubleTapListener Functions \u00b6 Name Summary onDoubleTap [androidJvm] open override fun onDoubleTap (view: R2FXLLayout , info: R2FXLLayout.TapInfo ): Boolean","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-on-double-tap-listener/#r2fxlondoubletaplistener","text":"[androidJvm]\\ class R2FXLOnDoubleTapListener (threeStep: Boolean ) : R2FXLLayout.OnDoubleTapListener","title":"R2FXLOnDoubleTapListener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-on-double-tap-listener/#functions","text":"Name Summary onDoubleTap [androidJvm] open override fun onDoubleTap (view: R2FXLLayout , info: R2FXLLayout.TapInfo ): Boolean","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-on-double-tap-listener/-r2-f-x-l-on-double-tap-listener/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLOnDoubleTapListener / R2FXLOnDoubleTapListener R2FXLOnDoubleTapListener \u00b6 [androidJvm]\\ fun R2FXLOnDoubleTapListener (threeStep: Boolean )","title":" r2 f x l on double tap listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-on-double-tap-listener/-r2-f-x-l-on-double-tap-listener/#r2fxlondoubletaplistener","text":"[androidJvm]\\ fun R2FXLOnDoubleTapListener (threeStep: Boolean )","title":"R2FXLOnDoubleTapListener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-on-double-tap-listener/on-double-tap/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLOnDoubleTapListener / onDoubleTap onDoubleTap \u00b6 [androidJvm]\\ open override fun onDoubleTap (view: R2FXLLayout , info: R2FXLLayout.TapInfo ): Boolean","title":"On double tap"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-on-double-tap-listener/on-double-tap/#ondoubletap","text":"[androidJvm]\\ open override fun onDoubleTap (view: R2FXLLayout , info: R2FXLLayout.TapInfo ): Boolean","title":"onDoubleTap"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-scroller/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLScroller R2FXLScroller \u00b6 [androidJvm]\\ abstract class R2FXLScroller Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary computeScrollOffset [androidJvm] abstract fun computeScrollOffset (): Boolean fling [androidJvm] abstract fun fling (startX: Int , startY: Int , velocityX: Int , velocityY: Int , minX: Int , maxX: Int , minY: Int , maxY: Int , overX: Int , overY: Int ) forceFinished [androidJvm] abstract fun forceFinished (finished: Boolean ) Properties \u00b6 Name Summary currX [androidJvm] abstract val currX : Int currY [androidJvm] abstract val currY : Int isFinished [androidJvm] abstract val isFinished : Boolean","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-scroller/#r2fxlscroller","text":"[androidJvm]\\ abstract class R2FXLScroller","title":"R2FXLScroller"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-scroller/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-scroller/#functions","text":"Name Summary computeScrollOffset [androidJvm] abstract fun computeScrollOffset (): Boolean fling [androidJvm] abstract fun fling (startX: Int , startY: Int , velocityX: Int , velocityY: Int , minX: Int , maxX: Int , minY: Int , maxY: Int , overX: Int , overY: Int ) forceFinished [androidJvm] abstract fun forceFinished (finished: Boolean )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-scroller/#properties","text":"Name Summary currX [androidJvm] abstract val currX : Int currY [androidJvm] abstract val currY : Int isFinished [androidJvm] abstract val isFinished : Boolean","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-scroller/-r2-f-x-l-scroller/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLScroller / R2FXLScroller R2FXLScroller \u00b6 [androidJvm]\\ fun R2FXLScroller ()","title":" r2 f x l scroller"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-scroller/-r2-f-x-l-scroller/#r2fxlscroller","text":"[androidJvm]\\ fun R2FXLScroller ()","title":"R2FXLScroller"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-scroller/compute-scroll-offset/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLScroller / computeScrollOffset computeScrollOffset \u00b6 [androidJvm]\\ abstract fun computeScrollOffset (): Boolean","title":"Compute scroll offset"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-scroller/compute-scroll-offset/#computescrolloffset","text":"[androidJvm]\\ abstract fun computeScrollOffset (): Boolean","title":"computeScrollOffset"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-scroller/curr-x/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLScroller / currX currX \u00b6 [androidJvm]\\ abstract val currX : Int","title":"Curr x"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-scroller/curr-x/#currx","text":"[androidJvm]\\ abstract val currX : Int","title":"currX"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-scroller/curr-y/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLScroller / currY currY \u00b6 [androidJvm]\\ abstract val currY : Int","title":"Curr y"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-scroller/curr-y/#curry","text":"[androidJvm]\\ abstract val currY : Int","title":"currY"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-scroller/fling/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLScroller / fling fling \u00b6 [androidJvm]\\ abstract fun fling (startX: Int , startY: Int , velocityX: Int , velocityY: Int , minX: Int , maxX: Int , minY: Int , maxY: Int , overX: Int , overY: Int )","title":"Fling"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-scroller/fling/#fling","text":"[androidJvm]\\ abstract fun fling (startX: Int , startY: Int , velocityX: Int , velocityY: Int , minX: Int , maxX: Int , minY: Int , maxY: Int , overX: Int , overY: Int )","title":"fling"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-scroller/force-finished/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLScroller / forceFinished forceFinished \u00b6 [androidJvm]\\ abstract fun forceFinished (finished: Boolean )","title":"Force finished"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-scroller/force-finished/#forcefinished","text":"[androidJvm]\\ abstract fun forceFinished (finished: Boolean )","title":"forceFinished"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-scroller/is-finished/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLScroller / isFinished isFinished \u00b6 [androidJvm]\\ abstract val isFinished : Boolean","title":"Is finished"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-scroller/is-finished/#isfinished","text":"[androidJvm]\\ abstract val isFinished : Boolean","title":"isFinished"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-scroller/-companion/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLScroller / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary getScroller [androidJvm] fun getScroller (context: Context ): R2FXLScroller","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-scroller/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-scroller/-companion/#functions","text":"Name Summary getScroller [androidJvm] fun getScroller (context: Context ): R2FXLScroller","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-scroller/-companion/get-scroller/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLScroller / Companion / getScroller getScroller \u00b6 [androidJvm]\\ fun getScroller (context: Context ): R2FXLScroller","title":"Get scroller"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-scroller/-companion/get-scroller/#getscroller","text":"[androidJvm]\\ fun getScroller (context: Context ): R2FXLScroller","title":"getScroller"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-utils/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLUtils R2FXLUtils \u00b6 [androidJvm]\\ object R2FXLUtils Functions \u00b6 Name Summary setArray [androidJvm] fun setArray (array: FloatArray , rect: Rect ) fun setArray (array: FloatArray , rect: RectF ) setRect [androidJvm] fun setRect (rect: Rect , array: FloatArray ) fun setRect (rect: RectF , array: FloatArray ) fun setRect (rect: RectF , left: Float , top: Float , right: Float , bottom: Float ) Round and set the values on the rectangle","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-utils/#r2fxlutils","text":"[androidJvm]\\ object R2FXLUtils","title":"R2FXLUtils"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-utils/#functions","text":"Name Summary setArray [androidJvm] fun setArray (array: FloatArray , rect: Rect ) fun setArray (array: FloatArray , rect: RectF ) setRect [androidJvm] fun setRect (rect: Rect , array: FloatArray ) fun setRect (rect: RectF , array: FloatArray ) fun setRect (rect: RectF , left: Float , top: Float , right: Float , bottom: Float ) Round and set the values on the rectangle","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-utils/set-array/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLUtils / setArray setArray \u00b6 [androidJvm]\\ fun setArray (array: FloatArray , rect: Rect ) fun setArray (array: FloatArray , rect: RectF )","title":"Set array"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-utils/set-array/#setarray","text":"[androidJvm]\\ fun setArray (array: FloatArray , rect: Rect ) fun setArray (array: FloatArray , rect: RectF )","title":"setArray"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-utils/set-rect/","text":"// navigator / org.readium.r2.navigator.epub.fxl / R2FXLUtils / setRect setRect \u00b6 [androidJvm]\\ fun setRect (rect: Rect , array: FloatArray ) fun setRect (rect: RectF , array: FloatArray ) Round and set the values on the rectangle Parameters \u00b6 androidJvm rect the rectangle to set array the array to read the values from [androidJvm]\\ fun setRect (rect: RectF , left: Float , top: Float , right: Float , bottom: Float ) Round and set the values on the rectangle Parameters \u00b6 androidJvm rect the rectangle to set left left top top right right bottom bottom","title":"Set rect"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-utils/set-rect/#setrect","text":"[androidJvm]\\ fun setRect (rect: Rect , array: FloatArray ) fun setRect (rect: RectF , array: FloatArray ) Round and set the values on the rectangle","title":"setRect"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-utils/set-rect/#parameters","text":"androidJvm rect the rectangle to set array the array to read the values from [androidJvm]\\ fun setRect (rect: RectF , left: Float , top: Float , right: Float , bottom: Float ) Round and set the values on the rectangle","title":"Parameters"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.epub.fxl/-r2-f-x-l-utils/set-rect/#parameters_1","text":"androidJvm rect the rectangle to set left left top top right right bottom bottom","title":"Parameters"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.extensions/","text":"// navigator / org.readium.r2.navigator.extensions Package org.readium.r2.navigator.extensions \u00b6 Functions \u00b6 Name Summary color [androidJvm] @ ColorInt fun Context . color (@ ColorRes id: Int ): Int layoutDirectionIsRTL [androidJvm] fun Activity . layoutDirectionIsRTL (): Boolean returns true if the resolved layout direction of the content view in this activity is ViewCompat.LAYOUT_DIRECTION_RTL. Otherwise false. optRectF [androidJvm] fun JSONObject . optRectF (name: String ): RectF ? Parses a RectF from its JSON representation.","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.extensions/#package-orgreadiumr2navigatorextensions","text":"","title":"Package org.readium.r2.navigator.extensions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.extensions/#functions","text":"Name Summary color [androidJvm] @ ColorInt fun Context . color (@ ColorRes id: Int ): Int layoutDirectionIsRTL [androidJvm] fun Activity . layoutDirectionIsRTL (): Boolean returns true if the resolved layout direction of the content view in this activity is ViewCompat.LAYOUT_DIRECTION_RTL. Otherwise false. optRectF [androidJvm] fun JSONObject . optRectF (name: String ): RectF ? Parses a RectF from its JSON representation.","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.extensions/color/","text":"// navigator / org.readium.r2.navigator.extensions / color color \u00b6 [androidJvm]\\ @ ColorInt fun Context . color (@ ColorRes id: Int ): Int","title":"Color"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.extensions/color/#color","text":"[androidJvm]\\ @ ColorInt fun Context . color (@ ColorRes id: Int ): Int","title":"color"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.extensions/layout-direction-is-r-t-l/","text":"// navigator / org.readium.r2.navigator.extensions / layoutDirectionIsRTL layoutDirectionIsRTL \u00b6 [androidJvm]\\ fun Activity . layoutDirectionIsRTL (): Boolean returns true if the resolved layout direction of the content view in this activity is ViewCompat.LAYOUT_DIRECTION_RTL. Otherwise false.","title":"Layout direction is r t l"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.extensions/layout-direction-is-r-t-l/#layoutdirectionisrtl","text":"[androidJvm]\\ fun Activity . layoutDirectionIsRTL (): Boolean returns true if the resolved layout direction of the content view in this activity is ViewCompat.LAYOUT_DIRECTION_RTL. Otherwise false.","title":"layoutDirectionIsRTL"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.extensions/opt-rect-f/","text":"// navigator / org.readium.r2.navigator.extensions / optRectF optRectF \u00b6 [androidJvm]\\ fun JSONObject . optRectF (name: String ): RectF ? Parses a RectF from its JSON representation.","title":"Opt rect f"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.extensions/opt-rect-f/#optrectf","text":"[androidJvm]\\ fun JSONObject . optRectF (name: String ): RectF ? Parses a RectF from its JSON representation.","title":"optRectF"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/","text":"// navigator / org.readium.r2.navigator.html Package org.readium.r2.navigator.html \u00b6 Types \u00b6 Name Summary HtmlDecorationTemplate [androidJvm] data class HtmlDecorationTemplate (layout: HtmlDecorationTemplate.Layout , width: HtmlDecorationTemplate.Width , element: ( Decoration ) -> String , stylesheet: String ?) : JSONable An HtmlDecorationTemplate renders a Decoration into a set of HTML elements and associated stylesheet. HtmlDecorationTemplates [androidJvm] class HtmlDecorationTemplates : JSONable Functions \u00b6 Name Summary toCss [androidJvm] fun Int . toCss (alpha: Double ? = null): String Converts the receiver color int to a CSS expression.","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/#package-orgreadiumr2navigatorhtml","text":"","title":"Package org.readium.r2.navigator.html"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/#types","text":"Name Summary HtmlDecorationTemplate [androidJvm] data class HtmlDecorationTemplate (layout: HtmlDecorationTemplate.Layout , width: HtmlDecorationTemplate.Width , element: ( Decoration ) -> String , stylesheet: String ?) : JSONable An HtmlDecorationTemplate renders a Decoration into a set of HTML elements and associated stylesheet. HtmlDecorationTemplates [androidJvm] class HtmlDecorationTemplates : JSONable","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/#functions","text":"Name Summary toCss [androidJvm] fun Int . toCss (alpha: Double ? = null): String Converts the receiver color int to a CSS expression.","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/to-css/","text":"// navigator / org.readium.r2.navigator.html / toCss toCss \u00b6 [androidJvm]\\ fun Int . toCss (alpha: Double ? = null): String Converts the receiver color int to a CSS expression. Parameters \u00b6 androidJvm alpha When set, overrides the actual color alpha.","title":"To css"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/to-css/#tocss","text":"[androidJvm]\\ fun Int . toCss (alpha: Double ? = null): String Converts the receiver color int to a CSS expression.","title":"toCss"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/to-css/#parameters","text":"androidJvm alpha When set, overrides the actual color alpha.","title":"Parameters"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplate HtmlDecorationTemplate \u00b6 [androidJvm]\\ data class HtmlDecorationTemplate (layout: HtmlDecorationTemplate.Layout , width: HtmlDecorationTemplate.Width , element: ( Decoration ) -> String , stylesheet: String ?) : JSONable An HtmlDecorationTemplate renders a Decoration into a set of HTML elements and associated stylesheet. Parameters \u00b6 androidJvm layout Determines the number of created HTML elements and their position relative to the matching DOM range. width Indicates how the width of each created HTML element expands in the viewport. element Closure used to generate a new HTML element for the given Decoration . Several elements will be created for a single decoration when using the BOXES layout. The Navigator will automatically position the created elements according to the decoration's Locator. The template is only responsible for the look and feel of the generated elements. Every child elements with a data-activable=\"1\" HTML attribute will handle tap events. If no element has this attribute, the root element will handle taps. stylesheet A CSS stylesheet which will be injected in the resource, which can be referenced by the created elements. Make sure to use unique identifiers for your classes and IDs to avoid conflicts with the HTML resource itself. Best practice is to prefix with your app name. r2- and readium- are reserved by the Readium toolkit. Constructors \u00b6 HtmlDecorationTemplate [androidJvm] fun HtmlDecorationTemplate (layout: HtmlDecorationTemplate.Layout , width: HtmlDecorationTemplate.Width = Width.WRAP, element: ( Decoration ) -> String = { \"<div/>\" }, stylesheet: String ? = null) Types \u00b6 Name Summary Companion [androidJvm] object Companion Layout [androidJvm] enum Layout : Enum < HtmlDecorationTemplate.Layout > , Parcelable Determines the number of created HTML elements and their position relative to the matching DOM range. Width [androidJvm] enum Width : Enum < HtmlDecorationTemplate.Width > , Parcelable Indicates how the width of each created HTML element expands in the viewport. Functions \u00b6 Name Summary toJSON [androidJvm] open override fun toJSON (): JSONObject Properties \u00b6 Name Summary element [androidJvm] val element : ( Decoration ) -> String layout [androidJvm] val layout : HtmlDecorationTemplate.Layout stylesheet [androidJvm] val stylesheet : String ? = null width [androidJvm] val width : HtmlDecorationTemplate.Width","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/#htmldecorationtemplate","text":"[androidJvm]\\ data class HtmlDecorationTemplate (layout: HtmlDecorationTemplate.Layout , width: HtmlDecorationTemplate.Width , element: ( Decoration ) -> String , stylesheet: String ?) : JSONable An HtmlDecorationTemplate renders a Decoration into a set of HTML elements and associated stylesheet.","title":"HtmlDecorationTemplate"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/#parameters","text":"androidJvm layout Determines the number of created HTML elements and their position relative to the matching DOM range. width Indicates how the width of each created HTML element expands in the viewport. element Closure used to generate a new HTML element for the given Decoration . Several elements will be created for a single decoration when using the BOXES layout. The Navigator will automatically position the created elements according to the decoration's Locator. The template is only responsible for the look and feel of the generated elements. Every child elements with a data-activable=\"1\" HTML attribute will handle tap events. If no element has this attribute, the root element will handle taps. stylesheet A CSS stylesheet which will be injected in the resource, which can be referenced by the created elements. Make sure to use unique identifiers for your classes and IDs to avoid conflicts with the HTML resource itself. Best practice is to prefix with your app name. r2- and readium- are reserved by the Readium toolkit.","title":"Parameters"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/#constructors","text":"HtmlDecorationTemplate [androidJvm] fun HtmlDecorationTemplate (layout: HtmlDecorationTemplate.Layout , width: HtmlDecorationTemplate.Width = Width.WRAP, element: ( Decoration ) -> String = { \"<div/>\" }, stylesheet: String ? = null)","title":"Constructors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/#types","text":"Name Summary Companion [androidJvm] object Companion Layout [androidJvm] enum Layout : Enum < HtmlDecorationTemplate.Layout > , Parcelable Determines the number of created HTML elements and their position relative to the matching DOM range. Width [androidJvm] enum Width : Enum < HtmlDecorationTemplate.Width > , Parcelable Indicates how the width of each created HTML element expands in the viewport.","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/#functions","text":"Name Summary toJSON [androidJvm] open override fun toJSON (): JSONObject","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/#properties","text":"Name Summary element [androidJvm] val element : ( Decoration ) -> String layout [androidJvm] val layout : HtmlDecorationTemplate.Layout stylesheet [androidJvm] val stylesheet : String ? = null width [androidJvm] val width : HtmlDecorationTemplate.Width","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-html-decoration-template/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplate / HtmlDecorationTemplate HtmlDecorationTemplate \u00b6 [androidJvm]\\ fun HtmlDecorationTemplate (layout: HtmlDecorationTemplate.Layout , width: HtmlDecorationTemplate.Width = Width.WRAP, element: ( Decoration ) -> String = { \"<div/>\" }, stylesheet: String ? = null) Parameters \u00b6 androidJvm layout Determines the number of created HTML elements and their position relative to the matching DOM range. width Indicates how the width of each created HTML element expands in the viewport. element Closure used to generate a new HTML element for the given Decoration . Several elements will be created for a single decoration when using the BOXES layout. The Navigator will automatically position the created elements according to the decoration's Locator. The template is only responsible for the look and feel of the generated elements. Every child elements with a data-activable=\"1\" HTML attribute will handle tap events. If no element has this attribute, the root element will handle taps. stylesheet A CSS stylesheet which will be injected in the resource, which can be referenced by the created elements. Make sure to use unique identifiers for your classes and IDs to avoid conflicts with the HTML resource itself. Best practice is to prefix with your app name. r2- and readium- are reserved by the Readium toolkit.","title":" html decoration template"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-html-decoration-template/#htmldecorationtemplate","text":"[androidJvm]\\ fun HtmlDecorationTemplate (layout: HtmlDecorationTemplate.Layout , width: HtmlDecorationTemplate.Width = Width.WRAP, element: ( Decoration ) -> String = { \"<div/>\" }, stylesheet: String ? = null)","title":"HtmlDecorationTemplate"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-html-decoration-template/#parameters","text":"androidJvm layout Determines the number of created HTML elements and their position relative to the matching DOM range. width Indicates how the width of each created HTML element expands in the viewport. element Closure used to generate a new HTML element for the given Decoration . Several elements will be created for a single decoration when using the BOXES layout. The Navigator will automatically position the created elements according to the decoration's Locator. The template is only responsible for the look and feel of the generated elements. Every child elements with a data-activable=\"1\" HTML attribute will handle tap events. If no element has this attribute, the root element will handle taps. stylesheet A CSS stylesheet which will be injected in the resource, which can be referenced by the created elements. Make sure to use unique identifiers for your classes and IDs to avoid conflicts with the HTML resource itself. Best practice is to prefix with your app name. r2- and readium- are reserved by the Readium toolkit.","title":"Parameters"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/element/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplate / element element \u00b6 [androidJvm]\\ val element : ( Decoration ) -> String","title":"Element"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/element/#element","text":"[androidJvm]\\ val element : ( Decoration ) -> String","title":"element"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/layout/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplate / layout layout \u00b6 [androidJvm]\\ val layout : HtmlDecorationTemplate.Layout","title":"Layout"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/layout/#layout","text":"[androidJvm]\\ val layout : HtmlDecorationTemplate.Layout","title":"layout"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/stylesheet/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplate / stylesheet stylesheet \u00b6 [androidJvm]\\ val stylesheet : String ? = null","title":"Stylesheet"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/stylesheet/#stylesheet","text":"[androidJvm]\\ val stylesheet : String ? = null","title":"stylesheet"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/to-j-s-o-n/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplate / toJSON toJSON \u00b6 [androidJvm]\\ open override fun toJSON (): JSONObject","title":"To j s o n"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/to-j-s-o-n/#tojson","text":"[androidJvm]\\ open override fun toJSON (): JSONObject","title":"toJSON"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/width/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplate / width width \u00b6 [androidJvm]\\ val width : HtmlDecorationTemplate.Width","title":"Width"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/width/#width","text":"[androidJvm]\\ val width : HtmlDecorationTemplate.Width","title":"width"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-companion/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplate / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary highlight [androidJvm] fun highlight (@ ColorInt defaultTint: Int , lineWeight: Int , cornerRadius: Int , alpha: Double ): HtmlDecorationTemplate Creates a new decoration template for the highlight style. underline [androidJvm] fun underline (@ ColorInt defaultTint: Int , lineWeight: Int , cornerRadius: Int , alpha: Double ): HtmlDecorationTemplate Creates a new decoration template for the underline style.","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-companion/#functions","text":"Name Summary highlight [androidJvm] fun highlight (@ ColorInt defaultTint: Int , lineWeight: Int , cornerRadius: Int , alpha: Double ): HtmlDecorationTemplate Creates a new decoration template for the highlight style. underline [androidJvm] fun underline (@ ColorInt defaultTint: Int , lineWeight: Int , cornerRadius: Int , alpha: Double ): HtmlDecorationTemplate Creates a new decoration template for the underline style.","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-companion/highlight/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplate / Companion / highlight highlight \u00b6 [androidJvm]\\ fun highlight (@ ColorInt defaultTint: Int , lineWeight: Int , cornerRadius: Int , alpha: Double ): HtmlDecorationTemplate Creates a new decoration template for the highlight style.","title":"Highlight"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-companion/highlight/#highlight","text":"[androidJvm]\\ fun highlight (@ ColorInt defaultTint: Int , lineWeight: Int , cornerRadius: Int , alpha: Double ): HtmlDecorationTemplate Creates a new decoration template for the highlight style.","title":"highlight"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-companion/underline/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplate / Companion / underline underline \u00b6 [androidJvm]\\ fun underline (@ ColorInt defaultTint: Int , lineWeight: Int , cornerRadius: Int , alpha: Double ): HtmlDecorationTemplate Creates a new decoration template for the underline style.","title":"Underline"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-companion/underline/#underline","text":"[androidJvm]\\ fun underline (@ ColorInt defaultTint: Int , lineWeight: Int , cornerRadius: Int , alpha: Double ): HtmlDecorationTemplate Creates a new decoration template for the underline style.","title":"underline"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-layout/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplate / Layout Layout \u00b6 [androidJvm]\\ enum Layout : Enum < HtmlDecorationTemplate.Layout > , Parcelable Determines the number of created HTML elements and their position relative to the matching DOM range. Entries \u00b6 BOXES [androidJvm] BOXES (\"boxes\") One HTML element for each CSS border box (e.g. line of text). BOUNDS [androidJvm] BOUNDS (\"bounds\") A single HTML element covering the smallest region containing all CSS border boxes. Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-layout/#layout","text":"[androidJvm]\\ enum Layout : Enum < HtmlDecorationTemplate.Layout > , Parcelable Determines the number of created HTML elements and their position relative to the matching DOM range.","title":"Layout"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-layout/#entries","text":"BOXES [androidJvm] BOXES (\"boxes\") One HTML element for each CSS border box (e.g. line of text). BOUNDS [androidJvm] BOUNDS (\"bounds\") A single HTML element covering the smallest region containing all CSS border boxes.","title":"Entries"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-layout/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-layout/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-layout/value/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplate / Layout / value value \u00b6 [androidJvm]\\ val value : String","title":"Value"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-layout/value/#value","text":"[androidJvm]\\ val value : String","title":"value"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-layout/-b-o-u-n-d-s/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplate / Layout / BOUNDS BOUNDS \u00b6 [androidJvm]\\ BOUNDS (\"bounds\") A single HTML element covering the smallest region containing all CSS border boxes. Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-layout/-b-o-u-n-d-s/#bounds","text":"[androidJvm]\\ BOUNDS (\"bounds\") A single HTML element covering the smallest region containing all CSS border boxes.","title":"BOUNDS"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-layout/-b-o-u-n-d-s/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-layout/-b-o-u-n-d-s/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-layout/-b-o-x-e-s/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplate / Layout / BOXES BOXES \u00b6 [androidJvm]\\ BOXES (\"boxes\") One HTML element for each CSS border box (e.g. line of text). Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-layout/-b-o-x-e-s/#boxes","text":"[androidJvm]\\ BOXES (\"boxes\") One HTML element for each CSS border box (e.g. line of text).","title":"BOXES"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-layout/-b-o-x-e-s/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-layout/-b-o-x-e-s/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-width/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplate / Width Width \u00b6 [androidJvm]\\ enum Width : Enum < HtmlDecorationTemplate.Width > , Parcelable Indicates how the width of each created HTML element expands in the viewport. Entries \u00b6 PAGE [androidJvm] PAGE (\"page\") Fills the whole viewport. VIEWPORT [androidJvm] VIEWPORT (\"viewport\") Fills the anchor page, useful for dual page. BOUNDS [androidJvm] BOUNDS (\"bounds\") Fills the bounds layout. WRAP [androidJvm] WRAP (\"wrap\") Smallest width fitting the CSS border box. Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-width/#width","text":"[androidJvm]\\ enum Width : Enum < HtmlDecorationTemplate.Width > , Parcelable Indicates how the width of each created HTML element expands in the viewport.","title":"Width"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-width/#entries","text":"PAGE [androidJvm] PAGE (\"page\") Fills the whole viewport. VIEWPORT [androidJvm] VIEWPORT (\"viewport\") Fills the anchor page, useful for dual page. BOUNDS [androidJvm] BOUNDS (\"bounds\") Fills the bounds layout. WRAP [androidJvm] WRAP (\"wrap\") Smallest width fitting the CSS border box.","title":"Entries"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-width/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-width/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-width/value/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplate / Width / value value \u00b6 [androidJvm]\\ val value : String","title":"Value"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-width/value/#value","text":"[androidJvm]\\ val value : String","title":"value"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-width/-b-o-u-n-d-s/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplate / Width / BOUNDS BOUNDS \u00b6 [androidJvm]\\ BOUNDS (\"bounds\") Fills the bounds layout. Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-width/-b-o-u-n-d-s/#bounds","text":"[androidJvm]\\ BOUNDS (\"bounds\") Fills the bounds layout.","title":"BOUNDS"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-width/-b-o-u-n-d-s/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-width/-b-o-u-n-d-s/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-width/-p-a-g-e/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplate / Width / PAGE PAGE \u00b6 [androidJvm]\\ PAGE (\"page\") Fills the whole viewport. Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-width/-p-a-g-e/#page","text":"[androidJvm]\\ PAGE (\"page\") Fills the whole viewport.","title":"PAGE"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-width/-p-a-g-e/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-width/-p-a-g-e/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-width/-v-i-e-w-p-o-r-t/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplate / Width / VIEWPORT VIEWPORT \u00b6 [androidJvm]\\ VIEWPORT (\"viewport\") Fills the anchor page, useful for dual page. Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-width/-v-i-e-w-p-o-r-t/#viewport","text":"[androidJvm]\\ VIEWPORT (\"viewport\") Fills the anchor page, useful for dual page.","title":"VIEWPORT"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-width/-v-i-e-w-p-o-r-t/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-width/-v-i-e-w-p-o-r-t/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-width/-w-r-a-p/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplate / Width / WRAP WRAP \u00b6 [androidJvm]\\ WRAP (\"wrap\") Smallest width fitting the CSS border box. Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-width/-w-r-a-p/#wrap","text":"[androidJvm]\\ WRAP (\"wrap\") Smallest width fitting the CSS border box.","title":"WRAP"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-width/-w-r-a-p/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-template/-width/-w-r-a-p/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-templates/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplates HtmlDecorationTemplates \u00b6 [androidJvm]\\ class HtmlDecorationTemplates : JSONable Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary copy [androidJvm] fun copy (): HtmlDecorationTemplates get [androidJvm] operator fun < S : Decoration.Style > get (style: KClass < S >): HtmlDecorationTemplate ? set [androidJvm] operator fun < S : Decoration.Style > set (style: KClass < S >, template: HtmlDecorationTemplate ) toJSON [androidJvm] open override fun toJSON (): JSONObject","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-templates/#htmldecorationtemplates","text":"[androidJvm]\\ class HtmlDecorationTemplates : JSONable","title":"HtmlDecorationTemplates"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-templates/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-templates/#functions","text":"Name Summary copy [androidJvm] fun copy (): HtmlDecorationTemplates get [androidJvm] operator fun < S : Decoration.Style > get (style: KClass < S >): HtmlDecorationTemplate ? set [androidJvm] operator fun < S : Decoration.Style > set (style: KClass < S >, template: HtmlDecorationTemplate ) toJSON [androidJvm] open override fun toJSON (): JSONObject","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-templates/copy/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplates / copy copy \u00b6 [androidJvm]\\ fun copy (): HtmlDecorationTemplates","title":"Copy"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-templates/copy/#copy","text":"[androidJvm]\\ fun copy (): HtmlDecorationTemplates","title":"copy"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-templates/get/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplates / get get \u00b6 [androidJvm]\\ operator fun < S : Decoration.Style > get (style: KClass < S >): HtmlDecorationTemplate ?","title":"Get"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-templates/get/#get","text":"[androidJvm]\\ operator fun < S : Decoration.Style > get (style: KClass < S >): HtmlDecorationTemplate ?","title":"get"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-templates/set/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplates / set set \u00b6 [androidJvm]\\ operator fun < S : Decoration.Style > set (style: KClass < S >, template: HtmlDecorationTemplate )","title":"Set"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-templates/set/#set","text":"[androidJvm]\\ operator fun < S : Decoration.Style > set (style: KClass < S >, template: HtmlDecorationTemplate )","title":"set"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-templates/to-j-s-o-n/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplates / toJSON toJSON \u00b6 [androidJvm]\\ open override fun toJSON (): JSONObject","title":"To j s o n"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-templates/to-j-s-o-n/#tojson","text":"[androidJvm]\\ open override fun toJSON (): JSONObject","title":"toJSON"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-templates/-companion/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplates / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary defaultTemplates [androidJvm] fun defaultTemplates (@ ColorInt defaultTint: Int = Color.YELLOW, lineWeight: Int = 2, cornerRadius: Int = 3, alpha: Double = 0.3): HtmlDecorationTemplates Creates the default list of decoration styles with associated HTML templates. invoke [androidJvm] operator fun invoke (build: HtmlDecorationTemplates .() -> Unit ): HtmlDecorationTemplates","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-templates/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-templates/-companion/#functions","text":"Name Summary defaultTemplates [androidJvm] fun defaultTemplates (@ ColorInt defaultTint: Int = Color.YELLOW, lineWeight: Int = 2, cornerRadius: Int = 3, alpha: Double = 0.3): HtmlDecorationTemplates Creates the default list of decoration styles with associated HTML templates. invoke [androidJvm] operator fun invoke (build: HtmlDecorationTemplates .() -> Unit ): HtmlDecorationTemplates","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-templates/-companion/default-templates/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplates / Companion / defaultTemplates defaultTemplates \u00b6 [androidJvm]\\ fun defaultTemplates (@ ColorInt defaultTint: Int = Color.YELLOW, lineWeight: Int = 2, cornerRadius: Int = 3, alpha: Double = 0.3): HtmlDecorationTemplates Creates the default list of decoration styles with associated HTML templates.","title":"Default templates"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-templates/-companion/default-templates/#defaulttemplates","text":"[androidJvm]\\ fun defaultTemplates (@ ColorInt defaultTint: Int = Color.YELLOW, lineWeight: Int = 2, cornerRadius: Int = 3, alpha: Double = 0.3): HtmlDecorationTemplates Creates the default list of decoration styles with associated HTML templates.","title":"defaultTemplates"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-templates/-companion/invoke/","text":"// navigator / org.readium.r2.navigator.html / HtmlDecorationTemplates / Companion / invoke invoke \u00b6 [androidJvm]\\ operator fun invoke (build: HtmlDecorationTemplates .() -> Unit ): HtmlDecorationTemplates","title":"Invoke"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.html/-html-decoration-templates/-companion/invoke/#invoke","text":"[androidJvm]\\ operator fun invoke (build: HtmlDecorationTemplates .() -> Unit ): HtmlDecorationTemplates","title":"invoke"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/","text":"// navigator / org.readium.r2.navigator.image Package org.readium.r2.navigator.image \u00b6 Types \u00b6 Name Summary ImageNavigatorFragment [androidJvm] class ImageNavigatorFragment : Fragment , CoroutineScope, VisualNavigator Navigator for bitmap-based publications, such as CBZ.","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/#package-orgreadiumr2navigatorimage","text":"","title":"Package org.readium.r2.navigator.image"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/#types","text":"Name Summary ImageNavigatorFragment [androidJvm] class ImageNavigatorFragment : Fragment , CoroutineScope, VisualNavigator Navigator for bitmap-based publications, such as CBZ.","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/","text":"// navigator / org.readium.r2.navigator.image / ImageNavigatorFragment ImageNavigatorFragment \u00b6 [androidJvm]\\ class ImageNavigatorFragment : Fragment , CoroutineScope, VisualNavigator Navigator for bitmap-based publications, such as CBZ. Types \u00b6 Name Summary Companion [androidJvm] object Companion Listener [androidJvm] interface Listener : VisualNavigator.Listener Functions \u00b6 Name Summary callStartTransitionListener [androidJvm] open fun callStartTransitionListener (p0: Boolean ) createFragmentContainer [androidJvm] @ NonNull open fun createFragmentContainer (): FragmentContainer dump [androidJvm] open fun dump (@ NonNull p0: String , @ Nullable p1: FileDescriptor ?, @ NonNull p2: PrintWriter , @ Nullable p3: Array < String >?) equals [androidJvm] operator override fun equals (@ Nullable other: Any ?): Boolean findFragmentByWho [androidJvm] @ Nullable open fun findFragmentByWho (@ NonNull p0: String ): Fragment ? generateActivityResultKey [androidJvm] @ NonNull open fun generateActivityResultKey (): String getActivity [androidJvm] @ Nullable fun getActivity (): FragmentActivity ? getAllowEnterTransitionOverlap [androidJvm] open fun getAllowEnterTransitionOverlap (): Boolean getAllowReturnTransitionOverlap [androidJvm] open fun getAllowReturnTransitionOverlap (): Boolean getAnimatingAway [androidJvm] open fun getAnimatingAway (): View getAnimator [androidJvm] open fun getAnimator (): Animator getArguments [androidJvm] @ Nullable fun getArguments (): Bundle ? getChildFragmentManager [androidJvm] @ NonNull fun getChildFragmentManager (): FragmentManager getContext [androidJvm] @ Nullable open fun getContext (): Context ? getDefaultViewModelProviderFactory [androidJvm] @ NonNull open override fun getDefaultViewModelProviderFactory (): ViewModelProvider.Factory getEnterAnim [androidJvm] open fun getEnterAnim (): Int getEnterTransition [androidJvm] @ Nullable open fun getEnterTransition (): Any ? getEnterTransitionCallback [androidJvm] open fun getEnterTransitionCallback (): SharedElementCallback getExitAnim [androidJvm] open fun getExitAnim (): Int getExitTransition [androidJvm] @ Nullable open fun getExitTransition (): Any ? getExitTransitionCallback [androidJvm] open fun getExitTransitionCallback (): SharedElementCallback getFocusedView [androidJvm] open fun getFocusedView (): View getHost [androidJvm] @ Nullable fun getHost (): Any ? getId [androidJvm] fun getId (): Int getLayoutInflater [androidJvm] @ NonNull fun getLayoutInflater (): LayoutInflater getLifecycle [androidJvm] @ NonNull open override fun getLifecycle (): Lifecycle getNextTransition [androidJvm] open fun getNextTransition (): Int getParentFragment [androidJvm] @ Nullable fun getParentFragment (): Fragment ? getParentFragmentManager [androidJvm] @ NonNull fun getParentFragmentManager (): FragmentManager getPopDirection [androidJvm] open fun getPopDirection (): Boolean getPopEnterAnim [androidJvm] open fun getPopEnterAnim (): Int getPopExitAnim [androidJvm] open fun getPopExitAnim (): Int getPostOnViewCreatedAlpha [androidJvm] open fun getPostOnViewCreatedAlpha (): Float getReenterTransition [androidJvm] @ Nullable open fun getReenterTransition (): Any ? getResources [androidJvm] @ NonNull fun getResources (): Resources getReturnTransition [androidJvm] @ Nullable open fun getReturnTransition (): Any ? getSavedStateRegistry [androidJvm] @ NonNull override fun getSavedStateRegistry (): SavedStateRegistry getSharedElementEnterTransition [androidJvm] @ Nullable open fun getSharedElementEnterTransition (): Any ? getSharedElementReturnTransition [androidJvm] @ Nullable open fun getSharedElementReturnTransition (): Any ? getSharedElementSourceNames [androidJvm] @ NonNull open fun getSharedElementSourceNames (): ArrayList < String > getSharedElementTargetNames [androidJvm] @ NonNull open fun getSharedElementTargetNames (): ArrayList < String > getString [androidJvm] @ NonNull fun getString (@ StringRes p0: Int ): String @ NonNull fun getString (@ StringRes p0: Int , @ Nullable vararg p1: Any ): String getTag [androidJvm] @ Nullable fun getTag (): String ? getText [androidJvm] @ NonNull fun getText (@ StringRes p0: Int ): CharSequence getView [androidJvm] @ Nullable open fun getView (): View ? getViewLifecycleOwner [androidJvm] @ MainThread @ NonNull open fun getViewLifecycleOwner (): LifecycleOwner getViewLifecycleOwnerLiveData [androidJvm] @ NonNull open fun getViewLifecycleOwnerLiveData (): LiveData < LifecycleOwner > getViewModelStore [androidJvm] @ NonNull open override fun getViewModelStore (): ViewModelStore go [androidJvm] open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link. [androidJvm] open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . goBackward [androidJvm] open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction. goForward [androidJvm] open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction. hashCode [androidJvm] override fun hashCode (): Int hasOptionsMenu [androidJvm] fun hasOptionsMenu (): Boolean initState [androidJvm] open fun initState () isAdded [androidJvm] fun isAdded (): Boolean isDetached [androidJvm] fun isDetached (): Boolean isHidden [androidJvm] fun isHidden (): Boolean isHideReplaced [androidJvm] open fun isHideReplaced (): Boolean isInBackStack [androidJvm] fun isInBackStack (): Boolean isInLayout [androidJvm] fun isInLayout (): Boolean isMenuVisible [androidJvm] fun isMenuVisible (): Boolean isPostponed [androidJvm] open fun isPostponed (): Boolean isRemoving [androidJvm] fun isRemoving (): Boolean isRemovingParent [androidJvm] fun isRemovingParent (): Boolean isResumed [androidJvm] fun isResumed (): Boolean isStateSaved [androidJvm] fun isStateSaved (): Boolean isVisible [androidJvm] fun isVisible (): Boolean noteStateNotSaved [androidJvm] open fun noteStateNotSaved () onAttach [androidJvm] @ MainThread @ CallSuper open fun onAttach (@ NonNull p0: Context ) onConfigurationChanged [androidJvm] @ CallSuper open override fun onConfigurationChanged (@ NonNull p0: Configuration ) onContextItemSelected [androidJvm] @ MainThread open fun onContextItemSelected (@ NonNull p0: MenuItem ): Boolean onCreate [androidJvm] open override fun onCreate (savedInstanceState: Bundle ?) onCreateAnimation [androidJvm] @ MainThread @ Nullable open fun onCreateAnimation (p0: Int , p1: Boolean , p2: Int ): Animation ? onCreateAnimator [androidJvm] @ MainThread @ Nullable open fun onCreateAnimator (p0: Int , p1: Boolean , p2: Int ): Animator ? onCreateContextMenu [androidJvm] @ MainThread open override fun onCreateContextMenu (@ NonNull p0: ContextMenu , @ NonNull p1: View , @ Nullable p2: ContextMenu.ContextMenuInfo ?) onCreateOptionsMenu [androidJvm] @ MainThread open fun onCreateOptionsMenu (@ NonNull p0: Menu , @ NonNull p1: MenuInflater ) onCreateView [androidJvm] open override fun onCreateView (inflater: LayoutInflater , container: ViewGroup ?, savedInstanceState: Bundle ?): View ? onDestroy [androidJvm] @ MainThread @ CallSuper open fun onDestroy () onDestroyOptionsMenu [androidJvm] @ MainThread open fun onDestroyOptionsMenu () onDestroyView [androidJvm] open override fun onDestroyView () onDetach [androidJvm] @ MainThread @ CallSuper open fun onDetach () onGetLayoutInflater [androidJvm] @ NonNull open fun onGetLayoutInflater (@ Nullable p0: Bundle ?): LayoutInflater onHiddenChanged [androidJvm] @ MainThread open fun onHiddenChanged (p0: Boolean ) onInflate [androidJvm] @ UiThread @ CallSuper open fun onInflate (@ NonNull p0: Context , @ NonNull p1: AttributeSet , @ Nullable p2: Bundle ?) onLowMemory [androidJvm] @ MainThread @ CallSuper open override fun onLowMemory () onMultiWindowModeChanged [androidJvm] open fun onMultiWindowModeChanged (p0: Boolean ) onOptionsItemSelected [androidJvm] @ MainThread open fun onOptionsItemSelected (@ NonNull p0: MenuItem ): Boolean onOptionsMenuClosed [androidJvm] @ MainThread open fun onOptionsMenuClosed (@ NonNull p0: Menu ) onPause [androidJvm] @ MainThread @ CallSuper open fun onPause () onPictureInPictureModeChanged [androidJvm] open fun onPictureInPictureModeChanged (p0: Boolean ) onPrepareOptionsMenu [androidJvm] @ MainThread open fun onPrepareOptionsMenu (@ NonNull p0: Menu ) onPrimaryNavigationFragmentChanged [androidJvm] @ MainThread open fun onPrimaryNavigationFragmentChanged (p0: Boolean ) onResume [androidJvm] @ MainThread @ CallSuper open fun onResume () onSaveInstanceState [androidJvm] @ MainThread open fun onSaveInstanceState (@ NonNull p0: Bundle ) onStart [androidJvm] open override fun onStart () onStop [androidJvm] @ MainThread @ CallSuper open fun onStop () onViewCreated [androidJvm] @ MainThread open fun onViewCreated (@ NonNull p0: View , @ Nullable p1: Bundle ?) onViewStateRestored [androidJvm] @ MainThread @ CallSuper open fun onViewStateRestored (@ Nullable p0: Bundle ?) performActivityCreated [androidJvm] open fun performActivityCreated (p0: Bundle ) performAttach [androidJvm] open fun performAttach () performConfigurationChanged [androidJvm] open fun performConfigurationChanged (@ NonNull p0: Configuration ) performContextItemSelected [androidJvm] open fun performContextItemSelected (@ NonNull p0: MenuItem ): Boolean performCreate [androidJvm] open fun performCreate (p0: Bundle ) performCreateOptionsMenu [androidJvm] open fun performCreateOptionsMenu (@ NonNull p0: Menu , @ NonNull p1: MenuInflater ): Boolean performCreateView [androidJvm] open fun performCreateView (@ NonNull p0: LayoutInflater , @ Nullable p1: ViewGroup ?, @ Nullable p2: Bundle ?) performDestroy [androidJvm] open fun performDestroy () performDestroyView [androidJvm] open fun performDestroyView () performDetach [androidJvm] open fun performDetach () performGetLayoutInflater [androidJvm] @ NonNull open fun performGetLayoutInflater (@ Nullable p0: Bundle ?): LayoutInflater performLowMemory [androidJvm] open fun performLowMemory () performMultiWindowModeChanged [androidJvm] open fun performMultiWindowModeChanged (p0: Boolean ) performOptionsItemSelected [androidJvm] open fun performOptionsItemSelected (@ NonNull p0: MenuItem ): Boolean performOptionsMenuClosed [androidJvm] open fun performOptionsMenuClosed (@ NonNull p0: Menu ) performPause [androidJvm] open fun performPause () performPictureInPictureModeChanged [androidJvm] open fun performPictureInPictureModeChanged (p0: Boolean ) performPrepareOptionsMenu [androidJvm] open fun performPrepareOptionsMenu (@ NonNull p0: Menu ): Boolean performPrimaryNavigationFragmentChanged [androidJvm] open fun performPrimaryNavigationFragmentChanged () performResume [androidJvm] open fun performResume () performSaveInstanceState [androidJvm] open fun performSaveInstanceState (p0: Bundle ) performStart [androidJvm] open fun performStart () performStop [androidJvm] open fun performStop () performViewCreated [androidJvm] open fun performViewCreated () postponeEnterTransition [androidJvm] open fun postponeEnterTransition () fun postponeEnterTransition (p0: Long , @ NonNull p1: TimeUnit ) registerForActivityResult [androidJvm] @ MainThread @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull p0: ActivityResultContract < I , O >, @ NonNull p1: ActivityResultCallback < O >): ActivityResultLauncher < I > @ MainThread @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull p0: ActivityResultContract < I , O >, @ NonNull p1: ActivityResultRegistry , @ NonNull p2: ActivityResultCallback < O >): ActivityResultLauncher < I > registerForContextMenu [androidJvm] open fun registerForContextMenu (@ NonNull p0: View ) requireActivity [androidJvm] @ NonNull fun requireActivity (): FragmentActivity requireArguments [androidJvm] @ NonNull fun requireArguments (): Bundle requireContext [androidJvm] @ NonNull fun requireContext (): Context requireHost [androidJvm] @ NonNull fun requireHost (): Any requireParentFragment [androidJvm] @ NonNull fun requireParentFragment (): Fragment requireView [androidJvm] @ NonNull fun requireView (): View restoreChildFragmentState [androidJvm] open fun restoreChildFragmentState (@ Nullable p0: Bundle ?) restoreViewState [androidJvm] fun restoreViewState (p0: Bundle ) setAllowEnterTransitionOverlap [androidJvm] open fun setAllowEnterTransitionOverlap (p0: Boolean ) setAllowReturnTransitionOverlap [androidJvm] open fun setAllowReturnTransitionOverlap (p0: Boolean ) setAnimatingAway [androidJvm] open fun setAnimatingAway (p0: View ) setAnimations [androidJvm] open fun setAnimations (p0: Int , p1: Int , p2: Int , p3: Int ) setAnimator [androidJvm] open fun setAnimator (p0: Animator ) setArguments [androidJvm] open fun setArguments (@ Nullable p0: Bundle ?) setEnterSharedElementCallback [androidJvm] open fun setEnterSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setEnterTransition [androidJvm] open fun setEnterTransition (@ Nullable p0: Any ?) setExitSharedElementCallback [androidJvm] open fun setExitSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setExitTransition [androidJvm] open fun setExitTransition (@ Nullable p0: Any ?) setFocusedView [androidJvm] open fun setFocusedView (p0: View ) setHasOptionsMenu [androidJvm] open fun setHasOptionsMenu (p0: Boolean ) setHideReplaced [androidJvm] open fun setHideReplaced (p0: Boolean ) setInitialSavedState [androidJvm] open fun setInitialSavedState (@ Nullable p0: Fragment.SavedState ?) setMenuVisibility [androidJvm] open fun setMenuVisibility (p0: Boolean ) setNextTransition [androidJvm] open fun setNextTransition (p0: Int ) setOnStartEnterTransitionListener [androidJvm] open fun setOnStartEnterTransitionListener (p0: Fragment.OnStartEnterTransitionListener ) setPopDirection [androidJvm] open fun setPopDirection (p0: Boolean ) setPostOnViewCreatedAlpha [androidJvm] open fun setPostOnViewCreatedAlpha (p0: Float ) setReenterTransition [androidJvm] open fun setReenterTransition (@ Nullable p0: Any ?) setReturnTransition [androidJvm] open fun setReturnTransition (@ Nullable p0: Any ?) setSharedElementEnterTransition [androidJvm] open fun setSharedElementEnterTransition (@ Nullable p0: Any ?) setSharedElementNames [androidJvm] open fun setSharedElementNames (@ Nullable p0: ArrayList < String >?, @ Nullable p1: ArrayList < String >?) setSharedElementReturnTransition [androidJvm] open fun setSharedElementReturnTransition (@ Nullable p0: Any ?) shouldShowRequestPermissionRationale [androidJvm] open fun shouldShowRequestPermissionRationale (@ NonNull p0: String ): Boolean startActivity [androidJvm] open fun startActivity (p0: Intent ) open fun startActivity (p0: Intent , @ Nullable p1: Bundle ?) startPostponedEnterTransition [androidJvm] open fun startPostponedEnterTransition () toString [androidJvm] @ NonNull open override fun toString (): String unregisterForContextMenu [androidJvm] open fun unregisterForContextMenu (@ NonNull p0: View ) Properties \u00b6 Name Summary coroutineContext [androidJvm] open override val coroutineContext : CoroutineContext currentLocator [androidJvm] open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position. mAdded [androidJvm] val mAdded : Boolean mAnimationInfo [androidJvm] val mAnimationInfo : Fragment.AnimationInfo mArguments [androidJvm] val mArguments : Bundle mBackStackNesting [androidJvm] val mBackStackNesting : Int mChildFragmentManager [androidJvm] @ NonNull val mChildFragmentManager : FragmentManager mContainer [androidJvm] val mContainer : ViewGroup mContainerId [androidJvm] val mContainerId : Int mDefaultFactory [androidJvm] val mDefaultFactory : ViewModelProvider.Factory mDeferStart [androidJvm] val mDeferStart : Boolean mDetached [androidJvm] val mDetached : Boolean mFragmentId [androidJvm] val mFragmentId : Int mFragmentManager [androidJvm] val mFragmentManager : FragmentManager mFromLayout [androidJvm] val mFromLayout : Boolean mHasMenu [androidJvm] val mHasMenu : Boolean mHidden [androidJvm] val mHidden : Boolean mHiddenChanged [androidJvm] val mHiddenChanged : Boolean mHost [androidJvm] val mHost : FragmentHostCallback <*> mInLayout [androidJvm] val mInLayout : Boolean mIsCreated [androidJvm] val mIsCreated : Boolean mIsNewlyAdded [androidJvm] val mIsNewlyAdded : Boolean mLayoutInflater [androidJvm] val mLayoutInflater : LayoutInflater mLifecycleRegistry [androidJvm] val mLifecycleRegistry : LifecycleRegistry mMaxState [androidJvm] val mMaxState : Lifecycle.State mMenuVisible [androidJvm] val mMenuVisible : Boolean mParentFragment [androidJvm] val mParentFragment : Fragment mPerformedCreateView [androidJvm] val mPerformedCreateView : Boolean mPostponedAlpha [androidJvm] val mPostponedAlpha : Float mPostponedDurationRunnable [androidJvm] val mPostponedDurationRunnable : Runnable mRemoving [androidJvm] val mRemoving : Boolean mRestored [androidJvm] val mRestored : Boolean mRetainInstance [androidJvm] val mRetainInstance : Boolean mRetainInstanceChangedWhileDetached [androidJvm] val mRetainInstanceChangedWhileDetached : Boolean mSavedFragmentState [androidJvm] val mSavedFragmentState : Bundle mSavedStateRegistryController [androidJvm] val mSavedStateRegistryController : SavedStateRegistryController mSavedUserVisibleHint [androidJvm] @ Nullable val mSavedUserVisibleHint : Boolean ? mSavedViewRegistryState [androidJvm] val mSavedViewRegistryState : Bundle mSavedViewState [androidJvm] val mSavedViewState : SparseArray < Parcelable > mState [androidJvm] val mState : Int mTag [androidJvm] val mTag : String mTarget [androidJvm] val mTarget : Fragment mTargetRequestCode [androidJvm] val mTargetRequestCode : Int mTargetWho [androidJvm] val mTargetWho : String mUserVisibleHint [androidJvm] val mUserVisibleHint : Boolean mView [androidJvm] val mView : View mViewLifecycleOwner [androidJvm] @ Nullable val mViewLifecycleOwner : FragmentViewLifecycleOwner ? mViewLifecycleOwnerLiveData [androidJvm] val mViewLifecycleOwnerLiveData : MutableLiveData < LifecycleOwner > mWho [androidJvm] @ NonNull val mWho : String publication [androidJvm] open override val publication : Publication Publication rendered by this navigator. readingProgression [androidJvm] open override val readingProgression : ReadingProgression Current reading progression direction.","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/#imagenavigatorfragment","text":"[androidJvm]\\ class ImageNavigatorFragment : Fragment , CoroutineScope, VisualNavigator Navigator for bitmap-based publications, such as CBZ.","title":"ImageNavigatorFragment"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/#types","text":"Name Summary Companion [androidJvm] object Companion Listener [androidJvm] interface Listener : VisualNavigator.Listener","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/#functions","text":"Name Summary callStartTransitionListener [androidJvm] open fun callStartTransitionListener (p0: Boolean ) createFragmentContainer [androidJvm] @ NonNull open fun createFragmentContainer (): FragmentContainer dump [androidJvm] open fun dump (@ NonNull p0: String , @ Nullable p1: FileDescriptor ?, @ NonNull p2: PrintWriter , @ Nullable p3: Array < String >?) equals [androidJvm] operator override fun equals (@ Nullable other: Any ?): Boolean findFragmentByWho [androidJvm] @ Nullable open fun findFragmentByWho (@ NonNull p0: String ): Fragment ? generateActivityResultKey [androidJvm] @ NonNull open fun generateActivityResultKey (): String getActivity [androidJvm] @ Nullable fun getActivity (): FragmentActivity ? getAllowEnterTransitionOverlap [androidJvm] open fun getAllowEnterTransitionOverlap (): Boolean getAllowReturnTransitionOverlap [androidJvm] open fun getAllowReturnTransitionOverlap (): Boolean getAnimatingAway [androidJvm] open fun getAnimatingAway (): View getAnimator [androidJvm] open fun getAnimator (): Animator getArguments [androidJvm] @ Nullable fun getArguments (): Bundle ? getChildFragmentManager [androidJvm] @ NonNull fun getChildFragmentManager (): FragmentManager getContext [androidJvm] @ Nullable open fun getContext (): Context ? getDefaultViewModelProviderFactory [androidJvm] @ NonNull open override fun getDefaultViewModelProviderFactory (): ViewModelProvider.Factory getEnterAnim [androidJvm] open fun getEnterAnim (): Int getEnterTransition [androidJvm] @ Nullable open fun getEnterTransition (): Any ? getEnterTransitionCallback [androidJvm] open fun getEnterTransitionCallback (): SharedElementCallback getExitAnim [androidJvm] open fun getExitAnim (): Int getExitTransition [androidJvm] @ Nullable open fun getExitTransition (): Any ? getExitTransitionCallback [androidJvm] open fun getExitTransitionCallback (): SharedElementCallback getFocusedView [androidJvm] open fun getFocusedView (): View getHost [androidJvm] @ Nullable fun getHost (): Any ? getId [androidJvm] fun getId (): Int getLayoutInflater [androidJvm] @ NonNull fun getLayoutInflater (): LayoutInflater getLifecycle [androidJvm] @ NonNull open override fun getLifecycle (): Lifecycle getNextTransition [androidJvm] open fun getNextTransition (): Int getParentFragment [androidJvm] @ Nullable fun getParentFragment (): Fragment ? getParentFragmentManager [androidJvm] @ NonNull fun getParentFragmentManager (): FragmentManager getPopDirection [androidJvm] open fun getPopDirection (): Boolean getPopEnterAnim [androidJvm] open fun getPopEnterAnim (): Int getPopExitAnim [androidJvm] open fun getPopExitAnim (): Int getPostOnViewCreatedAlpha [androidJvm] open fun getPostOnViewCreatedAlpha (): Float getReenterTransition [androidJvm] @ Nullable open fun getReenterTransition (): Any ? getResources [androidJvm] @ NonNull fun getResources (): Resources getReturnTransition [androidJvm] @ Nullable open fun getReturnTransition (): Any ? getSavedStateRegistry [androidJvm] @ NonNull override fun getSavedStateRegistry (): SavedStateRegistry getSharedElementEnterTransition [androidJvm] @ Nullable open fun getSharedElementEnterTransition (): Any ? getSharedElementReturnTransition [androidJvm] @ Nullable open fun getSharedElementReturnTransition (): Any ? getSharedElementSourceNames [androidJvm] @ NonNull open fun getSharedElementSourceNames (): ArrayList < String > getSharedElementTargetNames [androidJvm] @ NonNull open fun getSharedElementTargetNames (): ArrayList < String > getString [androidJvm] @ NonNull fun getString (@ StringRes p0: Int ): String @ NonNull fun getString (@ StringRes p0: Int , @ Nullable vararg p1: Any ): String getTag [androidJvm] @ Nullable fun getTag (): String ? getText [androidJvm] @ NonNull fun getText (@ StringRes p0: Int ): CharSequence getView [androidJvm] @ Nullable open fun getView (): View ? getViewLifecycleOwner [androidJvm] @ MainThread @ NonNull open fun getViewLifecycleOwner (): LifecycleOwner getViewLifecycleOwnerLiveData [androidJvm] @ NonNull open fun getViewLifecycleOwnerLiveData (): LiveData < LifecycleOwner > getViewModelStore [androidJvm] @ NonNull open override fun getViewModelStore (): ViewModelStore go [androidJvm] open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link. [androidJvm] open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . goBackward [androidJvm] open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction. goForward [androidJvm] open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction. hashCode [androidJvm] override fun hashCode (): Int hasOptionsMenu [androidJvm] fun hasOptionsMenu (): Boolean initState [androidJvm] open fun initState () isAdded [androidJvm] fun isAdded (): Boolean isDetached [androidJvm] fun isDetached (): Boolean isHidden [androidJvm] fun isHidden (): Boolean isHideReplaced [androidJvm] open fun isHideReplaced (): Boolean isInBackStack [androidJvm] fun isInBackStack (): Boolean isInLayout [androidJvm] fun isInLayout (): Boolean isMenuVisible [androidJvm] fun isMenuVisible (): Boolean isPostponed [androidJvm] open fun isPostponed (): Boolean isRemoving [androidJvm] fun isRemoving (): Boolean isRemovingParent [androidJvm] fun isRemovingParent (): Boolean isResumed [androidJvm] fun isResumed (): Boolean isStateSaved [androidJvm] fun isStateSaved (): Boolean isVisible [androidJvm] fun isVisible (): Boolean noteStateNotSaved [androidJvm] open fun noteStateNotSaved () onAttach [androidJvm] @ MainThread @ CallSuper open fun onAttach (@ NonNull p0: Context ) onConfigurationChanged [androidJvm] @ CallSuper open override fun onConfigurationChanged (@ NonNull p0: Configuration ) onContextItemSelected [androidJvm] @ MainThread open fun onContextItemSelected (@ NonNull p0: MenuItem ): Boolean onCreate [androidJvm] open override fun onCreate (savedInstanceState: Bundle ?) onCreateAnimation [androidJvm] @ MainThread @ Nullable open fun onCreateAnimation (p0: Int , p1: Boolean , p2: Int ): Animation ? onCreateAnimator [androidJvm] @ MainThread @ Nullable open fun onCreateAnimator (p0: Int , p1: Boolean , p2: Int ): Animator ? onCreateContextMenu [androidJvm] @ MainThread open override fun onCreateContextMenu (@ NonNull p0: ContextMenu , @ NonNull p1: View , @ Nullable p2: ContextMenu.ContextMenuInfo ?) onCreateOptionsMenu [androidJvm] @ MainThread open fun onCreateOptionsMenu (@ NonNull p0: Menu , @ NonNull p1: MenuInflater ) onCreateView [androidJvm] open override fun onCreateView (inflater: LayoutInflater , container: ViewGroup ?, savedInstanceState: Bundle ?): View ? onDestroy [androidJvm] @ MainThread @ CallSuper open fun onDestroy () onDestroyOptionsMenu [androidJvm] @ MainThread open fun onDestroyOptionsMenu () onDestroyView [androidJvm] open override fun onDestroyView () onDetach [androidJvm] @ MainThread @ CallSuper open fun onDetach () onGetLayoutInflater [androidJvm] @ NonNull open fun onGetLayoutInflater (@ Nullable p0: Bundle ?): LayoutInflater onHiddenChanged [androidJvm] @ MainThread open fun onHiddenChanged (p0: Boolean ) onInflate [androidJvm] @ UiThread @ CallSuper open fun onInflate (@ NonNull p0: Context , @ NonNull p1: AttributeSet , @ Nullable p2: Bundle ?) onLowMemory [androidJvm] @ MainThread @ CallSuper open override fun onLowMemory () onMultiWindowModeChanged [androidJvm] open fun onMultiWindowModeChanged (p0: Boolean ) onOptionsItemSelected [androidJvm] @ MainThread open fun onOptionsItemSelected (@ NonNull p0: MenuItem ): Boolean onOptionsMenuClosed [androidJvm] @ MainThread open fun onOptionsMenuClosed (@ NonNull p0: Menu ) onPause [androidJvm] @ MainThread @ CallSuper open fun onPause () onPictureInPictureModeChanged [androidJvm] open fun onPictureInPictureModeChanged (p0: Boolean ) onPrepareOptionsMenu [androidJvm] @ MainThread open fun onPrepareOptionsMenu (@ NonNull p0: Menu ) onPrimaryNavigationFragmentChanged [androidJvm] @ MainThread open fun onPrimaryNavigationFragmentChanged (p0: Boolean ) onResume [androidJvm] @ MainThread @ CallSuper open fun onResume () onSaveInstanceState [androidJvm] @ MainThread open fun onSaveInstanceState (@ NonNull p0: Bundle ) onStart [androidJvm] open override fun onStart () onStop [androidJvm] @ MainThread @ CallSuper open fun onStop () onViewCreated [androidJvm] @ MainThread open fun onViewCreated (@ NonNull p0: View , @ Nullable p1: Bundle ?) onViewStateRestored [androidJvm] @ MainThread @ CallSuper open fun onViewStateRestored (@ Nullable p0: Bundle ?) performActivityCreated [androidJvm] open fun performActivityCreated (p0: Bundle ) performAttach [androidJvm] open fun performAttach () performConfigurationChanged [androidJvm] open fun performConfigurationChanged (@ NonNull p0: Configuration ) performContextItemSelected [androidJvm] open fun performContextItemSelected (@ NonNull p0: MenuItem ): Boolean performCreate [androidJvm] open fun performCreate (p0: Bundle ) performCreateOptionsMenu [androidJvm] open fun performCreateOptionsMenu (@ NonNull p0: Menu , @ NonNull p1: MenuInflater ): Boolean performCreateView [androidJvm] open fun performCreateView (@ NonNull p0: LayoutInflater , @ Nullable p1: ViewGroup ?, @ Nullable p2: Bundle ?) performDestroy [androidJvm] open fun performDestroy () performDestroyView [androidJvm] open fun performDestroyView () performDetach [androidJvm] open fun performDetach () performGetLayoutInflater [androidJvm] @ NonNull open fun performGetLayoutInflater (@ Nullable p0: Bundle ?): LayoutInflater performLowMemory [androidJvm] open fun performLowMemory () performMultiWindowModeChanged [androidJvm] open fun performMultiWindowModeChanged (p0: Boolean ) performOptionsItemSelected [androidJvm] open fun performOptionsItemSelected (@ NonNull p0: MenuItem ): Boolean performOptionsMenuClosed [androidJvm] open fun performOptionsMenuClosed (@ NonNull p0: Menu ) performPause [androidJvm] open fun performPause () performPictureInPictureModeChanged [androidJvm] open fun performPictureInPictureModeChanged (p0: Boolean ) performPrepareOptionsMenu [androidJvm] open fun performPrepareOptionsMenu (@ NonNull p0: Menu ): Boolean performPrimaryNavigationFragmentChanged [androidJvm] open fun performPrimaryNavigationFragmentChanged () performResume [androidJvm] open fun performResume () performSaveInstanceState [androidJvm] open fun performSaveInstanceState (p0: Bundle ) performStart [androidJvm] open fun performStart () performStop [androidJvm] open fun performStop () performViewCreated [androidJvm] open fun performViewCreated () postponeEnterTransition [androidJvm] open fun postponeEnterTransition () fun postponeEnterTransition (p0: Long , @ NonNull p1: TimeUnit ) registerForActivityResult [androidJvm] @ MainThread @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull p0: ActivityResultContract < I , O >, @ NonNull p1: ActivityResultCallback < O >): ActivityResultLauncher < I > @ MainThread @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull p0: ActivityResultContract < I , O >, @ NonNull p1: ActivityResultRegistry , @ NonNull p2: ActivityResultCallback < O >): ActivityResultLauncher < I > registerForContextMenu [androidJvm] open fun registerForContextMenu (@ NonNull p0: View ) requireActivity [androidJvm] @ NonNull fun requireActivity (): FragmentActivity requireArguments [androidJvm] @ NonNull fun requireArguments (): Bundle requireContext [androidJvm] @ NonNull fun requireContext (): Context requireHost [androidJvm] @ NonNull fun requireHost (): Any requireParentFragment [androidJvm] @ NonNull fun requireParentFragment (): Fragment requireView [androidJvm] @ NonNull fun requireView (): View restoreChildFragmentState [androidJvm] open fun restoreChildFragmentState (@ Nullable p0: Bundle ?) restoreViewState [androidJvm] fun restoreViewState (p0: Bundle ) setAllowEnterTransitionOverlap [androidJvm] open fun setAllowEnterTransitionOverlap (p0: Boolean ) setAllowReturnTransitionOverlap [androidJvm] open fun setAllowReturnTransitionOverlap (p0: Boolean ) setAnimatingAway [androidJvm] open fun setAnimatingAway (p0: View ) setAnimations [androidJvm] open fun setAnimations (p0: Int , p1: Int , p2: Int , p3: Int ) setAnimator [androidJvm] open fun setAnimator (p0: Animator ) setArguments [androidJvm] open fun setArguments (@ Nullable p0: Bundle ?) setEnterSharedElementCallback [androidJvm] open fun setEnterSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setEnterTransition [androidJvm] open fun setEnterTransition (@ Nullable p0: Any ?) setExitSharedElementCallback [androidJvm] open fun setExitSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setExitTransition [androidJvm] open fun setExitTransition (@ Nullable p0: Any ?) setFocusedView [androidJvm] open fun setFocusedView (p0: View ) setHasOptionsMenu [androidJvm] open fun setHasOptionsMenu (p0: Boolean ) setHideReplaced [androidJvm] open fun setHideReplaced (p0: Boolean ) setInitialSavedState [androidJvm] open fun setInitialSavedState (@ Nullable p0: Fragment.SavedState ?) setMenuVisibility [androidJvm] open fun setMenuVisibility (p0: Boolean ) setNextTransition [androidJvm] open fun setNextTransition (p0: Int ) setOnStartEnterTransitionListener [androidJvm] open fun setOnStartEnterTransitionListener (p0: Fragment.OnStartEnterTransitionListener ) setPopDirection [androidJvm] open fun setPopDirection (p0: Boolean ) setPostOnViewCreatedAlpha [androidJvm] open fun setPostOnViewCreatedAlpha (p0: Float ) setReenterTransition [androidJvm] open fun setReenterTransition (@ Nullable p0: Any ?) setReturnTransition [androidJvm] open fun setReturnTransition (@ Nullable p0: Any ?) setSharedElementEnterTransition [androidJvm] open fun setSharedElementEnterTransition (@ Nullable p0: Any ?) setSharedElementNames [androidJvm] open fun setSharedElementNames (@ Nullable p0: ArrayList < String >?, @ Nullable p1: ArrayList < String >?) setSharedElementReturnTransition [androidJvm] open fun setSharedElementReturnTransition (@ Nullable p0: Any ?) shouldShowRequestPermissionRationale [androidJvm] open fun shouldShowRequestPermissionRationale (@ NonNull p0: String ): Boolean startActivity [androidJvm] open fun startActivity (p0: Intent ) open fun startActivity (p0: Intent , @ Nullable p1: Bundle ?) startPostponedEnterTransition [androidJvm] open fun startPostponedEnterTransition () toString [androidJvm] @ NonNull open override fun toString (): String unregisterForContextMenu [androidJvm] open fun unregisterForContextMenu (@ NonNull p0: View )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/#properties","text":"Name Summary coroutineContext [androidJvm] open override val coroutineContext : CoroutineContext currentLocator [androidJvm] open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position. mAdded [androidJvm] val mAdded : Boolean mAnimationInfo [androidJvm] val mAnimationInfo : Fragment.AnimationInfo mArguments [androidJvm] val mArguments : Bundle mBackStackNesting [androidJvm] val mBackStackNesting : Int mChildFragmentManager [androidJvm] @ NonNull val mChildFragmentManager : FragmentManager mContainer [androidJvm] val mContainer : ViewGroup mContainerId [androidJvm] val mContainerId : Int mDefaultFactory [androidJvm] val mDefaultFactory : ViewModelProvider.Factory mDeferStart [androidJvm] val mDeferStart : Boolean mDetached [androidJvm] val mDetached : Boolean mFragmentId [androidJvm] val mFragmentId : Int mFragmentManager [androidJvm] val mFragmentManager : FragmentManager mFromLayout [androidJvm] val mFromLayout : Boolean mHasMenu [androidJvm] val mHasMenu : Boolean mHidden [androidJvm] val mHidden : Boolean mHiddenChanged [androidJvm] val mHiddenChanged : Boolean mHost [androidJvm] val mHost : FragmentHostCallback <*> mInLayout [androidJvm] val mInLayout : Boolean mIsCreated [androidJvm] val mIsCreated : Boolean mIsNewlyAdded [androidJvm] val mIsNewlyAdded : Boolean mLayoutInflater [androidJvm] val mLayoutInflater : LayoutInflater mLifecycleRegistry [androidJvm] val mLifecycleRegistry : LifecycleRegistry mMaxState [androidJvm] val mMaxState : Lifecycle.State mMenuVisible [androidJvm] val mMenuVisible : Boolean mParentFragment [androidJvm] val mParentFragment : Fragment mPerformedCreateView [androidJvm] val mPerformedCreateView : Boolean mPostponedAlpha [androidJvm] val mPostponedAlpha : Float mPostponedDurationRunnable [androidJvm] val mPostponedDurationRunnable : Runnable mRemoving [androidJvm] val mRemoving : Boolean mRestored [androidJvm] val mRestored : Boolean mRetainInstance [androidJvm] val mRetainInstance : Boolean mRetainInstanceChangedWhileDetached [androidJvm] val mRetainInstanceChangedWhileDetached : Boolean mSavedFragmentState [androidJvm] val mSavedFragmentState : Bundle mSavedStateRegistryController [androidJvm] val mSavedStateRegistryController : SavedStateRegistryController mSavedUserVisibleHint [androidJvm] @ Nullable val mSavedUserVisibleHint : Boolean ? mSavedViewRegistryState [androidJvm] val mSavedViewRegistryState : Bundle mSavedViewState [androidJvm] val mSavedViewState : SparseArray < Parcelable > mState [androidJvm] val mState : Int mTag [androidJvm] val mTag : String mTarget [androidJvm] val mTarget : Fragment mTargetRequestCode [androidJvm] val mTargetRequestCode : Int mTargetWho [androidJvm] val mTargetWho : String mUserVisibleHint [androidJvm] val mUserVisibleHint : Boolean mView [androidJvm] val mView : View mViewLifecycleOwner [androidJvm] @ Nullable val mViewLifecycleOwner : FragmentViewLifecycleOwner ? mViewLifecycleOwnerLiveData [androidJvm] val mViewLifecycleOwnerLiveData : MutableLiveData < LifecycleOwner > mWho [androidJvm] @ NonNull val mWho : String publication [androidJvm] open override val publication : Publication Publication rendered by this navigator. readingProgression [androidJvm] open override val readingProgression : ReadingProgression Current reading progression direction.","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/current-locator/","text":"// navigator / org.readium.r2.navigator.image / ImageNavigatorFragment / currentLocator currentLocator \u00b6 [androidJvm]\\ open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position.","title":"Current locator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/current-locator/#currentlocator","text":"[androidJvm]\\ open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position.","title":"currentLocator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/go-backward/","text":"// navigator / org.readium.r2.navigator.image / ImageNavigatorFragment / goBackward goBackward \u00b6 [androidJvm]\\ open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction.","title":"Go backward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/go-backward/#gobackward","text":"[androidJvm]\\ open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction.","title":"goBackward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/go-forward/","text":"// navigator / org.readium.r2.navigator.image / ImageNavigatorFragment / goForward goForward \u00b6 [androidJvm]\\ open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction.","title":"Go forward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/go-forward/#goforward","text":"[androidJvm]\\ open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction.","title":"goForward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/go/","text":"// navigator / org.readium.r2.navigator.image / ImageNavigatorFragment / go go \u00b6 [androidJvm]\\ open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . [androidJvm]\\ open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link.","title":"Go"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/go/#go","text":"[androidJvm]\\ open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . [androidJvm]\\ open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link.","title":"go"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/on-create-view/","text":"// navigator / org.readium.r2.navigator.image / ImageNavigatorFragment / onCreateView onCreateView \u00b6 [androidJvm]\\ open override fun onCreateView (inflater: LayoutInflater , container: ViewGroup ?, savedInstanceState: Bundle ?): View ?","title":"On create view"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/on-create-view/#oncreateview","text":"[androidJvm]\\ open override fun onCreateView (inflater: LayoutInflater , container: ViewGroup ?, savedInstanceState: Bundle ?): View ?","title":"onCreateView"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/on-create/","text":"// navigator / org.readium.r2.navigator.image / ImageNavigatorFragment / onCreate onCreate \u00b6 [androidJvm]\\ open override fun onCreate (savedInstanceState: Bundle ?)","title":"On create"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/on-create/#oncreate","text":"[androidJvm]\\ open override fun onCreate (savedInstanceState: Bundle ?)","title":"onCreate"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/on-destroy-view/","text":"// navigator / org.readium.r2.navigator.image / ImageNavigatorFragment / onDestroyView onDestroyView \u00b6 [androidJvm]\\ open override fun onDestroyView ()","title":"On destroy view"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/on-destroy-view/#ondestroyview","text":"[androidJvm]\\ open override fun onDestroyView ()","title":"onDestroyView"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/on-start/","text":"// navigator / org.readium.r2.navigator.image / ImageNavigatorFragment / onStart onStart \u00b6 [androidJvm]\\ open override fun onStart ()","title":"On start"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/on-start/#onstart","text":"[androidJvm]\\ open override fun onStart ()","title":"onStart"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/publication/","text":"// navigator / org.readium.r2.navigator.image / ImageNavigatorFragment / publication publication \u00b6 [androidJvm]\\ open override val publication : Publication Publication rendered by this navigator.","title":"Publication"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/publication/#publication","text":"[androidJvm]\\ open override val publication : Publication Publication rendered by this navigator.","title":"publication"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/reading-progression/","text":"// navigator / org.readium.r2.navigator.image / ImageNavigatorFragment / readingProgression readingProgression \u00b6 [androidJvm]\\ open override val readingProgression : ReadingProgression Current reading progression direction.","title":"Reading progression"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/reading-progression/#readingprogression","text":"[androidJvm]\\ open override val readingProgression : ReadingProgression Current reading progression direction.","title":"readingProgression"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/-companion/","text":"// navigator / org.readium.r2.navigator.image / ImageNavigatorFragment / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary createFactory [androidJvm] fun createFactory (publication: Publication , initialLocator: Locator ? = null, listener: ImageNavigatorFragment.Listener ? = null): FragmentFactory Factory for ImageNavigatorFragment .","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/-companion/#functions","text":"Name Summary createFactory [androidJvm] fun createFactory (publication: Publication , initialLocator: Locator ? = null, listener: ImageNavigatorFragment.Listener ? = null): FragmentFactory Factory for ImageNavigatorFragment .","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/-companion/create-factory/","text":"// navigator / org.readium.r2.navigator.image / ImageNavigatorFragment / Companion / createFactory createFactory \u00b6 [androidJvm]\\ fun createFactory (publication: Publication , initialLocator: Locator ? = null, listener: ImageNavigatorFragment.Listener ? = null): FragmentFactory Factory for ImageNavigatorFragment . Parameters \u00b6 androidJvm publication Bitmap-based publication to render in the navigator. initialLocator The first location which should be visible when rendering the publication. Can be used to restore the last reading location. listener Optional listener to implement to observe events, such as user taps.","title":"Create factory"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/-companion/create-factory/#createfactory","text":"[androidJvm]\\ fun createFactory (publication: Publication , initialLocator: Locator ? = null, listener: ImageNavigatorFragment.Listener ? = null): FragmentFactory Factory for ImageNavigatorFragment .","title":"createFactory"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/-companion/create-factory/#parameters","text":"androidJvm publication Bitmap-based publication to render in the navigator. initialLocator The first location which should be visible when rendering the publication. Can be used to restore the last reading location. listener Optional listener to implement to observe events, such as user taps.","title":"Parameters"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/-listener/","text":"// navigator / org.readium.r2.navigator.image / ImageNavigatorFragment / Listener Listener \u00b6 [androidJvm]\\ interface Listener : VisualNavigator.Listener Functions \u00b6 Name Summary onTap [androidJvm] open fun onTap (point: PointF ): Boolean Called when the user tapped the content, but nothing handled the event internally (eg. by following an internal link). Inheritors \u00b6 Name R2CbzActivity","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/-listener/#listener","text":"[androidJvm]\\ interface Listener : VisualNavigator.Listener","title":"Listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/-listener/#functions","text":"Name Summary onTap [androidJvm] open fun onTap (point: PointF ): Boolean Called when the user tapped the content, but nothing handled the event internally (eg. by following an internal link).","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.image/-image-navigator-fragment/-listener/#inheritors","text":"Name R2CbzActivity","title":"Inheritors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/","text":"// navigator / org.readium.r2.navigator.media Package org.readium.r2.navigator.media \u00b6 Types \u00b6 Name Summary ExoMediaPlayer [androidJvm] class ExoMediaPlayer (context: Context , mediaSession: MediaSessionCompat , media: PendingMedia , cache: Cache?) : MediaPlayer , CoroutineScope An implementation of MediaPlayer using ExoPlayer. MediaPlayback [androidJvm] data class MediaPlayback (state: MediaPlayback.State , rate: Double , timeline: MediaPlayback.Timeline ) State of the playback at a point in time. MediaPlayer [androidJvm] interface MediaPlayer Media player compatible with Android's MediaSession and handling the playback for MediaSessionNavigator . MediaService [androidJvm] open class MediaService : MediaBrowserServiceCompat , CoroutineScope MediaBrowserServiceCompat implementation holding the current MediaSessionNavigator for background playback. MediaSessionNavigator [androidJvm] class MediaSessionNavigator (publication: Publication , publicationId: PublicationId , controller: MediaControllerCompat ) : MediaNavigator , CoroutineScope An implementation of MediaNavigator using an Android's MediaSession compatible media player. PendingMedia [androidJvm] data class PendingMedia (publication: Publication , publicationId: PublicationId , locator: Locator ) Holds information about a media-based publication waiting to be rendered by a MediaPlayer .","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/#package-orgreadiumr2navigatormedia","text":"","title":"Package org.readium.r2.navigator.media"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/#types","text":"Name Summary ExoMediaPlayer [androidJvm] class ExoMediaPlayer (context: Context , mediaSession: MediaSessionCompat , media: PendingMedia , cache: Cache?) : MediaPlayer , CoroutineScope An implementation of MediaPlayer using ExoPlayer. MediaPlayback [androidJvm] data class MediaPlayback (state: MediaPlayback.State , rate: Double , timeline: MediaPlayback.Timeline ) State of the playback at a point in time. MediaPlayer [androidJvm] interface MediaPlayer Media player compatible with Android's MediaSession and handling the playback for MediaSessionNavigator . MediaService [androidJvm] open class MediaService : MediaBrowserServiceCompat , CoroutineScope MediaBrowserServiceCompat implementation holding the current MediaSessionNavigator for background playback. MediaSessionNavigator [androidJvm] class MediaSessionNavigator (publication: Publication , publicationId: PublicationId , controller: MediaControllerCompat ) : MediaNavigator , CoroutineScope An implementation of MediaNavigator using an Android's MediaSession compatible media player. PendingMedia [androidJvm] data class PendingMedia (publication: Publication , publicationId: PublicationId , locator: Locator ) Holds information about a media-based publication waiting to be rendered by a MediaPlayer .","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-exo-media-player/","text":"// navigator / org.readium.r2.navigator.media / ExoMediaPlayer ExoMediaPlayer \u00b6 [androidJvm]\\ class ExoMediaPlayer (context: Context , mediaSession: MediaSessionCompat , media: PendingMedia , cache: Cache?) : MediaPlayer , CoroutineScope An implementation of MediaPlayer using ExoPlayer. Constructors \u00b6 ExoMediaPlayer [androidJvm] fun ExoMediaPlayer (context: Context , mediaSession: MediaSessionCompat , media: PendingMedia , cache: Cache? = null) Functions \u00b6 Name Summary onDestroy [androidJvm] open override fun onDestroy () Properties \u00b6 Name Summary coroutineContext [androidJvm] open override val coroutineContext : CoroutineContext listener [androidJvm] open override var listener : MediaPlayer.Listener ? = null playbackRate [androidJvm] open override var playbackRate : Double","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-exo-media-player/#exomediaplayer","text":"[androidJvm]\\ class ExoMediaPlayer (context: Context , mediaSession: MediaSessionCompat , media: PendingMedia , cache: Cache?) : MediaPlayer , CoroutineScope An implementation of MediaPlayer using ExoPlayer.","title":"ExoMediaPlayer"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-exo-media-player/#constructors","text":"ExoMediaPlayer [androidJvm] fun ExoMediaPlayer (context: Context , mediaSession: MediaSessionCompat , media: PendingMedia , cache: Cache? = null)","title":"Constructors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-exo-media-player/#functions","text":"Name Summary onDestroy [androidJvm] open override fun onDestroy ()","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-exo-media-player/#properties","text":"Name Summary coroutineContext [androidJvm] open override val coroutineContext : CoroutineContext listener [androidJvm] open override var listener : MediaPlayer.Listener ? = null playbackRate [androidJvm] open override var playbackRate : Double","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-exo-media-player/-exo-media-player/","text":"// navigator / org.readium.r2.navigator.media / ExoMediaPlayer / ExoMediaPlayer ExoMediaPlayer \u00b6 [androidJvm]\\ fun ExoMediaPlayer (context: Context , mediaSession: MediaSessionCompat , media: PendingMedia , cache: Cache? = null)","title":" exo media player"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-exo-media-player/-exo-media-player/#exomediaplayer","text":"[androidJvm]\\ fun ExoMediaPlayer (context: Context , mediaSession: MediaSessionCompat , media: PendingMedia , cache: Cache? = null)","title":"ExoMediaPlayer"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-exo-media-player/listener/","text":"// navigator / org.readium.r2.navigator.media / ExoMediaPlayer / listener listener \u00b6 [androidJvm]\\ open override var listener : MediaPlayer.Listener ? = null","title":"Listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-exo-media-player/listener/#listener","text":"[androidJvm]\\ open override var listener : MediaPlayer.Listener ? = null","title":"listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-exo-media-player/on-destroy/","text":"// navigator / org.readium.r2.navigator.media / ExoMediaPlayer / onDestroy onDestroy \u00b6 [androidJvm]\\ open override fun onDestroy ()","title":"On destroy"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-exo-media-player/on-destroy/#ondestroy","text":"[androidJvm]\\ open override fun onDestroy ()","title":"onDestroy"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-exo-media-player/playback-rate/","text":"// navigator / org.readium.r2.navigator.media / ExoMediaPlayer / playbackRate playbackRate \u00b6 [androidJvm]\\ open override var playbackRate : Double","title":"Playback rate"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-exo-media-player/playback-rate/#playbackrate","text":"[androidJvm]\\ open override var playbackRate : Double","title":"playbackRate"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayback MediaPlayback \u00b6 [androidJvm]\\ data class MediaPlayback (state: MediaPlayback.State , rate: Double , timeline: MediaPlayback.Timeline ) State of the playback at a point in time. Parameters \u00b6 androidJvm state State of the playback. rate Speed of the playback, defaults to 1.0. timeline Position and duration of the current resource. Constructors \u00b6 MediaPlayback [androidJvm] fun MediaPlayback (state: MediaPlayback.State , rate: Double , timeline: MediaPlayback.Timeline ) Types \u00b6 Name Summary State [androidJvm] enum State : Enum < MediaPlayback.State > Timeline [androidJvm] data class Timeline (position: Duration , duration: Duration ?, buffered: Duration ?) Properties \u00b6 Name Summary isPlaying [androidJvm] val isPlaying : Boolean rate [androidJvm] val rate : Double state [androidJvm] val state : MediaPlayback.State timeline [androidJvm] val timeline : MediaPlayback.Timeline","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/#mediaplayback","text":"[androidJvm]\\ data class MediaPlayback (state: MediaPlayback.State , rate: Double , timeline: MediaPlayback.Timeline ) State of the playback at a point in time.","title":"MediaPlayback"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/#parameters","text":"androidJvm state State of the playback. rate Speed of the playback, defaults to 1.0. timeline Position and duration of the current resource.","title":"Parameters"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/#constructors","text":"MediaPlayback [androidJvm] fun MediaPlayback (state: MediaPlayback.State , rate: Double , timeline: MediaPlayback.Timeline )","title":"Constructors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/#types","text":"Name Summary State [androidJvm] enum State : Enum < MediaPlayback.State > Timeline [androidJvm] data class Timeline (position: Duration , duration: Duration ?, buffered: Duration ?)","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/#properties","text":"Name Summary isPlaying [androidJvm] val isPlaying : Boolean rate [androidJvm] val rate : Double state [androidJvm] val state : MediaPlayback.State timeline [androidJvm] val timeline : MediaPlayback.Timeline","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-media-playback/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayback / MediaPlayback MediaPlayback \u00b6 [androidJvm]\\ fun MediaPlayback (state: MediaPlayback.State , rate: Double , timeline: MediaPlayback.Timeline ) Parameters \u00b6 androidJvm state State of the playback. rate Speed of the playback, defaults to 1.0. timeline Position and duration of the current resource.","title":" media playback"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-media-playback/#mediaplayback","text":"[androidJvm]\\ fun MediaPlayback (state: MediaPlayback.State , rate: Double , timeline: MediaPlayback.Timeline )","title":"MediaPlayback"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-media-playback/#parameters","text":"androidJvm state State of the playback. rate Speed of the playback, defaults to 1.0. timeline Position and duration of the current resource.","title":"Parameters"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/is-playing/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayback / isPlaying isPlaying \u00b6 [androidJvm]\\ val isPlaying : Boolean","title":"Is playing"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/is-playing/#isplaying","text":"[androidJvm]\\ val isPlaying : Boolean","title":"isPlaying"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/rate/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayback / rate rate \u00b6 [androidJvm]\\ val rate : Double","title":"Rate"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/rate/#rate","text":"[androidJvm]\\ val rate : Double","title":"rate"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/state/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayback / state state \u00b6 [androidJvm]\\ val state : MediaPlayback.State","title":"State"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/state/#state","text":"[androidJvm]\\ val state : MediaPlayback.State","title":"state"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/timeline/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayback / timeline timeline \u00b6 [androidJvm]\\ val timeline : MediaPlayback.Timeline","title":"Timeline"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/timeline/#timeline","text":"[androidJvm]\\ val timeline : MediaPlayback.Timeline","title":"timeline"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-state/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayback / State State \u00b6 [androidJvm]\\ enum State : Enum < MediaPlayback.State > Entries \u00b6 Paused [androidJvm] Paused () Playing [androidJvm] Playing () Loading [androidJvm] Loading () Idle [androidJvm] Idle () Properties \u00b6 Name Summary isPlaying [androidJvm] val isPlaying : Boolean name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-state/#state","text":"[androidJvm]\\ enum State : Enum < MediaPlayback.State >","title":"State"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-state/#entries","text":"Paused [androidJvm] Paused () Playing [androidJvm] Playing () Loading [androidJvm] Loading () Idle [androidJvm] Idle ()","title":"Entries"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-state/#properties","text":"Name Summary isPlaying [androidJvm] val isPlaying : Boolean name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-state/is-playing/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayback / State / isPlaying isPlaying \u00b6 [androidJvm]\\ val isPlaying : Boolean","title":"Is playing"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-state/is-playing/#isplaying","text":"[androidJvm]\\ val isPlaying : Boolean","title":"isPlaying"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-state/-idle/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayback / State / Idle Idle \u00b6 [androidJvm]\\ Idle () Properties \u00b6 Name Summary isPlaying [androidJvm] val isPlaying : Boolean name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-state/-idle/#idle","text":"[androidJvm]\\ Idle ()","title":"Idle"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-state/-idle/#properties","text":"Name Summary isPlaying [androidJvm] val isPlaying : Boolean name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-state/-loading/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayback / State / Loading Loading \u00b6 [androidJvm]\\ Loading () Properties \u00b6 Name Summary isPlaying [androidJvm] val isPlaying : Boolean name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-state/-loading/#loading","text":"[androidJvm]\\ Loading ()","title":"Loading"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-state/-loading/#properties","text":"Name Summary isPlaying [androidJvm] val isPlaying : Boolean name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-state/-paused/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayback / State / Paused Paused \u00b6 [androidJvm]\\ Paused () Properties \u00b6 Name Summary isPlaying [androidJvm] val isPlaying : Boolean name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-state/-paused/#paused","text":"[androidJvm]\\ Paused ()","title":"Paused"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-state/-paused/#properties","text":"Name Summary isPlaying [androidJvm] val isPlaying : Boolean name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-state/-playing/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayback / State / Playing Playing \u00b6 [androidJvm]\\ Playing () Properties \u00b6 Name Summary isPlaying [androidJvm] val isPlaying : Boolean name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-state/-playing/#playing","text":"[androidJvm]\\ Playing ()","title":"Playing"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-state/-playing/#properties","text":"Name Summary isPlaying [androidJvm] val isPlaying : Boolean name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-timeline/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayback / Timeline Timeline \u00b6 [androidJvm]\\ data class Timeline (position: Duration , duration: Duration ?, buffered: Duration ?) Properties \u00b6 Name Summary buffered [androidJvm] val buffered : Duration ? duration [androidJvm] val duration : Duration ? position [androidJvm] val position : Duration","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-timeline/#timeline","text":"[androidJvm]\\ data class Timeline (position: Duration , duration: Duration ?, buffered: Duration ?)","title":"Timeline"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-timeline/#properties","text":"Name Summary buffered [androidJvm] val buffered : Duration ? duration [androidJvm] val duration : Duration ? position [androidJvm] val position : Duration","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-timeline/-timeline/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayback / Timeline / Timeline Timeline \u00b6 [androidJvm]\\ fun Timeline (position: Duration , duration: Duration ?, buffered: Duration ?)","title":" timeline"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-timeline/-timeline/#timeline","text":"[androidJvm]\\ fun Timeline (position: Duration , duration: Duration ?, buffered: Duration ?)","title":"Timeline"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-timeline/buffered/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayback / Timeline / buffered buffered \u00b6 [androidJvm]\\ val buffered : Duration ?","title":"Buffered"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-timeline/buffered/#buffered","text":"[androidJvm]\\ val buffered : Duration ?","title":"buffered"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-timeline/duration/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayback / Timeline / duration duration \u00b6 [androidJvm]\\ val duration : Duration ?","title":"Duration"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-timeline/duration/#duration","text":"[androidJvm]\\ val duration : Duration ?","title":"duration"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-timeline/position/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayback / Timeline / position position \u00b6 [androidJvm]\\ val position : Duration","title":"Position"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-playback/-timeline/position/#position","text":"[androidJvm]\\ val position : Duration","title":"position"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayer MediaPlayer \u00b6 [androidJvm]\\ interface MediaPlayer Media player compatible with Android's MediaSession and handling the playback for MediaSessionNavigator . MediaSession works with media IDs associated with a bundle of extras. To work with MediaService , implementers MUST map a location in the Publication to a media ID publicationId#resourceHref with a Locator as a locator extra field. Types \u00b6 Name Summary Listener [androidJvm] interface Listener NotificationMetadata [androidJvm] data class NotificationMetadata (publicationTitle: String ?, trackTitle: String ?, authors: String ?) Functions \u00b6 Name Summary onDestroy [androidJvm] abstract fun onDestroy () Properties \u00b6 Name Summary listener [androidJvm] abstract var listener : MediaPlayer.Listener ? playbackRate [androidJvm] abstract var playbackRate : Double Inheritors \u00b6 Name ExoMediaPlayer","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/#mediaplayer","text":"[androidJvm]\\ interface MediaPlayer Media player compatible with Android's MediaSession and handling the playback for MediaSessionNavigator . MediaSession works with media IDs associated with a bundle of extras. To work with MediaService , implementers MUST map a location in the Publication to a media ID publicationId#resourceHref with a Locator as a locator extra field.","title":"MediaPlayer"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/#types","text":"Name Summary Listener [androidJvm] interface Listener NotificationMetadata [androidJvm] data class NotificationMetadata (publicationTitle: String ?, trackTitle: String ?, authors: String ?)","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/#functions","text":"Name Summary onDestroy [androidJvm] abstract fun onDestroy ()","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/#properties","text":"Name Summary listener [androidJvm] abstract var listener : MediaPlayer.Listener ? playbackRate [androidJvm] abstract var playbackRate : Double","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/#inheritors","text":"Name ExoMediaPlayer","title":"Inheritors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/listener/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayer / listener listener \u00b6 [androidJvm]\\ abstract var listener : MediaPlayer.Listener ?","title":"Listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/listener/#listener","text":"[androidJvm]\\ abstract var listener : MediaPlayer.Listener ?","title":"listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/on-destroy/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayer / onDestroy onDestroy \u00b6 [androidJvm]\\ abstract fun onDestroy ()","title":"On destroy"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/on-destroy/#ondestroy","text":"[androidJvm]\\ abstract fun onDestroy ()","title":"onDestroy"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/playback-rate/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayer / playbackRate playbackRate \u00b6 [androidJvm]\\ abstract var playbackRate : Double","title":"Playback rate"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/playback-rate/#playbackrate","text":"[androidJvm]\\ abstract var playbackRate : Double","title":"playbackRate"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-listener/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayer / Listener Listener \u00b6 [androidJvm]\\ interface Listener Functions \u00b6 Name Summary coverOfPublication [androidJvm] abstract suspend fun coverOfPublication (publication: Publication , publicationId: PublicationId ): Bitmap ? locatorFromMediaId [androidJvm] abstract fun locatorFromMediaId (mediaId: String , extras: Bundle ?): Locator ? onCommand [androidJvm] abstract fun onCommand (command: String , args: Bundle ?, cb: ResultReceiver ?): Boolean onCreateNotificationMetadata [androidJvm] abstract fun onCreateNotificationMetadata (publication: Publication , publicationId: PublicationId , link: Link ): MediaPlayer.NotificationMetadata Creates the NotificationMetadata for the given resource link . onNotificationCancelled [androidJvm] abstract fun onNotificationCancelled (notificationId: Int ) onNotificationPosted [androidJvm] abstract fun onNotificationPosted (notificationId: Int , notification: Notification ) onPlayerStopped [androidJvm] abstract fun onPlayerStopped () onResourceLoadFailed [androidJvm] abstract fun onResourceLoadFailed (link: Link , error: Resource.Exception ) Called when a resource failed to be loaded, for example because the Internet connection is offline and the resource is streamed.","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-listener/#listener","text":"[androidJvm]\\ interface Listener","title":"Listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-listener/#functions","text":"Name Summary coverOfPublication [androidJvm] abstract suspend fun coverOfPublication (publication: Publication , publicationId: PublicationId ): Bitmap ? locatorFromMediaId [androidJvm] abstract fun locatorFromMediaId (mediaId: String , extras: Bundle ?): Locator ? onCommand [androidJvm] abstract fun onCommand (command: String , args: Bundle ?, cb: ResultReceiver ?): Boolean onCreateNotificationMetadata [androidJvm] abstract fun onCreateNotificationMetadata (publication: Publication , publicationId: PublicationId , link: Link ): MediaPlayer.NotificationMetadata Creates the NotificationMetadata for the given resource link . onNotificationCancelled [androidJvm] abstract fun onNotificationCancelled (notificationId: Int ) onNotificationPosted [androidJvm] abstract fun onNotificationPosted (notificationId: Int , notification: Notification ) onPlayerStopped [androidJvm] abstract fun onPlayerStopped () onResourceLoadFailed [androidJvm] abstract fun onResourceLoadFailed (link: Link , error: Resource.Exception ) Called when a resource failed to be loaded, for example because the Internet connection is offline and the resource is streamed.","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-listener/cover-of-publication/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayer / Listener / coverOfPublication coverOfPublication \u00b6 [androidJvm]\\ abstract suspend fun coverOfPublication (publication: Publication , publicationId: PublicationId ): Bitmap ?","title":"Cover of publication"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-listener/cover-of-publication/#coverofpublication","text":"[androidJvm]\\ abstract suspend fun coverOfPublication (publication: Publication , publicationId: PublicationId ): Bitmap ?","title":"coverOfPublication"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-listener/locator-from-media-id/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayer / Listener / locatorFromMediaId locatorFromMediaId \u00b6 [androidJvm]\\ abstract fun locatorFromMediaId (mediaId: String , extras: Bundle ?): Locator ?","title":"Locator from media id"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-listener/locator-from-media-id/#locatorfrommediaid","text":"[androidJvm]\\ abstract fun locatorFromMediaId (mediaId: String , extras: Bundle ?): Locator ?","title":"locatorFromMediaId"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-listener/on-command/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayer / Listener / onCommand onCommand \u00b6 [androidJvm]\\ abstract fun onCommand (command: String , args: Bundle ?, cb: ResultReceiver ?): Boolean","title":"On command"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-listener/on-command/#oncommand","text":"[androidJvm]\\ abstract fun onCommand (command: String , args: Bundle ?, cb: ResultReceiver ?): Boolean","title":"onCommand"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-listener/on-create-notification-metadata/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayer / Listener / onCreateNotificationMetadata onCreateNotificationMetadata \u00b6 [androidJvm]\\ abstract fun onCreateNotificationMetadata (publication: Publication , publicationId: PublicationId , link: Link ): MediaPlayer.NotificationMetadata Creates the NotificationMetadata for the given resource link . The metadata will be used for the media-style notification.","title":"On create notification metadata"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-listener/on-create-notification-metadata/#oncreatenotificationmetadata","text":"[androidJvm]\\ abstract fun onCreateNotificationMetadata (publication: Publication , publicationId: PublicationId , link: Link ): MediaPlayer.NotificationMetadata Creates the NotificationMetadata for the given resource link . The metadata will be used for the media-style notification.","title":"onCreateNotificationMetadata"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-listener/on-notification-cancelled/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayer / Listener / onNotificationCancelled onNotificationCancelled \u00b6 [androidJvm]\\ abstract fun onNotificationCancelled (notificationId: Int )","title":"On notification cancelled"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-listener/on-notification-cancelled/#onnotificationcancelled","text":"[androidJvm]\\ abstract fun onNotificationCancelled (notificationId: Int )","title":"onNotificationCancelled"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-listener/on-notification-posted/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayer / Listener / onNotificationPosted onNotificationPosted \u00b6 [androidJvm]\\ abstract fun onNotificationPosted (notificationId: Int , notification: Notification )","title":"On notification posted"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-listener/on-notification-posted/#onnotificationposted","text":"[androidJvm]\\ abstract fun onNotificationPosted (notificationId: Int , notification: Notification )","title":"onNotificationPosted"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-listener/on-player-stopped/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayer / Listener / onPlayerStopped onPlayerStopped \u00b6 [androidJvm]\\ abstract fun onPlayerStopped ()","title":"On player stopped"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-listener/on-player-stopped/#onplayerstopped","text":"[androidJvm]\\ abstract fun onPlayerStopped ()","title":"onPlayerStopped"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-listener/on-resource-load-failed/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayer / Listener / onResourceLoadFailed onResourceLoadFailed \u00b6 [androidJvm]\\ abstract fun onResourceLoadFailed (link: Link , error: Resource.Exception ) Called when a resource failed to be loaded, for example because the Internet connection is offline and the resource is streamed.","title":"On resource load failed"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-listener/on-resource-load-failed/#onresourceloadfailed","text":"[androidJvm]\\ abstract fun onResourceLoadFailed (link: Link , error: Resource.Exception ) Called when a resource failed to be loaded, for example because the Internet connection is offline and the resource is streamed.","title":"onResourceLoadFailed"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-notification-metadata/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayer / NotificationMetadata NotificationMetadata \u00b6 [androidJvm]\\ data class NotificationMetadata (publicationTitle: String ?, trackTitle: String ?, authors: String ?) Constructors \u00b6 NotificationMetadata [androidJvm] fun NotificationMetadata (publication: Publication , link: Link ) Properties \u00b6 Name Summary authors [androidJvm] val authors : String ? publicationTitle [androidJvm] val publicationTitle : String ? trackTitle [androidJvm] val trackTitle : String ?","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-notification-metadata/#notificationmetadata","text":"[androidJvm]\\ data class NotificationMetadata (publicationTitle: String ?, trackTitle: String ?, authors: String ?)","title":"NotificationMetadata"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-notification-metadata/#constructors","text":"NotificationMetadata [androidJvm] fun NotificationMetadata (publication: Publication , link: Link )","title":"Constructors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-notification-metadata/#properties","text":"Name Summary authors [androidJvm] val authors : String ? publicationTitle [androidJvm] val publicationTitle : String ? trackTitle [androidJvm] val trackTitle : String ?","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-notification-metadata/-notification-metadata/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayer / NotificationMetadata / NotificationMetadata NotificationMetadata \u00b6 [androidJvm]\\ fun NotificationMetadata (publication: Publication , link: Link ) fun NotificationMetadata (publicationTitle: String ?, trackTitle: String ?, authors: String ?)","title":" notification metadata"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-notification-metadata/-notification-metadata/#notificationmetadata","text":"[androidJvm]\\ fun NotificationMetadata (publication: Publication , link: Link ) fun NotificationMetadata (publicationTitle: String ?, trackTitle: String ?, authors: String ?)","title":"NotificationMetadata"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-notification-metadata/authors/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayer / NotificationMetadata / authors authors \u00b6 [androidJvm]\\ val authors : String ?","title":"Authors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-notification-metadata/authors/#authors","text":"[androidJvm]\\ val authors : String ?","title":"authors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-notification-metadata/publication-title/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayer / NotificationMetadata / publicationTitle publicationTitle \u00b6 [androidJvm]\\ val publicationTitle : String ?","title":"Publication title"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-notification-metadata/publication-title/#publicationtitle","text":"[androidJvm]\\ val publicationTitle : String ?","title":"publicationTitle"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-notification-metadata/track-title/","text":"// navigator / org.readium.r2.navigator.media / MediaPlayer / NotificationMetadata / trackTitle trackTitle \u00b6 [androidJvm]\\ val trackTitle : String ?","title":"Track title"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-player/-notification-metadata/track-title/#tracktitle","text":"[androidJvm]\\ val trackTitle : String ?","title":"trackTitle"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/","text":"// navigator / org.readium.r2.navigator.media / MediaService MediaService \u00b6 [androidJvm]\\ open class MediaService : MediaBrowserServiceCompat , CoroutineScope MediaBrowserServiceCompat implementation holding the current MediaSessionNavigator for background playback. You should override this service in your app and declare it in your AndroidManifest.xml. See https://developer.android.com/guide/topics/media-apps/audio-app/building-a-mediabrowserservice Constructors \u00b6 MediaService [androidJvm] fun MediaService () Types \u00b6 Name Summary Companion [androidJvm] object Companion Connection [androidJvm] class Connection Connection to any running MediaService instance. Functions \u00b6 Name Summary addSubscription [androidJvm] open fun addSubscription (id: String , connection: MediaBrowserServiceCompat.ConnectionRecord , token: IBinder , options: Bundle ) applyOptions [androidJvm] open fun applyOptions (list: MutableList < MediaBrowserCompat.MediaItem >, options: Bundle ): MutableList < MediaBrowserCompat.MediaItem > attachBaseContext [androidJvm] open override fun attachBaseContext (p0: Context ) attachToBaseContext [androidJvm] open fun attachToBaseContext (base: Context ) bindIsolatedService [androidJvm] open override fun bindIsolatedService (p0: Intent , p1: Int , p2: String , p3: Executor , p4: ServiceConnection ): Boolean bindService [androidJvm] open override fun bindService (p0: Intent , p1: ServiceConnection , p2: Int ): Boolean open override fun bindService (p0: Intent , p1: Int , p2: Executor , p3: ServiceConnection ): Boolean bindServiceAsUser [androidJvm] open override fun bindServiceAsUser (p0: Intent , p1: ServiceConnection , p2: Int , p3: UserHandle ): Boolean checkCallingOrSelfPermission [androidJvm] open override fun checkCallingOrSelfPermission (p0: String ): Int checkCallingOrSelfUriPermission [androidJvm] open override fun checkCallingOrSelfUriPermission (p0: Uri , p1: Int ): Int checkCallingOrSelfUriPermissions [androidJvm] open override fun checkCallingOrSelfUriPermissions (p0: MutableList < Uri >, p1: Int ): IntArray checkCallingPermission [androidJvm] open override fun checkCallingPermission (p0: String ): Int checkCallingUriPermission [androidJvm] open override fun checkCallingUriPermission (p0: Uri , p1: Int ): Int checkCallingUriPermissions [androidJvm] open override fun checkCallingUriPermissions (p0: MutableList < Uri >, p1: Int ): IntArray checkPermission [androidJvm] open override fun checkPermission (p0: String , p1: Int , p2: Int ): Int checkSelfPermission [androidJvm] open override fun checkSelfPermission (p0: String ): Int checkUriPermission [androidJvm] open override fun checkUriPermission (p0: Uri , p1: Int , p2: Int , p3: Int ): Int open override fun checkUriPermission (p0: Uri ?, p1: String ?, p2: String ?, p3: Int , p4: Int , p5: Int ): Int checkUriPermissions [androidJvm] open override fun checkUriPermissions (p0: MutableList < Uri >, p1: Int , p2: Int , p3: Int ): IntArray coverOfPublication [androidJvm] open suspend fun coverOfPublication (publicationId: PublicationId , publication: Publication ): Bitmap ? Returns the cover for the given publication which should be used in media notifications. createAttributionContext [androidJvm] open override fun createAttributionContext (p0: String ?): Context createConfigurationContext [androidJvm] open override fun createConfigurationContext (p0: Configuration ): Context createContext [androidJvm] open override fun createContext (p0: ContextParams ): Context createContextForSplit [androidJvm] open override fun createContextForSplit (p0: String ): Context createDeviceProtectedStorageContext [androidJvm] open override fun createDeviceProtectedStorageContext (): Context createDisplayContext [androidJvm] open override fun createDisplayContext (p0: Display ): Context createPackageContext [androidJvm] open override fun createPackageContext (p0: String , p1: Int ): Context createWindowContext [androidJvm] open override fun createWindowContext (p0: Int , p1: Bundle ?): Context open override fun createWindowContext (p0: Display , p1: Int , p2: Bundle ?): Context databaseList [androidJvm] open override fun databaseList (): Array < String > deleteDatabase [androidJvm] open override fun deleteDatabase (p0: String ): Boolean deleteFile [androidJvm] open override fun deleteFile (p0: String ): Boolean deleteSharedPreferences [androidJvm] open override fun deleteSharedPreferences (p0: String ): Boolean dump [androidJvm] open override fun dump (fd: FileDescriptor , writer: PrintWriter , args: Array < String >) enforceCallingOrSelfPermission [androidJvm] open override fun enforceCallingOrSelfPermission (p0: String , p1: String ?) enforceCallingOrSelfUriPermission [androidJvm] open override fun enforceCallingOrSelfUriPermission (p0: Uri , p1: Int , p2: String ) enforceCallingPermission [androidJvm] open override fun enforceCallingPermission (p0: String , p1: String ?) enforceCallingUriPermission [androidJvm] open override fun enforceCallingUriPermission (p0: Uri , p1: Int , p2: String ) enforcePermission [androidJvm] open override fun enforcePermission (p0: String , p1: Int , p2: Int , p3: String ?) enforceUriPermission [androidJvm] open override fun enforceUriPermission (p0: Uri , p1: Int , p2: Int , p3: Int , p4: String ) open override fun enforceUriPermission (p0: Uri ?, p1: String ?, p2: String ?, p3: Int , p4: Int , p5: Int , p6: String ?) fileList [androidJvm] open override fun fileList (): Array < String > getApplication [androidJvm] fun getApplication (): Application getApplicationContext [androidJvm] open override fun getApplicationContext (): Context getApplicationInfo [androidJvm] open override fun getApplicationInfo (): ApplicationInfo getAssets [androidJvm] open override fun getAssets (): AssetManager getAttributionSource [androidJvm] open override fun getAttributionSource (): AttributionSource getAttributionTag [androidJvm] open override fun getAttributionTag (): String ? getBaseContext [androidJvm] open fun getBaseContext (): Context getBrowserRootHints [androidJvm] fun getBrowserRootHints (): Bundle getCacheDir [androidJvm] open override fun getCacheDir (): File getClassLoader [androidJvm] open override fun getClassLoader (): ClassLoader getCodeCacheDir [androidJvm] open override fun getCodeCacheDir (): File getColor [androidJvm] fun getColor (p0: Int ): Int getColorStateList [androidJvm] fun getColorStateList (p0: Int ): ColorStateList getContentResolver [androidJvm] open override fun getContentResolver (): ContentResolver getCurrentBrowserInfo [androidJvm] @ NonNull fun getCurrentBrowserInfo (): MediaSessionManager.RemoteUserInfo getDatabasePath [androidJvm] open override fun getDatabasePath (p0: String ): File getDataDir [androidJvm] open override fun getDataDir (): File getDir [androidJvm] open override fun getDir (p0: String , p1: Int ): File getDisplay [androidJvm] open override fun getDisplay (): Display ? getDrawable [androidJvm] fun getDrawable (p0: Int ): Drawable ? getExternalCacheDir [androidJvm] open override fun getExternalCacheDir (): File ? getExternalCacheDirs [androidJvm] open override fun getExternalCacheDirs (): Array < File > getExternalFilesDir [androidJvm] open override fun getExternalFilesDir (p0: String ?): File ? getExternalFilesDirs [androidJvm] open override fun getExternalFilesDirs (p0: String ): Array < File > getExternalMediaDirs [androidJvm] open override fun getExternalMediaDirs (): Array < File > getFilesDir [androidJvm] open override fun getFilesDir (): File getFileStreamPath [androidJvm] open override fun getFileStreamPath (p0: String ): File getForegroundServiceType [androidJvm] fun getForegroundServiceType (): Int getMainExecutor [androidJvm] open override fun getMainExecutor (): Executor getMainLooper [androidJvm] open override fun getMainLooper (): Looper getNoBackupFilesDir [androidJvm] open override fun getNoBackupFilesDir (): File getObbDir [androidJvm] open override fun getObbDir (): File getObbDirs [androidJvm] open override fun getObbDirs (): Array < File > getOpPackageName [androidJvm] open override fun getOpPackageName (): String getPackageCodePath [androidJvm] open override fun getPackageCodePath (): String getPackageManager [androidJvm] open override fun getPackageManager (): PackageManager getPackageName [androidJvm] open override fun getPackageName (): String getPackageResourcePath [androidJvm] open override fun getPackageResourcePath (): String getParams [androidJvm] open override fun getParams (): ContextParams ? getResources [androidJvm] open override fun getResources (): Resources getSessionToken [androidJvm] @ Nullable open fun getSessionToken (): MediaSessionCompat.Token ? getSharedPreferences [androidJvm] open override fun getSharedPreferences (p0: String , p1: Int ): SharedPreferences getString [androidJvm] fun getString (p0: Int ): String fun getString (p0: Int , vararg p1: Any ): String getSystemService [androidJvm] fun < T : Any > getSystemService (p0: Class < T >): T open override fun getSystemService (p0: String ): Any getSystemServiceName [androidJvm] open override fun getSystemServiceName (p0: Class <*>): String ? getText [androidJvm] fun getText (p0: Int ): CharSequence getTheme [androidJvm] open override fun getTheme (): Resources.Theme grantUriPermission [androidJvm] open override fun grantUriPermission (p0: String , p1: Uri , p2: Int ) isClientAuthorized [androidJvm] open fun isClientAuthorized (packageName: String , uid: Int ): Boolean Override to control which app can access the MediaSession through the MediaBrowserService. By default, only our own app can. isDeviceProtectedStorage [androidJvm] open override fun isDeviceProtectedStorage (): Boolean isRestricted [androidJvm] open override fun isRestricted (): Boolean isUiContext [androidJvm] open override fun isUiContext (): Boolean isValidPackage [androidJvm] open fun isValidPackage (pkg: String , uid: Int ): Boolean moveDatabaseFrom [androidJvm] open override fun moveDatabaseFrom (p0: Context , p1: String ): Boolean moveSharedPreferencesFrom [androidJvm] open override fun moveSharedPreferencesFrom (p0: Context , p1: String ): Boolean notifyChildrenChanged [androidJvm] open fun notifyChildrenChanged (@ NonNull parentId: String ) open fun notifyChildrenChanged (@ NonNull parentId: String , @ NonNull options: Bundle ) open fun notifyChildrenChanged (@ NonNull remoteUserInfo: MediaSessionManager.RemoteUserInfo , @ NonNull parentId: String , @ NonNull options: Bundle ) obtainStyledAttributes [androidJvm] fun obtainStyledAttributes (p0: IntArray ): TypedArray fun obtainStyledAttributes (p0: AttributeSet ?, p1: IntArray ): TypedArray fun obtainStyledAttributes (p0: Int , p1: IntArray ): TypedArray fun obtainStyledAttributes (p0: AttributeSet ?, p1: IntArray , p2: Int , p3: Int ): TypedArray onBind [androidJvm] open override fun onBind (intent: Intent ): IBinder ? onCommand [androidJvm] open fun onCommand (command: String , args: Bundle ?, cb: ResultReceiver ?): Boolean Handles a custom command delivered by MediaSessionCompat.Callback.onCommand . onConfigurationChanged [androidJvm] open override fun onConfigurationChanged (p0: Configuration ) onCreate [androidJvm] open override fun onCreate () onCreateNotificationIntent [androidJvm] open suspend fun onCreateNotificationIntent (publicationId: PublicationId , publication: Publication ): PendingIntent ? Creates the PendingIntent which will be used to start the media activity when the user activates the media notification. onCreateNotificationMetadata [androidJvm] open fun onCreateNotificationMetadata (publicationId: PublicationId , publication: Publication , link: Link ): MediaPlayer.NotificationMetadata Creates the MediaPlayer.NotificationMetadata for the given resource link . onCreatePlayer [androidJvm] open fun onCreatePlayer (mediaSession: MediaSessionCompat , media: PendingMedia ): MediaPlayer Creates the instance of MediaPlayer which will be used for playing the given media . onCustomAction [androidJvm] open fun onCustomAction (@ NonNull action: String , extras: Bundle , @ NonNull result: MediaBrowserServiceCompat.Result < Bundle >) onDestroy [androidJvm] open override fun onDestroy () onGetRoot [androidJvm] open override fun onGetRoot (clientPackageName: String , clientUid: Int , rootHints: Bundle ?): MediaBrowserServiceCompat.BrowserRoot ? onLoadChildren [androidJvm] open override fun onLoadChildren (parentId: String , result: MediaBrowserServiceCompat.Result < MutableList < MediaBrowserCompat.MediaItem >>) open fun onLoadChildren (@ NonNull parentId: String , @ NonNull result: MediaBrowserServiceCompat.Result < MutableList < MediaBrowserCompat.MediaItem >>, @ NonNull options: Bundle ) onLoadItem [androidJvm] open fun onLoadItem (itemId: String , @ NonNull result: MediaBrowserServiceCompat.Result < MediaBrowserCompat.MediaItem >) onLowMemory [androidJvm] open override fun onLowMemory () onPlayerStopped [androidJvm] open fun onPlayerStopped () Called when the underlying MediaPlayer was stopped. onRebind [androidJvm] open fun onRebind (p0: Intent ) onResourceLoadFailed [androidJvm] open fun onResourceLoadFailed (link: Link , error: Resource.Exception ) Called when a resource failed to be loaded, for example because the Internet connection is offline and the resource is streamed. onSearch [androidJvm] open fun onSearch (@ NonNull query: String , extras: Bundle , @ NonNull result: MediaBrowserServiceCompat.Result < MutableList < MediaBrowserCompat.MediaItem >>) onStartCommand [androidJvm] open fun onStartCommand (p0: Intent , p1: Int , p2: Int ): Int onSubscribe [androidJvm] open fun onSubscribe (id: String , option: Bundle ) onTaskRemoved [androidJvm] open fun onTaskRemoved (p0: Intent ) onTrimMemory [androidJvm] open override fun onTrimMemory (p0: Int ) onUnbind [androidJvm] open fun onUnbind (p0: Intent ): Boolean onUnsubscribe [androidJvm] open fun onUnsubscribe (id: String ) openFileInput [androidJvm] open override fun openFileInput (p0: String ): FileInputStream openFileOutput [androidJvm] open override fun openFileOutput (p0: String , p1: Int ): FileOutputStream openOrCreateDatabase [androidJvm] open override fun openOrCreateDatabase (p0: String , p1: Int , p2: SQLiteDatabase.CursorFactory ): SQLiteDatabase open override fun openOrCreateDatabase (p0: String , p1: Int , p2: SQLiteDatabase.CursorFactory , p3: DatabaseErrorHandler ?): SQLiteDatabase performCustomAction [androidJvm] open fun performCustomAction (action: String , extras: Bundle , connection: MediaBrowserServiceCompat.ConnectionRecord , receiver: ResultReceiver) performLoadChildren [androidJvm] open fun performLoadChildren (parentId: String , connection: MediaBrowserServiceCompat.ConnectionRecord , subscribeOptions: Bundle , notifyChildrenChangedOptions: Bundle ) performLoadItem [androidJvm] open fun performLoadItem (itemId: String , connection: MediaBrowserServiceCompat.ConnectionRecord , receiver: ResultReceiver) performSearch [androidJvm] open fun performSearch (query: String , extras: Bundle , connection: MediaBrowserServiceCompat.ConnectionRecord , receiver: ResultReceiver) registerComponentCallbacks [androidJvm] open fun registerComponentCallbacks (p0: ComponentCallbacks ) registerReceiver [androidJvm] open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter ): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: Int ): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: String ?, p3: Handler ?): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: String ?, p3: Handler ?, p4: Int ): Intent ? removeSubscription [androidJvm] open fun removeSubscription (id: String , connection: MediaBrowserServiceCompat.ConnectionRecord , token: IBinder ): Boolean revokeUriPermission [androidJvm] open override fun revokeUriPermission (p0: Uri , p1: Int ) open override fun revokeUriPermission (p0: String , p1: Uri , p2: Int ) sendBroadcast [androidJvm] open override fun sendBroadcast (p0: Intent ) open override fun sendBroadcast (p0: Intent , p1: String ?) sendBroadcastAsUser [androidJvm] open override fun sendBroadcastAsUser (p0: Intent , p1: UserHandle ) open override fun sendBroadcastAsUser (p0: Intent , p1: UserHandle , p2: String ?) sendBroadcastWithMultiplePermissions [androidJvm] open fun sendBroadcastWithMultiplePermissions (p0: Intent , p1: Array < String >) sendOrderedBroadcast [androidJvm] open override fun sendOrderedBroadcast (p0: Intent , p1: String ?) open override fun sendOrderedBroadcast (p0: Intent , p1: String ?, p2: BroadcastReceiver ?, p3: Handler ?, p4: Int , p5: String ?, p6: Bundle ?) open override fun sendOrderedBroadcast (p0: Intent , p1: String ?, p2: String ?, p3: BroadcastReceiver ?, p4: Handler ?, p5: Int , p6: String ?, p7: Bundle ?) open fun sendOrderedBroadcast (p0: Intent , p1: Int , p2: String ?, p3: String ?, p4: BroadcastReceiver ?, p5: Handler ?, p6: String ?, p7: Bundle ?, p8: Bundle ?) sendOrderedBroadcastAsUser [androidJvm] open override fun sendOrderedBroadcastAsUser (p0: Intent , p1: UserHandle , p2: String ?, p3: BroadcastReceiver ?, p4: Handler ?, p5: Int , p6: String ?, p7: Bundle ?) setSessionToken [androidJvm] open fun setSessionToken (token: MediaSessionCompat.Token ) setTheme [androidJvm] open override fun setTheme (p0: Int ) startActivities [androidJvm] open override fun startActivities (p0: Array < Intent >) open override fun startActivities (p0: Array < Intent >, p1: Bundle ?) startActivity [androidJvm] open override fun startActivity (p0: Intent ) open override fun startActivity (p0: Intent , p1: Bundle ?) startForeground [androidJvm] fun startForeground (p0: Int , p1: Notification ) fun startForeground (p0: Int , p1: Notification , p2: Int ) startForegroundService [androidJvm] open override fun startForegroundService (p0: Intent ): ComponentName ? startInstrumentation [androidJvm] open override fun startInstrumentation (p0: ComponentName , p1: String ?, p2: Bundle ?): Boolean startIntentSender [androidJvm] open override fun startIntentSender (p0: IntentSender , p1: Intent ?, p2: Int , p3: Int , p4: Int ) open override fun startIntentSender (p0: IntentSender , p1: Intent ?, p2: Int , p3: Int , p4: Int , p5: Bundle ?) startService [androidJvm] open override fun startService (p0: Intent ): ComponentName ? stopForeground [androidJvm] fun stopForeground (p0: Boolean ) fun stopForeground (p0: Int ) stopSelf [androidJvm] fun stopSelf () fun stopSelf (p0: Int ) stopSelfResult [androidJvm] fun stopSelfResult (p0: Int ): Boolean stopService [androidJvm] open override fun stopService (p0: Intent ): Boolean unbindService [androidJvm] open override fun unbindService (p0: ServiceConnection ) unregisterComponentCallbacks [androidJvm] open fun unregisterComponentCallbacks (p0: ComponentCallbacks ) unregisterReceiver [androidJvm] open override fun unregisterReceiver (p0: BroadcastReceiver ) updateServiceGroup [androidJvm] open override fun updateServiceGroup (p0: ServiceConnection , p1: Int , p2: Int ) Properties \u00b6 Name Summary coroutineContext [androidJvm] open override val coroutineContext : CoroutineContext mConnectionFromFwk [androidJvm] val mConnectionFromFwk : MediaBrowserServiceCompat.ConnectionRecord mConnections [androidJvm] val mConnections : ArrayMap < IBinder , MediaBrowserServiceCompat.ConnectionRecord > mCurConnection [androidJvm] val mCurConnection : MediaBrowserServiceCompat.ConnectionRecord mHandler [androidJvm] val mHandler : MediaBrowserServiceCompat.ServiceHandler mPendingConnections [androidJvm] val mPendingConnections : ArrayList < MediaBrowserServiceCompat.ConnectionRecord > mSession [androidJvm] val mSession : MediaSessionCompat.Token","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/#mediaservice","text":"[androidJvm]\\ open class MediaService : MediaBrowserServiceCompat , CoroutineScope MediaBrowserServiceCompat implementation holding the current MediaSessionNavigator for background playback. You should override this service in your app and declare it in your AndroidManifest.xml. See https://developer.android.com/guide/topics/media-apps/audio-app/building-a-mediabrowserservice","title":"MediaService"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/#constructors","text":"MediaService [androidJvm] fun MediaService ()","title":"Constructors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/#types","text":"Name Summary Companion [androidJvm] object Companion Connection [androidJvm] class Connection Connection to any running MediaService instance.","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/#functions","text":"Name Summary addSubscription [androidJvm] open fun addSubscription (id: String , connection: MediaBrowserServiceCompat.ConnectionRecord , token: IBinder , options: Bundle ) applyOptions [androidJvm] open fun applyOptions (list: MutableList < MediaBrowserCompat.MediaItem >, options: Bundle ): MutableList < MediaBrowserCompat.MediaItem > attachBaseContext [androidJvm] open override fun attachBaseContext (p0: Context ) attachToBaseContext [androidJvm] open fun attachToBaseContext (base: Context ) bindIsolatedService [androidJvm] open override fun bindIsolatedService (p0: Intent , p1: Int , p2: String , p3: Executor , p4: ServiceConnection ): Boolean bindService [androidJvm] open override fun bindService (p0: Intent , p1: ServiceConnection , p2: Int ): Boolean open override fun bindService (p0: Intent , p1: Int , p2: Executor , p3: ServiceConnection ): Boolean bindServiceAsUser [androidJvm] open override fun bindServiceAsUser (p0: Intent , p1: ServiceConnection , p2: Int , p3: UserHandle ): Boolean checkCallingOrSelfPermission [androidJvm] open override fun checkCallingOrSelfPermission (p0: String ): Int checkCallingOrSelfUriPermission [androidJvm] open override fun checkCallingOrSelfUriPermission (p0: Uri , p1: Int ): Int checkCallingOrSelfUriPermissions [androidJvm] open override fun checkCallingOrSelfUriPermissions (p0: MutableList < Uri >, p1: Int ): IntArray checkCallingPermission [androidJvm] open override fun checkCallingPermission (p0: String ): Int checkCallingUriPermission [androidJvm] open override fun checkCallingUriPermission (p0: Uri , p1: Int ): Int checkCallingUriPermissions [androidJvm] open override fun checkCallingUriPermissions (p0: MutableList < Uri >, p1: Int ): IntArray checkPermission [androidJvm] open override fun checkPermission (p0: String , p1: Int , p2: Int ): Int checkSelfPermission [androidJvm] open override fun checkSelfPermission (p0: String ): Int checkUriPermission [androidJvm] open override fun checkUriPermission (p0: Uri , p1: Int , p2: Int , p3: Int ): Int open override fun checkUriPermission (p0: Uri ?, p1: String ?, p2: String ?, p3: Int , p4: Int , p5: Int ): Int checkUriPermissions [androidJvm] open override fun checkUriPermissions (p0: MutableList < Uri >, p1: Int , p2: Int , p3: Int ): IntArray coverOfPublication [androidJvm] open suspend fun coverOfPublication (publicationId: PublicationId , publication: Publication ): Bitmap ? Returns the cover for the given publication which should be used in media notifications. createAttributionContext [androidJvm] open override fun createAttributionContext (p0: String ?): Context createConfigurationContext [androidJvm] open override fun createConfigurationContext (p0: Configuration ): Context createContext [androidJvm] open override fun createContext (p0: ContextParams ): Context createContextForSplit [androidJvm] open override fun createContextForSplit (p0: String ): Context createDeviceProtectedStorageContext [androidJvm] open override fun createDeviceProtectedStorageContext (): Context createDisplayContext [androidJvm] open override fun createDisplayContext (p0: Display ): Context createPackageContext [androidJvm] open override fun createPackageContext (p0: String , p1: Int ): Context createWindowContext [androidJvm] open override fun createWindowContext (p0: Int , p1: Bundle ?): Context open override fun createWindowContext (p0: Display , p1: Int , p2: Bundle ?): Context databaseList [androidJvm] open override fun databaseList (): Array < String > deleteDatabase [androidJvm] open override fun deleteDatabase (p0: String ): Boolean deleteFile [androidJvm] open override fun deleteFile (p0: String ): Boolean deleteSharedPreferences [androidJvm] open override fun deleteSharedPreferences (p0: String ): Boolean dump [androidJvm] open override fun dump (fd: FileDescriptor , writer: PrintWriter , args: Array < String >) enforceCallingOrSelfPermission [androidJvm] open override fun enforceCallingOrSelfPermission (p0: String , p1: String ?) enforceCallingOrSelfUriPermission [androidJvm] open override fun enforceCallingOrSelfUriPermission (p0: Uri , p1: Int , p2: String ) enforceCallingPermission [androidJvm] open override fun enforceCallingPermission (p0: String , p1: String ?) enforceCallingUriPermission [androidJvm] open override fun enforceCallingUriPermission (p0: Uri , p1: Int , p2: String ) enforcePermission [androidJvm] open override fun enforcePermission (p0: String , p1: Int , p2: Int , p3: String ?) enforceUriPermission [androidJvm] open override fun enforceUriPermission (p0: Uri , p1: Int , p2: Int , p3: Int , p4: String ) open override fun enforceUriPermission (p0: Uri ?, p1: String ?, p2: String ?, p3: Int , p4: Int , p5: Int , p6: String ?) fileList [androidJvm] open override fun fileList (): Array < String > getApplication [androidJvm] fun getApplication (): Application getApplicationContext [androidJvm] open override fun getApplicationContext (): Context getApplicationInfo [androidJvm] open override fun getApplicationInfo (): ApplicationInfo getAssets [androidJvm] open override fun getAssets (): AssetManager getAttributionSource [androidJvm] open override fun getAttributionSource (): AttributionSource getAttributionTag [androidJvm] open override fun getAttributionTag (): String ? getBaseContext [androidJvm] open fun getBaseContext (): Context getBrowserRootHints [androidJvm] fun getBrowserRootHints (): Bundle getCacheDir [androidJvm] open override fun getCacheDir (): File getClassLoader [androidJvm] open override fun getClassLoader (): ClassLoader getCodeCacheDir [androidJvm] open override fun getCodeCacheDir (): File getColor [androidJvm] fun getColor (p0: Int ): Int getColorStateList [androidJvm] fun getColorStateList (p0: Int ): ColorStateList getContentResolver [androidJvm] open override fun getContentResolver (): ContentResolver getCurrentBrowserInfo [androidJvm] @ NonNull fun getCurrentBrowserInfo (): MediaSessionManager.RemoteUserInfo getDatabasePath [androidJvm] open override fun getDatabasePath (p0: String ): File getDataDir [androidJvm] open override fun getDataDir (): File getDir [androidJvm] open override fun getDir (p0: String , p1: Int ): File getDisplay [androidJvm] open override fun getDisplay (): Display ? getDrawable [androidJvm] fun getDrawable (p0: Int ): Drawable ? getExternalCacheDir [androidJvm] open override fun getExternalCacheDir (): File ? getExternalCacheDirs [androidJvm] open override fun getExternalCacheDirs (): Array < File > getExternalFilesDir [androidJvm] open override fun getExternalFilesDir (p0: String ?): File ? getExternalFilesDirs [androidJvm] open override fun getExternalFilesDirs (p0: String ): Array < File > getExternalMediaDirs [androidJvm] open override fun getExternalMediaDirs (): Array < File > getFilesDir [androidJvm] open override fun getFilesDir (): File getFileStreamPath [androidJvm] open override fun getFileStreamPath (p0: String ): File getForegroundServiceType [androidJvm] fun getForegroundServiceType (): Int getMainExecutor [androidJvm] open override fun getMainExecutor (): Executor getMainLooper [androidJvm] open override fun getMainLooper (): Looper getNoBackupFilesDir [androidJvm] open override fun getNoBackupFilesDir (): File getObbDir [androidJvm] open override fun getObbDir (): File getObbDirs [androidJvm] open override fun getObbDirs (): Array < File > getOpPackageName [androidJvm] open override fun getOpPackageName (): String getPackageCodePath [androidJvm] open override fun getPackageCodePath (): String getPackageManager [androidJvm] open override fun getPackageManager (): PackageManager getPackageName [androidJvm] open override fun getPackageName (): String getPackageResourcePath [androidJvm] open override fun getPackageResourcePath (): String getParams [androidJvm] open override fun getParams (): ContextParams ? getResources [androidJvm] open override fun getResources (): Resources getSessionToken [androidJvm] @ Nullable open fun getSessionToken (): MediaSessionCompat.Token ? getSharedPreferences [androidJvm] open override fun getSharedPreferences (p0: String , p1: Int ): SharedPreferences getString [androidJvm] fun getString (p0: Int ): String fun getString (p0: Int , vararg p1: Any ): String getSystemService [androidJvm] fun < T : Any > getSystemService (p0: Class < T >): T open override fun getSystemService (p0: String ): Any getSystemServiceName [androidJvm] open override fun getSystemServiceName (p0: Class <*>): String ? getText [androidJvm] fun getText (p0: Int ): CharSequence getTheme [androidJvm] open override fun getTheme (): Resources.Theme grantUriPermission [androidJvm] open override fun grantUriPermission (p0: String , p1: Uri , p2: Int ) isClientAuthorized [androidJvm] open fun isClientAuthorized (packageName: String , uid: Int ): Boolean Override to control which app can access the MediaSession through the MediaBrowserService. By default, only our own app can. isDeviceProtectedStorage [androidJvm] open override fun isDeviceProtectedStorage (): Boolean isRestricted [androidJvm] open override fun isRestricted (): Boolean isUiContext [androidJvm] open override fun isUiContext (): Boolean isValidPackage [androidJvm] open fun isValidPackage (pkg: String , uid: Int ): Boolean moveDatabaseFrom [androidJvm] open override fun moveDatabaseFrom (p0: Context , p1: String ): Boolean moveSharedPreferencesFrom [androidJvm] open override fun moveSharedPreferencesFrom (p0: Context , p1: String ): Boolean notifyChildrenChanged [androidJvm] open fun notifyChildrenChanged (@ NonNull parentId: String ) open fun notifyChildrenChanged (@ NonNull parentId: String , @ NonNull options: Bundle ) open fun notifyChildrenChanged (@ NonNull remoteUserInfo: MediaSessionManager.RemoteUserInfo , @ NonNull parentId: String , @ NonNull options: Bundle ) obtainStyledAttributes [androidJvm] fun obtainStyledAttributes (p0: IntArray ): TypedArray fun obtainStyledAttributes (p0: AttributeSet ?, p1: IntArray ): TypedArray fun obtainStyledAttributes (p0: Int , p1: IntArray ): TypedArray fun obtainStyledAttributes (p0: AttributeSet ?, p1: IntArray , p2: Int , p3: Int ): TypedArray onBind [androidJvm] open override fun onBind (intent: Intent ): IBinder ? onCommand [androidJvm] open fun onCommand (command: String , args: Bundle ?, cb: ResultReceiver ?): Boolean Handles a custom command delivered by MediaSessionCompat.Callback.onCommand . onConfigurationChanged [androidJvm] open override fun onConfigurationChanged (p0: Configuration ) onCreate [androidJvm] open override fun onCreate () onCreateNotificationIntent [androidJvm] open suspend fun onCreateNotificationIntent (publicationId: PublicationId , publication: Publication ): PendingIntent ? Creates the PendingIntent which will be used to start the media activity when the user activates the media notification. onCreateNotificationMetadata [androidJvm] open fun onCreateNotificationMetadata (publicationId: PublicationId , publication: Publication , link: Link ): MediaPlayer.NotificationMetadata Creates the MediaPlayer.NotificationMetadata for the given resource link . onCreatePlayer [androidJvm] open fun onCreatePlayer (mediaSession: MediaSessionCompat , media: PendingMedia ): MediaPlayer Creates the instance of MediaPlayer which will be used for playing the given media . onCustomAction [androidJvm] open fun onCustomAction (@ NonNull action: String , extras: Bundle , @ NonNull result: MediaBrowserServiceCompat.Result < Bundle >) onDestroy [androidJvm] open override fun onDestroy () onGetRoot [androidJvm] open override fun onGetRoot (clientPackageName: String , clientUid: Int , rootHints: Bundle ?): MediaBrowserServiceCompat.BrowserRoot ? onLoadChildren [androidJvm] open override fun onLoadChildren (parentId: String , result: MediaBrowserServiceCompat.Result < MutableList < MediaBrowserCompat.MediaItem >>) open fun onLoadChildren (@ NonNull parentId: String , @ NonNull result: MediaBrowserServiceCompat.Result < MutableList < MediaBrowserCompat.MediaItem >>, @ NonNull options: Bundle ) onLoadItem [androidJvm] open fun onLoadItem (itemId: String , @ NonNull result: MediaBrowserServiceCompat.Result < MediaBrowserCompat.MediaItem >) onLowMemory [androidJvm] open override fun onLowMemory () onPlayerStopped [androidJvm] open fun onPlayerStopped () Called when the underlying MediaPlayer was stopped. onRebind [androidJvm] open fun onRebind (p0: Intent ) onResourceLoadFailed [androidJvm] open fun onResourceLoadFailed (link: Link , error: Resource.Exception ) Called when a resource failed to be loaded, for example because the Internet connection is offline and the resource is streamed. onSearch [androidJvm] open fun onSearch (@ NonNull query: String , extras: Bundle , @ NonNull result: MediaBrowserServiceCompat.Result < MutableList < MediaBrowserCompat.MediaItem >>) onStartCommand [androidJvm] open fun onStartCommand (p0: Intent , p1: Int , p2: Int ): Int onSubscribe [androidJvm] open fun onSubscribe (id: String , option: Bundle ) onTaskRemoved [androidJvm] open fun onTaskRemoved (p0: Intent ) onTrimMemory [androidJvm] open override fun onTrimMemory (p0: Int ) onUnbind [androidJvm] open fun onUnbind (p0: Intent ): Boolean onUnsubscribe [androidJvm] open fun onUnsubscribe (id: String ) openFileInput [androidJvm] open override fun openFileInput (p0: String ): FileInputStream openFileOutput [androidJvm] open override fun openFileOutput (p0: String , p1: Int ): FileOutputStream openOrCreateDatabase [androidJvm] open override fun openOrCreateDatabase (p0: String , p1: Int , p2: SQLiteDatabase.CursorFactory ): SQLiteDatabase open override fun openOrCreateDatabase (p0: String , p1: Int , p2: SQLiteDatabase.CursorFactory , p3: DatabaseErrorHandler ?): SQLiteDatabase performCustomAction [androidJvm] open fun performCustomAction (action: String , extras: Bundle , connection: MediaBrowserServiceCompat.ConnectionRecord , receiver: ResultReceiver) performLoadChildren [androidJvm] open fun performLoadChildren (parentId: String , connection: MediaBrowserServiceCompat.ConnectionRecord , subscribeOptions: Bundle , notifyChildrenChangedOptions: Bundle ) performLoadItem [androidJvm] open fun performLoadItem (itemId: String , connection: MediaBrowserServiceCompat.ConnectionRecord , receiver: ResultReceiver) performSearch [androidJvm] open fun performSearch (query: String , extras: Bundle , connection: MediaBrowserServiceCompat.ConnectionRecord , receiver: ResultReceiver) registerComponentCallbacks [androidJvm] open fun registerComponentCallbacks (p0: ComponentCallbacks ) registerReceiver [androidJvm] open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter ): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: Int ): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: String ?, p3: Handler ?): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: String ?, p3: Handler ?, p4: Int ): Intent ? removeSubscription [androidJvm] open fun removeSubscription (id: String , connection: MediaBrowserServiceCompat.ConnectionRecord , token: IBinder ): Boolean revokeUriPermission [androidJvm] open override fun revokeUriPermission (p0: Uri , p1: Int ) open override fun revokeUriPermission (p0: String , p1: Uri , p2: Int ) sendBroadcast [androidJvm] open override fun sendBroadcast (p0: Intent ) open override fun sendBroadcast (p0: Intent , p1: String ?) sendBroadcastAsUser [androidJvm] open override fun sendBroadcastAsUser (p0: Intent , p1: UserHandle ) open override fun sendBroadcastAsUser (p0: Intent , p1: UserHandle , p2: String ?) sendBroadcastWithMultiplePermissions [androidJvm] open fun sendBroadcastWithMultiplePermissions (p0: Intent , p1: Array < String >) sendOrderedBroadcast [androidJvm] open override fun sendOrderedBroadcast (p0: Intent , p1: String ?) open override fun sendOrderedBroadcast (p0: Intent , p1: String ?, p2: BroadcastReceiver ?, p3: Handler ?, p4: Int , p5: String ?, p6: Bundle ?) open override fun sendOrderedBroadcast (p0: Intent , p1: String ?, p2: String ?, p3: BroadcastReceiver ?, p4: Handler ?, p5: Int , p6: String ?, p7: Bundle ?) open fun sendOrderedBroadcast (p0: Intent , p1: Int , p2: String ?, p3: String ?, p4: BroadcastReceiver ?, p5: Handler ?, p6: String ?, p7: Bundle ?, p8: Bundle ?) sendOrderedBroadcastAsUser [androidJvm] open override fun sendOrderedBroadcastAsUser (p0: Intent , p1: UserHandle , p2: String ?, p3: BroadcastReceiver ?, p4: Handler ?, p5: Int , p6: String ?, p7: Bundle ?) setSessionToken [androidJvm] open fun setSessionToken (token: MediaSessionCompat.Token ) setTheme [androidJvm] open override fun setTheme (p0: Int ) startActivities [androidJvm] open override fun startActivities (p0: Array < Intent >) open override fun startActivities (p0: Array < Intent >, p1: Bundle ?) startActivity [androidJvm] open override fun startActivity (p0: Intent ) open override fun startActivity (p0: Intent , p1: Bundle ?) startForeground [androidJvm] fun startForeground (p0: Int , p1: Notification ) fun startForeground (p0: Int , p1: Notification , p2: Int ) startForegroundService [androidJvm] open override fun startForegroundService (p0: Intent ): ComponentName ? startInstrumentation [androidJvm] open override fun startInstrumentation (p0: ComponentName , p1: String ?, p2: Bundle ?): Boolean startIntentSender [androidJvm] open override fun startIntentSender (p0: IntentSender , p1: Intent ?, p2: Int , p3: Int , p4: Int ) open override fun startIntentSender (p0: IntentSender , p1: Intent ?, p2: Int , p3: Int , p4: Int , p5: Bundle ?) startService [androidJvm] open override fun startService (p0: Intent ): ComponentName ? stopForeground [androidJvm] fun stopForeground (p0: Boolean ) fun stopForeground (p0: Int ) stopSelf [androidJvm] fun stopSelf () fun stopSelf (p0: Int ) stopSelfResult [androidJvm] fun stopSelfResult (p0: Int ): Boolean stopService [androidJvm] open override fun stopService (p0: Intent ): Boolean unbindService [androidJvm] open override fun unbindService (p0: ServiceConnection ) unregisterComponentCallbacks [androidJvm] open fun unregisterComponentCallbacks (p0: ComponentCallbacks ) unregisterReceiver [androidJvm] open override fun unregisterReceiver (p0: BroadcastReceiver ) updateServiceGroup [androidJvm] open override fun updateServiceGroup (p0: ServiceConnection , p1: Int , p2: Int )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/#properties","text":"Name Summary coroutineContext [androidJvm] open override val coroutineContext : CoroutineContext mConnectionFromFwk [androidJvm] val mConnectionFromFwk : MediaBrowserServiceCompat.ConnectionRecord mConnections [androidJvm] val mConnections : ArrayMap < IBinder , MediaBrowserServiceCompat.ConnectionRecord > mCurConnection [androidJvm] val mCurConnection : MediaBrowserServiceCompat.ConnectionRecord mHandler [androidJvm] val mHandler : MediaBrowserServiceCompat.ServiceHandler mPendingConnections [androidJvm] val mPendingConnections : ArrayList < MediaBrowserServiceCompat.ConnectionRecord > mSession [androidJvm] val mSession : MediaSessionCompat.Token","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/-media-service/","text":"// navigator / org.readium.r2.navigator.media / MediaService / MediaService MediaService \u00b6 [androidJvm]\\ fun MediaService ()","title":" media service"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/-media-service/#mediaservice","text":"[androidJvm]\\ fun MediaService ()","title":"MediaService"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/cover-of-publication/","text":"// navigator / org.readium.r2.navigator.media / MediaService / coverOfPublication coverOfPublication \u00b6 [androidJvm]\\ open suspend fun coverOfPublication (publicationId: PublicationId , publication: Publication ): Bitmap ? Returns the cover for the given publication which should be used in media notifications.","title":"Cover of publication"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/cover-of-publication/#coverofpublication","text":"[androidJvm]\\ open suspend fun coverOfPublication (publicationId: PublicationId , publication: Publication ): Bitmap ? Returns the cover for the given publication which should be used in media notifications.","title":"coverOfPublication"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/is-client-authorized/","text":"// navigator / org.readium.r2.navigator.media / MediaService / isClientAuthorized isClientAuthorized \u00b6 [androidJvm]\\ open fun isClientAuthorized (packageName: String , uid: Int ): Boolean Override to control which app can access the MediaSession through the MediaBrowserService. By default, only our own app can. Parameters \u00b6 androidJvm packageName The package name of the application which is requesting access. uid The UID of the application which is requesting access.","title":"Is client authorized"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/is-client-authorized/#isclientauthorized","text":"[androidJvm]\\ open fun isClientAuthorized (packageName: String , uid: Int ): Boolean Override to control which app can access the MediaSession through the MediaBrowserService. By default, only our own app can.","title":"isClientAuthorized"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/is-client-authorized/#parameters","text":"androidJvm packageName The package name of the application which is requesting access. uid The UID of the application which is requesting access.","title":"Parameters"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/on-command/","text":"// navigator / org.readium.r2.navigator.media / MediaService / onCommand onCommand \u00b6 [androidJvm]\\ open fun onCommand (command: String , args: Bundle ?, cb: ResultReceiver ?): Boolean Handles a custom command delivered by MediaSessionCompat.Callback.onCommand . Return \u00b6 Whether the custom command was handled.","title":"On command"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/on-command/#oncommand","text":"[androidJvm]\\ open fun onCommand (command: String , args: Bundle ?, cb: ResultReceiver ?): Boolean Handles a custom command delivered by MediaSessionCompat.Callback.onCommand .","title":"onCommand"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/on-command/#return","text":"Whether the custom command was handled.","title":"Return"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/on-create-notification-intent/","text":"// navigator / org.readium.r2.navigator.media / MediaService / onCreateNotificationIntent onCreateNotificationIntent \u00b6 [androidJvm]\\ open suspend fun onCreateNotificationIntent (publicationId: PublicationId , publication: Publication ): PendingIntent ? Creates the PendingIntent which will be used to start the media activity when the user activates the media notification.","title":"On create notification intent"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/on-create-notification-intent/#oncreatenotificationintent","text":"[androidJvm]\\ open suspend fun onCreateNotificationIntent (publicationId: PublicationId , publication: Publication ): PendingIntent ? Creates the PendingIntent which will be used to start the media activity when the user activates the media notification.","title":"onCreateNotificationIntent"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/on-create-notification-metadata/","text":"// navigator / org.readium.r2.navigator.media / MediaService / onCreateNotificationMetadata onCreateNotificationMetadata \u00b6 [androidJvm]\\ open fun onCreateNotificationMetadata (publicationId: PublicationId , publication: Publication , link: Link ): MediaPlayer.NotificationMetadata Creates the MediaPlayer.NotificationMetadata for the given resource link . The metadata will be used for the media-style notification.","title":"On create notification metadata"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/on-create-notification-metadata/#oncreatenotificationmetadata","text":"[androidJvm]\\ open fun onCreateNotificationMetadata (publicationId: PublicationId , publication: Publication , link: Link ): MediaPlayer.NotificationMetadata Creates the MediaPlayer.NotificationMetadata for the given resource link . The metadata will be used for the media-style notification.","title":"onCreateNotificationMetadata"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/on-create-player/","text":"// navigator / org.readium.r2.navigator.media / MediaService / onCreatePlayer onCreatePlayer \u00b6 [androidJvm]\\ open fun onCreatePlayer (mediaSession: MediaSessionCompat , media: PendingMedia ): MediaPlayer Creates the instance of MediaPlayer which will be used for playing the given media . The default implementation uses ExoPlayer.","title":"On create player"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/on-create-player/#oncreateplayer","text":"[androidJvm]\\ open fun onCreatePlayer (mediaSession: MediaSessionCompat , media: PendingMedia ): MediaPlayer Creates the instance of MediaPlayer which will be used for playing the given media . The default implementation uses ExoPlayer.","title":"onCreatePlayer"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/on-create/","text":"// navigator / org.readium.r2.navigator.media / MediaService / onCreate onCreate \u00b6 [androidJvm]\\ open override fun onCreate ()","title":"On create"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/on-create/#oncreate","text":"[androidJvm]\\ open override fun onCreate ()","title":"onCreate"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/on-destroy/","text":"// navigator / org.readium.r2.navigator.media / MediaService / onDestroy onDestroy \u00b6 [androidJvm]\\ open override fun onDestroy ()","title":"On destroy"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/on-destroy/#ondestroy","text":"[androidJvm]\\ open override fun onDestroy ()","title":"onDestroy"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/on-get-root/","text":"// navigator / org.readium.r2.navigator.media / MediaService / onGetRoot onGetRoot \u00b6 [androidJvm]\\ open override fun onGetRoot (clientPackageName: String , clientUid: Int , rootHints: Bundle ?): MediaBrowserServiceCompat.BrowserRoot ?","title":"On get root"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/on-get-root/#ongetroot","text":"[androidJvm]\\ open override fun onGetRoot (clientPackageName: String , clientUid: Int , rootHints: Bundle ?): MediaBrowserServiceCompat.BrowserRoot ?","title":"onGetRoot"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/on-load-children/","text":"// navigator / org.readium.r2.navigator.media / MediaService / onLoadChildren onLoadChildren \u00b6 [androidJvm]\\ open override fun onLoadChildren (parentId: String , result: MediaBrowserServiceCompat.Result < MutableList < MediaBrowserCompat.MediaItem >>)","title":"On load children"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/on-load-children/#onloadchildren","text":"[androidJvm]\\ open override fun onLoadChildren (parentId: String , result: MediaBrowserServiceCompat.Result < MutableList < MediaBrowserCompat.MediaItem >>)","title":"onLoadChildren"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/on-player-stopped/","text":"// navigator / org.readium.r2.navigator.media / MediaService / onPlayerStopped onPlayerStopped \u00b6 [androidJvm]\\ open fun onPlayerStopped () Called when the underlying MediaPlayer was stopped.","title":"On player stopped"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/on-player-stopped/#onplayerstopped","text":"[androidJvm]\\ open fun onPlayerStopped () Called when the underlying MediaPlayer was stopped.","title":"onPlayerStopped"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/on-resource-load-failed/","text":"// navigator / org.readium.r2.navigator.media / MediaService / onResourceLoadFailed onResourceLoadFailed \u00b6 [androidJvm]\\ open fun onResourceLoadFailed (link: Link , error: Resource.Exception ) Called when a resource failed to be loaded, for example because the Internet connection is offline and the resource is streamed. You should present the exception to the user.","title":"On resource load failed"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/on-resource-load-failed/#onresourceloadfailed","text":"[androidJvm]\\ open fun onResourceLoadFailed (link: Link , error: Resource.Exception ) Called when a resource failed to be loaded, for example because the Internet connection is offline and the resource is streamed. You should present the exception to the user.","title":"onResourceLoadFailed"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/-companion/","text":"// navigator / org.readium.r2.navigator.media / MediaService / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary connect [androidJvm] fun connect (serviceClass: Class <*> = MediaService::class.java): MediaService.Connection Properties \u00b6 Name Summary navigator [androidJvm] val navigator : StateFlow< MediaSessionNavigator ?>","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/-companion/#functions","text":"Name Summary connect [androidJvm] fun connect (serviceClass: Class <*> = MediaService::class.java): MediaService.Connection","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/-companion/#properties","text":"Name Summary navigator [androidJvm] val navigator : StateFlow< MediaSessionNavigator ?>","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/-companion/connect/","text":"// navigator / org.readium.r2.navigator.media / MediaService / Companion / connect connect \u00b6 [androidJvm]\\ fun connect (serviceClass: Class <*> = MediaService::class.java): MediaService.Connection","title":"Connect"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/-companion/connect/#connect","text":"[androidJvm]\\ fun connect (serviceClass: Class <*> = MediaService::class.java): MediaService.Connection","title":"connect"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/-companion/navigator/","text":"// navigator / org.readium.r2.navigator.media / MediaService / Companion / navigator navigator \u00b6 [androidJvm]\\ val navigator : StateFlow< MediaSessionNavigator ?>","title":"Navigator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/-companion/navigator/#navigator","text":"[androidJvm]\\ val navigator : StateFlow< MediaSessionNavigator ?>","title":"navigator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/-connection/","text":"// navigator / org.readium.r2.navigator.media / MediaService / Connection Connection \u00b6 [androidJvm]\\ class Connection Connection to any running MediaService instance. Use a Connection to get a MediaSessionNavigator from a Publication . It will start the service if needed. Functions \u00b6 Name Summary getNavigator [androidJvm] fun getNavigator (context: Context , publication: Publication , publicationId: PublicationId , initialLocator: Locator ?): MediaSessionNavigator Properties \u00b6 Name Summary currentNavigator [androidJvm] val currentNavigator : StateFlow< MediaSessionNavigator ?>","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/-connection/#connection","text":"[androidJvm]\\ class Connection Connection to any running MediaService instance. Use a Connection to get a MediaSessionNavigator from a Publication . It will start the service if needed.","title":"Connection"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/-connection/#functions","text":"Name Summary getNavigator [androidJvm] fun getNavigator (context: Context , publication: Publication , publicationId: PublicationId , initialLocator: Locator ?): MediaSessionNavigator","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/-connection/#properties","text":"Name Summary currentNavigator [androidJvm] val currentNavigator : StateFlow< MediaSessionNavigator ?>","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/-connection/current-navigator/","text":"// navigator / org.readium.r2.navigator.media / MediaService / Connection / currentNavigator currentNavigator \u00b6 [androidJvm]\\ val currentNavigator : StateFlow< MediaSessionNavigator ?>","title":"Current navigator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/-connection/current-navigator/#currentnavigator","text":"[androidJvm]\\ val currentNavigator : StateFlow< MediaSessionNavigator ?>","title":"currentNavigator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/-connection/get-navigator/","text":"// navigator / org.readium.r2.navigator.media / MediaService / Connection / getNavigator getNavigator \u00b6 [androidJvm]\\ fun getNavigator (context: Context , publication: Publication , publicationId: PublicationId , initialLocator: Locator ?): MediaSessionNavigator","title":"Get navigator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-service/-connection/get-navigator/#getnavigator","text":"[androidJvm]\\ fun getNavigator (context: Context , publication: Publication , publicationId: PublicationId , initialLocator: Locator ?): MediaSessionNavigator","title":"getNavigator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/","text":"// navigator / org.readium.r2.navigator.media / MediaSessionNavigator MediaSessionNavigator \u00b6 [androidJvm]\\ class MediaSessionNavigator (publication: Publication , publicationId: PublicationId , controller: MediaControllerCompat ) : MediaNavigator , CoroutineScope An implementation of MediaNavigator using an Android's MediaSession compatible media player. Constructors \u00b6 MediaSessionNavigator [androidJvm] fun MediaSessionNavigator (publication: Publication , publicationId: PublicationId , controller: MediaControllerCompat ) Functions \u00b6 Name Summary go [androidJvm] open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link. [androidJvm] open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . goBackward [androidJvm] open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction. goForward [androidJvm] open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction. pause [androidJvm] open override fun pause () Pauses the playback. play [androidJvm] open override fun play () Resumes or start the playback at the current location. playPause [androidJvm] open override fun playPause () Toggles the playback. Can be useful as a handler for play/pause button. seekRelative [androidJvm] open override fun seekRelative (offset: Duration ) Seeks relatively from the current position in the current resource. seekTo [androidJvm] open override fun seekTo (position: Duration ) Seeks to the given time in the current resource. setPlaybackRate [androidJvm] open override fun setPlaybackRate (rate: Double ) Sets the speed of the media playback. stop [androidJvm] open override fun stop () Stops the playback. Properties \u00b6 Name Summary controller [androidJvm] val controller : MediaControllerCompat coroutineContext [androidJvm] open override val coroutineContext : CoroutineContext currentLocator [androidJvm] open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position. isPlaying [androidJvm] open override val isPlaying : Boolean Indicates whether the navigator is currently playing. playback [androidJvm] open override val playback : Flow< MediaPlayback > Current playback information. publication [androidJvm] open override val publication : Publication Publication rendered by this navigator. publicationId [androidJvm] val publicationId : PublicationId","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/#mediasessionnavigator","text":"[androidJvm]\\ class MediaSessionNavigator (publication: Publication , publicationId: PublicationId , controller: MediaControllerCompat ) : MediaNavigator , CoroutineScope An implementation of MediaNavigator using an Android's MediaSession compatible media player.","title":"MediaSessionNavigator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/#constructors","text":"MediaSessionNavigator [androidJvm] fun MediaSessionNavigator (publication: Publication , publicationId: PublicationId , controller: MediaControllerCompat )","title":"Constructors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/#functions","text":"Name Summary go [androidJvm] open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link. [androidJvm] open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . goBackward [androidJvm] open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction. goForward [androidJvm] open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction. pause [androidJvm] open override fun pause () Pauses the playback. play [androidJvm] open override fun play () Resumes or start the playback at the current location. playPause [androidJvm] open override fun playPause () Toggles the playback. Can be useful as a handler for play/pause button. seekRelative [androidJvm] open override fun seekRelative (offset: Duration ) Seeks relatively from the current position in the current resource. seekTo [androidJvm] open override fun seekTo (position: Duration ) Seeks to the given time in the current resource. setPlaybackRate [androidJvm] open override fun setPlaybackRate (rate: Double ) Sets the speed of the media playback. stop [androidJvm] open override fun stop () Stops the playback.","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/#properties","text":"Name Summary controller [androidJvm] val controller : MediaControllerCompat coroutineContext [androidJvm] open override val coroutineContext : CoroutineContext currentLocator [androidJvm] open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position. isPlaying [androidJvm] open override val isPlaying : Boolean Indicates whether the navigator is currently playing. playback [androidJvm] open override val playback : Flow< MediaPlayback > Current playback information. publication [androidJvm] open override val publication : Publication Publication rendered by this navigator. publicationId [androidJvm] val publicationId : PublicationId","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/-media-session-navigator/","text":"// navigator / org.readium.r2.navigator.media / MediaSessionNavigator / MediaSessionNavigator MediaSessionNavigator \u00b6 [androidJvm]\\ fun MediaSessionNavigator (publication: Publication , publicationId: PublicationId , controller: MediaControllerCompat )","title":" media session navigator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/-media-session-navigator/#mediasessionnavigator","text":"[androidJvm]\\ fun MediaSessionNavigator (publication: Publication , publicationId: PublicationId , controller: MediaControllerCompat )","title":"MediaSessionNavigator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/controller/","text":"// navigator / org.readium.r2.navigator.media / MediaSessionNavigator / controller controller \u00b6 [androidJvm]\\ val controller : MediaControllerCompat","title":"Controller"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/controller/#controller","text":"[androidJvm]\\ val controller : MediaControllerCompat","title":"controller"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/current-locator/","text":"// navigator / org.readium.r2.navigator.media / MediaSessionNavigator / currentLocator currentLocator \u00b6 [androidJvm]\\ open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position.","title":"Current locator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/current-locator/#currentlocator","text":"[androidJvm]\\ open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position.","title":"currentLocator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/go-backward/","text":"// navigator / org.readium.r2.navigator.media / MediaSessionNavigator / goBackward goBackward \u00b6 [androidJvm]\\ open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction.","title":"Go backward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/go-backward/#gobackward","text":"[androidJvm]\\ open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction.","title":"goBackward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/go-forward/","text":"// navigator / org.readium.r2.navigator.media / MediaSessionNavigator / goForward goForward \u00b6 [androidJvm]\\ open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction.","title":"Go forward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/go-forward/#goforward","text":"[androidJvm]\\ open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction.","title":"goForward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/go/","text":"// navigator / org.readium.r2.navigator.media / MediaSessionNavigator / go go \u00b6 [androidJvm]\\ open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . [androidJvm]\\ open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link.","title":"Go"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/go/#go","text":"[androidJvm]\\ open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . [androidJvm]\\ open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link.","title":"go"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/is-playing/","text":"// navigator / org.readium.r2.navigator.media / MediaSessionNavigator / isPlaying isPlaying \u00b6 [androidJvm]\\ open override val isPlaying : Boolean Indicates whether the navigator is currently playing.","title":"Is playing"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/is-playing/#isplaying","text":"[androidJvm]\\ open override val isPlaying : Boolean Indicates whether the navigator is currently playing.","title":"isPlaying"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/pause/","text":"// navigator / org.readium.r2.navigator.media / MediaSessionNavigator / pause pause \u00b6 [androidJvm]\\ open override fun pause () Pauses the playback.","title":"Pause"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/pause/#pause","text":"[androidJvm]\\ open override fun pause () Pauses the playback.","title":"pause"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/play-pause/","text":"// navigator / org.readium.r2.navigator.media / MediaSessionNavigator / playPause playPause \u00b6 [androidJvm]\\ open override fun playPause () Toggles the playback. Can be useful as a handler for play/pause button.","title":"Play pause"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/play-pause/#playpause","text":"[androidJvm]\\ open override fun playPause () Toggles the playback. Can be useful as a handler for play/pause button.","title":"playPause"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/play/","text":"// navigator / org.readium.r2.navigator.media / MediaSessionNavigator / play play \u00b6 [androidJvm]\\ open override fun play () Resumes or start the playback at the current location.","title":"Play"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/play/#play","text":"[androidJvm]\\ open override fun play () Resumes or start the playback at the current location.","title":"play"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/playback/","text":"// navigator / org.readium.r2.navigator.media / MediaSessionNavigator / playback playback \u00b6 [androidJvm]\\ open override val playback : Flow< MediaPlayback > Current playback information.","title":"Playback"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/playback/#playback","text":"[androidJvm]\\ open override val playback : Flow< MediaPlayback > Current playback information.","title":"playback"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/publication-id/","text":"// navigator / org.readium.r2.navigator.media / MediaSessionNavigator / publicationId publicationId \u00b6 [androidJvm]\\ val publicationId : PublicationId","title":"Publication id"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/publication-id/#publicationid","text":"[androidJvm]\\ val publicationId : PublicationId","title":"publicationId"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/publication/","text":"// navigator / org.readium.r2.navigator.media / MediaSessionNavigator / publication publication \u00b6 [androidJvm]\\ open override val publication : Publication Publication rendered by this navigator.","title":"Publication"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/publication/#publication","text":"[androidJvm]\\ open override val publication : Publication Publication rendered by this navigator.","title":"publication"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/seek-relative/","text":"// navigator / org.readium.r2.navigator.media / MediaSessionNavigator / seekRelative seekRelative \u00b6 [androidJvm]\\ open override fun seekRelative (offset: Duration ) Seeks relatively from the current position in the current resource.","title":"Seek relative"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/seek-relative/#seekrelative","text":"[androidJvm]\\ open override fun seekRelative (offset: Duration ) Seeks relatively from the current position in the current resource.","title":"seekRelative"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/seek-to/","text":"// navigator / org.readium.r2.navigator.media / MediaSessionNavigator / seekTo seekTo \u00b6 [androidJvm]\\ open override fun seekTo (position: Duration ) Seeks to the given time in the current resource.","title":"Seek to"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/seek-to/#seekto","text":"[androidJvm]\\ open override fun seekTo (position: Duration ) Seeks to the given time in the current resource.","title":"seekTo"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/set-playback-rate/","text":"// navigator / org.readium.r2.navigator.media / MediaSessionNavigator / setPlaybackRate setPlaybackRate \u00b6 [androidJvm]\\ open override fun setPlaybackRate (rate: Double ) Sets the speed of the media playback. Normal speed is 1.0 and 0.0 is incorrect.","title":"Set playback rate"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/set-playback-rate/#setplaybackrate","text":"[androidJvm]\\ open override fun setPlaybackRate (rate: Double ) Sets the speed of the media playback. Normal speed is 1.0 and 0.0 is incorrect.","title":"setPlaybackRate"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/stop/","text":"// navigator / org.readium.r2.navigator.media / MediaSessionNavigator / stop stop \u00b6 [androidJvm]\\ open override fun stop () Stops the playback. Compared to pause , the navigator may clear its state in whatever way is appropriate. For example, recovering a player's resources.","title":"Stop"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-media-session-navigator/stop/#stop","text":"[androidJvm]\\ open override fun stop () Stops the playback. Compared to pause , the navigator may clear its state in whatever way is appropriate. For example, recovering a player's resources.","title":"stop"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-pending-media/","text":"// navigator / org.readium.r2.navigator.media / PendingMedia PendingMedia \u00b6 [androidJvm]\\ data class PendingMedia (publication: Publication , publicationId: PublicationId , locator: Locator ) Holds information about a media-based publication waiting to be rendered by a MediaPlayer . Constructors \u00b6 PendingMedia [androidJvm] fun PendingMedia (publication: Publication , publicationId: PublicationId , locator: Locator ) Properties \u00b6 Name Summary locator [androidJvm] val locator : Locator publication [androidJvm] val publication : Publication publicationId [androidJvm] val publicationId : PublicationId","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-pending-media/#pendingmedia","text":"[androidJvm]\\ data class PendingMedia (publication: Publication , publicationId: PublicationId , locator: Locator ) Holds information about a media-based publication waiting to be rendered by a MediaPlayer .","title":"PendingMedia"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-pending-media/#constructors","text":"PendingMedia [androidJvm] fun PendingMedia (publication: Publication , publicationId: PublicationId , locator: Locator )","title":"Constructors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-pending-media/#properties","text":"Name Summary locator [androidJvm] val locator : Locator publication [androidJvm] val publication : Publication publicationId [androidJvm] val publicationId : PublicationId","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-pending-media/-pending-media/","text":"// navigator / org.readium.r2.navigator.media / PendingMedia / PendingMedia PendingMedia \u00b6 [androidJvm]\\ fun PendingMedia (publication: Publication , publicationId: PublicationId , locator: Locator )","title":" pending media"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-pending-media/-pending-media/#pendingmedia","text":"[androidJvm]\\ fun PendingMedia (publication: Publication , publicationId: PublicationId , locator: Locator )","title":"PendingMedia"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-pending-media/locator/","text":"// navigator / org.readium.r2.navigator.media / PendingMedia / locator locator \u00b6 [androidJvm]\\ val locator : Locator","title":"Locator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-pending-media/locator/#locator","text":"[androidJvm]\\ val locator : Locator","title":"locator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-pending-media/publication-id/","text":"// navigator / org.readium.r2.navigator.media / PendingMedia / publicationId publicationId \u00b6 [androidJvm]\\ val publicationId : PublicationId","title":"Publication id"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-pending-media/publication-id/#publicationid","text":"[androidJvm]\\ val publicationId : PublicationId","title":"publicationId"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-pending-media/publication/","text":"// navigator / org.readium.r2.navigator.media / PendingMedia / publication publication \u00b6 [androidJvm]\\ val publication : Publication","title":"Publication"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.media/-pending-media/publication/#publication","text":"[androidJvm]\\ val publication : Publication","title":"publication"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/","text":"// navigator / org.readium.r2.navigator.pager Package org.readium.r2.navigator.pager \u00b6 Types \u00b6 Name Summary R2CbzPageFragment [androidJvm] class R2CbzPageFragment (publication: Publication , onTapListener: ( Float , Float ) -> Unit ) : Fragment , CoroutineScope R2EpubPageFragment [androidJvm] class R2EpubPageFragment : Fragment R2FragmentPagerAdapter [androidJvm] abstract class R2FragmentPagerAdapter (mFragmentManager: FragmentManager ) : FragmentStatePagerAdapter R2FXLPageFragment [androidJvm] class R2FXLPageFragment : Fragment R2PagerAdapter [androidJvm] class R2PagerAdapter : R2FragmentPagerAdapter R2RTLViewPager [androidJvm] open class R2RTLViewPager : ViewPager RtlViewPager is an API-compatible implementation of ViewPager which orders paged views according to the layout direction of the view. R2ViewPager [androidJvm] class R2ViewPager : R2RTLViewPager","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/#package-orgreadiumr2navigatorpager","text":"","title":"Package org.readium.r2.navigator.pager"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/#types","text":"Name Summary R2CbzPageFragment [androidJvm] class R2CbzPageFragment (publication: Publication , onTapListener: ( Float , Float ) -> Unit ) : Fragment , CoroutineScope R2EpubPageFragment [androidJvm] class R2EpubPageFragment : Fragment R2FragmentPagerAdapter [androidJvm] abstract class R2FragmentPagerAdapter (mFragmentManager: FragmentManager ) : FragmentStatePagerAdapter R2FXLPageFragment [androidJvm] class R2FXLPageFragment : Fragment R2PagerAdapter [androidJvm] class R2PagerAdapter : R2FragmentPagerAdapter R2RTLViewPager [androidJvm] open class R2RTLViewPager : ViewPager RtlViewPager is an API-compatible implementation of ViewPager which orders paged views according to the layout direction of the view. R2ViewPager [androidJvm] class R2ViewPager : R2RTLViewPager","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-cbz-page-fragment/","text":"// navigator / org.readium.r2.navigator.pager / R2CbzPageFragment R2CbzPageFragment \u00b6 [androidJvm]\\ class R2CbzPageFragment (publication: Publication , onTapListener: ( Float , Float ) -> Unit ) : Fragment , CoroutineScope Functions \u00b6 Name Summary callStartTransitionListener [androidJvm] open fun callStartTransitionListener (p0: Boolean ) createFragmentContainer [androidJvm] @ NonNull open fun createFragmentContainer (): FragmentContainer dump [androidJvm] open fun dump (@ NonNull p0: String , @ Nullable p1: FileDescriptor ?, @ NonNull p2: PrintWriter , @ Nullable p3: Array < String >?) equals [androidJvm] operator override fun equals (@ Nullable other: Any ?): Boolean findFragmentByWho [androidJvm] @ Nullable open fun findFragmentByWho (@ NonNull p0: String ): Fragment ? generateActivityResultKey [androidJvm] @ NonNull open fun generateActivityResultKey (): String getActivity [androidJvm] @ Nullable fun getActivity (): FragmentActivity ? getAllowEnterTransitionOverlap [androidJvm] open fun getAllowEnterTransitionOverlap (): Boolean getAllowReturnTransitionOverlap [androidJvm] open fun getAllowReturnTransitionOverlap (): Boolean getAnimatingAway [androidJvm] open fun getAnimatingAway (): View getAnimator [androidJvm] open fun getAnimator (): Animator getArguments [androidJvm] @ Nullable fun getArguments (): Bundle ? getChildFragmentManager [androidJvm] @ NonNull fun getChildFragmentManager (): FragmentManager getContext [androidJvm] @ Nullable open fun getContext (): Context ? getDefaultViewModelProviderFactory [androidJvm] @ NonNull open override fun getDefaultViewModelProviderFactory (): ViewModelProvider.Factory getEnterAnim [androidJvm] open fun getEnterAnim (): Int getEnterTransition [androidJvm] @ Nullable open fun getEnterTransition (): Any ? getEnterTransitionCallback [androidJvm] open fun getEnterTransitionCallback (): SharedElementCallback getExitAnim [androidJvm] open fun getExitAnim (): Int getExitTransition [androidJvm] @ Nullable open fun getExitTransition (): Any ? getExitTransitionCallback [androidJvm] open fun getExitTransitionCallback (): SharedElementCallback getFocusedView [androidJvm] open fun getFocusedView (): View getHost [androidJvm] @ Nullable fun getHost (): Any ? getId [androidJvm] fun getId (): Int getLayoutInflater [androidJvm] @ NonNull fun getLayoutInflater (): LayoutInflater getLifecycle [androidJvm] @ NonNull open override fun getLifecycle (): Lifecycle getNextTransition [androidJvm] open fun getNextTransition (): Int getParentFragment [androidJvm] @ Nullable fun getParentFragment (): Fragment ? getParentFragmentManager [androidJvm] @ NonNull fun getParentFragmentManager (): FragmentManager getPopDirection [androidJvm] open fun getPopDirection (): Boolean getPopEnterAnim [androidJvm] open fun getPopEnterAnim (): Int getPopExitAnim [androidJvm] open fun getPopExitAnim (): Int getPostOnViewCreatedAlpha [androidJvm] open fun getPostOnViewCreatedAlpha (): Float getReenterTransition [androidJvm] @ Nullable open fun getReenterTransition (): Any ? getResources [androidJvm] @ NonNull fun getResources (): Resources getReturnTransition [androidJvm] @ Nullable open fun getReturnTransition (): Any ? getSavedStateRegistry [androidJvm] @ NonNull override fun getSavedStateRegistry (): SavedStateRegistry getSharedElementEnterTransition [androidJvm] @ Nullable open fun getSharedElementEnterTransition (): Any ? getSharedElementReturnTransition [androidJvm] @ Nullable open fun getSharedElementReturnTransition (): Any ? getSharedElementSourceNames [androidJvm] @ NonNull open fun getSharedElementSourceNames (): ArrayList < String > getSharedElementTargetNames [androidJvm] @ NonNull open fun getSharedElementTargetNames (): ArrayList < String > getString [androidJvm] @ NonNull fun getString (@ StringRes p0: Int ): String @ NonNull fun getString (@ StringRes p0: Int , @ Nullable vararg p1: Any ): String getTag [androidJvm] @ Nullable fun getTag (): String ? getText [androidJvm] @ NonNull fun getText (@ StringRes p0: Int ): CharSequence getView [androidJvm] @ Nullable open fun getView (): View ? getViewLifecycleOwner [androidJvm] @ MainThread @ NonNull open fun getViewLifecycleOwner (): LifecycleOwner getViewLifecycleOwnerLiveData [androidJvm] @ NonNull open fun getViewLifecycleOwnerLiveData (): LiveData < LifecycleOwner > getViewModelStore [androidJvm] @ NonNull open override fun getViewModelStore (): ViewModelStore hashCode [androidJvm] override fun hashCode (): Int hasOptionsMenu [androidJvm] fun hasOptionsMenu (): Boolean initState [androidJvm] open fun initState () isAdded [androidJvm] fun isAdded (): Boolean isDetached [androidJvm] fun isDetached (): Boolean isHidden [androidJvm] fun isHidden (): Boolean isHideReplaced [androidJvm] open fun isHideReplaced (): Boolean isInBackStack [androidJvm] fun isInBackStack (): Boolean isInLayout [androidJvm] fun isInLayout (): Boolean isMenuVisible [androidJvm] fun isMenuVisible (): Boolean isPostponed [androidJvm] open fun isPostponed (): Boolean isRemoving [androidJvm] fun isRemoving (): Boolean isRemovingParent [androidJvm] fun isRemovingParent (): Boolean isResumed [androidJvm] fun isResumed (): Boolean isStateSaved [androidJvm] fun isStateSaved (): Boolean isVisible [androidJvm] fun isVisible (): Boolean noteStateNotSaved [androidJvm] open fun noteStateNotSaved () onAttach [androidJvm] @ MainThread @ CallSuper open fun onAttach (@ NonNull p0: Context ) onConfigurationChanged [androidJvm] @ CallSuper open override fun onConfigurationChanged (@ NonNull p0: Configuration ) onContextItemSelected [androidJvm] @ MainThread open fun onContextItemSelected (@ NonNull p0: MenuItem ): Boolean onCreate [androidJvm] @ MainThread @ CallSuper open fun onCreate (@ Nullable p0: Bundle ?) onCreateAnimation [androidJvm] @ MainThread @ Nullable open fun onCreateAnimation (p0: Int , p1: Boolean , p2: Int ): Animation ? onCreateAnimator [androidJvm] @ MainThread @ Nullable open fun onCreateAnimator (p0: Int , p1: Boolean , p2: Int ): Animator ? onCreateContextMenu [androidJvm] @ MainThread open override fun onCreateContextMenu (@ NonNull p0: ContextMenu , @ NonNull p1: View , @ Nullable p2: ContextMenu.ContextMenuInfo ?) onCreateOptionsMenu [androidJvm] @ MainThread open fun onCreateOptionsMenu (@ NonNull p0: Menu , @ NonNull p1: MenuInflater ) onCreateView [androidJvm] open override fun onCreateView (inflater: LayoutInflater , container: ViewGroup ?, savedInstanceState: Bundle ?): View ? onDestroy [androidJvm] @ MainThread @ CallSuper open fun onDestroy () onDestroyOptionsMenu [androidJvm] @ MainThread open fun onDestroyOptionsMenu () onDestroyView [androidJvm] open override fun onDestroyView () onDetach [androidJvm] @ MainThread @ CallSuper open fun onDetach () onGetLayoutInflater [androidJvm] @ NonNull open fun onGetLayoutInflater (@ Nullable p0: Bundle ?): LayoutInflater onHiddenChanged [androidJvm] @ MainThread open fun onHiddenChanged (p0: Boolean ) onInflate [androidJvm] @ UiThread @ CallSuper open fun onInflate (@ NonNull p0: Context , @ NonNull p1: AttributeSet , @ Nullable p2: Bundle ?) onLowMemory [androidJvm] @ MainThread @ CallSuper open override fun onLowMemory () onMultiWindowModeChanged [androidJvm] open fun onMultiWindowModeChanged (p0: Boolean ) onOptionsItemSelected [androidJvm] @ MainThread open fun onOptionsItemSelected (@ NonNull p0: MenuItem ): Boolean onOptionsMenuClosed [androidJvm] @ MainThread open fun onOptionsMenuClosed (@ NonNull p0: Menu ) onPause [androidJvm] @ MainThread @ CallSuper open fun onPause () onPictureInPictureModeChanged [androidJvm] open fun onPictureInPictureModeChanged (p0: Boolean ) onPrepareOptionsMenu [androidJvm] @ MainThread open fun onPrepareOptionsMenu (@ NonNull p0: Menu ) onPrimaryNavigationFragmentChanged [androidJvm] @ MainThread open fun onPrimaryNavigationFragmentChanged (p0: Boolean ) onResume [androidJvm] @ MainThread @ CallSuper open fun onResume () onSaveInstanceState [androidJvm] @ MainThread open fun onSaveInstanceState (@ NonNull p0: Bundle ) onStart [androidJvm] @ MainThread @ CallSuper open fun onStart () onStop [androidJvm] @ MainThread @ CallSuper open fun onStop () onViewCreated [androidJvm] @ MainThread open fun onViewCreated (@ NonNull p0: View , @ Nullable p1: Bundle ?) onViewStateRestored [androidJvm] @ MainThread @ CallSuper open fun onViewStateRestored (@ Nullable p0: Bundle ?) performActivityCreated [androidJvm] open fun performActivityCreated (p0: Bundle ) performAttach [androidJvm] open fun performAttach () performConfigurationChanged [androidJvm] open fun performConfigurationChanged (@ NonNull p0: Configuration ) performContextItemSelected [androidJvm] open fun performContextItemSelected (@ NonNull p0: MenuItem ): Boolean performCreate [androidJvm] open fun performCreate (p0: Bundle ) performCreateOptionsMenu [androidJvm] open fun performCreateOptionsMenu (@ NonNull p0: Menu , @ NonNull p1: MenuInflater ): Boolean performCreateView [androidJvm] open fun performCreateView (@ NonNull p0: LayoutInflater , @ Nullable p1: ViewGroup ?, @ Nullable p2: Bundle ?) performDestroy [androidJvm] open fun performDestroy () performDestroyView [androidJvm] open fun performDestroyView () performDetach [androidJvm] open fun performDetach () performGetLayoutInflater [androidJvm] @ NonNull open fun performGetLayoutInflater (@ Nullable p0: Bundle ?): LayoutInflater performLowMemory [androidJvm] open fun performLowMemory () performMultiWindowModeChanged [androidJvm] open fun performMultiWindowModeChanged (p0: Boolean ) performOptionsItemSelected [androidJvm] open fun performOptionsItemSelected (@ NonNull p0: MenuItem ): Boolean performOptionsMenuClosed [androidJvm] open fun performOptionsMenuClosed (@ NonNull p0: Menu ) performPause [androidJvm] open fun performPause () performPictureInPictureModeChanged [androidJvm] open fun performPictureInPictureModeChanged (p0: Boolean ) performPrepareOptionsMenu [androidJvm] open fun performPrepareOptionsMenu (@ NonNull p0: Menu ): Boolean performPrimaryNavigationFragmentChanged [androidJvm] open fun performPrimaryNavigationFragmentChanged () performResume [androidJvm] open fun performResume () performSaveInstanceState [androidJvm] open fun performSaveInstanceState (p0: Bundle ) performStart [androidJvm] open fun performStart () performStop [androidJvm] open fun performStop () performViewCreated [androidJvm] open fun performViewCreated () postponeEnterTransition [androidJvm] open fun postponeEnterTransition () fun postponeEnterTransition (p0: Long , @ NonNull p1: TimeUnit ) registerForActivityResult [androidJvm] @ MainThread @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull p0: ActivityResultContract < I , O >, @ NonNull p1: ActivityResultCallback < O >): ActivityResultLauncher < I > @ MainThread @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull p0: ActivityResultContract < I , O >, @ NonNull p1: ActivityResultRegistry , @ NonNull p2: ActivityResultCallback < O >): ActivityResultLauncher < I > registerForContextMenu [androidJvm] open fun registerForContextMenu (@ NonNull p0: View ) requireActivity [androidJvm] @ NonNull fun requireActivity (): FragmentActivity requireArguments [androidJvm] @ NonNull fun requireArguments (): Bundle requireContext [androidJvm] @ NonNull fun requireContext (): Context requireHost [androidJvm] @ NonNull fun requireHost (): Any requireParentFragment [androidJvm] @ NonNull fun requireParentFragment (): Fragment requireView [androidJvm] @ NonNull fun requireView (): View restoreChildFragmentState [androidJvm] open fun restoreChildFragmentState (@ Nullable p0: Bundle ?) restoreViewState [androidJvm] fun restoreViewState (p0: Bundle ) setAllowEnterTransitionOverlap [androidJvm] open fun setAllowEnterTransitionOverlap (p0: Boolean ) setAllowReturnTransitionOverlap [androidJvm] open fun setAllowReturnTransitionOverlap (p0: Boolean ) setAnimatingAway [androidJvm] open fun setAnimatingAway (p0: View ) setAnimations [androidJvm] open fun setAnimations (p0: Int , p1: Int , p2: Int , p3: Int ) setAnimator [androidJvm] open fun setAnimator (p0: Animator ) setArguments [androidJvm] open fun setArguments (@ Nullable p0: Bundle ?) setEnterSharedElementCallback [androidJvm] open fun setEnterSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setEnterTransition [androidJvm] open fun setEnterTransition (@ Nullable p0: Any ?) setExitSharedElementCallback [androidJvm] open fun setExitSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setExitTransition [androidJvm] open fun setExitTransition (@ Nullable p0: Any ?) setFocusedView [androidJvm] open fun setFocusedView (p0: View ) setHasOptionsMenu [androidJvm] open fun setHasOptionsMenu (p0: Boolean ) setHideReplaced [androidJvm] open fun setHideReplaced (p0: Boolean ) setInitialSavedState [androidJvm] open fun setInitialSavedState (@ Nullable p0: Fragment.SavedState ?) setMenuVisibility [androidJvm] open fun setMenuVisibility (p0: Boolean ) setNextTransition [androidJvm] open fun setNextTransition (p0: Int ) setOnStartEnterTransitionListener [androidJvm] open fun setOnStartEnterTransitionListener (p0: Fragment.OnStartEnterTransitionListener ) setPopDirection [androidJvm] open fun setPopDirection (p0: Boolean ) setPostOnViewCreatedAlpha [androidJvm] open fun setPostOnViewCreatedAlpha (p0: Float ) setReenterTransition [androidJvm] open fun setReenterTransition (@ Nullable p0: Any ?) setReturnTransition [androidJvm] open fun setReturnTransition (@ Nullable p0: Any ?) setSharedElementEnterTransition [androidJvm] open fun setSharedElementEnterTransition (@ Nullable p0: Any ?) setSharedElementNames [androidJvm] open fun setSharedElementNames (@ Nullable p0: ArrayList < String >?, @ Nullable p1: ArrayList < String >?) setSharedElementReturnTransition [androidJvm] open fun setSharedElementReturnTransition (@ Nullable p0: Any ?) shouldShowRequestPermissionRationale [androidJvm] open fun shouldShowRequestPermissionRationale (@ NonNull p0: String ): Boolean startActivity [androidJvm] open fun startActivity (p0: Intent ) open fun startActivity (p0: Intent , @ Nullable p1: Bundle ?) startPostponedEnterTransition [androidJvm] open fun startPostponedEnterTransition () toString [androidJvm] @ NonNull open override fun toString (): String unregisterForContextMenu [androidJvm] open fun unregisterForContextMenu (@ NonNull p0: View ) Properties \u00b6 Name Summary coroutineContext [androidJvm] open override val coroutineContext : CoroutineContext mAdded [androidJvm] val mAdded : Boolean mAnimationInfo [androidJvm] val mAnimationInfo : Fragment.AnimationInfo mArguments [androidJvm] val mArguments : Bundle mBackStackNesting [androidJvm] val mBackStackNesting : Int mChildFragmentManager [androidJvm] @ NonNull val mChildFragmentManager : FragmentManager mContainer [androidJvm] val mContainer : ViewGroup mContainerId [androidJvm] val mContainerId : Int mDefaultFactory [androidJvm] val mDefaultFactory : ViewModelProvider.Factory mDeferStart [androidJvm] val mDeferStart : Boolean mDetached [androidJvm] val mDetached : Boolean mFragmentId [androidJvm] val mFragmentId : Int mFragmentManager [androidJvm] val mFragmentManager : FragmentManager mFromLayout [androidJvm] val mFromLayout : Boolean mHasMenu [androidJvm] val mHasMenu : Boolean mHidden [androidJvm] val mHidden : Boolean mHiddenChanged [androidJvm] val mHiddenChanged : Boolean mHost [androidJvm] val mHost : FragmentHostCallback <*> mInLayout [androidJvm] val mInLayout : Boolean mIsCreated [androidJvm] val mIsCreated : Boolean mIsNewlyAdded [androidJvm] val mIsNewlyAdded : Boolean mLayoutInflater [androidJvm] val mLayoutInflater : LayoutInflater mLifecycleRegistry [androidJvm] val mLifecycleRegistry : LifecycleRegistry mMaxState [androidJvm] val mMaxState : Lifecycle.State mMenuVisible [androidJvm] val mMenuVisible : Boolean mParentFragment [androidJvm] val mParentFragment : Fragment mPerformedCreateView [androidJvm] val mPerformedCreateView : Boolean mPostponedAlpha [androidJvm] val mPostponedAlpha : Float mPostponedDurationRunnable [androidJvm] val mPostponedDurationRunnable : Runnable mRemoving [androidJvm] val mRemoving : Boolean mRestored [androidJvm] val mRestored : Boolean mRetainInstance [androidJvm] val mRetainInstance : Boolean mRetainInstanceChangedWhileDetached [androidJvm] val mRetainInstanceChangedWhileDetached : Boolean mSavedFragmentState [androidJvm] val mSavedFragmentState : Bundle mSavedStateRegistryController [androidJvm] val mSavedStateRegistryController : SavedStateRegistryController mSavedUserVisibleHint [androidJvm] @ Nullable val mSavedUserVisibleHint : Boolean ? mSavedViewRegistryState [androidJvm] val mSavedViewRegistryState : Bundle mSavedViewState [androidJvm] val mSavedViewState : SparseArray < Parcelable > mState [androidJvm] val mState : Int mTag [androidJvm] val mTag : String mTarget [androidJvm] val mTarget : Fragment mTargetRequestCode [androidJvm] val mTargetRequestCode : Int mTargetWho [androidJvm] val mTargetWho : String mUserVisibleHint [androidJvm] val mUserVisibleHint : Boolean mView [androidJvm] val mView : View mViewLifecycleOwner [androidJvm] @ Nullable val mViewLifecycleOwner : FragmentViewLifecycleOwner ? mViewLifecycleOwnerLiveData [androidJvm] val mViewLifecycleOwnerLiveData : MutableLiveData < LifecycleOwner > mWho [androidJvm] @ NonNull val mWho : String","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-cbz-page-fragment/#r2cbzpagefragment","text":"[androidJvm]\\ class R2CbzPageFragment (publication: Publication , onTapListener: ( Float , Float ) -> Unit ) : Fragment , CoroutineScope","title":"R2CbzPageFragment"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-cbz-page-fragment/#functions","text":"Name Summary callStartTransitionListener [androidJvm] open fun callStartTransitionListener (p0: Boolean ) createFragmentContainer [androidJvm] @ NonNull open fun createFragmentContainer (): FragmentContainer dump [androidJvm] open fun dump (@ NonNull p0: String , @ Nullable p1: FileDescriptor ?, @ NonNull p2: PrintWriter , @ Nullable p3: Array < String >?) equals [androidJvm] operator override fun equals (@ Nullable other: Any ?): Boolean findFragmentByWho [androidJvm] @ Nullable open fun findFragmentByWho (@ NonNull p0: String ): Fragment ? generateActivityResultKey [androidJvm] @ NonNull open fun generateActivityResultKey (): String getActivity [androidJvm] @ Nullable fun getActivity (): FragmentActivity ? getAllowEnterTransitionOverlap [androidJvm] open fun getAllowEnterTransitionOverlap (): Boolean getAllowReturnTransitionOverlap [androidJvm] open fun getAllowReturnTransitionOverlap (): Boolean getAnimatingAway [androidJvm] open fun getAnimatingAway (): View getAnimator [androidJvm] open fun getAnimator (): Animator getArguments [androidJvm] @ Nullable fun getArguments (): Bundle ? getChildFragmentManager [androidJvm] @ NonNull fun getChildFragmentManager (): FragmentManager getContext [androidJvm] @ Nullable open fun getContext (): Context ? getDefaultViewModelProviderFactory [androidJvm] @ NonNull open override fun getDefaultViewModelProviderFactory (): ViewModelProvider.Factory getEnterAnim [androidJvm] open fun getEnterAnim (): Int getEnterTransition [androidJvm] @ Nullable open fun getEnterTransition (): Any ? getEnterTransitionCallback [androidJvm] open fun getEnterTransitionCallback (): SharedElementCallback getExitAnim [androidJvm] open fun getExitAnim (): Int getExitTransition [androidJvm] @ Nullable open fun getExitTransition (): Any ? getExitTransitionCallback [androidJvm] open fun getExitTransitionCallback (): SharedElementCallback getFocusedView [androidJvm] open fun getFocusedView (): View getHost [androidJvm] @ Nullable fun getHost (): Any ? getId [androidJvm] fun getId (): Int getLayoutInflater [androidJvm] @ NonNull fun getLayoutInflater (): LayoutInflater getLifecycle [androidJvm] @ NonNull open override fun getLifecycle (): Lifecycle getNextTransition [androidJvm] open fun getNextTransition (): Int getParentFragment [androidJvm] @ Nullable fun getParentFragment (): Fragment ? getParentFragmentManager [androidJvm] @ NonNull fun getParentFragmentManager (): FragmentManager getPopDirection [androidJvm] open fun getPopDirection (): Boolean getPopEnterAnim [androidJvm] open fun getPopEnterAnim (): Int getPopExitAnim [androidJvm] open fun getPopExitAnim (): Int getPostOnViewCreatedAlpha [androidJvm] open fun getPostOnViewCreatedAlpha (): Float getReenterTransition [androidJvm] @ Nullable open fun getReenterTransition (): Any ? getResources [androidJvm] @ NonNull fun getResources (): Resources getReturnTransition [androidJvm] @ Nullable open fun getReturnTransition (): Any ? getSavedStateRegistry [androidJvm] @ NonNull override fun getSavedStateRegistry (): SavedStateRegistry getSharedElementEnterTransition [androidJvm] @ Nullable open fun getSharedElementEnterTransition (): Any ? getSharedElementReturnTransition [androidJvm] @ Nullable open fun getSharedElementReturnTransition (): Any ? getSharedElementSourceNames [androidJvm] @ NonNull open fun getSharedElementSourceNames (): ArrayList < String > getSharedElementTargetNames [androidJvm] @ NonNull open fun getSharedElementTargetNames (): ArrayList < String > getString [androidJvm] @ NonNull fun getString (@ StringRes p0: Int ): String @ NonNull fun getString (@ StringRes p0: Int , @ Nullable vararg p1: Any ): String getTag [androidJvm] @ Nullable fun getTag (): String ? getText [androidJvm] @ NonNull fun getText (@ StringRes p0: Int ): CharSequence getView [androidJvm] @ Nullable open fun getView (): View ? getViewLifecycleOwner [androidJvm] @ MainThread @ NonNull open fun getViewLifecycleOwner (): LifecycleOwner getViewLifecycleOwnerLiveData [androidJvm] @ NonNull open fun getViewLifecycleOwnerLiveData (): LiveData < LifecycleOwner > getViewModelStore [androidJvm] @ NonNull open override fun getViewModelStore (): ViewModelStore hashCode [androidJvm] override fun hashCode (): Int hasOptionsMenu [androidJvm] fun hasOptionsMenu (): Boolean initState [androidJvm] open fun initState () isAdded [androidJvm] fun isAdded (): Boolean isDetached [androidJvm] fun isDetached (): Boolean isHidden [androidJvm] fun isHidden (): Boolean isHideReplaced [androidJvm] open fun isHideReplaced (): Boolean isInBackStack [androidJvm] fun isInBackStack (): Boolean isInLayout [androidJvm] fun isInLayout (): Boolean isMenuVisible [androidJvm] fun isMenuVisible (): Boolean isPostponed [androidJvm] open fun isPostponed (): Boolean isRemoving [androidJvm] fun isRemoving (): Boolean isRemovingParent [androidJvm] fun isRemovingParent (): Boolean isResumed [androidJvm] fun isResumed (): Boolean isStateSaved [androidJvm] fun isStateSaved (): Boolean isVisible [androidJvm] fun isVisible (): Boolean noteStateNotSaved [androidJvm] open fun noteStateNotSaved () onAttach [androidJvm] @ MainThread @ CallSuper open fun onAttach (@ NonNull p0: Context ) onConfigurationChanged [androidJvm] @ CallSuper open override fun onConfigurationChanged (@ NonNull p0: Configuration ) onContextItemSelected [androidJvm] @ MainThread open fun onContextItemSelected (@ NonNull p0: MenuItem ): Boolean onCreate [androidJvm] @ MainThread @ CallSuper open fun onCreate (@ Nullable p0: Bundle ?) onCreateAnimation [androidJvm] @ MainThread @ Nullable open fun onCreateAnimation (p0: Int , p1: Boolean , p2: Int ): Animation ? onCreateAnimator [androidJvm] @ MainThread @ Nullable open fun onCreateAnimator (p0: Int , p1: Boolean , p2: Int ): Animator ? onCreateContextMenu [androidJvm] @ MainThread open override fun onCreateContextMenu (@ NonNull p0: ContextMenu , @ NonNull p1: View , @ Nullable p2: ContextMenu.ContextMenuInfo ?) onCreateOptionsMenu [androidJvm] @ MainThread open fun onCreateOptionsMenu (@ NonNull p0: Menu , @ NonNull p1: MenuInflater ) onCreateView [androidJvm] open override fun onCreateView (inflater: LayoutInflater , container: ViewGroup ?, savedInstanceState: Bundle ?): View ? onDestroy [androidJvm] @ MainThread @ CallSuper open fun onDestroy () onDestroyOptionsMenu [androidJvm] @ MainThread open fun onDestroyOptionsMenu () onDestroyView [androidJvm] open override fun onDestroyView () onDetach [androidJvm] @ MainThread @ CallSuper open fun onDetach () onGetLayoutInflater [androidJvm] @ NonNull open fun onGetLayoutInflater (@ Nullable p0: Bundle ?): LayoutInflater onHiddenChanged [androidJvm] @ MainThread open fun onHiddenChanged (p0: Boolean ) onInflate [androidJvm] @ UiThread @ CallSuper open fun onInflate (@ NonNull p0: Context , @ NonNull p1: AttributeSet , @ Nullable p2: Bundle ?) onLowMemory [androidJvm] @ MainThread @ CallSuper open override fun onLowMemory () onMultiWindowModeChanged [androidJvm] open fun onMultiWindowModeChanged (p0: Boolean ) onOptionsItemSelected [androidJvm] @ MainThread open fun onOptionsItemSelected (@ NonNull p0: MenuItem ): Boolean onOptionsMenuClosed [androidJvm] @ MainThread open fun onOptionsMenuClosed (@ NonNull p0: Menu ) onPause [androidJvm] @ MainThread @ CallSuper open fun onPause () onPictureInPictureModeChanged [androidJvm] open fun onPictureInPictureModeChanged (p0: Boolean ) onPrepareOptionsMenu [androidJvm] @ MainThread open fun onPrepareOptionsMenu (@ NonNull p0: Menu ) onPrimaryNavigationFragmentChanged [androidJvm] @ MainThread open fun onPrimaryNavigationFragmentChanged (p0: Boolean ) onResume [androidJvm] @ MainThread @ CallSuper open fun onResume () onSaveInstanceState [androidJvm] @ MainThread open fun onSaveInstanceState (@ NonNull p0: Bundle ) onStart [androidJvm] @ MainThread @ CallSuper open fun onStart () onStop [androidJvm] @ MainThread @ CallSuper open fun onStop () onViewCreated [androidJvm] @ MainThread open fun onViewCreated (@ NonNull p0: View , @ Nullable p1: Bundle ?) onViewStateRestored [androidJvm] @ MainThread @ CallSuper open fun onViewStateRestored (@ Nullable p0: Bundle ?) performActivityCreated [androidJvm] open fun performActivityCreated (p0: Bundle ) performAttach [androidJvm] open fun performAttach () performConfigurationChanged [androidJvm] open fun performConfigurationChanged (@ NonNull p0: Configuration ) performContextItemSelected [androidJvm] open fun performContextItemSelected (@ NonNull p0: MenuItem ): Boolean performCreate [androidJvm] open fun performCreate (p0: Bundle ) performCreateOptionsMenu [androidJvm] open fun performCreateOptionsMenu (@ NonNull p0: Menu , @ NonNull p1: MenuInflater ): Boolean performCreateView [androidJvm] open fun performCreateView (@ NonNull p0: LayoutInflater , @ Nullable p1: ViewGroup ?, @ Nullable p2: Bundle ?) performDestroy [androidJvm] open fun performDestroy () performDestroyView [androidJvm] open fun performDestroyView () performDetach [androidJvm] open fun performDetach () performGetLayoutInflater [androidJvm] @ NonNull open fun performGetLayoutInflater (@ Nullable p0: Bundle ?): LayoutInflater performLowMemory [androidJvm] open fun performLowMemory () performMultiWindowModeChanged [androidJvm] open fun performMultiWindowModeChanged (p0: Boolean ) performOptionsItemSelected [androidJvm] open fun performOptionsItemSelected (@ NonNull p0: MenuItem ): Boolean performOptionsMenuClosed [androidJvm] open fun performOptionsMenuClosed (@ NonNull p0: Menu ) performPause [androidJvm] open fun performPause () performPictureInPictureModeChanged [androidJvm] open fun performPictureInPictureModeChanged (p0: Boolean ) performPrepareOptionsMenu [androidJvm] open fun performPrepareOptionsMenu (@ NonNull p0: Menu ): Boolean performPrimaryNavigationFragmentChanged [androidJvm] open fun performPrimaryNavigationFragmentChanged () performResume [androidJvm] open fun performResume () performSaveInstanceState [androidJvm] open fun performSaveInstanceState (p0: Bundle ) performStart [androidJvm] open fun performStart () performStop [androidJvm] open fun performStop () performViewCreated [androidJvm] open fun performViewCreated () postponeEnterTransition [androidJvm] open fun postponeEnterTransition () fun postponeEnterTransition (p0: Long , @ NonNull p1: TimeUnit ) registerForActivityResult [androidJvm] @ MainThread @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull p0: ActivityResultContract < I , O >, @ NonNull p1: ActivityResultCallback < O >): ActivityResultLauncher < I > @ MainThread @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull p0: ActivityResultContract < I , O >, @ NonNull p1: ActivityResultRegistry , @ NonNull p2: ActivityResultCallback < O >): ActivityResultLauncher < I > registerForContextMenu [androidJvm] open fun registerForContextMenu (@ NonNull p0: View ) requireActivity [androidJvm] @ NonNull fun requireActivity (): FragmentActivity requireArguments [androidJvm] @ NonNull fun requireArguments (): Bundle requireContext [androidJvm] @ NonNull fun requireContext (): Context requireHost [androidJvm] @ NonNull fun requireHost (): Any requireParentFragment [androidJvm] @ NonNull fun requireParentFragment (): Fragment requireView [androidJvm] @ NonNull fun requireView (): View restoreChildFragmentState [androidJvm] open fun restoreChildFragmentState (@ Nullable p0: Bundle ?) restoreViewState [androidJvm] fun restoreViewState (p0: Bundle ) setAllowEnterTransitionOverlap [androidJvm] open fun setAllowEnterTransitionOverlap (p0: Boolean ) setAllowReturnTransitionOverlap [androidJvm] open fun setAllowReturnTransitionOverlap (p0: Boolean ) setAnimatingAway [androidJvm] open fun setAnimatingAway (p0: View ) setAnimations [androidJvm] open fun setAnimations (p0: Int , p1: Int , p2: Int , p3: Int ) setAnimator [androidJvm] open fun setAnimator (p0: Animator ) setArguments [androidJvm] open fun setArguments (@ Nullable p0: Bundle ?) setEnterSharedElementCallback [androidJvm] open fun setEnterSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setEnterTransition [androidJvm] open fun setEnterTransition (@ Nullable p0: Any ?) setExitSharedElementCallback [androidJvm] open fun setExitSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setExitTransition [androidJvm] open fun setExitTransition (@ Nullable p0: Any ?) setFocusedView [androidJvm] open fun setFocusedView (p0: View ) setHasOptionsMenu [androidJvm] open fun setHasOptionsMenu (p0: Boolean ) setHideReplaced [androidJvm] open fun setHideReplaced (p0: Boolean ) setInitialSavedState [androidJvm] open fun setInitialSavedState (@ Nullable p0: Fragment.SavedState ?) setMenuVisibility [androidJvm] open fun setMenuVisibility (p0: Boolean ) setNextTransition [androidJvm] open fun setNextTransition (p0: Int ) setOnStartEnterTransitionListener [androidJvm] open fun setOnStartEnterTransitionListener (p0: Fragment.OnStartEnterTransitionListener ) setPopDirection [androidJvm] open fun setPopDirection (p0: Boolean ) setPostOnViewCreatedAlpha [androidJvm] open fun setPostOnViewCreatedAlpha (p0: Float ) setReenterTransition [androidJvm] open fun setReenterTransition (@ Nullable p0: Any ?) setReturnTransition [androidJvm] open fun setReturnTransition (@ Nullable p0: Any ?) setSharedElementEnterTransition [androidJvm] open fun setSharedElementEnterTransition (@ Nullable p0: Any ?) setSharedElementNames [androidJvm] open fun setSharedElementNames (@ Nullable p0: ArrayList < String >?, @ Nullable p1: ArrayList < String >?) setSharedElementReturnTransition [androidJvm] open fun setSharedElementReturnTransition (@ Nullable p0: Any ?) shouldShowRequestPermissionRationale [androidJvm] open fun shouldShowRequestPermissionRationale (@ NonNull p0: String ): Boolean startActivity [androidJvm] open fun startActivity (p0: Intent ) open fun startActivity (p0: Intent , @ Nullable p1: Bundle ?) startPostponedEnterTransition [androidJvm] open fun startPostponedEnterTransition () toString [androidJvm] @ NonNull open override fun toString (): String unregisterForContextMenu [androidJvm] open fun unregisterForContextMenu (@ NonNull p0: View )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-cbz-page-fragment/#properties","text":"Name Summary coroutineContext [androidJvm] open override val coroutineContext : CoroutineContext mAdded [androidJvm] val mAdded : Boolean mAnimationInfo [androidJvm] val mAnimationInfo : Fragment.AnimationInfo mArguments [androidJvm] val mArguments : Bundle mBackStackNesting [androidJvm] val mBackStackNesting : Int mChildFragmentManager [androidJvm] @ NonNull val mChildFragmentManager : FragmentManager mContainer [androidJvm] val mContainer : ViewGroup mContainerId [androidJvm] val mContainerId : Int mDefaultFactory [androidJvm] val mDefaultFactory : ViewModelProvider.Factory mDeferStart [androidJvm] val mDeferStart : Boolean mDetached [androidJvm] val mDetached : Boolean mFragmentId [androidJvm] val mFragmentId : Int mFragmentManager [androidJvm] val mFragmentManager : FragmentManager mFromLayout [androidJvm] val mFromLayout : Boolean mHasMenu [androidJvm] val mHasMenu : Boolean mHidden [androidJvm] val mHidden : Boolean mHiddenChanged [androidJvm] val mHiddenChanged : Boolean mHost [androidJvm] val mHost : FragmentHostCallback <*> mInLayout [androidJvm] val mInLayout : Boolean mIsCreated [androidJvm] val mIsCreated : Boolean mIsNewlyAdded [androidJvm] val mIsNewlyAdded : Boolean mLayoutInflater [androidJvm] val mLayoutInflater : LayoutInflater mLifecycleRegistry [androidJvm] val mLifecycleRegistry : LifecycleRegistry mMaxState [androidJvm] val mMaxState : Lifecycle.State mMenuVisible [androidJvm] val mMenuVisible : Boolean mParentFragment [androidJvm] val mParentFragment : Fragment mPerformedCreateView [androidJvm] val mPerformedCreateView : Boolean mPostponedAlpha [androidJvm] val mPostponedAlpha : Float mPostponedDurationRunnable [androidJvm] val mPostponedDurationRunnable : Runnable mRemoving [androidJvm] val mRemoving : Boolean mRestored [androidJvm] val mRestored : Boolean mRetainInstance [androidJvm] val mRetainInstance : Boolean mRetainInstanceChangedWhileDetached [androidJvm] val mRetainInstanceChangedWhileDetached : Boolean mSavedFragmentState [androidJvm] val mSavedFragmentState : Bundle mSavedStateRegistryController [androidJvm] val mSavedStateRegistryController : SavedStateRegistryController mSavedUserVisibleHint [androidJvm] @ Nullable val mSavedUserVisibleHint : Boolean ? mSavedViewRegistryState [androidJvm] val mSavedViewRegistryState : Bundle mSavedViewState [androidJvm] val mSavedViewState : SparseArray < Parcelable > mState [androidJvm] val mState : Int mTag [androidJvm] val mTag : String mTarget [androidJvm] val mTarget : Fragment mTargetRequestCode [androidJvm] val mTargetRequestCode : Int mTargetWho [androidJvm] val mTargetWho : String mUserVisibleHint [androidJvm] val mUserVisibleHint : Boolean mView [androidJvm] val mView : View mViewLifecycleOwner [androidJvm] @ Nullable val mViewLifecycleOwner : FragmentViewLifecycleOwner ? mViewLifecycleOwnerLiveData [androidJvm] val mViewLifecycleOwnerLiveData : MutableLiveData < LifecycleOwner > mWho [androidJvm] @ NonNull val mWho : String","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-cbz-page-fragment/-r2-cbz-page-fragment/","text":"// navigator / org.readium.r2.navigator.pager / R2CbzPageFragment / R2CbzPageFragment R2CbzPageFragment \u00b6 [androidJvm]\\ fun R2CbzPageFragment (publication: Publication , onTapListener: ( Float , Float ) -> Unit )","title":" r2 cbz page fragment"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-cbz-page-fragment/-r2-cbz-page-fragment/#r2cbzpagefragment","text":"[androidJvm]\\ fun R2CbzPageFragment (publication: Publication , onTapListener: ( Float , Float ) -> Unit )","title":"R2CbzPageFragment"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-cbz-page-fragment/coroutine-context/","text":"// navigator / org.readium.r2.navigator.pager / R2CbzPageFragment / coroutineContext coroutineContext \u00b6 [androidJvm]\\ open override val coroutineContext : CoroutineContext","title":"Coroutine context"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-cbz-page-fragment/coroutine-context/#coroutinecontext","text":"[androidJvm]\\ open override val coroutineContext : CoroutineContext","title":"coroutineContext"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-cbz-page-fragment/on-create-view/","text":"// navigator / org.readium.r2.navigator.pager / R2CbzPageFragment / onCreateView onCreateView \u00b6 [androidJvm]\\ open override fun onCreateView (inflater: LayoutInflater , container: ViewGroup ?, savedInstanceState: Bundle ?): View ?","title":"On create view"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-cbz-page-fragment/on-create-view/#oncreateview","text":"[androidJvm]\\ open override fun onCreateView (inflater: LayoutInflater , container: ViewGroup ?, savedInstanceState: Bundle ?): View ?","title":"onCreateView"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-cbz-page-fragment/on-destroy-view/","text":"// navigator / org.readium.r2.navigator.pager / R2CbzPageFragment / onDestroyView onDestroyView \u00b6 [androidJvm]\\ open override fun onDestroyView ()","title":"On destroy view"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-cbz-page-fragment/on-destroy-view/#ondestroyview","text":"[androidJvm]\\ open override fun onDestroyView ()","title":"onDestroyView"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-epub-page-fragment/","text":"// navigator / org.readium.r2.navigator.pager / R2EpubPageFragment R2EpubPageFragment \u00b6 [androidJvm]\\ class R2EpubPageFragment : Fragment Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary callStartTransitionListener [androidJvm] open fun callStartTransitionListener (p0: Boolean ) createFragmentContainer [androidJvm] @ NonNull open fun createFragmentContainer (): FragmentContainer dump [androidJvm] open fun dump (@ NonNull p0: String , @ Nullable p1: FileDescriptor ?, @ NonNull p2: PrintWriter , @ Nullable p3: Array < String >?) equals [androidJvm] operator override fun equals (@ Nullable other: Any ?): Boolean findFragmentByWho [androidJvm] @ Nullable open fun findFragmentByWho (@ NonNull p0: String ): Fragment ? generateActivityResultKey [androidJvm] @ NonNull open fun generateActivityResultKey (): String getActivity [androidJvm] @ Nullable fun getActivity (): FragmentActivity ? getAllowEnterTransitionOverlap [androidJvm] open fun getAllowEnterTransitionOverlap (): Boolean getAllowReturnTransitionOverlap [androidJvm] open fun getAllowReturnTransitionOverlap (): Boolean getAnimatingAway [androidJvm] open fun getAnimatingAway (): View getAnimator [androidJvm] open fun getAnimator (): Animator getArguments [androidJvm] @ Nullable fun getArguments (): Bundle ? getChildFragmentManager [androidJvm] @ NonNull fun getChildFragmentManager (): FragmentManager getContext [androidJvm] @ Nullable open fun getContext (): Context ? getDefaultViewModelProviderFactory [androidJvm] @ NonNull open override fun getDefaultViewModelProviderFactory (): ViewModelProvider.Factory getEnterAnim [androidJvm] open fun getEnterAnim (): Int getEnterTransition [androidJvm] @ Nullable open fun getEnterTransition (): Any ? getEnterTransitionCallback [androidJvm] open fun getEnterTransitionCallback (): SharedElementCallback getExitAnim [androidJvm] open fun getExitAnim (): Int getExitTransition [androidJvm] @ Nullable open fun getExitTransition (): Any ? getExitTransitionCallback [androidJvm] open fun getExitTransitionCallback (): SharedElementCallback getFocusedView [androidJvm] open fun getFocusedView (): View getHost [androidJvm] @ Nullable fun getHost (): Any ? getId [androidJvm] fun getId (): Int getLayoutInflater [androidJvm] @ NonNull fun getLayoutInflater (): LayoutInflater getLifecycle [androidJvm] @ NonNull open override fun getLifecycle (): Lifecycle getNextTransition [androidJvm] open fun getNextTransition (): Int getParentFragment [androidJvm] @ Nullable fun getParentFragment (): Fragment ? getParentFragmentManager [androidJvm] @ NonNull fun getParentFragmentManager (): FragmentManager getPopDirection [androidJvm] open fun getPopDirection (): Boolean getPopEnterAnim [androidJvm] open fun getPopEnterAnim (): Int getPopExitAnim [androidJvm] open fun getPopExitAnim (): Int getPostOnViewCreatedAlpha [androidJvm] open fun getPostOnViewCreatedAlpha (): Float getReenterTransition [androidJvm] @ Nullable open fun getReenterTransition (): Any ? getResources [androidJvm] @ NonNull fun getResources (): Resources getReturnTransition [androidJvm] @ Nullable open fun getReturnTransition (): Any ? getSavedStateRegistry [androidJvm] @ NonNull override fun getSavedStateRegistry (): SavedStateRegistry getSharedElementEnterTransition [androidJvm] @ Nullable open fun getSharedElementEnterTransition (): Any ? getSharedElementReturnTransition [androidJvm] @ Nullable open fun getSharedElementReturnTransition (): Any ? getSharedElementSourceNames [androidJvm] @ NonNull open fun getSharedElementSourceNames (): ArrayList < String > getSharedElementTargetNames [androidJvm] @ NonNull open fun getSharedElementTargetNames (): ArrayList < String > getString [androidJvm] @ NonNull fun getString (@ StringRes p0: Int ): String @ NonNull fun getString (@ StringRes p0: Int , @ Nullable vararg p1: Any ): String getTag [androidJvm] @ Nullable fun getTag (): String ? getText [androidJvm] @ NonNull fun getText (@ StringRes p0: Int ): CharSequence getView [androidJvm] @ Nullable open fun getView (): View ? getViewLifecycleOwner [androidJvm] @ MainThread @ NonNull open fun getViewLifecycleOwner (): LifecycleOwner getViewLifecycleOwnerLiveData [androidJvm] @ NonNull open fun getViewLifecycleOwnerLiveData (): LiveData < LifecycleOwner > getViewModelStore [androidJvm] @ NonNull open override fun getViewModelStore (): ViewModelStore hashCode [androidJvm] override fun hashCode (): Int hasOptionsMenu [androidJvm] fun hasOptionsMenu (): Boolean initState [androidJvm] open fun initState () isAdded [androidJvm] fun isAdded (): Boolean isDetached [androidJvm] fun isDetached (): Boolean isHidden [androidJvm] fun isHidden (): Boolean isHideReplaced [androidJvm] open fun isHideReplaced (): Boolean isInBackStack [androidJvm] fun isInBackStack (): Boolean isInLayout [androidJvm] fun isInLayout (): Boolean isMenuVisible [androidJvm] fun isMenuVisible (): Boolean isPostponed [androidJvm] open fun isPostponed (): Boolean isRemoving [androidJvm] fun isRemoving (): Boolean isRemovingParent [androidJvm] fun isRemovingParent (): Boolean isResumed [androidJvm] fun isResumed (): Boolean isStateSaved [androidJvm] fun isStateSaved (): Boolean isVisible [androidJvm] fun isVisible (): Boolean noteStateNotSaved [androidJvm] open fun noteStateNotSaved () onAttach [androidJvm] @ MainThread @ CallSuper open fun onAttach (@ NonNull p0: Context ) onConfigurationChanged [androidJvm] @ CallSuper open override fun onConfigurationChanged (@ NonNull p0: Configuration ) onContextItemSelected [androidJvm] @ MainThread open fun onContextItemSelected (@ NonNull p0: MenuItem ): Boolean onCreate [androidJvm] @ MainThread @ CallSuper open fun onCreate (@ Nullable p0: Bundle ?) onCreateAnimation [androidJvm] @ MainThread @ Nullable open fun onCreateAnimation (p0: Int , p1: Boolean , p2: Int ): Animation ? onCreateAnimator [androidJvm] @ MainThread @ Nullable open fun onCreateAnimator (p0: Int , p1: Boolean , p2: Int ): Animator ? onCreateContextMenu [androidJvm] @ MainThread open override fun onCreateContextMenu (@ NonNull p0: ContextMenu , @ NonNull p1: View , @ Nullable p2: ContextMenu.ContextMenuInfo ?) onCreateOptionsMenu [androidJvm] @ MainThread open fun onCreateOptionsMenu (@ NonNull p0: Menu , @ NonNull p1: MenuInflater ) onCreateView [androidJvm] open override fun onCreateView (inflater: LayoutInflater , container: ViewGroup ?, savedInstanceState: Bundle ?): View ? onDestroy [androidJvm] @ MainThread @ CallSuper open fun onDestroy () onDestroyOptionsMenu [androidJvm] @ MainThread open fun onDestroyOptionsMenu () onDestroyView [androidJvm] open override fun onDestroyView () onDetach [androidJvm] open override fun onDetach () onGetLayoutInflater [androidJvm] @ NonNull open fun onGetLayoutInflater (@ Nullable p0: Bundle ?): LayoutInflater onHiddenChanged [androidJvm] @ MainThread open fun onHiddenChanged (p0: Boolean ) onInflate [androidJvm] @ UiThread @ CallSuper open fun onInflate (@ NonNull p0: Context , @ NonNull p1: AttributeSet , @ Nullable p2: Bundle ?) onLowMemory [androidJvm] @ MainThread @ CallSuper open override fun onLowMemory () onMultiWindowModeChanged [androidJvm] open fun onMultiWindowModeChanged (p0: Boolean ) onOptionsItemSelected [androidJvm] @ MainThread open fun onOptionsItemSelected (@ NonNull p0: MenuItem ): Boolean onOptionsMenuClosed [androidJvm] @ MainThread open fun onOptionsMenuClosed (@ NonNull p0: Menu ) onPause [androidJvm] @ MainThread @ CallSuper open fun onPause () onPictureInPictureModeChanged [androidJvm] open fun onPictureInPictureModeChanged (p0: Boolean ) onPrepareOptionsMenu [androidJvm] @ MainThread open fun onPrepareOptionsMenu (@ NonNull p0: Menu ) onPrimaryNavigationFragmentChanged [androidJvm] @ MainThread open fun onPrimaryNavigationFragmentChanged (p0: Boolean ) onResume [androidJvm] @ MainThread @ CallSuper open fun onResume () onSaveInstanceState [androidJvm] @ MainThread open fun onSaveInstanceState (@ NonNull p0: Bundle ) onStart [androidJvm] @ MainThread @ CallSuper open fun onStart () onStop [androidJvm] @ MainThread @ CallSuper open fun onStop () onViewCreated [androidJvm] @ MainThread open fun onViewCreated (@ NonNull p0: View , @ Nullable p1: Bundle ?) onViewStateRestored [androidJvm] @ MainThread @ CallSuper open fun onViewStateRestored (@ Nullable p0: Bundle ?) performActivityCreated [androidJvm] open fun performActivityCreated (p0: Bundle ) performAttach [androidJvm] open fun performAttach () performConfigurationChanged [androidJvm] open fun performConfigurationChanged (@ NonNull p0: Configuration ) performContextItemSelected [androidJvm] open fun performContextItemSelected (@ NonNull p0: MenuItem ): Boolean performCreate [androidJvm] open fun performCreate (p0: Bundle ) performCreateOptionsMenu [androidJvm] open fun performCreateOptionsMenu (@ NonNull p0: Menu , @ NonNull p1: MenuInflater ): Boolean performCreateView [androidJvm] open fun performCreateView (@ NonNull p0: LayoutInflater , @ Nullable p1: ViewGroup ?, @ Nullable p2: Bundle ?) performDestroy [androidJvm] open fun performDestroy () performDestroyView [androidJvm] open fun performDestroyView () performDetach [androidJvm] open fun performDetach () performGetLayoutInflater [androidJvm] @ NonNull open fun performGetLayoutInflater (@ Nullable p0: Bundle ?): LayoutInflater performLowMemory [androidJvm] open fun performLowMemory () performMultiWindowModeChanged [androidJvm] open fun performMultiWindowModeChanged (p0: Boolean ) performOptionsItemSelected [androidJvm] open fun performOptionsItemSelected (@ NonNull p0: MenuItem ): Boolean performOptionsMenuClosed [androidJvm] open fun performOptionsMenuClosed (@ NonNull p0: Menu ) performPause [androidJvm] open fun performPause () performPictureInPictureModeChanged [androidJvm] open fun performPictureInPictureModeChanged (p0: Boolean ) performPrepareOptionsMenu [androidJvm] open fun performPrepareOptionsMenu (@ NonNull p0: Menu ): Boolean performPrimaryNavigationFragmentChanged [androidJvm] open fun performPrimaryNavigationFragmentChanged () performResume [androidJvm] open fun performResume () performSaveInstanceState [androidJvm] open fun performSaveInstanceState (p0: Bundle ) performStart [androidJvm] open fun performStart () performStop [androidJvm] open fun performStop () performViewCreated [androidJvm] open fun performViewCreated () postponeEnterTransition [androidJvm] open fun postponeEnterTransition () fun postponeEnterTransition (p0: Long , @ NonNull p1: TimeUnit ) registerForActivityResult [androidJvm] @ MainThread @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull p0: ActivityResultContract < I , O >, @ NonNull p1: ActivityResultCallback < O >): ActivityResultLauncher < I > @ MainThread @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull p0: ActivityResultContract < I , O >, @ NonNull p1: ActivityResultRegistry , @ NonNull p2: ActivityResultCallback < O >): ActivityResultLauncher < I > registerForContextMenu [androidJvm] open fun registerForContextMenu (@ NonNull p0: View ) requireActivity [androidJvm] @ NonNull fun requireActivity (): FragmentActivity requireArguments [androidJvm] @ NonNull fun requireArguments (): Bundle requireContext [androidJvm] @ NonNull fun requireContext (): Context requireHost [androidJvm] @ NonNull fun requireHost (): Any requireParentFragment [androidJvm] @ NonNull fun requireParentFragment (): Fragment requireView [androidJvm] @ NonNull fun requireView (): View restoreChildFragmentState [androidJvm] open fun restoreChildFragmentState (@ Nullable p0: Bundle ?) restoreViewState [androidJvm] fun restoreViewState (p0: Bundle ) setAllowEnterTransitionOverlap [androidJvm] open fun setAllowEnterTransitionOverlap (p0: Boolean ) setAllowReturnTransitionOverlap [androidJvm] open fun setAllowReturnTransitionOverlap (p0: Boolean ) setAnimatingAway [androidJvm] open fun setAnimatingAway (p0: View ) setAnimations [androidJvm] open fun setAnimations (p0: Int , p1: Int , p2: Int , p3: Int ) setAnimator [androidJvm] open fun setAnimator (p0: Animator ) setArguments [androidJvm] open fun setArguments (@ Nullable p0: Bundle ?) setEnterSharedElementCallback [androidJvm] open fun setEnterSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setEnterTransition [androidJvm] open fun setEnterTransition (@ Nullable p0: Any ?) setExitSharedElementCallback [androidJvm] open fun setExitSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setExitTransition [androidJvm] open fun setExitTransition (@ Nullable p0: Any ?) setFocusedView [androidJvm] open fun setFocusedView (p0: View ) setHasOptionsMenu [androidJvm] open fun setHasOptionsMenu (p0: Boolean ) setHideReplaced [androidJvm] open fun setHideReplaced (p0: Boolean ) setInitialSavedState [androidJvm] open fun setInitialSavedState (@ Nullable p0: Fragment.SavedState ?) setMenuVisibility [androidJvm] open fun setMenuVisibility (p0: Boolean ) setNextTransition [androidJvm] open fun setNextTransition (p0: Int ) setOnStartEnterTransitionListener [androidJvm] open fun setOnStartEnterTransitionListener (p0: Fragment.OnStartEnterTransitionListener ) setPopDirection [androidJvm] open fun setPopDirection (p0: Boolean ) setPostOnViewCreatedAlpha [androidJvm] open fun setPostOnViewCreatedAlpha (p0: Float ) setReenterTransition [androidJvm] open fun setReenterTransition (@ Nullable p0: Any ?) setReturnTransition [androidJvm] open fun setReturnTransition (@ Nullable p0: Any ?) setSharedElementEnterTransition [androidJvm] open fun setSharedElementEnterTransition (@ Nullable p0: Any ?) setSharedElementNames [androidJvm] open fun setSharedElementNames (@ Nullable p0: ArrayList < String >?, @ Nullable p1: ArrayList < String >?) setSharedElementReturnTransition [androidJvm] open fun setSharedElementReturnTransition (@ Nullable p0: Any ?) shouldShowRequestPermissionRationale [androidJvm] open fun shouldShowRequestPermissionRationale (@ NonNull p0: String ): Boolean startActivity [androidJvm] open fun startActivity (p0: Intent ) open fun startActivity (p0: Intent , @ Nullable p1: Bundle ?) startPostponedEnterTransition [androidJvm] open fun startPostponedEnterTransition () toString [androidJvm] @ NonNull open override fun toString (): String unregisterForContextMenu [androidJvm] open fun unregisterForContextMenu (@ NonNull p0: View ) Properties \u00b6 Name Summary mAdded [androidJvm] val mAdded : Boolean mAnimationInfo [androidJvm] val mAnimationInfo : Fragment.AnimationInfo mArguments [androidJvm] val mArguments : Bundle mBackStackNesting [androidJvm] val mBackStackNesting : Int mChildFragmentManager [androidJvm] @ NonNull val mChildFragmentManager : FragmentManager mContainer [androidJvm] val mContainer : ViewGroup mContainerId [androidJvm] val mContainerId : Int mDefaultFactory [androidJvm] val mDefaultFactory : ViewModelProvider.Factory mDeferStart [androidJvm] val mDeferStart : Boolean mDetached [androidJvm] val mDetached : Boolean mFragmentId [androidJvm] val mFragmentId : Int mFragmentManager [androidJvm] val mFragmentManager : FragmentManager mFromLayout [androidJvm] val mFromLayout : Boolean mHasMenu [androidJvm] val mHasMenu : Boolean mHidden [androidJvm] val mHidden : Boolean mHiddenChanged [androidJvm] val mHiddenChanged : Boolean mHost [androidJvm] val mHost : FragmentHostCallback <*> mInLayout [androidJvm] val mInLayout : Boolean mIsCreated [androidJvm] val mIsCreated : Boolean mIsNewlyAdded [androidJvm] val mIsNewlyAdded : Boolean mLayoutInflater [androidJvm] val mLayoutInflater : LayoutInflater mLifecycleRegistry [androidJvm] val mLifecycleRegistry : LifecycleRegistry mMaxState [androidJvm] val mMaxState : Lifecycle.State mMenuVisible [androidJvm] val mMenuVisible : Boolean mParentFragment [androidJvm] val mParentFragment : Fragment mPerformedCreateView [androidJvm] val mPerformedCreateView : Boolean mPostponedAlpha [androidJvm] val mPostponedAlpha : Float mPostponedDurationRunnable [androidJvm] val mPostponedDurationRunnable : Runnable mRemoving [androidJvm] val mRemoving : Boolean mRestored [androidJvm] val mRestored : Boolean mRetainInstance [androidJvm] val mRetainInstance : Boolean mRetainInstanceChangedWhileDetached [androidJvm] val mRetainInstanceChangedWhileDetached : Boolean mSavedFragmentState [androidJvm] val mSavedFragmentState : Bundle mSavedStateRegistryController [androidJvm] val mSavedStateRegistryController : SavedStateRegistryController mSavedUserVisibleHint [androidJvm] @ Nullable val mSavedUserVisibleHint : Boolean ? mSavedViewRegistryState [androidJvm] val mSavedViewRegistryState : Bundle mSavedViewState [androidJvm] val mSavedViewState : SparseArray < Parcelable > mState [androidJvm] val mState : Int mTag [androidJvm] val mTag : String mTarget [androidJvm] val mTarget : Fragment mTargetRequestCode [androidJvm] val mTargetRequestCode : Int mTargetWho [androidJvm] val mTargetWho : String mUserVisibleHint [androidJvm] val mUserVisibleHint : Boolean mView [androidJvm] val mView : View mViewLifecycleOwner [androidJvm] @ Nullable val mViewLifecycleOwner : FragmentViewLifecycleOwner ? mViewLifecycleOwnerLiveData [androidJvm] val mViewLifecycleOwnerLiveData : MutableLiveData < LifecycleOwner > mWho [androidJvm] @ NonNull val mWho : String webView [androidJvm] var webView : R2WebView ? = null","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-epub-page-fragment/#r2epubpagefragment","text":"[androidJvm]\\ class R2EpubPageFragment : Fragment","title":"R2EpubPageFragment"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-epub-page-fragment/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-epub-page-fragment/#functions","text":"Name Summary callStartTransitionListener [androidJvm] open fun callStartTransitionListener (p0: Boolean ) createFragmentContainer [androidJvm] @ NonNull open fun createFragmentContainer (): FragmentContainer dump [androidJvm] open fun dump (@ NonNull p0: String , @ Nullable p1: FileDescriptor ?, @ NonNull p2: PrintWriter , @ Nullable p3: Array < String >?) equals [androidJvm] operator override fun equals (@ Nullable other: Any ?): Boolean findFragmentByWho [androidJvm] @ Nullable open fun findFragmentByWho (@ NonNull p0: String ): Fragment ? generateActivityResultKey [androidJvm] @ NonNull open fun generateActivityResultKey (): String getActivity [androidJvm] @ Nullable fun getActivity (): FragmentActivity ? getAllowEnterTransitionOverlap [androidJvm] open fun getAllowEnterTransitionOverlap (): Boolean getAllowReturnTransitionOverlap [androidJvm] open fun getAllowReturnTransitionOverlap (): Boolean getAnimatingAway [androidJvm] open fun getAnimatingAway (): View getAnimator [androidJvm] open fun getAnimator (): Animator getArguments [androidJvm] @ Nullable fun getArguments (): Bundle ? getChildFragmentManager [androidJvm] @ NonNull fun getChildFragmentManager (): FragmentManager getContext [androidJvm] @ Nullable open fun getContext (): Context ? getDefaultViewModelProviderFactory [androidJvm] @ NonNull open override fun getDefaultViewModelProviderFactory (): ViewModelProvider.Factory getEnterAnim [androidJvm] open fun getEnterAnim (): Int getEnterTransition [androidJvm] @ Nullable open fun getEnterTransition (): Any ? getEnterTransitionCallback [androidJvm] open fun getEnterTransitionCallback (): SharedElementCallback getExitAnim [androidJvm] open fun getExitAnim (): Int getExitTransition [androidJvm] @ Nullable open fun getExitTransition (): Any ? getExitTransitionCallback [androidJvm] open fun getExitTransitionCallback (): SharedElementCallback getFocusedView [androidJvm] open fun getFocusedView (): View getHost [androidJvm] @ Nullable fun getHost (): Any ? getId [androidJvm] fun getId (): Int getLayoutInflater [androidJvm] @ NonNull fun getLayoutInflater (): LayoutInflater getLifecycle [androidJvm] @ NonNull open override fun getLifecycle (): Lifecycle getNextTransition [androidJvm] open fun getNextTransition (): Int getParentFragment [androidJvm] @ Nullable fun getParentFragment (): Fragment ? getParentFragmentManager [androidJvm] @ NonNull fun getParentFragmentManager (): FragmentManager getPopDirection [androidJvm] open fun getPopDirection (): Boolean getPopEnterAnim [androidJvm] open fun getPopEnterAnim (): Int getPopExitAnim [androidJvm] open fun getPopExitAnim (): Int getPostOnViewCreatedAlpha [androidJvm] open fun getPostOnViewCreatedAlpha (): Float getReenterTransition [androidJvm] @ Nullable open fun getReenterTransition (): Any ? getResources [androidJvm] @ NonNull fun getResources (): Resources getReturnTransition [androidJvm] @ Nullable open fun getReturnTransition (): Any ? getSavedStateRegistry [androidJvm] @ NonNull override fun getSavedStateRegistry (): SavedStateRegistry getSharedElementEnterTransition [androidJvm] @ Nullable open fun getSharedElementEnterTransition (): Any ? getSharedElementReturnTransition [androidJvm] @ Nullable open fun getSharedElementReturnTransition (): Any ? getSharedElementSourceNames [androidJvm] @ NonNull open fun getSharedElementSourceNames (): ArrayList < String > getSharedElementTargetNames [androidJvm] @ NonNull open fun getSharedElementTargetNames (): ArrayList < String > getString [androidJvm] @ NonNull fun getString (@ StringRes p0: Int ): String @ NonNull fun getString (@ StringRes p0: Int , @ Nullable vararg p1: Any ): String getTag [androidJvm] @ Nullable fun getTag (): String ? getText [androidJvm] @ NonNull fun getText (@ StringRes p0: Int ): CharSequence getView [androidJvm] @ Nullable open fun getView (): View ? getViewLifecycleOwner [androidJvm] @ MainThread @ NonNull open fun getViewLifecycleOwner (): LifecycleOwner getViewLifecycleOwnerLiveData [androidJvm] @ NonNull open fun getViewLifecycleOwnerLiveData (): LiveData < LifecycleOwner > getViewModelStore [androidJvm] @ NonNull open override fun getViewModelStore (): ViewModelStore hashCode [androidJvm] override fun hashCode (): Int hasOptionsMenu [androidJvm] fun hasOptionsMenu (): Boolean initState [androidJvm] open fun initState () isAdded [androidJvm] fun isAdded (): Boolean isDetached [androidJvm] fun isDetached (): Boolean isHidden [androidJvm] fun isHidden (): Boolean isHideReplaced [androidJvm] open fun isHideReplaced (): Boolean isInBackStack [androidJvm] fun isInBackStack (): Boolean isInLayout [androidJvm] fun isInLayout (): Boolean isMenuVisible [androidJvm] fun isMenuVisible (): Boolean isPostponed [androidJvm] open fun isPostponed (): Boolean isRemoving [androidJvm] fun isRemoving (): Boolean isRemovingParent [androidJvm] fun isRemovingParent (): Boolean isResumed [androidJvm] fun isResumed (): Boolean isStateSaved [androidJvm] fun isStateSaved (): Boolean isVisible [androidJvm] fun isVisible (): Boolean noteStateNotSaved [androidJvm] open fun noteStateNotSaved () onAttach [androidJvm] @ MainThread @ CallSuper open fun onAttach (@ NonNull p0: Context ) onConfigurationChanged [androidJvm] @ CallSuper open override fun onConfigurationChanged (@ NonNull p0: Configuration ) onContextItemSelected [androidJvm] @ MainThread open fun onContextItemSelected (@ NonNull p0: MenuItem ): Boolean onCreate [androidJvm] @ MainThread @ CallSuper open fun onCreate (@ Nullable p0: Bundle ?) onCreateAnimation [androidJvm] @ MainThread @ Nullable open fun onCreateAnimation (p0: Int , p1: Boolean , p2: Int ): Animation ? onCreateAnimator [androidJvm] @ MainThread @ Nullable open fun onCreateAnimator (p0: Int , p1: Boolean , p2: Int ): Animator ? onCreateContextMenu [androidJvm] @ MainThread open override fun onCreateContextMenu (@ NonNull p0: ContextMenu , @ NonNull p1: View , @ Nullable p2: ContextMenu.ContextMenuInfo ?) onCreateOptionsMenu [androidJvm] @ MainThread open fun onCreateOptionsMenu (@ NonNull p0: Menu , @ NonNull p1: MenuInflater ) onCreateView [androidJvm] open override fun onCreateView (inflater: LayoutInflater , container: ViewGroup ?, savedInstanceState: Bundle ?): View ? onDestroy [androidJvm] @ MainThread @ CallSuper open fun onDestroy () onDestroyOptionsMenu [androidJvm] @ MainThread open fun onDestroyOptionsMenu () onDestroyView [androidJvm] open override fun onDestroyView () onDetach [androidJvm] open override fun onDetach () onGetLayoutInflater [androidJvm] @ NonNull open fun onGetLayoutInflater (@ Nullable p0: Bundle ?): LayoutInflater onHiddenChanged [androidJvm] @ MainThread open fun onHiddenChanged (p0: Boolean ) onInflate [androidJvm] @ UiThread @ CallSuper open fun onInflate (@ NonNull p0: Context , @ NonNull p1: AttributeSet , @ Nullable p2: Bundle ?) onLowMemory [androidJvm] @ MainThread @ CallSuper open override fun onLowMemory () onMultiWindowModeChanged [androidJvm] open fun onMultiWindowModeChanged (p0: Boolean ) onOptionsItemSelected [androidJvm] @ MainThread open fun onOptionsItemSelected (@ NonNull p0: MenuItem ): Boolean onOptionsMenuClosed [androidJvm] @ MainThread open fun onOptionsMenuClosed (@ NonNull p0: Menu ) onPause [androidJvm] @ MainThread @ CallSuper open fun onPause () onPictureInPictureModeChanged [androidJvm] open fun onPictureInPictureModeChanged (p0: Boolean ) onPrepareOptionsMenu [androidJvm] @ MainThread open fun onPrepareOptionsMenu (@ NonNull p0: Menu ) onPrimaryNavigationFragmentChanged [androidJvm] @ MainThread open fun onPrimaryNavigationFragmentChanged (p0: Boolean ) onResume [androidJvm] @ MainThread @ CallSuper open fun onResume () onSaveInstanceState [androidJvm] @ MainThread open fun onSaveInstanceState (@ NonNull p0: Bundle ) onStart [androidJvm] @ MainThread @ CallSuper open fun onStart () onStop [androidJvm] @ MainThread @ CallSuper open fun onStop () onViewCreated [androidJvm] @ MainThread open fun onViewCreated (@ NonNull p0: View , @ Nullable p1: Bundle ?) onViewStateRestored [androidJvm] @ MainThread @ CallSuper open fun onViewStateRestored (@ Nullable p0: Bundle ?) performActivityCreated [androidJvm] open fun performActivityCreated (p0: Bundle ) performAttach [androidJvm] open fun performAttach () performConfigurationChanged [androidJvm] open fun performConfigurationChanged (@ NonNull p0: Configuration ) performContextItemSelected [androidJvm] open fun performContextItemSelected (@ NonNull p0: MenuItem ): Boolean performCreate [androidJvm] open fun performCreate (p0: Bundle ) performCreateOptionsMenu [androidJvm] open fun performCreateOptionsMenu (@ NonNull p0: Menu , @ NonNull p1: MenuInflater ): Boolean performCreateView [androidJvm] open fun performCreateView (@ NonNull p0: LayoutInflater , @ Nullable p1: ViewGroup ?, @ Nullable p2: Bundle ?) performDestroy [androidJvm] open fun performDestroy () performDestroyView [androidJvm] open fun performDestroyView () performDetach [androidJvm] open fun performDetach () performGetLayoutInflater [androidJvm] @ NonNull open fun performGetLayoutInflater (@ Nullable p0: Bundle ?): LayoutInflater performLowMemory [androidJvm] open fun performLowMemory () performMultiWindowModeChanged [androidJvm] open fun performMultiWindowModeChanged (p0: Boolean ) performOptionsItemSelected [androidJvm] open fun performOptionsItemSelected (@ NonNull p0: MenuItem ): Boolean performOptionsMenuClosed [androidJvm] open fun performOptionsMenuClosed (@ NonNull p0: Menu ) performPause [androidJvm] open fun performPause () performPictureInPictureModeChanged [androidJvm] open fun performPictureInPictureModeChanged (p0: Boolean ) performPrepareOptionsMenu [androidJvm] open fun performPrepareOptionsMenu (@ NonNull p0: Menu ): Boolean performPrimaryNavigationFragmentChanged [androidJvm] open fun performPrimaryNavigationFragmentChanged () performResume [androidJvm] open fun performResume () performSaveInstanceState [androidJvm] open fun performSaveInstanceState (p0: Bundle ) performStart [androidJvm] open fun performStart () performStop [androidJvm] open fun performStop () performViewCreated [androidJvm] open fun performViewCreated () postponeEnterTransition [androidJvm] open fun postponeEnterTransition () fun postponeEnterTransition (p0: Long , @ NonNull p1: TimeUnit ) registerForActivityResult [androidJvm] @ MainThread @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull p0: ActivityResultContract < I , O >, @ NonNull p1: ActivityResultCallback < O >): ActivityResultLauncher < I > @ MainThread @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull p0: ActivityResultContract < I , O >, @ NonNull p1: ActivityResultRegistry , @ NonNull p2: ActivityResultCallback < O >): ActivityResultLauncher < I > registerForContextMenu [androidJvm] open fun registerForContextMenu (@ NonNull p0: View ) requireActivity [androidJvm] @ NonNull fun requireActivity (): FragmentActivity requireArguments [androidJvm] @ NonNull fun requireArguments (): Bundle requireContext [androidJvm] @ NonNull fun requireContext (): Context requireHost [androidJvm] @ NonNull fun requireHost (): Any requireParentFragment [androidJvm] @ NonNull fun requireParentFragment (): Fragment requireView [androidJvm] @ NonNull fun requireView (): View restoreChildFragmentState [androidJvm] open fun restoreChildFragmentState (@ Nullable p0: Bundle ?) restoreViewState [androidJvm] fun restoreViewState (p0: Bundle ) setAllowEnterTransitionOverlap [androidJvm] open fun setAllowEnterTransitionOverlap (p0: Boolean ) setAllowReturnTransitionOverlap [androidJvm] open fun setAllowReturnTransitionOverlap (p0: Boolean ) setAnimatingAway [androidJvm] open fun setAnimatingAway (p0: View ) setAnimations [androidJvm] open fun setAnimations (p0: Int , p1: Int , p2: Int , p3: Int ) setAnimator [androidJvm] open fun setAnimator (p0: Animator ) setArguments [androidJvm] open fun setArguments (@ Nullable p0: Bundle ?) setEnterSharedElementCallback [androidJvm] open fun setEnterSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setEnterTransition [androidJvm] open fun setEnterTransition (@ Nullable p0: Any ?) setExitSharedElementCallback [androidJvm] open fun setExitSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setExitTransition [androidJvm] open fun setExitTransition (@ Nullable p0: Any ?) setFocusedView [androidJvm] open fun setFocusedView (p0: View ) setHasOptionsMenu [androidJvm] open fun setHasOptionsMenu (p0: Boolean ) setHideReplaced [androidJvm] open fun setHideReplaced (p0: Boolean ) setInitialSavedState [androidJvm] open fun setInitialSavedState (@ Nullable p0: Fragment.SavedState ?) setMenuVisibility [androidJvm] open fun setMenuVisibility (p0: Boolean ) setNextTransition [androidJvm] open fun setNextTransition (p0: Int ) setOnStartEnterTransitionListener [androidJvm] open fun setOnStartEnterTransitionListener (p0: Fragment.OnStartEnterTransitionListener ) setPopDirection [androidJvm] open fun setPopDirection (p0: Boolean ) setPostOnViewCreatedAlpha [androidJvm] open fun setPostOnViewCreatedAlpha (p0: Float ) setReenterTransition [androidJvm] open fun setReenterTransition (@ Nullable p0: Any ?) setReturnTransition [androidJvm] open fun setReturnTransition (@ Nullable p0: Any ?) setSharedElementEnterTransition [androidJvm] open fun setSharedElementEnterTransition (@ Nullable p0: Any ?) setSharedElementNames [androidJvm] open fun setSharedElementNames (@ Nullable p0: ArrayList < String >?, @ Nullable p1: ArrayList < String >?) setSharedElementReturnTransition [androidJvm] open fun setSharedElementReturnTransition (@ Nullable p0: Any ?) shouldShowRequestPermissionRationale [androidJvm] open fun shouldShowRequestPermissionRationale (@ NonNull p0: String ): Boolean startActivity [androidJvm] open fun startActivity (p0: Intent ) open fun startActivity (p0: Intent , @ Nullable p1: Bundle ?) startPostponedEnterTransition [androidJvm] open fun startPostponedEnterTransition () toString [androidJvm] @ NonNull open override fun toString (): String unregisterForContextMenu [androidJvm] open fun unregisterForContextMenu (@ NonNull p0: View )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-epub-page-fragment/#properties","text":"Name Summary mAdded [androidJvm] val mAdded : Boolean mAnimationInfo [androidJvm] val mAnimationInfo : Fragment.AnimationInfo mArguments [androidJvm] val mArguments : Bundle mBackStackNesting [androidJvm] val mBackStackNesting : Int mChildFragmentManager [androidJvm] @ NonNull val mChildFragmentManager : FragmentManager mContainer [androidJvm] val mContainer : ViewGroup mContainerId [androidJvm] val mContainerId : Int mDefaultFactory [androidJvm] val mDefaultFactory : ViewModelProvider.Factory mDeferStart [androidJvm] val mDeferStart : Boolean mDetached [androidJvm] val mDetached : Boolean mFragmentId [androidJvm] val mFragmentId : Int mFragmentManager [androidJvm] val mFragmentManager : FragmentManager mFromLayout [androidJvm] val mFromLayout : Boolean mHasMenu [androidJvm] val mHasMenu : Boolean mHidden [androidJvm] val mHidden : Boolean mHiddenChanged [androidJvm] val mHiddenChanged : Boolean mHost [androidJvm] val mHost : FragmentHostCallback <*> mInLayout [androidJvm] val mInLayout : Boolean mIsCreated [androidJvm] val mIsCreated : Boolean mIsNewlyAdded [androidJvm] val mIsNewlyAdded : Boolean mLayoutInflater [androidJvm] val mLayoutInflater : LayoutInflater mLifecycleRegistry [androidJvm] val mLifecycleRegistry : LifecycleRegistry mMaxState [androidJvm] val mMaxState : Lifecycle.State mMenuVisible [androidJvm] val mMenuVisible : Boolean mParentFragment [androidJvm] val mParentFragment : Fragment mPerformedCreateView [androidJvm] val mPerformedCreateView : Boolean mPostponedAlpha [androidJvm] val mPostponedAlpha : Float mPostponedDurationRunnable [androidJvm] val mPostponedDurationRunnable : Runnable mRemoving [androidJvm] val mRemoving : Boolean mRestored [androidJvm] val mRestored : Boolean mRetainInstance [androidJvm] val mRetainInstance : Boolean mRetainInstanceChangedWhileDetached [androidJvm] val mRetainInstanceChangedWhileDetached : Boolean mSavedFragmentState [androidJvm] val mSavedFragmentState : Bundle mSavedStateRegistryController [androidJvm] val mSavedStateRegistryController : SavedStateRegistryController mSavedUserVisibleHint [androidJvm] @ Nullable val mSavedUserVisibleHint : Boolean ? mSavedViewRegistryState [androidJvm] val mSavedViewRegistryState : Bundle mSavedViewState [androidJvm] val mSavedViewState : SparseArray < Parcelable > mState [androidJvm] val mState : Int mTag [androidJvm] val mTag : String mTarget [androidJvm] val mTarget : Fragment mTargetRequestCode [androidJvm] val mTargetRequestCode : Int mTargetWho [androidJvm] val mTargetWho : String mUserVisibleHint [androidJvm] val mUserVisibleHint : Boolean mView [androidJvm] val mView : View mViewLifecycleOwner [androidJvm] @ Nullable val mViewLifecycleOwner : FragmentViewLifecycleOwner ? mViewLifecycleOwnerLiveData [androidJvm] val mViewLifecycleOwnerLiveData : MutableLiveData < LifecycleOwner > mWho [androidJvm] @ NonNull val mWho : String webView [androidJvm] var webView : R2WebView ? = null","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-epub-page-fragment/-r2-epub-page-fragment/","text":"// navigator / org.readium.r2.navigator.pager / R2EpubPageFragment / R2EpubPageFragment R2EpubPageFragment \u00b6 [androidJvm]\\ fun R2EpubPageFragment ()","title":" r2 epub page fragment"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-epub-page-fragment/-r2-epub-page-fragment/#r2epubpagefragment","text":"[androidJvm]\\ fun R2EpubPageFragment ()","title":"R2EpubPageFragment"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-epub-page-fragment/on-create-view/","text":"// navigator / org.readium.r2.navigator.pager / R2EpubPageFragment / onCreateView onCreateView \u00b6 [androidJvm]\\ open override fun onCreateView (inflater: LayoutInflater , container: ViewGroup ?, savedInstanceState: Bundle ?): View ?","title":"On create view"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-epub-page-fragment/on-create-view/#oncreateview","text":"[androidJvm]\\ open override fun onCreateView (inflater: LayoutInflater , container: ViewGroup ?, savedInstanceState: Bundle ?): View ?","title":"onCreateView"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-epub-page-fragment/on-destroy-view/","text":"// navigator / org.readium.r2.navigator.pager / R2EpubPageFragment / onDestroyView onDestroyView \u00b6 [androidJvm]\\ open override fun onDestroyView ()","title":"On destroy view"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-epub-page-fragment/on-destroy-view/#ondestroyview","text":"[androidJvm]\\ open override fun onDestroyView ()","title":"onDestroyView"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-epub-page-fragment/on-detach/","text":"// navigator / org.readium.r2.navigator.pager / R2EpubPageFragment / onDetach onDetach \u00b6 [androidJvm]\\ open override fun onDetach ()","title":"On detach"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-epub-page-fragment/on-detach/#ondetach","text":"[androidJvm]\\ open override fun onDetach ()","title":"onDetach"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-epub-page-fragment/web-view/","text":"// navigator / org.readium.r2.navigator.pager / R2EpubPageFragment / webView webView \u00b6 [androidJvm]\\ var webView : R2WebView ? = null","title":"Web view"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-epub-page-fragment/web-view/#webview","text":"[androidJvm]\\ var webView : R2WebView ? = null","title":"webView"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-epub-page-fragment/-companion/","text":"// navigator / org.readium.r2.navigator.pager / R2EpubPageFragment / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary newInstance [androidJvm] fun newInstance (url: String , link: Link ? = null): R2EpubPageFragment","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-epub-page-fragment/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-epub-page-fragment/-companion/#functions","text":"Name Summary newInstance [androidJvm] fun newInstance (url: String , link: Link ? = null): R2EpubPageFragment","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-epub-page-fragment/-companion/new-instance/","text":"// navigator / org.readium.r2.navigator.pager / R2EpubPageFragment / Companion / newInstance newInstance \u00b6 [androidJvm]\\ fun newInstance (url: String , link: Link ? = null): R2EpubPageFragment","title":"New instance"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-epub-page-fragment/-companion/new-instance/#newinstance","text":"[androidJvm]\\ fun newInstance (url: String , link: Link ? = null): R2EpubPageFragment","title":"newInstance"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-f-x-l-page-fragment/","text":"// navigator / org.readium.r2.navigator.pager / R2FXLPageFragment R2FXLPageFragment \u00b6 [androidJvm]\\ class R2FXLPageFragment : Fragment Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary callStartTransitionListener [androidJvm] open fun callStartTransitionListener (p0: Boolean ) createFragmentContainer [androidJvm] @ NonNull open fun createFragmentContainer (): FragmentContainer dump [androidJvm] open fun dump (@ NonNull p0: String , @ Nullable p1: FileDescriptor ?, @ NonNull p2: PrintWriter , @ Nullable p3: Array < String >?) equals [androidJvm] operator override fun equals (@ Nullable other: Any ?): Boolean findFragmentByWho [androidJvm] @ Nullable open fun findFragmentByWho (@ NonNull p0: String ): Fragment ? generateActivityResultKey [androidJvm] @ NonNull open fun generateActivityResultKey (): String getActivity [androidJvm] @ Nullable fun getActivity (): FragmentActivity ? getAllowEnterTransitionOverlap [androidJvm] open fun getAllowEnterTransitionOverlap (): Boolean getAllowReturnTransitionOverlap [androidJvm] open fun getAllowReturnTransitionOverlap (): Boolean getAnimatingAway [androidJvm] open fun getAnimatingAway (): View getAnimator [androidJvm] open fun getAnimator (): Animator getArguments [androidJvm] @ Nullable fun getArguments (): Bundle ? getChildFragmentManager [androidJvm] @ NonNull fun getChildFragmentManager (): FragmentManager getContext [androidJvm] @ Nullable open fun getContext (): Context ? getDefaultViewModelProviderFactory [androidJvm] @ NonNull open override fun getDefaultViewModelProviderFactory (): ViewModelProvider.Factory getEnterAnim [androidJvm] open fun getEnterAnim (): Int getEnterTransition [androidJvm] @ Nullable open fun getEnterTransition (): Any ? getEnterTransitionCallback [androidJvm] open fun getEnterTransitionCallback (): SharedElementCallback getExitAnim [androidJvm] open fun getExitAnim (): Int getExitTransition [androidJvm] @ Nullable open fun getExitTransition (): Any ? getExitTransitionCallback [androidJvm] open fun getExitTransitionCallback (): SharedElementCallback getFocusedView [androidJvm] open fun getFocusedView (): View getHost [androidJvm] @ Nullable fun getHost (): Any ? getId [androidJvm] fun getId (): Int getLayoutInflater [androidJvm] @ NonNull fun getLayoutInflater (): LayoutInflater getLifecycle [androidJvm] @ NonNull open override fun getLifecycle (): Lifecycle getNextTransition [androidJvm] open fun getNextTransition (): Int getParentFragment [androidJvm] @ Nullable fun getParentFragment (): Fragment ? getParentFragmentManager [androidJvm] @ NonNull fun getParentFragmentManager (): FragmentManager getPopDirection [androidJvm] open fun getPopDirection (): Boolean getPopEnterAnim [androidJvm] open fun getPopEnterAnim (): Int getPopExitAnim [androidJvm] open fun getPopExitAnim (): Int getPostOnViewCreatedAlpha [androidJvm] open fun getPostOnViewCreatedAlpha (): Float getReenterTransition [androidJvm] @ Nullable open fun getReenterTransition (): Any ? getResources [androidJvm] @ NonNull fun getResources (): Resources getReturnTransition [androidJvm] @ Nullable open fun getReturnTransition (): Any ? getSavedStateRegistry [androidJvm] @ NonNull override fun getSavedStateRegistry (): SavedStateRegistry getSharedElementEnterTransition [androidJvm] @ Nullable open fun getSharedElementEnterTransition (): Any ? getSharedElementReturnTransition [androidJvm] @ Nullable open fun getSharedElementReturnTransition (): Any ? getSharedElementSourceNames [androidJvm] @ NonNull open fun getSharedElementSourceNames (): ArrayList < String > getSharedElementTargetNames [androidJvm] @ NonNull open fun getSharedElementTargetNames (): ArrayList < String > getString [androidJvm] @ NonNull fun getString (@ StringRes p0: Int ): String @ NonNull fun getString (@ StringRes p0: Int , @ Nullable vararg p1: Any ): String getTag [androidJvm] @ Nullable fun getTag (): String ? getText [androidJvm] @ NonNull fun getText (@ StringRes p0: Int ): CharSequence getView [androidJvm] @ Nullable open fun getView (): View ? getViewLifecycleOwner [androidJvm] @ MainThread @ NonNull open fun getViewLifecycleOwner (): LifecycleOwner getViewLifecycleOwnerLiveData [androidJvm] @ NonNull open fun getViewLifecycleOwnerLiveData (): LiveData < LifecycleOwner > getViewModelStore [androidJvm] @ NonNull open override fun getViewModelStore (): ViewModelStore hashCode [androidJvm] override fun hashCode (): Int hasOptionsMenu [androidJvm] fun hasOptionsMenu (): Boolean initState [androidJvm] open fun initState () isAdded [androidJvm] fun isAdded (): Boolean isDetached [androidJvm] fun isDetached (): Boolean isHidden [androidJvm] fun isHidden (): Boolean isHideReplaced [androidJvm] open fun isHideReplaced (): Boolean isInBackStack [androidJvm] fun isInBackStack (): Boolean isInLayout [androidJvm] fun isInLayout (): Boolean isMenuVisible [androidJvm] fun isMenuVisible (): Boolean isPostponed [androidJvm] open fun isPostponed (): Boolean isRemoving [androidJvm] fun isRemoving (): Boolean isRemovingParent [androidJvm] fun isRemovingParent (): Boolean isResumed [androidJvm] fun isResumed (): Boolean isStateSaved [androidJvm] fun isStateSaved (): Boolean isVisible [androidJvm] fun isVisible (): Boolean noteStateNotSaved [androidJvm] open fun noteStateNotSaved () onAttach [androidJvm] @ MainThread @ CallSuper open fun onAttach (@ NonNull p0: Context ) onConfigurationChanged [androidJvm] @ CallSuper open override fun onConfigurationChanged (@ NonNull p0: Configuration ) onContextItemSelected [androidJvm] @ MainThread open fun onContextItemSelected (@ NonNull p0: MenuItem ): Boolean onCreate [androidJvm] @ MainThread @ CallSuper open fun onCreate (@ Nullable p0: Bundle ?) onCreateAnimation [androidJvm] @ MainThread @ Nullable open fun onCreateAnimation (p0: Int , p1: Boolean , p2: Int ): Animation ? onCreateAnimator [androidJvm] @ MainThread @ Nullable open fun onCreateAnimator (p0: Int , p1: Boolean , p2: Int ): Animator ? onCreateContextMenu [androidJvm] @ MainThread open override fun onCreateContextMenu (@ NonNull p0: ContextMenu , @ NonNull p1: View , @ Nullable p2: ContextMenu.ContextMenuInfo ?) onCreateOptionsMenu [androidJvm] @ MainThread open fun onCreateOptionsMenu (@ NonNull p0: Menu , @ NonNull p1: MenuInflater ) onCreateView [androidJvm] open override fun onCreateView (inflater: LayoutInflater , container: ViewGroup ?, savedInstanceState: Bundle ?): View ? onDestroy [androidJvm] @ MainThread @ CallSuper open fun onDestroy () onDestroyOptionsMenu [androidJvm] @ MainThread open fun onDestroyOptionsMenu () onDestroyView [androidJvm] open override fun onDestroyView () onDetach [androidJvm] open override fun onDetach () onGetLayoutInflater [androidJvm] @ NonNull open fun onGetLayoutInflater (@ Nullable p0: Bundle ?): LayoutInflater onHiddenChanged [androidJvm] @ MainThread open fun onHiddenChanged (p0: Boolean ) onInflate [androidJvm] @ UiThread @ CallSuper open fun onInflate (@ NonNull p0: Context , @ NonNull p1: AttributeSet , @ Nullable p2: Bundle ?) onLowMemory [androidJvm] @ MainThread @ CallSuper open override fun onLowMemory () onMultiWindowModeChanged [androidJvm] open fun onMultiWindowModeChanged (p0: Boolean ) onOptionsItemSelected [androidJvm] @ MainThread open fun onOptionsItemSelected (@ NonNull p0: MenuItem ): Boolean onOptionsMenuClosed [androidJvm] @ MainThread open fun onOptionsMenuClosed (@ NonNull p0: Menu ) onPause [androidJvm] @ MainThread @ CallSuper open fun onPause () onPictureInPictureModeChanged [androidJvm] open fun onPictureInPictureModeChanged (p0: Boolean ) onPrepareOptionsMenu [androidJvm] @ MainThread open fun onPrepareOptionsMenu (@ NonNull p0: Menu ) onPrimaryNavigationFragmentChanged [androidJvm] @ MainThread open fun onPrimaryNavigationFragmentChanged (p0: Boolean ) onResume [androidJvm] @ MainThread @ CallSuper open fun onResume () onSaveInstanceState [androidJvm] @ MainThread open fun onSaveInstanceState (@ NonNull p0: Bundle ) onStart [androidJvm] @ MainThread @ CallSuper open fun onStart () onStop [androidJvm] @ MainThread @ CallSuper open fun onStop () onViewCreated [androidJvm] @ MainThread open fun onViewCreated (@ NonNull p0: View , @ Nullable p1: Bundle ?) onViewStateRestored [androidJvm] @ MainThread @ CallSuper open fun onViewStateRestored (@ Nullable p0: Bundle ?) performActivityCreated [androidJvm] open fun performActivityCreated (p0: Bundle ) performAttach [androidJvm] open fun performAttach () performConfigurationChanged [androidJvm] open fun performConfigurationChanged (@ NonNull p0: Configuration ) performContextItemSelected [androidJvm] open fun performContextItemSelected (@ NonNull p0: MenuItem ): Boolean performCreate [androidJvm] open fun performCreate (p0: Bundle ) performCreateOptionsMenu [androidJvm] open fun performCreateOptionsMenu (@ NonNull p0: Menu , @ NonNull p1: MenuInflater ): Boolean performCreateView [androidJvm] open fun performCreateView (@ NonNull p0: LayoutInflater , @ Nullable p1: ViewGroup ?, @ Nullable p2: Bundle ?) performDestroy [androidJvm] open fun performDestroy () performDestroyView [androidJvm] open fun performDestroyView () performDetach [androidJvm] open fun performDetach () performGetLayoutInflater [androidJvm] @ NonNull open fun performGetLayoutInflater (@ Nullable p0: Bundle ?): LayoutInflater performLowMemory [androidJvm] open fun performLowMemory () performMultiWindowModeChanged [androidJvm] open fun performMultiWindowModeChanged (p0: Boolean ) performOptionsItemSelected [androidJvm] open fun performOptionsItemSelected (@ NonNull p0: MenuItem ): Boolean performOptionsMenuClosed [androidJvm] open fun performOptionsMenuClosed (@ NonNull p0: Menu ) performPause [androidJvm] open fun performPause () performPictureInPictureModeChanged [androidJvm] open fun performPictureInPictureModeChanged (p0: Boolean ) performPrepareOptionsMenu [androidJvm] open fun performPrepareOptionsMenu (@ NonNull p0: Menu ): Boolean performPrimaryNavigationFragmentChanged [androidJvm] open fun performPrimaryNavigationFragmentChanged () performResume [androidJvm] open fun performResume () performSaveInstanceState [androidJvm] open fun performSaveInstanceState (p0: Bundle ) performStart [androidJvm] open fun performStart () performStop [androidJvm] open fun performStop () performViewCreated [androidJvm] open fun performViewCreated () postponeEnterTransition [androidJvm] open fun postponeEnterTransition () fun postponeEnterTransition (p0: Long , @ NonNull p1: TimeUnit ) registerForActivityResult [androidJvm] @ MainThread @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull p0: ActivityResultContract < I , O >, @ NonNull p1: ActivityResultCallback < O >): ActivityResultLauncher < I > @ MainThread @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull p0: ActivityResultContract < I , O >, @ NonNull p1: ActivityResultRegistry , @ NonNull p2: ActivityResultCallback < O >): ActivityResultLauncher < I > registerForContextMenu [androidJvm] open fun registerForContextMenu (@ NonNull p0: View ) requireActivity [androidJvm] @ NonNull fun requireActivity (): FragmentActivity requireArguments [androidJvm] @ NonNull fun requireArguments (): Bundle requireContext [androidJvm] @ NonNull fun requireContext (): Context requireHost [androidJvm] @ NonNull fun requireHost (): Any requireParentFragment [androidJvm] @ NonNull fun requireParentFragment (): Fragment requireView [androidJvm] @ NonNull fun requireView (): View restoreChildFragmentState [androidJvm] open fun restoreChildFragmentState (@ Nullable p0: Bundle ?) restoreViewState [androidJvm] fun restoreViewState (p0: Bundle ) setAllowEnterTransitionOverlap [androidJvm] open fun setAllowEnterTransitionOverlap (p0: Boolean ) setAllowReturnTransitionOverlap [androidJvm] open fun setAllowReturnTransitionOverlap (p0: Boolean ) setAnimatingAway [androidJvm] open fun setAnimatingAway (p0: View ) setAnimations [androidJvm] open fun setAnimations (p0: Int , p1: Int , p2: Int , p3: Int ) setAnimator [androidJvm] open fun setAnimator (p0: Animator ) setArguments [androidJvm] open fun setArguments (@ Nullable p0: Bundle ?) setEnterSharedElementCallback [androidJvm] open fun setEnterSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setEnterTransition [androidJvm] open fun setEnterTransition (@ Nullable p0: Any ?) setExitSharedElementCallback [androidJvm] open fun setExitSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setExitTransition [androidJvm] open fun setExitTransition (@ Nullable p0: Any ?) setFocusedView [androidJvm] open fun setFocusedView (p0: View ) setHasOptionsMenu [androidJvm] open fun setHasOptionsMenu (p0: Boolean ) setHideReplaced [androidJvm] open fun setHideReplaced (p0: Boolean ) setInitialSavedState [androidJvm] open fun setInitialSavedState (@ Nullable p0: Fragment.SavedState ?) setMenuVisibility [androidJvm] open fun setMenuVisibility (p0: Boolean ) setNextTransition [androidJvm] open fun setNextTransition (p0: Int ) setOnStartEnterTransitionListener [androidJvm] open fun setOnStartEnterTransitionListener (p0: Fragment.OnStartEnterTransitionListener ) setPopDirection [androidJvm] open fun setPopDirection (p0: Boolean ) setPostOnViewCreatedAlpha [androidJvm] open fun setPostOnViewCreatedAlpha (p0: Float ) setReenterTransition [androidJvm] open fun setReenterTransition (@ Nullable p0: Any ?) setReturnTransition [androidJvm] open fun setReturnTransition (@ Nullable p0: Any ?) setSharedElementEnterTransition [androidJvm] open fun setSharedElementEnterTransition (@ Nullable p0: Any ?) setSharedElementNames [androidJvm] open fun setSharedElementNames (@ Nullable p0: ArrayList < String >?, @ Nullable p1: ArrayList < String >?) setSharedElementReturnTransition [androidJvm] open fun setSharedElementReturnTransition (@ Nullable p0: Any ?) shouldShowRequestPermissionRationale [androidJvm] open fun shouldShowRequestPermissionRationale (@ NonNull p0: String ): Boolean startActivity [androidJvm] open fun startActivity (p0: Intent ) open fun startActivity (p0: Intent , @ Nullable p1: Bundle ?) startPostponedEnterTransition [androidJvm] open fun startPostponedEnterTransition () toString [androidJvm] @ NonNull open override fun toString (): String unregisterForContextMenu [androidJvm] open fun unregisterForContextMenu (@ NonNull p0: View ) Properties \u00b6 Name Summary mAdded [androidJvm] val mAdded : Boolean mAnimationInfo [androidJvm] val mAnimationInfo : Fragment.AnimationInfo mArguments [androidJvm] val mArguments : Bundle mBackStackNesting [androidJvm] val mBackStackNesting : Int mChildFragmentManager [androidJvm] @ NonNull val mChildFragmentManager : FragmentManager mContainer [androidJvm] val mContainer : ViewGroup mContainerId [androidJvm] val mContainerId : Int mDefaultFactory [androidJvm] val mDefaultFactory : ViewModelProvider.Factory mDeferStart [androidJvm] val mDeferStart : Boolean mDetached [androidJvm] val mDetached : Boolean mFragmentId [androidJvm] val mFragmentId : Int mFragmentManager [androidJvm] val mFragmentManager : FragmentManager mFromLayout [androidJvm] val mFromLayout : Boolean mHasMenu [androidJvm] val mHasMenu : Boolean mHidden [androidJvm] val mHidden : Boolean mHiddenChanged [androidJvm] val mHiddenChanged : Boolean mHost [androidJvm] val mHost : FragmentHostCallback <*> mInLayout [androidJvm] val mInLayout : Boolean mIsCreated [androidJvm] val mIsCreated : Boolean mIsNewlyAdded [androidJvm] val mIsNewlyAdded : Boolean mLayoutInflater [androidJvm] val mLayoutInflater : LayoutInflater mLifecycleRegistry [androidJvm] val mLifecycleRegistry : LifecycleRegistry mMaxState [androidJvm] val mMaxState : Lifecycle.State mMenuVisible [androidJvm] val mMenuVisible : Boolean mParentFragment [androidJvm] val mParentFragment : Fragment mPerformedCreateView [androidJvm] val mPerformedCreateView : Boolean mPostponedAlpha [androidJvm] val mPostponedAlpha : Float mPostponedDurationRunnable [androidJvm] val mPostponedDurationRunnable : Runnable mRemoving [androidJvm] val mRemoving : Boolean mRestored [androidJvm] val mRestored : Boolean mRetainInstance [androidJvm] val mRetainInstance : Boolean mRetainInstanceChangedWhileDetached [androidJvm] val mRetainInstanceChangedWhileDetached : Boolean mSavedFragmentState [androidJvm] val mSavedFragmentState : Bundle mSavedStateRegistryController [androidJvm] val mSavedStateRegistryController : SavedStateRegistryController mSavedUserVisibleHint [androidJvm] @ Nullable val mSavedUserVisibleHint : Boolean ? mSavedViewRegistryState [androidJvm] val mSavedViewRegistryState : Bundle mSavedViewState [androidJvm] val mSavedViewState : SparseArray < Parcelable > mState [androidJvm] val mState : Int mTag [androidJvm] val mTag : String mTarget [androidJvm] val mTarget : Fragment mTargetRequestCode [androidJvm] val mTargetRequestCode : Int mTargetWho [androidJvm] val mTargetWho : String mUserVisibleHint [androidJvm] val mUserVisibleHint : Boolean mView [androidJvm] val mView : View mViewLifecycleOwner [androidJvm] @ Nullable val mViewLifecycleOwner : FragmentViewLifecycleOwner ? mViewLifecycleOwnerLiveData [androidJvm] val mViewLifecycleOwnerLiveData : MutableLiveData < LifecycleOwner > mWho [androidJvm] @ NonNull val mWho : String","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-f-x-l-page-fragment/#r2fxlpagefragment","text":"[androidJvm]\\ class R2FXLPageFragment : Fragment","title":"R2FXLPageFragment"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-f-x-l-page-fragment/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-f-x-l-page-fragment/#functions","text":"Name Summary callStartTransitionListener [androidJvm] open fun callStartTransitionListener (p0: Boolean ) createFragmentContainer [androidJvm] @ NonNull open fun createFragmentContainer (): FragmentContainer dump [androidJvm] open fun dump (@ NonNull p0: String , @ Nullable p1: FileDescriptor ?, @ NonNull p2: PrintWriter , @ Nullable p3: Array < String >?) equals [androidJvm] operator override fun equals (@ Nullable other: Any ?): Boolean findFragmentByWho [androidJvm] @ Nullable open fun findFragmentByWho (@ NonNull p0: String ): Fragment ? generateActivityResultKey [androidJvm] @ NonNull open fun generateActivityResultKey (): String getActivity [androidJvm] @ Nullable fun getActivity (): FragmentActivity ? getAllowEnterTransitionOverlap [androidJvm] open fun getAllowEnterTransitionOverlap (): Boolean getAllowReturnTransitionOverlap [androidJvm] open fun getAllowReturnTransitionOverlap (): Boolean getAnimatingAway [androidJvm] open fun getAnimatingAway (): View getAnimator [androidJvm] open fun getAnimator (): Animator getArguments [androidJvm] @ Nullable fun getArguments (): Bundle ? getChildFragmentManager [androidJvm] @ NonNull fun getChildFragmentManager (): FragmentManager getContext [androidJvm] @ Nullable open fun getContext (): Context ? getDefaultViewModelProviderFactory [androidJvm] @ NonNull open override fun getDefaultViewModelProviderFactory (): ViewModelProvider.Factory getEnterAnim [androidJvm] open fun getEnterAnim (): Int getEnterTransition [androidJvm] @ Nullable open fun getEnterTransition (): Any ? getEnterTransitionCallback [androidJvm] open fun getEnterTransitionCallback (): SharedElementCallback getExitAnim [androidJvm] open fun getExitAnim (): Int getExitTransition [androidJvm] @ Nullable open fun getExitTransition (): Any ? getExitTransitionCallback [androidJvm] open fun getExitTransitionCallback (): SharedElementCallback getFocusedView [androidJvm] open fun getFocusedView (): View getHost [androidJvm] @ Nullable fun getHost (): Any ? getId [androidJvm] fun getId (): Int getLayoutInflater [androidJvm] @ NonNull fun getLayoutInflater (): LayoutInflater getLifecycle [androidJvm] @ NonNull open override fun getLifecycle (): Lifecycle getNextTransition [androidJvm] open fun getNextTransition (): Int getParentFragment [androidJvm] @ Nullable fun getParentFragment (): Fragment ? getParentFragmentManager [androidJvm] @ NonNull fun getParentFragmentManager (): FragmentManager getPopDirection [androidJvm] open fun getPopDirection (): Boolean getPopEnterAnim [androidJvm] open fun getPopEnterAnim (): Int getPopExitAnim [androidJvm] open fun getPopExitAnim (): Int getPostOnViewCreatedAlpha [androidJvm] open fun getPostOnViewCreatedAlpha (): Float getReenterTransition [androidJvm] @ Nullable open fun getReenterTransition (): Any ? getResources [androidJvm] @ NonNull fun getResources (): Resources getReturnTransition [androidJvm] @ Nullable open fun getReturnTransition (): Any ? getSavedStateRegistry [androidJvm] @ NonNull override fun getSavedStateRegistry (): SavedStateRegistry getSharedElementEnterTransition [androidJvm] @ Nullable open fun getSharedElementEnterTransition (): Any ? getSharedElementReturnTransition [androidJvm] @ Nullable open fun getSharedElementReturnTransition (): Any ? getSharedElementSourceNames [androidJvm] @ NonNull open fun getSharedElementSourceNames (): ArrayList < String > getSharedElementTargetNames [androidJvm] @ NonNull open fun getSharedElementTargetNames (): ArrayList < String > getString [androidJvm] @ NonNull fun getString (@ StringRes p0: Int ): String @ NonNull fun getString (@ StringRes p0: Int , @ Nullable vararg p1: Any ): String getTag [androidJvm] @ Nullable fun getTag (): String ? getText [androidJvm] @ NonNull fun getText (@ StringRes p0: Int ): CharSequence getView [androidJvm] @ Nullable open fun getView (): View ? getViewLifecycleOwner [androidJvm] @ MainThread @ NonNull open fun getViewLifecycleOwner (): LifecycleOwner getViewLifecycleOwnerLiveData [androidJvm] @ NonNull open fun getViewLifecycleOwnerLiveData (): LiveData < LifecycleOwner > getViewModelStore [androidJvm] @ NonNull open override fun getViewModelStore (): ViewModelStore hashCode [androidJvm] override fun hashCode (): Int hasOptionsMenu [androidJvm] fun hasOptionsMenu (): Boolean initState [androidJvm] open fun initState () isAdded [androidJvm] fun isAdded (): Boolean isDetached [androidJvm] fun isDetached (): Boolean isHidden [androidJvm] fun isHidden (): Boolean isHideReplaced [androidJvm] open fun isHideReplaced (): Boolean isInBackStack [androidJvm] fun isInBackStack (): Boolean isInLayout [androidJvm] fun isInLayout (): Boolean isMenuVisible [androidJvm] fun isMenuVisible (): Boolean isPostponed [androidJvm] open fun isPostponed (): Boolean isRemoving [androidJvm] fun isRemoving (): Boolean isRemovingParent [androidJvm] fun isRemovingParent (): Boolean isResumed [androidJvm] fun isResumed (): Boolean isStateSaved [androidJvm] fun isStateSaved (): Boolean isVisible [androidJvm] fun isVisible (): Boolean noteStateNotSaved [androidJvm] open fun noteStateNotSaved () onAttach [androidJvm] @ MainThread @ CallSuper open fun onAttach (@ NonNull p0: Context ) onConfigurationChanged [androidJvm] @ CallSuper open override fun onConfigurationChanged (@ NonNull p0: Configuration ) onContextItemSelected [androidJvm] @ MainThread open fun onContextItemSelected (@ NonNull p0: MenuItem ): Boolean onCreate [androidJvm] @ MainThread @ CallSuper open fun onCreate (@ Nullable p0: Bundle ?) onCreateAnimation [androidJvm] @ MainThread @ Nullable open fun onCreateAnimation (p0: Int , p1: Boolean , p2: Int ): Animation ? onCreateAnimator [androidJvm] @ MainThread @ Nullable open fun onCreateAnimator (p0: Int , p1: Boolean , p2: Int ): Animator ? onCreateContextMenu [androidJvm] @ MainThread open override fun onCreateContextMenu (@ NonNull p0: ContextMenu , @ NonNull p1: View , @ Nullable p2: ContextMenu.ContextMenuInfo ?) onCreateOptionsMenu [androidJvm] @ MainThread open fun onCreateOptionsMenu (@ NonNull p0: Menu , @ NonNull p1: MenuInflater ) onCreateView [androidJvm] open override fun onCreateView (inflater: LayoutInflater , container: ViewGroup ?, savedInstanceState: Bundle ?): View ? onDestroy [androidJvm] @ MainThread @ CallSuper open fun onDestroy () onDestroyOptionsMenu [androidJvm] @ MainThread open fun onDestroyOptionsMenu () onDestroyView [androidJvm] open override fun onDestroyView () onDetach [androidJvm] open override fun onDetach () onGetLayoutInflater [androidJvm] @ NonNull open fun onGetLayoutInflater (@ Nullable p0: Bundle ?): LayoutInflater onHiddenChanged [androidJvm] @ MainThread open fun onHiddenChanged (p0: Boolean ) onInflate [androidJvm] @ UiThread @ CallSuper open fun onInflate (@ NonNull p0: Context , @ NonNull p1: AttributeSet , @ Nullable p2: Bundle ?) onLowMemory [androidJvm] @ MainThread @ CallSuper open override fun onLowMemory () onMultiWindowModeChanged [androidJvm] open fun onMultiWindowModeChanged (p0: Boolean ) onOptionsItemSelected [androidJvm] @ MainThread open fun onOptionsItemSelected (@ NonNull p0: MenuItem ): Boolean onOptionsMenuClosed [androidJvm] @ MainThread open fun onOptionsMenuClosed (@ NonNull p0: Menu ) onPause [androidJvm] @ MainThread @ CallSuper open fun onPause () onPictureInPictureModeChanged [androidJvm] open fun onPictureInPictureModeChanged (p0: Boolean ) onPrepareOptionsMenu [androidJvm] @ MainThread open fun onPrepareOptionsMenu (@ NonNull p0: Menu ) onPrimaryNavigationFragmentChanged [androidJvm] @ MainThread open fun onPrimaryNavigationFragmentChanged (p0: Boolean ) onResume [androidJvm] @ MainThread @ CallSuper open fun onResume () onSaveInstanceState [androidJvm] @ MainThread open fun onSaveInstanceState (@ NonNull p0: Bundle ) onStart [androidJvm] @ MainThread @ CallSuper open fun onStart () onStop [androidJvm] @ MainThread @ CallSuper open fun onStop () onViewCreated [androidJvm] @ MainThread open fun onViewCreated (@ NonNull p0: View , @ Nullable p1: Bundle ?) onViewStateRestored [androidJvm] @ MainThread @ CallSuper open fun onViewStateRestored (@ Nullable p0: Bundle ?) performActivityCreated [androidJvm] open fun performActivityCreated (p0: Bundle ) performAttach [androidJvm] open fun performAttach () performConfigurationChanged [androidJvm] open fun performConfigurationChanged (@ NonNull p0: Configuration ) performContextItemSelected [androidJvm] open fun performContextItemSelected (@ NonNull p0: MenuItem ): Boolean performCreate [androidJvm] open fun performCreate (p0: Bundle ) performCreateOptionsMenu [androidJvm] open fun performCreateOptionsMenu (@ NonNull p0: Menu , @ NonNull p1: MenuInflater ): Boolean performCreateView [androidJvm] open fun performCreateView (@ NonNull p0: LayoutInflater , @ Nullable p1: ViewGroup ?, @ Nullable p2: Bundle ?) performDestroy [androidJvm] open fun performDestroy () performDestroyView [androidJvm] open fun performDestroyView () performDetach [androidJvm] open fun performDetach () performGetLayoutInflater [androidJvm] @ NonNull open fun performGetLayoutInflater (@ Nullable p0: Bundle ?): LayoutInflater performLowMemory [androidJvm] open fun performLowMemory () performMultiWindowModeChanged [androidJvm] open fun performMultiWindowModeChanged (p0: Boolean ) performOptionsItemSelected [androidJvm] open fun performOptionsItemSelected (@ NonNull p0: MenuItem ): Boolean performOptionsMenuClosed [androidJvm] open fun performOptionsMenuClosed (@ NonNull p0: Menu ) performPause [androidJvm] open fun performPause () performPictureInPictureModeChanged [androidJvm] open fun performPictureInPictureModeChanged (p0: Boolean ) performPrepareOptionsMenu [androidJvm] open fun performPrepareOptionsMenu (@ NonNull p0: Menu ): Boolean performPrimaryNavigationFragmentChanged [androidJvm] open fun performPrimaryNavigationFragmentChanged () performResume [androidJvm] open fun performResume () performSaveInstanceState [androidJvm] open fun performSaveInstanceState (p0: Bundle ) performStart [androidJvm] open fun performStart () performStop [androidJvm] open fun performStop () performViewCreated [androidJvm] open fun performViewCreated () postponeEnterTransition [androidJvm] open fun postponeEnterTransition () fun postponeEnterTransition (p0: Long , @ NonNull p1: TimeUnit ) registerForActivityResult [androidJvm] @ MainThread @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull p0: ActivityResultContract < I , O >, @ NonNull p1: ActivityResultCallback < O >): ActivityResultLauncher < I > @ MainThread @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull p0: ActivityResultContract < I , O >, @ NonNull p1: ActivityResultRegistry , @ NonNull p2: ActivityResultCallback < O >): ActivityResultLauncher < I > registerForContextMenu [androidJvm] open fun registerForContextMenu (@ NonNull p0: View ) requireActivity [androidJvm] @ NonNull fun requireActivity (): FragmentActivity requireArguments [androidJvm] @ NonNull fun requireArguments (): Bundle requireContext [androidJvm] @ NonNull fun requireContext (): Context requireHost [androidJvm] @ NonNull fun requireHost (): Any requireParentFragment [androidJvm] @ NonNull fun requireParentFragment (): Fragment requireView [androidJvm] @ NonNull fun requireView (): View restoreChildFragmentState [androidJvm] open fun restoreChildFragmentState (@ Nullable p0: Bundle ?) restoreViewState [androidJvm] fun restoreViewState (p0: Bundle ) setAllowEnterTransitionOverlap [androidJvm] open fun setAllowEnterTransitionOverlap (p0: Boolean ) setAllowReturnTransitionOverlap [androidJvm] open fun setAllowReturnTransitionOverlap (p0: Boolean ) setAnimatingAway [androidJvm] open fun setAnimatingAway (p0: View ) setAnimations [androidJvm] open fun setAnimations (p0: Int , p1: Int , p2: Int , p3: Int ) setAnimator [androidJvm] open fun setAnimator (p0: Animator ) setArguments [androidJvm] open fun setArguments (@ Nullable p0: Bundle ?) setEnterSharedElementCallback [androidJvm] open fun setEnterSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setEnterTransition [androidJvm] open fun setEnterTransition (@ Nullable p0: Any ?) setExitSharedElementCallback [androidJvm] open fun setExitSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setExitTransition [androidJvm] open fun setExitTransition (@ Nullable p0: Any ?) setFocusedView [androidJvm] open fun setFocusedView (p0: View ) setHasOptionsMenu [androidJvm] open fun setHasOptionsMenu (p0: Boolean ) setHideReplaced [androidJvm] open fun setHideReplaced (p0: Boolean ) setInitialSavedState [androidJvm] open fun setInitialSavedState (@ Nullable p0: Fragment.SavedState ?) setMenuVisibility [androidJvm] open fun setMenuVisibility (p0: Boolean ) setNextTransition [androidJvm] open fun setNextTransition (p0: Int ) setOnStartEnterTransitionListener [androidJvm] open fun setOnStartEnterTransitionListener (p0: Fragment.OnStartEnterTransitionListener ) setPopDirection [androidJvm] open fun setPopDirection (p0: Boolean ) setPostOnViewCreatedAlpha [androidJvm] open fun setPostOnViewCreatedAlpha (p0: Float ) setReenterTransition [androidJvm] open fun setReenterTransition (@ Nullable p0: Any ?) setReturnTransition [androidJvm] open fun setReturnTransition (@ Nullable p0: Any ?) setSharedElementEnterTransition [androidJvm] open fun setSharedElementEnterTransition (@ Nullable p0: Any ?) setSharedElementNames [androidJvm] open fun setSharedElementNames (@ Nullable p0: ArrayList < String >?, @ Nullable p1: ArrayList < String >?) setSharedElementReturnTransition [androidJvm] open fun setSharedElementReturnTransition (@ Nullable p0: Any ?) shouldShowRequestPermissionRationale [androidJvm] open fun shouldShowRequestPermissionRationale (@ NonNull p0: String ): Boolean startActivity [androidJvm] open fun startActivity (p0: Intent ) open fun startActivity (p0: Intent , @ Nullable p1: Bundle ?) startPostponedEnterTransition [androidJvm] open fun startPostponedEnterTransition () toString [androidJvm] @ NonNull open override fun toString (): String unregisterForContextMenu [androidJvm] open fun unregisterForContextMenu (@ NonNull p0: View )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-f-x-l-page-fragment/#properties","text":"Name Summary mAdded [androidJvm] val mAdded : Boolean mAnimationInfo [androidJvm] val mAnimationInfo : Fragment.AnimationInfo mArguments [androidJvm] val mArguments : Bundle mBackStackNesting [androidJvm] val mBackStackNesting : Int mChildFragmentManager [androidJvm] @ NonNull val mChildFragmentManager : FragmentManager mContainer [androidJvm] val mContainer : ViewGroup mContainerId [androidJvm] val mContainerId : Int mDefaultFactory [androidJvm] val mDefaultFactory : ViewModelProvider.Factory mDeferStart [androidJvm] val mDeferStart : Boolean mDetached [androidJvm] val mDetached : Boolean mFragmentId [androidJvm] val mFragmentId : Int mFragmentManager [androidJvm] val mFragmentManager : FragmentManager mFromLayout [androidJvm] val mFromLayout : Boolean mHasMenu [androidJvm] val mHasMenu : Boolean mHidden [androidJvm] val mHidden : Boolean mHiddenChanged [androidJvm] val mHiddenChanged : Boolean mHost [androidJvm] val mHost : FragmentHostCallback <*> mInLayout [androidJvm] val mInLayout : Boolean mIsCreated [androidJvm] val mIsCreated : Boolean mIsNewlyAdded [androidJvm] val mIsNewlyAdded : Boolean mLayoutInflater [androidJvm] val mLayoutInflater : LayoutInflater mLifecycleRegistry [androidJvm] val mLifecycleRegistry : LifecycleRegistry mMaxState [androidJvm] val mMaxState : Lifecycle.State mMenuVisible [androidJvm] val mMenuVisible : Boolean mParentFragment [androidJvm] val mParentFragment : Fragment mPerformedCreateView [androidJvm] val mPerformedCreateView : Boolean mPostponedAlpha [androidJvm] val mPostponedAlpha : Float mPostponedDurationRunnable [androidJvm] val mPostponedDurationRunnable : Runnable mRemoving [androidJvm] val mRemoving : Boolean mRestored [androidJvm] val mRestored : Boolean mRetainInstance [androidJvm] val mRetainInstance : Boolean mRetainInstanceChangedWhileDetached [androidJvm] val mRetainInstanceChangedWhileDetached : Boolean mSavedFragmentState [androidJvm] val mSavedFragmentState : Bundle mSavedStateRegistryController [androidJvm] val mSavedStateRegistryController : SavedStateRegistryController mSavedUserVisibleHint [androidJvm] @ Nullable val mSavedUserVisibleHint : Boolean ? mSavedViewRegistryState [androidJvm] val mSavedViewRegistryState : Bundle mSavedViewState [androidJvm] val mSavedViewState : SparseArray < Parcelable > mState [androidJvm] val mState : Int mTag [androidJvm] val mTag : String mTarget [androidJvm] val mTarget : Fragment mTargetRequestCode [androidJvm] val mTargetRequestCode : Int mTargetWho [androidJvm] val mTargetWho : String mUserVisibleHint [androidJvm] val mUserVisibleHint : Boolean mView [androidJvm] val mView : View mViewLifecycleOwner [androidJvm] @ Nullable val mViewLifecycleOwner : FragmentViewLifecycleOwner ? mViewLifecycleOwnerLiveData [androidJvm] val mViewLifecycleOwnerLiveData : MutableLiveData < LifecycleOwner > mWho [androidJvm] @ NonNull val mWho : String","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-f-x-l-page-fragment/-r2-f-x-l-page-fragment/","text":"// navigator / org.readium.r2.navigator.pager / R2FXLPageFragment / R2FXLPageFragment R2FXLPageFragment \u00b6 [androidJvm]\\ fun R2FXLPageFragment ()","title":" r2 f x l page fragment"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-f-x-l-page-fragment/-r2-f-x-l-page-fragment/#r2fxlpagefragment","text":"[androidJvm]\\ fun R2FXLPageFragment ()","title":"R2FXLPageFragment"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-f-x-l-page-fragment/on-create-view/","text":"// navigator / org.readium.r2.navigator.pager / R2FXLPageFragment / onCreateView onCreateView \u00b6 [androidJvm]\\ open override fun onCreateView (inflater: LayoutInflater , container: ViewGroup ?, savedInstanceState: Bundle ?): View ?","title":"On create view"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-f-x-l-page-fragment/on-create-view/#oncreateview","text":"[androidJvm]\\ open override fun onCreateView (inflater: LayoutInflater , container: ViewGroup ?, savedInstanceState: Bundle ?): View ?","title":"onCreateView"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-f-x-l-page-fragment/on-destroy-view/","text":"// navigator / org.readium.r2.navigator.pager / R2FXLPageFragment / onDestroyView onDestroyView \u00b6 [androidJvm]\\ open override fun onDestroyView ()","title":"On destroy view"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-f-x-l-page-fragment/on-destroy-view/#ondestroyview","text":"[androidJvm]\\ open override fun onDestroyView ()","title":"onDestroyView"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-f-x-l-page-fragment/on-detach/","text":"// navigator / org.readium.r2.navigator.pager / R2FXLPageFragment / onDetach onDetach \u00b6 [androidJvm]\\ open override fun onDetach ()","title":"On detach"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-f-x-l-page-fragment/on-detach/#ondetach","text":"[androidJvm]\\ open override fun onDetach ()","title":"onDetach"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-f-x-l-page-fragment/-companion/","text":"// navigator / org.readium.r2.navigator.pager / R2FXLPageFragment / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary newInstance [androidJvm] fun newInstance (url: String , url2: String ? = null): R2FXLPageFragment","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-f-x-l-page-fragment/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-f-x-l-page-fragment/-companion/#functions","text":"Name Summary newInstance [androidJvm] fun newInstance (url: String , url2: String ? = null): R2FXLPageFragment","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-f-x-l-page-fragment/-companion/new-instance/","text":"// navigator / org.readium.r2.navigator.pager / R2FXLPageFragment / Companion / newInstance newInstance \u00b6 [androidJvm]\\ fun newInstance (url: String , url2: String ? = null): R2FXLPageFragment","title":"New instance"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-f-x-l-page-fragment/-companion/new-instance/#newinstance","text":"[androidJvm]\\ fun newInstance (url: String , url2: String ? = null): R2FXLPageFragment","title":"newInstance"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/","text":"// navigator / org.readium.r2.navigator.pager / R2FragmentPagerAdapter R2FragmentPagerAdapter \u00b6 [androidJvm]\\ abstract class R2FragmentPagerAdapter (mFragmentManager: FragmentManager ) : FragmentStatePagerAdapter Functions \u00b6 Name Summary destroyItem [androidJvm] open override fun destroyItem (container: ViewGroup , position: Int , object: Any ) finishUpdate [androidJvm] open override fun finishUpdate (container: ViewGroup ) getCount [androidJvm] abstract fun getCount (): Int getItem [androidJvm] abstract override fun getItem (position: Int ): Fragment getItemId [androidJvm] fun getItemId (position: Int ): Long getItemPosition [androidJvm] open fun getItemPosition (@ NonNull p0: Any ): Int getPageTitle [androidJvm] @ Nullable open fun getPageTitle (p0: Int ): CharSequence ? getPageWidth [androidJvm] open fun getPageWidth (p0: Int ): Float instantiateItem [androidJvm] open override fun instantiateItem (container: ViewGroup , position: Int ): Any isViewFromObject [androidJvm] open override fun isViewFromObject (view: View , object: Any ): Boolean notifyDataSetChanged [androidJvm] open fun notifyDataSetChanged () registerDataSetObserver [androidJvm] open fun registerDataSetObserver (@ NonNull p0: DataSetObserver ) restoreState [androidJvm] open override fun restoreState (state: Parcelable ?, loader: ClassLoader ?) saveState [androidJvm] open override fun saveState (): Parcelable ? setPrimaryItem [androidJvm] open override fun setPrimaryItem (container: ViewGroup , position: Int , object: Any ) setViewPagerObserver [androidJvm] open fun setViewPagerObserver (p0: DataSetObserver ) startUpdate [androidJvm] open override fun startUpdate (container: ViewGroup ) unregisterDataSetObserver [androidJvm] open fun unregisterDataSetObserver (@ NonNull p0: DataSetObserver ) Properties \u00b6 Name Summary mFragments [androidJvm] val mFragments : LongSparseArray < Fragment > Inheritors \u00b6 Name R2PagerAdapter","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/#r2fragmentpageradapter","text":"[androidJvm]\\ abstract class R2FragmentPagerAdapter (mFragmentManager: FragmentManager ) : FragmentStatePagerAdapter","title":"R2FragmentPagerAdapter"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/#functions","text":"Name Summary destroyItem [androidJvm] open override fun destroyItem (container: ViewGroup , position: Int , object: Any ) finishUpdate [androidJvm] open override fun finishUpdate (container: ViewGroup ) getCount [androidJvm] abstract fun getCount (): Int getItem [androidJvm] abstract override fun getItem (position: Int ): Fragment getItemId [androidJvm] fun getItemId (position: Int ): Long getItemPosition [androidJvm] open fun getItemPosition (@ NonNull p0: Any ): Int getPageTitle [androidJvm] @ Nullable open fun getPageTitle (p0: Int ): CharSequence ? getPageWidth [androidJvm] open fun getPageWidth (p0: Int ): Float instantiateItem [androidJvm] open override fun instantiateItem (container: ViewGroup , position: Int ): Any isViewFromObject [androidJvm] open override fun isViewFromObject (view: View , object: Any ): Boolean notifyDataSetChanged [androidJvm] open fun notifyDataSetChanged () registerDataSetObserver [androidJvm] open fun registerDataSetObserver (@ NonNull p0: DataSetObserver ) restoreState [androidJvm] open override fun restoreState (state: Parcelable ?, loader: ClassLoader ?) saveState [androidJvm] open override fun saveState (): Parcelable ? setPrimaryItem [androidJvm] open override fun setPrimaryItem (container: ViewGroup , position: Int , object: Any ) setViewPagerObserver [androidJvm] open fun setViewPagerObserver (p0: DataSetObserver ) startUpdate [androidJvm] open override fun startUpdate (container: ViewGroup ) unregisterDataSetObserver [androidJvm] open fun unregisterDataSetObserver (@ NonNull p0: DataSetObserver )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/#properties","text":"Name Summary mFragments [androidJvm] val mFragments : LongSparseArray < Fragment >","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/#inheritors","text":"Name R2PagerAdapter","title":"Inheritors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/-r2-fragment-pager-adapter/","text":"// navigator / org.readium.r2.navigator.pager / R2FragmentPagerAdapter / R2FragmentPagerAdapter R2FragmentPagerAdapter \u00b6 [androidJvm]\\ fun R2FragmentPagerAdapter (mFragmentManager: FragmentManager )","title":" r2 fragment pager adapter"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/-r2-fragment-pager-adapter/#r2fragmentpageradapter","text":"[androidJvm]\\ fun R2FragmentPagerAdapter (mFragmentManager: FragmentManager )","title":"R2FragmentPagerAdapter"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/destroy-item/","text":"// navigator / org.readium.r2.navigator.pager / R2FragmentPagerAdapter / destroyItem destroyItem \u00b6 [androidJvm]\\ open override fun destroyItem (container: ViewGroup , position: Int , object: Any )","title":"Destroy item"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/destroy-item/#destroyitem","text":"[androidJvm]\\ open override fun destroyItem (container: ViewGroup , position: Int , object: Any )","title":"destroyItem"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/finish-update/","text":"// navigator / org.readium.r2.navigator.pager / R2FragmentPagerAdapter / finishUpdate finishUpdate \u00b6 [androidJvm]\\ open override fun finishUpdate (container: ViewGroup )","title":"Finish update"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/finish-update/#finishupdate","text":"[androidJvm]\\ open override fun finishUpdate (container: ViewGroup )","title":"finishUpdate"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/get-item-id/","text":"// navigator / org.readium.r2.navigator.pager / R2FragmentPagerAdapter / getItemId getItemId \u00b6 [androidJvm]\\ fun getItemId (position: Int ): Long","title":"Get item id"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/get-item-id/#getitemid","text":"[androidJvm]\\ fun getItemId (position: Int ): Long","title":"getItemId"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/get-item/","text":"// navigator / org.readium.r2.navigator.pager / R2FragmentPagerAdapter / getItem getItem \u00b6 [androidJvm]\\ abstract override fun getItem (position: Int ): Fragment","title":"Get item"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/get-item/#getitem","text":"[androidJvm]\\ abstract override fun getItem (position: Int ): Fragment","title":"getItem"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/instantiate-item/","text":"// navigator / org.readium.r2.navigator.pager / R2FragmentPagerAdapter / instantiateItem instantiateItem \u00b6 [androidJvm]\\ open override fun instantiateItem (container: ViewGroup , position: Int ): Any","title":"Instantiate item"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/instantiate-item/#instantiateitem","text":"[androidJvm]\\ open override fun instantiateItem (container: ViewGroup , position: Int ): Any","title":"instantiateItem"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/is-view-from-object/","text":"// navigator / org.readium.r2.navigator.pager / R2FragmentPagerAdapter / isViewFromObject isViewFromObject \u00b6 [androidJvm]\\ open override fun isViewFromObject (view: View , object: Any ): Boolean","title":"Is view from object"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/is-view-from-object/#isviewfromobject","text":"[androidJvm]\\ open override fun isViewFromObject (view: View , object: Any ): Boolean","title":"isViewFromObject"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/m-fragments/","text":"// navigator / org.readium.r2.navigator.pager / R2FragmentPagerAdapter / mFragments mFragments \u00b6 [androidJvm]\\ val mFragments : LongSparseArray < Fragment >","title":"M fragments"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/m-fragments/#mfragments","text":"[androidJvm]\\ val mFragments : LongSparseArray < Fragment >","title":"mFragments"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/restore-state/","text":"// navigator / org.readium.r2.navigator.pager / R2FragmentPagerAdapter / restoreState restoreState \u00b6 [androidJvm]\\ open override fun restoreState (state: Parcelable ?, loader: ClassLoader ?)","title":"Restore state"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/restore-state/#restorestate","text":"[androidJvm]\\ open override fun restoreState (state: Parcelable ?, loader: ClassLoader ?)","title":"restoreState"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/save-state/","text":"// navigator / org.readium.r2.navigator.pager / R2FragmentPagerAdapter / saveState saveState \u00b6 [androidJvm]\\ open override fun saveState (): Parcelable ?","title":"Save state"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/save-state/#savestate","text":"[androidJvm]\\ open override fun saveState (): Parcelable ?","title":"saveState"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/set-primary-item/","text":"// navigator / org.readium.r2.navigator.pager / R2FragmentPagerAdapter / setPrimaryItem setPrimaryItem \u00b6 [androidJvm]\\ open override fun setPrimaryItem (container: ViewGroup , position: Int , object: Any )","title":"Set primary item"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/set-primary-item/#setprimaryitem","text":"[androidJvm]\\ open override fun setPrimaryItem (container: ViewGroup , position: Int , object: Any )","title":"setPrimaryItem"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/start-update/","text":"// navigator / org.readium.r2.navigator.pager / R2FragmentPagerAdapter / startUpdate startUpdate \u00b6 [androidJvm]\\ open override fun startUpdate (container: ViewGroup )","title":"Start update"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-fragment-pager-adapter/start-update/#startupdate","text":"[androidJvm]\\ open override fun startUpdate (container: ViewGroup )","title":"startUpdate"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-pager-adapter/","text":"// navigator / org.readium.r2.navigator.pager / R2PagerAdapter R2PagerAdapter \u00b6 [androidJvm]\\ class R2PagerAdapter : R2FragmentPagerAdapter Functions \u00b6 Name Summary destroyItem [androidJvm] open override fun destroyItem (container: ViewGroup , position: Int , object: Any ) finishUpdate [androidJvm] open override fun finishUpdate (container: ViewGroup ) getCount [androidJvm] open override fun getCount (): Int getCurrentFragment [androidJvm] fun getCurrentFragment (): Fragment ? getItem [androidJvm] open override fun getItem (position: Int ): Fragment getItemId [androidJvm] fun getItemId (position: Int ): Long getItemPosition [androidJvm] open fun getItemPosition (@ NonNull p0: Any ): Int getNextFragment [androidJvm] fun getNextFragment (): Fragment ? getPageTitle [androidJvm] @ Nullable open fun getPageTitle (p0: Int ): CharSequence ? getPageWidth [androidJvm] open fun getPageWidth (p0: Int ): Float getPreviousFragment [androidJvm] fun getPreviousFragment (): Fragment ? instantiateItem [androidJvm] open override fun instantiateItem (container: ViewGroup , position: Int ): Any isViewFromObject [androidJvm] open override fun isViewFromObject (view: View , object: Any ): Boolean notifyDataSetChanged [androidJvm] open fun notifyDataSetChanged () registerDataSetObserver [androidJvm] open fun registerDataSetObserver (@ NonNull p0: DataSetObserver ) restoreState [androidJvm] open override fun restoreState (state: Parcelable ?, loader: ClassLoader ?) saveState [androidJvm] open override fun saveState (): Parcelable ? setPrimaryItem [androidJvm] open override fun setPrimaryItem (container: ViewGroup , position: Int , object: Any ) setViewPagerObserver [androidJvm] open fun setViewPagerObserver (p0: DataSetObserver ) startUpdate [androidJvm] open override fun startUpdate (container: ViewGroup ) unregisterDataSetObserver [androidJvm] open fun unregisterDataSetObserver (@ NonNull p0: DataSetObserver ) Properties \u00b6 Name Summary fm [androidJvm] val fm : FragmentManager mFragments [androidJvm] val mFragments : LongSparseArray < Fragment >","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-pager-adapter/#r2pageradapter","text":"[androidJvm]\\ class R2PagerAdapter : R2FragmentPagerAdapter","title":"R2PagerAdapter"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-pager-adapter/#functions","text":"Name Summary destroyItem [androidJvm] open override fun destroyItem (container: ViewGroup , position: Int , object: Any ) finishUpdate [androidJvm] open override fun finishUpdate (container: ViewGroup ) getCount [androidJvm] open override fun getCount (): Int getCurrentFragment [androidJvm] fun getCurrentFragment (): Fragment ? getItem [androidJvm] open override fun getItem (position: Int ): Fragment getItemId [androidJvm] fun getItemId (position: Int ): Long getItemPosition [androidJvm] open fun getItemPosition (@ NonNull p0: Any ): Int getNextFragment [androidJvm] fun getNextFragment (): Fragment ? getPageTitle [androidJvm] @ Nullable open fun getPageTitle (p0: Int ): CharSequence ? getPageWidth [androidJvm] open fun getPageWidth (p0: Int ): Float getPreviousFragment [androidJvm] fun getPreviousFragment (): Fragment ? instantiateItem [androidJvm] open override fun instantiateItem (container: ViewGroup , position: Int ): Any isViewFromObject [androidJvm] open override fun isViewFromObject (view: View , object: Any ): Boolean notifyDataSetChanged [androidJvm] open fun notifyDataSetChanged () registerDataSetObserver [androidJvm] open fun registerDataSetObserver (@ NonNull p0: DataSetObserver ) restoreState [androidJvm] open override fun restoreState (state: Parcelable ?, loader: ClassLoader ?) saveState [androidJvm] open override fun saveState (): Parcelable ? setPrimaryItem [androidJvm] open override fun setPrimaryItem (container: ViewGroup , position: Int , object: Any ) setViewPagerObserver [androidJvm] open fun setViewPagerObserver (p0: DataSetObserver ) startUpdate [androidJvm] open override fun startUpdate (container: ViewGroup ) unregisterDataSetObserver [androidJvm] open fun unregisterDataSetObserver (@ NonNull p0: DataSetObserver )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-pager-adapter/#properties","text":"Name Summary fm [androidJvm] val fm : FragmentManager mFragments [androidJvm] val mFragments : LongSparseArray < Fragment >","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-pager-adapter/fm/","text":"// navigator / org.readium.r2.navigator.pager / R2PagerAdapter / fm fm \u00b6 [androidJvm]\\ val fm : FragmentManager","title":"Fm"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-pager-adapter/fm/#fm","text":"[androidJvm]\\ val fm : FragmentManager","title":"fm"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-pager-adapter/get-count/","text":"// navigator / org.readium.r2.navigator.pager / R2PagerAdapter / getCount getCount \u00b6 [androidJvm]\\ open override fun getCount (): Int","title":"Get count"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-pager-adapter/get-count/#getcount","text":"[androidJvm]\\ open override fun getCount (): Int","title":"getCount"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-pager-adapter/get-current-fragment/","text":"// navigator / org.readium.r2.navigator.pager / R2PagerAdapter / getCurrentFragment getCurrentFragment \u00b6 [androidJvm]\\ fun getCurrentFragment (): Fragment ?","title":"Get current fragment"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-pager-adapter/get-current-fragment/#getcurrentfragment","text":"[androidJvm]\\ fun getCurrentFragment (): Fragment ?","title":"getCurrentFragment"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-pager-adapter/get-item/","text":"// navigator / org.readium.r2.navigator.pager / R2PagerAdapter / getItem getItem \u00b6 [androidJvm]\\ open override fun getItem (position: Int ): Fragment","title":"Get item"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-pager-adapter/get-item/#getitem","text":"[androidJvm]\\ open override fun getItem (position: Int ): Fragment","title":"getItem"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-pager-adapter/get-next-fragment/","text":"// navigator / org.readium.r2.navigator.pager / R2PagerAdapter / getNextFragment getNextFragment \u00b6 [androidJvm]\\ fun getNextFragment (): Fragment ?","title":"Get next fragment"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-pager-adapter/get-next-fragment/#getnextfragment","text":"[androidJvm]\\ fun getNextFragment (): Fragment ?","title":"getNextFragment"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-pager-adapter/get-previous-fragment/","text":"// navigator / org.readium.r2.navigator.pager / R2PagerAdapter / getPreviousFragment getPreviousFragment \u00b6 [androidJvm]\\ fun getPreviousFragment (): Fragment ?","title":"Get previous fragment"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-pager-adapter/get-previous-fragment/#getpreviousfragment","text":"[androidJvm]\\ fun getPreviousFragment (): Fragment ?","title":"getPreviousFragment"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-pager-adapter/set-primary-item/","text":"// navigator / org.readium.r2.navigator.pager / R2PagerAdapter / setPrimaryItem setPrimaryItem \u00b6 [androidJvm]\\ open override fun setPrimaryItem (container: ViewGroup , position: Int , object: Any )","title":"Set primary item"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-pager-adapter/set-primary-item/#setprimaryitem","text":"[androidJvm]\\ open override fun setPrimaryItem (container: ViewGroup , position: Int , object: Any )","title":"setPrimaryItem"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/","text":"// navigator / org.readium.r2.navigator.pager / R2RTLViewPager R2RTLViewPager \u00b6 [androidJvm]\\ open class R2RTLViewPager : ViewPager RtlViewPager is an API-compatible implementation of ViewPager which orders paged views according to the layout direction of the view. In left to right mode, the first view is at the left side of the carousel, and in right to left mode it is at the right side. It accomplishes this by wrapping the provided PagerAdapter and any provided OnPageChangeListeners so that clients can be agnostic to layout direction and modifications are kept internal to RtlViewPager. Constructors \u00b6 R2RTLViewPager [androidJvm] open fun R2RTLViewPager (context: Context ) R2RTLViewPager [androidJvm] open fun R2RTLViewPager (context: Context , attrs: AttributeSet ) Types \u00b6 Name Summary SavedState [androidJvm] open class SavedState : Parcelable Functions \u00b6 Name Summary addChildrenForAccessibility [androidJvm] open fun addChildrenForAccessibility (outChildren: ArrayList < View >) addExtraDataToAccessibilityNodeInfo [androidJvm] open fun addExtraDataToAccessibilityNodeInfo (info: AccessibilityNodeInfo , extraDataKey: String , arguments: Bundle ) addFocusables [androidJvm] open fun addFocusables (views: ArrayList < View >, direction: Int , focusableMode: Int ) addKeyboardNavigationClusters [androidJvm] open fun addKeyboardNavigationClusters (views: Collection < View >, direction: Int ) addOnAdapterChangeListener [androidJvm] open fun addOnAdapterChangeListener (listener: ViewPager.OnAdapterChangeListener ) addOnAttachStateChangeListener [androidJvm] open fun addOnAttachStateChangeListener (listener: View.OnAttachStateChangeListener ) addOnLayoutChangeListener [androidJvm] open fun addOnLayoutChangeListener (listener: View.OnLayoutChangeListener ) addOnPageChangeListener [androidJvm] open fun addOnPageChangeListener (listener: ViewPager.OnPageChangeListener ) addOnUnhandledKeyEventListener [androidJvm] open fun addOnUnhandledKeyEventListener (listener: View.OnUnhandledKeyEventListener ) addStatesFromChildren [androidJvm] open fun addStatesFromChildren (): Boolean addTouchables [androidJvm] open fun addTouchables (views: ArrayList < View >) addView [androidJvm] open fun addView (child: View , index: Int , params: ViewGroup.LayoutParams ) animate [androidJvm] open fun animate (): ViewPropertyAnimator announceForAccessibility [androidJvm] open fun announceForAccessibility (text: CharSequence ) arrowScroll [androidJvm] open fun arrowScroll (direction: Int ): Boolean autofill [androidJvm] open fun autofill (value: AutofillValue ) beginFakeDrag [androidJvm] open fun beginFakeDrag (): Boolean bringChildToFront [androidJvm] open fun bringChildToFront (child: View ) bringToFront [androidJvm] open fun bringToFront () buildDrawingCache [androidJvm] open fun buildDrawingCache () buildLayer [androidJvm] open fun buildLayer () callOnClick [androidJvm] open fun callOnClick (): Boolean cancelDragAndDrop [androidJvm] fun cancelDragAndDrop () cancelLongPress [androidJvm] open fun cancelLongPress () cancelPendingInputEvents [androidJvm] fun cancelPendingInputEvents () canResolveLayoutDirection [androidJvm] open fun canResolveLayoutDirection (): Boolean canResolveTextAlignment [androidJvm] open fun canResolveTextAlignment (): Boolean canResolveTextDirection [androidJvm] open fun canResolveTextDirection (): Boolean canScrollHorizontally [androidJvm] open fun canScrollHorizontally (direction: Int ): Boolean canScrollVertically [androidJvm] open fun canScrollVertically (direction: Int ): Boolean checkInputConnectionProxy [androidJvm] open fun checkInputConnectionProxy (view: View ): Boolean childDrawableStateChanged [androidJvm] open fun childDrawableStateChanged (child: View ) childHasTransientStateChanged [androidJvm] open fun childHasTransientStateChanged (child: View , childHasTransientState: Boolean ) clearAnimation [androidJvm] open fun clearAnimation () clearChildFocus [androidJvm] open fun clearChildFocus (child: View ) clearDisappearingChildren [androidJvm] open fun clearDisappearingChildren () clearFocus [androidJvm] open fun clearFocus () clearOnPageChangeListeners [androidJvm] open fun clearOnPageChangeListeners () clearViewTranslationCallback [androidJvm] open fun clearViewTranslationCallback () combineMeasuredStates [androidJvm] open fun combineMeasuredStates (curState: Int , newState: Int ): Int computeScroll [androidJvm] open fun computeScroll () computeSystemWindowInsets [androidJvm] open fun computeSystemWindowInsets (in: WindowInsets , outLocalInsets: Rect ): WindowInsets createAccessibilityNodeInfo [androidJvm] open fun createAccessibilityNodeInfo (): AccessibilityNodeInfo createContextMenu [androidJvm] open fun createContextMenu (menu: ContextMenu ) destroyDrawingCache [androidJvm] open fun destroyDrawingCache () dispatchApplyWindowInsets [androidJvm] open fun dispatchApplyWindowInsets (insets: WindowInsets ): WindowInsets dispatchCapturedPointerEvent [androidJvm] open fun dispatchCapturedPointerEvent (event: MotionEvent ): Boolean dispatchConfigurationChanged [androidJvm] open fun dispatchConfigurationChanged (newConfig: Configuration ) dispatchCreateViewTranslationRequest [androidJvm] open fun dispatchCreateViewTranslationRequest (viewIds: Map < AutofillId , Array < Long >>, supportedFormats: Array < Int >, capability: TranslationCapability , requests: List < ViewTranslationRequest >) dispatchDisplayHint [androidJvm] open fun dispatchDisplayHint (hint: Int ) dispatchDragEvent [androidJvm] open fun dispatchDragEvent (event: DragEvent ): Boolean dispatchDrawableHotspotChanged [androidJvm] open fun dispatchDrawableHotspotChanged (x: Float , y: Float ) dispatchFinishTemporaryDetach [androidJvm] open fun dispatchFinishTemporaryDetach () dispatchGenericMotionEvent [androidJvm] open fun dispatchGenericMotionEvent (event: MotionEvent ): Boolean dispatchKeyEvent [androidJvm] open fun dispatchKeyEvent (event: KeyEvent ): Boolean dispatchKeyEventPreIme [androidJvm] open fun dispatchKeyEventPreIme (event: KeyEvent ): Boolean dispatchKeyShortcutEvent [androidJvm] open fun dispatchKeyShortcutEvent (event: KeyEvent ): Boolean dispatchNestedFling [androidJvm] open fun dispatchNestedFling (velocityX: Float , velocityY: Float , consumed: Boolean ): Boolean dispatchNestedPreFling [androidJvm] open fun dispatchNestedPreFling (velocityX: Float , velocityY: Float ): Boolean dispatchNestedPrePerformAccessibilityAction [androidJvm] open fun dispatchNestedPrePerformAccessibilityAction (action: Int , arguments: Bundle ): Boolean dispatchNestedPreScroll [androidJvm] open fun dispatchNestedPreScroll (dx: Int , dy: Int , consumed: Array < Int >, offsetInWindow: Array < Int >): Boolean dispatchNestedScroll [androidJvm] open fun dispatchNestedScroll (dxConsumed: Int , dyConsumed: Int , dxUnconsumed: Int , dyUnconsumed: Int , offsetInWindow: Array < Int >): Boolean dispatchPointerCaptureChanged [androidJvm] open fun dispatchPointerCaptureChanged (hasCapture: Boolean ) dispatchPopulateAccessibilityEvent [androidJvm] open fun dispatchPopulateAccessibilityEvent (event: AccessibilityEvent ): Boolean dispatchProvideAutofillStructure [androidJvm] open fun dispatchProvideAutofillStructure (structure: ViewStructure , flags: Int ) dispatchProvideStructure [androidJvm] open fun dispatchProvideStructure (structure: ViewStructure ) dispatchScrollCaptureSearch [androidJvm] open fun dispatchScrollCaptureSearch (localVisibleRect: Rect , windowOffset: Point , targets: Consumer < ScrollCaptureTarget >) dispatchSetActivated [androidJvm] open fun dispatchSetActivated (activated: Boolean ) dispatchSetSelected [androidJvm] open fun dispatchSetSelected (selected: Boolean ) dispatchStartTemporaryDetach [androidJvm] open fun dispatchStartTemporaryDetach () dispatchSystemUiVisibilityChanged [androidJvm] open fun dispatchSystemUiVisibilityChanged (visible: Int ) dispatchTouchEvent [androidJvm] open fun dispatchTouchEvent (ev: MotionEvent ): Boolean dispatchTrackballEvent [androidJvm] open fun dispatchTrackballEvent (event: MotionEvent ): Boolean dispatchUnhandledMove [androidJvm] open fun dispatchUnhandledMove (focused: View , direction: Int ): Boolean dispatchWindowFocusChanged [androidJvm] open fun dispatchWindowFocusChanged (hasFocus: Boolean ) dispatchWindowInsetsAnimationEnd [androidJvm] open fun dispatchWindowInsetsAnimationEnd (animation: WindowInsetsAnimation ) dispatchWindowInsetsAnimationPrepare [androidJvm] open fun dispatchWindowInsetsAnimationPrepare (animation: WindowInsetsAnimation ) dispatchWindowInsetsAnimationProgress [androidJvm] open fun dispatchWindowInsetsAnimationProgress (insets: WindowInsets , runningAnimations: List < WindowInsetsAnimation >): WindowInsets dispatchWindowInsetsAnimationStart [androidJvm] open fun dispatchWindowInsetsAnimationStart (animation: WindowInsetsAnimation , bounds: WindowInsetsAnimation.Bounds ): WindowInsetsAnimation.Bounds dispatchWindowSystemUiVisiblityChanged [androidJvm] open fun dispatchWindowSystemUiVisiblityChanged (visible: Int ) dispatchWindowVisibilityChanged [androidJvm] open fun dispatchWindowVisibilityChanged (visibility: Int ) draw [androidJvm] open fun draw (canvas: Canvas ) drawableHotspotChanged [androidJvm] open fun drawableHotspotChanged (x: Float , y: Float ) endFakeDrag [androidJvm] open fun endFakeDrag () endViewTransition [androidJvm] open fun endViewTransition (view: View ) executeKeyEvent [androidJvm] open fun executeKeyEvent (event: KeyEvent ): Boolean fakeDragBy [androidJvm] open fun fakeDragBy (xOffset: Float ) findFocus [androidJvm] open fun findFocus (): View findViewById [androidJvm] fun < T : View ?> findViewById (id: Int ): T findViewsWithText [androidJvm] open fun findViewsWithText (outViews: ArrayList < View >, text: CharSequence , flags: Int ) findViewWithTag [androidJvm] fun < T : View ?> findViewWithTag (tag: Any ): T focusableViewAvailable [androidJvm] open fun focusableViewAvailable (v: View ) focusSearch [androidJvm] open fun focusSearch (focused: View , direction: Int ): View forceHasOverlappingRendering [androidJvm] open fun forceHasOverlappingRendering (hasOverlappingRendering: Boolean ) forceLayout [androidJvm] open fun forceLayout () gatherTransparentRegion [androidJvm] open fun gatherTransparentRegion (region: Region ): Boolean generateDisplayHash [androidJvm] open fun generateDisplayHash (hashAlgorithm: String , bounds: Rect , executor: Executor , callback: DisplayHashResultCallback ) generateViewId [androidJvm] open fun generateViewId (): Int getAccessibilityClassName [androidJvm] open fun getAccessibilityClassName (): CharSequence getAccessibilityDelegate [androidJvm] open fun getAccessibilityDelegate (): View.AccessibilityDelegate getAccessibilityLiveRegion [androidJvm] open fun getAccessibilityLiveRegion (): Int getAccessibilityNodeProvider [androidJvm] open fun getAccessibilityNodeProvider (): AccessibilityNodeProvider getAccessibilityPaneTitle [androidJvm] open fun getAccessibilityPaneTitle (): CharSequence getAccessibilityTraversalAfter [androidJvm] open fun getAccessibilityTraversalAfter (): Int getAccessibilityTraversalBefore [androidJvm] open fun getAccessibilityTraversalBefore (): Int getAdapter [androidJvm] open fun getAdapter (): PagerAdapter getAlpha [androidJvm] open fun getAlpha (): Float getAnimation [androidJvm] open fun getAnimation (): Animation getAnimationMatrix [androidJvm] open fun getAnimationMatrix (): Matrix getApplicationWindowToken [androidJvm] open fun getApplicationWindowToken (): IBinder getAttributeResolutionStack [androidJvm] open fun getAttributeResolutionStack (attribute: Int ): Array < Int > getAttributeSourceResourceMap [androidJvm] open fun getAttributeSourceResourceMap (): Map < Integer , Integer > getAutofillHints [androidJvm] open fun getAutofillHints (): Array < String > getAutofillId [androidJvm] fun getAutofillId (): AutofillId getAutofillType [androidJvm] open fun getAutofillType (): Int getAutofillValue [androidJvm] open fun getAutofillValue (): AutofillValue getBackground [androidJvm] open fun getBackground (): Drawable getBackgroundTintBlendMode [androidJvm] open fun getBackgroundTintBlendMode (): BlendMode getBackgroundTintList [androidJvm] open fun getBackgroundTintList (): ColorStateList getBackgroundTintMode [androidJvm] open fun getBackgroundTintMode (): PorterDuff.Mode getBaseline [androidJvm] open fun getBaseline (): Int getBottom [androidJvm] fun getBottom (): Int getCameraDistance [androidJvm] open fun getCameraDistance (): Float getChildAt [androidJvm] open fun getChildAt (index: Int ): View getChildCount [androidJvm] open fun getChildCount (): Int getChildMeasureSpec [androidJvm] open fun getChildMeasureSpec (spec: Int , padding: Int , childDimension: Int ): Int getChildVisibleRect [androidJvm] open fun getChildVisibleRect (child: View , r: Rect , offset: Point ): Boolean getClipBounds [androidJvm] open fun getClipBounds (): Rect open fun getClipBounds (outRect: Rect ): Boolean getClipChildren [androidJvm] open fun getClipChildren (): Boolean getClipToOutline [androidJvm] fun getClipToOutline (): Boolean getClipToPadding [androidJvm] open fun getClipToPadding (): Boolean getContentCaptureSession [androidJvm] fun getContentCaptureSession (): ContentCaptureSession getContentDescription [androidJvm] open fun getContentDescription (): CharSequence getContext [androidJvm] fun getContext (): Context getCurrentItem [androidJvm] open fun getCurrentItem (): Int getDefaultFocusHighlightEnabled [androidJvm] fun getDefaultFocusHighlightEnabled (): Boolean getDefaultSize [androidJvm] open fun getDefaultSize (size: Int , measureSpec: Int ): Int getDescendantFocusability [androidJvm] open fun getDescendantFocusability (): Int getDisplay [androidJvm] open fun getDisplay (): Display getDrawableState [androidJvm] fun getDrawableState (): Array < Int > getDrawingCache [androidJvm] open fun getDrawingCache (): Bitmap getDrawingCacheBackgroundColor [androidJvm] open fun getDrawingCacheBackgroundColor (): Int getDrawingCacheQuality [androidJvm] open fun getDrawingCacheQuality (): Int getDrawingRect [androidJvm] open fun getDrawingRect (outRect: Rect ) getDrawingTime [androidJvm] open fun getDrawingTime (): Long getElevation [androidJvm] open fun getElevation (): Float getExplicitStyle [androidJvm] open fun getExplicitStyle (): Int getFilterTouchesWhenObscured [androidJvm] open fun getFilterTouchesWhenObscured (): Boolean getFitsSystemWindows [androidJvm] open fun getFitsSystemWindows (): Boolean getFocusable [androidJvm] open fun getFocusable (): Int getFocusables [androidJvm] open fun getFocusables (direction: Int ): ArrayList < View > getFocusedChild [androidJvm] open fun getFocusedChild (): View getFocusedRect [androidJvm] open fun getFocusedRect (r: Rect ) getForeground [androidJvm] open fun getForeground (): Drawable getForegroundGravity [androidJvm] open fun getForegroundGravity (): Int getForegroundTintBlendMode [androidJvm] open fun getForegroundTintBlendMode (): BlendMode getForegroundTintList [androidJvm] open fun getForegroundTintList (): ColorStateList getForegroundTintMode [androidJvm] open fun getForegroundTintMode (): PorterDuff.Mode getGlobalVisibleRect [androidJvm] open fun getGlobalVisibleRect (r: Rect , globalOffset: Point ): Boolean getHandler [androidJvm] open fun getHandler (): Handler getHasOverlappingRendering [androidJvm] fun getHasOverlappingRendering (): Boolean getHeight [androidJvm] fun getHeight (): Int getHitRect [androidJvm] open fun getHitRect (outRect: Rect ) getHorizontalFadingEdgeLength [androidJvm] open fun getHorizontalFadingEdgeLength (): Int getHorizontalScrollbarThumbDrawable [androidJvm] open fun getHorizontalScrollbarThumbDrawable (): Drawable getHorizontalScrollbarTrackDrawable [androidJvm] open fun getHorizontalScrollbarTrackDrawable (): Drawable getId [androidJvm] open fun getId (): Int getImportantForAccessibility [androidJvm] open fun getImportantForAccessibility (): Int getImportantForAutofill [androidJvm] open fun getImportantForAutofill (): Int getImportantForContentCapture [androidJvm] open fun getImportantForContentCapture (): Int getKeepScreenOn [androidJvm] open fun getKeepScreenOn (): Boolean getKeyDispatcherState [androidJvm] open fun getKeyDispatcherState (): KeyEvent.DispatcherState getLabelFor [androidJvm] open fun getLabelFor (): Int getLayerType [androidJvm] open fun getLayerType (): Int getLayoutAnimation [androidJvm] open fun getLayoutAnimation (): LayoutAnimationController getLayoutAnimationListener [androidJvm] open fun getLayoutAnimationListener (): Animation.AnimationListener getLayoutDirection [androidJvm] open fun getLayoutDirection (): Int getLayoutMode [androidJvm] open fun getLayoutMode (): Int getLayoutParams [androidJvm] open fun getLayoutParams (): ViewGroup.LayoutParams getLayoutTransition [androidJvm] open fun getLayoutTransition (): LayoutTransition getLeft [androidJvm] fun getLeft (): Int getLocalVisibleRect [androidJvm] fun getLocalVisibleRect (r: Rect ): Boolean getLocationInSurface [androidJvm] open fun getLocationInSurface (location: Array < Int >) getLocationInWindow [androidJvm] open fun getLocationInWindow (outLocation: Array < Int >) getLocationOnScreen [androidJvm] open fun getLocationOnScreen (outLocation: Array < Int >) getMatrix [androidJvm] open fun getMatrix (): Matrix getMeasuredHeight [androidJvm] fun getMeasuredHeight (): Int getMeasuredHeightAndState [androidJvm] fun getMeasuredHeightAndState (): Int getMeasuredState [androidJvm] fun getMeasuredState (): Int getMeasuredWidth [androidJvm] fun getMeasuredWidth (): Int getMeasuredWidthAndState [androidJvm] fun getMeasuredWidthAndState (): Int getMinimumHeight [androidJvm] open fun getMinimumHeight (): Int getMinimumWidth [androidJvm] open fun getMinimumWidth (): Int getNestedScrollAxes [androidJvm] open fun getNestedScrollAxes (): Int getNextClusterForwardId [androidJvm] open fun getNextClusterForwardId (): Int getNextFocusDownId [androidJvm] open fun getNextFocusDownId (): Int getNextFocusForwardId [androidJvm] open fun getNextFocusForwardId (): Int getNextFocusLeftId [androidJvm] open fun getNextFocusLeftId (): Int getNextFocusRightId [androidJvm] open fun getNextFocusRightId (): Int getNextFocusUpId [androidJvm] open fun getNextFocusUpId (): Int getOffscreenPageLimit [androidJvm] open fun getOffscreenPageLimit (): Int getOnFocusChangeListener [androidJvm] open fun getOnFocusChangeListener (): View.OnFocusChangeListener getOutlineAmbientShadowColor [androidJvm] open fun getOutlineAmbientShadowColor (): Int getOutlineProvider [androidJvm] open fun getOutlineProvider (): ViewOutlineProvider getOutlineSpotShadowColor [androidJvm] open fun getOutlineSpotShadowColor (): Int getOverlay [androidJvm] open fun getOverlay (): ViewOverlay open fun getOverlay (): ViewGroupOverlay getOverScrollMode [androidJvm] open fun getOverScrollMode (): Int getPaddingBottom [androidJvm] open fun getPaddingBottom (): Int getPaddingEnd [androidJvm] open fun getPaddingEnd (): Int getPaddingLeft [androidJvm] open fun getPaddingLeft (): Int getPaddingRight [androidJvm] open fun getPaddingRight (): Int getPaddingStart [androidJvm] open fun getPaddingStart (): Int getPaddingTop [androidJvm] open fun getPaddingTop (): Int getPageMargin [androidJvm] open fun getPageMargin (): Int getParent [androidJvm] fun getParent (): ViewParent getParentForAccessibility [androidJvm] open fun getParentForAccessibility (): ViewParent getPersistentDrawingCache [androidJvm] open fun getPersistentDrawingCache (): Int getPivotX [androidJvm] open fun getPivotX (): Float getPivotY [androidJvm] open fun getPivotY (): Float getPointerIcon [androidJvm] open fun getPointerIcon (): PointerIcon getReceiveContentMimeTypes [androidJvm] open fun getReceiveContentMimeTypes (): Array < String > getResources [androidJvm] open fun getResources (): Resources getRevealOnFocusHint [androidJvm] fun getRevealOnFocusHint (): Boolean getRight [androidJvm] fun getRight (): Int getRootSurfaceControl [androidJvm] open fun getRootSurfaceControl (): AttachedSurfaceControl getRootView [androidJvm] open fun getRootView (): View getRootWindowInsets [androidJvm] open fun getRootWindowInsets (): WindowInsets getRotation [androidJvm] open fun getRotation (): Float getRotationX [androidJvm] open fun getRotationX (): Float getRotationY [androidJvm] open fun getRotationY (): Float getScaleX [androidJvm] open fun getScaleX (): Float getScaleY [androidJvm] open fun getScaleY (): Float getScrollBarDefaultDelayBeforeFade [androidJvm] open fun getScrollBarDefaultDelayBeforeFade (): Int getScrollBarFadeDuration [androidJvm] open fun getScrollBarFadeDuration (): Int getScrollBarSize [androidJvm] open fun getScrollBarSize (): Int getScrollBarStyle [androidJvm] open fun getScrollBarStyle (): Int getScrollCaptureHint [androidJvm] open fun getScrollCaptureHint (): Int getScrollIndicators [androidJvm] open fun getScrollIndicators (): Int getScrollX [androidJvm] fun getScrollX (): Int getScrollY [androidJvm] fun getScrollY (): Int getSolidColor [androidJvm] open fun getSolidColor (): Int getSourceLayoutResId [androidJvm] open fun getSourceLayoutResId (): Int getStateDescription [androidJvm] fun getStateDescription (): CharSequence getStateListAnimator [androidJvm] open fun getStateListAnimator (): StateListAnimator getSystemGestureExclusionRects [androidJvm] open fun getSystemGestureExclusionRects (): List < Rect > getSystemUiVisibility [androidJvm] open fun getSystemUiVisibility (): Int getTag [androidJvm] open fun getTag (): Any getTextAlignment [androidJvm] open fun getTextAlignment (): Int getTextDirection [androidJvm] open fun getTextDirection (): Int getTooltipText [androidJvm] open fun getTooltipText (): CharSequence getTop [androidJvm] fun getTop (): Int getTouchables [androidJvm] open fun getTouchables (): ArrayList < View > getTouchDelegate [androidJvm] open fun getTouchDelegate (): TouchDelegate getTouchscreenBlocksFocus [androidJvm] open fun getTouchscreenBlocksFocus (): Boolean getTransitionAlpha [androidJvm] open fun getTransitionAlpha (): Float getTransitionName [androidJvm] open fun getTransitionName (): String getTranslationX [androidJvm] open fun getTranslationX (): Float getTranslationY [androidJvm] open fun getTranslationY (): Float getTranslationZ [androidJvm] open fun getTranslationZ (): Float getUniqueDrawingId [androidJvm] open fun getUniqueDrawingId (): Long getVerticalFadingEdgeLength [androidJvm] open fun getVerticalFadingEdgeLength (): Int getVerticalScrollbarPosition [androidJvm] open fun getVerticalScrollbarPosition (): Int getVerticalScrollbarThumbDrawable [androidJvm] open fun getVerticalScrollbarThumbDrawable (): Drawable getVerticalScrollbarTrackDrawable [androidJvm] open fun getVerticalScrollbarTrackDrawable (): Drawable getVerticalScrollbarWidth [androidJvm] open fun getVerticalScrollbarWidth (): Int getViewTranslationResponse [androidJvm] open fun getViewTranslationResponse (): ViewTranslationResponse getViewTreeObserver [androidJvm] open fun getViewTreeObserver (): ViewTreeObserver getVisibility [androidJvm] open fun getVisibility (): Int getWidth [androidJvm] fun getWidth (): Int getWindowId [androidJvm] open fun getWindowId (): WindowId getWindowInsetsController [androidJvm] open fun getWindowInsetsController (): WindowInsetsController getWindowSystemUiVisibility [androidJvm] open fun getWindowSystemUiVisibility (): Int getWindowToken [androidJvm] open fun getWindowToken (): IBinder getWindowVisibility [androidJvm] open fun getWindowVisibility (): Int getWindowVisibleDisplayFrame [androidJvm] open fun getWindowVisibleDisplayFrame (outRect: Rect ) getX [androidJvm] open fun getX (): Float getY [androidJvm] open fun getY (): Float getZ [androidJvm] open fun getZ (): Float hasExplicitFocusable [androidJvm] open fun hasExplicitFocusable (): Boolean hasFocus [androidJvm] open fun hasFocus (): Boolean hasFocusable [androidJvm] open fun hasFocusable (): Boolean hasNestedScrollingParent [androidJvm] open fun hasNestedScrollingParent (): Boolean hasOnClickListeners [androidJvm] open fun hasOnClickListeners (): Boolean hasOnLongClickListeners [androidJvm] open fun hasOnLongClickListeners (): Boolean hasOverlappingRendering [androidJvm] open fun hasOverlappingRendering (): Boolean hasPointerCapture [androidJvm] open fun hasPointerCapture (): Boolean hasTransientState [androidJvm] open fun hasTransientState (): Boolean hasWindowFocus [androidJvm] open fun hasWindowFocus (): Boolean indexOfChild [androidJvm] open fun indexOfChild (child: View ): Int inflate [androidJvm] open fun inflate (context: Context , resource: Int , root: ViewGroup ): View invalidate [androidJvm] open fun invalidate (dirty: Rect ) invalidateChild [androidJvm] fun invalidateChild (child: View , dirty: Rect ) invalidateChildInParent [androidJvm] open fun invalidateChildInParent (location: Array < Int >, dirty: Rect ): ViewParent invalidateDrawable [androidJvm] open fun invalidateDrawable (drawable: Drawable ) invalidateOutline [androidJvm] open fun invalidateOutline () isAccessibilityFocused [androidJvm] open fun isAccessibilityFocused (): Boolean isAccessibilityHeading [androidJvm] open fun isAccessibilityHeading (): Boolean isActivated [androidJvm] open fun isActivated (): Boolean isAlwaysDrawnWithCacheEnabled [androidJvm] open fun isAlwaysDrawnWithCacheEnabled (): Boolean isAnimationCacheEnabled [androidJvm] open fun isAnimationCacheEnabled (): Boolean isAttachedToWindow [androidJvm] open fun isAttachedToWindow (): Boolean isClickable [androidJvm] open fun isClickable (): Boolean isContextClickable [androidJvm] open fun isContextClickable (): Boolean isDirty [androidJvm] open fun isDirty (): Boolean isDrawingCacheEnabled [androidJvm] open fun isDrawingCacheEnabled (): Boolean isDuplicateParentStateEnabled [androidJvm] open fun isDuplicateParentStateEnabled (): Boolean isEnabled [androidJvm] open fun isEnabled (): Boolean isFakeDragging [androidJvm] open fun isFakeDragging (): Boolean isFocusable [androidJvm] fun isFocusable (): Boolean isFocusableInTouchMode [androidJvm] fun isFocusableInTouchMode (): Boolean isFocused [androidJvm] open fun isFocused (): Boolean isFocusedByDefault [androidJvm] fun isFocusedByDefault (): Boolean isForceDarkAllowed [androidJvm] open fun isForceDarkAllowed (): Boolean isHapticFeedbackEnabled [androidJvm] open fun isHapticFeedbackEnabled (): Boolean isHardwareAccelerated [androidJvm] open fun isHardwareAccelerated (): Boolean isHorizontalFadingEdgeEnabled [androidJvm] open fun isHorizontalFadingEdgeEnabled (): Boolean isHorizontalScrollBarEnabled [androidJvm] open fun isHorizontalScrollBarEnabled (): Boolean isHovered [androidJvm] open fun isHovered (): Boolean isImportantForAccessibility [androidJvm] open fun isImportantForAccessibility (): Boolean isImportantForAutofill [androidJvm] fun isImportantForAutofill (): Boolean isImportantForContentCapture [androidJvm] fun isImportantForContentCapture (): Boolean isInEditMode [androidJvm] open fun isInEditMode (): Boolean isInLayout [androidJvm] open fun isInLayout (): Boolean isInTouchMode [androidJvm] open fun isInTouchMode (): Boolean isKeyboardNavigationCluster [androidJvm] fun isKeyboardNavigationCluster (): Boolean isLaidOut [androidJvm] open fun isLaidOut (): Boolean isLayoutDirectionResolved [androidJvm] open fun isLayoutDirectionResolved (): Boolean isLayoutRequested [androidJvm] open fun isLayoutRequested (): Boolean isLayoutSuppressed [androidJvm] open fun isLayoutSuppressed (): Boolean isLongClickable [androidJvm] open fun isLongClickable (): Boolean isMotionEventSplittingEnabled [androidJvm] open fun isMotionEventSplittingEnabled (): Boolean isNestedScrollingEnabled [androidJvm] open fun isNestedScrollingEnabled (): Boolean isOpaque [androidJvm] open fun isOpaque (): Boolean isPaddingRelative [androidJvm] open fun isPaddingRelative (): Boolean isPivotSet [androidJvm] open fun isPivotSet (): Boolean isPressed [androidJvm] open fun isPressed (): Boolean isSaveEnabled [androidJvm] open fun isSaveEnabled (): Boolean isSaveFromParentEnabled [androidJvm] open fun isSaveFromParentEnabled (): Boolean isScreenReaderFocusable [androidJvm] open fun isScreenReaderFocusable (): Boolean isScrollbarFadingEnabled [androidJvm] open fun isScrollbarFadingEnabled (): Boolean isScrollContainer [androidJvm] open fun isScrollContainer (): Boolean isSelected [androidJvm] open fun isSelected (): Boolean isShowingLayoutBounds [androidJvm] fun isShowingLayoutBounds (): Boolean isShown [androidJvm] open fun isShown (): Boolean isSoundEffectsEnabled [androidJvm] open fun isSoundEffectsEnabled (): Boolean isTemporarilyDetached [androidJvm] fun isTemporarilyDetached (): Boolean isTextAlignmentResolved [androidJvm] open fun isTextAlignmentResolved (): Boolean isTextDirectionResolved [androidJvm] open fun isTextDirectionResolved (): Boolean isTransitionGroup [androidJvm] open fun isTransitionGroup (): Boolean isVerticalFadingEdgeEnabled [androidJvm] open fun isVerticalFadingEdgeEnabled (): Boolean isVerticalScrollBarEnabled [androidJvm] open fun isVerticalScrollBarEnabled (): Boolean isVisibleToUserForAutofill [androidJvm] open fun isVisibleToUserForAutofill (virtualId: Int ): Boolean jumpDrawablesToCurrentState [androidJvm] open fun jumpDrawablesToCurrentState () keyboardNavigationClusterSearch [androidJvm] open fun keyboardNavigationClusterSearch (currentCluster: View , direction: Int ): View layout [androidJvm] fun layout (l: Int , t: Int , r: Int , b: Int ) measure [androidJvm] fun measure (widthMeasureSpec: Int , heightMeasureSpec: Int ) notifySubtreeAccessibilityStateChanged [androidJvm] open fun notifySubtreeAccessibilityStateChanged (child: View , source: View , changeType: Int ) offsetDescendantRectToMyCoords [androidJvm] fun offsetDescendantRectToMyCoords (descendant: View , rect: Rect ) offsetLeftAndRight [androidJvm] open fun offsetLeftAndRight (offset: Int ) offsetRectIntoDescendantCoords [androidJvm] fun offsetRectIntoDescendantCoords (descendant: View , rect: Rect ) offsetTopAndBottom [androidJvm] open fun offsetTopAndBottom (offset: Int ) onApplyWindowInsets [androidJvm] open fun onApplyWindowInsets (insets: WindowInsets ): WindowInsets onCancelPendingInputEvents [androidJvm] open fun onCancelPendingInputEvents () onCapturedPointerEvent [androidJvm] open fun onCapturedPointerEvent (event: MotionEvent ): Boolean onCheckIsTextEditor [androidJvm] open fun onCheckIsTextEditor (): Boolean onCreateInputConnection [androidJvm] open fun onCreateInputConnection (outAttrs: EditorInfo ): InputConnection onCreateViewTranslationRequest [androidJvm] open fun onCreateViewTranslationRequest (supportedFormats: Array < Int >, requestsCollector: Consumer < ViewTranslationRequest >) onCreateVirtualViewTranslationRequests [androidJvm] open fun onCreateVirtualViewTranslationRequests (virtualIds: Array < Long >, supportedFormats: Array < Int >, requestsCollector: Consumer < ViewTranslationRequest >) onDescendantInvalidated [androidJvm] open fun onDescendantInvalidated (child: View , target: View ) onDragEvent [androidJvm] open fun onDragEvent (event: DragEvent ): Boolean onDrawForeground [androidJvm] open fun onDrawForeground (canvas: Canvas ) onFilterTouchEventForSecurity [androidJvm] open fun onFilterTouchEventForSecurity (event: MotionEvent ): Boolean onFinishTemporaryDetach [androidJvm] open fun onFinishTemporaryDetach () onGenericMotionEvent [androidJvm] open fun onGenericMotionEvent (event: MotionEvent ): Boolean onHoverChanged [androidJvm] open fun onHoverChanged (hovered: Boolean ) onHoverEvent [androidJvm] open fun onHoverEvent (event: MotionEvent ): Boolean onInitializeAccessibilityEvent [androidJvm] open fun onInitializeAccessibilityEvent (event: AccessibilityEvent ) onInitializeAccessibilityNodeInfo [androidJvm] open fun onInitializeAccessibilityNodeInfo (info: AccessibilityNodeInfo ) onInterceptHoverEvent [androidJvm] open fun onInterceptHoverEvent (event: MotionEvent ): Boolean onInterceptTouchEvent [androidJvm] open fun onInterceptTouchEvent (ev: MotionEvent ): Boolean onKeyDown [androidJvm] open fun onKeyDown (keyCode: Int , event: KeyEvent ): Boolean onKeyLongPress [androidJvm] open fun onKeyLongPress (keyCode: Int , event: KeyEvent ): Boolean onKeyMultiple [androidJvm] open fun onKeyMultiple (keyCode: Int , repeatCount: Int , event: KeyEvent ): Boolean onKeyPreIme [androidJvm] open fun onKeyPreIme (keyCode: Int , event: KeyEvent ): Boolean onKeyShortcut [androidJvm] open fun onKeyShortcut (keyCode: Int , event: KeyEvent ): Boolean onKeyUp [androidJvm] open fun onKeyUp (keyCode: Int , event: KeyEvent ): Boolean onNestedFling [androidJvm] open fun onNestedFling (target: View , velocityX: Float , velocityY: Float , consumed: Boolean ): Boolean onNestedPreFling [androidJvm] open fun onNestedPreFling (target: View , velocityX: Float , velocityY: Float ): Boolean onNestedPrePerformAccessibilityAction [androidJvm] open fun onNestedPrePerformAccessibilityAction (target: View , action: Int , args: Bundle ): Boolean onNestedPreScroll [androidJvm] open fun onNestedPreScroll (target: View , dx: Int , dy: Int , consumed: Array < Int >) onNestedScroll [androidJvm] open fun onNestedScroll (target: View , dxConsumed: Int , dyConsumed: Int , dxUnconsumed: Int , dyUnconsumed: Int ) onNestedScrollAccepted [androidJvm] open fun onNestedScrollAccepted (child: View , target: View , axes: Int ) onPointerCaptureChange [androidJvm] open fun onPointerCaptureChange (hasCapture: Boolean ) onPopulateAccessibilityEvent [androidJvm] open fun onPopulateAccessibilityEvent (event: AccessibilityEvent ) onProvideAutofillStructure [androidJvm] open fun onProvideAutofillStructure (structure: ViewStructure , flags: Int ) onProvideAutofillVirtualStructure [androidJvm] open fun onProvideAutofillVirtualStructure (structure: ViewStructure , flags: Int ) onProvideContentCaptureStructure [androidJvm] open fun onProvideContentCaptureStructure (structure: ViewStructure , flags: Int ) onProvideStructure [androidJvm] open fun onProvideStructure (structure: ViewStructure ) onProvideVirtualStructure [androidJvm] open fun onProvideVirtualStructure (structure: ViewStructure ) onReceiveContent [androidJvm] open fun onReceiveContent (payload: ContentInfo ): ContentInfo onRequestSendAccessibilityEvent [androidJvm] open fun onRequestSendAccessibilityEvent (child: View , event: AccessibilityEvent ): Boolean onResolvePointerIcon [androidJvm] open fun onResolvePointerIcon (event: MotionEvent , pointerIndex: Int ): PointerIcon onRestoreInstanceState [androidJvm] open fun onRestoreInstanceState (state: Parcelable ) onRtlPropertiesChanged [androidJvm] open fun onRtlPropertiesChanged (layoutDirection: Int ) onSaveInstanceState [androidJvm] open fun onSaveInstanceState (): Parcelable onScreenStateChanged [androidJvm] open fun onScreenStateChanged (screenState: Int ) onScrollCaptureSearch [androidJvm] open fun onScrollCaptureSearch (localVisibleRect: Rect , windowOffset: Point , targets: Consumer < ScrollCaptureTarget >) onStartNestedScroll [androidJvm] open fun onStartNestedScroll (child: View , target: View , nestedScrollAxes: Int ): Boolean onStartTemporaryDetach [androidJvm] open fun onStartTemporaryDetach () onStopNestedScroll [androidJvm] open fun onStopNestedScroll (child: View ) onTouchEvent [androidJvm] open fun onTouchEvent (ev: MotionEvent ): Boolean onTrackballEvent [androidJvm] open fun onTrackballEvent (event: MotionEvent ): Boolean onViewAdded [androidJvm] open fun onViewAdded (child: View ) onViewRemoved [androidJvm] open fun onViewRemoved (child: View ) onViewTranslationResponse [androidJvm] open fun onViewTranslationResponse (response: ViewTranslationResponse ) onVirtualViewTranslationResponses [androidJvm] open fun onVirtualViewTranslationResponses (response: LongSparseArray < ViewTranslationResponse >) onVisibilityAggregated [androidJvm] open fun onVisibilityAggregated (isVisible: Boolean ) onWindowFocusChanged [androidJvm] open fun onWindowFocusChanged (hasWindowFocus: Boolean ) onWindowSystemUiVisibilityChanged [androidJvm] open fun onWindowSystemUiVisibilityChanged (visible: Int ) performAccessibilityAction [androidJvm] open fun performAccessibilityAction (action: Int , arguments: Bundle ): Boolean performClick [androidJvm] open fun performClick (): Boolean performContextClick [androidJvm] open fun performContextClick (x: Float , y: Float ): Boolean performHapticFeedback [androidJvm] open fun performHapticFeedback (feedbackConstant: Int ): Boolean performLongClick [androidJvm] open fun performLongClick (): Boolean performReceiveContent [androidJvm] open fun performReceiveContent (payload: ContentInfo ): ContentInfo playSoundEffect [androidJvm] open fun playSoundEffect (soundConstant: Int ) post [androidJvm] open fun post (action: Runnable ): Boolean postDelayed [androidJvm] open fun postDelayed (action: Runnable , delayMillis: Long ): Boolean postInvalidate [androidJvm] open fun postInvalidate () postInvalidateDelayed [androidJvm] open fun postInvalidateDelayed (delayMilliseconds: Long ) postInvalidateOnAnimation [androidJvm] open fun postInvalidateOnAnimation () postOnAnimation [androidJvm] open fun postOnAnimation (action: Runnable ) postOnAnimationDelayed [androidJvm] open fun postOnAnimationDelayed (action: Runnable , delayMillis: Long ) recomputeViewAttributes [androidJvm] open fun recomputeViewAttributes (child: View ) refreshDrawableState [androidJvm] open fun refreshDrawableState () releasePointerCapture [androidJvm] open fun releasePointerCapture () removeAllViews [androidJvm] open fun removeAllViews () removeAllViewsInLayout [androidJvm] open fun removeAllViewsInLayout () removeCallbacks [androidJvm] open fun removeCallbacks (action: Runnable ): Boolean removeOnAdapterChangeListener [androidJvm] open fun removeOnAdapterChangeListener (listener: ViewPager.OnAdapterChangeListener ) removeOnAttachStateChangeListener [androidJvm] open fun removeOnAttachStateChangeListener (listener: View.OnAttachStateChangeListener ) removeOnLayoutChangeListener [androidJvm] open fun removeOnLayoutChangeListener (listener: View.OnLayoutChangeListener ) removeOnPageChangeListener [androidJvm] open fun removeOnPageChangeListener (listener: ViewPager.OnPageChangeListener ) removeOnUnhandledKeyEventListener [androidJvm] open fun removeOnUnhandledKeyEventListener (listener: View.OnUnhandledKeyEventListener ) removeView [androidJvm] open fun removeView (view: View ) removeViewAt [androidJvm] open fun removeViewAt (index: Int ) removeViewInLayout [androidJvm] open fun removeViewInLayout (view: View ) removeViews [androidJvm] open fun removeViews (start: Int , count: Int ) removeViewsInLayout [androidJvm] open fun removeViewsInLayout (start: Int , count: Int ) requestApplyInsets [androidJvm] open fun requestApplyInsets () requestChildFocus [androidJvm] open fun requestChildFocus (child: View , focused: View ) requestChildRectangleOnScreen [androidJvm] open fun requestChildRectangleOnScreen (child: View , rectangle: Rect , immediate: Boolean ): Boolean requestDisallowInterceptTouchEvent [androidJvm] open fun requestDisallowInterceptTouchEvent (disallowIntercept: Boolean ) requestFitSystemWindows [androidJvm] open fun requestFitSystemWindows () requestFocus [androidJvm] open fun requestFocus (direction: Int , previouslyFocusedRect: Rect ): Boolean requestFocusFromTouch [androidJvm] fun requestFocusFromTouch (): Boolean requestLayout [androidJvm] open fun requestLayout () requestPointerCapture [androidJvm] open fun requestPointerCapture () requestRectangleOnScreen [androidJvm] open fun requestRectangleOnScreen (rectangle: Rect ): Boolean requestSendAccessibilityEvent [androidJvm] open fun requestSendAccessibilityEvent (child: View , event: AccessibilityEvent ): Boolean requestTransparentRegion [androidJvm] open fun requestTransparentRegion (child: View ) requestUnbufferedDispatch [androidJvm] fun requestUnbufferedDispatch (event: MotionEvent ) requireViewById [androidJvm] fun < T : View ?> requireViewById (id: Int ): T resetPivot [androidJvm] open fun resetPivot () resolveSize [androidJvm] open fun resolveSize (size: Int , measureSpec: Int ): Int resolveSizeAndState [androidJvm] open fun resolveSizeAndState (size: Int , measureSpec: Int , childMeasuredState: Int ): Int restoreDefaultFocus [androidJvm] open fun restoreDefaultFocus (): Boolean restoreHierarchyState [androidJvm] open fun restoreHierarchyState (container: SparseArray < Parcelable >) saveAttributeDataForStyleable [androidJvm] fun saveAttributeDataForStyleable (context: Context , styleable: Array < Int >, attrs: AttributeSet , t: TypedArray , defStyleAttr: Int , defStyleRes: Int ) saveHierarchyState [androidJvm] open fun saveHierarchyState (container: SparseArray < Parcelable >) scheduleDrawable [androidJvm] open fun scheduleDrawable (who: Drawable , what: Runnable , when: Long ) scheduleLayoutAnimation [androidJvm] open fun scheduleLayoutAnimation () scrollBy [androidJvm] open fun scrollBy (x: Int , y: Int ) scrollTo [androidJvm] open fun scrollTo (x: Int , y: Int ) sendAccessibilityEvent [androidJvm] open fun sendAccessibilityEvent (eventType: Int ) sendAccessibilityEventUnchecked [androidJvm] open fun sendAccessibilityEventUnchecked (event: AccessibilityEvent ) setAccessibilityDelegate [androidJvm] open fun setAccessibilityDelegate (delegate: View.AccessibilityDelegate ) setAccessibilityHeading [androidJvm] open fun setAccessibilityHeading (isHeading: Boolean ) setAccessibilityLiveRegion [androidJvm] open fun setAccessibilityLiveRegion (mode: Int ) setAccessibilityPaneTitle [androidJvm] open fun setAccessibilityPaneTitle (accessibilityPaneTitle: CharSequence ) setAccessibilityTraversalAfter [androidJvm] open fun setAccessibilityTraversalAfter (afterId: Int ) setAccessibilityTraversalBefore [androidJvm] open fun setAccessibilityTraversalBefore (beforeId: Int ) setActivated [androidJvm] open fun setActivated (activated: Boolean ) setAdapter [androidJvm] open fun setAdapter (adapter: PagerAdapter ) setAddStatesFromChildren [androidJvm] open fun setAddStatesFromChildren (addsStates: Boolean ) setAllowClickWhenDisabled [androidJvm] open fun setAllowClickWhenDisabled (clickableWhenDisabled: Boolean ) setAlpha [androidJvm] open fun setAlpha (alpha: Float ) setAlwaysDrawnWithCacheEnabled [androidJvm] open fun setAlwaysDrawnWithCacheEnabled (always: Boolean ) setAnimation [androidJvm] open fun setAnimation (animation: Animation ) setAnimationCacheEnabled [androidJvm] open fun setAnimationCacheEnabled (enabled: Boolean ) setAnimationMatrix [androidJvm] open fun setAnimationMatrix (matrix: Matrix ) setAutofillHints [androidJvm] open fun setAutofillHints (autofillHints: Array < String >) setAutofillId [androidJvm] open fun setAutofillId (id: AutofillId ) setBackground [androidJvm] open fun setBackground (background: Drawable ) setBackgroundColor [androidJvm] open fun setBackgroundColor (color: Int ) setBackgroundDrawable [androidJvm] open fun setBackgroundDrawable (background: Drawable ) setBackgroundResource [androidJvm] open fun setBackgroundResource (resid: Int ) setBackgroundTintBlendMode [androidJvm] open fun setBackgroundTintBlendMode (blendMode: BlendMode ) setBackgroundTintList [androidJvm] open fun setBackgroundTintList (tint: ColorStateList ) setBackgroundTintMode [androidJvm] open fun setBackgroundTintMode (tintMode: PorterDuff.Mode ) setBottom [androidJvm] fun setBottom (bottom: Int ) setCameraDistance [androidJvm] open fun setCameraDistance (distance: Float ) setClickable [androidJvm] open fun setClickable (clickable: Boolean ) setClipBounds [androidJvm] open fun setClipBounds (clipBounds: Rect ) setClipChildren [androidJvm] open fun setClipChildren (clipChildren: Boolean ) setClipToOutline [androidJvm] open fun setClipToOutline (clipToOutline: Boolean ) setClipToPadding [androidJvm] open fun setClipToPadding (clipToPadding: Boolean ) setContentCaptureSession [androidJvm] open fun setContentCaptureSession (contentCaptureSession: ContentCaptureSession ) setContentDescription [androidJvm] open fun setContentDescription (contentDescription: CharSequence ) setContextClickable [androidJvm] open fun setContextClickable (contextClickable: Boolean ) setCurrentItem [androidJvm] open fun setCurrentItem (position: Int ) open fun setCurrentItem (position: Int , smoothScroll: Boolean ) setDefaultFocusHighlightEnabled [androidJvm] open fun setDefaultFocusHighlightEnabled (defaultFocusHighlightEnabled: Boolean ) setDescendantFocusability [androidJvm] open fun setDescendantFocusability (focusability: Int ) setDrawingCacheBackgroundColor [androidJvm] open fun setDrawingCacheBackgroundColor (color: Int ) setDrawingCacheEnabled [androidJvm] open fun setDrawingCacheEnabled (enabled: Boolean ) setDrawingCacheQuality [androidJvm] open fun setDrawingCacheQuality (quality: Int ) setDuplicateParentStateEnabled [androidJvm] open fun setDuplicateParentStateEnabled (enabled: Boolean ) setElevation [androidJvm] open fun setElevation (elevation: Float ) setEnabled [androidJvm] open fun setEnabled (enabled: Boolean ) setFadingEdgeLength [androidJvm] open fun setFadingEdgeLength (length: Int ) setFilterTouchesWhenObscured [androidJvm] open fun setFilterTouchesWhenObscured (enabled: Boolean ) setFitsSystemWindows [androidJvm] open fun setFitsSystemWindows (fitSystemWindows: Boolean ) setFocusable [androidJvm] open fun setFocusable (focusable: Boolean ) setFocusableInTouchMode [androidJvm] open fun setFocusableInTouchMode (focusableInTouchMode: Boolean ) setFocusedByDefault [androidJvm] open fun setFocusedByDefault (isFocusedByDefault: Boolean ) setForceDarkAllowed [androidJvm] open fun setForceDarkAllowed (allow: Boolean ) setForeground [androidJvm] open fun setForeground (foreground: Drawable ) setForegroundGravity [androidJvm] open fun setForegroundGravity (gravity: Int ) setForegroundTintBlendMode [androidJvm] open fun setForegroundTintBlendMode (blendMode: BlendMode ) setForegroundTintList [androidJvm] open fun setForegroundTintList (tint: ColorStateList ) setForegroundTintMode [androidJvm] open fun setForegroundTintMode (tintMode: PorterDuff.Mode ) setHapticFeedbackEnabled [androidJvm] open fun setHapticFeedbackEnabled (hapticFeedbackEnabled: Boolean ) setHasTransientState [androidJvm] open fun setHasTransientState (hasTransientState: Boolean ) setHorizontalFadingEdgeEnabled [androidJvm] open fun setHorizontalFadingEdgeEnabled (horizontalFadingEdgeEnabled: Boolean ) setHorizontalScrollBarEnabled [androidJvm] open fun setHorizontalScrollBarEnabled (horizontalScrollBarEnabled: Boolean ) setHorizontalScrollbarThumbDrawable [androidJvm] open fun setHorizontalScrollbarThumbDrawable (drawable: Drawable ) setHorizontalScrollbarTrackDrawable [androidJvm] open fun setHorizontalScrollbarTrackDrawable (drawable: Drawable ) setHovered [androidJvm] open fun setHovered (hovered: Boolean ) setId [androidJvm] open fun setId (id: Int ) setImportantForAccessibility [androidJvm] open fun setImportantForAccessibility (mode: Int ) setImportantForAutofill [androidJvm] open fun setImportantForAutofill (mode: Int ) setImportantForContentCapture [androidJvm] open fun setImportantForContentCapture (mode: Int ) setKeepScreenOn [androidJvm] open fun setKeepScreenOn (keepScreenOn: Boolean ) setKeyboardNavigationCluster [androidJvm] open fun setKeyboardNavigationCluster (isCluster: Boolean ) setLabelFor [androidJvm] open fun setLabelFor (id: Int ) setLayerPaint [androidJvm] open fun setLayerPaint (paint: Paint ) setLayerType [androidJvm] open fun setLayerType (layerType: Int , paint: Paint ) setLayoutAnimation [androidJvm] open fun setLayoutAnimation (controller: LayoutAnimationController ) setLayoutAnimationListener [androidJvm] open fun setLayoutAnimationListener (animationListener: Animation.AnimationListener ) setLayoutDirection [androidJvm] open fun setLayoutDirection (layoutDirection: Int ) setLayoutMode [androidJvm] open fun setLayoutMode (layoutMode: Int ) setLayoutParams [androidJvm] open fun setLayoutParams (params: ViewGroup.LayoutParams ) setLayoutTransition [androidJvm] open fun setLayoutTransition (transition: LayoutTransition ) setLeft [androidJvm] fun setLeft (left: Int ) setLeftTopRightBottom [androidJvm] fun setLeftTopRightBottom (left: Int , top: Int , right: Int , bottom: Int ) setLongClickable [androidJvm] open fun setLongClickable (longClickable: Boolean ) setMinimumHeight [androidJvm] open fun setMinimumHeight (minHeight: Int ) setMinimumWidth [androidJvm] open fun setMinimumWidth (minWidth: Int ) setMotionEventSplittingEnabled [androidJvm] open fun setMotionEventSplittingEnabled (split: Boolean ) setNestedScrollingEnabled [androidJvm] open fun setNestedScrollingEnabled (enabled: Boolean ) setNextClusterForwardId [androidJvm] open fun setNextClusterForwardId (nextClusterForwardId: Int ) setNextFocusDownId [androidJvm] open fun setNextFocusDownId (nextFocusDownId: Int ) setNextFocusForwardId [androidJvm] open fun setNextFocusForwardId (nextFocusForwardId: Int ) setNextFocusLeftId [androidJvm] open fun setNextFocusLeftId (nextFocusLeftId: Int ) setNextFocusRightId [androidJvm] open fun setNextFocusRightId (nextFocusRightId: Int ) setNextFocusUpId [androidJvm] open fun setNextFocusUpId (nextFocusUpId: Int ) setOffscreenPageLimit [androidJvm] open fun setOffscreenPageLimit (limit: Int ) setOnApplyWindowInsetsListener [androidJvm] open fun setOnApplyWindowInsetsListener (listener: View.OnApplyWindowInsetsListener ) setOnCapturedPointerListener [androidJvm] open fun setOnCapturedPointerListener (l: View.OnCapturedPointerListener ) setOnClickListener [androidJvm] open fun setOnClickListener (l: View.OnClickListener ) setOnContextClickListener [androidJvm] open fun setOnContextClickListener (l: View.OnContextClickListener ) setOnCreateContextMenuListener [androidJvm] open fun setOnCreateContextMenuListener (l: View.OnCreateContextMenuListener ) setOnDragListener [androidJvm] open fun setOnDragListener (l: View.OnDragListener ) setOnFocusChangeListener [androidJvm] open fun setOnFocusChangeListener (l: View.OnFocusChangeListener ) setOnGenericMotionListener [androidJvm] open fun setOnGenericMotionListener (l: View.OnGenericMotionListener ) setOnHierarchyChangeListener [androidJvm] open fun setOnHierarchyChangeListener (listener: ViewGroup.OnHierarchyChangeListener ) setOnHoverListener [androidJvm] open fun setOnHoverListener (l: View.OnHoverListener ) setOnKeyListener [androidJvm] open fun setOnKeyListener (l: View.OnKeyListener ) setOnLongClickListener [androidJvm] open fun setOnLongClickListener (l: View.OnLongClickListener ) setOnPageChangeListener [androidJvm] open fun setOnPageChangeListener (listener: ViewPager.OnPageChangeListener ) setOnReceiveContentListener [androidJvm] open fun setOnReceiveContentListener (mimeTypes: Array < String >, listener: OnReceiveContentListener ) setOnScrollChangeListener [androidJvm] open fun setOnScrollChangeListener (l: View.OnScrollChangeListener ) setOnSystemUiVisibilityChangeListener [androidJvm] open fun setOnSystemUiVisibilityChangeListener (l: View.OnSystemUiVisibilityChangeListener ) setOnTouchListener [androidJvm] open fun setOnTouchListener (l: View.OnTouchListener ) setOutlineAmbientShadowColor [androidJvm] open fun setOutlineAmbientShadowColor (color: Int ) setOutlineProvider [androidJvm] open fun setOutlineProvider (provider: ViewOutlineProvider ) setOutlineSpotShadowColor [androidJvm] open fun setOutlineSpotShadowColor (color: Int ) setOverScrollMode [androidJvm] open fun setOverScrollMode (overScrollMode: Int ) setPadding [androidJvm] open fun setPadding (left: Int , top: Int , right: Int , bottom: Int ) setPaddingRelative [androidJvm] open fun setPaddingRelative (start: Int , top: Int , end: Int , bottom: Int ) setPageMargin [androidJvm] open fun setPageMargin (marginPixels: Int ) setPageMarginDrawable [androidJvm] open fun setPageMarginDrawable (d: Drawable ) setPageTransformer [androidJvm] open fun setPageTransformer (reverseDrawingOrder: Boolean , transformer: ViewPager.PageTransformer ) setPersistentDrawingCache [androidJvm] open fun setPersistentDrawingCache (drawingCacheToKeep: Int ) setPivotX [androidJvm] open fun setPivotX (pivotX: Float ) setPivotY [androidJvm] open fun setPivotY (pivotY: Float ) setPointerIcon [androidJvm] open fun setPointerIcon (pointerIcon: PointerIcon ) setPressed [androidJvm] open fun setPressed (pressed: Boolean ) setRenderEffect [androidJvm] open fun setRenderEffect (renderEffect: RenderEffect ) setRevealOnFocusHint [androidJvm] fun setRevealOnFocusHint (revealOnFocus: Boolean ) setRight [androidJvm] fun setRight (right: Int ) setRotation [androidJvm] open fun setRotation (rotation: Float ) setRotationX [androidJvm] open fun setRotationX (rotationX: Float ) setRotationY [androidJvm] open fun setRotationY (rotationY: Float ) setSaveEnabled [androidJvm] open fun setSaveEnabled (enabled: Boolean ) setSaveFromParentEnabled [androidJvm] open fun setSaveFromParentEnabled (enabled: Boolean ) setScaleX [androidJvm] open fun setScaleX (scaleX: Float ) setScaleY [androidJvm] open fun setScaleY (scaleY: Float ) setScreenReaderFocusable [androidJvm] open fun setScreenReaderFocusable (screenReaderFocusable: Boolean ) setScrollBarDefaultDelayBeforeFade [androidJvm] open fun setScrollBarDefaultDelayBeforeFade (scrollBarDefaultDelayBeforeFade: Int ) setScrollBarFadeDuration [androidJvm] open fun setScrollBarFadeDuration (scrollBarFadeDuration: Int ) setScrollbarFadingEnabled [androidJvm] open fun setScrollbarFadingEnabled (fadeScrollbars: Boolean ) setScrollBarSize [androidJvm] open fun setScrollBarSize (scrollBarSize: Int ) setScrollBarStyle [androidJvm] open fun setScrollBarStyle (style: Int ) setScrollCaptureCallback [androidJvm] fun setScrollCaptureCallback (callback: ScrollCaptureCallback ) setScrollCaptureHint [androidJvm] open fun setScrollCaptureHint (hint: Int ) setScrollContainer [androidJvm] open fun setScrollContainer (isScrollContainer: Boolean ) setScrollIndicators [androidJvm] open fun setScrollIndicators (indicators: Int ) setScrollX [androidJvm] open fun setScrollX (value: Int ) setScrollY [androidJvm] open fun setScrollY (value: Int ) setSelected [androidJvm] open fun setSelected (selected: Boolean ) setSoundEffectsEnabled [androidJvm] open fun setSoundEffectsEnabled (soundEffectsEnabled: Boolean ) setStateDescription [androidJvm] open fun setStateDescription (stateDescription: CharSequence ) setStateListAnimator [androidJvm] open fun setStateListAnimator (stateListAnimator: StateListAnimator ) setSystemGestureExclusionRects [androidJvm] open fun setSystemGestureExclusionRects (rects: List < Rect >) setSystemUiVisibility [androidJvm] open fun setSystemUiVisibility (visibility: Int ) setTag [androidJvm] open fun setTag (tag: Any ) setTextAlignment [androidJvm] open fun setTextAlignment (textAlignment: Int ) setTextDirection [androidJvm] open fun setTextDirection (textDirection: Int ) setTooltipText [androidJvm] open fun setTooltipText (tooltipText: CharSequence ) setTop [androidJvm] fun setTop (top: Int ) setTouchDelegate [androidJvm] open fun setTouchDelegate (delegate: TouchDelegate ) setTouchscreenBlocksFocus [androidJvm] open fun setTouchscreenBlocksFocus (touchscreenBlocksFocus: Boolean ) setTransitionAlpha [androidJvm] open fun setTransitionAlpha (alpha: Float ) setTransitionGroup [androidJvm] open fun setTransitionGroup (isTransitionGroup: Boolean ) setTransitionName [androidJvm] fun setTransitionName (transitionName: String ) setTransitionVisibility [androidJvm] open fun setTransitionVisibility (visibility: Int ) setTranslationX [androidJvm] open fun setTranslationX (translationX: Float ) setTranslationY [androidJvm] open fun setTranslationY (translationY: Float ) setTranslationZ [androidJvm] open fun setTranslationZ (translationZ: Float ) setVerticalFadingEdgeEnabled [androidJvm] open fun setVerticalFadingEdgeEnabled (verticalFadingEdgeEnabled: Boolean ) setVerticalScrollBarEnabled [androidJvm] open fun setVerticalScrollBarEnabled (verticalScrollBarEnabled: Boolean ) setVerticalScrollbarPosition [androidJvm] open fun setVerticalScrollbarPosition (position: Int ) setVerticalScrollbarThumbDrawable [androidJvm] open fun setVerticalScrollbarThumbDrawable (drawable: Drawable ) setVerticalScrollbarTrackDrawable [androidJvm] open fun setVerticalScrollbarTrackDrawable (drawable: Drawable ) setViewTranslationCallback [androidJvm] open fun setViewTranslationCallback (callback: ViewTranslationCallback ) setVisibility [androidJvm] open fun setVisibility (visibility: Int ) setWillNotCacheDrawing [androidJvm] open fun setWillNotCacheDrawing (willNotCacheDrawing: Boolean ) setWillNotDraw [androidJvm] open fun setWillNotDraw (willNotDraw: Boolean ) setWindowInsetsAnimationCallback [androidJvm] open fun setWindowInsetsAnimationCallback (callback: WindowInsetsAnimation.Callback ) setX [androidJvm] open fun setX (x: Float ) setY [androidJvm] open fun setY (y: Float ) setZ [androidJvm] open fun setZ (z: Float ) shouldDelayChildPressedState [androidJvm] open fun shouldDelayChildPressedState (): Boolean showContextMenu [androidJvm] open fun showContextMenu (): Boolean showContextMenuForChild [androidJvm] open fun showContextMenuForChild (originalView: View ): Boolean startActionMode [androidJvm] open fun startActionMode (callback: ActionMode.Callback ): ActionMode startActionModeForChild [androidJvm] open fun startActionModeForChild (originalView: View , callback: ActionMode.Callback ): ActionMode startAnimation [androidJvm] open fun startAnimation (animation: Animation ) startDrag [androidJvm] fun startDrag (data: ClipData , shadowBuilder: View.DragShadowBuilder , myLocalState: Any , flags: Int ): Boolean startDragAndDrop [androidJvm] fun startDragAndDrop (data: ClipData , shadowBuilder: View.DragShadowBuilder , myLocalState: Any , flags: Int ): Boolean startLayoutAnimation [androidJvm] open fun startLayoutAnimation () startNestedScroll [androidJvm] open fun startNestedScroll (axes: Int ): Boolean startViewTransition [androidJvm] open fun startViewTransition (view: View ) stopNestedScroll [androidJvm] open fun stopNestedScroll () suppressLayout [androidJvm] open fun suppressLayout (suppress: Boolean ) toString [androidJvm] open fun toString (): String transformMatrixToGlobal [androidJvm] open fun transformMatrixToGlobal (matrix: Matrix ) transformMatrixToLocal [androidJvm] open fun transformMatrixToLocal (matrix: Matrix ) unscheduleDrawable [androidJvm] open fun unscheduleDrawable (who: Drawable , what: Runnable ) updateDragShadow [androidJvm] fun updateDragShadow (shadowBuilder: View.DragShadowBuilder ) updateViewLayout [androidJvm] open fun updateViewLayout (view: View , params: ViewGroup.LayoutParams ) willNotCacheDrawing [androidJvm] open fun willNotCacheDrawing (): Boolean willNotDraw [androidJvm] open fun willNotDraw (): Boolean Properties \u00b6 Name Summary direction [androidJvm] open val direction : ReadingProgression Inheritors \u00b6 Name R2ViewPager","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/#r2rtlviewpager","text":"[androidJvm]\\ open class R2RTLViewPager : ViewPager RtlViewPager is an API-compatible implementation of ViewPager which orders paged views according to the layout direction of the view. In left to right mode, the first view is at the left side of the carousel, and in right to left mode it is at the right side. It accomplishes this by wrapping the provided PagerAdapter and any provided OnPageChangeListeners so that clients can be agnostic to layout direction and modifications are kept internal to RtlViewPager.","title":"R2RTLViewPager"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/#constructors","text":"R2RTLViewPager [androidJvm] open fun R2RTLViewPager (context: Context ) R2RTLViewPager [androidJvm] open fun R2RTLViewPager (context: Context , attrs: AttributeSet )","title":"Constructors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/#types","text":"Name Summary SavedState [androidJvm] open class SavedState : Parcelable","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/#functions","text":"Name Summary addChildrenForAccessibility [androidJvm] open fun addChildrenForAccessibility (outChildren: ArrayList < View >) addExtraDataToAccessibilityNodeInfo [androidJvm] open fun addExtraDataToAccessibilityNodeInfo (info: AccessibilityNodeInfo , extraDataKey: String , arguments: Bundle ) addFocusables [androidJvm] open fun addFocusables (views: ArrayList < View >, direction: Int , focusableMode: Int ) addKeyboardNavigationClusters [androidJvm] open fun addKeyboardNavigationClusters (views: Collection < View >, direction: Int ) addOnAdapterChangeListener [androidJvm] open fun addOnAdapterChangeListener (listener: ViewPager.OnAdapterChangeListener ) addOnAttachStateChangeListener [androidJvm] open fun addOnAttachStateChangeListener (listener: View.OnAttachStateChangeListener ) addOnLayoutChangeListener [androidJvm] open fun addOnLayoutChangeListener (listener: View.OnLayoutChangeListener ) addOnPageChangeListener [androidJvm] open fun addOnPageChangeListener (listener: ViewPager.OnPageChangeListener ) addOnUnhandledKeyEventListener [androidJvm] open fun addOnUnhandledKeyEventListener (listener: View.OnUnhandledKeyEventListener ) addStatesFromChildren [androidJvm] open fun addStatesFromChildren (): Boolean addTouchables [androidJvm] open fun addTouchables (views: ArrayList < View >) addView [androidJvm] open fun addView (child: View , index: Int , params: ViewGroup.LayoutParams ) animate [androidJvm] open fun animate (): ViewPropertyAnimator announceForAccessibility [androidJvm] open fun announceForAccessibility (text: CharSequence ) arrowScroll [androidJvm] open fun arrowScroll (direction: Int ): Boolean autofill [androidJvm] open fun autofill (value: AutofillValue ) beginFakeDrag [androidJvm] open fun beginFakeDrag (): Boolean bringChildToFront [androidJvm] open fun bringChildToFront (child: View ) bringToFront [androidJvm] open fun bringToFront () buildDrawingCache [androidJvm] open fun buildDrawingCache () buildLayer [androidJvm] open fun buildLayer () callOnClick [androidJvm] open fun callOnClick (): Boolean cancelDragAndDrop [androidJvm] fun cancelDragAndDrop () cancelLongPress [androidJvm] open fun cancelLongPress () cancelPendingInputEvents [androidJvm] fun cancelPendingInputEvents () canResolveLayoutDirection [androidJvm] open fun canResolveLayoutDirection (): Boolean canResolveTextAlignment [androidJvm] open fun canResolveTextAlignment (): Boolean canResolveTextDirection [androidJvm] open fun canResolveTextDirection (): Boolean canScrollHorizontally [androidJvm] open fun canScrollHorizontally (direction: Int ): Boolean canScrollVertically [androidJvm] open fun canScrollVertically (direction: Int ): Boolean checkInputConnectionProxy [androidJvm] open fun checkInputConnectionProxy (view: View ): Boolean childDrawableStateChanged [androidJvm] open fun childDrawableStateChanged (child: View ) childHasTransientStateChanged [androidJvm] open fun childHasTransientStateChanged (child: View , childHasTransientState: Boolean ) clearAnimation [androidJvm] open fun clearAnimation () clearChildFocus [androidJvm] open fun clearChildFocus (child: View ) clearDisappearingChildren [androidJvm] open fun clearDisappearingChildren () clearFocus [androidJvm] open fun clearFocus () clearOnPageChangeListeners [androidJvm] open fun clearOnPageChangeListeners () clearViewTranslationCallback [androidJvm] open fun clearViewTranslationCallback () combineMeasuredStates [androidJvm] open fun combineMeasuredStates (curState: Int , newState: Int ): Int computeScroll [androidJvm] open fun computeScroll () computeSystemWindowInsets [androidJvm] open fun computeSystemWindowInsets (in: WindowInsets , outLocalInsets: Rect ): WindowInsets createAccessibilityNodeInfo [androidJvm] open fun createAccessibilityNodeInfo (): AccessibilityNodeInfo createContextMenu [androidJvm] open fun createContextMenu (menu: ContextMenu ) destroyDrawingCache [androidJvm] open fun destroyDrawingCache () dispatchApplyWindowInsets [androidJvm] open fun dispatchApplyWindowInsets (insets: WindowInsets ): WindowInsets dispatchCapturedPointerEvent [androidJvm] open fun dispatchCapturedPointerEvent (event: MotionEvent ): Boolean dispatchConfigurationChanged [androidJvm] open fun dispatchConfigurationChanged (newConfig: Configuration ) dispatchCreateViewTranslationRequest [androidJvm] open fun dispatchCreateViewTranslationRequest (viewIds: Map < AutofillId , Array < Long >>, supportedFormats: Array < Int >, capability: TranslationCapability , requests: List < ViewTranslationRequest >) dispatchDisplayHint [androidJvm] open fun dispatchDisplayHint (hint: Int ) dispatchDragEvent [androidJvm] open fun dispatchDragEvent (event: DragEvent ): Boolean dispatchDrawableHotspotChanged [androidJvm] open fun dispatchDrawableHotspotChanged (x: Float , y: Float ) dispatchFinishTemporaryDetach [androidJvm] open fun dispatchFinishTemporaryDetach () dispatchGenericMotionEvent [androidJvm] open fun dispatchGenericMotionEvent (event: MotionEvent ): Boolean dispatchKeyEvent [androidJvm] open fun dispatchKeyEvent (event: KeyEvent ): Boolean dispatchKeyEventPreIme [androidJvm] open fun dispatchKeyEventPreIme (event: KeyEvent ): Boolean dispatchKeyShortcutEvent [androidJvm] open fun dispatchKeyShortcutEvent (event: KeyEvent ): Boolean dispatchNestedFling [androidJvm] open fun dispatchNestedFling (velocityX: Float , velocityY: Float , consumed: Boolean ): Boolean dispatchNestedPreFling [androidJvm] open fun dispatchNestedPreFling (velocityX: Float , velocityY: Float ): Boolean dispatchNestedPrePerformAccessibilityAction [androidJvm] open fun dispatchNestedPrePerformAccessibilityAction (action: Int , arguments: Bundle ): Boolean dispatchNestedPreScroll [androidJvm] open fun dispatchNestedPreScroll (dx: Int , dy: Int , consumed: Array < Int >, offsetInWindow: Array < Int >): Boolean dispatchNestedScroll [androidJvm] open fun dispatchNestedScroll (dxConsumed: Int , dyConsumed: Int , dxUnconsumed: Int , dyUnconsumed: Int , offsetInWindow: Array < Int >): Boolean dispatchPointerCaptureChanged [androidJvm] open fun dispatchPointerCaptureChanged (hasCapture: Boolean ) dispatchPopulateAccessibilityEvent [androidJvm] open fun dispatchPopulateAccessibilityEvent (event: AccessibilityEvent ): Boolean dispatchProvideAutofillStructure [androidJvm] open fun dispatchProvideAutofillStructure (structure: ViewStructure , flags: Int ) dispatchProvideStructure [androidJvm] open fun dispatchProvideStructure (structure: ViewStructure ) dispatchScrollCaptureSearch [androidJvm] open fun dispatchScrollCaptureSearch (localVisibleRect: Rect , windowOffset: Point , targets: Consumer < ScrollCaptureTarget >) dispatchSetActivated [androidJvm] open fun dispatchSetActivated (activated: Boolean ) dispatchSetSelected [androidJvm] open fun dispatchSetSelected (selected: Boolean ) dispatchStartTemporaryDetach [androidJvm] open fun dispatchStartTemporaryDetach () dispatchSystemUiVisibilityChanged [androidJvm] open fun dispatchSystemUiVisibilityChanged (visible: Int ) dispatchTouchEvent [androidJvm] open fun dispatchTouchEvent (ev: MotionEvent ): Boolean dispatchTrackballEvent [androidJvm] open fun dispatchTrackballEvent (event: MotionEvent ): Boolean dispatchUnhandledMove [androidJvm] open fun dispatchUnhandledMove (focused: View , direction: Int ): Boolean dispatchWindowFocusChanged [androidJvm] open fun dispatchWindowFocusChanged (hasFocus: Boolean ) dispatchWindowInsetsAnimationEnd [androidJvm] open fun dispatchWindowInsetsAnimationEnd (animation: WindowInsetsAnimation ) dispatchWindowInsetsAnimationPrepare [androidJvm] open fun dispatchWindowInsetsAnimationPrepare (animation: WindowInsetsAnimation ) dispatchWindowInsetsAnimationProgress [androidJvm] open fun dispatchWindowInsetsAnimationProgress (insets: WindowInsets , runningAnimations: List < WindowInsetsAnimation >): WindowInsets dispatchWindowInsetsAnimationStart [androidJvm] open fun dispatchWindowInsetsAnimationStart (animation: WindowInsetsAnimation , bounds: WindowInsetsAnimation.Bounds ): WindowInsetsAnimation.Bounds dispatchWindowSystemUiVisiblityChanged [androidJvm] open fun dispatchWindowSystemUiVisiblityChanged (visible: Int ) dispatchWindowVisibilityChanged [androidJvm] open fun dispatchWindowVisibilityChanged (visibility: Int ) draw [androidJvm] open fun draw (canvas: Canvas ) drawableHotspotChanged [androidJvm] open fun drawableHotspotChanged (x: Float , y: Float ) endFakeDrag [androidJvm] open fun endFakeDrag () endViewTransition [androidJvm] open fun endViewTransition (view: View ) executeKeyEvent [androidJvm] open fun executeKeyEvent (event: KeyEvent ): Boolean fakeDragBy [androidJvm] open fun fakeDragBy (xOffset: Float ) findFocus [androidJvm] open fun findFocus (): View findViewById [androidJvm] fun < T : View ?> findViewById (id: Int ): T findViewsWithText [androidJvm] open fun findViewsWithText (outViews: ArrayList < View >, text: CharSequence , flags: Int ) findViewWithTag [androidJvm] fun < T : View ?> findViewWithTag (tag: Any ): T focusableViewAvailable [androidJvm] open fun focusableViewAvailable (v: View ) focusSearch [androidJvm] open fun focusSearch (focused: View , direction: Int ): View forceHasOverlappingRendering [androidJvm] open fun forceHasOverlappingRendering (hasOverlappingRendering: Boolean ) forceLayout [androidJvm] open fun forceLayout () gatherTransparentRegion [androidJvm] open fun gatherTransparentRegion (region: Region ): Boolean generateDisplayHash [androidJvm] open fun generateDisplayHash (hashAlgorithm: String , bounds: Rect , executor: Executor , callback: DisplayHashResultCallback ) generateViewId [androidJvm] open fun generateViewId (): Int getAccessibilityClassName [androidJvm] open fun getAccessibilityClassName (): CharSequence getAccessibilityDelegate [androidJvm] open fun getAccessibilityDelegate (): View.AccessibilityDelegate getAccessibilityLiveRegion [androidJvm] open fun getAccessibilityLiveRegion (): Int getAccessibilityNodeProvider [androidJvm] open fun getAccessibilityNodeProvider (): AccessibilityNodeProvider getAccessibilityPaneTitle [androidJvm] open fun getAccessibilityPaneTitle (): CharSequence getAccessibilityTraversalAfter [androidJvm] open fun getAccessibilityTraversalAfter (): Int getAccessibilityTraversalBefore [androidJvm] open fun getAccessibilityTraversalBefore (): Int getAdapter [androidJvm] open fun getAdapter (): PagerAdapter getAlpha [androidJvm] open fun getAlpha (): Float getAnimation [androidJvm] open fun getAnimation (): Animation getAnimationMatrix [androidJvm] open fun getAnimationMatrix (): Matrix getApplicationWindowToken [androidJvm] open fun getApplicationWindowToken (): IBinder getAttributeResolutionStack [androidJvm] open fun getAttributeResolutionStack (attribute: Int ): Array < Int > getAttributeSourceResourceMap [androidJvm] open fun getAttributeSourceResourceMap (): Map < Integer , Integer > getAutofillHints [androidJvm] open fun getAutofillHints (): Array < String > getAutofillId [androidJvm] fun getAutofillId (): AutofillId getAutofillType [androidJvm] open fun getAutofillType (): Int getAutofillValue [androidJvm] open fun getAutofillValue (): AutofillValue getBackground [androidJvm] open fun getBackground (): Drawable getBackgroundTintBlendMode [androidJvm] open fun getBackgroundTintBlendMode (): BlendMode getBackgroundTintList [androidJvm] open fun getBackgroundTintList (): ColorStateList getBackgroundTintMode [androidJvm] open fun getBackgroundTintMode (): PorterDuff.Mode getBaseline [androidJvm] open fun getBaseline (): Int getBottom [androidJvm] fun getBottom (): Int getCameraDistance [androidJvm] open fun getCameraDistance (): Float getChildAt [androidJvm] open fun getChildAt (index: Int ): View getChildCount [androidJvm] open fun getChildCount (): Int getChildMeasureSpec [androidJvm] open fun getChildMeasureSpec (spec: Int , padding: Int , childDimension: Int ): Int getChildVisibleRect [androidJvm] open fun getChildVisibleRect (child: View , r: Rect , offset: Point ): Boolean getClipBounds [androidJvm] open fun getClipBounds (): Rect open fun getClipBounds (outRect: Rect ): Boolean getClipChildren [androidJvm] open fun getClipChildren (): Boolean getClipToOutline [androidJvm] fun getClipToOutline (): Boolean getClipToPadding [androidJvm] open fun getClipToPadding (): Boolean getContentCaptureSession [androidJvm] fun getContentCaptureSession (): ContentCaptureSession getContentDescription [androidJvm] open fun getContentDescription (): CharSequence getContext [androidJvm] fun getContext (): Context getCurrentItem [androidJvm] open fun getCurrentItem (): Int getDefaultFocusHighlightEnabled [androidJvm] fun getDefaultFocusHighlightEnabled (): Boolean getDefaultSize [androidJvm] open fun getDefaultSize (size: Int , measureSpec: Int ): Int getDescendantFocusability [androidJvm] open fun getDescendantFocusability (): Int getDisplay [androidJvm] open fun getDisplay (): Display getDrawableState [androidJvm] fun getDrawableState (): Array < Int > getDrawingCache [androidJvm] open fun getDrawingCache (): Bitmap getDrawingCacheBackgroundColor [androidJvm] open fun getDrawingCacheBackgroundColor (): Int getDrawingCacheQuality [androidJvm] open fun getDrawingCacheQuality (): Int getDrawingRect [androidJvm] open fun getDrawingRect (outRect: Rect ) getDrawingTime [androidJvm] open fun getDrawingTime (): Long getElevation [androidJvm] open fun getElevation (): Float getExplicitStyle [androidJvm] open fun getExplicitStyle (): Int getFilterTouchesWhenObscured [androidJvm] open fun getFilterTouchesWhenObscured (): Boolean getFitsSystemWindows [androidJvm] open fun getFitsSystemWindows (): Boolean getFocusable [androidJvm] open fun getFocusable (): Int getFocusables [androidJvm] open fun getFocusables (direction: Int ): ArrayList < View > getFocusedChild [androidJvm] open fun getFocusedChild (): View getFocusedRect [androidJvm] open fun getFocusedRect (r: Rect ) getForeground [androidJvm] open fun getForeground (): Drawable getForegroundGravity [androidJvm] open fun getForegroundGravity (): Int getForegroundTintBlendMode [androidJvm] open fun getForegroundTintBlendMode (): BlendMode getForegroundTintList [androidJvm] open fun getForegroundTintList (): ColorStateList getForegroundTintMode [androidJvm] open fun getForegroundTintMode (): PorterDuff.Mode getGlobalVisibleRect [androidJvm] open fun getGlobalVisibleRect (r: Rect , globalOffset: Point ): Boolean getHandler [androidJvm] open fun getHandler (): Handler getHasOverlappingRendering [androidJvm] fun getHasOverlappingRendering (): Boolean getHeight [androidJvm] fun getHeight (): Int getHitRect [androidJvm] open fun getHitRect (outRect: Rect ) getHorizontalFadingEdgeLength [androidJvm] open fun getHorizontalFadingEdgeLength (): Int getHorizontalScrollbarThumbDrawable [androidJvm] open fun getHorizontalScrollbarThumbDrawable (): Drawable getHorizontalScrollbarTrackDrawable [androidJvm] open fun getHorizontalScrollbarTrackDrawable (): Drawable getId [androidJvm] open fun getId (): Int getImportantForAccessibility [androidJvm] open fun getImportantForAccessibility (): Int getImportantForAutofill [androidJvm] open fun getImportantForAutofill (): Int getImportantForContentCapture [androidJvm] open fun getImportantForContentCapture (): Int getKeepScreenOn [androidJvm] open fun getKeepScreenOn (): Boolean getKeyDispatcherState [androidJvm] open fun getKeyDispatcherState (): KeyEvent.DispatcherState getLabelFor [androidJvm] open fun getLabelFor (): Int getLayerType [androidJvm] open fun getLayerType (): Int getLayoutAnimation [androidJvm] open fun getLayoutAnimation (): LayoutAnimationController getLayoutAnimationListener [androidJvm] open fun getLayoutAnimationListener (): Animation.AnimationListener getLayoutDirection [androidJvm] open fun getLayoutDirection (): Int getLayoutMode [androidJvm] open fun getLayoutMode (): Int getLayoutParams [androidJvm] open fun getLayoutParams (): ViewGroup.LayoutParams getLayoutTransition [androidJvm] open fun getLayoutTransition (): LayoutTransition getLeft [androidJvm] fun getLeft (): Int getLocalVisibleRect [androidJvm] fun getLocalVisibleRect (r: Rect ): Boolean getLocationInSurface [androidJvm] open fun getLocationInSurface (location: Array < Int >) getLocationInWindow [androidJvm] open fun getLocationInWindow (outLocation: Array < Int >) getLocationOnScreen [androidJvm] open fun getLocationOnScreen (outLocation: Array < Int >) getMatrix [androidJvm] open fun getMatrix (): Matrix getMeasuredHeight [androidJvm] fun getMeasuredHeight (): Int getMeasuredHeightAndState [androidJvm] fun getMeasuredHeightAndState (): Int getMeasuredState [androidJvm] fun getMeasuredState (): Int getMeasuredWidth [androidJvm] fun getMeasuredWidth (): Int getMeasuredWidthAndState [androidJvm] fun getMeasuredWidthAndState (): Int getMinimumHeight [androidJvm] open fun getMinimumHeight (): Int getMinimumWidth [androidJvm] open fun getMinimumWidth (): Int getNestedScrollAxes [androidJvm] open fun getNestedScrollAxes (): Int getNextClusterForwardId [androidJvm] open fun getNextClusterForwardId (): Int getNextFocusDownId [androidJvm] open fun getNextFocusDownId (): Int getNextFocusForwardId [androidJvm] open fun getNextFocusForwardId (): Int getNextFocusLeftId [androidJvm] open fun getNextFocusLeftId (): Int getNextFocusRightId [androidJvm] open fun getNextFocusRightId (): Int getNextFocusUpId [androidJvm] open fun getNextFocusUpId (): Int getOffscreenPageLimit [androidJvm] open fun getOffscreenPageLimit (): Int getOnFocusChangeListener [androidJvm] open fun getOnFocusChangeListener (): View.OnFocusChangeListener getOutlineAmbientShadowColor [androidJvm] open fun getOutlineAmbientShadowColor (): Int getOutlineProvider [androidJvm] open fun getOutlineProvider (): ViewOutlineProvider getOutlineSpotShadowColor [androidJvm] open fun getOutlineSpotShadowColor (): Int getOverlay [androidJvm] open fun getOverlay (): ViewOverlay open fun getOverlay (): ViewGroupOverlay getOverScrollMode [androidJvm] open fun getOverScrollMode (): Int getPaddingBottom [androidJvm] open fun getPaddingBottom (): Int getPaddingEnd [androidJvm] open fun getPaddingEnd (): Int getPaddingLeft [androidJvm] open fun getPaddingLeft (): Int getPaddingRight [androidJvm] open fun getPaddingRight (): Int getPaddingStart [androidJvm] open fun getPaddingStart (): Int getPaddingTop [androidJvm] open fun getPaddingTop (): Int getPageMargin [androidJvm] open fun getPageMargin (): Int getParent [androidJvm] fun getParent (): ViewParent getParentForAccessibility [androidJvm] open fun getParentForAccessibility (): ViewParent getPersistentDrawingCache [androidJvm] open fun getPersistentDrawingCache (): Int getPivotX [androidJvm] open fun getPivotX (): Float getPivotY [androidJvm] open fun getPivotY (): Float getPointerIcon [androidJvm] open fun getPointerIcon (): PointerIcon getReceiveContentMimeTypes [androidJvm] open fun getReceiveContentMimeTypes (): Array < String > getResources [androidJvm] open fun getResources (): Resources getRevealOnFocusHint [androidJvm] fun getRevealOnFocusHint (): Boolean getRight [androidJvm] fun getRight (): Int getRootSurfaceControl [androidJvm] open fun getRootSurfaceControl (): AttachedSurfaceControl getRootView [androidJvm] open fun getRootView (): View getRootWindowInsets [androidJvm] open fun getRootWindowInsets (): WindowInsets getRotation [androidJvm] open fun getRotation (): Float getRotationX [androidJvm] open fun getRotationX (): Float getRotationY [androidJvm] open fun getRotationY (): Float getScaleX [androidJvm] open fun getScaleX (): Float getScaleY [androidJvm] open fun getScaleY (): Float getScrollBarDefaultDelayBeforeFade [androidJvm] open fun getScrollBarDefaultDelayBeforeFade (): Int getScrollBarFadeDuration [androidJvm] open fun getScrollBarFadeDuration (): Int getScrollBarSize [androidJvm] open fun getScrollBarSize (): Int getScrollBarStyle [androidJvm] open fun getScrollBarStyle (): Int getScrollCaptureHint [androidJvm] open fun getScrollCaptureHint (): Int getScrollIndicators [androidJvm] open fun getScrollIndicators (): Int getScrollX [androidJvm] fun getScrollX (): Int getScrollY [androidJvm] fun getScrollY (): Int getSolidColor [androidJvm] open fun getSolidColor (): Int getSourceLayoutResId [androidJvm] open fun getSourceLayoutResId (): Int getStateDescription [androidJvm] fun getStateDescription (): CharSequence getStateListAnimator [androidJvm] open fun getStateListAnimator (): StateListAnimator getSystemGestureExclusionRects [androidJvm] open fun getSystemGestureExclusionRects (): List < Rect > getSystemUiVisibility [androidJvm] open fun getSystemUiVisibility (): Int getTag [androidJvm] open fun getTag (): Any getTextAlignment [androidJvm] open fun getTextAlignment (): Int getTextDirection [androidJvm] open fun getTextDirection (): Int getTooltipText [androidJvm] open fun getTooltipText (): CharSequence getTop [androidJvm] fun getTop (): Int getTouchables [androidJvm] open fun getTouchables (): ArrayList < View > getTouchDelegate [androidJvm] open fun getTouchDelegate (): TouchDelegate getTouchscreenBlocksFocus [androidJvm] open fun getTouchscreenBlocksFocus (): Boolean getTransitionAlpha [androidJvm] open fun getTransitionAlpha (): Float getTransitionName [androidJvm] open fun getTransitionName (): String getTranslationX [androidJvm] open fun getTranslationX (): Float getTranslationY [androidJvm] open fun getTranslationY (): Float getTranslationZ [androidJvm] open fun getTranslationZ (): Float getUniqueDrawingId [androidJvm] open fun getUniqueDrawingId (): Long getVerticalFadingEdgeLength [androidJvm] open fun getVerticalFadingEdgeLength (): Int getVerticalScrollbarPosition [androidJvm] open fun getVerticalScrollbarPosition (): Int getVerticalScrollbarThumbDrawable [androidJvm] open fun getVerticalScrollbarThumbDrawable (): Drawable getVerticalScrollbarTrackDrawable [androidJvm] open fun getVerticalScrollbarTrackDrawable (): Drawable getVerticalScrollbarWidth [androidJvm] open fun getVerticalScrollbarWidth (): Int getViewTranslationResponse [androidJvm] open fun getViewTranslationResponse (): ViewTranslationResponse getViewTreeObserver [androidJvm] open fun getViewTreeObserver (): ViewTreeObserver getVisibility [androidJvm] open fun getVisibility (): Int getWidth [androidJvm] fun getWidth (): Int getWindowId [androidJvm] open fun getWindowId (): WindowId getWindowInsetsController [androidJvm] open fun getWindowInsetsController (): WindowInsetsController getWindowSystemUiVisibility [androidJvm] open fun getWindowSystemUiVisibility (): Int getWindowToken [androidJvm] open fun getWindowToken (): IBinder getWindowVisibility [androidJvm] open fun getWindowVisibility (): Int getWindowVisibleDisplayFrame [androidJvm] open fun getWindowVisibleDisplayFrame (outRect: Rect ) getX [androidJvm] open fun getX (): Float getY [androidJvm] open fun getY (): Float getZ [androidJvm] open fun getZ (): Float hasExplicitFocusable [androidJvm] open fun hasExplicitFocusable (): Boolean hasFocus [androidJvm] open fun hasFocus (): Boolean hasFocusable [androidJvm] open fun hasFocusable (): Boolean hasNestedScrollingParent [androidJvm] open fun hasNestedScrollingParent (): Boolean hasOnClickListeners [androidJvm] open fun hasOnClickListeners (): Boolean hasOnLongClickListeners [androidJvm] open fun hasOnLongClickListeners (): Boolean hasOverlappingRendering [androidJvm] open fun hasOverlappingRendering (): Boolean hasPointerCapture [androidJvm] open fun hasPointerCapture (): Boolean hasTransientState [androidJvm] open fun hasTransientState (): Boolean hasWindowFocus [androidJvm] open fun hasWindowFocus (): Boolean indexOfChild [androidJvm] open fun indexOfChild (child: View ): Int inflate [androidJvm] open fun inflate (context: Context , resource: Int , root: ViewGroup ): View invalidate [androidJvm] open fun invalidate (dirty: Rect ) invalidateChild [androidJvm] fun invalidateChild (child: View , dirty: Rect ) invalidateChildInParent [androidJvm] open fun invalidateChildInParent (location: Array < Int >, dirty: Rect ): ViewParent invalidateDrawable [androidJvm] open fun invalidateDrawable (drawable: Drawable ) invalidateOutline [androidJvm] open fun invalidateOutline () isAccessibilityFocused [androidJvm] open fun isAccessibilityFocused (): Boolean isAccessibilityHeading [androidJvm] open fun isAccessibilityHeading (): Boolean isActivated [androidJvm] open fun isActivated (): Boolean isAlwaysDrawnWithCacheEnabled [androidJvm] open fun isAlwaysDrawnWithCacheEnabled (): Boolean isAnimationCacheEnabled [androidJvm] open fun isAnimationCacheEnabled (): Boolean isAttachedToWindow [androidJvm] open fun isAttachedToWindow (): Boolean isClickable [androidJvm] open fun isClickable (): Boolean isContextClickable [androidJvm] open fun isContextClickable (): Boolean isDirty [androidJvm] open fun isDirty (): Boolean isDrawingCacheEnabled [androidJvm] open fun isDrawingCacheEnabled (): Boolean isDuplicateParentStateEnabled [androidJvm] open fun isDuplicateParentStateEnabled (): Boolean isEnabled [androidJvm] open fun isEnabled (): Boolean isFakeDragging [androidJvm] open fun isFakeDragging (): Boolean isFocusable [androidJvm] fun isFocusable (): Boolean isFocusableInTouchMode [androidJvm] fun isFocusableInTouchMode (): Boolean isFocused [androidJvm] open fun isFocused (): Boolean isFocusedByDefault [androidJvm] fun isFocusedByDefault (): Boolean isForceDarkAllowed [androidJvm] open fun isForceDarkAllowed (): Boolean isHapticFeedbackEnabled [androidJvm] open fun isHapticFeedbackEnabled (): Boolean isHardwareAccelerated [androidJvm] open fun isHardwareAccelerated (): Boolean isHorizontalFadingEdgeEnabled [androidJvm] open fun isHorizontalFadingEdgeEnabled (): Boolean isHorizontalScrollBarEnabled [androidJvm] open fun isHorizontalScrollBarEnabled (): Boolean isHovered [androidJvm] open fun isHovered (): Boolean isImportantForAccessibility [androidJvm] open fun isImportantForAccessibility (): Boolean isImportantForAutofill [androidJvm] fun isImportantForAutofill (): Boolean isImportantForContentCapture [androidJvm] fun isImportantForContentCapture (): Boolean isInEditMode [androidJvm] open fun isInEditMode (): Boolean isInLayout [androidJvm] open fun isInLayout (): Boolean isInTouchMode [androidJvm] open fun isInTouchMode (): Boolean isKeyboardNavigationCluster [androidJvm] fun isKeyboardNavigationCluster (): Boolean isLaidOut [androidJvm] open fun isLaidOut (): Boolean isLayoutDirectionResolved [androidJvm] open fun isLayoutDirectionResolved (): Boolean isLayoutRequested [androidJvm] open fun isLayoutRequested (): Boolean isLayoutSuppressed [androidJvm] open fun isLayoutSuppressed (): Boolean isLongClickable [androidJvm] open fun isLongClickable (): Boolean isMotionEventSplittingEnabled [androidJvm] open fun isMotionEventSplittingEnabled (): Boolean isNestedScrollingEnabled [androidJvm] open fun isNestedScrollingEnabled (): Boolean isOpaque [androidJvm] open fun isOpaque (): Boolean isPaddingRelative [androidJvm] open fun isPaddingRelative (): Boolean isPivotSet [androidJvm] open fun isPivotSet (): Boolean isPressed [androidJvm] open fun isPressed (): Boolean isSaveEnabled [androidJvm] open fun isSaveEnabled (): Boolean isSaveFromParentEnabled [androidJvm] open fun isSaveFromParentEnabled (): Boolean isScreenReaderFocusable [androidJvm] open fun isScreenReaderFocusable (): Boolean isScrollbarFadingEnabled [androidJvm] open fun isScrollbarFadingEnabled (): Boolean isScrollContainer [androidJvm] open fun isScrollContainer (): Boolean isSelected [androidJvm] open fun isSelected (): Boolean isShowingLayoutBounds [androidJvm] fun isShowingLayoutBounds (): Boolean isShown [androidJvm] open fun isShown (): Boolean isSoundEffectsEnabled [androidJvm] open fun isSoundEffectsEnabled (): Boolean isTemporarilyDetached [androidJvm] fun isTemporarilyDetached (): Boolean isTextAlignmentResolved [androidJvm] open fun isTextAlignmentResolved (): Boolean isTextDirectionResolved [androidJvm] open fun isTextDirectionResolved (): Boolean isTransitionGroup [androidJvm] open fun isTransitionGroup (): Boolean isVerticalFadingEdgeEnabled [androidJvm] open fun isVerticalFadingEdgeEnabled (): Boolean isVerticalScrollBarEnabled [androidJvm] open fun isVerticalScrollBarEnabled (): Boolean isVisibleToUserForAutofill [androidJvm] open fun isVisibleToUserForAutofill (virtualId: Int ): Boolean jumpDrawablesToCurrentState [androidJvm] open fun jumpDrawablesToCurrentState () keyboardNavigationClusterSearch [androidJvm] open fun keyboardNavigationClusterSearch (currentCluster: View , direction: Int ): View layout [androidJvm] fun layout (l: Int , t: Int , r: Int , b: Int ) measure [androidJvm] fun measure (widthMeasureSpec: Int , heightMeasureSpec: Int ) notifySubtreeAccessibilityStateChanged [androidJvm] open fun notifySubtreeAccessibilityStateChanged (child: View , source: View , changeType: Int ) offsetDescendantRectToMyCoords [androidJvm] fun offsetDescendantRectToMyCoords (descendant: View , rect: Rect ) offsetLeftAndRight [androidJvm] open fun offsetLeftAndRight (offset: Int ) offsetRectIntoDescendantCoords [androidJvm] fun offsetRectIntoDescendantCoords (descendant: View , rect: Rect ) offsetTopAndBottom [androidJvm] open fun offsetTopAndBottom (offset: Int ) onApplyWindowInsets [androidJvm] open fun onApplyWindowInsets (insets: WindowInsets ): WindowInsets onCancelPendingInputEvents [androidJvm] open fun onCancelPendingInputEvents () onCapturedPointerEvent [androidJvm] open fun onCapturedPointerEvent (event: MotionEvent ): Boolean onCheckIsTextEditor [androidJvm] open fun onCheckIsTextEditor (): Boolean onCreateInputConnection [androidJvm] open fun onCreateInputConnection (outAttrs: EditorInfo ): InputConnection onCreateViewTranslationRequest [androidJvm] open fun onCreateViewTranslationRequest (supportedFormats: Array < Int >, requestsCollector: Consumer < ViewTranslationRequest >) onCreateVirtualViewTranslationRequests [androidJvm] open fun onCreateVirtualViewTranslationRequests (virtualIds: Array < Long >, supportedFormats: Array < Int >, requestsCollector: Consumer < ViewTranslationRequest >) onDescendantInvalidated [androidJvm] open fun onDescendantInvalidated (child: View , target: View ) onDragEvent [androidJvm] open fun onDragEvent (event: DragEvent ): Boolean onDrawForeground [androidJvm] open fun onDrawForeground (canvas: Canvas ) onFilterTouchEventForSecurity [androidJvm] open fun onFilterTouchEventForSecurity (event: MotionEvent ): Boolean onFinishTemporaryDetach [androidJvm] open fun onFinishTemporaryDetach () onGenericMotionEvent [androidJvm] open fun onGenericMotionEvent (event: MotionEvent ): Boolean onHoverChanged [androidJvm] open fun onHoverChanged (hovered: Boolean ) onHoverEvent [androidJvm] open fun onHoverEvent (event: MotionEvent ): Boolean onInitializeAccessibilityEvent [androidJvm] open fun onInitializeAccessibilityEvent (event: AccessibilityEvent ) onInitializeAccessibilityNodeInfo [androidJvm] open fun onInitializeAccessibilityNodeInfo (info: AccessibilityNodeInfo ) onInterceptHoverEvent [androidJvm] open fun onInterceptHoverEvent (event: MotionEvent ): Boolean onInterceptTouchEvent [androidJvm] open fun onInterceptTouchEvent (ev: MotionEvent ): Boolean onKeyDown [androidJvm] open fun onKeyDown (keyCode: Int , event: KeyEvent ): Boolean onKeyLongPress [androidJvm] open fun onKeyLongPress (keyCode: Int , event: KeyEvent ): Boolean onKeyMultiple [androidJvm] open fun onKeyMultiple (keyCode: Int , repeatCount: Int , event: KeyEvent ): Boolean onKeyPreIme [androidJvm] open fun onKeyPreIme (keyCode: Int , event: KeyEvent ): Boolean onKeyShortcut [androidJvm] open fun onKeyShortcut (keyCode: Int , event: KeyEvent ): Boolean onKeyUp [androidJvm] open fun onKeyUp (keyCode: Int , event: KeyEvent ): Boolean onNestedFling [androidJvm] open fun onNestedFling (target: View , velocityX: Float , velocityY: Float , consumed: Boolean ): Boolean onNestedPreFling [androidJvm] open fun onNestedPreFling (target: View , velocityX: Float , velocityY: Float ): Boolean onNestedPrePerformAccessibilityAction [androidJvm] open fun onNestedPrePerformAccessibilityAction (target: View , action: Int , args: Bundle ): Boolean onNestedPreScroll [androidJvm] open fun onNestedPreScroll (target: View , dx: Int , dy: Int , consumed: Array < Int >) onNestedScroll [androidJvm] open fun onNestedScroll (target: View , dxConsumed: Int , dyConsumed: Int , dxUnconsumed: Int , dyUnconsumed: Int ) onNestedScrollAccepted [androidJvm] open fun onNestedScrollAccepted (child: View , target: View , axes: Int ) onPointerCaptureChange [androidJvm] open fun onPointerCaptureChange (hasCapture: Boolean ) onPopulateAccessibilityEvent [androidJvm] open fun onPopulateAccessibilityEvent (event: AccessibilityEvent ) onProvideAutofillStructure [androidJvm] open fun onProvideAutofillStructure (structure: ViewStructure , flags: Int ) onProvideAutofillVirtualStructure [androidJvm] open fun onProvideAutofillVirtualStructure (structure: ViewStructure , flags: Int ) onProvideContentCaptureStructure [androidJvm] open fun onProvideContentCaptureStructure (structure: ViewStructure , flags: Int ) onProvideStructure [androidJvm] open fun onProvideStructure (structure: ViewStructure ) onProvideVirtualStructure [androidJvm] open fun onProvideVirtualStructure (structure: ViewStructure ) onReceiveContent [androidJvm] open fun onReceiveContent (payload: ContentInfo ): ContentInfo onRequestSendAccessibilityEvent [androidJvm] open fun onRequestSendAccessibilityEvent (child: View , event: AccessibilityEvent ): Boolean onResolvePointerIcon [androidJvm] open fun onResolvePointerIcon (event: MotionEvent , pointerIndex: Int ): PointerIcon onRestoreInstanceState [androidJvm] open fun onRestoreInstanceState (state: Parcelable ) onRtlPropertiesChanged [androidJvm] open fun onRtlPropertiesChanged (layoutDirection: Int ) onSaveInstanceState [androidJvm] open fun onSaveInstanceState (): Parcelable onScreenStateChanged [androidJvm] open fun onScreenStateChanged (screenState: Int ) onScrollCaptureSearch [androidJvm] open fun onScrollCaptureSearch (localVisibleRect: Rect , windowOffset: Point , targets: Consumer < ScrollCaptureTarget >) onStartNestedScroll [androidJvm] open fun onStartNestedScroll (child: View , target: View , nestedScrollAxes: Int ): Boolean onStartTemporaryDetach [androidJvm] open fun onStartTemporaryDetach () onStopNestedScroll [androidJvm] open fun onStopNestedScroll (child: View ) onTouchEvent [androidJvm] open fun onTouchEvent (ev: MotionEvent ): Boolean onTrackballEvent [androidJvm] open fun onTrackballEvent (event: MotionEvent ): Boolean onViewAdded [androidJvm] open fun onViewAdded (child: View ) onViewRemoved [androidJvm] open fun onViewRemoved (child: View ) onViewTranslationResponse [androidJvm] open fun onViewTranslationResponse (response: ViewTranslationResponse ) onVirtualViewTranslationResponses [androidJvm] open fun onVirtualViewTranslationResponses (response: LongSparseArray < ViewTranslationResponse >) onVisibilityAggregated [androidJvm] open fun onVisibilityAggregated (isVisible: Boolean ) onWindowFocusChanged [androidJvm] open fun onWindowFocusChanged (hasWindowFocus: Boolean ) onWindowSystemUiVisibilityChanged [androidJvm] open fun onWindowSystemUiVisibilityChanged (visible: Int ) performAccessibilityAction [androidJvm] open fun performAccessibilityAction (action: Int , arguments: Bundle ): Boolean performClick [androidJvm] open fun performClick (): Boolean performContextClick [androidJvm] open fun performContextClick (x: Float , y: Float ): Boolean performHapticFeedback [androidJvm] open fun performHapticFeedback (feedbackConstant: Int ): Boolean performLongClick [androidJvm] open fun performLongClick (): Boolean performReceiveContent [androidJvm] open fun performReceiveContent (payload: ContentInfo ): ContentInfo playSoundEffect [androidJvm] open fun playSoundEffect (soundConstant: Int ) post [androidJvm] open fun post (action: Runnable ): Boolean postDelayed [androidJvm] open fun postDelayed (action: Runnable , delayMillis: Long ): Boolean postInvalidate [androidJvm] open fun postInvalidate () postInvalidateDelayed [androidJvm] open fun postInvalidateDelayed (delayMilliseconds: Long ) postInvalidateOnAnimation [androidJvm] open fun postInvalidateOnAnimation () postOnAnimation [androidJvm] open fun postOnAnimation (action: Runnable ) postOnAnimationDelayed [androidJvm] open fun postOnAnimationDelayed (action: Runnable , delayMillis: Long ) recomputeViewAttributes [androidJvm] open fun recomputeViewAttributes (child: View ) refreshDrawableState [androidJvm] open fun refreshDrawableState () releasePointerCapture [androidJvm] open fun releasePointerCapture () removeAllViews [androidJvm] open fun removeAllViews () removeAllViewsInLayout [androidJvm] open fun removeAllViewsInLayout () removeCallbacks [androidJvm] open fun removeCallbacks (action: Runnable ): Boolean removeOnAdapterChangeListener [androidJvm] open fun removeOnAdapterChangeListener (listener: ViewPager.OnAdapterChangeListener ) removeOnAttachStateChangeListener [androidJvm] open fun removeOnAttachStateChangeListener (listener: View.OnAttachStateChangeListener ) removeOnLayoutChangeListener [androidJvm] open fun removeOnLayoutChangeListener (listener: View.OnLayoutChangeListener ) removeOnPageChangeListener [androidJvm] open fun removeOnPageChangeListener (listener: ViewPager.OnPageChangeListener ) removeOnUnhandledKeyEventListener [androidJvm] open fun removeOnUnhandledKeyEventListener (listener: View.OnUnhandledKeyEventListener ) removeView [androidJvm] open fun removeView (view: View ) removeViewAt [androidJvm] open fun removeViewAt (index: Int ) removeViewInLayout [androidJvm] open fun removeViewInLayout (view: View ) removeViews [androidJvm] open fun removeViews (start: Int , count: Int ) removeViewsInLayout [androidJvm] open fun removeViewsInLayout (start: Int , count: Int ) requestApplyInsets [androidJvm] open fun requestApplyInsets () requestChildFocus [androidJvm] open fun requestChildFocus (child: View , focused: View ) requestChildRectangleOnScreen [androidJvm] open fun requestChildRectangleOnScreen (child: View , rectangle: Rect , immediate: Boolean ): Boolean requestDisallowInterceptTouchEvent [androidJvm] open fun requestDisallowInterceptTouchEvent (disallowIntercept: Boolean ) requestFitSystemWindows [androidJvm] open fun requestFitSystemWindows () requestFocus [androidJvm] open fun requestFocus (direction: Int , previouslyFocusedRect: Rect ): Boolean requestFocusFromTouch [androidJvm] fun requestFocusFromTouch (): Boolean requestLayout [androidJvm] open fun requestLayout () requestPointerCapture [androidJvm] open fun requestPointerCapture () requestRectangleOnScreen [androidJvm] open fun requestRectangleOnScreen (rectangle: Rect ): Boolean requestSendAccessibilityEvent [androidJvm] open fun requestSendAccessibilityEvent (child: View , event: AccessibilityEvent ): Boolean requestTransparentRegion [androidJvm] open fun requestTransparentRegion (child: View ) requestUnbufferedDispatch [androidJvm] fun requestUnbufferedDispatch (event: MotionEvent ) requireViewById [androidJvm] fun < T : View ?> requireViewById (id: Int ): T resetPivot [androidJvm] open fun resetPivot () resolveSize [androidJvm] open fun resolveSize (size: Int , measureSpec: Int ): Int resolveSizeAndState [androidJvm] open fun resolveSizeAndState (size: Int , measureSpec: Int , childMeasuredState: Int ): Int restoreDefaultFocus [androidJvm] open fun restoreDefaultFocus (): Boolean restoreHierarchyState [androidJvm] open fun restoreHierarchyState (container: SparseArray < Parcelable >) saveAttributeDataForStyleable [androidJvm] fun saveAttributeDataForStyleable (context: Context , styleable: Array < Int >, attrs: AttributeSet , t: TypedArray , defStyleAttr: Int , defStyleRes: Int ) saveHierarchyState [androidJvm] open fun saveHierarchyState (container: SparseArray < Parcelable >) scheduleDrawable [androidJvm] open fun scheduleDrawable (who: Drawable , what: Runnable , when: Long ) scheduleLayoutAnimation [androidJvm] open fun scheduleLayoutAnimation () scrollBy [androidJvm] open fun scrollBy (x: Int , y: Int ) scrollTo [androidJvm] open fun scrollTo (x: Int , y: Int ) sendAccessibilityEvent [androidJvm] open fun sendAccessibilityEvent (eventType: Int ) sendAccessibilityEventUnchecked [androidJvm] open fun sendAccessibilityEventUnchecked (event: AccessibilityEvent ) setAccessibilityDelegate [androidJvm] open fun setAccessibilityDelegate (delegate: View.AccessibilityDelegate ) setAccessibilityHeading [androidJvm] open fun setAccessibilityHeading (isHeading: Boolean ) setAccessibilityLiveRegion [androidJvm] open fun setAccessibilityLiveRegion (mode: Int ) setAccessibilityPaneTitle [androidJvm] open fun setAccessibilityPaneTitle (accessibilityPaneTitle: CharSequence ) setAccessibilityTraversalAfter [androidJvm] open fun setAccessibilityTraversalAfter (afterId: Int ) setAccessibilityTraversalBefore [androidJvm] open fun setAccessibilityTraversalBefore (beforeId: Int ) setActivated [androidJvm] open fun setActivated (activated: Boolean ) setAdapter [androidJvm] open fun setAdapter (adapter: PagerAdapter ) setAddStatesFromChildren [androidJvm] open fun setAddStatesFromChildren (addsStates: Boolean ) setAllowClickWhenDisabled [androidJvm] open fun setAllowClickWhenDisabled (clickableWhenDisabled: Boolean ) setAlpha [androidJvm] open fun setAlpha (alpha: Float ) setAlwaysDrawnWithCacheEnabled [androidJvm] open fun setAlwaysDrawnWithCacheEnabled (always: Boolean ) setAnimation [androidJvm] open fun setAnimation (animation: Animation ) setAnimationCacheEnabled [androidJvm] open fun setAnimationCacheEnabled (enabled: Boolean ) setAnimationMatrix [androidJvm] open fun setAnimationMatrix (matrix: Matrix ) setAutofillHints [androidJvm] open fun setAutofillHints (autofillHints: Array < String >) setAutofillId [androidJvm] open fun setAutofillId (id: AutofillId ) setBackground [androidJvm] open fun setBackground (background: Drawable ) setBackgroundColor [androidJvm] open fun setBackgroundColor (color: Int ) setBackgroundDrawable [androidJvm] open fun setBackgroundDrawable (background: Drawable ) setBackgroundResource [androidJvm] open fun setBackgroundResource (resid: Int ) setBackgroundTintBlendMode [androidJvm] open fun setBackgroundTintBlendMode (blendMode: BlendMode ) setBackgroundTintList [androidJvm] open fun setBackgroundTintList (tint: ColorStateList ) setBackgroundTintMode [androidJvm] open fun setBackgroundTintMode (tintMode: PorterDuff.Mode ) setBottom [androidJvm] fun setBottom (bottom: Int ) setCameraDistance [androidJvm] open fun setCameraDistance (distance: Float ) setClickable [androidJvm] open fun setClickable (clickable: Boolean ) setClipBounds [androidJvm] open fun setClipBounds (clipBounds: Rect ) setClipChildren [androidJvm] open fun setClipChildren (clipChildren: Boolean ) setClipToOutline [androidJvm] open fun setClipToOutline (clipToOutline: Boolean ) setClipToPadding [androidJvm] open fun setClipToPadding (clipToPadding: Boolean ) setContentCaptureSession [androidJvm] open fun setContentCaptureSession (contentCaptureSession: ContentCaptureSession ) setContentDescription [androidJvm] open fun setContentDescription (contentDescription: CharSequence ) setContextClickable [androidJvm] open fun setContextClickable (contextClickable: Boolean ) setCurrentItem [androidJvm] open fun setCurrentItem (position: Int ) open fun setCurrentItem (position: Int , smoothScroll: Boolean ) setDefaultFocusHighlightEnabled [androidJvm] open fun setDefaultFocusHighlightEnabled (defaultFocusHighlightEnabled: Boolean ) setDescendantFocusability [androidJvm] open fun setDescendantFocusability (focusability: Int ) setDrawingCacheBackgroundColor [androidJvm] open fun setDrawingCacheBackgroundColor (color: Int ) setDrawingCacheEnabled [androidJvm] open fun setDrawingCacheEnabled (enabled: Boolean ) setDrawingCacheQuality [androidJvm] open fun setDrawingCacheQuality (quality: Int ) setDuplicateParentStateEnabled [androidJvm] open fun setDuplicateParentStateEnabled (enabled: Boolean ) setElevation [androidJvm] open fun setElevation (elevation: Float ) setEnabled [androidJvm] open fun setEnabled (enabled: Boolean ) setFadingEdgeLength [androidJvm] open fun setFadingEdgeLength (length: Int ) setFilterTouchesWhenObscured [androidJvm] open fun setFilterTouchesWhenObscured (enabled: Boolean ) setFitsSystemWindows [androidJvm] open fun setFitsSystemWindows (fitSystemWindows: Boolean ) setFocusable [androidJvm] open fun setFocusable (focusable: Boolean ) setFocusableInTouchMode [androidJvm] open fun setFocusableInTouchMode (focusableInTouchMode: Boolean ) setFocusedByDefault [androidJvm] open fun setFocusedByDefault (isFocusedByDefault: Boolean ) setForceDarkAllowed [androidJvm] open fun setForceDarkAllowed (allow: Boolean ) setForeground [androidJvm] open fun setForeground (foreground: Drawable ) setForegroundGravity [androidJvm] open fun setForegroundGravity (gravity: Int ) setForegroundTintBlendMode [androidJvm] open fun setForegroundTintBlendMode (blendMode: BlendMode ) setForegroundTintList [androidJvm] open fun setForegroundTintList (tint: ColorStateList ) setForegroundTintMode [androidJvm] open fun setForegroundTintMode (tintMode: PorterDuff.Mode ) setHapticFeedbackEnabled [androidJvm] open fun setHapticFeedbackEnabled (hapticFeedbackEnabled: Boolean ) setHasTransientState [androidJvm] open fun setHasTransientState (hasTransientState: Boolean ) setHorizontalFadingEdgeEnabled [androidJvm] open fun setHorizontalFadingEdgeEnabled (horizontalFadingEdgeEnabled: Boolean ) setHorizontalScrollBarEnabled [androidJvm] open fun setHorizontalScrollBarEnabled (horizontalScrollBarEnabled: Boolean ) setHorizontalScrollbarThumbDrawable [androidJvm] open fun setHorizontalScrollbarThumbDrawable (drawable: Drawable ) setHorizontalScrollbarTrackDrawable [androidJvm] open fun setHorizontalScrollbarTrackDrawable (drawable: Drawable ) setHovered [androidJvm] open fun setHovered (hovered: Boolean ) setId [androidJvm] open fun setId (id: Int ) setImportantForAccessibility [androidJvm] open fun setImportantForAccessibility (mode: Int ) setImportantForAutofill [androidJvm] open fun setImportantForAutofill (mode: Int ) setImportantForContentCapture [androidJvm] open fun setImportantForContentCapture (mode: Int ) setKeepScreenOn [androidJvm] open fun setKeepScreenOn (keepScreenOn: Boolean ) setKeyboardNavigationCluster [androidJvm] open fun setKeyboardNavigationCluster (isCluster: Boolean ) setLabelFor [androidJvm] open fun setLabelFor (id: Int ) setLayerPaint [androidJvm] open fun setLayerPaint (paint: Paint ) setLayerType [androidJvm] open fun setLayerType (layerType: Int , paint: Paint ) setLayoutAnimation [androidJvm] open fun setLayoutAnimation (controller: LayoutAnimationController ) setLayoutAnimationListener [androidJvm] open fun setLayoutAnimationListener (animationListener: Animation.AnimationListener ) setLayoutDirection [androidJvm] open fun setLayoutDirection (layoutDirection: Int ) setLayoutMode [androidJvm] open fun setLayoutMode (layoutMode: Int ) setLayoutParams [androidJvm] open fun setLayoutParams (params: ViewGroup.LayoutParams ) setLayoutTransition [androidJvm] open fun setLayoutTransition (transition: LayoutTransition ) setLeft [androidJvm] fun setLeft (left: Int ) setLeftTopRightBottom [androidJvm] fun setLeftTopRightBottom (left: Int , top: Int , right: Int , bottom: Int ) setLongClickable [androidJvm] open fun setLongClickable (longClickable: Boolean ) setMinimumHeight [androidJvm] open fun setMinimumHeight (minHeight: Int ) setMinimumWidth [androidJvm] open fun setMinimumWidth (minWidth: Int ) setMotionEventSplittingEnabled [androidJvm] open fun setMotionEventSplittingEnabled (split: Boolean ) setNestedScrollingEnabled [androidJvm] open fun setNestedScrollingEnabled (enabled: Boolean ) setNextClusterForwardId [androidJvm] open fun setNextClusterForwardId (nextClusterForwardId: Int ) setNextFocusDownId [androidJvm] open fun setNextFocusDownId (nextFocusDownId: Int ) setNextFocusForwardId [androidJvm] open fun setNextFocusForwardId (nextFocusForwardId: Int ) setNextFocusLeftId [androidJvm] open fun setNextFocusLeftId (nextFocusLeftId: Int ) setNextFocusRightId [androidJvm] open fun setNextFocusRightId (nextFocusRightId: Int ) setNextFocusUpId [androidJvm] open fun setNextFocusUpId (nextFocusUpId: Int ) setOffscreenPageLimit [androidJvm] open fun setOffscreenPageLimit (limit: Int ) setOnApplyWindowInsetsListener [androidJvm] open fun setOnApplyWindowInsetsListener (listener: View.OnApplyWindowInsetsListener ) setOnCapturedPointerListener [androidJvm] open fun setOnCapturedPointerListener (l: View.OnCapturedPointerListener ) setOnClickListener [androidJvm] open fun setOnClickListener (l: View.OnClickListener ) setOnContextClickListener [androidJvm] open fun setOnContextClickListener (l: View.OnContextClickListener ) setOnCreateContextMenuListener [androidJvm] open fun setOnCreateContextMenuListener (l: View.OnCreateContextMenuListener ) setOnDragListener [androidJvm] open fun setOnDragListener (l: View.OnDragListener ) setOnFocusChangeListener [androidJvm] open fun setOnFocusChangeListener (l: View.OnFocusChangeListener ) setOnGenericMotionListener [androidJvm] open fun setOnGenericMotionListener (l: View.OnGenericMotionListener ) setOnHierarchyChangeListener [androidJvm] open fun setOnHierarchyChangeListener (listener: ViewGroup.OnHierarchyChangeListener ) setOnHoverListener [androidJvm] open fun setOnHoverListener (l: View.OnHoverListener ) setOnKeyListener [androidJvm] open fun setOnKeyListener (l: View.OnKeyListener ) setOnLongClickListener [androidJvm] open fun setOnLongClickListener (l: View.OnLongClickListener ) setOnPageChangeListener [androidJvm] open fun setOnPageChangeListener (listener: ViewPager.OnPageChangeListener ) setOnReceiveContentListener [androidJvm] open fun setOnReceiveContentListener (mimeTypes: Array < String >, listener: OnReceiveContentListener ) setOnScrollChangeListener [androidJvm] open fun setOnScrollChangeListener (l: View.OnScrollChangeListener ) setOnSystemUiVisibilityChangeListener [androidJvm] open fun setOnSystemUiVisibilityChangeListener (l: View.OnSystemUiVisibilityChangeListener ) setOnTouchListener [androidJvm] open fun setOnTouchListener (l: View.OnTouchListener ) setOutlineAmbientShadowColor [androidJvm] open fun setOutlineAmbientShadowColor (color: Int ) setOutlineProvider [androidJvm] open fun setOutlineProvider (provider: ViewOutlineProvider ) setOutlineSpotShadowColor [androidJvm] open fun setOutlineSpotShadowColor (color: Int ) setOverScrollMode [androidJvm] open fun setOverScrollMode (overScrollMode: Int ) setPadding [androidJvm] open fun setPadding (left: Int , top: Int , right: Int , bottom: Int ) setPaddingRelative [androidJvm] open fun setPaddingRelative (start: Int , top: Int , end: Int , bottom: Int ) setPageMargin [androidJvm] open fun setPageMargin (marginPixels: Int ) setPageMarginDrawable [androidJvm] open fun setPageMarginDrawable (d: Drawable ) setPageTransformer [androidJvm] open fun setPageTransformer (reverseDrawingOrder: Boolean , transformer: ViewPager.PageTransformer ) setPersistentDrawingCache [androidJvm] open fun setPersistentDrawingCache (drawingCacheToKeep: Int ) setPivotX [androidJvm] open fun setPivotX (pivotX: Float ) setPivotY [androidJvm] open fun setPivotY (pivotY: Float ) setPointerIcon [androidJvm] open fun setPointerIcon (pointerIcon: PointerIcon ) setPressed [androidJvm] open fun setPressed (pressed: Boolean ) setRenderEffect [androidJvm] open fun setRenderEffect (renderEffect: RenderEffect ) setRevealOnFocusHint [androidJvm] fun setRevealOnFocusHint (revealOnFocus: Boolean ) setRight [androidJvm] fun setRight (right: Int ) setRotation [androidJvm] open fun setRotation (rotation: Float ) setRotationX [androidJvm] open fun setRotationX (rotationX: Float ) setRotationY [androidJvm] open fun setRotationY (rotationY: Float ) setSaveEnabled [androidJvm] open fun setSaveEnabled (enabled: Boolean ) setSaveFromParentEnabled [androidJvm] open fun setSaveFromParentEnabled (enabled: Boolean ) setScaleX [androidJvm] open fun setScaleX (scaleX: Float ) setScaleY [androidJvm] open fun setScaleY (scaleY: Float ) setScreenReaderFocusable [androidJvm] open fun setScreenReaderFocusable (screenReaderFocusable: Boolean ) setScrollBarDefaultDelayBeforeFade [androidJvm] open fun setScrollBarDefaultDelayBeforeFade (scrollBarDefaultDelayBeforeFade: Int ) setScrollBarFadeDuration [androidJvm] open fun setScrollBarFadeDuration (scrollBarFadeDuration: Int ) setScrollbarFadingEnabled [androidJvm] open fun setScrollbarFadingEnabled (fadeScrollbars: Boolean ) setScrollBarSize [androidJvm] open fun setScrollBarSize (scrollBarSize: Int ) setScrollBarStyle [androidJvm] open fun setScrollBarStyle (style: Int ) setScrollCaptureCallback [androidJvm] fun setScrollCaptureCallback (callback: ScrollCaptureCallback ) setScrollCaptureHint [androidJvm] open fun setScrollCaptureHint (hint: Int ) setScrollContainer [androidJvm] open fun setScrollContainer (isScrollContainer: Boolean ) setScrollIndicators [androidJvm] open fun setScrollIndicators (indicators: Int ) setScrollX [androidJvm] open fun setScrollX (value: Int ) setScrollY [androidJvm] open fun setScrollY (value: Int ) setSelected [androidJvm] open fun setSelected (selected: Boolean ) setSoundEffectsEnabled [androidJvm] open fun setSoundEffectsEnabled (soundEffectsEnabled: Boolean ) setStateDescription [androidJvm] open fun setStateDescription (stateDescription: CharSequence ) setStateListAnimator [androidJvm] open fun setStateListAnimator (stateListAnimator: StateListAnimator ) setSystemGestureExclusionRects [androidJvm] open fun setSystemGestureExclusionRects (rects: List < Rect >) setSystemUiVisibility [androidJvm] open fun setSystemUiVisibility (visibility: Int ) setTag [androidJvm] open fun setTag (tag: Any ) setTextAlignment [androidJvm] open fun setTextAlignment (textAlignment: Int ) setTextDirection [androidJvm] open fun setTextDirection (textDirection: Int ) setTooltipText [androidJvm] open fun setTooltipText (tooltipText: CharSequence ) setTop [androidJvm] fun setTop (top: Int ) setTouchDelegate [androidJvm] open fun setTouchDelegate (delegate: TouchDelegate ) setTouchscreenBlocksFocus [androidJvm] open fun setTouchscreenBlocksFocus (touchscreenBlocksFocus: Boolean ) setTransitionAlpha [androidJvm] open fun setTransitionAlpha (alpha: Float ) setTransitionGroup [androidJvm] open fun setTransitionGroup (isTransitionGroup: Boolean ) setTransitionName [androidJvm] fun setTransitionName (transitionName: String ) setTransitionVisibility [androidJvm] open fun setTransitionVisibility (visibility: Int ) setTranslationX [androidJvm] open fun setTranslationX (translationX: Float ) setTranslationY [androidJvm] open fun setTranslationY (translationY: Float ) setTranslationZ [androidJvm] open fun setTranslationZ (translationZ: Float ) setVerticalFadingEdgeEnabled [androidJvm] open fun setVerticalFadingEdgeEnabled (verticalFadingEdgeEnabled: Boolean ) setVerticalScrollBarEnabled [androidJvm] open fun setVerticalScrollBarEnabled (verticalScrollBarEnabled: Boolean ) setVerticalScrollbarPosition [androidJvm] open fun setVerticalScrollbarPosition (position: Int ) setVerticalScrollbarThumbDrawable [androidJvm] open fun setVerticalScrollbarThumbDrawable (drawable: Drawable ) setVerticalScrollbarTrackDrawable [androidJvm] open fun setVerticalScrollbarTrackDrawable (drawable: Drawable ) setViewTranslationCallback [androidJvm] open fun setViewTranslationCallback (callback: ViewTranslationCallback ) setVisibility [androidJvm] open fun setVisibility (visibility: Int ) setWillNotCacheDrawing [androidJvm] open fun setWillNotCacheDrawing (willNotCacheDrawing: Boolean ) setWillNotDraw [androidJvm] open fun setWillNotDraw (willNotDraw: Boolean ) setWindowInsetsAnimationCallback [androidJvm] open fun setWindowInsetsAnimationCallback (callback: WindowInsetsAnimation.Callback ) setX [androidJvm] open fun setX (x: Float ) setY [androidJvm] open fun setY (y: Float ) setZ [androidJvm] open fun setZ (z: Float ) shouldDelayChildPressedState [androidJvm] open fun shouldDelayChildPressedState (): Boolean showContextMenu [androidJvm] open fun showContextMenu (): Boolean showContextMenuForChild [androidJvm] open fun showContextMenuForChild (originalView: View ): Boolean startActionMode [androidJvm] open fun startActionMode (callback: ActionMode.Callback ): ActionMode startActionModeForChild [androidJvm] open fun startActionModeForChild (originalView: View , callback: ActionMode.Callback ): ActionMode startAnimation [androidJvm] open fun startAnimation (animation: Animation ) startDrag [androidJvm] fun startDrag (data: ClipData , shadowBuilder: View.DragShadowBuilder , myLocalState: Any , flags: Int ): Boolean startDragAndDrop [androidJvm] fun startDragAndDrop (data: ClipData , shadowBuilder: View.DragShadowBuilder , myLocalState: Any , flags: Int ): Boolean startLayoutAnimation [androidJvm] open fun startLayoutAnimation () startNestedScroll [androidJvm] open fun startNestedScroll (axes: Int ): Boolean startViewTransition [androidJvm] open fun startViewTransition (view: View ) stopNestedScroll [androidJvm] open fun stopNestedScroll () suppressLayout [androidJvm] open fun suppressLayout (suppress: Boolean ) toString [androidJvm] open fun toString (): String transformMatrixToGlobal [androidJvm] open fun transformMatrixToGlobal (matrix: Matrix ) transformMatrixToLocal [androidJvm] open fun transformMatrixToLocal (matrix: Matrix ) unscheduleDrawable [androidJvm] open fun unscheduleDrawable (who: Drawable , what: Runnable ) updateDragShadow [androidJvm] fun updateDragShadow (shadowBuilder: View.DragShadowBuilder ) updateViewLayout [androidJvm] open fun updateViewLayout (view: View , params: ViewGroup.LayoutParams ) willNotCacheDrawing [androidJvm] open fun willNotCacheDrawing (): Boolean willNotDraw [androidJvm] open fun willNotDraw (): Boolean","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/#properties","text":"Name Summary direction [androidJvm] open val direction : ReadingProgression","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/#inheritors","text":"Name R2ViewPager","title":"Inheritors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/-r2-r-t-l-view-pager/","text":"// navigator / org.readium.r2.navigator.pager / R2RTLViewPager / R2RTLViewPager R2RTLViewPager \u00b6 [androidJvm]\\ open fun R2RTLViewPager (context: Context ) open fun R2RTLViewPager (context: Context , attrs: AttributeSet )","title":" r2 r t l view pager"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/-r2-r-t-l-view-pager/#r2rtlviewpager","text":"[androidJvm]\\ open fun R2RTLViewPager (context: Context ) open fun R2RTLViewPager (context: Context , attrs: AttributeSet )","title":"R2RTLViewPager"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/add-on-page-change-listener/","text":"// navigator / org.readium.r2.navigator.pager / R2RTLViewPager / addOnPageChangeListener addOnPageChangeListener \u00b6 [androidJvm]\\ open fun addOnPageChangeListener (listener: ViewPager.OnPageChangeListener )","title":"Add on page change listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/add-on-page-change-listener/#addonpagechangelistener","text":"[androidJvm]\\ open fun addOnPageChangeListener (listener: ViewPager.OnPageChangeListener )","title":"addOnPageChangeListener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/clear-on-page-change-listeners/","text":"// navigator / org.readium.r2.navigator.pager / R2RTLViewPager / clearOnPageChangeListeners clearOnPageChangeListeners \u00b6 [androidJvm]\\ open fun clearOnPageChangeListeners ()","title":"Clear on page change listeners"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/clear-on-page-change-listeners/#clearonpagechangelisteners","text":"[androidJvm]\\ open fun clearOnPageChangeListeners ()","title":"clearOnPageChangeListeners"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/direction/","text":"// navigator / org.readium.r2.navigator.pager / R2RTLViewPager / direction direction \u00b6 [androidJvm]\\ open val direction : ReadingProgression","title":"Direction"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/direction/#direction","text":"[androidJvm]\\ open val direction : ReadingProgression","title":"direction"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/get-adapter/","text":"// navigator / org.readium.r2.navigator.pager / R2RTLViewPager / getAdapter getAdapter \u00b6 [androidJvm]\\ open fun getAdapter (): PagerAdapter","title":"Get adapter"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/get-adapter/#getadapter","text":"[androidJvm]\\ open fun getAdapter (): PagerAdapter","title":"getAdapter"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/get-current-item/","text":"// navigator / org.readium.r2.navigator.pager / R2RTLViewPager / getCurrentItem getCurrentItem \u00b6 [androidJvm]\\ open fun getCurrentItem (): Int","title":"Get current item"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/get-current-item/#getcurrentitem","text":"[androidJvm]\\ open fun getCurrentItem (): Int","title":"getCurrentItem"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/on-restore-instance-state/","text":"// navigator / org.readium.r2.navigator.pager / R2RTLViewPager / onRestoreInstanceState onRestoreInstanceState \u00b6 [androidJvm]\\ open fun onRestoreInstanceState (state: Parcelable )","title":"On restore instance state"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/on-restore-instance-state/#onrestoreinstancestate","text":"[androidJvm]\\ open fun onRestoreInstanceState (state: Parcelable )","title":"onRestoreInstanceState"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/on-rtl-properties-changed/","text":"// navigator / org.readium.r2.navigator.pager / R2RTLViewPager / onRtlPropertiesChanged onRtlPropertiesChanged \u00b6 [androidJvm]\\ open fun onRtlPropertiesChanged (layoutDirection: Int )","title":"On rtl properties changed"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/on-rtl-properties-changed/#onrtlpropertieschanged","text":"[androidJvm]\\ open fun onRtlPropertiesChanged (layoutDirection: Int )","title":"onRtlPropertiesChanged"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/on-save-instance-state/","text":"// navigator / org.readium.r2.navigator.pager / R2RTLViewPager / onSaveInstanceState onSaveInstanceState \u00b6 [androidJvm]\\ open fun onSaveInstanceState (): Parcelable","title":"On save instance state"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/on-save-instance-state/#onsaveinstancestate","text":"[androidJvm]\\ open fun onSaveInstanceState (): Parcelable","title":"onSaveInstanceState"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/remove-on-page-change-listener/","text":"// navigator / org.readium.r2.navigator.pager / R2RTLViewPager / removeOnPageChangeListener removeOnPageChangeListener \u00b6 [androidJvm]\\ open fun removeOnPageChangeListener (listener: ViewPager.OnPageChangeListener )","title":"Remove on page change listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/remove-on-page-change-listener/#removeonpagechangelistener","text":"[androidJvm]\\ open fun removeOnPageChangeListener (listener: ViewPager.OnPageChangeListener )","title":"removeOnPageChangeListener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/set-adapter/","text":"// navigator / org.readium.r2.navigator.pager / R2RTLViewPager / setAdapter setAdapter \u00b6 [androidJvm]\\ open fun setAdapter (adapter: PagerAdapter )","title":"Set adapter"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/set-adapter/#setadapter","text":"[androidJvm]\\ open fun setAdapter (adapter: PagerAdapter )","title":"setAdapter"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/set-current-item/","text":"// navigator / org.readium.r2.navigator.pager / R2RTLViewPager / setCurrentItem setCurrentItem \u00b6 [androidJvm]\\ open fun setCurrentItem (position: Int , smoothScroll: Boolean ) open fun setCurrentItem (position: Int )","title":"Set current item"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/set-current-item/#setcurrentitem","text":"[androidJvm]\\ open fun setCurrentItem (position: Int , smoothScroll: Boolean ) open fun setCurrentItem (position: Int )","title":"setCurrentItem"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/set-on-page-change-listener/","text":"// navigator / org.readium.r2.navigator.pager / R2RTLViewPager / setOnPageChangeListener setOnPageChangeListener \u00b6 [androidJvm]\\ open fun setOnPageChangeListener (listener: ViewPager.OnPageChangeListener ) Deprecated \u00b6","title":"Set on page change listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/set-on-page-change-listener/#setonpagechangelistener","text":"[androidJvm]\\ open fun setOnPageChangeListener (listener: ViewPager.OnPageChangeListener )","title":"setOnPageChangeListener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/set-on-page-change-listener/#deprecated","text":"","title":"Deprecated"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/-saved-state/","text":"// navigator / org.readium.r2.navigator.pager / R2RTLViewPager / SavedState SavedState \u00b6 [androidJvm]\\ open class SavedState : Parcelable Functions \u00b6 Name Summary describeContents [androidJvm] open fun describeContents (): Int writeToParcel [androidJvm] open fun writeToParcel (out: Parcel , flags: Int ) Properties \u00b6 Name Summary CREATOR [androidJvm] val CREATOR : Parcelable.Creator < R2RTLViewPager.SavedState >","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/-saved-state/#savedstate","text":"[androidJvm]\\ open class SavedState : Parcelable","title":"SavedState"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/-saved-state/#functions","text":"Name Summary describeContents [androidJvm] open fun describeContents (): Int writeToParcel [androidJvm] open fun writeToParcel (out: Parcel , flags: Int )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/-saved-state/#properties","text":"Name Summary CREATOR [androidJvm] val CREATOR : Parcelable.Creator < R2RTLViewPager.SavedState >","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/-saved-state/-c-r-e-a-t-o-r/","text":"// navigator / org.readium.r2.navigator.pager / R2RTLViewPager / SavedState / CREATOR CREATOR \u00b6 [androidJvm]\\ val CREATOR : Parcelable.Creator < R2RTLViewPager.SavedState >","title":" c r e a t o r"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/-saved-state/-c-r-e-a-t-o-r/#creator","text":"[androidJvm]\\ val CREATOR : Parcelable.Creator < R2RTLViewPager.SavedState >","title":"CREATOR"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/-saved-state/describe-contents/","text":"// navigator / org.readium.r2.navigator.pager / R2RTLViewPager / SavedState / describeContents describeContents \u00b6 [androidJvm]\\ open fun describeContents (): Int","title":"Describe contents"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/-saved-state/describe-contents/#describecontents","text":"[androidJvm]\\ open fun describeContents (): Int","title":"describeContents"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/-saved-state/write-to-parcel/","text":"// navigator / org.readium.r2.navigator.pager / R2RTLViewPager / SavedState / writeToParcel writeToParcel \u00b6 [androidJvm]\\ open fun writeToParcel (out: Parcel , flags: Int )","title":"Write to parcel"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-r-t-l-view-pager/-saved-state/write-to-parcel/#writetoparcel","text":"[androidJvm]\\ open fun writeToParcel (out: Parcel , flags: Int )","title":"writeToParcel"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-view-pager/","text":"// navigator / org.readium.r2.navigator.pager / R2ViewPager R2ViewPager \u00b6 [androidJvm]\\ class R2ViewPager : R2RTLViewPager Constructors \u00b6 R2ViewPager [androidJvm] fun R2ViewPager (context: Context ) R2ViewPager [androidJvm] fun R2ViewPager (context: Context , attrs: AttributeSet ) Functions \u00b6 Name Summary addChildrenForAccessibility [androidJvm] open override fun addChildrenForAccessibility (p0: ArrayList < View >) addExtraDataToAccessibilityNodeInfo [androidJvm] open override fun addExtraDataToAccessibilityNodeInfo (p0: AccessibilityNodeInfo , p1: String , p2: Bundle ?) addFocusables [androidJvm] open fun addFocusables (p0: ArrayList < View >, p1: Int ) open override fun addFocusables (views: ArrayList < View >, direction: Int , focusableMode: Int ) addKeyboardNavigationClusters [androidJvm] open override fun addKeyboardNavigationClusters (p0: MutableCollection < View >, p1: Int ) addNewItem [androidJvm] open fun addNewItem (position: Int , index: Int ): ViewPager.ItemInfo addOnAdapterChangeListener [androidJvm] open fun addOnAdapterChangeListener (@ NonNull listener: ViewPager.OnAdapterChangeListener ) addOnAttachStateChangeListener [androidJvm] open fun addOnAttachStateChangeListener (p0: View.OnAttachStateChangeListener ) addOnLayoutChangeListener [androidJvm] open fun addOnLayoutChangeListener (p0: View.OnLayoutChangeListener ) addOnPageChangeListener [androidJvm] open override fun addOnPageChangeListener (listener: ViewPager.OnPageChangeListener ) addOnUnhandledKeyEventListener [androidJvm] open fun addOnUnhandledKeyEventListener (p0: View.OnUnhandledKeyEventListener ) addStatesFromChildren [androidJvm] open fun addStatesFromChildren (): Boolean addTouchables [androidJvm] open override fun addTouchables (views: ArrayList < View >) addView [androidJvm] open fun addView (p0: View ) open override fun addView (p0: View , p1: ViewGroup.LayoutParams ) open fun addView (p0: View , p1: Int ) open fun addView (p0: View , p1: Int , p2: Int ) open override fun addView (child: View , index: Int , params: ViewGroup.LayoutParams ) addViewInLayout [androidJvm] open fun addViewInLayout (p0: View , p1: Int , p2: ViewGroup.LayoutParams ): Boolean open fun addViewInLayout (p0: View , p1: Int , p2: ViewGroup.LayoutParams , p3: Boolean ): Boolean animate [androidJvm] open fun animate (): ViewPropertyAnimator announceForAccessibility [androidJvm] open fun announceForAccessibility (p0: CharSequence ) arrowScroll [androidJvm] open fun arrowScroll (direction: Int ): Boolean attachLayoutAnimationParameters [androidJvm] open fun attachLayoutAnimationParameters (p0: View , p1: ViewGroup.LayoutParams , p2: Int , p3: Int ) attachViewToParent [androidJvm] open fun attachViewToParent (p0: View , p1: Int , p2: ViewGroup.LayoutParams ) autofill [androidJvm] open fun autofill (p0: SparseArray < AutofillValue >) open fun autofill (p0: AutofillValue ) awakenScrollBars [androidJvm] open fun awakenScrollBars (): Boolean open fun awakenScrollBars (p0: Int ): Boolean open fun awakenScrollBars (p0: Int , p1: Boolean ): Boolean beginFakeDrag [androidJvm] open fun beginFakeDrag (): Boolean bringChildToFront [androidJvm] open override fun bringChildToFront (p0: View ) bringToFront [androidJvm] open fun bringToFront () buildLayer [androidJvm] open fun buildLayer () callOnClick [androidJvm] open fun callOnClick (): Boolean canAnimate [androidJvm] open fun canAnimate (): Boolean cancelDragAndDrop [androidJvm] fun cancelDragAndDrop () cancelLongPress [androidJvm] open fun cancelLongPress () cancelPendingInputEvents [androidJvm] fun cancelPendingInputEvents () canResolveLayoutDirection [androidJvm] open fun canResolveLayoutDirection (): Boolean canResolveTextAlignment [androidJvm] open fun canResolveTextAlignment (): Boolean canResolveTextDirection [androidJvm] open fun canResolveTextDirection (): Boolean canScroll [androidJvm] open fun canScroll (v: View , checkV: Boolean , dx: Int , x: Int , y: Int ): Boolean canScrollHorizontally [androidJvm] open override fun canScrollHorizontally (direction: Int ): Boolean canScrollVertically [androidJvm] open fun canScrollVertically (p0: Int ): Boolean checkInputConnectionProxy [androidJvm] open fun checkInputConnectionProxy (p0: View ): Boolean checkLayoutParams [androidJvm] open override fun checkLayoutParams (p: ViewGroup.LayoutParams ): Boolean childDrawableStateChanged [androidJvm] open override fun childDrawableStateChanged (p0: View ) childHasTransientStateChanged [androidJvm] open override fun childHasTransientStateChanged (p0: View , p1: Boolean ) cleanupLayoutState [androidJvm] open fun cleanupLayoutState (p0: View ) clearAnimation [androidJvm] open fun clearAnimation () clearChildFocus [androidJvm] open override fun clearChildFocus (p0: View ) clearDisappearingChildren [androidJvm] open fun clearDisappearingChildren () clearFocus [androidJvm] open override fun clearFocus () clearOnPageChangeListeners [androidJvm] open override fun clearOnPageChangeListeners () clearViewTranslationCallback [androidJvm] open fun clearViewTranslationCallback () computeHorizontalScrollExtent [androidJvm] open fun computeHorizontalScrollExtent (): Int computeHorizontalScrollOffset [androidJvm] open fun computeHorizontalScrollOffset (): Int computeHorizontalScrollRange [androidJvm] open fun computeHorizontalScrollRange (): Int computeScroll [androidJvm] open override fun computeScroll () computeSystemWindowInsets [androidJvm] open fun computeSystemWindowInsets (p0: WindowInsets , p1: Rect ): WindowInsets computeVerticalScrollExtent [androidJvm] open fun computeVerticalScrollExtent (): Int computeVerticalScrollOffset [androidJvm] open fun computeVerticalScrollOffset (): Int computeVerticalScrollRange [androidJvm] open fun computeVerticalScrollRange (): Int createAccessibilityNodeInfo [androidJvm] open fun createAccessibilityNodeInfo (): AccessibilityNodeInfo createContextMenu [androidJvm] open fun createContextMenu (p0: ContextMenu ) dataSetChanged [androidJvm] open fun dataSetChanged () debug [androidJvm] open fun debug (p0: Int ) detachAllViewsFromParent [androidJvm] open fun detachAllViewsFromParent () detachViewFromParent [androidJvm] open fun detachViewFromParent (p0: View ) open fun detachViewFromParent (p0: Int ) detachViewsFromParent [androidJvm] open fun detachViewsFromParent (p0: Int , p1: Int ) dispatchApplyWindowInsets [androidJvm] open override fun dispatchApplyWindowInsets (p0: WindowInsets ): WindowInsets dispatchCapturedPointerEvent [androidJvm] open override fun dispatchCapturedPointerEvent (p0: MotionEvent ): Boolean dispatchConfigurationChanged [androidJvm] open override fun dispatchConfigurationChanged (p0: Configuration ) dispatchCreateViewTranslationRequest [androidJvm] open override fun dispatchCreateViewTranslationRequest (p0: MutableMap < AutofillId , LongArray >, p1: IntArray , p2: TranslationCapability , p3: MutableList < ViewTranslationRequest >) dispatchDisplayHint [androidJvm] open override fun dispatchDisplayHint (p0: Int ) dispatchDragEvent [androidJvm] open override fun dispatchDragEvent (p0: DragEvent ): Boolean dispatchDraw [androidJvm] open override fun dispatchDraw (p0: Canvas ) dispatchDrawableHotspotChanged [androidJvm] open override fun dispatchDrawableHotspotChanged (p0: Float , p1: Float ) dispatchFinishTemporaryDetach [androidJvm] open override fun dispatchFinishTemporaryDetach () dispatchFreezeSelfOnly [androidJvm] open fun dispatchFreezeSelfOnly (p0: SparseArray < Parcelable >) dispatchGenericFocusedEvent [androidJvm] open override fun dispatchGenericFocusedEvent (p0: MotionEvent ): Boolean dispatchGenericMotionEvent [androidJvm] open fun dispatchGenericMotionEvent (p0: MotionEvent ): Boolean dispatchGenericPointerEvent [androidJvm] open override fun dispatchGenericPointerEvent (p0: MotionEvent ): Boolean dispatchHoverEvent [androidJvm] open override fun dispatchHoverEvent (p0: MotionEvent ): Boolean dispatchKeyEvent [androidJvm] open override fun dispatchKeyEvent (event: KeyEvent ): Boolean dispatchKeyEventPreIme [androidJvm] open override fun dispatchKeyEventPreIme (p0: KeyEvent ): Boolean dispatchKeyShortcutEvent [androidJvm] open override fun dispatchKeyShortcutEvent (p0: KeyEvent ): Boolean dispatchNestedFling [androidJvm] open fun dispatchNestedFling (p0: Float , p1: Float , p2: Boolean ): Boolean dispatchNestedPreFling [androidJvm] open fun dispatchNestedPreFling (p0: Float , p1: Float ): Boolean dispatchNestedPrePerformAccessibilityAction [androidJvm] open fun dispatchNestedPrePerformAccessibilityAction (p0: Int , p1: Bundle ): Boolean dispatchNestedPreScroll [androidJvm] open fun dispatchNestedPreScroll (p0: Int , p1: Int , p2: IntArray ?, p3: IntArray ?): Boolean dispatchNestedScroll [androidJvm] open fun dispatchNestedScroll (p0: Int , p1: Int , p2: Int , p3: Int , p4: IntArray ?): Boolean dispatchPointerCaptureChanged [androidJvm] open override fun dispatchPointerCaptureChanged (p0: Boolean ) dispatchPopulateAccessibilityEvent [androidJvm] open override fun dispatchPopulateAccessibilityEvent (event: AccessibilityEvent ): Boolean dispatchProvideAutofillStructure [androidJvm] open override fun dispatchProvideAutofillStructure (p0: ViewStructure , p1: Int ) dispatchProvideStructure [androidJvm] open override fun dispatchProvideStructure (p0: ViewStructure ) dispatchRestoreInstanceState [androidJvm] open override fun dispatchRestoreInstanceState (p0: SparseArray < Parcelable >) dispatchSaveInstanceState [androidJvm] open override fun dispatchSaveInstanceState (p0: SparseArray < Parcelable >) dispatchScrollCaptureSearch [androidJvm] open override fun dispatchScrollCaptureSearch (p0: Rect , p1: Point , p2: Consumer < ScrollCaptureTarget >) dispatchSetActivated [androidJvm] open override fun dispatchSetActivated (p0: Boolean ) dispatchSetPressed [androidJvm] open override fun dispatchSetPressed (p0: Boolean ) dispatchSetSelected [androidJvm] open override fun dispatchSetSelected (p0: Boolean ) dispatchStartTemporaryDetach [androidJvm] open override fun dispatchStartTemporaryDetach () dispatchThawSelfOnly [androidJvm] open fun dispatchThawSelfOnly (p0: SparseArray < Parcelable >) dispatchTouchEvent [androidJvm] open override fun dispatchTouchEvent (p0: MotionEvent ): Boolean dispatchTrackballEvent [androidJvm] open override fun dispatchTrackballEvent (p0: MotionEvent ): Boolean dispatchUnhandledMove [androidJvm] open override fun dispatchUnhandledMove (p0: View , p1: Int ): Boolean dispatchVisibilityChanged [androidJvm] open override fun dispatchVisibilityChanged (p0: View , p1: Int ) dispatchWindowFocusChanged [androidJvm] open override fun dispatchWindowFocusChanged (p0: Boolean ) dispatchWindowInsetsAnimationEnd [androidJvm] open override fun dispatchWindowInsetsAnimationEnd (p0: WindowInsetsAnimation ) dispatchWindowInsetsAnimationPrepare [androidJvm] open override fun dispatchWindowInsetsAnimationPrepare (p0: WindowInsetsAnimation ) dispatchWindowInsetsAnimationProgress [androidJvm] open override fun dispatchWindowInsetsAnimationProgress (p0: WindowInsets , p1: MutableList < WindowInsetsAnimation >): WindowInsets dispatchWindowInsetsAnimationStart [androidJvm] open override fun dispatchWindowInsetsAnimationStart (p0: WindowInsetsAnimation , p1: WindowInsetsAnimation.Bounds ): WindowInsetsAnimation.Bounds dispatchWindowVisibilityChanged [androidJvm] open override fun dispatchWindowVisibilityChanged (p0: Int ) distanceInfluenceForSnapDuration [androidJvm] open fun distanceInfluenceForSnapDuration (f: Float ): Float draw [androidJvm] open override fun draw (canvas: Canvas ) drawableHotspotChanged [androidJvm] open fun drawableHotspotChanged (p0: Float , p1: Float ) drawableStateChanged [androidJvm] open override fun drawableStateChanged () drawChild [androidJvm] open fun drawChild (p0: Canvas , p1: View , p2: Long ): Boolean endFakeDrag [androidJvm] open fun endFakeDrag () endViewTransition [androidJvm] open fun endViewTransition (p0: View ) executeKeyEvent [androidJvm] open fun executeKeyEvent (@ NonNull event: KeyEvent ): Boolean fakeDragBy [androidJvm] open fun fakeDragBy (xOffset: Float ) findFocus [androidJvm] open override fun findFocus (): View findViewById [androidJvm] fun < T : View > findViewById (p0: Int ): T findViewsWithText [androidJvm] open override fun findViewsWithText (p0: ArrayList < View >, p1: CharSequence , p2: Int ) findViewWithTag [androidJvm] fun < T : View > findViewWithTag (p0: Any ): T focusableViewAvailable [androidJvm] open override fun focusableViewAvailable (p0: View ) focusSearch [androidJvm] open fun focusSearch (p0: Int ): View open override fun focusSearch (p0: View , p1: Int ): View forceHasOverlappingRendering [androidJvm] open fun forceHasOverlappingRendering (p0: Boolean ) forceLayout [androidJvm] open fun forceLayout () gatherTransparentRegion [androidJvm] open override fun gatherTransparentRegion (p0: Region ?): Boolean generateDefaultLayoutParams [androidJvm] open override fun generateDefaultLayoutParams (): ViewGroup.LayoutParams generateDisplayHash [androidJvm] open fun generateDisplayHash (p0: String , p1: Rect ?, p2: Executor , p3: DisplayHashResultCallback ) generateLayoutParams [androidJvm] open override fun generateLayoutParams (attrs: AttributeSet ): ViewGroup.LayoutParams open override fun generateLayoutParams (p: ViewGroup.LayoutParams ): ViewGroup.LayoutParams getAccessibilityClassName [androidJvm] open override fun getAccessibilityClassName (): CharSequence getAccessibilityDelegate [androidJvm] open fun getAccessibilityDelegate (): View.AccessibilityDelegate getAccessibilityLiveRegion [androidJvm] open fun getAccessibilityLiveRegion (): Int getAccessibilityNodeProvider [androidJvm] open fun getAccessibilityNodeProvider (): AccessibilityNodeProvider getAccessibilityPaneTitle [androidJvm] open fun getAccessibilityPaneTitle (): CharSequence ? getAccessibilityTraversalAfter [androidJvm] open fun getAccessibilityTraversalAfter (): Int getAccessibilityTraversalBefore [androidJvm] open fun getAccessibilityTraversalBefore (): Int getAdapter [androidJvm] open override fun getAdapter (): PagerAdapter ? getAlpha [androidJvm] open fun getAlpha (): Float getAnimation [androidJvm] open fun getAnimation (): Animation getAnimationMatrix [androidJvm] open fun getAnimationMatrix (): Matrix ? getApplicationWindowToken [androidJvm] open fun getApplicationWindowToken (): IBinder getAttributeResolutionStack [androidJvm] open fun getAttributeResolutionStack (p0: Int ): IntArray getAttributeSourceResourceMap [androidJvm] open fun getAttributeSourceResourceMap (): MutableMap < Int , Int > getAutofillHints [androidJvm] open fun getAutofillHints (): Array < String >? getAutofillId [androidJvm] fun getAutofillId (): AutofillId getAutofillType [androidJvm] open fun getAutofillType (): Int getAutofillValue [androidJvm] open fun getAutofillValue (): AutofillValue ? getBackground [androidJvm] open fun getBackground (): Drawable getBackgroundTintBlendMode [androidJvm] open fun getBackgroundTintBlendMode (): BlendMode ? getBackgroundTintList [androidJvm] open fun getBackgroundTintList (): ColorStateList ? getBackgroundTintMode [androidJvm] open fun getBackgroundTintMode (): PorterDuff.Mode ? getBaseline [androidJvm] open fun getBaseline (): Int getBottom [androidJvm] fun getBottom (): Int getBottomFadingEdgeStrength [androidJvm] open fun getBottomFadingEdgeStrength (): Float getBottomPaddingOffset [androidJvm] open fun getBottomPaddingOffset (): Int getCameraDistance [androidJvm] open fun getCameraDistance (): Float getChildAt [androidJvm] open fun getChildAt (p0: Int ): View getChildCount [androidJvm] open fun getChildCount (): Int getChildDrawingOrder [androidJvm] fun getChildDrawingOrder (p0: Int ): Int open override fun getChildDrawingOrder (childCount: Int , i: Int ): Int getChildStaticTransformation [androidJvm] open fun getChildStaticTransformation (p0: View , p1: Transformation ): Boolean getChildVisibleRect [androidJvm] open override fun getChildVisibleRect (p0: View , p1: Rect , p2: Point ): Boolean getClipBounds [androidJvm] open fun getClipBounds (): Rect open fun getClipBounds (p0: Rect ): Boolean getClipChildren [androidJvm] open fun getClipChildren (): Boolean getClipToOutline [androidJvm] fun getClipToOutline (): Boolean getClipToPadding [androidJvm] open fun getClipToPadding (): Boolean getContentCaptureSession [androidJvm] fun getContentCaptureSession (): ContentCaptureSession ? getContentDescription [androidJvm] open fun getContentDescription (): CharSequence getContext [androidJvm] fun getContext (): Context getContextMenuInfo [androidJvm] open fun getContextMenuInfo (): ContextMenu.ContextMenuInfo getCurrentItem [androidJvm] open override fun getCurrentItem (): Int getDefaultFocusHighlightEnabled [androidJvm] fun getDefaultFocusHighlightEnabled (): Boolean getDescendantFocusability [androidJvm] open fun getDescendantFocusability (): Int getDisplay [androidJvm] open fun getDisplay (): Display getDrawableState [androidJvm] fun getDrawableState (): IntArray getDrawingRect [androidJvm] open fun getDrawingRect (p0: Rect ) getDrawingTime [androidJvm] open fun getDrawingTime (): Long getElevation [androidJvm] open fun getElevation (): Float getExplicitStyle [androidJvm] open fun getExplicitStyle (): Int getFilterTouchesWhenObscured [androidJvm] open fun getFilterTouchesWhenObscured (): Boolean getFitsSystemWindows [androidJvm] open fun getFitsSystemWindows (): Boolean getFocusable [androidJvm] open fun getFocusable (): Int getFocusables [androidJvm] open fun getFocusables (p0: Int ): ArrayList < View > getFocusedChild [androidJvm] open fun getFocusedChild (): View getFocusedRect [androidJvm] open fun getFocusedRect (p0: Rect ) getForeground [androidJvm] open fun getForeground (): Drawable getForegroundGravity [androidJvm] open fun getForegroundGravity (): Int getForegroundTintBlendMode [androidJvm] open fun getForegroundTintBlendMode (): BlendMode ? getForegroundTintList [androidJvm] open fun getForegroundTintList (): ColorStateList ? getForegroundTintMode [androidJvm] open fun getForegroundTintMode (): PorterDuff.Mode ? getGlobalVisibleRect [androidJvm] fun getGlobalVisibleRect (p0: Rect ): Boolean open fun getGlobalVisibleRect (p0: Rect , p1: Point ): Boolean getHandler [androidJvm] open fun getHandler (): Handler getHasOverlappingRendering [androidJvm] fun getHasOverlappingRendering (): Boolean getHeight [androidJvm] fun getHeight (): Int getHitRect [androidJvm] open fun getHitRect (p0: Rect ) getHorizontalFadingEdgeLength [androidJvm] open fun getHorizontalFadingEdgeLength (): Int getHorizontalScrollbarHeight [androidJvm] open fun getHorizontalScrollbarHeight (): Int getHorizontalScrollbarThumbDrawable [androidJvm] open fun getHorizontalScrollbarThumbDrawable (): Drawable ? getHorizontalScrollbarTrackDrawable [androidJvm] open fun getHorizontalScrollbarTrackDrawable (): Drawable ? getId [androidJvm] open fun getId (): Int getImportantForAccessibility [androidJvm] open fun getImportantForAccessibility (): Int getImportantForAutofill [androidJvm] open fun getImportantForAutofill (): Int getImportantForContentCapture [androidJvm] open fun getImportantForContentCapture (): Int getKeepScreenOn [androidJvm] open fun getKeepScreenOn (): Boolean getKeyDispatcherState [androidJvm] open fun getKeyDispatcherState (): KeyEvent.DispatcherState getLabelFor [androidJvm] open fun getLabelFor (): Int getLayerType [androidJvm] open fun getLayerType (): Int getLayoutAnimation [androidJvm] open fun getLayoutAnimation (): LayoutAnimationController getLayoutAnimationListener [androidJvm] open fun getLayoutAnimationListener (): Animation.AnimationListener getLayoutDirection [androidJvm] open fun getLayoutDirection (): Int getLayoutMode [androidJvm] open fun getLayoutMode (): Int getLayoutParams [androidJvm] open fun getLayoutParams (): ViewGroup.LayoutParams getLayoutTransition [androidJvm] open fun getLayoutTransition (): LayoutTransition getLeft [androidJvm] fun getLeft (): Int getLeftFadingEdgeStrength [androidJvm] open fun getLeftFadingEdgeStrength (): Float getLeftPaddingOffset [androidJvm] open fun getLeftPaddingOffset (): Int getLocalVisibleRect [androidJvm] fun getLocalVisibleRect (p0: Rect ): Boolean getLocationInSurface [androidJvm] open fun getLocationInSurface (p0: IntArray ) getLocationInWindow [androidJvm] open fun getLocationInWindow (p0: IntArray ) getLocationOnScreen [androidJvm] open fun getLocationOnScreen (p0: IntArray ) getMatrix [androidJvm] open fun getMatrix (): Matrix getMeasuredHeight [androidJvm] fun getMeasuredHeight (): Int getMeasuredHeightAndState [androidJvm] fun getMeasuredHeightAndState (): Int getMeasuredState [androidJvm] fun getMeasuredState (): Int getMeasuredWidth [androidJvm] fun getMeasuredWidth (): Int getMeasuredWidthAndState [androidJvm] fun getMeasuredWidthAndState (): Int getMinimumHeight [androidJvm] open fun getMinimumHeight (): Int getMinimumWidth [androidJvm] open fun getMinimumWidth (): Int getNestedScrollAxes [androidJvm] open fun getNestedScrollAxes (): Int getNextClusterForwardId [androidJvm] open fun getNextClusterForwardId (): Int getNextFocusDownId [androidJvm] open fun getNextFocusDownId (): Int getNextFocusForwardId [androidJvm] open fun getNextFocusForwardId (): Int getNextFocusLeftId [androidJvm] open fun getNextFocusLeftId (): Int getNextFocusRightId [androidJvm] open fun getNextFocusRightId (): Int getNextFocusUpId [androidJvm] open fun getNextFocusUpId (): Int getOffscreenPageLimit [androidJvm] open fun getOffscreenPageLimit (): Int getOnFocusChangeListener [androidJvm] open fun getOnFocusChangeListener (): View.OnFocusChangeListener getOutlineAmbientShadowColor [androidJvm] open fun getOutlineAmbientShadowColor (): Int getOutlineProvider [androidJvm] open fun getOutlineProvider (): ViewOutlineProvider getOutlineSpotShadowColor [androidJvm] open fun getOutlineSpotShadowColor (): Int getOverlay [androidJvm] open override fun getOverlay (): ViewGroupOverlay getOverScrollMode [androidJvm] open fun getOverScrollMode (): Int getPaddingBottom [androidJvm] open fun getPaddingBottom (): Int getPaddingEnd [androidJvm] open fun getPaddingEnd (): Int getPaddingLeft [androidJvm] open fun getPaddingLeft (): Int getPaddingRight [androidJvm] open fun getPaddingRight (): Int getPaddingStart [androidJvm] open fun getPaddingStart (): Int getPaddingTop [androidJvm] open fun getPaddingTop (): Int getPageMargin [androidJvm] open fun getPageMargin (): Int getParent [androidJvm] fun getParent (): ViewParent getParentForAccessibility [androidJvm] open fun getParentForAccessibility (): ViewParent getPivotX [androidJvm] open fun getPivotX (): Float getPivotY [androidJvm] open fun getPivotY (): Float getPointerIcon [androidJvm] open fun getPointerIcon (): PointerIcon getReceiveContentMimeTypes [androidJvm] open fun getReceiveContentMimeTypes (): Array < String >? getResources [androidJvm] open fun getResources (): Resources getRevealOnFocusHint [androidJvm] fun getRevealOnFocusHint (): Boolean getRight [androidJvm] fun getRight (): Int getRightFadingEdgeStrength [androidJvm] open fun getRightFadingEdgeStrength (): Float getRightPaddingOffset [androidJvm] open fun getRightPaddingOffset (): Int getRootSurfaceControl [androidJvm] open fun getRootSurfaceControl (): AttachedSurfaceControl ? getRootView [androidJvm] open fun getRootView (): View getRootWindowInsets [androidJvm] open fun getRootWindowInsets (): WindowInsets getRotation [androidJvm] open fun getRotation (): Float getRotationX [androidJvm] open fun getRotationX (): Float getRotationY [androidJvm] open fun getRotationY (): Float getScaleX [androidJvm] open fun getScaleX (): Float getScaleY [androidJvm] open fun getScaleY (): Float getScrollBarDefaultDelayBeforeFade [androidJvm] open fun getScrollBarDefaultDelayBeforeFade (): Int getScrollBarFadeDuration [androidJvm] open fun getScrollBarFadeDuration (): Int getScrollBarSize [androidJvm] open fun getScrollBarSize (): Int getScrollBarStyle [androidJvm] open fun getScrollBarStyle (): Int getScrollCaptureHint [androidJvm] open fun getScrollCaptureHint (): Int getScrollIndicators [androidJvm] open fun getScrollIndicators (): Int getScrollX [androidJvm] fun getScrollX (): Int getScrollY [androidJvm] fun getScrollY (): Int getSolidColor [androidJvm] open fun getSolidColor (): Int getSourceLayoutResId [androidJvm] open fun getSourceLayoutResId (): Int getStateDescription [androidJvm] fun getStateDescription (): CharSequence ? getStateListAnimator [androidJvm] open fun getStateListAnimator (): StateListAnimator getSuggestedMinimumHeight [androidJvm] open fun getSuggestedMinimumHeight (): Int getSuggestedMinimumWidth [androidJvm] open fun getSuggestedMinimumWidth (): Int getSystemGestureExclusionRects [androidJvm] open fun getSystemGestureExclusionRects (): MutableList < Rect > getTag [androidJvm] open fun getTag (): Any open fun getTag (p0: Int ): Any getTextAlignment [androidJvm] open fun getTextAlignment (): Int getTextDirection [androidJvm] open fun getTextDirection (): Int getTooltipText [androidJvm] open fun getTooltipText (): CharSequence ? getTop [androidJvm] fun getTop (): Int getTopFadingEdgeStrength [androidJvm] open fun getTopFadingEdgeStrength (): Float getTopPaddingOffset [androidJvm] open fun getTopPaddingOffset (): Int getTouchables [androidJvm] open fun getTouchables (): ArrayList < View > getTouchDelegate [androidJvm] open fun getTouchDelegate (): TouchDelegate getTouchscreenBlocksFocus [androidJvm] open fun getTouchscreenBlocksFocus (): Boolean getTransitionAlpha [androidJvm] open fun getTransitionAlpha (): Float getTransitionName [androidJvm] open fun getTransitionName (): String getTranslationX [androidJvm] open fun getTranslationX (): Float getTranslationY [androidJvm] open fun getTranslationY (): Float getTranslationZ [androidJvm] open fun getTranslationZ (): Float getUniqueDrawingId [androidJvm] open fun getUniqueDrawingId (): Long getVerticalFadingEdgeLength [androidJvm] open fun getVerticalFadingEdgeLength (): Int getVerticalScrollbarPosition [androidJvm] open fun getVerticalScrollbarPosition (): Int getVerticalScrollbarThumbDrawable [androidJvm] open fun getVerticalScrollbarThumbDrawable (): Drawable ? getVerticalScrollbarTrackDrawable [androidJvm] open fun getVerticalScrollbarTrackDrawable (): Drawable ? getVerticalScrollbarWidth [androidJvm] open fun getVerticalScrollbarWidth (): Int getViewTranslationResponse [androidJvm] open fun getViewTranslationResponse (): ViewTranslationResponse ? getViewTreeObserver [androidJvm] open fun getViewTreeObserver (): ViewTreeObserver getVisibility [androidJvm] open fun getVisibility (): Int getWidth [androidJvm] fun getWidth (): Int getWindowAttachCount [androidJvm] open fun getWindowAttachCount (): Int getWindowId [androidJvm] open fun getWindowId (): WindowId getWindowInsetsController [androidJvm] open fun getWindowInsetsController (): WindowInsetsController ? getWindowToken [androidJvm] open fun getWindowToken (): IBinder getWindowVisibility [androidJvm] open fun getWindowVisibility (): Int getWindowVisibleDisplayFrame [androidJvm] open fun getWindowVisibleDisplayFrame (p0: Rect ) getX [androidJvm] open fun getX (): Float getY [androidJvm] open fun getY (): Float getZ [androidJvm] open fun getZ (): Float hasExplicitFocusable [androidJvm] open fun hasExplicitFocusable (): Boolean hasFocus [androidJvm] open override fun hasFocus (): Boolean hasFocusable [androidJvm] open fun hasFocusable (): Boolean hasNestedScrollingParent [androidJvm] open fun hasNestedScrollingParent (): Boolean hasOnClickListeners [androidJvm] open fun hasOnClickListeners (): Boolean hasOnLongClickListeners [androidJvm] open fun hasOnLongClickListeners (): Boolean hasOverlappingRendering [androidJvm] open fun hasOverlappingRendering (): Boolean hasPointerCapture [androidJvm] open fun hasPointerCapture (): Boolean hasTransientState [androidJvm] open override fun hasTransientState (): Boolean hasWindowFocus [androidJvm] open fun hasWindowFocus (): Boolean indexOfChild [androidJvm] open fun indexOfChild (p0: View ): Int infoForAnyChild [androidJvm] open fun infoForAnyChild (child: View ): ViewPager.ItemInfo infoForChild [androidJvm] open fun infoForChild (child: View ): ViewPager.ItemInfo infoForPosition [androidJvm] open fun infoForPosition (position: Int ): ViewPager.ItemInfo initViewPager [androidJvm] open fun initViewPager () invalidate [androidJvm] open fun invalidate () invalidateDrawable [androidJvm] open override fun invalidateDrawable (p0: Drawable ) invalidateOutline [androidJvm] open fun invalidateOutline () isAccessibilityFocused [androidJvm] open fun isAccessibilityFocused (): Boolean isAccessibilityHeading [androidJvm] open fun isAccessibilityHeading (): Boolean isActivated [androidJvm] open fun isActivated (): Boolean isAttachedToWindow [androidJvm] open fun isAttachedToWindow (): Boolean isChildrenDrawingOrderEnabled [androidJvm] open fun isChildrenDrawingOrderEnabled (): Boolean isClickable [androidJvm] open fun isClickable (): Boolean isContextClickable [androidJvm] open fun isContextClickable (): Boolean isDirty [androidJvm] open fun isDirty (): Boolean isDuplicateParentStateEnabled [androidJvm] open fun isDuplicateParentStateEnabled (): Boolean isEnabled [androidJvm] open fun isEnabled (): Boolean isFakeDragging [androidJvm] open fun isFakeDragging (): Boolean isFocusable [androidJvm] fun isFocusable (): Boolean isFocusableInTouchMode [androidJvm] fun isFocusableInTouchMode (): Boolean isFocused [androidJvm] open fun isFocused (): Boolean isFocusedByDefault [androidJvm] fun isFocusedByDefault (): Boolean isForceDarkAllowed [androidJvm] open fun isForceDarkAllowed (): Boolean isHapticFeedbackEnabled [androidJvm] open fun isHapticFeedbackEnabled (): Boolean isHardwareAccelerated [androidJvm] open fun isHardwareAccelerated (): Boolean isHorizontalFadingEdgeEnabled [androidJvm] open fun isHorizontalFadingEdgeEnabled (): Boolean isHorizontalScrollBarEnabled [androidJvm] open fun isHorizontalScrollBarEnabled (): Boolean isHovered [androidJvm] open fun isHovered (): Boolean isImportantForAccessibility [androidJvm] open fun isImportantForAccessibility (): Boolean isImportantForAutofill [androidJvm] fun isImportantForAutofill (): Boolean isImportantForContentCapture [androidJvm] fun isImportantForContentCapture (): Boolean isInEditMode [androidJvm] open fun isInEditMode (): Boolean isInLayout [androidJvm] open fun isInLayout (): Boolean isInTouchMode [androidJvm] open fun isInTouchMode (): Boolean isKeyboardNavigationCluster [androidJvm] fun isKeyboardNavigationCluster (): Boolean isLaidOut [androidJvm] open fun isLaidOut (): Boolean isLayoutDirectionResolved [androidJvm] open fun isLayoutDirectionResolved (): Boolean isLayoutRequested [androidJvm] open fun isLayoutRequested (): Boolean isLayoutSuppressed [androidJvm] open fun isLayoutSuppressed (): Boolean isLongClickable [androidJvm] open fun isLongClickable (): Boolean isMotionEventSplittingEnabled [androidJvm] open fun isMotionEventSplittingEnabled (): Boolean isNestedScrollingEnabled [androidJvm] open fun isNestedScrollingEnabled (): Boolean isOpaque [androidJvm] open fun isOpaque (): Boolean isPaddingOffsetRequired [androidJvm] open fun isPaddingOffsetRequired (): Boolean isPaddingRelative [androidJvm] open fun isPaddingRelative (): Boolean isPivotSet [androidJvm] open fun isPivotSet (): Boolean isPressed [androidJvm] open fun isPressed (): Boolean isSaveEnabled [androidJvm] open fun isSaveEnabled (): Boolean isSaveFromParentEnabled [androidJvm] open fun isSaveFromParentEnabled (): Boolean isScreenReaderFocusable [androidJvm] open fun isScreenReaderFocusable (): Boolean isScrollbarFadingEnabled [androidJvm] open fun isScrollbarFadingEnabled (): Boolean isScrollContainer [androidJvm] open fun isScrollContainer (): Boolean isSelected [androidJvm] open fun isSelected (): Boolean isShowingLayoutBounds [androidJvm] fun isShowingLayoutBounds (): Boolean isShown [androidJvm] open fun isShown (): Boolean isSoundEffectsEnabled [androidJvm] open fun isSoundEffectsEnabled (): Boolean isTemporarilyDetached [androidJvm] fun isTemporarilyDetached (): Boolean isTextAlignmentResolved [androidJvm] open fun isTextAlignmentResolved (): Boolean isTextDirectionResolved [androidJvm] open fun isTextDirectionResolved (): Boolean isTransitionGroup [androidJvm] open fun isTransitionGroup (): Boolean isVerticalFadingEdgeEnabled [androidJvm] open fun isVerticalFadingEdgeEnabled (): Boolean isVerticalScrollBarEnabled [androidJvm] open fun isVerticalScrollBarEnabled (): Boolean isVisibleToUserForAutofill [androidJvm] open fun isVisibleToUserForAutofill (p0: Int ): Boolean jumpDrawablesToCurrentState [androidJvm] open override fun jumpDrawablesToCurrentState () keyboardNavigationClusterSearch [androidJvm] open fun keyboardNavigationClusterSearch (p0: View , p1: Int ): View layout [androidJvm] override fun layout (p0: Int , p1: Int , p2: Int , p3: Int ) measure [androidJvm] fun measure (p0: Int , p1: Int ) measureChild [androidJvm] open fun measureChild (p0: View , p1: Int , p2: Int ) measureChildren [androidJvm] open fun measureChildren (p0: Int , p1: Int ) measureChildWithMargins [androidJvm] open fun measureChildWithMargins (p0: View , p1: Int , p2: Int , p3: Int , p4: Int ) notifySubtreeAccessibilityStateChanged [androidJvm] open override fun notifySubtreeAccessibilityStateChanged (p0: View , p1: View , p2: Int ) offsetDescendantRectToMyCoords [androidJvm] fun offsetDescendantRectToMyCoords (p0: View , p1: Rect ) offsetLeftAndRight [androidJvm] open fun offsetLeftAndRight (p0: Int ) offsetRectIntoDescendantCoords [androidJvm] fun offsetRectIntoDescendantCoords (p0: View , p1: Rect ) offsetTopAndBottom [androidJvm] open fun offsetTopAndBottom (p0: Int ) onAnimationEnd [androidJvm] open fun onAnimationEnd () onAnimationStart [androidJvm] open fun onAnimationStart () onApplyWindowInsets [androidJvm] open fun onApplyWindowInsets (p0: WindowInsets ): WindowInsets onAttachedToWindow [androidJvm] open override fun onAttachedToWindow () onCancelPendingInputEvents [androidJvm] open fun onCancelPendingInputEvents () onCapturedPointerEvent [androidJvm] open fun onCapturedPointerEvent (p0: MotionEvent ): Boolean onCheckIsTextEditor [androidJvm] open fun onCheckIsTextEditor (): Boolean onConfigurationChanged [androidJvm] open fun onConfigurationChanged (p0: Configuration ) onCreateContextMenu [androidJvm] open fun onCreateContextMenu (p0: ContextMenu ) onCreateDrawableState [androidJvm] open override fun onCreateDrawableState (p0: Int ): IntArray onCreateInputConnection [androidJvm] open fun onCreateInputConnection (p0: EditorInfo ): InputConnection onCreateViewTranslationRequest [androidJvm] open fun onCreateViewTranslationRequest (p0: IntArray , p1: Consumer < ViewTranslationRequest >) onCreateVirtualViewTranslationRequests [androidJvm] open fun onCreateVirtualViewTranslationRequests (p0: LongArray , p1: IntArray , p2: Consumer < ViewTranslationRequest >) onDescendantInvalidated [androidJvm] open override fun onDescendantInvalidated (p0: View , p1: View ) onDetachedFromWindow [androidJvm] open override fun onDetachedFromWindow () onDisplayHint [androidJvm] open fun onDisplayHint (p0: Int ) onDragEvent [androidJvm] open fun onDragEvent (p0: DragEvent ): Boolean onDraw [androidJvm] open override fun onDraw (canvas: Canvas ) onDrawForeground [androidJvm] open fun onDrawForeground (p0: Canvas ) onDrawScrollBars [androidJvm] fun onDrawScrollBars (p0: Canvas ) onFilterTouchEventForSecurity [androidJvm] open fun onFilterTouchEventForSecurity (p0: MotionEvent ): Boolean onFinishInflate [androidJvm] open fun onFinishInflate () onFinishTemporaryDetach [androidJvm] open fun onFinishTemporaryDetach () onFocusChanged [androidJvm] open fun onFocusChanged (p0: Boolean , p1: Int , p2: Rect ?) onGenericMotionEvent [androidJvm] open fun onGenericMotionEvent (p0: MotionEvent ): Boolean onHoverChanged [androidJvm] open fun onHoverChanged (p0: Boolean ) onHoverEvent [androidJvm] open fun onHoverEvent (p0: MotionEvent ): Boolean onInitializeAccessibilityEvent [androidJvm] open fun onInitializeAccessibilityEvent (p0: AccessibilityEvent ) onInitializeAccessibilityNodeInfo [androidJvm] open fun onInitializeAccessibilityNodeInfo (p0: AccessibilityNodeInfo ) onInterceptHoverEvent [androidJvm] open fun onInterceptHoverEvent (p0: MotionEvent ): Boolean onInterceptTouchEvent [androidJvm] open override fun onInterceptTouchEvent (ev: MotionEvent ): Boolean onKeyDown [androidJvm] open override fun onKeyDown (p0: Int , p1: KeyEvent ): Boolean onKeyLongPress [androidJvm] open override fun onKeyLongPress (p0: Int , p1: KeyEvent ): Boolean onKeyMultiple [androidJvm] open override fun onKeyMultiple (p0: Int , p1: Int , p2: KeyEvent ): Boolean onKeyPreIme [androidJvm] open fun onKeyPreIme (p0: Int , p1: KeyEvent ): Boolean onKeyShortcut [androidJvm] open fun onKeyShortcut (p0: Int , p1: KeyEvent ): Boolean onKeyUp [androidJvm] open override fun onKeyUp (p0: Int , p1: KeyEvent ): Boolean onLayout [androidJvm] open override fun onLayout (changed: Boolean , l: Int , t: Int , r: Int , b: Int ) onMeasure [androidJvm] open override fun onMeasure (widthMeasureSpec: Int , heightMeasureSpec: Int ) onNestedFling [androidJvm] open override fun onNestedFling (p0: View , p1: Float , p2: Float , p3: Boolean ): Boolean onNestedPreFling [androidJvm] open override fun onNestedPreFling (p0: View , p1: Float , p2: Float ): Boolean onNestedPrePerformAccessibilityAction [androidJvm] open override fun onNestedPrePerformAccessibilityAction (p0: View , p1: Int , p2: Bundle ): Boolean onNestedPreScroll [androidJvm] open override fun onNestedPreScroll (p0: View , p1: Int , p2: Int , p3: IntArray ) onNestedScroll [androidJvm] open override fun onNestedScroll (p0: View , p1: Int , p2: Int , p3: Int , p4: Int ) onNestedScrollAccepted [androidJvm] open override fun onNestedScrollAccepted (p0: View , p1: View , p2: Int ) onOverScrolled [androidJvm] open fun onOverScrolled (p0: Int , p1: Int , p2: Boolean , p3: Boolean ) onPageScrolled [androidJvm] @ CallSuper open fun onPageScrolled (position: Int , offset: Float , offsetPixels: Int ) onPointerCaptureChange [androidJvm] open fun onPointerCaptureChange (p0: Boolean ) onPopulateAccessibilityEvent [androidJvm] open fun onPopulateAccessibilityEvent (p0: AccessibilityEvent ) onProvideAutofillStructure [androidJvm] open fun onProvideAutofillStructure (p0: ViewStructure , p1: Int ) onProvideAutofillVirtualStructure [androidJvm] open fun onProvideAutofillVirtualStructure (p0: ViewStructure , p1: Int ) onProvideContentCaptureStructure [androidJvm] open fun onProvideContentCaptureStructure (p0: ViewStructure , p1: Int ) onProvideStructure [androidJvm] open fun onProvideStructure (p0: ViewStructure ) onProvideVirtualStructure [androidJvm] open fun onProvideVirtualStructure (p0: ViewStructure ) onReceiveContent [androidJvm] open fun onReceiveContent (p0: ContentInfo ): ContentInfo ? onRequestFocusInDescendants [androidJvm] open override fun onRequestFocusInDescendants (direction: Int , previouslyFocusedRect: Rect ): Boolean onRequestSendAccessibilityEvent [androidJvm] open fun onRequestSendAccessibilityEvent (p0: View , p1: AccessibilityEvent ): Boolean onResolvePointerIcon [androidJvm] open override fun onResolvePointerIcon (p0: MotionEvent , p1: Int ): PointerIcon onRestoreInstanceState [androidJvm] open override fun onRestoreInstanceState (state: Parcelable ) onRtlPropertiesChanged [androidJvm] open override fun onRtlPropertiesChanged (layoutDirection: Int ) onSaveInstanceState [androidJvm] open override fun onSaveInstanceState (): Parcelable ? onScreenStateChanged [androidJvm] open fun onScreenStateChanged (p0: Int ) onScrollCaptureSearch [androidJvm] open fun onScrollCaptureSearch (p0: Rect , p1: Point , p2: Consumer < ScrollCaptureTarget >) onScrollChanged [androidJvm] open fun onScrollChanged (p0: Int , p1: Int , p2: Int , p3: Int ) onSetAlpha [androidJvm] open fun onSetAlpha (p0: Int ): Boolean onSizeChanged [androidJvm] open override fun onSizeChanged (w: Int , h: Int , oldw: Int , oldh: Int ) onStartNestedScroll [androidJvm] open override fun onStartNestedScroll (p0: View , p1: View , p2: Int ): Boolean onStartTemporaryDetach [androidJvm] open fun onStartTemporaryDetach () onStopNestedScroll [androidJvm] open override fun onStopNestedScroll (p0: View ) onTouchEvent [androidJvm] open override fun onTouchEvent (ev: MotionEvent ): Boolean onTrackballEvent [androidJvm] open fun onTrackballEvent (p0: MotionEvent ): Boolean onViewAdded [androidJvm] open fun onViewAdded (p0: View ) onViewRemoved [androidJvm] open fun onViewRemoved (p0: View ) onViewTranslationResponse [androidJvm] open fun onViewTranslationResponse (p0: ViewTranslationResponse ) onVirtualViewTranslationResponses [androidJvm] open fun onVirtualViewTranslationResponses (p0: LongSparseArray < ViewTranslationResponse >) onVisibilityAggregated [androidJvm] open fun onVisibilityAggregated (p0: Boolean ) onVisibilityChanged [androidJvm] open fun onVisibilityChanged (p0: View , p1: Int ) onWindowFocusChanged [androidJvm] open fun onWindowFocusChanged (p0: Boolean ) onWindowVisibilityChanged [androidJvm] open fun onWindowVisibilityChanged (p0: Int ) overScrollBy [androidJvm] open fun overScrollBy (p0: Int , p1: Int , p2: Int , p3: Int , p4: Int , p5: Int , p6: Int , p7: Int , p8: Boolean ): Boolean pageLeft [androidJvm] open fun pageLeft (): Boolean pageRight [androidJvm] open fun pageRight (): Boolean performAccessibilityAction [androidJvm] open fun performAccessibilityAction (p0: Int , p1: Bundle ): Boolean performClick [androidJvm] open fun performClick (): Boolean performContextClick [androidJvm] open fun performContextClick (): Boolean open fun performContextClick (p0: Float , p1: Float ): Boolean performHapticFeedback [androidJvm] open fun performHapticFeedback (p0: Int ): Boolean open fun performHapticFeedback (p0: Int , p1: Int ): Boolean performLongClick [androidJvm] open fun performLongClick (): Boolean open fun performLongClick (p0: Float , p1: Float ): Boolean performReceiveContent [androidJvm] open fun performReceiveContent (p0: ContentInfo ): ContentInfo ? playSoundEffect [androidJvm] open fun playSoundEffect (p0: Int ) populate [androidJvm] open fun populate () open fun populate (newCurrentItem: Int ) post [androidJvm] open fun post (p0: Runnable ): Boolean postDelayed [androidJvm] open fun postDelayed (p0: Runnable , p1: Long ): Boolean postInvalidate [androidJvm] open fun postInvalidate () open fun postInvalidate (p0: Int , p1: Int , p2: Int , p3: Int ) postInvalidateDelayed [androidJvm] open fun postInvalidateDelayed (p0: Long ) open fun postInvalidateDelayed (p0: Long , p1: Int , p2: Int , p3: Int , p4: Int ) postInvalidateOnAnimation [androidJvm] open fun postInvalidateOnAnimation () open fun postInvalidateOnAnimation (p0: Int , p1: Int , p2: Int , p3: Int ) postOnAnimation [androidJvm] open fun postOnAnimation (p0: Runnable ) postOnAnimationDelayed [androidJvm] open fun postOnAnimationDelayed (p0: Runnable , p1: Long ) recomputeViewAttributes [androidJvm] open override fun recomputeViewAttributes (p0: View ) refreshDrawableState [androidJvm] open fun refreshDrawableState () releasePointerCapture [androidJvm] open fun releasePointerCapture () removeAllViews [androidJvm] open fun removeAllViews () removeAllViewsInLayout [androidJvm] open fun removeAllViewsInLayout () removeCallbacks [androidJvm] open fun removeCallbacks (p0: Runnable ): Boolean removeDetachedView [androidJvm] open fun removeDetachedView (p0: View , p1: Boolean ) removeOnAdapterChangeListener [androidJvm] open fun removeOnAdapterChangeListener (@ NonNull listener: ViewPager.OnAdapterChangeListener ) removeOnAttachStateChangeListener [androidJvm] open fun removeOnAttachStateChangeListener (p0: View.OnAttachStateChangeListener ) removeOnLayoutChangeListener [androidJvm] open fun removeOnLayoutChangeListener (p0: View.OnLayoutChangeListener ) removeOnPageChangeListener [androidJvm] open override fun removeOnPageChangeListener (listener: ViewPager.OnPageChangeListener ) removeOnUnhandledKeyEventListener [androidJvm] open fun removeOnUnhandledKeyEventListener (p0: View.OnUnhandledKeyEventListener ) removeView [androidJvm] open override fun removeView (view: View ) removeViewAt [androidJvm] open fun removeViewAt (p0: Int ) removeViewInLayout [androidJvm] open fun removeViewInLayout (p0: View ) removeViews [androidJvm] open fun removeViews (p0: Int , p1: Int ) removeViewsInLayout [androidJvm] open fun removeViewsInLayout (p0: Int , p1: Int ) requestApplyInsets [androidJvm] open fun requestApplyInsets () requestChildFocus [androidJvm] open override fun requestChildFocus (p0: View , p1: View ) requestChildRectangleOnScreen [androidJvm] open override fun requestChildRectangleOnScreen (p0: View , p1: Rect , p2: Boolean ): Boolean requestDisallowInterceptTouchEvent [androidJvm] open override fun requestDisallowInterceptTouchEvent (p0: Boolean ) requestFocus [androidJvm] fun requestFocus (): Boolean fun requestFocus (p0: Int ): Boolean open override fun requestFocus (p0: Int , p1: Rect ): Boolean requestFocusFromTouch [androidJvm] fun requestFocusFromTouch (): Boolean requestLayout [androidJvm] open fun requestLayout () requestPointerCapture [androidJvm] open fun requestPointerCapture () requestRectangleOnScreen [androidJvm] open fun requestRectangleOnScreen (p0: Rect ): Boolean open fun requestRectangleOnScreen (p0: Rect , p1: Boolean ): Boolean requestSendAccessibilityEvent [androidJvm] open override fun requestSendAccessibilityEvent (p0: View , p1: AccessibilityEvent ): Boolean requestTransparentRegion [androidJvm] open override fun requestTransparentRegion (p0: View ) requestUnbufferedDispatch [androidJvm] fun requestUnbufferedDispatch (p0: MotionEvent ) fun requestUnbufferedDispatch (p0: Int ) requireViewById [androidJvm] fun < T : View > requireViewById (p0: Int ): T resetPivot [androidJvm] open fun resetPivot () restoreDefaultFocus [androidJvm] open override fun restoreDefaultFocus (): Boolean restoreHierarchyState [androidJvm] open fun restoreHierarchyState (p0: SparseArray < Parcelable >) saveAttributeDataForStyleable [androidJvm] fun saveAttributeDataForStyleable (p0: Context , p1: IntArray , p2: AttributeSet ?, p3: TypedArray , p4: Int , p5: Int ) saveHierarchyState [androidJvm] open fun saveHierarchyState (p0: SparseArray < Parcelable >) scheduleDrawable [androidJvm] open override fun scheduleDrawable (p0: Drawable , p1: Runnable , p2: Long ) scheduleLayoutAnimation [androidJvm] open fun scheduleLayoutAnimation () scrollBy [androidJvm] open fun scrollBy (p0: Int , p1: Int ) scrollTo [androidJvm] open fun scrollTo (p0: Int , p1: Int ) sendAccessibilityEvent [androidJvm] open override fun sendAccessibilityEvent (p0: Int ) sendAccessibilityEventUnchecked [androidJvm] open override fun sendAccessibilityEventUnchecked (p0: AccessibilityEvent ) setAccessibilityDelegate [androidJvm] open fun setAccessibilityDelegate (p0: View.AccessibilityDelegate ?) setAccessibilityHeading [androidJvm] open fun setAccessibilityHeading (p0: Boolean ) setAccessibilityLiveRegion [androidJvm] open fun setAccessibilityLiveRegion (p0: Int ) setAccessibilityPaneTitle [androidJvm] open fun setAccessibilityPaneTitle (p0: CharSequence ?) setAccessibilityTraversalAfter [androidJvm] open fun setAccessibilityTraversalAfter (p0: Int ) setAccessibilityTraversalBefore [androidJvm] open fun setAccessibilityTraversalBefore (p0: Int ) setActivated [androidJvm] open fun setActivated (p0: Boolean ) setAdapter [androidJvm] open override fun setAdapter (adapter: PagerAdapter ?) setAddStatesFromChildren [androidJvm] open fun setAddStatesFromChildren (p0: Boolean ) setAllowClickWhenDisabled [androidJvm] open fun setAllowClickWhenDisabled (p0: Boolean ) setAlpha [androidJvm] open fun setAlpha (p0: Float ) setAnimation [androidJvm] open fun setAnimation (p0: Animation ) setAnimationMatrix [androidJvm] open fun setAnimationMatrix (p0: Matrix ?) setAutofillHints [androidJvm] open fun setAutofillHints (vararg p0: String ) setAutofillId [androidJvm] open fun setAutofillId (p0: AutofillId ?) setBackground [androidJvm] open fun setBackground (p0: Drawable ) setBackgroundColor [androidJvm] open fun setBackgroundColor (p0: Int ) setBackgroundResource [androidJvm] open fun setBackgroundResource (p0: Int ) setBackgroundTintBlendMode [androidJvm] open fun setBackgroundTintBlendMode (p0: BlendMode ?) setBackgroundTintList [androidJvm] open fun setBackgroundTintList (p0: ColorStateList ?) setBackgroundTintMode [androidJvm] open fun setBackgroundTintMode (p0: PorterDuff.Mode ?) setBottom [androidJvm] fun setBottom (p0: Int ) setCameraDistance [androidJvm] open fun setCameraDistance (p0: Float ) setChildrenDrawingOrderEnabled [androidJvm] open fun setChildrenDrawingOrderEnabled (p0: Boolean ) setClickable [androidJvm] open fun setClickable (p0: Boolean ) setClipBounds [androidJvm] open fun setClipBounds (p0: Rect ) setClipChildren [androidJvm] open fun setClipChildren (p0: Boolean ) setClipToOutline [androidJvm] open fun setClipToOutline (p0: Boolean ) setClipToPadding [androidJvm] open fun setClipToPadding (p0: Boolean ) setContentCaptureSession [androidJvm] open fun setContentCaptureSession (p0: ContentCaptureSession ?) setContentDescription [androidJvm] open fun setContentDescription (p0: CharSequence ) setContextClickable [androidJvm] open fun setContextClickable (p0: Boolean ) setCurrentItem [androidJvm] open override fun setCurrentItem (item: Int ) open override fun setCurrentItem (position: Int , smoothScroll: Boolean ) setCurrentItemInternal [androidJvm] open fun setCurrentItemInternal (item: Int , smoothScroll: Boolean , always: Boolean ) open fun setCurrentItemInternal (item: Int , smoothScroll: Boolean , always: Boolean , velocity: Int ) setDefaultFocusHighlightEnabled [androidJvm] open fun setDefaultFocusHighlightEnabled (p0: Boolean ) setDescendantFocusability [androidJvm] open fun setDescendantFocusability (p0: Int ) setDuplicateParentStateEnabled [androidJvm] open fun setDuplicateParentStateEnabled (p0: Boolean ) setElevation [androidJvm] open fun setElevation (p0: Float ) setEnabled [androidJvm] open fun setEnabled (p0: Boolean ) setFadingEdgeLength [androidJvm] open fun setFadingEdgeLength (p0: Int ) setFilterTouchesWhenObscured [androidJvm] open fun setFilterTouchesWhenObscured (p0: Boolean ) setFitsSystemWindows [androidJvm] open fun setFitsSystemWindows (p0: Boolean ) setFocusable [androidJvm] open fun setFocusable (p0: Boolean ) open fun setFocusable (p0: Int ) setFocusableInTouchMode [androidJvm] open fun setFocusableInTouchMode (p0: Boolean ) setFocusedByDefault [androidJvm] open fun setFocusedByDefault (p0: Boolean ) setForceDarkAllowed [androidJvm] open fun setForceDarkAllowed (p0: Boolean ) setForeground [androidJvm] open fun setForeground (p0: Drawable ) setForegroundGravity [androidJvm] open fun setForegroundGravity (p0: Int ) setForegroundTintBlendMode [androidJvm] open fun setForegroundTintBlendMode (p0: BlendMode ?) setForegroundTintList [androidJvm] open fun setForegroundTintList (p0: ColorStateList ?) setForegroundTintMode [androidJvm] open fun setForegroundTintMode (p0: PorterDuff.Mode ?) setHapticFeedbackEnabled [androidJvm] open fun setHapticFeedbackEnabled (p0: Boolean ) setHasTransientState [androidJvm] open fun setHasTransientState (p0: Boolean ) setHorizontalFadingEdgeEnabled [androidJvm] open fun setHorizontalFadingEdgeEnabled (p0: Boolean ) setHorizontalScrollBarEnabled [androidJvm] open fun setHorizontalScrollBarEnabled (p0: Boolean ) setHorizontalScrollbarThumbDrawable [androidJvm] open fun setHorizontalScrollbarThumbDrawable (p0: Drawable ?) setHorizontalScrollbarTrackDrawable [androidJvm] open fun setHorizontalScrollbarTrackDrawable (p0: Drawable ?) setHovered [androidJvm] open fun setHovered (p0: Boolean ) setId [androidJvm] open fun setId (p0: Int ) setImportantForAccessibility [androidJvm] open fun setImportantForAccessibility (p0: Int ) setImportantForAutofill [androidJvm] open fun setImportantForAutofill (p0: Int ) setImportantForContentCapture [androidJvm] open fun setImportantForContentCapture (p0: Int ) setInternalPageChangeListener [androidJvm] open fun setInternalPageChangeListener (listener: ViewPager.OnPageChangeListener ): ViewPager.OnPageChangeListener setKeepScreenOn [androidJvm] open fun setKeepScreenOn (p0: Boolean ) setKeyboardNavigationCluster [androidJvm] open fun setKeyboardNavigationCluster (p0: Boolean ) setLabelFor [androidJvm] open fun setLabelFor (p0: Int ) setLayerPaint [androidJvm] open fun setLayerPaint (p0: Paint ?) setLayerType [androidJvm] open fun setLayerType (p0: Int , p1: Paint ?) setLayoutAnimation [androidJvm] open fun setLayoutAnimation (p0: LayoutAnimationController ) setLayoutAnimationListener [androidJvm] open fun setLayoutAnimationListener (p0: Animation.AnimationListener ) setLayoutDirection [androidJvm] open fun setLayoutDirection (p0: Int ) setLayoutMode [androidJvm] open fun setLayoutMode (p0: Int ) setLayoutParams [androidJvm] open fun setLayoutParams (p0: ViewGroup.LayoutParams ) setLayoutTransition [androidJvm] open fun setLayoutTransition (p0: LayoutTransition ) setLeft [androidJvm] fun setLeft (p0: Int ) setLeftTopRightBottom [androidJvm] fun setLeftTopRightBottom (p0: Int , p1: Int , p2: Int , p3: Int ) setLongClickable [androidJvm] open fun setLongClickable (p0: Boolean ) setMeasuredDimension [androidJvm] fun setMeasuredDimension (p0: Int , p1: Int ) setMinimumHeight [androidJvm] open fun setMinimumHeight (p0: Int ) setMinimumWidth [androidJvm] open fun setMinimumWidth (p0: Int ) setMotionEventSplittingEnabled [androidJvm] open fun setMotionEventSplittingEnabled (p0: Boolean ) setNestedScrollingEnabled [androidJvm] open fun setNestedScrollingEnabled (p0: Boolean ) setNextClusterForwardId [androidJvm] open fun setNextClusterForwardId (p0: Int ) setNextFocusDownId [androidJvm] open fun setNextFocusDownId (p0: Int ) setNextFocusForwardId [androidJvm] open fun setNextFocusForwardId (p0: Int ) setNextFocusLeftId [androidJvm] open fun setNextFocusLeftId (p0: Int ) setNextFocusRightId [androidJvm] open fun setNextFocusRightId (p0: Int ) setNextFocusUpId [androidJvm] open fun setNextFocusUpId (p0: Int ) setOffscreenPageLimit [androidJvm] open fun setOffscreenPageLimit (limit: Int ) setOnApplyWindowInsetsListener [androidJvm] open fun setOnApplyWindowInsetsListener (p0: View.OnApplyWindowInsetsListener ) setOnCapturedPointerListener [androidJvm] open fun setOnCapturedPointerListener (p0: View.OnCapturedPointerListener ) setOnClickListener [androidJvm] open fun setOnClickListener (p0: View.OnClickListener ?) setOnContextClickListener [androidJvm] open fun setOnContextClickListener (p0: View.OnContextClickListener ?) setOnCreateContextMenuListener [androidJvm] open fun setOnCreateContextMenuListener (p0: View.OnCreateContextMenuListener ) setOnDragListener [androidJvm] open fun setOnDragListener (p0: View.OnDragListener ) setOnFocusChangeListener [androidJvm] open fun setOnFocusChangeListener (p0: View.OnFocusChangeListener ) setOnGenericMotionListener [androidJvm] open fun setOnGenericMotionListener (p0: View.OnGenericMotionListener ) setOnHierarchyChangeListener [androidJvm] open fun setOnHierarchyChangeListener (p0: ViewGroup.OnHierarchyChangeListener ) setOnHoverListener [androidJvm] open fun setOnHoverListener (p0: View.OnHoverListener ) setOnKeyListener [androidJvm] open fun setOnKeyListener (p0: View.OnKeyListener ) setOnLongClickListener [androidJvm] open fun setOnLongClickListener (p0: View.OnLongClickListener ?) setOnPageChangeListener [androidJvm] open override fun setOnPageChangeListener (listener: ViewPager.OnPageChangeListener ) setOnReceiveContentListener [androidJvm] open fun setOnReceiveContentListener (p0: Array < String >?, p1: OnReceiveContentListener ?) setOnScrollChangeListener [androidJvm] open fun setOnScrollChangeListener (p0: View.OnScrollChangeListener ) setOnTouchListener [androidJvm] open fun setOnTouchListener (p0: View.OnTouchListener ) setOutlineAmbientShadowColor [androidJvm] open fun setOutlineAmbientShadowColor (p0: Int ) setOutlineProvider [androidJvm] open fun setOutlineProvider (p0: ViewOutlineProvider ) setOutlineSpotShadowColor [androidJvm] open fun setOutlineSpotShadowColor (p0: Int ) setOverScrollMode [androidJvm] open fun setOverScrollMode (p0: Int ) setPadding [androidJvm] open fun setPadding (p0: Int , p1: Int , p2: Int , p3: Int ) setPaddingRelative [androidJvm] open fun setPaddingRelative (p0: Int , p1: Int , p2: Int , p3: Int ) setPageMargin [androidJvm] open fun setPageMargin (marginPixels: Int ) setPageMarginDrawable [androidJvm] open fun setPageMarginDrawable (@ Nullable d: Drawable ?) open fun setPageMarginDrawable (@ DrawableRes resId: Int ) setPageTransformer [androidJvm] open fun setPageTransformer (reverseDrawingOrder: Boolean , @ Nullable transformer: ViewPager.PageTransformer ?) open fun setPageTransformer (reverseDrawingOrder: Boolean , @ Nullable transformer: ViewPager.PageTransformer ?, pageLayerType: Int ) setPivotX [androidJvm] open fun setPivotX (p0: Float ) setPivotY [androidJvm] open fun setPivotY (p0: Float ) setPointerIcon [androidJvm] open fun setPointerIcon (p0: PointerIcon ) setPressed [androidJvm] open fun setPressed (p0: Boolean ) setRenderEffect [androidJvm] open fun setRenderEffect (p0: RenderEffect ?) setRevealOnFocusHint [androidJvm] fun setRevealOnFocusHint (p0: Boolean ) setRight [androidJvm] fun setRight (p0: Int ) setRotation [androidJvm] open fun setRotation (p0: Float ) setRotationX [androidJvm] open fun setRotationX (p0: Float ) setRotationY [androidJvm] open fun setRotationY (p0: Float ) setSaveEnabled [androidJvm] open fun setSaveEnabled (p0: Boolean ) setSaveFromParentEnabled [androidJvm] open fun setSaveFromParentEnabled (p0: Boolean ) setScaleX [androidJvm] open fun setScaleX (p0: Float ) setScaleY [androidJvm] open fun setScaleY (p0: Float ) setScreenReaderFocusable [androidJvm] open fun setScreenReaderFocusable (p0: Boolean ) setScrollBarDefaultDelayBeforeFade [androidJvm] open fun setScrollBarDefaultDelayBeforeFade (p0: Int ) setScrollBarFadeDuration [androidJvm] open fun setScrollBarFadeDuration (p0: Int ) setScrollbarFadingEnabled [androidJvm] open fun setScrollbarFadingEnabled (p0: Boolean ) setScrollBarSize [androidJvm] open fun setScrollBarSize (p0: Int ) setScrollBarStyle [androidJvm] open fun setScrollBarStyle (p0: Int ) setScrollCaptureCallback [androidJvm] fun setScrollCaptureCallback (p0: ScrollCaptureCallback ?) setScrollCaptureHint [androidJvm] open fun setScrollCaptureHint (p0: Int ) setScrollContainer [androidJvm] open fun setScrollContainer (p0: Boolean ) setScrollIndicators [androidJvm] open fun setScrollIndicators (p0: Int ) open fun setScrollIndicators (p0: Int , p1: Int ) setScrollState [androidJvm] open fun setScrollState (newState: Int ) setScrollX [androidJvm] open fun setScrollX (p0: Int ) setScrollY [androidJvm] open fun setScrollY (p0: Int ) setSelected [androidJvm] open fun setSelected (p0: Boolean ) setSoundEffectsEnabled [androidJvm] open fun setSoundEffectsEnabled (p0: Boolean ) setStateDescription [androidJvm] open fun setStateDescription (p0: CharSequence ?) setStateListAnimator [androidJvm] open fun setStateListAnimator (p0: StateListAnimator ) setStaticTransformationsEnabled [androidJvm] open fun setStaticTransformationsEnabled (p0: Boolean ) setSystemGestureExclusionRects [androidJvm] open fun setSystemGestureExclusionRects (p0: MutableList < Rect >) setTag [androidJvm] open fun setTag (p0: Any ) open fun setTag (p0: Int , p1: Any ) setTextAlignment [androidJvm] open fun setTextAlignment (p0: Int ) setTextDirection [androidJvm] open fun setTextDirection (p0: Int ) setTooltipText [androidJvm] open fun setTooltipText (p0: CharSequence ?) setTop [androidJvm] fun setTop (p0: Int ) setTouchDelegate [androidJvm] open fun setTouchDelegate (p0: TouchDelegate ) setTouchscreenBlocksFocus [androidJvm] open fun setTouchscreenBlocksFocus (p0: Boolean ) setTransitionAlpha [androidJvm] open fun setTransitionAlpha (p0: Float ) setTransitionGroup [androidJvm] open fun setTransitionGroup (p0: Boolean ) setTransitionName [androidJvm] fun setTransitionName (p0: String ) setTransitionVisibility [androidJvm] open fun setTransitionVisibility (p0: Int ) setTranslationX [androidJvm] open fun setTranslationX (p0: Float ) setTranslationY [androidJvm] open fun setTranslationY (p0: Float ) setTranslationZ [androidJvm] open fun setTranslationZ (p0: Float ) setVerticalFadingEdgeEnabled [androidJvm] open fun setVerticalFadingEdgeEnabled (p0: Boolean ) setVerticalScrollBarEnabled [androidJvm] open fun setVerticalScrollBarEnabled (p0: Boolean ) setVerticalScrollbarPosition [androidJvm] open fun setVerticalScrollbarPosition (p0: Int ) setVerticalScrollbarThumbDrawable [androidJvm] open fun setVerticalScrollbarThumbDrawable (p0: Drawable ?) setVerticalScrollbarTrackDrawable [androidJvm] open fun setVerticalScrollbarTrackDrawable (p0: Drawable ?) setViewTranslationCallback [androidJvm] open fun setViewTranslationCallback (p0: ViewTranslationCallback ) setVisibility [androidJvm] open fun setVisibility (p0: Int ) setWillNotDraw [androidJvm] open fun setWillNotDraw (p0: Boolean ) setWindowInsetsAnimationCallback [androidJvm] open override fun setWindowInsetsAnimationCallback (p0: WindowInsetsAnimation.Callback ?) setX [androidJvm] open fun setX (p0: Float ) setY [androidJvm] open fun setY (p0: Float ) setZ [androidJvm] open fun setZ (p0: Float ) shouldDelayChildPressedState [androidJvm] open fun shouldDelayChildPressedState (): Boolean showContextMenu [androidJvm] open fun showContextMenu (): Boolean open fun showContextMenu (p0: Float , p1: Float ): Boolean showContextMenuForChild [androidJvm] open override fun showContextMenuForChild (p0: View ): Boolean open override fun showContextMenuForChild (p0: View , p1: Float , p2: Float ): Boolean smoothScrollTo [androidJvm] open fun smoothScrollTo (x: Int , y: Int ) open fun smoothScrollTo (x: Int , y: Int , velocity: Int ) startActionMode [androidJvm] open fun startActionMode (p0: ActionMode.Callback ): ActionMode open fun startActionMode (p0: ActionMode.Callback , p1: Int ): ActionMode startActionModeForChild [androidJvm] open override fun startActionModeForChild (p0: View , p1: ActionMode.Callback ): ActionMode open override fun startActionModeForChild (p0: View , p1: ActionMode.Callback , p2: Int ): ActionMode startAnimation [androidJvm] open fun startAnimation (p0: Animation ) startDragAndDrop [androidJvm] fun startDragAndDrop (p0: ClipData , p1: View.DragShadowBuilder , p2: Any , p3: Int ): Boolean startLayoutAnimation [androidJvm] open fun startLayoutAnimation () startNestedScroll [androidJvm] open fun startNestedScroll (p0: Int ): Boolean startViewTransition [androidJvm] open fun startViewTransition (p0: View ) stopNestedScroll [androidJvm] open fun stopNestedScroll () suppressLayout [androidJvm] open fun suppressLayout (p0: Boolean ) toString [androidJvm] open override fun toString (): String transformMatrixToGlobal [androidJvm] open fun transformMatrixToGlobal (p0: Matrix ) transformMatrixToLocal [androidJvm] open fun transformMatrixToLocal (p0: Matrix ) unscheduleDrawable [androidJvm] open fun unscheduleDrawable (p0: Drawable ) open override fun unscheduleDrawable (p0: Drawable , p1: Runnable ) updateDragShadow [androidJvm] fun updateDragShadow (p0: View.DragShadowBuilder ) updateViewLayout [androidJvm] open override fun updateViewLayout (p0: View , p1: ViewGroup.LayoutParams ) verifyDrawable [androidJvm] open override fun verifyDrawable (who: Drawable ): Boolean willNotDraw [androidJvm] open fun willNotDraw (): Boolean Properties \u00b6 Name Summary direction [androidJvm] val direction : ReadingProgression mAdapter [androidJvm] val mAdapter : PagerAdapter mCurItem [androidJvm] val mCurItem : Int type [androidJvm] lateinit var type : Publication.TYPE","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-view-pager/#r2viewpager","text":"[androidJvm]\\ class R2ViewPager : R2RTLViewPager","title":"R2ViewPager"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-view-pager/#constructors","text":"R2ViewPager [androidJvm] fun R2ViewPager (context: Context ) R2ViewPager [androidJvm] fun R2ViewPager (context: Context , attrs: AttributeSet )","title":"Constructors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-view-pager/#functions","text":"Name Summary addChildrenForAccessibility [androidJvm] open override fun addChildrenForAccessibility (p0: ArrayList < View >) addExtraDataToAccessibilityNodeInfo [androidJvm] open override fun addExtraDataToAccessibilityNodeInfo (p0: AccessibilityNodeInfo , p1: String , p2: Bundle ?) addFocusables [androidJvm] open fun addFocusables (p0: ArrayList < View >, p1: Int ) open override fun addFocusables (views: ArrayList < View >, direction: Int , focusableMode: Int ) addKeyboardNavigationClusters [androidJvm] open override fun addKeyboardNavigationClusters (p0: MutableCollection < View >, p1: Int ) addNewItem [androidJvm] open fun addNewItem (position: Int , index: Int ): ViewPager.ItemInfo addOnAdapterChangeListener [androidJvm] open fun addOnAdapterChangeListener (@ NonNull listener: ViewPager.OnAdapterChangeListener ) addOnAttachStateChangeListener [androidJvm] open fun addOnAttachStateChangeListener (p0: View.OnAttachStateChangeListener ) addOnLayoutChangeListener [androidJvm] open fun addOnLayoutChangeListener (p0: View.OnLayoutChangeListener ) addOnPageChangeListener [androidJvm] open override fun addOnPageChangeListener (listener: ViewPager.OnPageChangeListener ) addOnUnhandledKeyEventListener [androidJvm] open fun addOnUnhandledKeyEventListener (p0: View.OnUnhandledKeyEventListener ) addStatesFromChildren [androidJvm] open fun addStatesFromChildren (): Boolean addTouchables [androidJvm] open override fun addTouchables (views: ArrayList < View >) addView [androidJvm] open fun addView (p0: View ) open override fun addView (p0: View , p1: ViewGroup.LayoutParams ) open fun addView (p0: View , p1: Int ) open fun addView (p0: View , p1: Int , p2: Int ) open override fun addView (child: View , index: Int , params: ViewGroup.LayoutParams ) addViewInLayout [androidJvm] open fun addViewInLayout (p0: View , p1: Int , p2: ViewGroup.LayoutParams ): Boolean open fun addViewInLayout (p0: View , p1: Int , p2: ViewGroup.LayoutParams , p3: Boolean ): Boolean animate [androidJvm] open fun animate (): ViewPropertyAnimator announceForAccessibility [androidJvm] open fun announceForAccessibility (p0: CharSequence ) arrowScroll [androidJvm] open fun arrowScroll (direction: Int ): Boolean attachLayoutAnimationParameters [androidJvm] open fun attachLayoutAnimationParameters (p0: View , p1: ViewGroup.LayoutParams , p2: Int , p3: Int ) attachViewToParent [androidJvm] open fun attachViewToParent (p0: View , p1: Int , p2: ViewGroup.LayoutParams ) autofill [androidJvm] open fun autofill (p0: SparseArray < AutofillValue >) open fun autofill (p0: AutofillValue ) awakenScrollBars [androidJvm] open fun awakenScrollBars (): Boolean open fun awakenScrollBars (p0: Int ): Boolean open fun awakenScrollBars (p0: Int , p1: Boolean ): Boolean beginFakeDrag [androidJvm] open fun beginFakeDrag (): Boolean bringChildToFront [androidJvm] open override fun bringChildToFront (p0: View ) bringToFront [androidJvm] open fun bringToFront () buildLayer [androidJvm] open fun buildLayer () callOnClick [androidJvm] open fun callOnClick (): Boolean canAnimate [androidJvm] open fun canAnimate (): Boolean cancelDragAndDrop [androidJvm] fun cancelDragAndDrop () cancelLongPress [androidJvm] open fun cancelLongPress () cancelPendingInputEvents [androidJvm] fun cancelPendingInputEvents () canResolveLayoutDirection [androidJvm] open fun canResolveLayoutDirection (): Boolean canResolveTextAlignment [androidJvm] open fun canResolveTextAlignment (): Boolean canResolveTextDirection [androidJvm] open fun canResolveTextDirection (): Boolean canScroll [androidJvm] open fun canScroll (v: View , checkV: Boolean , dx: Int , x: Int , y: Int ): Boolean canScrollHorizontally [androidJvm] open override fun canScrollHorizontally (direction: Int ): Boolean canScrollVertically [androidJvm] open fun canScrollVertically (p0: Int ): Boolean checkInputConnectionProxy [androidJvm] open fun checkInputConnectionProxy (p0: View ): Boolean checkLayoutParams [androidJvm] open override fun checkLayoutParams (p: ViewGroup.LayoutParams ): Boolean childDrawableStateChanged [androidJvm] open override fun childDrawableStateChanged (p0: View ) childHasTransientStateChanged [androidJvm] open override fun childHasTransientStateChanged (p0: View , p1: Boolean ) cleanupLayoutState [androidJvm] open fun cleanupLayoutState (p0: View ) clearAnimation [androidJvm] open fun clearAnimation () clearChildFocus [androidJvm] open override fun clearChildFocus (p0: View ) clearDisappearingChildren [androidJvm] open fun clearDisappearingChildren () clearFocus [androidJvm] open override fun clearFocus () clearOnPageChangeListeners [androidJvm] open override fun clearOnPageChangeListeners () clearViewTranslationCallback [androidJvm] open fun clearViewTranslationCallback () computeHorizontalScrollExtent [androidJvm] open fun computeHorizontalScrollExtent (): Int computeHorizontalScrollOffset [androidJvm] open fun computeHorizontalScrollOffset (): Int computeHorizontalScrollRange [androidJvm] open fun computeHorizontalScrollRange (): Int computeScroll [androidJvm] open override fun computeScroll () computeSystemWindowInsets [androidJvm] open fun computeSystemWindowInsets (p0: WindowInsets , p1: Rect ): WindowInsets computeVerticalScrollExtent [androidJvm] open fun computeVerticalScrollExtent (): Int computeVerticalScrollOffset [androidJvm] open fun computeVerticalScrollOffset (): Int computeVerticalScrollRange [androidJvm] open fun computeVerticalScrollRange (): Int createAccessibilityNodeInfo [androidJvm] open fun createAccessibilityNodeInfo (): AccessibilityNodeInfo createContextMenu [androidJvm] open fun createContextMenu (p0: ContextMenu ) dataSetChanged [androidJvm] open fun dataSetChanged () debug [androidJvm] open fun debug (p0: Int ) detachAllViewsFromParent [androidJvm] open fun detachAllViewsFromParent () detachViewFromParent [androidJvm] open fun detachViewFromParent (p0: View ) open fun detachViewFromParent (p0: Int ) detachViewsFromParent [androidJvm] open fun detachViewsFromParent (p0: Int , p1: Int ) dispatchApplyWindowInsets [androidJvm] open override fun dispatchApplyWindowInsets (p0: WindowInsets ): WindowInsets dispatchCapturedPointerEvent [androidJvm] open override fun dispatchCapturedPointerEvent (p0: MotionEvent ): Boolean dispatchConfigurationChanged [androidJvm] open override fun dispatchConfigurationChanged (p0: Configuration ) dispatchCreateViewTranslationRequest [androidJvm] open override fun dispatchCreateViewTranslationRequest (p0: MutableMap < AutofillId , LongArray >, p1: IntArray , p2: TranslationCapability , p3: MutableList < ViewTranslationRequest >) dispatchDisplayHint [androidJvm] open override fun dispatchDisplayHint (p0: Int ) dispatchDragEvent [androidJvm] open override fun dispatchDragEvent (p0: DragEvent ): Boolean dispatchDraw [androidJvm] open override fun dispatchDraw (p0: Canvas ) dispatchDrawableHotspotChanged [androidJvm] open override fun dispatchDrawableHotspotChanged (p0: Float , p1: Float ) dispatchFinishTemporaryDetach [androidJvm] open override fun dispatchFinishTemporaryDetach () dispatchFreezeSelfOnly [androidJvm] open fun dispatchFreezeSelfOnly (p0: SparseArray < Parcelable >) dispatchGenericFocusedEvent [androidJvm] open override fun dispatchGenericFocusedEvent (p0: MotionEvent ): Boolean dispatchGenericMotionEvent [androidJvm] open fun dispatchGenericMotionEvent (p0: MotionEvent ): Boolean dispatchGenericPointerEvent [androidJvm] open override fun dispatchGenericPointerEvent (p0: MotionEvent ): Boolean dispatchHoverEvent [androidJvm] open override fun dispatchHoverEvent (p0: MotionEvent ): Boolean dispatchKeyEvent [androidJvm] open override fun dispatchKeyEvent (event: KeyEvent ): Boolean dispatchKeyEventPreIme [androidJvm] open override fun dispatchKeyEventPreIme (p0: KeyEvent ): Boolean dispatchKeyShortcutEvent [androidJvm] open override fun dispatchKeyShortcutEvent (p0: KeyEvent ): Boolean dispatchNestedFling [androidJvm] open fun dispatchNestedFling (p0: Float , p1: Float , p2: Boolean ): Boolean dispatchNestedPreFling [androidJvm] open fun dispatchNestedPreFling (p0: Float , p1: Float ): Boolean dispatchNestedPrePerformAccessibilityAction [androidJvm] open fun dispatchNestedPrePerformAccessibilityAction (p0: Int , p1: Bundle ): Boolean dispatchNestedPreScroll [androidJvm] open fun dispatchNestedPreScroll (p0: Int , p1: Int , p2: IntArray ?, p3: IntArray ?): Boolean dispatchNestedScroll [androidJvm] open fun dispatchNestedScroll (p0: Int , p1: Int , p2: Int , p3: Int , p4: IntArray ?): Boolean dispatchPointerCaptureChanged [androidJvm] open override fun dispatchPointerCaptureChanged (p0: Boolean ) dispatchPopulateAccessibilityEvent [androidJvm] open override fun dispatchPopulateAccessibilityEvent (event: AccessibilityEvent ): Boolean dispatchProvideAutofillStructure [androidJvm] open override fun dispatchProvideAutofillStructure (p0: ViewStructure , p1: Int ) dispatchProvideStructure [androidJvm] open override fun dispatchProvideStructure (p0: ViewStructure ) dispatchRestoreInstanceState [androidJvm] open override fun dispatchRestoreInstanceState (p0: SparseArray < Parcelable >) dispatchSaveInstanceState [androidJvm] open override fun dispatchSaveInstanceState (p0: SparseArray < Parcelable >) dispatchScrollCaptureSearch [androidJvm] open override fun dispatchScrollCaptureSearch (p0: Rect , p1: Point , p2: Consumer < ScrollCaptureTarget >) dispatchSetActivated [androidJvm] open override fun dispatchSetActivated (p0: Boolean ) dispatchSetPressed [androidJvm] open override fun dispatchSetPressed (p0: Boolean ) dispatchSetSelected [androidJvm] open override fun dispatchSetSelected (p0: Boolean ) dispatchStartTemporaryDetach [androidJvm] open override fun dispatchStartTemporaryDetach () dispatchThawSelfOnly [androidJvm] open fun dispatchThawSelfOnly (p0: SparseArray < Parcelable >) dispatchTouchEvent [androidJvm] open override fun dispatchTouchEvent (p0: MotionEvent ): Boolean dispatchTrackballEvent [androidJvm] open override fun dispatchTrackballEvent (p0: MotionEvent ): Boolean dispatchUnhandledMove [androidJvm] open override fun dispatchUnhandledMove (p0: View , p1: Int ): Boolean dispatchVisibilityChanged [androidJvm] open override fun dispatchVisibilityChanged (p0: View , p1: Int ) dispatchWindowFocusChanged [androidJvm] open override fun dispatchWindowFocusChanged (p0: Boolean ) dispatchWindowInsetsAnimationEnd [androidJvm] open override fun dispatchWindowInsetsAnimationEnd (p0: WindowInsetsAnimation ) dispatchWindowInsetsAnimationPrepare [androidJvm] open override fun dispatchWindowInsetsAnimationPrepare (p0: WindowInsetsAnimation ) dispatchWindowInsetsAnimationProgress [androidJvm] open override fun dispatchWindowInsetsAnimationProgress (p0: WindowInsets , p1: MutableList < WindowInsetsAnimation >): WindowInsets dispatchWindowInsetsAnimationStart [androidJvm] open override fun dispatchWindowInsetsAnimationStart (p0: WindowInsetsAnimation , p1: WindowInsetsAnimation.Bounds ): WindowInsetsAnimation.Bounds dispatchWindowVisibilityChanged [androidJvm] open override fun dispatchWindowVisibilityChanged (p0: Int ) distanceInfluenceForSnapDuration [androidJvm] open fun distanceInfluenceForSnapDuration (f: Float ): Float draw [androidJvm] open override fun draw (canvas: Canvas ) drawableHotspotChanged [androidJvm] open fun drawableHotspotChanged (p0: Float , p1: Float ) drawableStateChanged [androidJvm] open override fun drawableStateChanged () drawChild [androidJvm] open fun drawChild (p0: Canvas , p1: View , p2: Long ): Boolean endFakeDrag [androidJvm] open fun endFakeDrag () endViewTransition [androidJvm] open fun endViewTransition (p0: View ) executeKeyEvent [androidJvm] open fun executeKeyEvent (@ NonNull event: KeyEvent ): Boolean fakeDragBy [androidJvm] open fun fakeDragBy (xOffset: Float ) findFocus [androidJvm] open override fun findFocus (): View findViewById [androidJvm] fun < T : View > findViewById (p0: Int ): T findViewsWithText [androidJvm] open override fun findViewsWithText (p0: ArrayList < View >, p1: CharSequence , p2: Int ) findViewWithTag [androidJvm] fun < T : View > findViewWithTag (p0: Any ): T focusableViewAvailable [androidJvm] open override fun focusableViewAvailable (p0: View ) focusSearch [androidJvm] open fun focusSearch (p0: Int ): View open override fun focusSearch (p0: View , p1: Int ): View forceHasOverlappingRendering [androidJvm] open fun forceHasOverlappingRendering (p0: Boolean ) forceLayout [androidJvm] open fun forceLayout () gatherTransparentRegion [androidJvm] open override fun gatherTransparentRegion (p0: Region ?): Boolean generateDefaultLayoutParams [androidJvm] open override fun generateDefaultLayoutParams (): ViewGroup.LayoutParams generateDisplayHash [androidJvm] open fun generateDisplayHash (p0: String , p1: Rect ?, p2: Executor , p3: DisplayHashResultCallback ) generateLayoutParams [androidJvm] open override fun generateLayoutParams (attrs: AttributeSet ): ViewGroup.LayoutParams open override fun generateLayoutParams (p: ViewGroup.LayoutParams ): ViewGroup.LayoutParams getAccessibilityClassName [androidJvm] open override fun getAccessibilityClassName (): CharSequence getAccessibilityDelegate [androidJvm] open fun getAccessibilityDelegate (): View.AccessibilityDelegate getAccessibilityLiveRegion [androidJvm] open fun getAccessibilityLiveRegion (): Int getAccessibilityNodeProvider [androidJvm] open fun getAccessibilityNodeProvider (): AccessibilityNodeProvider getAccessibilityPaneTitle [androidJvm] open fun getAccessibilityPaneTitle (): CharSequence ? getAccessibilityTraversalAfter [androidJvm] open fun getAccessibilityTraversalAfter (): Int getAccessibilityTraversalBefore [androidJvm] open fun getAccessibilityTraversalBefore (): Int getAdapter [androidJvm] open override fun getAdapter (): PagerAdapter ? getAlpha [androidJvm] open fun getAlpha (): Float getAnimation [androidJvm] open fun getAnimation (): Animation getAnimationMatrix [androidJvm] open fun getAnimationMatrix (): Matrix ? getApplicationWindowToken [androidJvm] open fun getApplicationWindowToken (): IBinder getAttributeResolutionStack [androidJvm] open fun getAttributeResolutionStack (p0: Int ): IntArray getAttributeSourceResourceMap [androidJvm] open fun getAttributeSourceResourceMap (): MutableMap < Int , Int > getAutofillHints [androidJvm] open fun getAutofillHints (): Array < String >? getAutofillId [androidJvm] fun getAutofillId (): AutofillId getAutofillType [androidJvm] open fun getAutofillType (): Int getAutofillValue [androidJvm] open fun getAutofillValue (): AutofillValue ? getBackground [androidJvm] open fun getBackground (): Drawable getBackgroundTintBlendMode [androidJvm] open fun getBackgroundTintBlendMode (): BlendMode ? getBackgroundTintList [androidJvm] open fun getBackgroundTintList (): ColorStateList ? getBackgroundTintMode [androidJvm] open fun getBackgroundTintMode (): PorterDuff.Mode ? getBaseline [androidJvm] open fun getBaseline (): Int getBottom [androidJvm] fun getBottom (): Int getBottomFadingEdgeStrength [androidJvm] open fun getBottomFadingEdgeStrength (): Float getBottomPaddingOffset [androidJvm] open fun getBottomPaddingOffset (): Int getCameraDistance [androidJvm] open fun getCameraDistance (): Float getChildAt [androidJvm] open fun getChildAt (p0: Int ): View getChildCount [androidJvm] open fun getChildCount (): Int getChildDrawingOrder [androidJvm] fun getChildDrawingOrder (p0: Int ): Int open override fun getChildDrawingOrder (childCount: Int , i: Int ): Int getChildStaticTransformation [androidJvm] open fun getChildStaticTransformation (p0: View , p1: Transformation ): Boolean getChildVisibleRect [androidJvm] open override fun getChildVisibleRect (p0: View , p1: Rect , p2: Point ): Boolean getClipBounds [androidJvm] open fun getClipBounds (): Rect open fun getClipBounds (p0: Rect ): Boolean getClipChildren [androidJvm] open fun getClipChildren (): Boolean getClipToOutline [androidJvm] fun getClipToOutline (): Boolean getClipToPadding [androidJvm] open fun getClipToPadding (): Boolean getContentCaptureSession [androidJvm] fun getContentCaptureSession (): ContentCaptureSession ? getContentDescription [androidJvm] open fun getContentDescription (): CharSequence getContext [androidJvm] fun getContext (): Context getContextMenuInfo [androidJvm] open fun getContextMenuInfo (): ContextMenu.ContextMenuInfo getCurrentItem [androidJvm] open override fun getCurrentItem (): Int getDefaultFocusHighlightEnabled [androidJvm] fun getDefaultFocusHighlightEnabled (): Boolean getDescendantFocusability [androidJvm] open fun getDescendantFocusability (): Int getDisplay [androidJvm] open fun getDisplay (): Display getDrawableState [androidJvm] fun getDrawableState (): IntArray getDrawingRect [androidJvm] open fun getDrawingRect (p0: Rect ) getDrawingTime [androidJvm] open fun getDrawingTime (): Long getElevation [androidJvm] open fun getElevation (): Float getExplicitStyle [androidJvm] open fun getExplicitStyle (): Int getFilterTouchesWhenObscured [androidJvm] open fun getFilterTouchesWhenObscured (): Boolean getFitsSystemWindows [androidJvm] open fun getFitsSystemWindows (): Boolean getFocusable [androidJvm] open fun getFocusable (): Int getFocusables [androidJvm] open fun getFocusables (p0: Int ): ArrayList < View > getFocusedChild [androidJvm] open fun getFocusedChild (): View getFocusedRect [androidJvm] open fun getFocusedRect (p0: Rect ) getForeground [androidJvm] open fun getForeground (): Drawable getForegroundGravity [androidJvm] open fun getForegroundGravity (): Int getForegroundTintBlendMode [androidJvm] open fun getForegroundTintBlendMode (): BlendMode ? getForegroundTintList [androidJvm] open fun getForegroundTintList (): ColorStateList ? getForegroundTintMode [androidJvm] open fun getForegroundTintMode (): PorterDuff.Mode ? getGlobalVisibleRect [androidJvm] fun getGlobalVisibleRect (p0: Rect ): Boolean open fun getGlobalVisibleRect (p0: Rect , p1: Point ): Boolean getHandler [androidJvm] open fun getHandler (): Handler getHasOverlappingRendering [androidJvm] fun getHasOverlappingRendering (): Boolean getHeight [androidJvm] fun getHeight (): Int getHitRect [androidJvm] open fun getHitRect (p0: Rect ) getHorizontalFadingEdgeLength [androidJvm] open fun getHorizontalFadingEdgeLength (): Int getHorizontalScrollbarHeight [androidJvm] open fun getHorizontalScrollbarHeight (): Int getHorizontalScrollbarThumbDrawable [androidJvm] open fun getHorizontalScrollbarThumbDrawable (): Drawable ? getHorizontalScrollbarTrackDrawable [androidJvm] open fun getHorizontalScrollbarTrackDrawable (): Drawable ? getId [androidJvm] open fun getId (): Int getImportantForAccessibility [androidJvm] open fun getImportantForAccessibility (): Int getImportantForAutofill [androidJvm] open fun getImportantForAutofill (): Int getImportantForContentCapture [androidJvm] open fun getImportantForContentCapture (): Int getKeepScreenOn [androidJvm] open fun getKeepScreenOn (): Boolean getKeyDispatcherState [androidJvm] open fun getKeyDispatcherState (): KeyEvent.DispatcherState getLabelFor [androidJvm] open fun getLabelFor (): Int getLayerType [androidJvm] open fun getLayerType (): Int getLayoutAnimation [androidJvm] open fun getLayoutAnimation (): LayoutAnimationController getLayoutAnimationListener [androidJvm] open fun getLayoutAnimationListener (): Animation.AnimationListener getLayoutDirection [androidJvm] open fun getLayoutDirection (): Int getLayoutMode [androidJvm] open fun getLayoutMode (): Int getLayoutParams [androidJvm] open fun getLayoutParams (): ViewGroup.LayoutParams getLayoutTransition [androidJvm] open fun getLayoutTransition (): LayoutTransition getLeft [androidJvm] fun getLeft (): Int getLeftFadingEdgeStrength [androidJvm] open fun getLeftFadingEdgeStrength (): Float getLeftPaddingOffset [androidJvm] open fun getLeftPaddingOffset (): Int getLocalVisibleRect [androidJvm] fun getLocalVisibleRect (p0: Rect ): Boolean getLocationInSurface [androidJvm] open fun getLocationInSurface (p0: IntArray ) getLocationInWindow [androidJvm] open fun getLocationInWindow (p0: IntArray ) getLocationOnScreen [androidJvm] open fun getLocationOnScreen (p0: IntArray ) getMatrix [androidJvm] open fun getMatrix (): Matrix getMeasuredHeight [androidJvm] fun getMeasuredHeight (): Int getMeasuredHeightAndState [androidJvm] fun getMeasuredHeightAndState (): Int getMeasuredState [androidJvm] fun getMeasuredState (): Int getMeasuredWidth [androidJvm] fun getMeasuredWidth (): Int getMeasuredWidthAndState [androidJvm] fun getMeasuredWidthAndState (): Int getMinimumHeight [androidJvm] open fun getMinimumHeight (): Int getMinimumWidth [androidJvm] open fun getMinimumWidth (): Int getNestedScrollAxes [androidJvm] open fun getNestedScrollAxes (): Int getNextClusterForwardId [androidJvm] open fun getNextClusterForwardId (): Int getNextFocusDownId [androidJvm] open fun getNextFocusDownId (): Int getNextFocusForwardId [androidJvm] open fun getNextFocusForwardId (): Int getNextFocusLeftId [androidJvm] open fun getNextFocusLeftId (): Int getNextFocusRightId [androidJvm] open fun getNextFocusRightId (): Int getNextFocusUpId [androidJvm] open fun getNextFocusUpId (): Int getOffscreenPageLimit [androidJvm] open fun getOffscreenPageLimit (): Int getOnFocusChangeListener [androidJvm] open fun getOnFocusChangeListener (): View.OnFocusChangeListener getOutlineAmbientShadowColor [androidJvm] open fun getOutlineAmbientShadowColor (): Int getOutlineProvider [androidJvm] open fun getOutlineProvider (): ViewOutlineProvider getOutlineSpotShadowColor [androidJvm] open fun getOutlineSpotShadowColor (): Int getOverlay [androidJvm] open override fun getOverlay (): ViewGroupOverlay getOverScrollMode [androidJvm] open fun getOverScrollMode (): Int getPaddingBottom [androidJvm] open fun getPaddingBottom (): Int getPaddingEnd [androidJvm] open fun getPaddingEnd (): Int getPaddingLeft [androidJvm] open fun getPaddingLeft (): Int getPaddingRight [androidJvm] open fun getPaddingRight (): Int getPaddingStart [androidJvm] open fun getPaddingStart (): Int getPaddingTop [androidJvm] open fun getPaddingTop (): Int getPageMargin [androidJvm] open fun getPageMargin (): Int getParent [androidJvm] fun getParent (): ViewParent getParentForAccessibility [androidJvm] open fun getParentForAccessibility (): ViewParent getPivotX [androidJvm] open fun getPivotX (): Float getPivotY [androidJvm] open fun getPivotY (): Float getPointerIcon [androidJvm] open fun getPointerIcon (): PointerIcon getReceiveContentMimeTypes [androidJvm] open fun getReceiveContentMimeTypes (): Array < String >? getResources [androidJvm] open fun getResources (): Resources getRevealOnFocusHint [androidJvm] fun getRevealOnFocusHint (): Boolean getRight [androidJvm] fun getRight (): Int getRightFadingEdgeStrength [androidJvm] open fun getRightFadingEdgeStrength (): Float getRightPaddingOffset [androidJvm] open fun getRightPaddingOffset (): Int getRootSurfaceControl [androidJvm] open fun getRootSurfaceControl (): AttachedSurfaceControl ? getRootView [androidJvm] open fun getRootView (): View getRootWindowInsets [androidJvm] open fun getRootWindowInsets (): WindowInsets getRotation [androidJvm] open fun getRotation (): Float getRotationX [androidJvm] open fun getRotationX (): Float getRotationY [androidJvm] open fun getRotationY (): Float getScaleX [androidJvm] open fun getScaleX (): Float getScaleY [androidJvm] open fun getScaleY (): Float getScrollBarDefaultDelayBeforeFade [androidJvm] open fun getScrollBarDefaultDelayBeforeFade (): Int getScrollBarFadeDuration [androidJvm] open fun getScrollBarFadeDuration (): Int getScrollBarSize [androidJvm] open fun getScrollBarSize (): Int getScrollBarStyle [androidJvm] open fun getScrollBarStyle (): Int getScrollCaptureHint [androidJvm] open fun getScrollCaptureHint (): Int getScrollIndicators [androidJvm] open fun getScrollIndicators (): Int getScrollX [androidJvm] fun getScrollX (): Int getScrollY [androidJvm] fun getScrollY (): Int getSolidColor [androidJvm] open fun getSolidColor (): Int getSourceLayoutResId [androidJvm] open fun getSourceLayoutResId (): Int getStateDescription [androidJvm] fun getStateDescription (): CharSequence ? getStateListAnimator [androidJvm] open fun getStateListAnimator (): StateListAnimator getSuggestedMinimumHeight [androidJvm] open fun getSuggestedMinimumHeight (): Int getSuggestedMinimumWidth [androidJvm] open fun getSuggestedMinimumWidth (): Int getSystemGestureExclusionRects [androidJvm] open fun getSystemGestureExclusionRects (): MutableList < Rect > getTag [androidJvm] open fun getTag (): Any open fun getTag (p0: Int ): Any getTextAlignment [androidJvm] open fun getTextAlignment (): Int getTextDirection [androidJvm] open fun getTextDirection (): Int getTooltipText [androidJvm] open fun getTooltipText (): CharSequence ? getTop [androidJvm] fun getTop (): Int getTopFadingEdgeStrength [androidJvm] open fun getTopFadingEdgeStrength (): Float getTopPaddingOffset [androidJvm] open fun getTopPaddingOffset (): Int getTouchables [androidJvm] open fun getTouchables (): ArrayList < View > getTouchDelegate [androidJvm] open fun getTouchDelegate (): TouchDelegate getTouchscreenBlocksFocus [androidJvm] open fun getTouchscreenBlocksFocus (): Boolean getTransitionAlpha [androidJvm] open fun getTransitionAlpha (): Float getTransitionName [androidJvm] open fun getTransitionName (): String getTranslationX [androidJvm] open fun getTranslationX (): Float getTranslationY [androidJvm] open fun getTranslationY (): Float getTranslationZ [androidJvm] open fun getTranslationZ (): Float getUniqueDrawingId [androidJvm] open fun getUniqueDrawingId (): Long getVerticalFadingEdgeLength [androidJvm] open fun getVerticalFadingEdgeLength (): Int getVerticalScrollbarPosition [androidJvm] open fun getVerticalScrollbarPosition (): Int getVerticalScrollbarThumbDrawable [androidJvm] open fun getVerticalScrollbarThumbDrawable (): Drawable ? getVerticalScrollbarTrackDrawable [androidJvm] open fun getVerticalScrollbarTrackDrawable (): Drawable ? getVerticalScrollbarWidth [androidJvm] open fun getVerticalScrollbarWidth (): Int getViewTranslationResponse [androidJvm] open fun getViewTranslationResponse (): ViewTranslationResponse ? getViewTreeObserver [androidJvm] open fun getViewTreeObserver (): ViewTreeObserver getVisibility [androidJvm] open fun getVisibility (): Int getWidth [androidJvm] fun getWidth (): Int getWindowAttachCount [androidJvm] open fun getWindowAttachCount (): Int getWindowId [androidJvm] open fun getWindowId (): WindowId getWindowInsetsController [androidJvm] open fun getWindowInsetsController (): WindowInsetsController ? getWindowToken [androidJvm] open fun getWindowToken (): IBinder getWindowVisibility [androidJvm] open fun getWindowVisibility (): Int getWindowVisibleDisplayFrame [androidJvm] open fun getWindowVisibleDisplayFrame (p0: Rect ) getX [androidJvm] open fun getX (): Float getY [androidJvm] open fun getY (): Float getZ [androidJvm] open fun getZ (): Float hasExplicitFocusable [androidJvm] open fun hasExplicitFocusable (): Boolean hasFocus [androidJvm] open override fun hasFocus (): Boolean hasFocusable [androidJvm] open fun hasFocusable (): Boolean hasNestedScrollingParent [androidJvm] open fun hasNestedScrollingParent (): Boolean hasOnClickListeners [androidJvm] open fun hasOnClickListeners (): Boolean hasOnLongClickListeners [androidJvm] open fun hasOnLongClickListeners (): Boolean hasOverlappingRendering [androidJvm] open fun hasOverlappingRendering (): Boolean hasPointerCapture [androidJvm] open fun hasPointerCapture (): Boolean hasTransientState [androidJvm] open override fun hasTransientState (): Boolean hasWindowFocus [androidJvm] open fun hasWindowFocus (): Boolean indexOfChild [androidJvm] open fun indexOfChild (p0: View ): Int infoForAnyChild [androidJvm] open fun infoForAnyChild (child: View ): ViewPager.ItemInfo infoForChild [androidJvm] open fun infoForChild (child: View ): ViewPager.ItemInfo infoForPosition [androidJvm] open fun infoForPosition (position: Int ): ViewPager.ItemInfo initViewPager [androidJvm] open fun initViewPager () invalidate [androidJvm] open fun invalidate () invalidateDrawable [androidJvm] open override fun invalidateDrawable (p0: Drawable ) invalidateOutline [androidJvm] open fun invalidateOutline () isAccessibilityFocused [androidJvm] open fun isAccessibilityFocused (): Boolean isAccessibilityHeading [androidJvm] open fun isAccessibilityHeading (): Boolean isActivated [androidJvm] open fun isActivated (): Boolean isAttachedToWindow [androidJvm] open fun isAttachedToWindow (): Boolean isChildrenDrawingOrderEnabled [androidJvm] open fun isChildrenDrawingOrderEnabled (): Boolean isClickable [androidJvm] open fun isClickable (): Boolean isContextClickable [androidJvm] open fun isContextClickable (): Boolean isDirty [androidJvm] open fun isDirty (): Boolean isDuplicateParentStateEnabled [androidJvm] open fun isDuplicateParentStateEnabled (): Boolean isEnabled [androidJvm] open fun isEnabled (): Boolean isFakeDragging [androidJvm] open fun isFakeDragging (): Boolean isFocusable [androidJvm] fun isFocusable (): Boolean isFocusableInTouchMode [androidJvm] fun isFocusableInTouchMode (): Boolean isFocused [androidJvm] open fun isFocused (): Boolean isFocusedByDefault [androidJvm] fun isFocusedByDefault (): Boolean isForceDarkAllowed [androidJvm] open fun isForceDarkAllowed (): Boolean isHapticFeedbackEnabled [androidJvm] open fun isHapticFeedbackEnabled (): Boolean isHardwareAccelerated [androidJvm] open fun isHardwareAccelerated (): Boolean isHorizontalFadingEdgeEnabled [androidJvm] open fun isHorizontalFadingEdgeEnabled (): Boolean isHorizontalScrollBarEnabled [androidJvm] open fun isHorizontalScrollBarEnabled (): Boolean isHovered [androidJvm] open fun isHovered (): Boolean isImportantForAccessibility [androidJvm] open fun isImportantForAccessibility (): Boolean isImportantForAutofill [androidJvm] fun isImportantForAutofill (): Boolean isImportantForContentCapture [androidJvm] fun isImportantForContentCapture (): Boolean isInEditMode [androidJvm] open fun isInEditMode (): Boolean isInLayout [androidJvm] open fun isInLayout (): Boolean isInTouchMode [androidJvm] open fun isInTouchMode (): Boolean isKeyboardNavigationCluster [androidJvm] fun isKeyboardNavigationCluster (): Boolean isLaidOut [androidJvm] open fun isLaidOut (): Boolean isLayoutDirectionResolved [androidJvm] open fun isLayoutDirectionResolved (): Boolean isLayoutRequested [androidJvm] open fun isLayoutRequested (): Boolean isLayoutSuppressed [androidJvm] open fun isLayoutSuppressed (): Boolean isLongClickable [androidJvm] open fun isLongClickable (): Boolean isMotionEventSplittingEnabled [androidJvm] open fun isMotionEventSplittingEnabled (): Boolean isNestedScrollingEnabled [androidJvm] open fun isNestedScrollingEnabled (): Boolean isOpaque [androidJvm] open fun isOpaque (): Boolean isPaddingOffsetRequired [androidJvm] open fun isPaddingOffsetRequired (): Boolean isPaddingRelative [androidJvm] open fun isPaddingRelative (): Boolean isPivotSet [androidJvm] open fun isPivotSet (): Boolean isPressed [androidJvm] open fun isPressed (): Boolean isSaveEnabled [androidJvm] open fun isSaveEnabled (): Boolean isSaveFromParentEnabled [androidJvm] open fun isSaveFromParentEnabled (): Boolean isScreenReaderFocusable [androidJvm] open fun isScreenReaderFocusable (): Boolean isScrollbarFadingEnabled [androidJvm] open fun isScrollbarFadingEnabled (): Boolean isScrollContainer [androidJvm] open fun isScrollContainer (): Boolean isSelected [androidJvm] open fun isSelected (): Boolean isShowingLayoutBounds [androidJvm] fun isShowingLayoutBounds (): Boolean isShown [androidJvm] open fun isShown (): Boolean isSoundEffectsEnabled [androidJvm] open fun isSoundEffectsEnabled (): Boolean isTemporarilyDetached [androidJvm] fun isTemporarilyDetached (): Boolean isTextAlignmentResolved [androidJvm] open fun isTextAlignmentResolved (): Boolean isTextDirectionResolved [androidJvm] open fun isTextDirectionResolved (): Boolean isTransitionGroup [androidJvm] open fun isTransitionGroup (): Boolean isVerticalFadingEdgeEnabled [androidJvm] open fun isVerticalFadingEdgeEnabled (): Boolean isVerticalScrollBarEnabled [androidJvm] open fun isVerticalScrollBarEnabled (): Boolean isVisibleToUserForAutofill [androidJvm] open fun isVisibleToUserForAutofill (p0: Int ): Boolean jumpDrawablesToCurrentState [androidJvm] open override fun jumpDrawablesToCurrentState () keyboardNavigationClusterSearch [androidJvm] open fun keyboardNavigationClusterSearch (p0: View , p1: Int ): View layout [androidJvm] override fun layout (p0: Int , p1: Int , p2: Int , p3: Int ) measure [androidJvm] fun measure (p0: Int , p1: Int ) measureChild [androidJvm] open fun measureChild (p0: View , p1: Int , p2: Int ) measureChildren [androidJvm] open fun measureChildren (p0: Int , p1: Int ) measureChildWithMargins [androidJvm] open fun measureChildWithMargins (p0: View , p1: Int , p2: Int , p3: Int , p4: Int ) notifySubtreeAccessibilityStateChanged [androidJvm] open override fun notifySubtreeAccessibilityStateChanged (p0: View , p1: View , p2: Int ) offsetDescendantRectToMyCoords [androidJvm] fun offsetDescendantRectToMyCoords (p0: View , p1: Rect ) offsetLeftAndRight [androidJvm] open fun offsetLeftAndRight (p0: Int ) offsetRectIntoDescendantCoords [androidJvm] fun offsetRectIntoDescendantCoords (p0: View , p1: Rect ) offsetTopAndBottom [androidJvm] open fun offsetTopAndBottom (p0: Int ) onAnimationEnd [androidJvm] open fun onAnimationEnd () onAnimationStart [androidJvm] open fun onAnimationStart () onApplyWindowInsets [androidJvm] open fun onApplyWindowInsets (p0: WindowInsets ): WindowInsets onAttachedToWindow [androidJvm] open override fun onAttachedToWindow () onCancelPendingInputEvents [androidJvm] open fun onCancelPendingInputEvents () onCapturedPointerEvent [androidJvm] open fun onCapturedPointerEvent (p0: MotionEvent ): Boolean onCheckIsTextEditor [androidJvm] open fun onCheckIsTextEditor (): Boolean onConfigurationChanged [androidJvm] open fun onConfigurationChanged (p0: Configuration ) onCreateContextMenu [androidJvm] open fun onCreateContextMenu (p0: ContextMenu ) onCreateDrawableState [androidJvm] open override fun onCreateDrawableState (p0: Int ): IntArray onCreateInputConnection [androidJvm] open fun onCreateInputConnection (p0: EditorInfo ): InputConnection onCreateViewTranslationRequest [androidJvm] open fun onCreateViewTranslationRequest (p0: IntArray , p1: Consumer < ViewTranslationRequest >) onCreateVirtualViewTranslationRequests [androidJvm] open fun onCreateVirtualViewTranslationRequests (p0: LongArray , p1: IntArray , p2: Consumer < ViewTranslationRequest >) onDescendantInvalidated [androidJvm] open override fun onDescendantInvalidated (p0: View , p1: View ) onDetachedFromWindow [androidJvm] open override fun onDetachedFromWindow () onDisplayHint [androidJvm] open fun onDisplayHint (p0: Int ) onDragEvent [androidJvm] open fun onDragEvent (p0: DragEvent ): Boolean onDraw [androidJvm] open override fun onDraw (canvas: Canvas ) onDrawForeground [androidJvm] open fun onDrawForeground (p0: Canvas ) onDrawScrollBars [androidJvm] fun onDrawScrollBars (p0: Canvas ) onFilterTouchEventForSecurity [androidJvm] open fun onFilterTouchEventForSecurity (p0: MotionEvent ): Boolean onFinishInflate [androidJvm] open fun onFinishInflate () onFinishTemporaryDetach [androidJvm] open fun onFinishTemporaryDetach () onFocusChanged [androidJvm] open fun onFocusChanged (p0: Boolean , p1: Int , p2: Rect ?) onGenericMotionEvent [androidJvm] open fun onGenericMotionEvent (p0: MotionEvent ): Boolean onHoverChanged [androidJvm] open fun onHoverChanged (p0: Boolean ) onHoverEvent [androidJvm] open fun onHoverEvent (p0: MotionEvent ): Boolean onInitializeAccessibilityEvent [androidJvm] open fun onInitializeAccessibilityEvent (p0: AccessibilityEvent ) onInitializeAccessibilityNodeInfo [androidJvm] open fun onInitializeAccessibilityNodeInfo (p0: AccessibilityNodeInfo ) onInterceptHoverEvent [androidJvm] open fun onInterceptHoverEvent (p0: MotionEvent ): Boolean onInterceptTouchEvent [androidJvm] open override fun onInterceptTouchEvent (ev: MotionEvent ): Boolean onKeyDown [androidJvm] open override fun onKeyDown (p0: Int , p1: KeyEvent ): Boolean onKeyLongPress [androidJvm] open override fun onKeyLongPress (p0: Int , p1: KeyEvent ): Boolean onKeyMultiple [androidJvm] open override fun onKeyMultiple (p0: Int , p1: Int , p2: KeyEvent ): Boolean onKeyPreIme [androidJvm] open fun onKeyPreIme (p0: Int , p1: KeyEvent ): Boolean onKeyShortcut [androidJvm] open fun onKeyShortcut (p0: Int , p1: KeyEvent ): Boolean onKeyUp [androidJvm] open override fun onKeyUp (p0: Int , p1: KeyEvent ): Boolean onLayout [androidJvm] open override fun onLayout (changed: Boolean , l: Int , t: Int , r: Int , b: Int ) onMeasure [androidJvm] open override fun onMeasure (widthMeasureSpec: Int , heightMeasureSpec: Int ) onNestedFling [androidJvm] open override fun onNestedFling (p0: View , p1: Float , p2: Float , p3: Boolean ): Boolean onNestedPreFling [androidJvm] open override fun onNestedPreFling (p0: View , p1: Float , p2: Float ): Boolean onNestedPrePerformAccessibilityAction [androidJvm] open override fun onNestedPrePerformAccessibilityAction (p0: View , p1: Int , p2: Bundle ): Boolean onNestedPreScroll [androidJvm] open override fun onNestedPreScroll (p0: View , p1: Int , p2: Int , p3: IntArray ) onNestedScroll [androidJvm] open override fun onNestedScroll (p0: View , p1: Int , p2: Int , p3: Int , p4: Int ) onNestedScrollAccepted [androidJvm] open override fun onNestedScrollAccepted (p0: View , p1: View , p2: Int ) onOverScrolled [androidJvm] open fun onOverScrolled (p0: Int , p1: Int , p2: Boolean , p3: Boolean ) onPageScrolled [androidJvm] @ CallSuper open fun onPageScrolled (position: Int , offset: Float , offsetPixels: Int ) onPointerCaptureChange [androidJvm] open fun onPointerCaptureChange (p0: Boolean ) onPopulateAccessibilityEvent [androidJvm] open fun onPopulateAccessibilityEvent (p0: AccessibilityEvent ) onProvideAutofillStructure [androidJvm] open fun onProvideAutofillStructure (p0: ViewStructure , p1: Int ) onProvideAutofillVirtualStructure [androidJvm] open fun onProvideAutofillVirtualStructure (p0: ViewStructure , p1: Int ) onProvideContentCaptureStructure [androidJvm] open fun onProvideContentCaptureStructure (p0: ViewStructure , p1: Int ) onProvideStructure [androidJvm] open fun onProvideStructure (p0: ViewStructure ) onProvideVirtualStructure [androidJvm] open fun onProvideVirtualStructure (p0: ViewStructure ) onReceiveContent [androidJvm] open fun onReceiveContent (p0: ContentInfo ): ContentInfo ? onRequestFocusInDescendants [androidJvm] open override fun onRequestFocusInDescendants (direction: Int , previouslyFocusedRect: Rect ): Boolean onRequestSendAccessibilityEvent [androidJvm] open fun onRequestSendAccessibilityEvent (p0: View , p1: AccessibilityEvent ): Boolean onResolvePointerIcon [androidJvm] open override fun onResolvePointerIcon (p0: MotionEvent , p1: Int ): PointerIcon onRestoreInstanceState [androidJvm] open override fun onRestoreInstanceState (state: Parcelable ) onRtlPropertiesChanged [androidJvm] open override fun onRtlPropertiesChanged (layoutDirection: Int ) onSaveInstanceState [androidJvm] open override fun onSaveInstanceState (): Parcelable ? onScreenStateChanged [androidJvm] open fun onScreenStateChanged (p0: Int ) onScrollCaptureSearch [androidJvm] open fun onScrollCaptureSearch (p0: Rect , p1: Point , p2: Consumer < ScrollCaptureTarget >) onScrollChanged [androidJvm] open fun onScrollChanged (p0: Int , p1: Int , p2: Int , p3: Int ) onSetAlpha [androidJvm] open fun onSetAlpha (p0: Int ): Boolean onSizeChanged [androidJvm] open override fun onSizeChanged (w: Int , h: Int , oldw: Int , oldh: Int ) onStartNestedScroll [androidJvm] open override fun onStartNestedScroll (p0: View , p1: View , p2: Int ): Boolean onStartTemporaryDetach [androidJvm] open fun onStartTemporaryDetach () onStopNestedScroll [androidJvm] open override fun onStopNestedScroll (p0: View ) onTouchEvent [androidJvm] open override fun onTouchEvent (ev: MotionEvent ): Boolean onTrackballEvent [androidJvm] open fun onTrackballEvent (p0: MotionEvent ): Boolean onViewAdded [androidJvm] open fun onViewAdded (p0: View ) onViewRemoved [androidJvm] open fun onViewRemoved (p0: View ) onViewTranslationResponse [androidJvm] open fun onViewTranslationResponse (p0: ViewTranslationResponse ) onVirtualViewTranslationResponses [androidJvm] open fun onVirtualViewTranslationResponses (p0: LongSparseArray < ViewTranslationResponse >) onVisibilityAggregated [androidJvm] open fun onVisibilityAggregated (p0: Boolean ) onVisibilityChanged [androidJvm] open fun onVisibilityChanged (p0: View , p1: Int ) onWindowFocusChanged [androidJvm] open fun onWindowFocusChanged (p0: Boolean ) onWindowVisibilityChanged [androidJvm] open fun onWindowVisibilityChanged (p0: Int ) overScrollBy [androidJvm] open fun overScrollBy (p0: Int , p1: Int , p2: Int , p3: Int , p4: Int , p5: Int , p6: Int , p7: Int , p8: Boolean ): Boolean pageLeft [androidJvm] open fun pageLeft (): Boolean pageRight [androidJvm] open fun pageRight (): Boolean performAccessibilityAction [androidJvm] open fun performAccessibilityAction (p0: Int , p1: Bundle ): Boolean performClick [androidJvm] open fun performClick (): Boolean performContextClick [androidJvm] open fun performContextClick (): Boolean open fun performContextClick (p0: Float , p1: Float ): Boolean performHapticFeedback [androidJvm] open fun performHapticFeedback (p0: Int ): Boolean open fun performHapticFeedback (p0: Int , p1: Int ): Boolean performLongClick [androidJvm] open fun performLongClick (): Boolean open fun performLongClick (p0: Float , p1: Float ): Boolean performReceiveContent [androidJvm] open fun performReceiveContent (p0: ContentInfo ): ContentInfo ? playSoundEffect [androidJvm] open fun playSoundEffect (p0: Int ) populate [androidJvm] open fun populate () open fun populate (newCurrentItem: Int ) post [androidJvm] open fun post (p0: Runnable ): Boolean postDelayed [androidJvm] open fun postDelayed (p0: Runnable , p1: Long ): Boolean postInvalidate [androidJvm] open fun postInvalidate () open fun postInvalidate (p0: Int , p1: Int , p2: Int , p3: Int ) postInvalidateDelayed [androidJvm] open fun postInvalidateDelayed (p0: Long ) open fun postInvalidateDelayed (p0: Long , p1: Int , p2: Int , p3: Int , p4: Int ) postInvalidateOnAnimation [androidJvm] open fun postInvalidateOnAnimation () open fun postInvalidateOnAnimation (p0: Int , p1: Int , p2: Int , p3: Int ) postOnAnimation [androidJvm] open fun postOnAnimation (p0: Runnable ) postOnAnimationDelayed [androidJvm] open fun postOnAnimationDelayed (p0: Runnable , p1: Long ) recomputeViewAttributes [androidJvm] open override fun recomputeViewAttributes (p0: View ) refreshDrawableState [androidJvm] open fun refreshDrawableState () releasePointerCapture [androidJvm] open fun releasePointerCapture () removeAllViews [androidJvm] open fun removeAllViews () removeAllViewsInLayout [androidJvm] open fun removeAllViewsInLayout () removeCallbacks [androidJvm] open fun removeCallbacks (p0: Runnable ): Boolean removeDetachedView [androidJvm] open fun removeDetachedView (p0: View , p1: Boolean ) removeOnAdapterChangeListener [androidJvm] open fun removeOnAdapterChangeListener (@ NonNull listener: ViewPager.OnAdapterChangeListener ) removeOnAttachStateChangeListener [androidJvm] open fun removeOnAttachStateChangeListener (p0: View.OnAttachStateChangeListener ) removeOnLayoutChangeListener [androidJvm] open fun removeOnLayoutChangeListener (p0: View.OnLayoutChangeListener ) removeOnPageChangeListener [androidJvm] open override fun removeOnPageChangeListener (listener: ViewPager.OnPageChangeListener ) removeOnUnhandledKeyEventListener [androidJvm] open fun removeOnUnhandledKeyEventListener (p0: View.OnUnhandledKeyEventListener ) removeView [androidJvm] open override fun removeView (view: View ) removeViewAt [androidJvm] open fun removeViewAt (p0: Int ) removeViewInLayout [androidJvm] open fun removeViewInLayout (p0: View ) removeViews [androidJvm] open fun removeViews (p0: Int , p1: Int ) removeViewsInLayout [androidJvm] open fun removeViewsInLayout (p0: Int , p1: Int ) requestApplyInsets [androidJvm] open fun requestApplyInsets () requestChildFocus [androidJvm] open override fun requestChildFocus (p0: View , p1: View ) requestChildRectangleOnScreen [androidJvm] open override fun requestChildRectangleOnScreen (p0: View , p1: Rect , p2: Boolean ): Boolean requestDisallowInterceptTouchEvent [androidJvm] open override fun requestDisallowInterceptTouchEvent (p0: Boolean ) requestFocus [androidJvm] fun requestFocus (): Boolean fun requestFocus (p0: Int ): Boolean open override fun requestFocus (p0: Int , p1: Rect ): Boolean requestFocusFromTouch [androidJvm] fun requestFocusFromTouch (): Boolean requestLayout [androidJvm] open fun requestLayout () requestPointerCapture [androidJvm] open fun requestPointerCapture () requestRectangleOnScreen [androidJvm] open fun requestRectangleOnScreen (p0: Rect ): Boolean open fun requestRectangleOnScreen (p0: Rect , p1: Boolean ): Boolean requestSendAccessibilityEvent [androidJvm] open override fun requestSendAccessibilityEvent (p0: View , p1: AccessibilityEvent ): Boolean requestTransparentRegion [androidJvm] open override fun requestTransparentRegion (p0: View ) requestUnbufferedDispatch [androidJvm] fun requestUnbufferedDispatch (p0: MotionEvent ) fun requestUnbufferedDispatch (p0: Int ) requireViewById [androidJvm] fun < T : View > requireViewById (p0: Int ): T resetPivot [androidJvm] open fun resetPivot () restoreDefaultFocus [androidJvm] open override fun restoreDefaultFocus (): Boolean restoreHierarchyState [androidJvm] open fun restoreHierarchyState (p0: SparseArray < Parcelable >) saveAttributeDataForStyleable [androidJvm] fun saveAttributeDataForStyleable (p0: Context , p1: IntArray , p2: AttributeSet ?, p3: TypedArray , p4: Int , p5: Int ) saveHierarchyState [androidJvm] open fun saveHierarchyState (p0: SparseArray < Parcelable >) scheduleDrawable [androidJvm] open override fun scheduleDrawable (p0: Drawable , p1: Runnable , p2: Long ) scheduleLayoutAnimation [androidJvm] open fun scheduleLayoutAnimation () scrollBy [androidJvm] open fun scrollBy (p0: Int , p1: Int ) scrollTo [androidJvm] open fun scrollTo (p0: Int , p1: Int ) sendAccessibilityEvent [androidJvm] open override fun sendAccessibilityEvent (p0: Int ) sendAccessibilityEventUnchecked [androidJvm] open override fun sendAccessibilityEventUnchecked (p0: AccessibilityEvent ) setAccessibilityDelegate [androidJvm] open fun setAccessibilityDelegate (p0: View.AccessibilityDelegate ?) setAccessibilityHeading [androidJvm] open fun setAccessibilityHeading (p0: Boolean ) setAccessibilityLiveRegion [androidJvm] open fun setAccessibilityLiveRegion (p0: Int ) setAccessibilityPaneTitle [androidJvm] open fun setAccessibilityPaneTitle (p0: CharSequence ?) setAccessibilityTraversalAfter [androidJvm] open fun setAccessibilityTraversalAfter (p0: Int ) setAccessibilityTraversalBefore [androidJvm] open fun setAccessibilityTraversalBefore (p0: Int ) setActivated [androidJvm] open fun setActivated (p0: Boolean ) setAdapter [androidJvm] open override fun setAdapter (adapter: PagerAdapter ?) setAddStatesFromChildren [androidJvm] open fun setAddStatesFromChildren (p0: Boolean ) setAllowClickWhenDisabled [androidJvm] open fun setAllowClickWhenDisabled (p0: Boolean ) setAlpha [androidJvm] open fun setAlpha (p0: Float ) setAnimation [androidJvm] open fun setAnimation (p0: Animation ) setAnimationMatrix [androidJvm] open fun setAnimationMatrix (p0: Matrix ?) setAutofillHints [androidJvm] open fun setAutofillHints (vararg p0: String ) setAutofillId [androidJvm] open fun setAutofillId (p0: AutofillId ?) setBackground [androidJvm] open fun setBackground (p0: Drawable ) setBackgroundColor [androidJvm] open fun setBackgroundColor (p0: Int ) setBackgroundResource [androidJvm] open fun setBackgroundResource (p0: Int ) setBackgroundTintBlendMode [androidJvm] open fun setBackgroundTintBlendMode (p0: BlendMode ?) setBackgroundTintList [androidJvm] open fun setBackgroundTintList (p0: ColorStateList ?) setBackgroundTintMode [androidJvm] open fun setBackgroundTintMode (p0: PorterDuff.Mode ?) setBottom [androidJvm] fun setBottom (p0: Int ) setCameraDistance [androidJvm] open fun setCameraDistance (p0: Float ) setChildrenDrawingOrderEnabled [androidJvm] open fun setChildrenDrawingOrderEnabled (p0: Boolean ) setClickable [androidJvm] open fun setClickable (p0: Boolean ) setClipBounds [androidJvm] open fun setClipBounds (p0: Rect ) setClipChildren [androidJvm] open fun setClipChildren (p0: Boolean ) setClipToOutline [androidJvm] open fun setClipToOutline (p0: Boolean ) setClipToPadding [androidJvm] open fun setClipToPadding (p0: Boolean ) setContentCaptureSession [androidJvm] open fun setContentCaptureSession (p0: ContentCaptureSession ?) setContentDescription [androidJvm] open fun setContentDescription (p0: CharSequence ) setContextClickable [androidJvm] open fun setContextClickable (p0: Boolean ) setCurrentItem [androidJvm] open override fun setCurrentItem (item: Int ) open override fun setCurrentItem (position: Int , smoothScroll: Boolean ) setCurrentItemInternal [androidJvm] open fun setCurrentItemInternal (item: Int , smoothScroll: Boolean , always: Boolean ) open fun setCurrentItemInternal (item: Int , smoothScroll: Boolean , always: Boolean , velocity: Int ) setDefaultFocusHighlightEnabled [androidJvm] open fun setDefaultFocusHighlightEnabled (p0: Boolean ) setDescendantFocusability [androidJvm] open fun setDescendantFocusability (p0: Int ) setDuplicateParentStateEnabled [androidJvm] open fun setDuplicateParentStateEnabled (p0: Boolean ) setElevation [androidJvm] open fun setElevation (p0: Float ) setEnabled [androidJvm] open fun setEnabled (p0: Boolean ) setFadingEdgeLength [androidJvm] open fun setFadingEdgeLength (p0: Int ) setFilterTouchesWhenObscured [androidJvm] open fun setFilterTouchesWhenObscured (p0: Boolean ) setFitsSystemWindows [androidJvm] open fun setFitsSystemWindows (p0: Boolean ) setFocusable [androidJvm] open fun setFocusable (p0: Boolean ) open fun setFocusable (p0: Int ) setFocusableInTouchMode [androidJvm] open fun setFocusableInTouchMode (p0: Boolean ) setFocusedByDefault [androidJvm] open fun setFocusedByDefault (p0: Boolean ) setForceDarkAllowed [androidJvm] open fun setForceDarkAllowed (p0: Boolean ) setForeground [androidJvm] open fun setForeground (p0: Drawable ) setForegroundGravity [androidJvm] open fun setForegroundGravity (p0: Int ) setForegroundTintBlendMode [androidJvm] open fun setForegroundTintBlendMode (p0: BlendMode ?) setForegroundTintList [androidJvm] open fun setForegroundTintList (p0: ColorStateList ?) setForegroundTintMode [androidJvm] open fun setForegroundTintMode (p0: PorterDuff.Mode ?) setHapticFeedbackEnabled [androidJvm] open fun setHapticFeedbackEnabled (p0: Boolean ) setHasTransientState [androidJvm] open fun setHasTransientState (p0: Boolean ) setHorizontalFadingEdgeEnabled [androidJvm] open fun setHorizontalFadingEdgeEnabled (p0: Boolean ) setHorizontalScrollBarEnabled [androidJvm] open fun setHorizontalScrollBarEnabled (p0: Boolean ) setHorizontalScrollbarThumbDrawable [androidJvm] open fun setHorizontalScrollbarThumbDrawable (p0: Drawable ?) setHorizontalScrollbarTrackDrawable [androidJvm] open fun setHorizontalScrollbarTrackDrawable (p0: Drawable ?) setHovered [androidJvm] open fun setHovered (p0: Boolean ) setId [androidJvm] open fun setId (p0: Int ) setImportantForAccessibility [androidJvm] open fun setImportantForAccessibility (p0: Int ) setImportantForAutofill [androidJvm] open fun setImportantForAutofill (p0: Int ) setImportantForContentCapture [androidJvm] open fun setImportantForContentCapture (p0: Int ) setInternalPageChangeListener [androidJvm] open fun setInternalPageChangeListener (listener: ViewPager.OnPageChangeListener ): ViewPager.OnPageChangeListener setKeepScreenOn [androidJvm] open fun setKeepScreenOn (p0: Boolean ) setKeyboardNavigationCluster [androidJvm] open fun setKeyboardNavigationCluster (p0: Boolean ) setLabelFor [androidJvm] open fun setLabelFor (p0: Int ) setLayerPaint [androidJvm] open fun setLayerPaint (p0: Paint ?) setLayerType [androidJvm] open fun setLayerType (p0: Int , p1: Paint ?) setLayoutAnimation [androidJvm] open fun setLayoutAnimation (p0: LayoutAnimationController ) setLayoutAnimationListener [androidJvm] open fun setLayoutAnimationListener (p0: Animation.AnimationListener ) setLayoutDirection [androidJvm] open fun setLayoutDirection (p0: Int ) setLayoutMode [androidJvm] open fun setLayoutMode (p0: Int ) setLayoutParams [androidJvm] open fun setLayoutParams (p0: ViewGroup.LayoutParams ) setLayoutTransition [androidJvm] open fun setLayoutTransition (p0: LayoutTransition ) setLeft [androidJvm] fun setLeft (p0: Int ) setLeftTopRightBottom [androidJvm] fun setLeftTopRightBottom (p0: Int , p1: Int , p2: Int , p3: Int ) setLongClickable [androidJvm] open fun setLongClickable (p0: Boolean ) setMeasuredDimension [androidJvm] fun setMeasuredDimension (p0: Int , p1: Int ) setMinimumHeight [androidJvm] open fun setMinimumHeight (p0: Int ) setMinimumWidth [androidJvm] open fun setMinimumWidth (p0: Int ) setMotionEventSplittingEnabled [androidJvm] open fun setMotionEventSplittingEnabled (p0: Boolean ) setNestedScrollingEnabled [androidJvm] open fun setNestedScrollingEnabled (p0: Boolean ) setNextClusterForwardId [androidJvm] open fun setNextClusterForwardId (p0: Int ) setNextFocusDownId [androidJvm] open fun setNextFocusDownId (p0: Int ) setNextFocusForwardId [androidJvm] open fun setNextFocusForwardId (p0: Int ) setNextFocusLeftId [androidJvm] open fun setNextFocusLeftId (p0: Int ) setNextFocusRightId [androidJvm] open fun setNextFocusRightId (p0: Int ) setNextFocusUpId [androidJvm] open fun setNextFocusUpId (p0: Int ) setOffscreenPageLimit [androidJvm] open fun setOffscreenPageLimit (limit: Int ) setOnApplyWindowInsetsListener [androidJvm] open fun setOnApplyWindowInsetsListener (p0: View.OnApplyWindowInsetsListener ) setOnCapturedPointerListener [androidJvm] open fun setOnCapturedPointerListener (p0: View.OnCapturedPointerListener ) setOnClickListener [androidJvm] open fun setOnClickListener (p0: View.OnClickListener ?) setOnContextClickListener [androidJvm] open fun setOnContextClickListener (p0: View.OnContextClickListener ?) setOnCreateContextMenuListener [androidJvm] open fun setOnCreateContextMenuListener (p0: View.OnCreateContextMenuListener ) setOnDragListener [androidJvm] open fun setOnDragListener (p0: View.OnDragListener ) setOnFocusChangeListener [androidJvm] open fun setOnFocusChangeListener (p0: View.OnFocusChangeListener ) setOnGenericMotionListener [androidJvm] open fun setOnGenericMotionListener (p0: View.OnGenericMotionListener ) setOnHierarchyChangeListener [androidJvm] open fun setOnHierarchyChangeListener (p0: ViewGroup.OnHierarchyChangeListener ) setOnHoverListener [androidJvm] open fun setOnHoverListener (p0: View.OnHoverListener ) setOnKeyListener [androidJvm] open fun setOnKeyListener (p0: View.OnKeyListener ) setOnLongClickListener [androidJvm] open fun setOnLongClickListener (p0: View.OnLongClickListener ?) setOnPageChangeListener [androidJvm] open override fun setOnPageChangeListener (listener: ViewPager.OnPageChangeListener ) setOnReceiveContentListener [androidJvm] open fun setOnReceiveContentListener (p0: Array < String >?, p1: OnReceiveContentListener ?) setOnScrollChangeListener [androidJvm] open fun setOnScrollChangeListener (p0: View.OnScrollChangeListener ) setOnTouchListener [androidJvm] open fun setOnTouchListener (p0: View.OnTouchListener ) setOutlineAmbientShadowColor [androidJvm] open fun setOutlineAmbientShadowColor (p0: Int ) setOutlineProvider [androidJvm] open fun setOutlineProvider (p0: ViewOutlineProvider ) setOutlineSpotShadowColor [androidJvm] open fun setOutlineSpotShadowColor (p0: Int ) setOverScrollMode [androidJvm] open fun setOverScrollMode (p0: Int ) setPadding [androidJvm] open fun setPadding (p0: Int , p1: Int , p2: Int , p3: Int ) setPaddingRelative [androidJvm] open fun setPaddingRelative (p0: Int , p1: Int , p2: Int , p3: Int ) setPageMargin [androidJvm] open fun setPageMargin (marginPixels: Int ) setPageMarginDrawable [androidJvm] open fun setPageMarginDrawable (@ Nullable d: Drawable ?) open fun setPageMarginDrawable (@ DrawableRes resId: Int ) setPageTransformer [androidJvm] open fun setPageTransformer (reverseDrawingOrder: Boolean , @ Nullable transformer: ViewPager.PageTransformer ?) open fun setPageTransformer (reverseDrawingOrder: Boolean , @ Nullable transformer: ViewPager.PageTransformer ?, pageLayerType: Int ) setPivotX [androidJvm] open fun setPivotX (p0: Float ) setPivotY [androidJvm] open fun setPivotY (p0: Float ) setPointerIcon [androidJvm] open fun setPointerIcon (p0: PointerIcon ) setPressed [androidJvm] open fun setPressed (p0: Boolean ) setRenderEffect [androidJvm] open fun setRenderEffect (p0: RenderEffect ?) setRevealOnFocusHint [androidJvm] fun setRevealOnFocusHint (p0: Boolean ) setRight [androidJvm] fun setRight (p0: Int ) setRotation [androidJvm] open fun setRotation (p0: Float ) setRotationX [androidJvm] open fun setRotationX (p0: Float ) setRotationY [androidJvm] open fun setRotationY (p0: Float ) setSaveEnabled [androidJvm] open fun setSaveEnabled (p0: Boolean ) setSaveFromParentEnabled [androidJvm] open fun setSaveFromParentEnabled (p0: Boolean ) setScaleX [androidJvm] open fun setScaleX (p0: Float ) setScaleY [androidJvm] open fun setScaleY (p0: Float ) setScreenReaderFocusable [androidJvm] open fun setScreenReaderFocusable (p0: Boolean ) setScrollBarDefaultDelayBeforeFade [androidJvm] open fun setScrollBarDefaultDelayBeforeFade (p0: Int ) setScrollBarFadeDuration [androidJvm] open fun setScrollBarFadeDuration (p0: Int ) setScrollbarFadingEnabled [androidJvm] open fun setScrollbarFadingEnabled (p0: Boolean ) setScrollBarSize [androidJvm] open fun setScrollBarSize (p0: Int ) setScrollBarStyle [androidJvm] open fun setScrollBarStyle (p0: Int ) setScrollCaptureCallback [androidJvm] fun setScrollCaptureCallback (p0: ScrollCaptureCallback ?) setScrollCaptureHint [androidJvm] open fun setScrollCaptureHint (p0: Int ) setScrollContainer [androidJvm] open fun setScrollContainer (p0: Boolean ) setScrollIndicators [androidJvm] open fun setScrollIndicators (p0: Int ) open fun setScrollIndicators (p0: Int , p1: Int ) setScrollState [androidJvm] open fun setScrollState (newState: Int ) setScrollX [androidJvm] open fun setScrollX (p0: Int ) setScrollY [androidJvm] open fun setScrollY (p0: Int ) setSelected [androidJvm] open fun setSelected (p0: Boolean ) setSoundEffectsEnabled [androidJvm] open fun setSoundEffectsEnabled (p0: Boolean ) setStateDescription [androidJvm] open fun setStateDescription (p0: CharSequence ?) setStateListAnimator [androidJvm] open fun setStateListAnimator (p0: StateListAnimator ) setStaticTransformationsEnabled [androidJvm] open fun setStaticTransformationsEnabled (p0: Boolean ) setSystemGestureExclusionRects [androidJvm] open fun setSystemGestureExclusionRects (p0: MutableList < Rect >) setTag [androidJvm] open fun setTag (p0: Any ) open fun setTag (p0: Int , p1: Any ) setTextAlignment [androidJvm] open fun setTextAlignment (p0: Int ) setTextDirection [androidJvm] open fun setTextDirection (p0: Int ) setTooltipText [androidJvm] open fun setTooltipText (p0: CharSequence ?) setTop [androidJvm] fun setTop (p0: Int ) setTouchDelegate [androidJvm] open fun setTouchDelegate (p0: TouchDelegate ) setTouchscreenBlocksFocus [androidJvm] open fun setTouchscreenBlocksFocus (p0: Boolean ) setTransitionAlpha [androidJvm] open fun setTransitionAlpha (p0: Float ) setTransitionGroup [androidJvm] open fun setTransitionGroup (p0: Boolean ) setTransitionName [androidJvm] fun setTransitionName (p0: String ) setTransitionVisibility [androidJvm] open fun setTransitionVisibility (p0: Int ) setTranslationX [androidJvm] open fun setTranslationX (p0: Float ) setTranslationY [androidJvm] open fun setTranslationY (p0: Float ) setTranslationZ [androidJvm] open fun setTranslationZ (p0: Float ) setVerticalFadingEdgeEnabled [androidJvm] open fun setVerticalFadingEdgeEnabled (p0: Boolean ) setVerticalScrollBarEnabled [androidJvm] open fun setVerticalScrollBarEnabled (p0: Boolean ) setVerticalScrollbarPosition [androidJvm] open fun setVerticalScrollbarPosition (p0: Int ) setVerticalScrollbarThumbDrawable [androidJvm] open fun setVerticalScrollbarThumbDrawable (p0: Drawable ?) setVerticalScrollbarTrackDrawable [androidJvm] open fun setVerticalScrollbarTrackDrawable (p0: Drawable ?) setViewTranslationCallback [androidJvm] open fun setViewTranslationCallback (p0: ViewTranslationCallback ) setVisibility [androidJvm] open fun setVisibility (p0: Int ) setWillNotDraw [androidJvm] open fun setWillNotDraw (p0: Boolean ) setWindowInsetsAnimationCallback [androidJvm] open override fun setWindowInsetsAnimationCallback (p0: WindowInsetsAnimation.Callback ?) setX [androidJvm] open fun setX (p0: Float ) setY [androidJvm] open fun setY (p0: Float ) setZ [androidJvm] open fun setZ (p0: Float ) shouldDelayChildPressedState [androidJvm] open fun shouldDelayChildPressedState (): Boolean showContextMenu [androidJvm] open fun showContextMenu (): Boolean open fun showContextMenu (p0: Float , p1: Float ): Boolean showContextMenuForChild [androidJvm] open override fun showContextMenuForChild (p0: View ): Boolean open override fun showContextMenuForChild (p0: View , p1: Float , p2: Float ): Boolean smoothScrollTo [androidJvm] open fun smoothScrollTo (x: Int , y: Int ) open fun smoothScrollTo (x: Int , y: Int , velocity: Int ) startActionMode [androidJvm] open fun startActionMode (p0: ActionMode.Callback ): ActionMode open fun startActionMode (p0: ActionMode.Callback , p1: Int ): ActionMode startActionModeForChild [androidJvm] open override fun startActionModeForChild (p0: View , p1: ActionMode.Callback ): ActionMode open override fun startActionModeForChild (p0: View , p1: ActionMode.Callback , p2: Int ): ActionMode startAnimation [androidJvm] open fun startAnimation (p0: Animation ) startDragAndDrop [androidJvm] fun startDragAndDrop (p0: ClipData , p1: View.DragShadowBuilder , p2: Any , p3: Int ): Boolean startLayoutAnimation [androidJvm] open fun startLayoutAnimation () startNestedScroll [androidJvm] open fun startNestedScroll (p0: Int ): Boolean startViewTransition [androidJvm] open fun startViewTransition (p0: View ) stopNestedScroll [androidJvm] open fun stopNestedScroll () suppressLayout [androidJvm] open fun suppressLayout (p0: Boolean ) toString [androidJvm] open override fun toString (): String transformMatrixToGlobal [androidJvm] open fun transformMatrixToGlobal (p0: Matrix ) transformMatrixToLocal [androidJvm] open fun transformMatrixToLocal (p0: Matrix ) unscheduleDrawable [androidJvm] open fun unscheduleDrawable (p0: Drawable ) open override fun unscheduleDrawable (p0: Drawable , p1: Runnable ) updateDragShadow [androidJvm] fun updateDragShadow (p0: View.DragShadowBuilder ) updateViewLayout [androidJvm] open override fun updateViewLayout (p0: View , p1: ViewGroup.LayoutParams ) verifyDrawable [androidJvm] open override fun verifyDrawable (who: Drawable ): Boolean willNotDraw [androidJvm] open fun willNotDraw (): Boolean","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-view-pager/#properties","text":"Name Summary direction [androidJvm] val direction : ReadingProgression mAdapter [androidJvm] val mAdapter : PagerAdapter mCurItem [androidJvm] val mCurItem : Int type [androidJvm] lateinit var type : Publication.TYPE","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-view-pager/-r2-view-pager/","text":"// navigator / org.readium.r2.navigator.pager / R2ViewPager / R2ViewPager R2ViewPager \u00b6 [androidJvm]\\ fun R2ViewPager (context: Context ) fun R2ViewPager (context: Context , attrs: AttributeSet )","title":" r2 view pager"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-view-pager/-r2-view-pager/#r2viewpager","text":"[androidJvm]\\ fun R2ViewPager (context: Context ) fun R2ViewPager (context: Context , attrs: AttributeSet )","title":"R2ViewPager"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-view-pager/on-intercept-touch-event/","text":"// navigator / org.readium.r2.navigator.pager / R2ViewPager / onInterceptTouchEvent onInterceptTouchEvent \u00b6 [androidJvm]\\ open override fun onInterceptTouchEvent (ev: MotionEvent ): Boolean","title":"On intercept touch event"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-view-pager/on-intercept-touch-event/#onintercepttouchevent","text":"[androidJvm]\\ open override fun onInterceptTouchEvent (ev: MotionEvent ): Boolean","title":"onInterceptTouchEvent"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-view-pager/on-touch-event/","text":"// navigator / org.readium.r2.navigator.pager / R2ViewPager / onTouchEvent onTouchEvent \u00b6 [androidJvm]\\ open override fun onTouchEvent (ev: MotionEvent ): Boolean","title":"On touch event"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-view-pager/on-touch-event/#ontouchevent","text":"[androidJvm]\\ open override fun onTouchEvent (ev: MotionEvent ): Boolean","title":"onTouchEvent"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-view-pager/set-current-item/","text":"// navigator / org.readium.r2.navigator.pager / R2ViewPager / setCurrentItem setCurrentItem \u00b6 [androidJvm]\\ open override fun setCurrentItem (item: Int )","title":"Set current item"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-view-pager/set-current-item/#setcurrentitem","text":"[androidJvm]\\ open override fun setCurrentItem (item: Int )","title":"setCurrentItem"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-view-pager/type/","text":"// navigator / org.readium.r2.navigator.pager / R2ViewPager / type type \u00b6 [androidJvm]\\ lateinit var type : Publication.TYPE","title":"Type"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pager/-r2-view-pager/type/#type","text":"[androidJvm]\\ lateinit var type : Publication.TYPE","title":"type"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/","text":"// navigator / org.readium.r2.navigator.pdf Package org.readium.r2.navigator.pdf \u00b6 Types \u00b6 Name Summary PdfNavigatorFragment [androidJvm] class PdfNavigatorFragment : Fragment , VisualNavigator Navigator for PDF publications. R2PdfActivity [androidJvm] abstract class R2PdfActivity : AppCompatActivity , PdfNavigatorFragment.Listener","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/#package-orgreadiumr2navigatorpdf","text":"","title":"Package org.readium.r2.navigator.pdf"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/#types","text":"Name Summary PdfNavigatorFragment [androidJvm] class PdfNavigatorFragment : Fragment , VisualNavigator Navigator for PDF publications. R2PdfActivity [androidJvm] abstract class R2PdfActivity : AppCompatActivity , PdfNavigatorFragment.Listener","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/","text":"// navigator / org.readium.r2.navigator.pdf / PdfNavigatorFragment PdfNavigatorFragment \u00b6 [androidJvm]\\ class PdfNavigatorFragment : Fragment , VisualNavigator Navigator for PDF publications. To use this Fragment , create a factory with PdfNavigatorFragment.createFactory(). Types \u00b6 Name Summary Companion [androidJvm] object Companion Listener [androidJvm] interface Listener : VisualNavigator.Listener Functions \u00b6 Name Summary callStartTransitionListener [androidJvm] open fun callStartTransitionListener (p0: Boolean ) createFragmentContainer [androidJvm] @ NonNull open fun createFragmentContainer (): FragmentContainer dump [androidJvm] open fun dump (@ NonNull p0: String , @ Nullable p1: FileDescriptor ?, @ NonNull p2: PrintWriter , @ Nullable p3: Array < String >?) equals [androidJvm] operator override fun equals (@ Nullable other: Any ?): Boolean findFragmentByWho [androidJvm] @ Nullable open fun findFragmentByWho (@ NonNull p0: String ): Fragment ? generateActivityResultKey [androidJvm] @ NonNull open fun generateActivityResultKey (): String getActivity [androidJvm] @ Nullable fun getActivity (): FragmentActivity ? getAllowEnterTransitionOverlap [androidJvm] open fun getAllowEnterTransitionOverlap (): Boolean getAllowReturnTransitionOverlap [androidJvm] open fun getAllowReturnTransitionOverlap (): Boolean getAnimatingAway [androidJvm] open fun getAnimatingAway (): View getAnimator [androidJvm] open fun getAnimator (): Animator getArguments [androidJvm] @ Nullable fun getArguments (): Bundle ? getChildFragmentManager [androidJvm] @ NonNull fun getChildFragmentManager (): FragmentManager getContext [androidJvm] @ Nullable open fun getContext (): Context ? getDefaultViewModelProviderFactory [androidJvm] @ NonNull open override fun getDefaultViewModelProviderFactory (): ViewModelProvider.Factory getEnterAnim [androidJvm] open fun getEnterAnim (): Int getEnterTransition [androidJvm] @ Nullable open fun getEnterTransition (): Any ? getEnterTransitionCallback [androidJvm] open fun getEnterTransitionCallback (): SharedElementCallback getExitAnim [androidJvm] open fun getExitAnim (): Int getExitTransition [androidJvm] @ Nullable open fun getExitTransition (): Any ? getExitTransitionCallback [androidJvm] open fun getExitTransitionCallback (): SharedElementCallback getFocusedView [androidJvm] open fun getFocusedView (): View getHost [androidJvm] @ Nullable fun getHost (): Any ? getId [androidJvm] fun getId (): Int getLayoutInflater [androidJvm] @ NonNull fun getLayoutInflater (): LayoutInflater getLifecycle [androidJvm] @ NonNull open override fun getLifecycle (): Lifecycle getNextTransition [androidJvm] open fun getNextTransition (): Int getParentFragment [androidJvm] @ Nullable fun getParentFragment (): Fragment ? getParentFragmentManager [androidJvm] @ NonNull fun getParentFragmentManager (): FragmentManager getPopDirection [androidJvm] open fun getPopDirection (): Boolean getPopEnterAnim [androidJvm] open fun getPopEnterAnim (): Int getPopExitAnim [androidJvm] open fun getPopExitAnim (): Int getPostOnViewCreatedAlpha [androidJvm] open fun getPostOnViewCreatedAlpha (): Float getReenterTransition [androidJvm] @ Nullable open fun getReenterTransition (): Any ? getResources [androidJvm] @ NonNull fun getResources (): Resources getReturnTransition [androidJvm] @ Nullable open fun getReturnTransition (): Any ? getSavedStateRegistry [androidJvm] @ NonNull override fun getSavedStateRegistry (): SavedStateRegistry getSharedElementEnterTransition [androidJvm] @ Nullable open fun getSharedElementEnterTransition (): Any ? getSharedElementReturnTransition [androidJvm] @ Nullable open fun getSharedElementReturnTransition (): Any ? getSharedElementSourceNames [androidJvm] @ NonNull open fun getSharedElementSourceNames (): ArrayList < String > getSharedElementTargetNames [androidJvm] @ NonNull open fun getSharedElementTargetNames (): ArrayList < String > getString [androidJvm] @ NonNull fun getString (@ StringRes p0: Int ): String @ NonNull fun getString (@ StringRes p0: Int , @ Nullable vararg p1: Any ): String getTag [androidJvm] @ Nullable fun getTag (): String ? getText [androidJvm] @ NonNull fun getText (@ StringRes p0: Int ): CharSequence getView [androidJvm] @ Nullable open fun getView (): View ? getViewLifecycleOwner [androidJvm] @ MainThread @ NonNull open fun getViewLifecycleOwner (): LifecycleOwner getViewLifecycleOwnerLiveData [androidJvm] @ NonNull open fun getViewLifecycleOwnerLiveData (): LiveData < LifecycleOwner > getViewModelStore [androidJvm] @ NonNull open override fun getViewModelStore (): ViewModelStore go [androidJvm] open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link. [androidJvm] open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . goBackward [androidJvm] open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction. goForward [androidJvm] open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction. hashCode [androidJvm] override fun hashCode (): Int hasOptionsMenu [androidJvm] fun hasOptionsMenu (): Boolean initState [androidJvm] open fun initState () isAdded [androidJvm] fun isAdded (): Boolean isDetached [androidJvm] fun isDetached (): Boolean isHidden [androidJvm] fun isHidden (): Boolean isHideReplaced [androidJvm] open fun isHideReplaced (): Boolean isInBackStack [androidJvm] fun isInBackStack (): Boolean isInLayout [androidJvm] fun isInLayout (): Boolean isMenuVisible [androidJvm] fun isMenuVisible (): Boolean isPostponed [androidJvm] open fun isPostponed (): Boolean isRemoving [androidJvm] fun isRemoving (): Boolean isRemovingParent [androidJvm] fun isRemovingParent (): Boolean isResumed [androidJvm] fun isResumed (): Boolean isStateSaved [androidJvm] fun isStateSaved (): Boolean isVisible [androidJvm] fun isVisible (): Boolean noteStateNotSaved [androidJvm] open fun noteStateNotSaved () onAttach [androidJvm] @ MainThread @ CallSuper open fun onAttach (@ NonNull p0: Context ) onConfigurationChanged [androidJvm] @ CallSuper open override fun onConfigurationChanged (@ NonNull p0: Configuration ) onContextItemSelected [androidJvm] @ MainThread open fun onContextItemSelected (@ NonNull p0: MenuItem ): Boolean onCreate [androidJvm] @ MainThread @ CallSuper open fun onCreate (@ Nullable p0: Bundle ?) onCreateAnimation [androidJvm] @ MainThread @ Nullable open fun onCreateAnimation (p0: Int , p1: Boolean , p2: Int ): Animation ? onCreateAnimator [androidJvm] @ MainThread @ Nullable open fun onCreateAnimator (p0: Int , p1: Boolean , p2: Int ): Animator ? onCreateContextMenu [androidJvm] @ MainThread open override fun onCreateContextMenu (@ NonNull p0: ContextMenu , @ NonNull p1: View , @ Nullable p2: ContextMenu.ContextMenuInfo ?) onCreateOptionsMenu [androidJvm] @ MainThread open fun onCreateOptionsMenu (@ NonNull p0: Menu , @ NonNull p1: MenuInflater ) onCreateView [androidJvm] open override fun onCreateView (inflater: LayoutInflater , container: ViewGroup ?, savedInstanceState: Bundle ?): View ? onDestroy [androidJvm] @ MainThread @ CallSuper open fun onDestroy () onDestroyOptionsMenu [androidJvm] @ MainThread open fun onDestroyOptionsMenu () onDestroyView [androidJvm] @ MainThread @ CallSuper open fun onDestroyView () onDetach [androidJvm] @ MainThread @ CallSuper open fun onDetach () onGetLayoutInflater [androidJvm] @ NonNull open fun onGetLayoutInflater (@ Nullable p0: Bundle ?): LayoutInflater onHiddenChanged [androidJvm] @ MainThread open fun onHiddenChanged (p0: Boolean ) onInflate [androidJvm] @ UiThread @ CallSuper open fun onInflate (@ NonNull p0: Context , @ NonNull p1: AttributeSet , @ Nullable p2: Bundle ?) onLowMemory [androidJvm] @ MainThread @ CallSuper open override fun onLowMemory () onMultiWindowModeChanged [androidJvm] open fun onMultiWindowModeChanged (p0: Boolean ) onOptionsItemSelected [androidJvm] @ MainThread open fun onOptionsItemSelected (@ NonNull p0: MenuItem ): Boolean onOptionsMenuClosed [androidJvm] @ MainThread open fun onOptionsMenuClosed (@ NonNull p0: Menu ) onPause [androidJvm] @ MainThread @ CallSuper open fun onPause () onPictureInPictureModeChanged [androidJvm] open fun onPictureInPictureModeChanged (p0: Boolean ) onPrepareOptionsMenu [androidJvm] @ MainThread open fun onPrepareOptionsMenu (@ NonNull p0: Menu ) onPrimaryNavigationFragmentChanged [androidJvm] @ MainThread open fun onPrimaryNavigationFragmentChanged (p0: Boolean ) onResume [androidJvm] @ MainThread @ CallSuper open fun onResume () onSaveInstanceState [androidJvm] open override fun onSaveInstanceState (outState: Bundle ) onStart [androidJvm] @ MainThread @ CallSuper open fun onStart () onStop [androidJvm] @ MainThread @ CallSuper open fun onStop () onViewCreated [androidJvm] @ MainThread open fun onViewCreated (@ NonNull p0: View , @ Nullable p1: Bundle ?) onViewStateRestored [androidJvm] @ MainThread @ CallSuper open fun onViewStateRestored (@ Nullable p0: Bundle ?) performActivityCreated [androidJvm] open fun performActivityCreated (p0: Bundle ) performAttach [androidJvm] open fun performAttach () performConfigurationChanged [androidJvm] open fun performConfigurationChanged (@ NonNull p0: Configuration ) performContextItemSelected [androidJvm] open fun performContextItemSelected (@ NonNull p0: MenuItem ): Boolean performCreate [androidJvm] open fun performCreate (p0: Bundle ) performCreateOptionsMenu [androidJvm] open fun performCreateOptionsMenu (@ NonNull p0: Menu , @ NonNull p1: MenuInflater ): Boolean performCreateView [androidJvm] open fun performCreateView (@ NonNull p0: LayoutInflater , @ Nullable p1: ViewGroup ?, @ Nullable p2: Bundle ?) performDestroy [androidJvm] open fun performDestroy () performDestroyView [androidJvm] open fun performDestroyView () performDetach [androidJvm] open fun performDetach () performGetLayoutInflater [androidJvm] @ NonNull open fun performGetLayoutInflater (@ Nullable p0: Bundle ?): LayoutInflater performLowMemory [androidJvm] open fun performLowMemory () performMultiWindowModeChanged [androidJvm] open fun performMultiWindowModeChanged (p0: Boolean ) performOptionsItemSelected [androidJvm] open fun performOptionsItemSelected (@ NonNull p0: MenuItem ): Boolean performOptionsMenuClosed [androidJvm] open fun performOptionsMenuClosed (@ NonNull p0: Menu ) performPause [androidJvm] open fun performPause () performPictureInPictureModeChanged [androidJvm] open fun performPictureInPictureModeChanged (p0: Boolean ) performPrepareOptionsMenu [androidJvm] open fun performPrepareOptionsMenu (@ NonNull p0: Menu ): Boolean performPrimaryNavigationFragmentChanged [androidJvm] open fun performPrimaryNavigationFragmentChanged () performResume [androidJvm] open fun performResume () performSaveInstanceState [androidJvm] open fun performSaveInstanceState (p0: Bundle ) performStart [androidJvm] open fun performStart () performStop [androidJvm] open fun performStop () performViewCreated [androidJvm] open fun performViewCreated () postponeEnterTransition [androidJvm] open fun postponeEnterTransition () fun postponeEnterTransition (p0: Long , @ NonNull p1: TimeUnit ) registerForActivityResult [androidJvm] @ MainThread @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull p0: ActivityResultContract < I , O >, @ NonNull p1: ActivityResultCallback < O >): ActivityResultLauncher < I > @ MainThread @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull p0: ActivityResultContract < I , O >, @ NonNull p1: ActivityResultRegistry , @ NonNull p2: ActivityResultCallback < O >): ActivityResultLauncher < I > registerForContextMenu [androidJvm] open fun registerForContextMenu (@ NonNull p0: View ) requireActivity [androidJvm] @ NonNull fun requireActivity (): FragmentActivity requireArguments [androidJvm] @ NonNull fun requireArguments (): Bundle requireContext [androidJvm] @ NonNull fun requireContext (): Context requireHost [androidJvm] @ NonNull fun requireHost (): Any requireParentFragment [androidJvm] @ NonNull fun requireParentFragment (): Fragment requireView [androidJvm] @ NonNull fun requireView (): View restoreChildFragmentState [androidJvm] open fun restoreChildFragmentState (@ Nullable p0: Bundle ?) restoreViewState [androidJvm] fun restoreViewState (p0: Bundle ) setAllowEnterTransitionOverlap [androidJvm] open fun setAllowEnterTransitionOverlap (p0: Boolean ) setAllowReturnTransitionOverlap [androidJvm] open fun setAllowReturnTransitionOverlap (p0: Boolean ) setAnimatingAway [androidJvm] open fun setAnimatingAway (p0: View ) setAnimations [androidJvm] open fun setAnimations (p0: Int , p1: Int , p2: Int , p3: Int ) setAnimator [androidJvm] open fun setAnimator (p0: Animator ) setArguments [androidJvm] open fun setArguments (@ Nullable p0: Bundle ?) setEnterSharedElementCallback [androidJvm] open fun setEnterSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setEnterTransition [androidJvm] open fun setEnterTransition (@ Nullable p0: Any ?) setExitSharedElementCallback [androidJvm] open fun setExitSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setExitTransition [androidJvm] open fun setExitTransition (@ Nullable p0: Any ?) setFocusedView [androidJvm] open fun setFocusedView (p0: View ) setHasOptionsMenu [androidJvm] open fun setHasOptionsMenu (p0: Boolean ) setHideReplaced [androidJvm] open fun setHideReplaced (p0: Boolean ) setInitialSavedState [androidJvm] open fun setInitialSavedState (@ Nullable p0: Fragment.SavedState ?) setMenuVisibility [androidJvm] open fun setMenuVisibility (p0: Boolean ) setNextTransition [androidJvm] open fun setNextTransition (p0: Int ) setOnStartEnterTransitionListener [androidJvm] open fun setOnStartEnterTransitionListener (p0: Fragment.OnStartEnterTransitionListener ) setPopDirection [androidJvm] open fun setPopDirection (p0: Boolean ) setPostOnViewCreatedAlpha [androidJvm] open fun setPostOnViewCreatedAlpha (p0: Float ) setReenterTransition [androidJvm] open fun setReenterTransition (@ Nullable p0: Any ?) setReturnTransition [androidJvm] open fun setReturnTransition (@ Nullable p0: Any ?) setSharedElementEnterTransition [androidJvm] open fun setSharedElementEnterTransition (@ Nullable p0: Any ?) setSharedElementNames [androidJvm] open fun setSharedElementNames (@ Nullable p0: ArrayList < String >?, @ Nullable p1: ArrayList < String >?) setSharedElementReturnTransition [androidJvm] open fun setSharedElementReturnTransition (@ Nullable p0: Any ?) shouldShowRequestPermissionRationale [androidJvm] open fun shouldShowRequestPermissionRationale (@ NonNull p0: String ): Boolean startActivity [androidJvm] open fun startActivity (p0: Intent ) open fun startActivity (p0: Intent , @ Nullable p1: Bundle ?) startPostponedEnterTransition [androidJvm] open fun startPostponedEnterTransition () toString [androidJvm] @ NonNull open override fun toString (): String unregisterForContextMenu [androidJvm] open fun unregisterForContextMenu (@ NonNull p0: View ) Properties \u00b6 Name Summary currentLocator [androidJvm] open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position. mAdded [androidJvm] val mAdded : Boolean mAnimationInfo [androidJvm] val mAnimationInfo : Fragment.AnimationInfo mArguments [androidJvm] val mArguments : Bundle mBackStackNesting [androidJvm] val mBackStackNesting : Int mChildFragmentManager [androidJvm] @ NonNull val mChildFragmentManager : FragmentManager mContainer [androidJvm] val mContainer : ViewGroup mContainerId [androidJvm] val mContainerId : Int mDefaultFactory [androidJvm] val mDefaultFactory : ViewModelProvider.Factory mDeferStart [androidJvm] val mDeferStart : Boolean mDetached [androidJvm] val mDetached : Boolean mFragmentId [androidJvm] val mFragmentId : Int mFragmentManager [androidJvm] val mFragmentManager : FragmentManager mFromLayout [androidJvm] val mFromLayout : Boolean mHasMenu [androidJvm] val mHasMenu : Boolean mHidden [androidJvm] val mHidden : Boolean mHiddenChanged [androidJvm] val mHiddenChanged : Boolean mHost [androidJvm] val mHost : FragmentHostCallback <*> mInLayout [androidJvm] val mInLayout : Boolean mIsCreated [androidJvm] val mIsCreated : Boolean mIsNewlyAdded [androidJvm] val mIsNewlyAdded : Boolean mLayoutInflater [androidJvm] val mLayoutInflater : LayoutInflater mLifecycleRegistry [androidJvm] val mLifecycleRegistry : LifecycleRegistry mMaxState [androidJvm] val mMaxState : Lifecycle.State mMenuVisible [androidJvm] val mMenuVisible : Boolean mParentFragment [androidJvm] val mParentFragment : Fragment mPerformedCreateView [androidJvm] val mPerformedCreateView : Boolean mPostponedAlpha [androidJvm] val mPostponedAlpha : Float mPostponedDurationRunnable [androidJvm] val mPostponedDurationRunnable : Runnable mRemoving [androidJvm] val mRemoving : Boolean mRestored [androidJvm] val mRestored : Boolean mRetainInstance [androidJvm] val mRetainInstance : Boolean mRetainInstanceChangedWhileDetached [androidJvm] val mRetainInstanceChangedWhileDetached : Boolean mSavedFragmentState [androidJvm] val mSavedFragmentState : Bundle mSavedStateRegistryController [androidJvm] val mSavedStateRegistryController : SavedStateRegistryController mSavedUserVisibleHint [androidJvm] @ Nullable val mSavedUserVisibleHint : Boolean ? mSavedViewRegistryState [androidJvm] val mSavedViewRegistryState : Bundle mSavedViewState [androidJvm] val mSavedViewState : SparseArray < Parcelable > mState [androidJvm] val mState : Int mTag [androidJvm] val mTag : String mTarget [androidJvm] val mTarget : Fragment mTargetRequestCode [androidJvm] val mTargetRequestCode : Int mTargetWho [androidJvm] val mTargetWho : String mUserVisibleHint [androidJvm] val mUserVisibleHint : Boolean mView [androidJvm] val mView : View mViewLifecycleOwner [androidJvm] @ Nullable val mViewLifecycleOwner : FragmentViewLifecycleOwner ? mViewLifecycleOwnerLiveData [androidJvm] val mViewLifecycleOwnerLiveData : MutableLiveData < LifecycleOwner > mWho [androidJvm] @ NonNull val mWho : String pdfView [androidJvm] lateinit var pdfView : PDFView publication [androidJvm] open override val publication : Publication Publication rendered by this navigator. readingProgression [androidJvm] open override val readingProgression : ReadingProgression Current reading progression direction.","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/#pdfnavigatorfragment","text":"[androidJvm]\\ class PdfNavigatorFragment : Fragment , VisualNavigator Navigator for PDF publications. To use this Fragment , create a factory with PdfNavigatorFragment.createFactory().","title":"PdfNavigatorFragment"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/#types","text":"Name Summary Companion [androidJvm] object Companion Listener [androidJvm] interface Listener : VisualNavigator.Listener","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/#functions","text":"Name Summary callStartTransitionListener [androidJvm] open fun callStartTransitionListener (p0: Boolean ) createFragmentContainer [androidJvm] @ NonNull open fun createFragmentContainer (): FragmentContainer dump [androidJvm] open fun dump (@ NonNull p0: String , @ Nullable p1: FileDescriptor ?, @ NonNull p2: PrintWriter , @ Nullable p3: Array < String >?) equals [androidJvm] operator override fun equals (@ Nullable other: Any ?): Boolean findFragmentByWho [androidJvm] @ Nullable open fun findFragmentByWho (@ NonNull p0: String ): Fragment ? generateActivityResultKey [androidJvm] @ NonNull open fun generateActivityResultKey (): String getActivity [androidJvm] @ Nullable fun getActivity (): FragmentActivity ? getAllowEnterTransitionOverlap [androidJvm] open fun getAllowEnterTransitionOverlap (): Boolean getAllowReturnTransitionOverlap [androidJvm] open fun getAllowReturnTransitionOverlap (): Boolean getAnimatingAway [androidJvm] open fun getAnimatingAway (): View getAnimator [androidJvm] open fun getAnimator (): Animator getArguments [androidJvm] @ Nullable fun getArguments (): Bundle ? getChildFragmentManager [androidJvm] @ NonNull fun getChildFragmentManager (): FragmentManager getContext [androidJvm] @ Nullable open fun getContext (): Context ? getDefaultViewModelProviderFactory [androidJvm] @ NonNull open override fun getDefaultViewModelProviderFactory (): ViewModelProvider.Factory getEnterAnim [androidJvm] open fun getEnterAnim (): Int getEnterTransition [androidJvm] @ Nullable open fun getEnterTransition (): Any ? getEnterTransitionCallback [androidJvm] open fun getEnterTransitionCallback (): SharedElementCallback getExitAnim [androidJvm] open fun getExitAnim (): Int getExitTransition [androidJvm] @ Nullable open fun getExitTransition (): Any ? getExitTransitionCallback [androidJvm] open fun getExitTransitionCallback (): SharedElementCallback getFocusedView [androidJvm] open fun getFocusedView (): View getHost [androidJvm] @ Nullable fun getHost (): Any ? getId [androidJvm] fun getId (): Int getLayoutInflater [androidJvm] @ NonNull fun getLayoutInflater (): LayoutInflater getLifecycle [androidJvm] @ NonNull open override fun getLifecycle (): Lifecycle getNextTransition [androidJvm] open fun getNextTransition (): Int getParentFragment [androidJvm] @ Nullable fun getParentFragment (): Fragment ? getParentFragmentManager [androidJvm] @ NonNull fun getParentFragmentManager (): FragmentManager getPopDirection [androidJvm] open fun getPopDirection (): Boolean getPopEnterAnim [androidJvm] open fun getPopEnterAnim (): Int getPopExitAnim [androidJvm] open fun getPopExitAnim (): Int getPostOnViewCreatedAlpha [androidJvm] open fun getPostOnViewCreatedAlpha (): Float getReenterTransition [androidJvm] @ Nullable open fun getReenterTransition (): Any ? getResources [androidJvm] @ NonNull fun getResources (): Resources getReturnTransition [androidJvm] @ Nullable open fun getReturnTransition (): Any ? getSavedStateRegistry [androidJvm] @ NonNull override fun getSavedStateRegistry (): SavedStateRegistry getSharedElementEnterTransition [androidJvm] @ Nullable open fun getSharedElementEnterTransition (): Any ? getSharedElementReturnTransition [androidJvm] @ Nullable open fun getSharedElementReturnTransition (): Any ? getSharedElementSourceNames [androidJvm] @ NonNull open fun getSharedElementSourceNames (): ArrayList < String > getSharedElementTargetNames [androidJvm] @ NonNull open fun getSharedElementTargetNames (): ArrayList < String > getString [androidJvm] @ NonNull fun getString (@ StringRes p0: Int ): String @ NonNull fun getString (@ StringRes p0: Int , @ Nullable vararg p1: Any ): String getTag [androidJvm] @ Nullable fun getTag (): String ? getText [androidJvm] @ NonNull fun getText (@ StringRes p0: Int ): CharSequence getView [androidJvm] @ Nullable open fun getView (): View ? getViewLifecycleOwner [androidJvm] @ MainThread @ NonNull open fun getViewLifecycleOwner (): LifecycleOwner getViewLifecycleOwnerLiveData [androidJvm] @ NonNull open fun getViewLifecycleOwnerLiveData (): LiveData < LifecycleOwner > getViewModelStore [androidJvm] @ NonNull open override fun getViewModelStore (): ViewModelStore go [androidJvm] open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link. [androidJvm] open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . goBackward [androidJvm] open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction. goForward [androidJvm] open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction. hashCode [androidJvm] override fun hashCode (): Int hasOptionsMenu [androidJvm] fun hasOptionsMenu (): Boolean initState [androidJvm] open fun initState () isAdded [androidJvm] fun isAdded (): Boolean isDetached [androidJvm] fun isDetached (): Boolean isHidden [androidJvm] fun isHidden (): Boolean isHideReplaced [androidJvm] open fun isHideReplaced (): Boolean isInBackStack [androidJvm] fun isInBackStack (): Boolean isInLayout [androidJvm] fun isInLayout (): Boolean isMenuVisible [androidJvm] fun isMenuVisible (): Boolean isPostponed [androidJvm] open fun isPostponed (): Boolean isRemoving [androidJvm] fun isRemoving (): Boolean isRemovingParent [androidJvm] fun isRemovingParent (): Boolean isResumed [androidJvm] fun isResumed (): Boolean isStateSaved [androidJvm] fun isStateSaved (): Boolean isVisible [androidJvm] fun isVisible (): Boolean noteStateNotSaved [androidJvm] open fun noteStateNotSaved () onAttach [androidJvm] @ MainThread @ CallSuper open fun onAttach (@ NonNull p0: Context ) onConfigurationChanged [androidJvm] @ CallSuper open override fun onConfigurationChanged (@ NonNull p0: Configuration ) onContextItemSelected [androidJvm] @ MainThread open fun onContextItemSelected (@ NonNull p0: MenuItem ): Boolean onCreate [androidJvm] @ MainThread @ CallSuper open fun onCreate (@ Nullable p0: Bundle ?) onCreateAnimation [androidJvm] @ MainThread @ Nullable open fun onCreateAnimation (p0: Int , p1: Boolean , p2: Int ): Animation ? onCreateAnimator [androidJvm] @ MainThread @ Nullable open fun onCreateAnimator (p0: Int , p1: Boolean , p2: Int ): Animator ? onCreateContextMenu [androidJvm] @ MainThread open override fun onCreateContextMenu (@ NonNull p0: ContextMenu , @ NonNull p1: View , @ Nullable p2: ContextMenu.ContextMenuInfo ?) onCreateOptionsMenu [androidJvm] @ MainThread open fun onCreateOptionsMenu (@ NonNull p0: Menu , @ NonNull p1: MenuInflater ) onCreateView [androidJvm] open override fun onCreateView (inflater: LayoutInflater , container: ViewGroup ?, savedInstanceState: Bundle ?): View ? onDestroy [androidJvm] @ MainThread @ CallSuper open fun onDestroy () onDestroyOptionsMenu [androidJvm] @ MainThread open fun onDestroyOptionsMenu () onDestroyView [androidJvm] @ MainThread @ CallSuper open fun onDestroyView () onDetach [androidJvm] @ MainThread @ CallSuper open fun onDetach () onGetLayoutInflater [androidJvm] @ NonNull open fun onGetLayoutInflater (@ Nullable p0: Bundle ?): LayoutInflater onHiddenChanged [androidJvm] @ MainThread open fun onHiddenChanged (p0: Boolean ) onInflate [androidJvm] @ UiThread @ CallSuper open fun onInflate (@ NonNull p0: Context , @ NonNull p1: AttributeSet , @ Nullable p2: Bundle ?) onLowMemory [androidJvm] @ MainThread @ CallSuper open override fun onLowMemory () onMultiWindowModeChanged [androidJvm] open fun onMultiWindowModeChanged (p0: Boolean ) onOptionsItemSelected [androidJvm] @ MainThread open fun onOptionsItemSelected (@ NonNull p0: MenuItem ): Boolean onOptionsMenuClosed [androidJvm] @ MainThread open fun onOptionsMenuClosed (@ NonNull p0: Menu ) onPause [androidJvm] @ MainThread @ CallSuper open fun onPause () onPictureInPictureModeChanged [androidJvm] open fun onPictureInPictureModeChanged (p0: Boolean ) onPrepareOptionsMenu [androidJvm] @ MainThread open fun onPrepareOptionsMenu (@ NonNull p0: Menu ) onPrimaryNavigationFragmentChanged [androidJvm] @ MainThread open fun onPrimaryNavigationFragmentChanged (p0: Boolean ) onResume [androidJvm] @ MainThread @ CallSuper open fun onResume () onSaveInstanceState [androidJvm] open override fun onSaveInstanceState (outState: Bundle ) onStart [androidJvm] @ MainThread @ CallSuper open fun onStart () onStop [androidJvm] @ MainThread @ CallSuper open fun onStop () onViewCreated [androidJvm] @ MainThread open fun onViewCreated (@ NonNull p0: View , @ Nullable p1: Bundle ?) onViewStateRestored [androidJvm] @ MainThread @ CallSuper open fun onViewStateRestored (@ Nullable p0: Bundle ?) performActivityCreated [androidJvm] open fun performActivityCreated (p0: Bundle ) performAttach [androidJvm] open fun performAttach () performConfigurationChanged [androidJvm] open fun performConfigurationChanged (@ NonNull p0: Configuration ) performContextItemSelected [androidJvm] open fun performContextItemSelected (@ NonNull p0: MenuItem ): Boolean performCreate [androidJvm] open fun performCreate (p0: Bundle ) performCreateOptionsMenu [androidJvm] open fun performCreateOptionsMenu (@ NonNull p0: Menu , @ NonNull p1: MenuInflater ): Boolean performCreateView [androidJvm] open fun performCreateView (@ NonNull p0: LayoutInflater , @ Nullable p1: ViewGroup ?, @ Nullable p2: Bundle ?) performDestroy [androidJvm] open fun performDestroy () performDestroyView [androidJvm] open fun performDestroyView () performDetach [androidJvm] open fun performDetach () performGetLayoutInflater [androidJvm] @ NonNull open fun performGetLayoutInflater (@ Nullable p0: Bundle ?): LayoutInflater performLowMemory [androidJvm] open fun performLowMemory () performMultiWindowModeChanged [androidJvm] open fun performMultiWindowModeChanged (p0: Boolean ) performOptionsItemSelected [androidJvm] open fun performOptionsItemSelected (@ NonNull p0: MenuItem ): Boolean performOptionsMenuClosed [androidJvm] open fun performOptionsMenuClosed (@ NonNull p0: Menu ) performPause [androidJvm] open fun performPause () performPictureInPictureModeChanged [androidJvm] open fun performPictureInPictureModeChanged (p0: Boolean ) performPrepareOptionsMenu [androidJvm] open fun performPrepareOptionsMenu (@ NonNull p0: Menu ): Boolean performPrimaryNavigationFragmentChanged [androidJvm] open fun performPrimaryNavigationFragmentChanged () performResume [androidJvm] open fun performResume () performSaveInstanceState [androidJvm] open fun performSaveInstanceState (p0: Bundle ) performStart [androidJvm] open fun performStart () performStop [androidJvm] open fun performStop () performViewCreated [androidJvm] open fun performViewCreated () postponeEnterTransition [androidJvm] open fun postponeEnterTransition () fun postponeEnterTransition (p0: Long , @ NonNull p1: TimeUnit ) registerForActivityResult [androidJvm] @ MainThread @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull p0: ActivityResultContract < I , O >, @ NonNull p1: ActivityResultCallback < O >): ActivityResultLauncher < I > @ MainThread @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull p0: ActivityResultContract < I , O >, @ NonNull p1: ActivityResultRegistry , @ NonNull p2: ActivityResultCallback < O >): ActivityResultLauncher < I > registerForContextMenu [androidJvm] open fun registerForContextMenu (@ NonNull p0: View ) requireActivity [androidJvm] @ NonNull fun requireActivity (): FragmentActivity requireArguments [androidJvm] @ NonNull fun requireArguments (): Bundle requireContext [androidJvm] @ NonNull fun requireContext (): Context requireHost [androidJvm] @ NonNull fun requireHost (): Any requireParentFragment [androidJvm] @ NonNull fun requireParentFragment (): Fragment requireView [androidJvm] @ NonNull fun requireView (): View restoreChildFragmentState [androidJvm] open fun restoreChildFragmentState (@ Nullable p0: Bundle ?) restoreViewState [androidJvm] fun restoreViewState (p0: Bundle ) setAllowEnterTransitionOverlap [androidJvm] open fun setAllowEnterTransitionOverlap (p0: Boolean ) setAllowReturnTransitionOverlap [androidJvm] open fun setAllowReturnTransitionOverlap (p0: Boolean ) setAnimatingAway [androidJvm] open fun setAnimatingAway (p0: View ) setAnimations [androidJvm] open fun setAnimations (p0: Int , p1: Int , p2: Int , p3: Int ) setAnimator [androidJvm] open fun setAnimator (p0: Animator ) setArguments [androidJvm] open fun setArguments (@ Nullable p0: Bundle ?) setEnterSharedElementCallback [androidJvm] open fun setEnterSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setEnterTransition [androidJvm] open fun setEnterTransition (@ Nullable p0: Any ?) setExitSharedElementCallback [androidJvm] open fun setExitSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setExitTransition [androidJvm] open fun setExitTransition (@ Nullable p0: Any ?) setFocusedView [androidJvm] open fun setFocusedView (p0: View ) setHasOptionsMenu [androidJvm] open fun setHasOptionsMenu (p0: Boolean ) setHideReplaced [androidJvm] open fun setHideReplaced (p0: Boolean ) setInitialSavedState [androidJvm] open fun setInitialSavedState (@ Nullable p0: Fragment.SavedState ?) setMenuVisibility [androidJvm] open fun setMenuVisibility (p0: Boolean ) setNextTransition [androidJvm] open fun setNextTransition (p0: Int ) setOnStartEnterTransitionListener [androidJvm] open fun setOnStartEnterTransitionListener (p0: Fragment.OnStartEnterTransitionListener ) setPopDirection [androidJvm] open fun setPopDirection (p0: Boolean ) setPostOnViewCreatedAlpha [androidJvm] open fun setPostOnViewCreatedAlpha (p0: Float ) setReenterTransition [androidJvm] open fun setReenterTransition (@ Nullable p0: Any ?) setReturnTransition [androidJvm] open fun setReturnTransition (@ Nullable p0: Any ?) setSharedElementEnterTransition [androidJvm] open fun setSharedElementEnterTransition (@ Nullable p0: Any ?) setSharedElementNames [androidJvm] open fun setSharedElementNames (@ Nullable p0: ArrayList < String >?, @ Nullable p1: ArrayList < String >?) setSharedElementReturnTransition [androidJvm] open fun setSharedElementReturnTransition (@ Nullable p0: Any ?) shouldShowRequestPermissionRationale [androidJvm] open fun shouldShowRequestPermissionRationale (@ NonNull p0: String ): Boolean startActivity [androidJvm] open fun startActivity (p0: Intent ) open fun startActivity (p0: Intent , @ Nullable p1: Bundle ?) startPostponedEnterTransition [androidJvm] open fun startPostponedEnterTransition () toString [androidJvm] @ NonNull open override fun toString (): String unregisterForContextMenu [androidJvm] open fun unregisterForContextMenu (@ NonNull p0: View )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/#properties","text":"Name Summary currentLocator [androidJvm] open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position. mAdded [androidJvm] val mAdded : Boolean mAnimationInfo [androidJvm] val mAnimationInfo : Fragment.AnimationInfo mArguments [androidJvm] val mArguments : Bundle mBackStackNesting [androidJvm] val mBackStackNesting : Int mChildFragmentManager [androidJvm] @ NonNull val mChildFragmentManager : FragmentManager mContainer [androidJvm] val mContainer : ViewGroup mContainerId [androidJvm] val mContainerId : Int mDefaultFactory [androidJvm] val mDefaultFactory : ViewModelProvider.Factory mDeferStart [androidJvm] val mDeferStart : Boolean mDetached [androidJvm] val mDetached : Boolean mFragmentId [androidJvm] val mFragmentId : Int mFragmentManager [androidJvm] val mFragmentManager : FragmentManager mFromLayout [androidJvm] val mFromLayout : Boolean mHasMenu [androidJvm] val mHasMenu : Boolean mHidden [androidJvm] val mHidden : Boolean mHiddenChanged [androidJvm] val mHiddenChanged : Boolean mHost [androidJvm] val mHost : FragmentHostCallback <*> mInLayout [androidJvm] val mInLayout : Boolean mIsCreated [androidJvm] val mIsCreated : Boolean mIsNewlyAdded [androidJvm] val mIsNewlyAdded : Boolean mLayoutInflater [androidJvm] val mLayoutInflater : LayoutInflater mLifecycleRegistry [androidJvm] val mLifecycleRegistry : LifecycleRegistry mMaxState [androidJvm] val mMaxState : Lifecycle.State mMenuVisible [androidJvm] val mMenuVisible : Boolean mParentFragment [androidJvm] val mParentFragment : Fragment mPerformedCreateView [androidJvm] val mPerformedCreateView : Boolean mPostponedAlpha [androidJvm] val mPostponedAlpha : Float mPostponedDurationRunnable [androidJvm] val mPostponedDurationRunnable : Runnable mRemoving [androidJvm] val mRemoving : Boolean mRestored [androidJvm] val mRestored : Boolean mRetainInstance [androidJvm] val mRetainInstance : Boolean mRetainInstanceChangedWhileDetached [androidJvm] val mRetainInstanceChangedWhileDetached : Boolean mSavedFragmentState [androidJvm] val mSavedFragmentState : Bundle mSavedStateRegistryController [androidJvm] val mSavedStateRegistryController : SavedStateRegistryController mSavedUserVisibleHint [androidJvm] @ Nullable val mSavedUserVisibleHint : Boolean ? mSavedViewRegistryState [androidJvm] val mSavedViewRegistryState : Bundle mSavedViewState [androidJvm] val mSavedViewState : SparseArray < Parcelable > mState [androidJvm] val mState : Int mTag [androidJvm] val mTag : String mTarget [androidJvm] val mTarget : Fragment mTargetRequestCode [androidJvm] val mTargetRequestCode : Int mTargetWho [androidJvm] val mTargetWho : String mUserVisibleHint [androidJvm] val mUserVisibleHint : Boolean mView [androidJvm] val mView : View mViewLifecycleOwner [androidJvm] @ Nullable val mViewLifecycleOwner : FragmentViewLifecycleOwner ? mViewLifecycleOwnerLiveData [androidJvm] val mViewLifecycleOwnerLiveData : MutableLiveData < LifecycleOwner > mWho [androidJvm] @ NonNull val mWho : String pdfView [androidJvm] lateinit var pdfView : PDFView publication [androidJvm] open override val publication : Publication Publication rendered by this navigator. readingProgression [androidJvm] open override val readingProgression : ReadingProgression Current reading progression direction.","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/current-locator/","text":"// navigator / org.readium.r2.navigator.pdf / PdfNavigatorFragment / currentLocator currentLocator \u00b6 [androidJvm]\\ open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position.","title":"Current locator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/current-locator/#currentlocator","text":"[androidJvm]\\ open override val currentLocator : StateFlow< Locator > Current position in the publication. Can be used to save a bookmark to the current position.","title":"currentLocator"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/go-backward/","text":"// navigator / org.readium.r2.navigator.pdf / PdfNavigatorFragment / goBackward goBackward \u00b6 [androidJvm]\\ open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction.","title":"Go backward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/go-backward/#gobackward","text":"[androidJvm]\\ open override fun goBackward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the previous content portion (eg. page) in the reading progression direction.","title":"goBackward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/go-forward/","text":"// navigator / org.readium.r2.navigator.pdf / PdfNavigatorFragment / goForward goForward \u00b6 [androidJvm]\\ open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction.","title":"Go forward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/go-forward/#goforward","text":"[androidJvm]\\ open override fun goForward (animated: Boolean , completion: () -> Unit ): Boolean Moves to the next content portion (eg. page) in the reading progression direction.","title":"goForward"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/go/","text":"// navigator / org.readium.r2.navigator.pdf / PdfNavigatorFragment / go go \u00b6 [androidJvm]\\ open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . [androidJvm]\\ open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link.","title":"Go"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/go/#go","text":"[androidJvm]\\ open override fun go (locator: Locator , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication corresponding to the given Locator . [androidJvm]\\ open override fun go (link: Link , animated: Boolean , completion: () -> Unit ): Boolean Moves to the position in the publication targeted by the given link.","title":"go"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/on-create-view/","text":"// navigator / org.readium.r2.navigator.pdf / PdfNavigatorFragment / onCreateView onCreateView \u00b6 [androidJvm]\\ open override fun onCreateView (inflater: LayoutInflater , container: ViewGroup ?, savedInstanceState: Bundle ?): View ?","title":"On create view"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/on-create-view/#oncreateview","text":"[androidJvm]\\ open override fun onCreateView (inflater: LayoutInflater , container: ViewGroup ?, savedInstanceState: Bundle ?): View ?","title":"onCreateView"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/on-save-instance-state/","text":"// navigator / org.readium.r2.navigator.pdf / PdfNavigatorFragment / onSaveInstanceState onSaveInstanceState \u00b6 [androidJvm]\\ open override fun onSaveInstanceState (outState: Bundle )","title":"On save instance state"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/on-save-instance-state/#onsaveinstancestate","text":"[androidJvm]\\ open override fun onSaveInstanceState (outState: Bundle )","title":"onSaveInstanceState"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/pdf-view/","text":"// navigator / org.readium.r2.navigator.pdf / PdfNavigatorFragment / pdfView pdfView \u00b6 [androidJvm]\\ lateinit var pdfView : PDFView","title":"Pdf view"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/pdf-view/#pdfview","text":"[androidJvm]\\ lateinit var pdfView : PDFView","title":"pdfView"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/publication/","text":"// navigator / org.readium.r2.navigator.pdf / PdfNavigatorFragment / publication publication \u00b6 [androidJvm]\\ open override val publication : Publication Publication rendered by this navigator.","title":"Publication"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/publication/#publication","text":"[androidJvm]\\ open override val publication : Publication Publication rendered by this navigator.","title":"publication"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/reading-progression/","text":"// navigator / org.readium.r2.navigator.pdf / PdfNavigatorFragment / readingProgression readingProgression \u00b6 [androidJvm]\\ open override val readingProgression : ReadingProgression Current reading progression direction.","title":"Reading progression"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/reading-progression/#readingprogression","text":"[androidJvm]\\ open override val readingProgression : ReadingProgression Current reading progression direction.","title":"readingProgression"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/-companion/","text":"// navigator / org.readium.r2.navigator.pdf / PdfNavigatorFragment / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary createFactory [androidJvm] fun createFactory (publication: Publication , initialLocator: Locator ? = null, listener: PdfNavigatorFragment.Listener ? = null): FragmentFactory Creates a factory for a PdfNavigatorFragment .","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/-companion/#functions","text":"Name Summary createFactory [androidJvm] fun createFactory (publication: Publication , initialLocator: Locator ? = null, listener: PdfNavigatorFragment.Listener ? = null): FragmentFactory Creates a factory for a PdfNavigatorFragment .","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/-companion/create-factory/","text":"// navigator / org.readium.r2.navigator.pdf / PdfNavigatorFragment / Companion / createFactory createFactory \u00b6 [androidJvm]\\ fun createFactory (publication: Publication , initialLocator: Locator ? = null, listener: PdfNavigatorFragment.Listener ? = null): FragmentFactory Creates a factory for a PdfNavigatorFragment . Parameters \u00b6 androidJvm publication PDF publication to render in the navigator. initialLocator The first location which should be visible when rendering the PDF. Can be used to restore the last reading location. listener Optional listener to implement to observe events, such as user taps.","title":"Create factory"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/-companion/create-factory/#createfactory","text":"[androidJvm]\\ fun createFactory (publication: Publication , initialLocator: Locator ? = null, listener: PdfNavigatorFragment.Listener ? = null): FragmentFactory Creates a factory for a PdfNavigatorFragment .","title":"createFactory"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/-companion/create-factory/#parameters","text":"androidJvm publication PDF publication to render in the navigator. initialLocator The first location which should be visible when rendering the PDF. Can be used to restore the last reading location. listener Optional listener to implement to observe events, such as user taps.","title":"Parameters"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/-listener/","text":"// navigator / org.readium.r2.navigator.pdf / PdfNavigatorFragment / Listener Listener \u00b6 [androidJvm]\\ interface Listener : VisualNavigator.Listener Functions \u00b6 Name Summary onConfigurePdfView [androidJvm] open fun onConfigurePdfView (configurator: PDFView.Configurator) Called when configuring PDFView. onResourceLoadFailed [androidJvm] open fun onResourceLoadFailed (link: Link , error: Resource.Exception ) Called when a PDF resource failed to be loaded, for example because of an OutOfMemoryError . onTap [androidJvm] open fun onTap (point: PointF ): Boolean Called when the user tapped the content, but nothing handled the event internally (eg. by following an internal link). Inheritors \u00b6 Name R2PdfActivity","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/-listener/#listener","text":"[androidJvm]\\ interface Listener : VisualNavigator.Listener","title":"Listener"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/-listener/#functions","text":"Name Summary onConfigurePdfView [androidJvm] open fun onConfigurePdfView (configurator: PDFView.Configurator) Called when configuring PDFView. onResourceLoadFailed [androidJvm] open fun onResourceLoadFailed (link: Link , error: Resource.Exception ) Called when a PDF resource failed to be loaded, for example because of an OutOfMemoryError . onTap [androidJvm] open fun onTap (point: PointF ): Boolean Called when the user tapped the content, but nothing handled the event internally (eg. by following an internal link).","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/-listener/#inheritors","text":"Name R2PdfActivity","title":"Inheritors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/-listener/on-configure-pdf-view/","text":"// navigator / org.readium.r2.navigator.pdf / PdfNavigatorFragment / Listener / onConfigurePdfView onConfigurePdfView \u00b6 [androidJvm]\\ open fun onConfigurePdfView (configurator: PDFView.Configurator) Called when configuring PDFView.","title":"On configure pdf view"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/-listener/on-configure-pdf-view/#onconfigurepdfview","text":"[androidJvm]\\ open fun onConfigurePdfView (configurator: PDFView.Configurator) Called when configuring PDFView.","title":"onConfigurePdfView"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/-listener/on-resource-load-failed/","text":"// navigator / org.readium.r2.navigator.pdf / PdfNavigatorFragment / Listener / onResourceLoadFailed onResourceLoadFailed \u00b6 [androidJvm]\\ open fun onResourceLoadFailed (link: Link , error: Resource.Exception ) Called when a PDF resource failed to be loaded, for example because of an OutOfMemoryError .","title":"On resource load failed"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-pdf-navigator-fragment/-listener/on-resource-load-failed/#onresourceloadfailed","text":"[androidJvm]\\ open fun onResourceLoadFailed (link: Link , error: Resource.Exception ) Called when a PDF resource failed to be loaded, for example because of an OutOfMemoryError .","title":"onResourceLoadFailed"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-r2-pdf-activity/","text":"// navigator / org.readium.r2.navigator.pdf / R2PdfActivity R2PdfActivity \u00b6 [androidJvm]\\ abstract class R2PdfActivity : AppCompatActivity , PdfNavigatorFragment.Listener Functions \u00b6 Name Summary addContentView [androidJvm] open override fun addContentView (p0: View , p1: ViewGroup.LayoutParams ) addOnContextAvailableListener [androidJvm] override fun addOnContextAvailableListener (@ NonNull listener: OnContextAvailableListener ) applyOverrideConfiguration [androidJvm] open fun applyOverrideConfiguration (p0: Configuration ) attachBaseContext [androidJvm] open override fun attachBaseContext (p0: Context ) bindIsolatedService [androidJvm] open override fun bindIsolatedService (p0: Intent , p1: Int , p2: String , p3: Executor , p4: ServiceConnection ): Boolean bindService [androidJvm] open override fun bindService (p0: Intent , p1: ServiceConnection , p2: Int ): Boolean open override fun bindService (p0: Intent , p1: Int , p2: Executor , p3: ServiceConnection ): Boolean bindServiceAsUser [androidJvm] open override fun bindServiceAsUser (p0: Intent , p1: ServiceConnection , p2: Int , p3: UserHandle ): Boolean checkCallingOrSelfPermission [androidJvm] open override fun checkCallingOrSelfPermission (p0: String ): Int checkCallingOrSelfUriPermission [androidJvm] open override fun checkCallingOrSelfUriPermission (p0: Uri , p1: Int ): Int checkCallingOrSelfUriPermissions [androidJvm] open override fun checkCallingOrSelfUriPermissions (p0: MutableList < Uri >, p1: Int ): IntArray checkCallingPermission [androidJvm] open override fun checkCallingPermission (p0: String ): Int checkCallingUriPermission [androidJvm] open override fun checkCallingUriPermission (p0: Uri , p1: Int ): Int checkCallingUriPermissions [androidJvm] open override fun checkCallingUriPermissions (p0: MutableList < Uri >, p1: Int ): IntArray checkPermission [androidJvm] open override fun checkPermission (p0: String , p1: Int , p2: Int ): Int checkSelfPermission [androidJvm] open override fun checkSelfPermission (p0: String ): Int checkUriPermission [androidJvm] open override fun checkUriPermission (p0: Uri , p1: Int , p2: Int , p3: Int ): Int open override fun checkUriPermission (p0: Uri ?, p1: String ?, p2: String ?, p3: Int , p4: Int , p5: Int ): Int checkUriPermissions [androidJvm] open override fun checkUriPermissions (p0: MutableList < Uri >, p1: Int , p2: Int , p3: Int ): IntArray closeContextMenu [androidJvm] open fun closeContextMenu () closeOptionsMenu [androidJvm] open override fun closeOptionsMenu () createAttributionContext [androidJvm] open override fun createAttributionContext (p0: String ?): Context createConfigurationContext [androidJvm] open override fun createConfigurationContext (p0: Configuration ): Context createContext [androidJvm] open override fun createContext (p0: ContextParams ): Context createContextForSplit [androidJvm] open override fun createContextForSplit (p0: String ): Context createDeviceProtectedStorageContext [androidJvm] open override fun createDeviceProtectedStorageContext (): Context createDisplayContext [androidJvm] open override fun createDisplayContext (p0: Display ): Context createPackageContext [androidJvm] open override fun createPackageContext (p0: String , p1: Int ): Context createPendingResult [androidJvm] open fun createPendingResult (p0: Int , p1: Intent , p2: Int ): PendingIntent createWindowContext [androidJvm] open override fun createWindowContext (p0: Int , p1: Bundle ?): Context open override fun createWindowContext (p0: Display , p1: Int , p2: Bundle ?): Context databaseList [androidJvm] open override fun databaseList (): Array < String > deleteDatabase [androidJvm] open override fun deleteDatabase (p0: String ): Boolean deleteFile [androidJvm] open override fun deleteFile (p0: String ): Boolean deleteSharedPreferences [androidJvm] open override fun deleteSharedPreferences (p0: String ): Boolean dismissKeyboardShortcutsHelper [androidJvm] fun dismissKeyboardShortcutsHelper () dispatchFragmentsOnCreateView [androidJvm] @ Nullable fun dispatchFragmentsOnCreateView (@ Nullable p0: View ?, @ NonNull p1: String , @ NonNull p2: Context , @ NonNull p3: AttributeSet ): View ? dispatchGenericMotionEvent [androidJvm] open override fun dispatchGenericMotionEvent (p0: MotionEvent ): Boolean dispatchKeyEvent [androidJvm] open override fun dispatchKeyEvent (p0: KeyEvent ): Boolean dispatchKeyShortcutEvent [androidJvm] open override fun dispatchKeyShortcutEvent (event: KeyEvent ): Boolean dispatchPopulateAccessibilityEvent [androidJvm] open override fun dispatchPopulateAccessibilityEvent (p0: AccessibilityEvent ): Boolean dispatchTouchEvent [androidJvm] open override fun dispatchTouchEvent (p0: MotionEvent ): Boolean dispatchTrackballEvent [androidJvm] open override fun dispatchTrackballEvent (p0: MotionEvent ): Boolean dump [androidJvm] open override fun dump (@ NonNull p0: String , @ Nullable p1: FileDescriptor ?, @ NonNull p2: PrintWriter , @ Nullable p3: Array < String >?) enforceCallingOrSelfPermission [androidJvm] open override fun enforceCallingOrSelfPermission (p0: String , p1: String ?) enforceCallingOrSelfUriPermission [androidJvm] open override fun enforceCallingOrSelfUriPermission (p0: Uri , p1: Int , p2: String ) enforceCallingPermission [androidJvm] open override fun enforceCallingPermission (p0: String , p1: String ?) enforceCallingUriPermission [androidJvm] open override fun enforceCallingUriPermission (p0: Uri , p1: Int , p2: String ) enforcePermission [androidJvm] open override fun enforcePermission (p0: String , p1: Int , p2: Int , p3: String ?) enforceUriPermission [androidJvm] open override fun enforceUriPermission (p0: Uri , p1: Int , p2: Int , p3: Int , p4: String ) open override fun enforceUriPermission (p0: Uri ?, p1: String ?, p2: String ?, p3: Int , p4: Int , p5: Int , p6: String ?) ensureViewModelStore [androidJvm] open fun ensureViewModelStore () enterPictureInPictureMode [androidJvm] open fun enterPictureInPictureMode (p0: PictureInPictureParams ): Boolean fileList [androidJvm] open override fun fileList (): Array < String > findViewById [androidJvm] open override fun < T : View > findViewById (@ IdRes p0: Int ): T finish [androidJvm] open override fun finish () finishActivity [androidJvm] open fun finishActivity (p0: Int ) finishAffinity [androidJvm] open fun finishAffinity () finishAfterTransition [androidJvm] open fun finishAfterTransition () finishAndRemoveTask [androidJvm] open fun finishAndRemoveTask () getActionBar [androidJvm] open fun getActionBar (): ActionBar ? getActivityResultRegistry [androidJvm] @ NonNull override fun getActivityResultRegistry (): ActivityResultRegistry getApplication [androidJvm] fun getApplication (): Application getApplicationContext [androidJvm] open override fun getApplicationContext (): Context getApplicationInfo [androidJvm] open override fun getApplicationInfo (): ApplicationInfo getAssets [androidJvm] open override fun getAssets (): AssetManager getAttributionSource [androidJvm] open override fun getAttributionSource (): AttributionSource getAttributionTag [androidJvm] open override fun getAttributionTag (): String ? getBaseContext [androidJvm] open fun getBaseContext (): Context getCacheDir [androidJvm] open override fun getCacheDir (): File getCallingActivity [androidJvm] open fun getCallingActivity (): ComponentName ? getCallingPackage [androidJvm] open fun getCallingPackage (): String ? getChangingConfigurations [androidJvm] open fun getChangingConfigurations (): Int getClassLoader [androidJvm] open override fun getClassLoader (): ClassLoader getCodeCacheDir [androidJvm] open override fun getCodeCacheDir (): File getColor [androidJvm] fun getColor (p0: Int ): Int getColorStateList [androidJvm] fun getColorStateList (p0: Int ): ColorStateList getComponentName [androidJvm] open fun getComponentName (): ComponentName getContentResolver [androidJvm] open override fun getContentResolver (): ContentResolver getContentScene [androidJvm] open fun getContentScene (): Scene getContentTransitionManager [androidJvm] open fun getContentTransitionManager (): TransitionManager getCurrentFocus [androidJvm] open fun getCurrentFocus (): View ? getDatabasePath [androidJvm] open override fun getDatabasePath (p0: String ): File getDataDir [androidJvm] open override fun getDataDir (): File getDefaultViewModelProviderFactory [androidJvm] @ NonNull open override fun getDefaultViewModelProviderFactory (): ViewModelProvider.Factory getDelegate [androidJvm] @ NonNull open fun getDelegate (): AppCompatDelegate getDir [androidJvm] open override fun getDir (p0: String , p1: Int ): File getDisplay [androidJvm] open override fun getDisplay (): Display ? getDrawable [androidJvm] fun getDrawable (p0: Int ): Drawable ? getDrawerToggleDelegate [androidJvm] @ Nullable open override fun getDrawerToggleDelegate (): ActionBarDrawerToggle.Delegate ? getExternalCacheDir [androidJvm] open override fun getExternalCacheDir (): File ? getExternalCacheDirs [androidJvm] open override fun getExternalCacheDirs (): Array < File > getExternalFilesDir [androidJvm] open override fun getExternalFilesDir (p0: String ?): File ? getExternalFilesDirs [androidJvm] open override fun getExternalFilesDirs (p0: String ): Array < File > getExternalMediaDirs [androidJvm] open override fun getExternalMediaDirs (): Array < File > getFilesDir [androidJvm] open override fun getFilesDir (): File getFileStreamPath [androidJvm] open override fun getFileStreamPath (p0: String ): File getIntent [androidJvm] open fun getIntent (): Intent getLastNonConfigurationInstance [androidJvm] open fun getLastNonConfigurationInstance (): Any ? getLayoutInflater [androidJvm] open fun getLayoutInflater (): LayoutInflater getLifecycle [androidJvm] @ NonNull open override fun getLifecycle (): Lifecycle getLocalClassName [androidJvm] open fun getLocalClassName (): String getMainExecutor [androidJvm] open override fun getMainExecutor (): Executor getMainLooper [androidJvm] open override fun getMainLooper (): Looper getMaxNumPictureInPictureActions [androidJvm] open fun getMaxNumPictureInPictureActions (): Int getMediaController [androidJvm] fun getMediaController (): MediaController getMenuInflater [androidJvm] @ NonNull open override fun getMenuInflater (): MenuInflater getNoBackupFilesDir [androidJvm] open override fun getNoBackupFilesDir (): File getObbDir [androidJvm] open override fun getObbDir (): File getObbDirs [androidJvm] open override fun getObbDirs (): Array < File > getOnBackPressedDispatcher [androidJvm] @ NonNull override fun getOnBackPressedDispatcher (): OnBackPressedDispatcher getOpPackageName [androidJvm] open override fun getOpPackageName (): String getPackageCodePath [androidJvm] open override fun getPackageCodePath (): String getPackageManager [androidJvm] open override fun getPackageManager (): PackageManager getPackageName [androidJvm] open override fun getPackageName (): String getPackageResourcePath [androidJvm] open override fun getPackageResourcePath (): String getParams [androidJvm] open override fun getParams (): ContextParams ? getParent [androidJvm] fun getParent (): Activity getParentActivityIntent [androidJvm] open fun getParentActivityIntent (): Intent ? getPreferences [androidJvm] open fun getPreferences (p0: Int ): SharedPreferences getReferrer [androidJvm] open fun getReferrer (): Uri ? getRequestedOrientation [androidJvm] open fun getRequestedOrientation (): Int getResources [androidJvm] open override fun getResources (): Resources getSavedStateRegistry [androidJvm] @ NonNull override fun getSavedStateRegistry (): SavedStateRegistry getSearchEvent [androidJvm] fun getSearchEvent (): SearchEvent getSharedPreferences [androidJvm] open override fun getSharedPreferences (p0: String , p1: Int ): SharedPreferences getSplashScreen [androidJvm] fun getSplashScreen (): SplashScreen getString [androidJvm] fun getString (p0: Int ): String fun getString (p0: Int , vararg p1: Any ): String getSupportActionBar [androidJvm] @ Nullable open fun getSupportActionBar (): ActionBar ? getSupportFragmentManager [androidJvm] @ NonNull open fun getSupportFragmentManager (): FragmentManager getSupportParentActivityIntent [androidJvm] @ Nullable open override fun getSupportParentActivityIntent (): Intent ? getSystemService [androidJvm] open override fun getSystemService (p0: String ): Any fun < T : Any > getSystemService (p0: Class < T >): T getSystemServiceName [androidJvm] open override fun getSystemServiceName (p0: Class <*>): String ? getTaskId [androidJvm] open fun getTaskId (): Int getText [androidJvm] fun getText (p0: Int ): CharSequence getTheme [androidJvm] open override fun getTheme (): Resources.Theme getTitle [androidJvm] fun getTitle (): CharSequence getTitleColor [androidJvm] fun getTitleColor (): Int getViewModelStore [androidJvm] @ NonNull open override fun getViewModelStore (): ViewModelStore getVoiceInteractor [androidJvm] open fun getVoiceInteractor (): VoiceInteractor getVolumeControlStream [androidJvm] fun getVolumeControlStream (): Int getWindow [androidJvm] open fun getWindow (): Window getWindowManager [androidJvm] open fun getWindowManager (): WindowManager grantUriPermission [androidJvm] open override fun grantUriPermission (p0: String , p1: Uri , p2: Int ) hasWindowFocus [androidJvm] open fun hasWindowFocus (): Boolean invalidateOptionsMenu [androidJvm] open override fun invalidateOptionsMenu () isActivityTransitionRunning [androidJvm] open fun isActivityTransitionRunning (): Boolean isChangingConfigurations [androidJvm] open fun isChangingConfigurations (): Boolean isChild [androidJvm] fun isChild (): Boolean isDestroyed [androidJvm] open fun isDestroyed (): Boolean isDeviceProtectedStorage [androidJvm] open override fun isDeviceProtectedStorage (): Boolean isFinishing [androidJvm] open fun isFinishing (): Boolean isImmersive [androidJvm] open fun isImmersive (): Boolean isInMultiWindowMode [androidJvm] open fun isInMultiWindowMode (): Boolean isInPictureInPictureMode [androidJvm] open fun isInPictureInPictureMode (): Boolean isLaunchedFromBubble [androidJvm] open fun isLaunchedFromBubble (): Boolean isLocalVoiceInteractionSupported [androidJvm] open fun isLocalVoiceInteractionSupported (): Boolean isRestricted [androidJvm] open override fun isRestricted (): Boolean isTaskRoot [androidJvm] open fun isTaskRoot (): Boolean isUiContext [androidJvm] open override fun isUiContext (): Boolean isVoiceInteraction [androidJvm] open fun isVoiceInteraction (): Boolean isVoiceInteractionRoot [androidJvm] open fun isVoiceInteractionRoot (): Boolean markFragmentsCreated [androidJvm] open fun markFragmentsCreated () moveDatabaseFrom [androidJvm] open override fun moveDatabaseFrom (p0: Context , p1: String ): Boolean moveSharedPreferencesFrom [androidJvm] open override fun moveSharedPreferencesFrom (p0: Context , p1: String ): Boolean moveTaskToBack [androidJvm] open fun moveTaskToBack (p0: Boolean ): Boolean navigateUpTo [androidJvm] open fun navigateUpTo (p0: Intent ): Boolean obtainStyledAttributes [androidJvm] fun obtainStyledAttributes (p0: IntArray ): TypedArray fun obtainStyledAttributes (p0: AttributeSet ?, p1: IntArray ): TypedArray fun obtainStyledAttributes (p0: Int , p1: IntArray ): TypedArray fun obtainStyledAttributes (p0: AttributeSet ?, p1: IntArray , p2: Int , p3: Int ): TypedArray onActionModeFinished [androidJvm] open override fun onActionModeFinished (p0: ActionMode ) onActionModeStarted [androidJvm] open override fun onActionModeStarted (p0: ActionMode ) onActivityReenter [androidJvm] open fun onActivityReenter (p0: Int , p1: Intent ) onActivityResult [androidJvm] @ CallSuper open override fun onActivityResult (p0: Int , p1: Int , @ Nullable p2: Intent ?) onApplyThemeResource [androidJvm] open override fun onApplyThemeResource (p0: Resources.Theme , p1: Int , p2: Boolean ) onAttachedToWindow [androidJvm] open override fun onAttachedToWindow () onBackPressed [androidJvm] @ MainThread open override fun onBackPressed () onChildTitleChanged [androidJvm] open fun onChildTitleChanged (p0: Activity , p1: CharSequence ) onConfigurationChanged [androidJvm] open override fun onConfigurationChanged (@ NonNull p0: Configuration ) onConfigurePdfView [androidJvm] open fun onConfigurePdfView (configurator: PDFView.Configurator) Called when configuring PDFView. onContentChanged [androidJvm] open override fun onContentChanged () onContextItemSelected [androidJvm] open fun onContextItemSelected (p0: MenuItem ): Boolean onContextMenuClosed [androidJvm] open fun onContextMenuClosed (p0: Menu ) onCreate [androidJvm] open fun onCreate (p0: Bundle ?, p1: PersistableBundle ?) onCreateContextMenu [androidJvm] open override fun onCreateContextMenu (p0: ContextMenu , p1: View , p2: ContextMenu.ContextMenuInfo ) onCreateDescription [androidJvm] open fun onCreateDescription (): CharSequence ? onCreateNavigateUpTaskStack [androidJvm] open fun onCreateNavigateUpTaskStack (p0: TaskStackBuilder ) onCreateOptionsMenu [androidJvm] open fun onCreateOptionsMenu (p0: Menu ): Boolean onCreatePanelMenu [androidJvm] open override fun onCreatePanelMenu (p0: Int , @ NonNull p1: Menu ): Boolean onCreatePanelView [androidJvm] open override fun onCreatePanelView (p0: Int ): View ? onCreateSupportNavigateUpTaskStack [androidJvm] open fun onCreateSupportNavigateUpTaskStack (@ NonNull p0: TaskStackBuilder ) onCreateView [androidJvm] @ Nullable open override fun onCreateView (@ NonNull p0: String , @ NonNull p1: Context , @ NonNull p2: AttributeSet ): View ? @ Nullable open override fun onCreateView (@ Nullable p0: View ?, @ NonNull p1: String , @ NonNull p2: Context , @ NonNull p3: AttributeSet ): View ? onCurrentLocatorChanged [androidJvm] open fun onCurrentLocatorChanged (locator: Locator ) Override this event handler to save the current location in the publication in a database. onDestroy [androidJvm] open override fun onDestroy () onDetachedFromWindow [androidJvm] open override fun onDetachedFromWindow () onEnterAnimationComplete [androidJvm] open fun onEnterAnimationComplete () onGenericMotionEvent [androidJvm] open fun onGenericMotionEvent (p0: MotionEvent ): Boolean onGetDirectActions [androidJvm] open fun onGetDirectActions (p0: CancellationSignal , p1: Consumer < MutableList < DirectAction >>) onKeyDown [androidJvm] open override fun onKeyDown (p0: Int , p1: KeyEvent ): Boolean onKeyLongPress [androidJvm] open override fun onKeyLongPress (p0: Int , p1: KeyEvent ): Boolean onKeyMultiple [androidJvm] open override fun onKeyMultiple (p0: Int , p1: Int , p2: KeyEvent ): Boolean onKeyShortcut [androidJvm] open fun onKeyShortcut (p0: Int , p1: KeyEvent ): Boolean onKeyUp [androidJvm] open override fun onKeyUp (p0: Int , p1: KeyEvent ): Boolean onLocalVoiceInteractionStarted [androidJvm] open fun onLocalVoiceInteractionStarted () onLocalVoiceInteractionStopped [androidJvm] open fun onLocalVoiceInteractionStopped () onLowMemory [androidJvm] open override fun onLowMemory () onMenuItemSelected [androidJvm] override fun onMenuItemSelected (p0: Int , @ NonNull p1: MenuItem ): Boolean onMenuOpened [androidJvm] open override fun onMenuOpened (p0: Int , p1: Menu ): Boolean onMultiWindowModeChanged [androidJvm] @ CallSuper open override fun onMultiWindowModeChanged (p0: Boolean ) open fun onMultiWindowModeChanged (p0: Boolean , p1: Configuration ) onNavigateUp [androidJvm] open fun onNavigateUp (): Boolean onNewIntent [androidJvm] @ CallSuper open override fun onNewIntent (p0: Intent ) onNightModeChanged [androidJvm] open fun onNightModeChanged (p0: Int ) onOptionsItemSelected [androidJvm] open fun onOptionsItemSelected (p0: MenuItem ): Boolean onOptionsMenuClosed [androidJvm] open fun onOptionsMenuClosed (p0: Menu ) onPanelClosed [androidJvm] open override fun onPanelClosed (p0: Int , @ NonNull p1: Menu ) onPause [androidJvm] open override fun onPause () onPerformDirectAction [androidJvm] open fun onPerformDirectAction (p0: String , p1: Bundle , p2: CancellationSignal , p3: Consumer < Bundle >) onPictureInPictureModeChanged [androidJvm] @ CallSuper open override fun onPictureInPictureModeChanged (p0: Boolean ) open fun onPictureInPictureModeChanged (p0: Boolean , p1: Configuration ) onPictureInPictureRequested [androidJvm] open fun onPictureInPictureRequested (): Boolean onPictureInPictureUiStateChanged [androidJvm] open fun onPictureInPictureUiStateChanged (p0: PictureInPictureUiState ) onPointerCaptureChanged [androidJvm] open fun onPointerCaptureChanged (p0: Boolean ) onPostCreate [androidJvm] open override fun onPostCreate (@ Nullable p0: Bundle ?) open fun onPostCreate (p0: Bundle ?, p1: PersistableBundle ?) onPostResume [androidJvm] open override fun onPostResume () onPrepareNavigateUpTaskStack [androidJvm] open fun onPrepareNavigateUpTaskStack (p0: TaskStackBuilder ) onPrepareOptionsMenu [androidJvm] open fun onPrepareOptionsMenu (p0: Menu ): Boolean onPreparePanel [androidJvm] open override fun onPreparePanel (p0: Int , @ Nullable p1: View ?, @ NonNull p2: Menu ): Boolean onPrepareSupportNavigateUpTaskStack [androidJvm] open fun onPrepareSupportNavigateUpTaskStack (@ NonNull p0: TaskStackBuilder ) onProvideAssistContent [androidJvm] open fun onProvideAssistContent (p0: AssistContent ) onProvideAssistData [androidJvm] open fun onProvideAssistData (p0: Bundle ) onProvideKeyboardShortcuts [androidJvm] open override fun onProvideKeyboardShortcuts (p0: MutableList < KeyboardShortcutGroup >, p1: Menu ?, p2: Int ) onProvideReferrer [androidJvm] open fun onProvideReferrer (): Uri onRequestPermissionsResult [androidJvm] @ CallSuper open override fun onRequestPermissionsResult (p0: Int , @ NonNull p1: Array < String >, @ NonNull p2: IntArray ) onResourceLoadFailed [androidJvm] open fun onResourceLoadFailed (link: Link , error: Resource.Exception ) Called when a PDF resource failed to be loaded, for example because of an OutOfMemoryError . onRestart [androidJvm] open fun onRestart () onRestoreInstanceState [androidJvm] open fun onRestoreInstanceState (p0: Bundle ) open fun onRestoreInstanceState (p0: Bundle ?, p1: PersistableBundle ?) onResume [androidJvm] open override fun onResume () onResumeFragments [androidJvm] open fun onResumeFragments () onRetainNonConfigurationInstance [androidJvm] @ Nullable override fun onRetainNonConfigurationInstance (): Any ? onSaveInstanceState [androidJvm] @ CallSuper open override fun onSaveInstanceState (@ NonNull outState: Bundle ) open fun onSaveInstanceState (p0: Bundle , p1: PersistableBundle ) onSearchRequested [androidJvm] open override fun onSearchRequested (): Boolean open override fun onSearchRequested (p0: SearchEvent ?): Boolean onStart [androidJvm] open override fun onStart () onStateNotSaved [androidJvm] open override fun onStateNotSaved () onStop [androidJvm] open override fun onStop () onSupportActionModeFinished [androidJvm] @ CallSuper open override fun onSupportActionModeFinished (@ NonNull p0: ActionMode ) onSupportActionModeStarted [androidJvm] @ CallSuper open override fun onSupportActionModeStarted (@ NonNull p0: ActionMode ) onSupportNavigateUp [androidJvm] open fun onSupportNavigateUp (): Boolean onTap [androidJvm] open fun onTap (point: PointF ): Boolean Called when the user tapped the content, but nothing handled the event internally (eg. by following an internal link). onTitleChanged [androidJvm] open override fun onTitleChanged (p0: CharSequence , p1: Int ) onTopResumedActivityChanged [androidJvm] open fun onTopResumedActivityChanged (p0: Boolean ) onTouchEvent [androidJvm] open fun onTouchEvent (p0: MotionEvent ): Boolean onTrackballEvent [androidJvm] open fun onTrackballEvent (p0: MotionEvent ): Boolean onTrimMemory [androidJvm] open override fun onTrimMemory (p0: Int ) onUserInteraction [androidJvm] open fun onUserInteraction () onUserLeaveHint [androidJvm] open fun onUserLeaveHint () onWindowAttributesChanged [androidJvm] open override fun onWindowAttributesChanged (p0: WindowManager.LayoutParams ) onWindowFocusChanged [androidJvm] open override fun onWindowFocusChanged (p0: Boolean ) onWindowStartingActionMode [androidJvm] open override fun onWindowStartingActionMode (p0: ActionMode.Callback ): ActionMode ? open override fun onWindowStartingActionMode (p0: ActionMode.Callback , p1: Int ): ActionMode ? onWindowStartingSupportActionMode [androidJvm] @ Nullable open override fun onWindowStartingSupportActionMode (@ NonNull p0: ActionMode.Callback ): ActionMode ? openContextMenu [androidJvm] open fun openContextMenu (p0: View ) openFileInput [androidJvm] open override fun openFileInput (p0: String ): FileInputStream openFileOutput [androidJvm] open override fun openFileOutput (p0: String , p1: Int ): FileOutputStream openOptionsMenu [androidJvm] open override fun openOptionsMenu () openOrCreateDatabase [androidJvm] open override fun openOrCreateDatabase (p0: String , p1: Int , p2: SQLiteDatabase.CursorFactory ): SQLiteDatabase open override fun openOrCreateDatabase (p0: String , p1: Int , p2: SQLiteDatabase.CursorFactory , p3: DatabaseErrorHandler ?): SQLiteDatabase overridePendingTransition [androidJvm] open fun overridePendingTransition (p0: Int , p1: Int ) peekAvailableContext [androidJvm] @ Nullable open override fun peekAvailableContext (): Context ? postponeEnterTransition [androidJvm] open fun postponeEnterTransition () recreate [androidJvm] open fun recreate () registerActivityLifecycleCallbacks [androidJvm] open fun registerActivityLifecycleCallbacks (p0: Application.ActivityLifecycleCallbacks ) registerComponentCallbacks [androidJvm] open fun registerComponentCallbacks (p0: ComponentCallbacks ) registerForActivityResult [androidJvm] @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull contract: ActivityResultContract < I , O >, @ NonNull callback: ActivityResultCallback < O >): ActivityResultLauncher < I > @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull contract: ActivityResultContract < I , O >, @ NonNull registry: ActivityResultRegistry , @ NonNull callback: ActivityResultCallback < O >): ActivityResultLauncher < I > registerForContextMenu [androidJvm] open fun registerForContextMenu (p0: View ) registerReceiver [androidJvm] open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter ): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: Int ): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: String ?, p3: Handler ?): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: String ?, p3: Handler ?, p4: Int ): Intent ? releaseInstance [androidJvm] open fun releaseInstance (): Boolean removeOnContextAvailableListener [androidJvm] override fun removeOnContextAvailableListener (@ NonNull listener: OnContextAvailableListener ) reportFullyDrawn [androidJvm] open override fun reportFullyDrawn () requestDragAndDropPermissions [androidJvm] open fun requestDragAndDropPermissions (p0: DragEvent ): DragAndDropPermissions requestPermissions [androidJvm] fun requestPermissions (p0: Array < String >, p1: Int ) requestShowKeyboardShortcuts [androidJvm] fun requestShowKeyboardShortcuts () requestWindowFeature [androidJvm] fun requestWindowFeature (p0: Int ): Boolean requireViewById [androidJvm] fun < T : View > requireViewById (p0: Int ): T revokeUriPermission [androidJvm] open override fun revokeUriPermission (p0: Uri , p1: Int ) open override fun revokeUriPermission (p0: String , p1: Uri , p2: Int ) runOnUiThread [androidJvm] fun runOnUiThread (p0: Runnable ) sendBroadcast [androidJvm] open override fun sendBroadcast (p0: Intent ) open override fun sendBroadcast (p0: Intent , p1: String ?) sendBroadcastAsUser [androidJvm] open override fun sendBroadcastAsUser (p0: Intent , p1: UserHandle ) open override fun sendBroadcastAsUser (p0: Intent , p1: UserHandle , p2: String ?) sendBroadcastWithMultiplePermissions [androidJvm] open fun sendBroadcastWithMultiplePermissions (p0: Intent , p1: Array < String >) sendOrderedBroadcast [androidJvm] open override fun sendOrderedBroadcast (p0: Intent , p1: String ?) open override fun sendOrderedBroadcast (p0: Intent , p1: String ?, p2: BroadcastReceiver ?, p3: Handler ?, p4: Int , p5: String ?, p6: Bundle ?) open override fun sendOrderedBroadcast (p0: Intent , p1: String ?, p2: String ?, p3: BroadcastReceiver ?, p4: Handler ?, p5: Int , p6: String ?, p7: Bundle ?) open fun sendOrderedBroadcast (p0: Intent , p1: Int , p2: String ?, p3: String ?, p4: BroadcastReceiver ?, p5: Handler ?, p6: String ?, p7: Bundle ?, p8: Bundle ?) sendOrderedBroadcastAsUser [androidJvm] open override fun sendOrderedBroadcastAsUser (p0: Intent , p1: UserHandle , p2: String ?, p3: BroadcastReceiver ?, p4: Handler ?, p5: Int , p6: String ?, p7: Bundle ?) setActionBar [androidJvm] open fun setActionBar (p0: Toolbar ?) setContentTransitionManager [androidJvm] open fun setContentTransitionManager (p0: TransitionManager ) setContentView [androidJvm] open override fun setContentView (p0: View ) open override fun setContentView (@ LayoutRes p0: Int ) open override fun setContentView (p0: View , p1: ViewGroup.LayoutParams ) setDefaultKeyMode [androidJvm] fun setDefaultKeyMode (p0: Int ) setEnterSharedElementCallback [androidJvm] open fun setEnterSharedElementCallback (p0: SharedElementCallback ) open fun setEnterSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setExitSharedElementCallback [androidJvm] open fun setExitSharedElementCallback (p0: SharedElementCallback ) open fun setExitSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setFeatureDrawable [androidJvm] fun setFeatureDrawable (p0: Int , p1: Drawable ) setFeatureDrawableAlpha [androidJvm] fun setFeatureDrawableAlpha (p0: Int , p1: Int ) setFeatureDrawableResource [androidJvm] fun setFeatureDrawableResource (p0: Int , p1: Int ) setFeatureDrawableUri [androidJvm] fun setFeatureDrawableUri (p0: Int , p1: Uri ) setFinishOnTouchOutside [androidJvm] open fun setFinishOnTouchOutside (p0: Boolean ) setImmersive [androidJvm] open fun setImmersive (p0: Boolean ) setInheritShowWhenLocked [androidJvm] open fun setInheritShowWhenLocked (p0: Boolean ) setIntent [androidJvm] open fun setIntent (p0: Intent ) setLocusContext [androidJvm] open fun setLocusContext (p0: LocusId ?, p1: Bundle ?) setMediaController [androidJvm] fun setMediaController (p0: MediaController ) setPictureInPictureParams [androidJvm] open fun setPictureInPictureParams (p0: PictureInPictureParams ) setRequestedOrientation [androidJvm] open fun setRequestedOrientation (p0: Int ) setResult [androidJvm] fun setResult (p0: Int ) fun setResult (p0: Int , p1: Intent ) setShowWhenLocked [androidJvm] open fun setShowWhenLocked (p0: Boolean ) setSupportActionBar [androidJvm] open fun setSupportActionBar (@ Nullable p0: Toolbar ?) setTaskDescription [androidJvm] open fun setTaskDescription (p0: ActivityManager.TaskDescription ) setTheme [androidJvm] open fun setTheme (p0: Resources.Theme ?) open override fun setTheme (@ StyleRes p0: Int ) setTitle [androidJvm] open fun setTitle (p0: CharSequence ) open fun setTitle (p0: Int ) setTranslucent [androidJvm] open fun setTranslucent (p0: Boolean ): Boolean setTurnScreenOn [androidJvm] open fun setTurnScreenOn (p0: Boolean ) setVisible [androidJvm] open fun setVisible (p0: Boolean ) setVolumeControlStream [androidJvm] fun setVolumeControlStream (p0: Int ) setVrModeEnabled [androidJvm] open fun setVrModeEnabled (p0: Boolean , p1: ComponentName ) shouldShowRequestPermissionRationale [androidJvm] open fun shouldShowRequestPermissionRationale (p0: String ): Boolean shouldUpRecreateTask [androidJvm] open fun shouldUpRecreateTask (p0: Intent ): Boolean showAssist [androidJvm] open fun showAssist (p0: Bundle ): Boolean showLockTaskEscapeMessage [androidJvm] open fun showLockTaskEscapeMessage () startActionMode [androidJvm] open fun startActionMode (p0: ActionMode.Callback ): ActionMode ? open fun startActionMode (p0: ActionMode.Callback , p1: Int ): ActionMode ? startActivities [androidJvm] open override fun startActivities (p0: Array < Intent >) open override fun startActivities (p0: Array < Intent >, p1: Bundle ?) startActivity [androidJvm] open override fun startActivity (p0: Intent ) open override fun startActivity (p0: Intent , p1: Bundle ?) startActivityFromFragment [androidJvm] open fun startActivityFromFragment (@ NonNull p0: Fragment , p1: Intent , p2: Int ) open fun startActivityFromFragment (@ NonNull p0: Fragment , p1: Intent , p2: Int , @ Nullable p3: Bundle ?) startActivityIfNeeded [androidJvm] open fun startActivityIfNeeded (p0: Intent , p1: Int ): Boolean open fun startActivityIfNeeded (p0: Intent , p1: Int , p2: Bundle ?): Boolean startForegroundService [androidJvm] open override fun startForegroundService (p0: Intent ): ComponentName ? startInstrumentation [androidJvm] open override fun startInstrumentation (p0: ComponentName , p1: String ?, p2: Bundle ?): Boolean startIntentSender [androidJvm] open override fun startIntentSender (p0: IntentSender , p1: Intent ?, p2: Int , p3: Int , p4: Int ) open override fun startIntentSender (p0: IntentSender , p1: Intent ?, p2: Int , p3: Int , p4: Int , p5: Bundle ?) startLocalVoiceInteraction [androidJvm] open fun startLocalVoiceInteraction (p0: Bundle ) startLockTask [androidJvm] open fun startLockTask () startNextMatchingActivity [androidJvm] open fun startNextMatchingActivity (p0: Intent ): Boolean open fun startNextMatchingActivity (p0: Intent , p1: Bundle ?): Boolean startPostponedEnterTransition [androidJvm] open fun startPostponedEnterTransition () startSearch [androidJvm] open fun startSearch (p0: String ?, p1: Boolean , p2: Bundle ?, p3: Boolean ) startService [androidJvm] open override fun startService (p0: Intent ): ComponentName ? startSupportActionMode [androidJvm] @ Nullable open fun startSupportActionMode (@ NonNull p0: ActionMode.Callback ): ActionMode ? stopLocalVoiceInteraction [androidJvm] open fun stopLocalVoiceInteraction () stopLockTask [androidJvm] open fun stopLockTask () stopService [androidJvm] open override fun stopService (p0: Intent ): Boolean superDispatchKeyEvent [androidJvm] open override fun superDispatchKeyEvent (event: KeyEvent ): Boolean supportFinishAfterTransition [androidJvm] open fun supportFinishAfterTransition () supportInvalidateOptionsMenu [androidJvm] open override fun supportInvalidateOptionsMenu () supportNavigateUpTo [androidJvm] open fun supportNavigateUpTo (@ NonNull p0: Intent ) supportPostponeEnterTransition [androidJvm] open fun supportPostponeEnterTransition () supportRequestWindowFeature [androidJvm] open fun supportRequestWindowFeature (p0: Int ): Boolean supportShouldUpRecreateTask [androidJvm] open fun supportShouldUpRecreateTask (@ NonNull p0: Intent ): Boolean supportStartPostponedEnterTransition [androidJvm] open fun supportStartPostponedEnterTransition () takeKeyEvents [androidJvm] open fun takeKeyEvents (p0: Boolean ) triggerSearch [androidJvm] open fun triggerSearch (p0: String , p1: Bundle ?) unbindService [androidJvm] open override fun unbindService (p0: ServiceConnection ) unregisterActivityLifecycleCallbacks [androidJvm] open fun unregisterActivityLifecycleCallbacks (p0: Application.ActivityLifecycleCallbacks ) unregisterComponentCallbacks [androidJvm] open fun unregisterComponentCallbacks (p0: ComponentCallbacks ) unregisterForContextMenu [androidJvm] open fun unregisterForContextMenu (p0: View ) unregisterReceiver [androidJvm] open override fun unregisterReceiver (p0: BroadcastReceiver ) updateServiceGroup [androidJvm] open override fun updateServiceGroup (p0: ServiceConnection , p1: Int , p2: Int ) Properties \u00b6 Name Summary mContextAwareHelper [androidJvm] val mContextAwareHelper : ContextAwareHelper mCreated [androidJvm] val mCreated : Boolean mFragmentLifecycleRegistry [androidJvm] val mFragmentLifecycleRegistry : LifecycleRegistry mFragments [androidJvm] val mFragments : FragmentController mResumed [androidJvm] val mResumed : Boolean mSavedStateRegistryController [androidJvm] val mSavedStateRegistryController : SavedStateRegistryController mStopped [androidJvm] val mStopped : Boolean","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-r2-pdf-activity/#r2pdfactivity","text":"[androidJvm]\\ abstract class R2PdfActivity : AppCompatActivity , PdfNavigatorFragment.Listener","title":"R2PdfActivity"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-r2-pdf-activity/#functions","text":"Name Summary addContentView [androidJvm] open override fun addContentView (p0: View , p1: ViewGroup.LayoutParams ) addOnContextAvailableListener [androidJvm] override fun addOnContextAvailableListener (@ NonNull listener: OnContextAvailableListener ) applyOverrideConfiguration [androidJvm] open fun applyOverrideConfiguration (p0: Configuration ) attachBaseContext [androidJvm] open override fun attachBaseContext (p0: Context ) bindIsolatedService [androidJvm] open override fun bindIsolatedService (p0: Intent , p1: Int , p2: String , p3: Executor , p4: ServiceConnection ): Boolean bindService [androidJvm] open override fun bindService (p0: Intent , p1: ServiceConnection , p2: Int ): Boolean open override fun bindService (p0: Intent , p1: Int , p2: Executor , p3: ServiceConnection ): Boolean bindServiceAsUser [androidJvm] open override fun bindServiceAsUser (p0: Intent , p1: ServiceConnection , p2: Int , p3: UserHandle ): Boolean checkCallingOrSelfPermission [androidJvm] open override fun checkCallingOrSelfPermission (p0: String ): Int checkCallingOrSelfUriPermission [androidJvm] open override fun checkCallingOrSelfUriPermission (p0: Uri , p1: Int ): Int checkCallingOrSelfUriPermissions [androidJvm] open override fun checkCallingOrSelfUriPermissions (p0: MutableList < Uri >, p1: Int ): IntArray checkCallingPermission [androidJvm] open override fun checkCallingPermission (p0: String ): Int checkCallingUriPermission [androidJvm] open override fun checkCallingUriPermission (p0: Uri , p1: Int ): Int checkCallingUriPermissions [androidJvm] open override fun checkCallingUriPermissions (p0: MutableList < Uri >, p1: Int ): IntArray checkPermission [androidJvm] open override fun checkPermission (p0: String , p1: Int , p2: Int ): Int checkSelfPermission [androidJvm] open override fun checkSelfPermission (p0: String ): Int checkUriPermission [androidJvm] open override fun checkUriPermission (p0: Uri , p1: Int , p2: Int , p3: Int ): Int open override fun checkUriPermission (p0: Uri ?, p1: String ?, p2: String ?, p3: Int , p4: Int , p5: Int ): Int checkUriPermissions [androidJvm] open override fun checkUriPermissions (p0: MutableList < Uri >, p1: Int , p2: Int , p3: Int ): IntArray closeContextMenu [androidJvm] open fun closeContextMenu () closeOptionsMenu [androidJvm] open override fun closeOptionsMenu () createAttributionContext [androidJvm] open override fun createAttributionContext (p0: String ?): Context createConfigurationContext [androidJvm] open override fun createConfigurationContext (p0: Configuration ): Context createContext [androidJvm] open override fun createContext (p0: ContextParams ): Context createContextForSplit [androidJvm] open override fun createContextForSplit (p0: String ): Context createDeviceProtectedStorageContext [androidJvm] open override fun createDeviceProtectedStorageContext (): Context createDisplayContext [androidJvm] open override fun createDisplayContext (p0: Display ): Context createPackageContext [androidJvm] open override fun createPackageContext (p0: String , p1: Int ): Context createPendingResult [androidJvm] open fun createPendingResult (p0: Int , p1: Intent , p2: Int ): PendingIntent createWindowContext [androidJvm] open override fun createWindowContext (p0: Int , p1: Bundle ?): Context open override fun createWindowContext (p0: Display , p1: Int , p2: Bundle ?): Context databaseList [androidJvm] open override fun databaseList (): Array < String > deleteDatabase [androidJvm] open override fun deleteDatabase (p0: String ): Boolean deleteFile [androidJvm] open override fun deleteFile (p0: String ): Boolean deleteSharedPreferences [androidJvm] open override fun deleteSharedPreferences (p0: String ): Boolean dismissKeyboardShortcutsHelper [androidJvm] fun dismissKeyboardShortcutsHelper () dispatchFragmentsOnCreateView [androidJvm] @ Nullable fun dispatchFragmentsOnCreateView (@ Nullable p0: View ?, @ NonNull p1: String , @ NonNull p2: Context , @ NonNull p3: AttributeSet ): View ? dispatchGenericMotionEvent [androidJvm] open override fun dispatchGenericMotionEvent (p0: MotionEvent ): Boolean dispatchKeyEvent [androidJvm] open override fun dispatchKeyEvent (p0: KeyEvent ): Boolean dispatchKeyShortcutEvent [androidJvm] open override fun dispatchKeyShortcutEvent (event: KeyEvent ): Boolean dispatchPopulateAccessibilityEvent [androidJvm] open override fun dispatchPopulateAccessibilityEvent (p0: AccessibilityEvent ): Boolean dispatchTouchEvent [androidJvm] open override fun dispatchTouchEvent (p0: MotionEvent ): Boolean dispatchTrackballEvent [androidJvm] open override fun dispatchTrackballEvent (p0: MotionEvent ): Boolean dump [androidJvm] open override fun dump (@ NonNull p0: String , @ Nullable p1: FileDescriptor ?, @ NonNull p2: PrintWriter , @ Nullable p3: Array < String >?) enforceCallingOrSelfPermission [androidJvm] open override fun enforceCallingOrSelfPermission (p0: String , p1: String ?) enforceCallingOrSelfUriPermission [androidJvm] open override fun enforceCallingOrSelfUriPermission (p0: Uri , p1: Int , p2: String ) enforceCallingPermission [androidJvm] open override fun enforceCallingPermission (p0: String , p1: String ?) enforceCallingUriPermission [androidJvm] open override fun enforceCallingUriPermission (p0: Uri , p1: Int , p2: String ) enforcePermission [androidJvm] open override fun enforcePermission (p0: String , p1: Int , p2: Int , p3: String ?) enforceUriPermission [androidJvm] open override fun enforceUriPermission (p0: Uri , p1: Int , p2: Int , p3: Int , p4: String ) open override fun enforceUriPermission (p0: Uri ?, p1: String ?, p2: String ?, p3: Int , p4: Int , p5: Int , p6: String ?) ensureViewModelStore [androidJvm] open fun ensureViewModelStore () enterPictureInPictureMode [androidJvm] open fun enterPictureInPictureMode (p0: PictureInPictureParams ): Boolean fileList [androidJvm] open override fun fileList (): Array < String > findViewById [androidJvm] open override fun < T : View > findViewById (@ IdRes p0: Int ): T finish [androidJvm] open override fun finish () finishActivity [androidJvm] open fun finishActivity (p0: Int ) finishAffinity [androidJvm] open fun finishAffinity () finishAfterTransition [androidJvm] open fun finishAfterTransition () finishAndRemoveTask [androidJvm] open fun finishAndRemoveTask () getActionBar [androidJvm] open fun getActionBar (): ActionBar ? getActivityResultRegistry [androidJvm] @ NonNull override fun getActivityResultRegistry (): ActivityResultRegistry getApplication [androidJvm] fun getApplication (): Application getApplicationContext [androidJvm] open override fun getApplicationContext (): Context getApplicationInfo [androidJvm] open override fun getApplicationInfo (): ApplicationInfo getAssets [androidJvm] open override fun getAssets (): AssetManager getAttributionSource [androidJvm] open override fun getAttributionSource (): AttributionSource getAttributionTag [androidJvm] open override fun getAttributionTag (): String ? getBaseContext [androidJvm] open fun getBaseContext (): Context getCacheDir [androidJvm] open override fun getCacheDir (): File getCallingActivity [androidJvm] open fun getCallingActivity (): ComponentName ? getCallingPackage [androidJvm] open fun getCallingPackage (): String ? getChangingConfigurations [androidJvm] open fun getChangingConfigurations (): Int getClassLoader [androidJvm] open override fun getClassLoader (): ClassLoader getCodeCacheDir [androidJvm] open override fun getCodeCacheDir (): File getColor [androidJvm] fun getColor (p0: Int ): Int getColorStateList [androidJvm] fun getColorStateList (p0: Int ): ColorStateList getComponentName [androidJvm] open fun getComponentName (): ComponentName getContentResolver [androidJvm] open override fun getContentResolver (): ContentResolver getContentScene [androidJvm] open fun getContentScene (): Scene getContentTransitionManager [androidJvm] open fun getContentTransitionManager (): TransitionManager getCurrentFocus [androidJvm] open fun getCurrentFocus (): View ? getDatabasePath [androidJvm] open override fun getDatabasePath (p0: String ): File getDataDir [androidJvm] open override fun getDataDir (): File getDefaultViewModelProviderFactory [androidJvm] @ NonNull open override fun getDefaultViewModelProviderFactory (): ViewModelProvider.Factory getDelegate [androidJvm] @ NonNull open fun getDelegate (): AppCompatDelegate getDir [androidJvm] open override fun getDir (p0: String , p1: Int ): File getDisplay [androidJvm] open override fun getDisplay (): Display ? getDrawable [androidJvm] fun getDrawable (p0: Int ): Drawable ? getDrawerToggleDelegate [androidJvm] @ Nullable open override fun getDrawerToggleDelegate (): ActionBarDrawerToggle.Delegate ? getExternalCacheDir [androidJvm] open override fun getExternalCacheDir (): File ? getExternalCacheDirs [androidJvm] open override fun getExternalCacheDirs (): Array < File > getExternalFilesDir [androidJvm] open override fun getExternalFilesDir (p0: String ?): File ? getExternalFilesDirs [androidJvm] open override fun getExternalFilesDirs (p0: String ): Array < File > getExternalMediaDirs [androidJvm] open override fun getExternalMediaDirs (): Array < File > getFilesDir [androidJvm] open override fun getFilesDir (): File getFileStreamPath [androidJvm] open override fun getFileStreamPath (p0: String ): File getIntent [androidJvm] open fun getIntent (): Intent getLastNonConfigurationInstance [androidJvm] open fun getLastNonConfigurationInstance (): Any ? getLayoutInflater [androidJvm] open fun getLayoutInflater (): LayoutInflater getLifecycle [androidJvm] @ NonNull open override fun getLifecycle (): Lifecycle getLocalClassName [androidJvm] open fun getLocalClassName (): String getMainExecutor [androidJvm] open override fun getMainExecutor (): Executor getMainLooper [androidJvm] open override fun getMainLooper (): Looper getMaxNumPictureInPictureActions [androidJvm] open fun getMaxNumPictureInPictureActions (): Int getMediaController [androidJvm] fun getMediaController (): MediaController getMenuInflater [androidJvm] @ NonNull open override fun getMenuInflater (): MenuInflater getNoBackupFilesDir [androidJvm] open override fun getNoBackupFilesDir (): File getObbDir [androidJvm] open override fun getObbDir (): File getObbDirs [androidJvm] open override fun getObbDirs (): Array < File > getOnBackPressedDispatcher [androidJvm] @ NonNull override fun getOnBackPressedDispatcher (): OnBackPressedDispatcher getOpPackageName [androidJvm] open override fun getOpPackageName (): String getPackageCodePath [androidJvm] open override fun getPackageCodePath (): String getPackageManager [androidJvm] open override fun getPackageManager (): PackageManager getPackageName [androidJvm] open override fun getPackageName (): String getPackageResourcePath [androidJvm] open override fun getPackageResourcePath (): String getParams [androidJvm] open override fun getParams (): ContextParams ? getParent [androidJvm] fun getParent (): Activity getParentActivityIntent [androidJvm] open fun getParentActivityIntent (): Intent ? getPreferences [androidJvm] open fun getPreferences (p0: Int ): SharedPreferences getReferrer [androidJvm] open fun getReferrer (): Uri ? getRequestedOrientation [androidJvm] open fun getRequestedOrientation (): Int getResources [androidJvm] open override fun getResources (): Resources getSavedStateRegistry [androidJvm] @ NonNull override fun getSavedStateRegistry (): SavedStateRegistry getSearchEvent [androidJvm] fun getSearchEvent (): SearchEvent getSharedPreferences [androidJvm] open override fun getSharedPreferences (p0: String , p1: Int ): SharedPreferences getSplashScreen [androidJvm] fun getSplashScreen (): SplashScreen getString [androidJvm] fun getString (p0: Int ): String fun getString (p0: Int , vararg p1: Any ): String getSupportActionBar [androidJvm] @ Nullable open fun getSupportActionBar (): ActionBar ? getSupportFragmentManager [androidJvm] @ NonNull open fun getSupportFragmentManager (): FragmentManager getSupportParentActivityIntent [androidJvm] @ Nullable open override fun getSupportParentActivityIntent (): Intent ? getSystemService [androidJvm] open override fun getSystemService (p0: String ): Any fun < T : Any > getSystemService (p0: Class < T >): T getSystemServiceName [androidJvm] open override fun getSystemServiceName (p0: Class <*>): String ? getTaskId [androidJvm] open fun getTaskId (): Int getText [androidJvm] fun getText (p0: Int ): CharSequence getTheme [androidJvm] open override fun getTheme (): Resources.Theme getTitle [androidJvm] fun getTitle (): CharSequence getTitleColor [androidJvm] fun getTitleColor (): Int getViewModelStore [androidJvm] @ NonNull open override fun getViewModelStore (): ViewModelStore getVoiceInteractor [androidJvm] open fun getVoiceInteractor (): VoiceInteractor getVolumeControlStream [androidJvm] fun getVolumeControlStream (): Int getWindow [androidJvm] open fun getWindow (): Window getWindowManager [androidJvm] open fun getWindowManager (): WindowManager grantUriPermission [androidJvm] open override fun grantUriPermission (p0: String , p1: Uri , p2: Int ) hasWindowFocus [androidJvm] open fun hasWindowFocus (): Boolean invalidateOptionsMenu [androidJvm] open override fun invalidateOptionsMenu () isActivityTransitionRunning [androidJvm] open fun isActivityTransitionRunning (): Boolean isChangingConfigurations [androidJvm] open fun isChangingConfigurations (): Boolean isChild [androidJvm] fun isChild (): Boolean isDestroyed [androidJvm] open fun isDestroyed (): Boolean isDeviceProtectedStorage [androidJvm] open override fun isDeviceProtectedStorage (): Boolean isFinishing [androidJvm] open fun isFinishing (): Boolean isImmersive [androidJvm] open fun isImmersive (): Boolean isInMultiWindowMode [androidJvm] open fun isInMultiWindowMode (): Boolean isInPictureInPictureMode [androidJvm] open fun isInPictureInPictureMode (): Boolean isLaunchedFromBubble [androidJvm] open fun isLaunchedFromBubble (): Boolean isLocalVoiceInteractionSupported [androidJvm] open fun isLocalVoiceInteractionSupported (): Boolean isRestricted [androidJvm] open override fun isRestricted (): Boolean isTaskRoot [androidJvm] open fun isTaskRoot (): Boolean isUiContext [androidJvm] open override fun isUiContext (): Boolean isVoiceInteraction [androidJvm] open fun isVoiceInteraction (): Boolean isVoiceInteractionRoot [androidJvm] open fun isVoiceInteractionRoot (): Boolean markFragmentsCreated [androidJvm] open fun markFragmentsCreated () moveDatabaseFrom [androidJvm] open override fun moveDatabaseFrom (p0: Context , p1: String ): Boolean moveSharedPreferencesFrom [androidJvm] open override fun moveSharedPreferencesFrom (p0: Context , p1: String ): Boolean moveTaskToBack [androidJvm] open fun moveTaskToBack (p0: Boolean ): Boolean navigateUpTo [androidJvm] open fun navigateUpTo (p0: Intent ): Boolean obtainStyledAttributes [androidJvm] fun obtainStyledAttributes (p0: IntArray ): TypedArray fun obtainStyledAttributes (p0: AttributeSet ?, p1: IntArray ): TypedArray fun obtainStyledAttributes (p0: Int , p1: IntArray ): TypedArray fun obtainStyledAttributes (p0: AttributeSet ?, p1: IntArray , p2: Int , p3: Int ): TypedArray onActionModeFinished [androidJvm] open override fun onActionModeFinished (p0: ActionMode ) onActionModeStarted [androidJvm] open override fun onActionModeStarted (p0: ActionMode ) onActivityReenter [androidJvm] open fun onActivityReenter (p0: Int , p1: Intent ) onActivityResult [androidJvm] @ CallSuper open override fun onActivityResult (p0: Int , p1: Int , @ Nullable p2: Intent ?) onApplyThemeResource [androidJvm] open override fun onApplyThemeResource (p0: Resources.Theme , p1: Int , p2: Boolean ) onAttachedToWindow [androidJvm] open override fun onAttachedToWindow () onBackPressed [androidJvm] @ MainThread open override fun onBackPressed () onChildTitleChanged [androidJvm] open fun onChildTitleChanged (p0: Activity , p1: CharSequence ) onConfigurationChanged [androidJvm] open override fun onConfigurationChanged (@ NonNull p0: Configuration ) onConfigurePdfView [androidJvm] open fun onConfigurePdfView (configurator: PDFView.Configurator) Called when configuring PDFView. onContentChanged [androidJvm] open override fun onContentChanged () onContextItemSelected [androidJvm] open fun onContextItemSelected (p0: MenuItem ): Boolean onContextMenuClosed [androidJvm] open fun onContextMenuClosed (p0: Menu ) onCreate [androidJvm] open fun onCreate (p0: Bundle ?, p1: PersistableBundle ?) onCreateContextMenu [androidJvm] open override fun onCreateContextMenu (p0: ContextMenu , p1: View , p2: ContextMenu.ContextMenuInfo ) onCreateDescription [androidJvm] open fun onCreateDescription (): CharSequence ? onCreateNavigateUpTaskStack [androidJvm] open fun onCreateNavigateUpTaskStack (p0: TaskStackBuilder ) onCreateOptionsMenu [androidJvm] open fun onCreateOptionsMenu (p0: Menu ): Boolean onCreatePanelMenu [androidJvm] open override fun onCreatePanelMenu (p0: Int , @ NonNull p1: Menu ): Boolean onCreatePanelView [androidJvm] open override fun onCreatePanelView (p0: Int ): View ? onCreateSupportNavigateUpTaskStack [androidJvm] open fun onCreateSupportNavigateUpTaskStack (@ NonNull p0: TaskStackBuilder ) onCreateView [androidJvm] @ Nullable open override fun onCreateView (@ NonNull p0: String , @ NonNull p1: Context , @ NonNull p2: AttributeSet ): View ? @ Nullable open override fun onCreateView (@ Nullable p0: View ?, @ NonNull p1: String , @ NonNull p2: Context , @ NonNull p3: AttributeSet ): View ? onCurrentLocatorChanged [androidJvm] open fun onCurrentLocatorChanged (locator: Locator ) Override this event handler to save the current location in the publication in a database. onDestroy [androidJvm] open override fun onDestroy () onDetachedFromWindow [androidJvm] open override fun onDetachedFromWindow () onEnterAnimationComplete [androidJvm] open fun onEnterAnimationComplete () onGenericMotionEvent [androidJvm] open fun onGenericMotionEvent (p0: MotionEvent ): Boolean onGetDirectActions [androidJvm] open fun onGetDirectActions (p0: CancellationSignal , p1: Consumer < MutableList < DirectAction >>) onKeyDown [androidJvm] open override fun onKeyDown (p0: Int , p1: KeyEvent ): Boolean onKeyLongPress [androidJvm] open override fun onKeyLongPress (p0: Int , p1: KeyEvent ): Boolean onKeyMultiple [androidJvm] open override fun onKeyMultiple (p0: Int , p1: Int , p2: KeyEvent ): Boolean onKeyShortcut [androidJvm] open fun onKeyShortcut (p0: Int , p1: KeyEvent ): Boolean onKeyUp [androidJvm] open override fun onKeyUp (p0: Int , p1: KeyEvent ): Boolean onLocalVoiceInteractionStarted [androidJvm] open fun onLocalVoiceInteractionStarted () onLocalVoiceInteractionStopped [androidJvm] open fun onLocalVoiceInteractionStopped () onLowMemory [androidJvm] open override fun onLowMemory () onMenuItemSelected [androidJvm] override fun onMenuItemSelected (p0: Int , @ NonNull p1: MenuItem ): Boolean onMenuOpened [androidJvm] open override fun onMenuOpened (p0: Int , p1: Menu ): Boolean onMultiWindowModeChanged [androidJvm] @ CallSuper open override fun onMultiWindowModeChanged (p0: Boolean ) open fun onMultiWindowModeChanged (p0: Boolean , p1: Configuration ) onNavigateUp [androidJvm] open fun onNavigateUp (): Boolean onNewIntent [androidJvm] @ CallSuper open override fun onNewIntent (p0: Intent ) onNightModeChanged [androidJvm] open fun onNightModeChanged (p0: Int ) onOptionsItemSelected [androidJvm] open fun onOptionsItemSelected (p0: MenuItem ): Boolean onOptionsMenuClosed [androidJvm] open fun onOptionsMenuClosed (p0: Menu ) onPanelClosed [androidJvm] open override fun onPanelClosed (p0: Int , @ NonNull p1: Menu ) onPause [androidJvm] open override fun onPause () onPerformDirectAction [androidJvm] open fun onPerformDirectAction (p0: String , p1: Bundle , p2: CancellationSignal , p3: Consumer < Bundle >) onPictureInPictureModeChanged [androidJvm] @ CallSuper open override fun onPictureInPictureModeChanged (p0: Boolean ) open fun onPictureInPictureModeChanged (p0: Boolean , p1: Configuration ) onPictureInPictureRequested [androidJvm] open fun onPictureInPictureRequested (): Boolean onPictureInPictureUiStateChanged [androidJvm] open fun onPictureInPictureUiStateChanged (p0: PictureInPictureUiState ) onPointerCaptureChanged [androidJvm] open fun onPointerCaptureChanged (p0: Boolean ) onPostCreate [androidJvm] open override fun onPostCreate (@ Nullable p0: Bundle ?) open fun onPostCreate (p0: Bundle ?, p1: PersistableBundle ?) onPostResume [androidJvm] open override fun onPostResume () onPrepareNavigateUpTaskStack [androidJvm] open fun onPrepareNavigateUpTaskStack (p0: TaskStackBuilder ) onPrepareOptionsMenu [androidJvm] open fun onPrepareOptionsMenu (p0: Menu ): Boolean onPreparePanel [androidJvm] open override fun onPreparePanel (p0: Int , @ Nullable p1: View ?, @ NonNull p2: Menu ): Boolean onPrepareSupportNavigateUpTaskStack [androidJvm] open fun onPrepareSupportNavigateUpTaskStack (@ NonNull p0: TaskStackBuilder ) onProvideAssistContent [androidJvm] open fun onProvideAssistContent (p0: AssistContent ) onProvideAssistData [androidJvm] open fun onProvideAssistData (p0: Bundle ) onProvideKeyboardShortcuts [androidJvm] open override fun onProvideKeyboardShortcuts (p0: MutableList < KeyboardShortcutGroup >, p1: Menu ?, p2: Int ) onProvideReferrer [androidJvm] open fun onProvideReferrer (): Uri onRequestPermissionsResult [androidJvm] @ CallSuper open override fun onRequestPermissionsResult (p0: Int , @ NonNull p1: Array < String >, @ NonNull p2: IntArray ) onResourceLoadFailed [androidJvm] open fun onResourceLoadFailed (link: Link , error: Resource.Exception ) Called when a PDF resource failed to be loaded, for example because of an OutOfMemoryError . onRestart [androidJvm] open fun onRestart () onRestoreInstanceState [androidJvm] open fun onRestoreInstanceState (p0: Bundle ) open fun onRestoreInstanceState (p0: Bundle ?, p1: PersistableBundle ?) onResume [androidJvm] open override fun onResume () onResumeFragments [androidJvm] open fun onResumeFragments () onRetainNonConfigurationInstance [androidJvm] @ Nullable override fun onRetainNonConfigurationInstance (): Any ? onSaveInstanceState [androidJvm] @ CallSuper open override fun onSaveInstanceState (@ NonNull outState: Bundle ) open fun onSaveInstanceState (p0: Bundle , p1: PersistableBundle ) onSearchRequested [androidJvm] open override fun onSearchRequested (): Boolean open override fun onSearchRequested (p0: SearchEvent ?): Boolean onStart [androidJvm] open override fun onStart () onStateNotSaved [androidJvm] open override fun onStateNotSaved () onStop [androidJvm] open override fun onStop () onSupportActionModeFinished [androidJvm] @ CallSuper open override fun onSupportActionModeFinished (@ NonNull p0: ActionMode ) onSupportActionModeStarted [androidJvm] @ CallSuper open override fun onSupportActionModeStarted (@ NonNull p0: ActionMode ) onSupportNavigateUp [androidJvm] open fun onSupportNavigateUp (): Boolean onTap [androidJvm] open fun onTap (point: PointF ): Boolean Called when the user tapped the content, but nothing handled the event internally (eg. by following an internal link). onTitleChanged [androidJvm] open override fun onTitleChanged (p0: CharSequence , p1: Int ) onTopResumedActivityChanged [androidJvm] open fun onTopResumedActivityChanged (p0: Boolean ) onTouchEvent [androidJvm] open fun onTouchEvent (p0: MotionEvent ): Boolean onTrackballEvent [androidJvm] open fun onTrackballEvent (p0: MotionEvent ): Boolean onTrimMemory [androidJvm] open override fun onTrimMemory (p0: Int ) onUserInteraction [androidJvm] open fun onUserInteraction () onUserLeaveHint [androidJvm] open fun onUserLeaveHint () onWindowAttributesChanged [androidJvm] open override fun onWindowAttributesChanged (p0: WindowManager.LayoutParams ) onWindowFocusChanged [androidJvm] open override fun onWindowFocusChanged (p0: Boolean ) onWindowStartingActionMode [androidJvm] open override fun onWindowStartingActionMode (p0: ActionMode.Callback ): ActionMode ? open override fun onWindowStartingActionMode (p0: ActionMode.Callback , p1: Int ): ActionMode ? onWindowStartingSupportActionMode [androidJvm] @ Nullable open override fun onWindowStartingSupportActionMode (@ NonNull p0: ActionMode.Callback ): ActionMode ? openContextMenu [androidJvm] open fun openContextMenu (p0: View ) openFileInput [androidJvm] open override fun openFileInput (p0: String ): FileInputStream openFileOutput [androidJvm] open override fun openFileOutput (p0: String , p1: Int ): FileOutputStream openOptionsMenu [androidJvm] open override fun openOptionsMenu () openOrCreateDatabase [androidJvm] open override fun openOrCreateDatabase (p0: String , p1: Int , p2: SQLiteDatabase.CursorFactory ): SQLiteDatabase open override fun openOrCreateDatabase (p0: String , p1: Int , p2: SQLiteDatabase.CursorFactory , p3: DatabaseErrorHandler ?): SQLiteDatabase overridePendingTransition [androidJvm] open fun overridePendingTransition (p0: Int , p1: Int ) peekAvailableContext [androidJvm] @ Nullable open override fun peekAvailableContext (): Context ? postponeEnterTransition [androidJvm] open fun postponeEnterTransition () recreate [androidJvm] open fun recreate () registerActivityLifecycleCallbacks [androidJvm] open fun registerActivityLifecycleCallbacks (p0: Application.ActivityLifecycleCallbacks ) registerComponentCallbacks [androidJvm] open fun registerComponentCallbacks (p0: ComponentCallbacks ) registerForActivityResult [androidJvm] @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull contract: ActivityResultContract < I , O >, @ NonNull callback: ActivityResultCallback < O >): ActivityResultLauncher < I > @ NonNull override fun < I : Any , O : Any > registerForActivityResult (@ NonNull contract: ActivityResultContract < I , O >, @ NonNull registry: ActivityResultRegistry , @ NonNull callback: ActivityResultCallback < O >): ActivityResultLauncher < I > registerForContextMenu [androidJvm] open fun registerForContextMenu (p0: View ) registerReceiver [androidJvm] open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter ): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: Int ): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: String ?, p3: Handler ?): Intent ? open override fun registerReceiver (p0: BroadcastReceiver ?, p1: IntentFilter , p2: String ?, p3: Handler ?, p4: Int ): Intent ? releaseInstance [androidJvm] open fun releaseInstance (): Boolean removeOnContextAvailableListener [androidJvm] override fun removeOnContextAvailableListener (@ NonNull listener: OnContextAvailableListener ) reportFullyDrawn [androidJvm] open override fun reportFullyDrawn () requestDragAndDropPermissions [androidJvm] open fun requestDragAndDropPermissions (p0: DragEvent ): DragAndDropPermissions requestPermissions [androidJvm] fun requestPermissions (p0: Array < String >, p1: Int ) requestShowKeyboardShortcuts [androidJvm] fun requestShowKeyboardShortcuts () requestWindowFeature [androidJvm] fun requestWindowFeature (p0: Int ): Boolean requireViewById [androidJvm] fun < T : View > requireViewById (p0: Int ): T revokeUriPermission [androidJvm] open override fun revokeUriPermission (p0: Uri , p1: Int ) open override fun revokeUriPermission (p0: String , p1: Uri , p2: Int ) runOnUiThread [androidJvm] fun runOnUiThread (p0: Runnable ) sendBroadcast [androidJvm] open override fun sendBroadcast (p0: Intent ) open override fun sendBroadcast (p0: Intent , p1: String ?) sendBroadcastAsUser [androidJvm] open override fun sendBroadcastAsUser (p0: Intent , p1: UserHandle ) open override fun sendBroadcastAsUser (p0: Intent , p1: UserHandle , p2: String ?) sendBroadcastWithMultiplePermissions [androidJvm] open fun sendBroadcastWithMultiplePermissions (p0: Intent , p1: Array < String >) sendOrderedBroadcast [androidJvm] open override fun sendOrderedBroadcast (p0: Intent , p1: String ?) open override fun sendOrderedBroadcast (p0: Intent , p1: String ?, p2: BroadcastReceiver ?, p3: Handler ?, p4: Int , p5: String ?, p6: Bundle ?) open override fun sendOrderedBroadcast (p0: Intent , p1: String ?, p2: String ?, p3: BroadcastReceiver ?, p4: Handler ?, p5: Int , p6: String ?, p7: Bundle ?) open fun sendOrderedBroadcast (p0: Intent , p1: Int , p2: String ?, p3: String ?, p4: BroadcastReceiver ?, p5: Handler ?, p6: String ?, p7: Bundle ?, p8: Bundle ?) sendOrderedBroadcastAsUser [androidJvm] open override fun sendOrderedBroadcastAsUser (p0: Intent , p1: UserHandle , p2: String ?, p3: BroadcastReceiver ?, p4: Handler ?, p5: Int , p6: String ?, p7: Bundle ?) setActionBar [androidJvm] open fun setActionBar (p0: Toolbar ?) setContentTransitionManager [androidJvm] open fun setContentTransitionManager (p0: TransitionManager ) setContentView [androidJvm] open override fun setContentView (p0: View ) open override fun setContentView (@ LayoutRes p0: Int ) open override fun setContentView (p0: View , p1: ViewGroup.LayoutParams ) setDefaultKeyMode [androidJvm] fun setDefaultKeyMode (p0: Int ) setEnterSharedElementCallback [androidJvm] open fun setEnterSharedElementCallback (p0: SharedElementCallback ) open fun setEnterSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setExitSharedElementCallback [androidJvm] open fun setExitSharedElementCallback (p0: SharedElementCallback ) open fun setExitSharedElementCallback (@ Nullable p0: SharedElementCallback ?) setFeatureDrawable [androidJvm] fun setFeatureDrawable (p0: Int , p1: Drawable ) setFeatureDrawableAlpha [androidJvm] fun setFeatureDrawableAlpha (p0: Int , p1: Int ) setFeatureDrawableResource [androidJvm] fun setFeatureDrawableResource (p0: Int , p1: Int ) setFeatureDrawableUri [androidJvm] fun setFeatureDrawableUri (p0: Int , p1: Uri ) setFinishOnTouchOutside [androidJvm] open fun setFinishOnTouchOutside (p0: Boolean ) setImmersive [androidJvm] open fun setImmersive (p0: Boolean ) setInheritShowWhenLocked [androidJvm] open fun setInheritShowWhenLocked (p0: Boolean ) setIntent [androidJvm] open fun setIntent (p0: Intent ) setLocusContext [androidJvm] open fun setLocusContext (p0: LocusId ?, p1: Bundle ?) setMediaController [androidJvm] fun setMediaController (p0: MediaController ) setPictureInPictureParams [androidJvm] open fun setPictureInPictureParams (p0: PictureInPictureParams ) setRequestedOrientation [androidJvm] open fun setRequestedOrientation (p0: Int ) setResult [androidJvm] fun setResult (p0: Int ) fun setResult (p0: Int , p1: Intent ) setShowWhenLocked [androidJvm] open fun setShowWhenLocked (p0: Boolean ) setSupportActionBar [androidJvm] open fun setSupportActionBar (@ Nullable p0: Toolbar ?) setTaskDescription [androidJvm] open fun setTaskDescription (p0: ActivityManager.TaskDescription ) setTheme [androidJvm] open fun setTheme (p0: Resources.Theme ?) open override fun setTheme (@ StyleRes p0: Int ) setTitle [androidJvm] open fun setTitle (p0: CharSequence ) open fun setTitle (p0: Int ) setTranslucent [androidJvm] open fun setTranslucent (p0: Boolean ): Boolean setTurnScreenOn [androidJvm] open fun setTurnScreenOn (p0: Boolean ) setVisible [androidJvm] open fun setVisible (p0: Boolean ) setVolumeControlStream [androidJvm] fun setVolumeControlStream (p0: Int ) setVrModeEnabled [androidJvm] open fun setVrModeEnabled (p0: Boolean , p1: ComponentName ) shouldShowRequestPermissionRationale [androidJvm] open fun shouldShowRequestPermissionRationale (p0: String ): Boolean shouldUpRecreateTask [androidJvm] open fun shouldUpRecreateTask (p0: Intent ): Boolean showAssist [androidJvm] open fun showAssist (p0: Bundle ): Boolean showLockTaskEscapeMessage [androidJvm] open fun showLockTaskEscapeMessage () startActionMode [androidJvm] open fun startActionMode (p0: ActionMode.Callback ): ActionMode ? open fun startActionMode (p0: ActionMode.Callback , p1: Int ): ActionMode ? startActivities [androidJvm] open override fun startActivities (p0: Array < Intent >) open override fun startActivities (p0: Array < Intent >, p1: Bundle ?) startActivity [androidJvm] open override fun startActivity (p0: Intent ) open override fun startActivity (p0: Intent , p1: Bundle ?) startActivityFromFragment [androidJvm] open fun startActivityFromFragment (@ NonNull p0: Fragment , p1: Intent , p2: Int ) open fun startActivityFromFragment (@ NonNull p0: Fragment , p1: Intent , p2: Int , @ Nullable p3: Bundle ?) startActivityIfNeeded [androidJvm] open fun startActivityIfNeeded (p0: Intent , p1: Int ): Boolean open fun startActivityIfNeeded (p0: Intent , p1: Int , p2: Bundle ?): Boolean startForegroundService [androidJvm] open override fun startForegroundService (p0: Intent ): ComponentName ? startInstrumentation [androidJvm] open override fun startInstrumentation (p0: ComponentName , p1: String ?, p2: Bundle ?): Boolean startIntentSender [androidJvm] open override fun startIntentSender (p0: IntentSender , p1: Intent ?, p2: Int , p3: Int , p4: Int ) open override fun startIntentSender (p0: IntentSender , p1: Intent ?, p2: Int , p3: Int , p4: Int , p5: Bundle ?) startLocalVoiceInteraction [androidJvm] open fun startLocalVoiceInteraction (p0: Bundle ) startLockTask [androidJvm] open fun startLockTask () startNextMatchingActivity [androidJvm] open fun startNextMatchingActivity (p0: Intent ): Boolean open fun startNextMatchingActivity (p0: Intent , p1: Bundle ?): Boolean startPostponedEnterTransition [androidJvm] open fun startPostponedEnterTransition () startSearch [androidJvm] open fun startSearch (p0: String ?, p1: Boolean , p2: Bundle ?, p3: Boolean ) startService [androidJvm] open override fun startService (p0: Intent ): ComponentName ? startSupportActionMode [androidJvm] @ Nullable open fun startSupportActionMode (@ NonNull p0: ActionMode.Callback ): ActionMode ? stopLocalVoiceInteraction [androidJvm] open fun stopLocalVoiceInteraction () stopLockTask [androidJvm] open fun stopLockTask () stopService [androidJvm] open override fun stopService (p0: Intent ): Boolean superDispatchKeyEvent [androidJvm] open override fun superDispatchKeyEvent (event: KeyEvent ): Boolean supportFinishAfterTransition [androidJvm] open fun supportFinishAfterTransition () supportInvalidateOptionsMenu [androidJvm] open override fun supportInvalidateOptionsMenu () supportNavigateUpTo [androidJvm] open fun supportNavigateUpTo (@ NonNull p0: Intent ) supportPostponeEnterTransition [androidJvm] open fun supportPostponeEnterTransition () supportRequestWindowFeature [androidJvm] open fun supportRequestWindowFeature (p0: Int ): Boolean supportShouldUpRecreateTask [androidJvm] open fun supportShouldUpRecreateTask (@ NonNull p0: Intent ): Boolean supportStartPostponedEnterTransition [androidJvm] open fun supportStartPostponedEnterTransition () takeKeyEvents [androidJvm] open fun takeKeyEvents (p0: Boolean ) triggerSearch [androidJvm] open fun triggerSearch (p0: String , p1: Bundle ?) unbindService [androidJvm] open override fun unbindService (p0: ServiceConnection ) unregisterActivityLifecycleCallbacks [androidJvm] open fun unregisterActivityLifecycleCallbacks (p0: Application.ActivityLifecycleCallbacks ) unregisterComponentCallbacks [androidJvm] open fun unregisterComponentCallbacks (p0: ComponentCallbacks ) unregisterForContextMenu [androidJvm] open fun unregisterForContextMenu (p0: View ) unregisterReceiver [androidJvm] open override fun unregisterReceiver (p0: BroadcastReceiver ) updateServiceGroup [androidJvm] open override fun updateServiceGroup (p0: ServiceConnection , p1: Int , p2: Int )","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-r2-pdf-activity/#properties","text":"Name Summary mContextAwareHelper [androidJvm] val mContextAwareHelper : ContextAwareHelper mCreated [androidJvm] val mCreated : Boolean mFragmentLifecycleRegistry [androidJvm] val mFragmentLifecycleRegistry : LifecycleRegistry mFragments [androidJvm] val mFragments : FragmentController mResumed [androidJvm] val mResumed : Boolean mSavedStateRegistryController [androidJvm] val mSavedStateRegistryController : SavedStateRegistryController mStopped [androidJvm] val mStopped : Boolean","title":"Properties"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-r2-pdf-activity/-r2-pdf-activity/","text":"// navigator / org.readium.r2.navigator.pdf / R2PdfActivity / R2PdfActivity R2PdfActivity \u00b6 [androidJvm]\\ fun R2PdfActivity ()","title":" r2 pdf activity"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-r2-pdf-activity/-r2-pdf-activity/#r2pdfactivity","text":"[androidJvm]\\ fun R2PdfActivity ()","title":"R2PdfActivity"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-r2-pdf-activity/finish/","text":"// navigator / org.readium.r2.navigator.pdf / R2PdfActivity / finish finish \u00b6 [androidJvm]\\ open override fun finish ()","title":"Finish"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-r2-pdf-activity/finish/#finish","text":"[androidJvm]\\ open override fun finish ()","title":"finish"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-r2-pdf-activity/on-current-locator-changed/","text":"// navigator / org.readium.r2.navigator.pdf / R2PdfActivity / onCurrentLocatorChanged onCurrentLocatorChanged \u00b6 [androidJvm]\\ open fun onCurrentLocatorChanged (locator: Locator ) Override this event handler to save the current location in the publication in a database.","title":"On current locator changed"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.pdf/-r2-pdf-activity/on-current-locator-changed/#oncurrentlocatorchanged","text":"[androidJvm]\\ open fun onCurrentLocatorChanged (locator: Locator ) Override this event handler to save the current location in the publication in a database.","title":"onCurrentLocatorChanged"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.util/","text":"// navigator / org.readium.r2.navigator.util Package org.readium.r2.navigator.util \u00b6 Types \u00b6 Name Summary BaseActionModeCallback [androidJvm] abstract class BaseActionModeCallback : ActionMode.Callback A convenient base implementation of ActionMode.Callback , when you don't need to override all methods. CompositeFragmentFactory [androidJvm] class CompositeFragmentFactory (factories: List < FragmentFactory >) : FragmentFactory A FragmentFactory which will iterate over a provided list of factories until finding one instantiating successfully the requested Fragment .","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.util/#package-orgreadiumr2navigatorutil","text":"","title":"Package org.readium.r2.navigator.util"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.util/#types","text":"Name Summary BaseActionModeCallback [androidJvm] abstract class BaseActionModeCallback : ActionMode.Callback A convenient base implementation of ActionMode.Callback , when you don't need to override all methods. CompositeFragmentFactory [androidJvm] class CompositeFragmentFactory (factories: List < FragmentFactory >) : FragmentFactory A FragmentFactory which will iterate over a provided list of factories until finding one instantiating successfully the requested Fragment .","title":"Types"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.util/-base-action-mode-callback/","text":"// navigator / org.readium.r2.navigator.util / BaseActionModeCallback BaseActionModeCallback \u00b6 [androidJvm]\\ abstract class BaseActionModeCallback : ActionMode.Callback A convenient base implementation of ActionMode.Callback , when you don't need to override all methods. Constructors \u00b6 BaseActionModeCallback [androidJvm] fun BaseActionModeCallback () Functions \u00b6 Name Summary onActionItemClicked [androidJvm] open override fun onActionItemClicked (mode: ActionMode , item: MenuItem ): Boolean onCreateActionMode [androidJvm] abstract fun onCreateActionMode (p0: ActionMode , p1: Menu ): Boolean onDestroyActionMode [androidJvm] open override fun onDestroyActionMode (mode: ActionMode ) onPrepareActionMode [androidJvm] open override fun onPrepareActionMode (mode: ActionMode , menu: Menu ): Boolean","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.util/-base-action-mode-callback/#baseactionmodecallback","text":"[androidJvm]\\ abstract class BaseActionModeCallback : ActionMode.Callback A convenient base implementation of ActionMode.Callback , when you don't need to override all methods.","title":"BaseActionModeCallback"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.util/-base-action-mode-callback/#constructors","text":"BaseActionModeCallback [androidJvm] fun BaseActionModeCallback ()","title":"Constructors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.util/-base-action-mode-callback/#functions","text":"Name Summary onActionItemClicked [androidJvm] open override fun onActionItemClicked (mode: ActionMode , item: MenuItem ): Boolean onCreateActionMode [androidJvm] abstract fun onCreateActionMode (p0: ActionMode , p1: Menu ): Boolean onDestroyActionMode [androidJvm] open override fun onDestroyActionMode (mode: ActionMode ) onPrepareActionMode [androidJvm] open override fun onPrepareActionMode (mode: ActionMode , menu: Menu ): Boolean","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.util/-base-action-mode-callback/-base-action-mode-callback/","text":"// navigator / org.readium.r2.navigator.util / BaseActionModeCallback / BaseActionModeCallback BaseActionModeCallback \u00b6 [androidJvm]\\ fun BaseActionModeCallback ()","title":" base action mode callback"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.util/-base-action-mode-callback/-base-action-mode-callback/#baseactionmodecallback","text":"[androidJvm]\\ fun BaseActionModeCallback ()","title":"BaseActionModeCallback"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.util/-base-action-mode-callback/on-action-item-clicked/","text":"// navigator / org.readium.r2.navigator.util / BaseActionModeCallback / onActionItemClicked onActionItemClicked \u00b6 [androidJvm]\\ open override fun onActionItemClicked (mode: ActionMode , item: MenuItem ): Boolean","title":"On action item clicked"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.util/-base-action-mode-callback/on-action-item-clicked/#onactionitemclicked","text":"[androidJvm]\\ open override fun onActionItemClicked (mode: ActionMode , item: MenuItem ): Boolean","title":"onActionItemClicked"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.util/-base-action-mode-callback/on-destroy-action-mode/","text":"// navigator / org.readium.r2.navigator.util / BaseActionModeCallback / onDestroyActionMode onDestroyActionMode \u00b6 [androidJvm]\\ open override fun onDestroyActionMode (mode: ActionMode )","title":"On destroy action mode"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.util/-base-action-mode-callback/on-destroy-action-mode/#ondestroyactionmode","text":"[androidJvm]\\ open override fun onDestroyActionMode (mode: ActionMode )","title":"onDestroyActionMode"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.util/-base-action-mode-callback/on-prepare-action-mode/","text":"// navigator / org.readium.r2.navigator.util / BaseActionModeCallback / onPrepareActionMode onPrepareActionMode \u00b6 [androidJvm]\\ open override fun onPrepareActionMode (mode: ActionMode , menu: Menu ): Boolean","title":"On prepare action mode"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.util/-base-action-mode-callback/on-prepare-action-mode/#onprepareactionmode","text":"[androidJvm]\\ open override fun onPrepareActionMode (mode: ActionMode , menu: Menu ): Boolean","title":"onPrepareActionMode"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.util/-composite-fragment-factory/","text":"// navigator / org.readium.r2.navigator.util / CompositeFragmentFactory CompositeFragmentFactory \u00b6 [androidJvm]\\ class CompositeFragmentFactory (factories: List < FragmentFactory >) : FragmentFactory A FragmentFactory which will iterate over a provided list of factories until finding one instantiating successfully the requested Fragment . supportFragmentManager.fragmentFactory = CompositeFragmentFactory(\\ EpubNavigatorFragment.createFactory(publication, baseUrl, initialLocator, this),\\ PdfNavigatorFragment.createFactory(publication, initialLocator, this)\\ ) Constructors \u00b6 CompositeFragmentFactory [androidJvm] fun CompositeFragmentFactory (vararg factories: FragmentFactory ) CompositeFragmentFactory [androidJvm] fun CompositeFragmentFactory (factories: List < FragmentFactory >) Functions \u00b6 Name Summary instantiate [androidJvm] open override fun instantiate (classLoader: ClassLoader , className: String ): Fragment","title":"Index"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.util/-composite-fragment-factory/#compositefragmentfactory","text":"[androidJvm]\\ class CompositeFragmentFactory (factories: List < FragmentFactory >) : FragmentFactory A FragmentFactory which will iterate over a provided list of factories until finding one instantiating successfully the requested Fragment . supportFragmentManager.fragmentFactory = CompositeFragmentFactory(\\ EpubNavigatorFragment.createFactory(publication, baseUrl, initialLocator, this),\\ PdfNavigatorFragment.createFactory(publication, initialLocator, this)\\ )","title":"CompositeFragmentFactory"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.util/-composite-fragment-factory/#constructors","text":"CompositeFragmentFactory [androidJvm] fun CompositeFragmentFactory (vararg factories: FragmentFactory ) CompositeFragmentFactory [androidJvm] fun CompositeFragmentFactory (factories: List < FragmentFactory >)","title":"Constructors"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.util/-composite-fragment-factory/#functions","text":"Name Summary instantiate [androidJvm] open override fun instantiate (classLoader: ClassLoader , className: String ): Fragment","title":"Functions"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.util/-composite-fragment-factory/-composite-fragment-factory/","text":"// navigator / org.readium.r2.navigator.util / CompositeFragmentFactory / CompositeFragmentFactory CompositeFragmentFactory \u00b6 [androidJvm]\\ fun CompositeFragmentFactory (vararg factories: FragmentFactory ) fun CompositeFragmentFactory (factories: List < FragmentFactory >)","title":" composite fragment factory"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.util/-composite-fragment-factory/-composite-fragment-factory/#compositefragmentfactory","text":"[androidJvm]\\ fun CompositeFragmentFactory (vararg factories: FragmentFactory ) fun CompositeFragmentFactory (factories: List < FragmentFactory >)","title":"CompositeFragmentFactory"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.util/-composite-fragment-factory/instantiate/","text":"// navigator / org.readium.r2.navigator.util / CompositeFragmentFactory / instantiate instantiate \u00b6 [androidJvm]\\ open override fun instantiate (classLoader: ClassLoader , className: String ): Fragment","title":"Instantiate"},{"location":"readium/navigator/navigator/org.readium.r2.navigator.util/-composite-fragment-factory/instantiate/#instantiate","text":"[androidJvm]\\ open override fun instantiate (classLoader: ClassLoader , className: String ): Fragment","title":"instantiate"},{"location":"readium/opds/","text":"// opds opds \u00b6 Packages \u00b6 Name org.readium.r2.opds","title":"OPDS"},{"location":"readium/opds/#opds","text":"","title":"opds"},{"location":"readium/opds/#packages","text":"Name org.readium.r2.opds","title":"Packages"},{"location":"readium/opds/opds/org.readium.r2.opds/","text":"// opds / org.readium.r2.opds Package org.readium.r2.opds \u00b6 Types \u00b6 Name Summary MimeTypeParameters [androidJvm] data class MimeTypeParameters (type: String , parameters: MutableMap < String , String >) Namespaces [androidJvm] object Namespaces OPDS1Parser [androidJvm] class OPDS1Parser OPDS2Parser [androidJvm] class OPDS2Parser OPDS2ParserError [androidJvm] enum OPDS2ParserError : Enum < OPDS2ParserError > OPDSParserError [androidJvm] enum OPDSParserError : Enum < OPDSParserError >","title":"Index"},{"location":"readium/opds/opds/org.readium.r2.opds/#package-orgreadiumr2opds","text":"","title":"Package org.readium.r2.opds"},{"location":"readium/opds/opds/org.readium.r2.opds/#types","text":"Name Summary MimeTypeParameters [androidJvm] data class MimeTypeParameters (type: String , parameters: MutableMap < String , String >) Namespaces [androidJvm] object Namespaces OPDS1Parser [androidJvm] class OPDS1Parser OPDS2Parser [androidJvm] class OPDS2Parser OPDS2ParserError [androidJvm] enum OPDS2ParserError : Enum < OPDS2ParserError > OPDSParserError [androidJvm] enum OPDSParserError : Enum < OPDSParserError >","title":"Types"},{"location":"readium/opds/opds/org.readium.r2.opds/-mime-type-parameters/","text":"// opds / org.readium.r2.opds / MimeTypeParameters MimeTypeParameters \u00b6 [androidJvm]\\ data class MimeTypeParameters (type: String , parameters: MutableMap < String , String >) Properties \u00b6 Name Summary parameters [androidJvm] var parameters : MutableMap < String , String > type [androidJvm] var type : String","title":"Index"},{"location":"readium/opds/opds/org.readium.r2.opds/-mime-type-parameters/#mimetypeparameters","text":"[androidJvm]\\ data class MimeTypeParameters (type: String , parameters: MutableMap < String , String >)","title":"MimeTypeParameters"},{"location":"readium/opds/opds/org.readium.r2.opds/-mime-type-parameters/#properties","text":"Name Summary parameters [androidJvm] var parameters : MutableMap < String , String > type [androidJvm] var type : String","title":"Properties"},{"location":"readium/opds/opds/org.readium.r2.opds/-mime-type-parameters/-mime-type-parameters/","text":"// opds / org.readium.r2.opds / MimeTypeParameters / MimeTypeParameters MimeTypeParameters \u00b6 [androidJvm]\\ fun MimeTypeParameters (type: String , parameters: MutableMap < String , String > = mutableMapOf())","title":" mime type parameters"},{"location":"readium/opds/opds/org.readium.r2.opds/-mime-type-parameters/-mime-type-parameters/#mimetypeparameters","text":"[androidJvm]\\ fun MimeTypeParameters (type: String , parameters: MutableMap < String , String > = mutableMapOf())","title":"MimeTypeParameters"},{"location":"readium/opds/opds/org.readium.r2.opds/-mime-type-parameters/parameters/","text":"// opds / org.readium.r2.opds / MimeTypeParameters / parameters parameters \u00b6 [androidJvm]\\ var parameters : MutableMap < String , String >","title":"Parameters"},{"location":"readium/opds/opds/org.readium.r2.opds/-mime-type-parameters/parameters/#parameters","text":"[androidJvm]\\ var parameters : MutableMap < String , String >","title":"parameters"},{"location":"readium/opds/opds/org.readium.r2.opds/-mime-type-parameters/type/","text":"// opds / org.readium.r2.opds / MimeTypeParameters / type type \u00b6 [androidJvm]\\ var type : String","title":"Type"},{"location":"readium/opds/opds/org.readium.r2.opds/-mime-type-parameters/type/#type","text":"[androidJvm]\\ var type : String","title":"type"},{"location":"readium/opds/opds/org.readium.r2.opds/-namespaces/","text":"// opds / org.readium.r2.opds / Namespaces Namespaces \u00b6 [androidJvm]\\ object Namespaces Properties \u00b6 Name Summary Atom [androidJvm] const val Atom : String Dc [androidJvm] const val Dc : String Dcterms [androidJvm] const val Dcterms : String Opds [androidJvm] const val Opds : String Search [androidJvm] const val Search : String Thread [androidJvm] const val Thread : String","title":"Index"},{"location":"readium/opds/opds/org.readium.r2.opds/-namespaces/#namespaces","text":"[androidJvm]\\ object Namespaces","title":"Namespaces"},{"location":"readium/opds/opds/org.readium.r2.opds/-namespaces/#properties","text":"Name Summary Atom [androidJvm] const val Atom : String Dc [androidJvm] const val Dc : String Dcterms [androidJvm] const val Dcterms : String Opds [androidJvm] const val Opds : String Search [androidJvm] const val Search : String Thread [androidJvm] const val Thread : String","title":"Properties"},{"location":"readium/opds/opds/org.readium.r2.opds/-namespaces/-atom/","text":"// opds / org.readium.r2.opds / Namespaces / Atom Atom \u00b6 [androidJvm]\\ const val Atom : String","title":" atom"},{"location":"readium/opds/opds/org.readium.r2.opds/-namespaces/-atom/#atom","text":"[androidJvm]\\ const val Atom : String","title":"Atom"},{"location":"readium/opds/opds/org.readium.r2.opds/-namespaces/-dc/","text":"// opds / org.readium.r2.opds / Namespaces / Dc Dc \u00b6 [androidJvm]\\ const val Dc : String","title":" dc"},{"location":"readium/opds/opds/org.readium.r2.opds/-namespaces/-dc/#dc","text":"[androidJvm]\\ const val Dc : String","title":"Dc"},{"location":"readium/opds/opds/org.readium.r2.opds/-namespaces/-dcterms/","text":"// opds / org.readium.r2.opds / Namespaces / Dcterms Dcterms \u00b6 [androidJvm]\\ const val Dcterms : String","title":" dcterms"},{"location":"readium/opds/opds/org.readium.r2.opds/-namespaces/-dcterms/#dcterms","text":"[androidJvm]\\ const val Dcterms : String","title":"Dcterms"},{"location":"readium/opds/opds/org.readium.r2.opds/-namespaces/-opds/","text":"// opds / org.readium.r2.opds / Namespaces / Opds Opds \u00b6 [androidJvm]\\ const val Opds : String","title":" opds"},{"location":"readium/opds/opds/org.readium.r2.opds/-namespaces/-opds/#opds","text":"[androidJvm]\\ const val Opds : String","title":"Opds"},{"location":"readium/opds/opds/org.readium.r2.opds/-namespaces/-search/","text":"// opds / org.readium.r2.opds / Namespaces / Search Search \u00b6 [androidJvm]\\ const val Search : String","title":" search"},{"location":"readium/opds/opds/org.readium.r2.opds/-namespaces/-search/#search","text":"[androidJvm]\\ const val Search : String","title":"Search"},{"location":"readium/opds/opds/org.readium.r2.opds/-namespaces/-thread/","text":"// opds / org.readium.r2.opds / Namespaces / Thread Thread \u00b6 [androidJvm]\\ const val Thread : String","title":" thread"},{"location":"readium/opds/opds/org.readium.r2.opds/-namespaces/-thread/#thread","text":"[androidJvm]\\ const val Thread : String","title":"Thread"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s-parser-error/","text":"// opds / org.readium.r2.opds / OPDSParserError OPDSParserError \u00b6 [androidJvm]\\ enum OPDSParserError : Enum < OPDSParserError > Entries \u00b6 MissingTitle [androidJvm] MissingTitle () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s-parser-error/#opdsparsererror","text":"[androidJvm]\\ enum OPDSParserError : Enum < OPDSParserError >","title":"OPDSParserError"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s-parser-error/#entries","text":"MissingTitle [androidJvm] MissingTitle ()","title":"Entries"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s-parser-error/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s-parser-error/-missing-title/","text":"// opds / org.readium.r2.opds / OPDSParserError / MissingTitle MissingTitle \u00b6 [androidJvm]\\ MissingTitle () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s-parser-error/-missing-title/#missingtitle","text":"[androidJvm]\\ MissingTitle ()","title":"MissingTitle"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s-parser-error/-missing-title/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s1-parser/","text":"// opds / org.readium.r2.opds / OPDS1Parser OPDS1Parser \u00b6 [androidJvm]\\ class OPDS1Parser Types \u00b6 Name Summary Companion [androidJvm] object Companion","title":"Index"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s1-parser/#opds1parser","text":"[androidJvm]\\ class OPDS1Parser","title":"OPDS1Parser"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s1-parser/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s1-parser/-o-p-d-s1-parser/","text":"// opds / org.readium.r2.opds / OPDS1Parser / OPDS1Parser OPDS1Parser \u00b6 [androidJvm]\\ fun OPDS1Parser ()","title":" o p d s1 parser"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s1-parser/-o-p-d-s1-parser/#opds1parser","text":"[androidJvm]\\ fun OPDS1Parser ()","title":"OPDS1Parser"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s1-parser/-companion/","text":"// opds / org.readium.r2.opds / OPDS1Parser / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary parse [androidJvm] fun parse (xmlData: ByteArray , url: URL ): ParseData parseRequest [androidJvm] suspend fun parseRequest (request: HttpRequest , client: HttpClient = DefaultHttpClient()): Try < ParseData , Exception > parseUrlString [androidJvm] suspend fun parseUrlString (url: String , client: HttpClient = DefaultHttpClient()): Try < ParseData , Exception > retrieveOpenSearchTemplate [androidJvm] suspend fun retrieveOpenSearchTemplate (feed: Feed ): Try < String ?, Exception >","title":"Index"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s1-parser/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s1-parser/-companion/#functions","text":"Name Summary parse [androidJvm] fun parse (xmlData: ByteArray , url: URL ): ParseData parseRequest [androidJvm] suspend fun parseRequest (request: HttpRequest , client: HttpClient = DefaultHttpClient()): Try < ParseData , Exception > parseUrlString [androidJvm] suspend fun parseUrlString (url: String , client: HttpClient = DefaultHttpClient()): Try < ParseData , Exception > retrieveOpenSearchTemplate [androidJvm] suspend fun retrieveOpenSearchTemplate (feed: Feed ): Try < String ?, Exception >","title":"Functions"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s1-parser/-companion/parse-request/","text":"// opds / org.readium.r2.opds / OPDS1Parser / Companion / parseRequest parseRequest \u00b6 [androidJvm]\\ suspend fun parseRequest (request: HttpRequest , client: HttpClient = DefaultHttpClient()): Try < ParseData , Exception >","title":"Parse request"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s1-parser/-companion/parse-request/#parserequest","text":"[androidJvm]\\ suspend fun parseRequest (request: HttpRequest , client: HttpClient = DefaultHttpClient()): Try < ParseData , Exception >","title":"parseRequest"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s1-parser/-companion/parse-url-string/","text":"// opds / org.readium.r2.opds / OPDS1Parser / Companion / parseUrlString parseUrlString \u00b6 [androidJvm]\\ suspend fun parseUrlString (url: String , client: HttpClient = DefaultHttpClient()): Try < ParseData , Exception >","title":"Parse url string"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s1-parser/-companion/parse-url-string/#parseurlstring","text":"[androidJvm]\\ suspend fun parseUrlString (url: String , client: HttpClient = DefaultHttpClient()): Try < ParseData , Exception >","title":"parseUrlString"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s1-parser/-companion/parse/","text":"// opds / org.readium.r2.opds / OPDS1Parser / Companion / parse parse \u00b6 [androidJvm]\\ fun parse (xmlData: ByteArray , url: URL ): ParseData","title":"Parse"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s1-parser/-companion/parse/#parse","text":"[androidJvm]\\ fun parse (xmlData: ByteArray , url: URL ): ParseData","title":"parse"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s1-parser/-companion/retrieve-open-search-template/","text":"// opds / org.readium.r2.opds / OPDS1Parser / Companion / retrieveOpenSearchTemplate retrieveOpenSearchTemplate \u00b6 [androidJvm]\\ suspend fun retrieveOpenSearchTemplate (feed: Feed ): Try < String ?, Exception >","title":"Retrieve open search template"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s1-parser/-companion/retrieve-open-search-template/#retrieveopensearchtemplate","text":"[androidJvm]\\ suspend fun retrieveOpenSearchTemplate (feed: Feed ): Try < String ?, Exception >","title":"retrieveOpenSearchTemplate"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser/","text":"// opds / org.readium.r2.opds / OPDS2Parser OPDS2Parser \u00b6 [androidJvm]\\ class OPDS2Parser Types \u00b6 Name Summary Companion [androidJvm] object Companion","title":"Index"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser/#opds2parser","text":"[androidJvm]\\ class OPDS2Parser","title":"OPDS2Parser"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser/-o-p-d-s2-parser/","text":"// opds / org.readium.r2.opds / OPDS2Parser / OPDS2Parser OPDS2Parser \u00b6 [androidJvm]\\ fun OPDS2Parser ()","title":" o p d s2 parser"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser/-o-p-d-s2-parser/#opds2parser","text":"[androidJvm]\\ fun OPDS2Parser ()","title":"OPDS2Parser"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser/-companion/","text":"// opds / org.readium.r2.opds / OPDS2Parser / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary parse [androidJvm] fun parse (jsonData: ByteArray , url: URL ): ParseData parseRequest [androidJvm] suspend fun parseRequest (request: HttpRequest , client: HttpClient = DefaultHttpClient()): Try < ParseData , Exception > parseUrlString [androidJvm] suspend fun parseUrlString (url: String , client: HttpClient = DefaultHttpClient()): Try < ParseData , Exception >","title":"Index"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser/-companion/#functions","text":"Name Summary parse [androidJvm] fun parse (jsonData: ByteArray , url: URL ): ParseData parseRequest [androidJvm] suspend fun parseRequest (request: HttpRequest , client: HttpClient = DefaultHttpClient()): Try < ParseData , Exception > parseUrlString [androidJvm] suspend fun parseUrlString (url: String , client: HttpClient = DefaultHttpClient()): Try < ParseData , Exception >","title":"Functions"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser/-companion/parse-request/","text":"// opds / org.readium.r2.opds / OPDS2Parser / Companion / parseRequest parseRequest \u00b6 [androidJvm]\\ suspend fun parseRequest (request: HttpRequest , client: HttpClient = DefaultHttpClient()): Try < ParseData , Exception >","title":"Parse request"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser/-companion/parse-request/#parserequest","text":"[androidJvm]\\ suspend fun parseRequest (request: HttpRequest , client: HttpClient = DefaultHttpClient()): Try < ParseData , Exception >","title":"parseRequest"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser/-companion/parse-url-string/","text":"// opds / org.readium.r2.opds / OPDS2Parser / Companion / parseUrlString parseUrlString \u00b6 [androidJvm]\\ suspend fun parseUrlString (url: String , client: HttpClient = DefaultHttpClient()): Try < ParseData , Exception >","title":"Parse url string"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser/-companion/parse-url-string/#parseurlstring","text":"[androidJvm]\\ suspend fun parseUrlString (url: String , client: HttpClient = DefaultHttpClient()): Try < ParseData , Exception >","title":"parseUrlString"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser/-companion/parse/","text":"// opds / org.readium.r2.opds / OPDS2Parser / Companion / parse parse \u00b6 [androidJvm]\\ fun parse (jsonData: ByteArray , url: URL ): ParseData","title":"Parse"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser/-companion/parse/#parse","text":"[androidJvm]\\ fun parse (jsonData: ByteArray , url: URL ): ParseData","title":"parse"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser-error/","text":"// opds / org.readium.r2.opds / OPDS2ParserError OPDS2ParserError \u00b6 [androidJvm]\\ enum OPDS2ParserError : Enum < OPDS2ParserError > Entries \u00b6 InvalidGroup [androidJvm] InvalidGroup () InvalidFacet [androidJvm] InvalidFacet () MissingTitle [androidJvm] MissingTitle () InvalidLink [androidJvm] InvalidLink () MetadataNotFound [androidJvm] MetadataNotFound () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser-error/#opds2parsererror","text":"[androidJvm]\\ enum OPDS2ParserError : Enum < OPDS2ParserError >","title":"OPDS2ParserError"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser-error/#entries","text":"InvalidGroup [androidJvm] InvalidGroup () InvalidFacet [androidJvm] InvalidFacet () MissingTitle [androidJvm] MissingTitle () InvalidLink [androidJvm] InvalidLink () MetadataNotFound [androidJvm] MetadataNotFound ()","title":"Entries"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser-error/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser-error/-invalid-facet/","text":"// opds / org.readium.r2.opds / OPDS2ParserError / InvalidFacet InvalidFacet \u00b6 [androidJvm]\\ InvalidFacet () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser-error/-invalid-facet/#invalidfacet","text":"[androidJvm]\\ InvalidFacet ()","title":"InvalidFacet"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser-error/-invalid-facet/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser-error/-invalid-group/","text":"// opds / org.readium.r2.opds / OPDS2ParserError / InvalidGroup InvalidGroup \u00b6 [androidJvm]\\ InvalidGroup () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser-error/-invalid-group/#invalidgroup","text":"[androidJvm]\\ InvalidGroup ()","title":"InvalidGroup"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser-error/-invalid-group/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser-error/-invalid-link/","text":"// opds / org.readium.r2.opds / OPDS2ParserError / InvalidLink InvalidLink \u00b6 [androidJvm]\\ InvalidLink () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser-error/-invalid-link/#invalidlink","text":"[androidJvm]\\ InvalidLink ()","title":"InvalidLink"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser-error/-invalid-link/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser-error/-metadata-not-found/","text":"// opds / org.readium.r2.opds / OPDS2ParserError / MetadataNotFound MetadataNotFound \u00b6 [androidJvm]\\ MetadataNotFound () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser-error/-metadata-not-found/#metadatanotfound","text":"[androidJvm]\\ MetadataNotFound ()","title":"MetadataNotFound"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser-error/-metadata-not-found/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser-error/-missing-title/","text":"// opds / org.readium.r2.opds / OPDS2ParserError / MissingTitle MissingTitle \u00b6 [androidJvm]\\ MissingTitle () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser-error/-missing-title/#missingtitle","text":"[androidJvm]\\ MissingTitle ()","title":"MissingTitle"},{"location":"readium/opds/opds/org.readium.r2.opds/-o-p-d-s2-parser-error/-missing-title/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/shared/","text":"// shared shared \u00b6 Packages \u00b6 Name org.readium.r2.shared org.readium.r2.shared.drm org.readium.r2.shared.extensions org.readium.r2.shared.fetcher org.readium.r2.shared.format org.readium.r2.shared.opds org.readium.r2.shared.parser.xml org.readium.r2.shared.publication org.readium.r2.shared.publication.archive org.readium.r2.shared.publication.asset org.readium.r2.shared.publication.encryption org.readium.r2.shared.publication.epub org.readium.r2.shared.publication.html org.readium.r2.shared.publication.opds org.readium.r2.shared.publication.presentation org.readium.r2.shared.publication.services org.readium.r2.shared.publication.services.search org.readium.r2.shared.util org.readium.r2.shared.util.archive org.readium.r2.shared.util.http org.readium.r2.shared.util.io org.readium.r2.shared.util.logging org.readium.r2.shared.util.mediatype org.readium.r2.shared.util.pdf","title":"Shared"},{"location":"readium/shared/#shared","text":"","title":"shared"},{"location":"readium/shared/#packages","text":"Name org.readium.r2.shared org.readium.r2.shared.drm org.readium.r2.shared.extensions org.readium.r2.shared.fetcher org.readium.r2.shared.format org.readium.r2.shared.opds org.readium.r2.shared.parser.xml org.readium.r2.shared.publication org.readium.r2.shared.publication.archive org.readium.r2.shared.publication.asset org.readium.r2.shared.publication.encryption org.readium.r2.shared.publication.epub org.readium.r2.shared.publication.html org.readium.r2.shared.publication.opds org.readium.r2.shared.publication.presentation org.readium.r2.shared.publication.services org.readium.r2.shared.publication.services.search org.readium.r2.shared.util org.readium.r2.shared.util.archive org.readium.r2.shared.util.http org.readium.r2.shared.util.io org.readium.r2.shared.util.logging org.readium.r2.shared.util.mediatype org.readium.r2.shared.util.pdf","title":"Packages"},{"location":"readium/shared/shared/org.readium.r2.shared.format/","text":"// shared / org.readium.r2.shared.format Package org.readium.r2.shared.format \u00b6","title":"Org.readium.r2.shared.format"},{"location":"readium/shared/shared/org.readium.r2.shared.format/#package-orgreadiumr2sharedformat","text":"","title":"Package org.readium.r2.shared.format"},{"location":"readium/shared/shared/org.readium.r2.shared/","text":"// shared / org.readium.r2.shared Package org.readium.r2.shared \u00b6 Types \u00b6 Name Summary Clip [androidJvm] data class Clip (audioResource: String ?, fragmentId: String ?, start: Double ?, end: Double ?) Enumerable [androidJvm] class Enumerable (index: Int , values: List < String >, ref: String , name: String ) : UserProperty Incremental [androidJvm] class Incremental (value: Float , min: Float , max: Float , step: Float , suffix: String , ref: String , name: String ) : UserProperty Injectable [androidJvm] enum Injectable : Enum < Injectable > , Serializable JSONable [androidJvm] interface JSONable MediaOverlayNode [androidJvm] data class MediaOverlayNode (text: String , audio: String ?, children: List < MediaOverlayNode >, role: List < String >) : Serializable MediaOverlays [androidJvm] data class MediaOverlays (nodes: List < MediaOverlayNode >) : Serializable PdfSupport [androidJvm] @ Target (allowedTargets = [ AnnotationTarget.CLASS , AnnotationTarget.FUNCTION , AnnotationTarget.TYPEALIAS , AnnotationTarget.PROPERTY ]) annotation class PdfSupport ReadiumCSSName [androidJvm] enum ReadiumCSSName : Enum < ReadiumCSSName > RootFile [androidJvm] class RootFile Search [androidJvm] @ Target (allowedTargets = [ AnnotationTarget.CLASS , AnnotationTarget.FUNCTION , AnnotationTarget.TYPEALIAS , AnnotationTarget.PROPERTY ]) annotation class Search Switchable [androidJvm] class Switchable (onValue: String , offValue: String , on: Boolean , ref: String , name: String ) : UserProperty UserException [androidJvm] open class UserException : Exception An exception that can be presented to the user using a localized message. UserProperties [androidJvm] class UserProperties : Serializable UserProperty [androidJvm] sealed class UserProperty Functions \u00b6 Name Summary promise [androidJvm] fun Request. promise (): Promise< Triple <Request, Response, ByteArray >, Exception > toJSON [androidJvm] fun List < JSONable >. toJSON (): JSONArray Serializes a list of JSONable into a JSONArray . Properties \u00b6 Name Summary APPEARANCE_NAME [androidJvm] const val APPEARANCE_NAME : String APPEARANCE_REF [androidJvm] const val APPEARANCE_REF : String COLUMN_COUNT_NAME [androidJvm] const val COLUMN_COUNT_NAME : String COLUMN_COUNT_REF [androidJvm] const val COLUMN_COUNT_REF : String FONT_FAMILY_NAME [androidJvm] const val FONT_FAMILY_NAME : String FONT_FAMILY_REF [androidJvm] const val FONT_FAMILY_REF : String FONT_OVERRIDE_NAME [androidJvm] const val FONT_OVERRIDE_NAME : String FONT_OVERRIDE_REF [androidJvm] const val FONT_OVERRIDE_REF : String FONT_SIZE_NAME [androidJvm] const val FONT_SIZE_NAME : String FONT_SIZE_REF [androidJvm] const val FONT_SIZE_REF : String LETTER_SPACING_NAME [androidJvm] const val LETTER_SPACING_NAME : String LETTER_SPACING_REF [androidJvm] const val LETTER_SPACING_REF : String LINE_HEIGHT_NAME [androidJvm] const val LINE_HEIGHT_NAME : String LINE_HEIGHT_REF [androidJvm] const val LINE_HEIGHT_REF : String PAGE_MARGINS_NAME [androidJvm] const val PAGE_MARGINS_NAME : String PAGE_MARGINS_REF [androidJvm] const val PAGE_MARGINS_REF : String PUBLISHER_DEFAULT_NAME [androidJvm] const val PUBLISHER_DEFAULT_NAME : String PUBLISHER_DEFAULT_REF [androidJvm] const val PUBLISHER_DEFAULT_REF : String SCROLL_NAME [androidJvm] const val SCROLL_NAME : String SCROLL_REF [androidJvm] const val SCROLL_REF : String TEXT_ALIGNMENT_NAME [androidJvm] const val TEXT_ALIGNMENT_NAME : String TEXT_ALIGNMENT_REF [androidJvm] const val TEXT_ALIGNMENT_REF : String WORD_SPACING_NAME [androidJvm] const val WORD_SPACING_NAME : String WORD_SPACING_REF [androidJvm] const val WORD_SPACING_REF : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/#package-orgreadiumr2shared","text":"","title":"Package org.readium.r2.shared"},{"location":"readium/shared/shared/org.readium.r2.shared/#types","text":"Name Summary Clip [androidJvm] data class Clip (audioResource: String ?, fragmentId: String ?, start: Double ?, end: Double ?) Enumerable [androidJvm] class Enumerable (index: Int , values: List < String >, ref: String , name: String ) : UserProperty Incremental [androidJvm] class Incremental (value: Float , min: Float , max: Float , step: Float , suffix: String , ref: String , name: String ) : UserProperty Injectable [androidJvm] enum Injectable : Enum < Injectable > , Serializable JSONable [androidJvm] interface JSONable MediaOverlayNode [androidJvm] data class MediaOverlayNode (text: String , audio: String ?, children: List < MediaOverlayNode >, role: List < String >) : Serializable MediaOverlays [androidJvm] data class MediaOverlays (nodes: List < MediaOverlayNode >) : Serializable PdfSupport [androidJvm] @ Target (allowedTargets = [ AnnotationTarget.CLASS , AnnotationTarget.FUNCTION , AnnotationTarget.TYPEALIAS , AnnotationTarget.PROPERTY ]) annotation class PdfSupport ReadiumCSSName [androidJvm] enum ReadiumCSSName : Enum < ReadiumCSSName > RootFile [androidJvm] class RootFile Search [androidJvm] @ Target (allowedTargets = [ AnnotationTarget.CLASS , AnnotationTarget.FUNCTION , AnnotationTarget.TYPEALIAS , AnnotationTarget.PROPERTY ]) annotation class Search Switchable [androidJvm] class Switchable (onValue: String , offValue: String , on: Boolean , ref: String , name: String ) : UserProperty UserException [androidJvm] open class UserException : Exception An exception that can be presented to the user using a localized message. UserProperties [androidJvm] class UserProperties : Serializable UserProperty [androidJvm] sealed class UserProperty","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared/#functions","text":"Name Summary promise [androidJvm] fun Request. promise (): Promise< Triple <Request, Response, ByteArray >, Exception > toJSON [androidJvm] fun List < JSONable >. toJSON (): JSONArray Serializes a list of JSONable into a JSONArray .","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared/#properties","text":"Name Summary APPEARANCE_NAME [androidJvm] const val APPEARANCE_NAME : String APPEARANCE_REF [androidJvm] const val APPEARANCE_REF : String COLUMN_COUNT_NAME [androidJvm] const val COLUMN_COUNT_NAME : String COLUMN_COUNT_REF [androidJvm] const val COLUMN_COUNT_REF : String FONT_FAMILY_NAME [androidJvm] const val FONT_FAMILY_NAME : String FONT_FAMILY_REF [androidJvm] const val FONT_FAMILY_REF : String FONT_OVERRIDE_NAME [androidJvm] const val FONT_OVERRIDE_NAME : String FONT_OVERRIDE_REF [androidJvm] const val FONT_OVERRIDE_REF : String FONT_SIZE_NAME [androidJvm] const val FONT_SIZE_NAME : String FONT_SIZE_REF [androidJvm] const val FONT_SIZE_REF : String LETTER_SPACING_NAME [androidJvm] const val LETTER_SPACING_NAME : String LETTER_SPACING_REF [androidJvm] const val LETTER_SPACING_REF : String LINE_HEIGHT_NAME [androidJvm] const val LINE_HEIGHT_NAME : String LINE_HEIGHT_REF [androidJvm] const val LINE_HEIGHT_REF : String PAGE_MARGINS_NAME [androidJvm] const val PAGE_MARGINS_NAME : String PAGE_MARGINS_REF [androidJvm] const val PAGE_MARGINS_REF : String PUBLISHER_DEFAULT_NAME [androidJvm] const val PUBLISHER_DEFAULT_NAME : String PUBLISHER_DEFAULT_REF [androidJvm] const val PUBLISHER_DEFAULT_REF : String SCROLL_NAME [androidJvm] const val SCROLL_NAME : String SCROLL_REF [androidJvm] const val SCROLL_REF : String TEXT_ALIGNMENT_NAME [androidJvm] const val TEXT_ALIGNMENT_NAME : String TEXT_ALIGNMENT_REF [androidJvm] const val TEXT_ALIGNMENT_REF : String WORD_SPACING_NAME [androidJvm] const val WORD_SPACING_NAME : String WORD_SPACING_REF [androidJvm] const val WORD_SPACING_REF : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-a-p-p-e-a-r-a-n-c-e_-n-a-m-e/","text":"// shared / org.readium.r2.shared / APPEARANCE_NAME APPEARANCE_NAME \u00b6 [androidJvm]\\ const val APPEARANCE_NAME : String","title":" a p p e a r a n c e  n a m e"},{"location":"readium/shared/shared/org.readium.r2.shared/-a-p-p-e-a-r-a-n-c-e_-n-a-m-e/#appearance_name","text":"[androidJvm]\\ const val APPEARANCE_NAME : String","title":"APPEARANCE_NAME"},{"location":"readium/shared/shared/org.readium.r2.shared/-a-p-p-e-a-r-a-n-c-e_-r-e-f/","text":"// shared / org.readium.r2.shared / APPEARANCE_REF APPEARANCE_REF \u00b6 [androidJvm]\\ const val APPEARANCE_REF : String","title":" a p p e a r a n c e  r e f"},{"location":"readium/shared/shared/org.readium.r2.shared/-a-p-p-e-a-r-a-n-c-e_-r-e-f/#appearance_ref","text":"[androidJvm]\\ const val APPEARANCE_REF : String","title":"APPEARANCE_REF"},{"location":"readium/shared/shared/org.readium.r2.shared/-c-o-l-u-m-n_-c-o-u-n-t_-n-a-m-e/","text":"// shared / org.readium.r2.shared / COLUMN_COUNT_NAME COLUMN_COUNT_NAME \u00b6 [androidJvm]\\ const val COLUMN_COUNT_NAME : String","title":" c o l u m n  c o u n t  n a m e"},{"location":"readium/shared/shared/org.readium.r2.shared/-c-o-l-u-m-n_-c-o-u-n-t_-n-a-m-e/#column_count_name","text":"[androidJvm]\\ const val COLUMN_COUNT_NAME : String","title":"COLUMN_COUNT_NAME"},{"location":"readium/shared/shared/org.readium.r2.shared/-c-o-l-u-m-n_-c-o-u-n-t_-r-e-f/","text":"// shared / org.readium.r2.shared / COLUMN_COUNT_REF COLUMN_COUNT_REF \u00b6 [androidJvm]\\ const val COLUMN_COUNT_REF : String","title":" c o l u m n  c o u n t  r e f"},{"location":"readium/shared/shared/org.readium.r2.shared/-c-o-l-u-m-n_-c-o-u-n-t_-r-e-f/#column_count_ref","text":"[androidJvm]\\ const val COLUMN_COUNT_REF : String","title":"COLUMN_COUNT_REF"},{"location":"readium/shared/shared/org.readium.r2.shared/-f-o-n-t_-f-a-m-i-l-y_-n-a-m-e/","text":"// shared / org.readium.r2.shared / FONT_FAMILY_NAME FONT_FAMILY_NAME \u00b6 [androidJvm]\\ const val FONT_FAMILY_NAME : String","title":" f o n t  f a m i l y  n a m e"},{"location":"readium/shared/shared/org.readium.r2.shared/-f-o-n-t_-f-a-m-i-l-y_-n-a-m-e/#font_family_name","text":"[androidJvm]\\ const val FONT_FAMILY_NAME : String","title":"FONT_FAMILY_NAME"},{"location":"readium/shared/shared/org.readium.r2.shared/-f-o-n-t_-f-a-m-i-l-y_-r-e-f/","text":"// shared / org.readium.r2.shared / FONT_FAMILY_REF FONT_FAMILY_REF \u00b6 [androidJvm]\\ const val FONT_FAMILY_REF : String","title":" f o n t  f a m i l y  r e f"},{"location":"readium/shared/shared/org.readium.r2.shared/-f-o-n-t_-f-a-m-i-l-y_-r-e-f/#font_family_ref","text":"[androidJvm]\\ const val FONT_FAMILY_REF : String","title":"FONT_FAMILY_REF"},{"location":"readium/shared/shared/org.readium.r2.shared/-f-o-n-t_-o-v-e-r-r-i-d-e_-n-a-m-e/","text":"// shared / org.readium.r2.shared / FONT_OVERRIDE_NAME FONT_OVERRIDE_NAME \u00b6 [androidJvm]\\ const val FONT_OVERRIDE_NAME : String","title":" f o n t  o v e r r i d e  n a m e"},{"location":"readium/shared/shared/org.readium.r2.shared/-f-o-n-t_-o-v-e-r-r-i-d-e_-n-a-m-e/#font_override_name","text":"[androidJvm]\\ const val FONT_OVERRIDE_NAME : String","title":"FONT_OVERRIDE_NAME"},{"location":"readium/shared/shared/org.readium.r2.shared/-f-o-n-t_-o-v-e-r-r-i-d-e_-r-e-f/","text":"// shared / org.readium.r2.shared / FONT_OVERRIDE_REF FONT_OVERRIDE_REF \u00b6 [androidJvm]\\ const val FONT_OVERRIDE_REF : String","title":" f o n t  o v e r r i d e  r e f"},{"location":"readium/shared/shared/org.readium.r2.shared/-f-o-n-t_-o-v-e-r-r-i-d-e_-r-e-f/#font_override_ref","text":"[androidJvm]\\ const val FONT_OVERRIDE_REF : String","title":"FONT_OVERRIDE_REF"},{"location":"readium/shared/shared/org.readium.r2.shared/-f-o-n-t_-s-i-z-e_-n-a-m-e/","text":"// shared / org.readium.r2.shared / FONT_SIZE_NAME FONT_SIZE_NAME \u00b6 [androidJvm]\\ const val FONT_SIZE_NAME : String","title":" f o n t  s i z e  n a m e"},{"location":"readium/shared/shared/org.readium.r2.shared/-f-o-n-t_-s-i-z-e_-n-a-m-e/#font_size_name","text":"[androidJvm]\\ const val FONT_SIZE_NAME : String","title":"FONT_SIZE_NAME"},{"location":"readium/shared/shared/org.readium.r2.shared/-f-o-n-t_-s-i-z-e_-r-e-f/","text":"// shared / org.readium.r2.shared / FONT_SIZE_REF FONT_SIZE_REF \u00b6 [androidJvm]\\ const val FONT_SIZE_REF : String","title":" f o n t  s i z e  r e f"},{"location":"readium/shared/shared/org.readium.r2.shared/-f-o-n-t_-s-i-z-e_-r-e-f/#font_size_ref","text":"[androidJvm]\\ const val FONT_SIZE_REF : String","title":"FONT_SIZE_REF"},{"location":"readium/shared/shared/org.readium.r2.shared/-l-e-t-t-e-r_-s-p-a-c-i-n-g_-n-a-m-e/","text":"// shared / org.readium.r2.shared / LETTER_SPACING_NAME LETTER_SPACING_NAME \u00b6 [androidJvm]\\ const val LETTER_SPACING_NAME : String","title":" l e t t e r  s p a c i n g  n a m e"},{"location":"readium/shared/shared/org.readium.r2.shared/-l-e-t-t-e-r_-s-p-a-c-i-n-g_-n-a-m-e/#letter_spacing_name","text":"[androidJvm]\\ const val LETTER_SPACING_NAME : String","title":"LETTER_SPACING_NAME"},{"location":"readium/shared/shared/org.readium.r2.shared/-l-e-t-t-e-r_-s-p-a-c-i-n-g_-r-e-f/","text":"// shared / org.readium.r2.shared / LETTER_SPACING_REF LETTER_SPACING_REF \u00b6 [androidJvm]\\ const val LETTER_SPACING_REF : String","title":" l e t t e r  s p a c i n g  r e f"},{"location":"readium/shared/shared/org.readium.r2.shared/-l-e-t-t-e-r_-s-p-a-c-i-n-g_-r-e-f/#letter_spacing_ref","text":"[androidJvm]\\ const val LETTER_SPACING_REF : String","title":"LETTER_SPACING_REF"},{"location":"readium/shared/shared/org.readium.r2.shared/-l-i-n-e_-h-e-i-g-h-t_-n-a-m-e/","text":"// shared / org.readium.r2.shared / LINE_HEIGHT_NAME LINE_HEIGHT_NAME \u00b6 [androidJvm]\\ const val LINE_HEIGHT_NAME : String","title":" l i n e  h e i g h t  n a m e"},{"location":"readium/shared/shared/org.readium.r2.shared/-l-i-n-e_-h-e-i-g-h-t_-n-a-m-e/#line_height_name","text":"[androidJvm]\\ const val LINE_HEIGHT_NAME : String","title":"LINE_HEIGHT_NAME"},{"location":"readium/shared/shared/org.readium.r2.shared/-l-i-n-e_-h-e-i-g-h-t_-r-e-f/","text":"// shared / org.readium.r2.shared / LINE_HEIGHT_REF LINE_HEIGHT_REF \u00b6 [androidJvm]\\ const val LINE_HEIGHT_REF : String","title":" l i n e  h e i g h t  r e f"},{"location":"readium/shared/shared/org.readium.r2.shared/-l-i-n-e_-h-e-i-g-h-t_-r-e-f/#line_height_ref","text":"[androidJvm]\\ const val LINE_HEIGHT_REF : String","title":"LINE_HEIGHT_REF"},{"location":"readium/shared/shared/org.readium.r2.shared/-p-a-g-e_-m-a-r-g-i-n-s_-n-a-m-e/","text":"// shared / org.readium.r2.shared / PAGE_MARGINS_NAME PAGE_MARGINS_NAME \u00b6 [androidJvm]\\ const val PAGE_MARGINS_NAME : String","title":" p a g e  m a r g i n s  n a m e"},{"location":"readium/shared/shared/org.readium.r2.shared/-p-a-g-e_-m-a-r-g-i-n-s_-n-a-m-e/#page_margins_name","text":"[androidJvm]\\ const val PAGE_MARGINS_NAME : String","title":"PAGE_MARGINS_NAME"},{"location":"readium/shared/shared/org.readium.r2.shared/-p-a-g-e_-m-a-r-g-i-n-s_-r-e-f/","text":"// shared / org.readium.r2.shared / PAGE_MARGINS_REF PAGE_MARGINS_REF \u00b6 [androidJvm]\\ const val PAGE_MARGINS_REF : String","title":" p a g e  m a r g i n s  r e f"},{"location":"readium/shared/shared/org.readium.r2.shared/-p-a-g-e_-m-a-r-g-i-n-s_-r-e-f/#page_margins_ref","text":"[androidJvm]\\ const val PAGE_MARGINS_REF : String","title":"PAGE_MARGINS_REF"},{"location":"readium/shared/shared/org.readium.r2.shared/-p-u-b-l-i-s-h-e-r_-d-e-f-a-u-l-t_-n-a-m-e/","text":"// shared / org.readium.r2.shared / PUBLISHER_DEFAULT_NAME PUBLISHER_DEFAULT_NAME \u00b6 [androidJvm]\\ const val PUBLISHER_DEFAULT_NAME : String","title":" p u b l i s h e r  d e f a u l t  n a m e"},{"location":"readium/shared/shared/org.readium.r2.shared/-p-u-b-l-i-s-h-e-r_-d-e-f-a-u-l-t_-n-a-m-e/#publisher_default_name","text":"[androidJvm]\\ const val PUBLISHER_DEFAULT_NAME : String","title":"PUBLISHER_DEFAULT_NAME"},{"location":"readium/shared/shared/org.readium.r2.shared/-p-u-b-l-i-s-h-e-r_-d-e-f-a-u-l-t_-r-e-f/","text":"// shared / org.readium.r2.shared / PUBLISHER_DEFAULT_REF PUBLISHER_DEFAULT_REF \u00b6 [androidJvm]\\ const val PUBLISHER_DEFAULT_REF : String","title":" p u b l i s h e r  d e f a u l t  r e f"},{"location":"readium/shared/shared/org.readium.r2.shared/-p-u-b-l-i-s-h-e-r_-d-e-f-a-u-l-t_-r-e-f/#publisher_default_ref","text":"[androidJvm]\\ const val PUBLISHER_DEFAULT_REF : String","title":"PUBLISHER_DEFAULT_REF"},{"location":"readium/shared/shared/org.readium.r2.shared/-s-c-r-o-l-l_-n-a-m-e/","text":"// shared / org.readium.r2.shared / SCROLL_NAME SCROLL_NAME \u00b6 [androidJvm]\\ const val SCROLL_NAME : String","title":" s c r o l l  n a m e"},{"location":"readium/shared/shared/org.readium.r2.shared/-s-c-r-o-l-l_-n-a-m-e/#scroll_name","text":"[androidJvm]\\ const val SCROLL_NAME : String","title":"SCROLL_NAME"},{"location":"readium/shared/shared/org.readium.r2.shared/-s-c-r-o-l-l_-r-e-f/","text":"// shared / org.readium.r2.shared / SCROLL_REF SCROLL_REF \u00b6 [androidJvm]\\ const val SCROLL_REF : String","title":" s c r o l l  r e f"},{"location":"readium/shared/shared/org.readium.r2.shared/-s-c-r-o-l-l_-r-e-f/#scroll_ref","text":"[androidJvm]\\ const val SCROLL_REF : String","title":"SCROLL_REF"},{"location":"readium/shared/shared/org.readium.r2.shared/-t-e-x-t_-a-l-i-g-n-m-e-n-t_-n-a-m-e/","text":"// shared / org.readium.r2.shared / TEXT_ALIGNMENT_NAME TEXT_ALIGNMENT_NAME \u00b6 [androidJvm]\\ const val TEXT_ALIGNMENT_NAME : String","title":" t e x t  a l i g n m e n t  n a m e"},{"location":"readium/shared/shared/org.readium.r2.shared/-t-e-x-t_-a-l-i-g-n-m-e-n-t_-n-a-m-e/#text_alignment_name","text":"[androidJvm]\\ const val TEXT_ALIGNMENT_NAME : String","title":"TEXT_ALIGNMENT_NAME"},{"location":"readium/shared/shared/org.readium.r2.shared/-t-e-x-t_-a-l-i-g-n-m-e-n-t_-r-e-f/","text":"// shared / org.readium.r2.shared / TEXT_ALIGNMENT_REF TEXT_ALIGNMENT_REF \u00b6 [androidJvm]\\ const val TEXT_ALIGNMENT_REF : String","title":" t e x t  a l i g n m e n t  r e f"},{"location":"readium/shared/shared/org.readium.r2.shared/-t-e-x-t_-a-l-i-g-n-m-e-n-t_-r-e-f/#text_alignment_ref","text":"[androidJvm]\\ const val TEXT_ALIGNMENT_REF : String","title":"TEXT_ALIGNMENT_REF"},{"location":"readium/shared/shared/org.readium.r2.shared/-w-o-r-d_-s-p-a-c-i-n-g_-n-a-m-e/","text":"// shared / org.readium.r2.shared / WORD_SPACING_NAME WORD_SPACING_NAME \u00b6 [androidJvm]\\ const val WORD_SPACING_NAME : String","title":" w o r d  s p a c i n g  n a m e"},{"location":"readium/shared/shared/org.readium.r2.shared/-w-o-r-d_-s-p-a-c-i-n-g_-n-a-m-e/#word_spacing_name","text":"[androidJvm]\\ const val WORD_SPACING_NAME : String","title":"WORD_SPACING_NAME"},{"location":"readium/shared/shared/org.readium.r2.shared/-w-o-r-d_-s-p-a-c-i-n-g_-r-e-f/","text":"// shared / org.readium.r2.shared / WORD_SPACING_REF WORD_SPACING_REF \u00b6 [androidJvm]\\ const val WORD_SPACING_REF : String","title":" w o r d  s p a c i n g  r e f"},{"location":"readium/shared/shared/org.readium.r2.shared/-w-o-r-d_-s-p-a-c-i-n-g_-r-e-f/#word_spacing_ref","text":"[androidJvm]\\ const val WORD_SPACING_REF : String","title":"WORD_SPACING_REF"},{"location":"readium/shared/shared/org.readium.r2.shared/promise/","text":"// shared / org.readium.r2.shared / promise promise \u00b6 [androidJvm]\\ fun Request. promise (): Promise< Triple <Request, Response, ByteArray >, Exception >","title":"Promise"},{"location":"readium/shared/shared/org.readium.r2.shared/promise/#promise","text":"[androidJvm]\\ fun Request. promise (): Promise< Triple <Request, Response, ByteArray >, Exception >","title":"promise"},{"location":"readium/shared/shared/org.readium.r2.shared/to-j-s-o-n/","text":"// shared / org.readium.r2.shared / toJSON toJSON \u00b6 [androidJvm]\\ fun List < JSONable >. toJSON (): JSONArray Serializes a list of JSONable into a JSONArray .","title":"To j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared/to-j-s-o-n/#tojson","text":"[androidJvm]\\ fun List < JSONable >. toJSON (): JSONArray Serializes a list of JSONable into a JSONArray .","title":"toJSON"},{"location":"readium/shared/shared/org.readium.r2.shared/-clip/","text":"// shared / org.readium.r2.shared / Clip Clip \u00b6 [androidJvm]\\ data class Clip (audioResource: String ?, fragmentId: String ?, start: Double ?, end: Double ?) Properties \u00b6 Name Summary audioResource [androidJvm] val audioResource : String ? = null end [androidJvm] val end : Double ? = null fragmentId [androidJvm] val fragmentId : String ? = null start [androidJvm] val start : Double ? = null","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-clip/#clip","text":"[androidJvm]\\ data class Clip (audioResource: String ?, fragmentId: String ?, start: Double ?, end: Double ?)","title":"Clip"},{"location":"readium/shared/shared/org.readium.r2.shared/-clip/#properties","text":"Name Summary audioResource [androidJvm] val audioResource : String ? = null end [androidJvm] val end : Double ? = null fragmentId [androidJvm] val fragmentId : String ? = null start [androidJvm] val start : Double ? = null","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-clip/-clip/","text":"// shared / org.readium.r2.shared / Clip / Clip Clip \u00b6 [androidJvm]\\ fun Clip (audioResource: String ? = null, fragmentId: String ? = null, start: Double ? = null, end: Double ? = null)","title":" clip"},{"location":"readium/shared/shared/org.readium.r2.shared/-clip/-clip/#clip","text":"[androidJvm]\\ fun Clip (audioResource: String ? = null, fragmentId: String ? = null, start: Double ? = null, end: Double ? = null)","title":"Clip"},{"location":"readium/shared/shared/org.readium.r2.shared/-clip/audio-resource/","text":"// shared / org.readium.r2.shared / Clip / audioResource audioResource \u00b6 [androidJvm]\\ val audioResource : String ? = null","title":"Audio resource"},{"location":"readium/shared/shared/org.readium.r2.shared/-clip/audio-resource/#audioresource","text":"[androidJvm]\\ val audioResource : String ? = null","title":"audioResource"},{"location":"readium/shared/shared/org.readium.r2.shared/-clip/end/","text":"// shared / org.readium.r2.shared / Clip / end end \u00b6 [androidJvm]\\ val end : Double ? = null","title":"End"},{"location":"readium/shared/shared/org.readium.r2.shared/-clip/end/#end","text":"[androidJvm]\\ val end : Double ? = null","title":"end"},{"location":"readium/shared/shared/org.readium.r2.shared/-clip/fragment-id/","text":"// shared / org.readium.r2.shared / Clip / fragmentId fragmentId \u00b6 [androidJvm]\\ val fragmentId : String ? = null","title":"Fragment id"},{"location":"readium/shared/shared/org.readium.r2.shared/-clip/fragment-id/#fragmentid","text":"[androidJvm]\\ val fragmentId : String ? = null","title":"fragmentId"},{"location":"readium/shared/shared/org.readium.r2.shared/-clip/start/","text":"// shared / org.readium.r2.shared / Clip / start start \u00b6 [androidJvm]\\ val start : Double ? = null","title":"Start"},{"location":"readium/shared/shared/org.readium.r2.shared/-clip/start/#start","text":"[androidJvm]\\ val start : Double ? = null","title":"start"},{"location":"readium/shared/shared/org.readium.r2.shared/-enumerable/","text":"// shared / org.readium.r2.shared / Enumerable Enumerable \u00b6 [androidJvm]\\ class Enumerable (index: Int , values: List < String >, ref: String , name: String ) : UserProperty Functions \u00b6 Name Summary getJson [androidJvm] fun getJson (): String toString [androidJvm] open override fun toString (): String Properties \u00b6 Name Summary index [androidJvm] var index : Int name [androidJvm] var name : String ref [androidJvm] var ref : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-enumerable/#enumerable","text":"[androidJvm]\\ class Enumerable (index: Int , values: List < String >, ref: String , name: String ) : UserProperty","title":"Enumerable"},{"location":"readium/shared/shared/org.readium.r2.shared/-enumerable/#functions","text":"Name Summary getJson [androidJvm] fun getJson (): String toString [androidJvm] open override fun toString (): String","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared/-enumerable/#properties","text":"Name Summary index [androidJvm] var index : Int name [androidJvm] var name : String ref [androidJvm] var ref : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-enumerable/--index--/","text":"// shared / org.readium.r2.shared / Enumerable / index index \u00b6 [androidJvm]\\ var index : Int","title":"  index  "},{"location":"readium/shared/shared/org.readium.r2.shared/-enumerable/--index--/#index","text":"[androidJvm]\\ var index : Int","title":"index"},{"location":"readium/shared/shared/org.readium.r2.shared/-enumerable/-enumerable/","text":"// shared / org.readium.r2.shared / Enumerable / Enumerable Enumerable \u00b6 [androidJvm]\\ fun Enumerable (index: Int , values: List < String >, ref: String , name: String )","title":" enumerable"},{"location":"readium/shared/shared/org.readium.r2.shared/-enumerable/-enumerable/#enumerable","text":"[androidJvm]\\ fun Enumerable (index: Int , values: List < String >, ref: String , name: String )","title":"Enumerable"},{"location":"readium/shared/shared/org.readium.r2.shared/-enumerable/to-string/","text":"// shared / org.readium.r2.shared / Enumerable / toString toString \u00b6 [androidJvm]\\ open override fun toString (): String","title":"To string"},{"location":"readium/shared/shared/org.readium.r2.shared/-enumerable/to-string/#tostring","text":"[androidJvm]\\ open override fun toString (): String","title":"toString"},{"location":"readium/shared/shared/org.readium.r2.shared/-incremental/","text":"// shared / org.readium.r2.shared / Incremental Incremental \u00b6 [androidJvm]\\ class Incremental (value: Float , min: Float , max: Float , step: Float , suffix: String , ref: String , name: String ) : UserProperty Functions \u00b6 Name Summary decrement [androidJvm] fun decrement () getJson [androidJvm] fun getJson (): String increment [androidJvm] fun increment () toString [androidJvm] open override fun toString (): String Properties \u00b6 Name Summary max [androidJvm] val max : Float min [androidJvm] val min : Float name [androidJvm] var name : String ref [androidJvm] var ref : String value [androidJvm] var value : Float","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-incremental/#incremental","text":"[androidJvm]\\ class Incremental (value: Float , min: Float , max: Float , step: Float , suffix: String , ref: String , name: String ) : UserProperty","title":"Incremental"},{"location":"readium/shared/shared/org.readium.r2.shared/-incremental/#functions","text":"Name Summary decrement [androidJvm] fun decrement () getJson [androidJvm] fun getJson (): String increment [androidJvm] fun increment () toString [androidJvm] open override fun toString (): String","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared/-incremental/#properties","text":"Name Summary max [androidJvm] val max : Float min [androidJvm] val min : Float name [androidJvm] var name : String ref [androidJvm] var ref : String value [androidJvm] var value : Float","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-incremental/-incremental/","text":"// shared / org.readium.r2.shared / Incremental / Incremental Incremental \u00b6 [androidJvm]\\ fun Incremental (value: Float , min: Float , max: Float , step: Float , suffix: String , ref: String , name: String )","title":" incremental"},{"location":"readium/shared/shared/org.readium.r2.shared/-incremental/-incremental/#incremental","text":"[androidJvm]\\ fun Incremental (value: Float , min: Float , max: Float , step: Float , suffix: String , ref: String , name: String )","title":"Incremental"},{"location":"readium/shared/shared/org.readium.r2.shared/-incremental/decrement/","text":"// shared / org.readium.r2.shared / Incremental / decrement decrement \u00b6 [androidJvm]\\ fun decrement ()","title":"Decrement"},{"location":"readium/shared/shared/org.readium.r2.shared/-incremental/decrement/#decrement","text":"[androidJvm]\\ fun decrement ()","title":"decrement"},{"location":"readium/shared/shared/org.readium.r2.shared/-incremental/increment/","text":"// shared / org.readium.r2.shared / Incremental / increment increment \u00b6 [androidJvm]\\ fun increment ()","title":"Increment"},{"location":"readium/shared/shared/org.readium.r2.shared/-incremental/increment/#increment","text":"[androidJvm]\\ fun increment ()","title":"increment"},{"location":"readium/shared/shared/org.readium.r2.shared/-incremental/max/","text":"// shared / org.readium.r2.shared / Incremental / max max \u00b6 [androidJvm]\\ val max : Float","title":"Max"},{"location":"readium/shared/shared/org.readium.r2.shared/-incremental/max/#max","text":"[androidJvm]\\ val max : Float","title":"max"},{"location":"readium/shared/shared/org.readium.r2.shared/-incremental/min/","text":"// shared / org.readium.r2.shared / Incremental / min min \u00b6 [androidJvm]\\ val min : Float","title":"Min"},{"location":"readium/shared/shared/org.readium.r2.shared/-incremental/min/#min","text":"[androidJvm]\\ val min : Float","title":"min"},{"location":"readium/shared/shared/org.readium.r2.shared/-incremental/to-string/","text":"// shared / org.readium.r2.shared / Incremental / toString toString \u00b6 [androidJvm]\\ open override fun toString (): String","title":"To string"},{"location":"readium/shared/shared/org.readium.r2.shared/-incremental/to-string/#tostring","text":"[androidJvm]\\ open override fun toString (): String","title":"toString"},{"location":"readium/shared/shared/org.readium.r2.shared/-incremental/value/","text":"// shared / org.readium.r2.shared / Incremental / value value \u00b6 [androidJvm]\\ var value : Float","title":"Value"},{"location":"readium/shared/shared/org.readium.r2.shared/-incremental/value/#value","text":"[androidJvm]\\ var value : Float","title":"value"},{"location":"readium/shared/shared/org.readium.r2.shared/-injectable/","text":"// shared / org.readium.r2.shared / Injectable Injectable \u00b6 [androidJvm]\\ enum Injectable : Enum < Injectable > , Serializable Entries \u00b6 Style [androidJvm] Style (\"styles\") Font [androidJvm] Font (\"fonts\") Script [androidJvm] Script (\"scripts\") Types \u00b6 Name Summary Companion [androidJvm] object Companion : MapCompanion < String , Injectable > Functions \u00b6 Name Summary toString [androidJvm] open override fun toString (): String Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-injectable/#injectable","text":"[androidJvm]\\ enum Injectable : Enum < Injectable > , Serializable","title":"Injectable"},{"location":"readium/shared/shared/org.readium.r2.shared/-injectable/#entries","text":"Style [androidJvm] Style (\"styles\") Font [androidJvm] Font (\"fonts\") Script [androidJvm] Script (\"scripts\")","title":"Entries"},{"location":"readium/shared/shared/org.readium.r2.shared/-injectable/#types","text":"Name Summary Companion [androidJvm] object Companion : MapCompanion < String , Injectable >","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared/-injectable/#functions","text":"Name Summary toString [androidJvm] open override fun toString (): String","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared/-injectable/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-injectable/raw-value/","text":"// shared / org.readium.r2.shared / Injectable / rawValue rawValue \u00b6 [androidJvm]\\ val rawValue : String","title":"Raw value"},{"location":"readium/shared/shared/org.readium.r2.shared/-injectable/raw-value/#rawvalue","text":"[androidJvm]\\ val rawValue : String","title":"rawValue"},{"location":"readium/shared/shared/org.readium.r2.shared/-injectable/to-string/","text":"// shared / org.readium.r2.shared / Injectable / toString toString \u00b6 [androidJvm]\\ open override fun toString (): String","title":"To string"},{"location":"readium/shared/shared/org.readium.r2.shared/-injectable/to-string/#tostring","text":"[androidJvm]\\ open override fun toString (): String","title":"toString"},{"location":"readium/shared/shared/org.readium.r2.shared/-injectable/-companion/","text":"// shared / org.readium.r2.shared / Injectable / Companion Companion \u00b6 [androidJvm]\\ object Companion : MapCompanion < String , Injectable > Functions \u00b6 Name Summary get [androidJvm] open fun get (key: String ?): Injectable ? Returns the element matching the key , or null if not found. invoke [androidJvm] open operator fun invoke (key: String ?): Injectable ? Alias to get , to be used like keyMapper(\"a_key\"). Properties \u00b6 Name Summary keys [androidJvm] val keys : Set < String > Returns the available keys .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-injectable/-companion/#companion","text":"[androidJvm]\\ object Companion : MapCompanion < String , Injectable >","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared/-injectable/-companion/#functions","text":"Name Summary get [androidJvm] open fun get (key: String ?): Injectable ? Returns the element matching the key , or null if not found. invoke [androidJvm] open operator fun invoke (key: String ?): Injectable ? Alias to get , to be used like keyMapper(\"a_key\").","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared/-injectable/-companion/#properties","text":"Name Summary keys [androidJvm] val keys : Set < String > Returns the available keys .","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-injectable/-font/","text":"// shared / org.readium.r2.shared / Injectable / Font Font \u00b6 [androidJvm]\\ Font (\"fonts\") Functions \u00b6 Name Summary toString [androidJvm] open override fun toString (): String Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-injectable/-font/#font","text":"[androidJvm]\\ Font (\"fonts\")","title":"Font"},{"location":"readium/shared/shared/org.readium.r2.shared/-injectable/-font/#functions","text":"Name Summary toString [androidJvm] open override fun toString (): String","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared/-injectable/-font/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-injectable/-script/","text":"// shared / org.readium.r2.shared / Injectable / Script Script \u00b6 [androidJvm]\\ Script (\"scripts\") Functions \u00b6 Name Summary toString [androidJvm] open override fun toString (): String Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-injectable/-script/#script","text":"[androidJvm]\\ Script (\"scripts\")","title":"Script"},{"location":"readium/shared/shared/org.readium.r2.shared/-injectable/-script/#functions","text":"Name Summary toString [androidJvm] open override fun toString (): String","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared/-injectable/-script/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-injectable/-style/","text":"// shared / org.readium.r2.shared / Injectable / Style Style \u00b6 [androidJvm]\\ Style (\"styles\") Functions \u00b6 Name Summary toString [androidJvm] open override fun toString (): String Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-injectable/-style/#style","text":"[androidJvm]\\ Style (\"styles\")","title":"Style"},{"location":"readium/shared/shared/org.readium.r2.shared/-injectable/-style/#functions","text":"Name Summary toString [androidJvm] open override fun toString (): String","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared/-injectable/-style/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-j-s-o-nable/","text":"// shared / org.readium.r2.shared / JSONable JSONable \u00b6 [androidJvm]\\ interface JSONable Functions \u00b6 Name Summary toJSON [androidJvm] abstract fun toJSON (): JSONObject Serializes the object to its JSON representation. Inheritors \u00b6 Name Acquisition Availability Copies Holds Price Contributor Link LocalizedString Locator Locator Locator LocatorCollection LocatorCollection Manifest Metadata Properties PublicationCollection Subject ArchiveProperties Encryption DomRange DomRange Presentation","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-j-s-o-nable/#jsonable","text":"[androidJvm]\\ interface JSONable","title":"JSONable"},{"location":"readium/shared/shared/org.readium.r2.shared/-j-s-o-nable/#functions","text":"Name Summary toJSON [androidJvm] abstract fun toJSON (): JSONObject Serializes the object to its JSON representation.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared/-j-s-o-nable/#inheritors","text":"Name Acquisition Availability Copies Holds Price Contributor Link LocalizedString Locator Locator Locator LocatorCollection LocatorCollection Manifest Metadata Properties PublicationCollection Subject ArchiveProperties Encryption DomRange DomRange Presentation","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared/-j-s-o-nable/to-j-s-o-n/","text":"// shared / org.readium.r2.shared / JSONable / toJSON toJSON \u00b6 [androidJvm]\\ abstract fun toJSON (): JSONObject Serializes the object to its JSON representation.","title":"To j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared/-j-s-o-nable/to-j-s-o-n/#tojson","text":"[androidJvm]\\ abstract fun toJSON (): JSONObject Serializes the object to its JSON representation.","title":"toJSON"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlay-node/","text":"// shared / org.readium.r2.shared / MediaOverlayNode MediaOverlayNode \u00b6 [androidJvm]\\ data class MediaOverlayNode (text: String , audio: String ?, children: List < MediaOverlayNode >, role: List < String >) : Serializable Properties \u00b6 Name Summary audio [androidJvm] val audio : String ? audioFile [androidJvm] val audioFile : String ? audioTime [androidJvm] val audioTime : String ? children [androidJvm] val children : List < MediaOverlayNode > clip [androidJvm] val clip : Clip fragmentId [androidJvm] val fragmentId : String ? role [androidJvm] val role : List < String > text [androidJvm] val text : String textFile [androidJvm] val textFile : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlay-node/#mediaoverlaynode","text":"[androidJvm]\\ data class MediaOverlayNode (text: String , audio: String ?, children: List < MediaOverlayNode >, role: List < String >) : Serializable","title":"MediaOverlayNode"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlay-node/#properties","text":"Name Summary audio [androidJvm] val audio : String ? audioFile [androidJvm] val audioFile : String ? audioTime [androidJvm] val audioTime : String ? children [androidJvm] val children : List < MediaOverlayNode > clip [androidJvm] val clip : Clip fragmentId [androidJvm] val fragmentId : String ? role [androidJvm] val role : List < String > text [androidJvm] val text : String textFile [androidJvm] val textFile : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlay-node/-media-overlay-node/","text":"// shared / org.readium.r2.shared / MediaOverlayNode / MediaOverlayNode MediaOverlayNode \u00b6 [androidJvm]\\ fun MediaOverlayNode (text: String , audio: String ?, children: List < MediaOverlayNode > = listOf(), role: List < String > = listOf())","title":" media overlay node"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlay-node/-media-overlay-node/#mediaoverlaynode","text":"[androidJvm]\\ fun MediaOverlayNode (text: String , audio: String ?, children: List < MediaOverlayNode > = listOf(), role: List < String > = listOf())","title":"MediaOverlayNode"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlay-node/audio-file/","text":"// shared / org.readium.r2.shared / MediaOverlayNode / audioFile audioFile \u00b6 [androidJvm]\\ val audioFile : String ?","title":"Audio file"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlay-node/audio-file/#audiofile","text":"[androidJvm]\\ val audioFile : String ?","title":"audioFile"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlay-node/audio-time/","text":"// shared / org.readium.r2.shared / MediaOverlayNode / audioTime audioTime \u00b6 [androidJvm]\\ val audioTime : String ?","title":"Audio time"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlay-node/audio-time/#audiotime","text":"[androidJvm]\\ val audioTime : String ?","title":"audioTime"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlay-node/audio/","text":"// shared / org.readium.r2.shared / MediaOverlayNode / audio audio \u00b6 [androidJvm]\\ val audio : String ?","title":"Audio"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlay-node/audio/#audio","text":"[androidJvm]\\ val audio : String ?","title":"audio"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlay-node/children/","text":"// shared / org.readium.r2.shared / MediaOverlayNode / children children \u00b6 [androidJvm]\\ val children : List < MediaOverlayNode >","title":"Children"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlay-node/children/#children","text":"[androidJvm]\\ val children : List < MediaOverlayNode >","title":"children"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlay-node/clip/","text":"// shared / org.readium.r2.shared / MediaOverlayNode / clip clip \u00b6 [androidJvm]\\ val clip : Clip","title":"Clip"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlay-node/clip/#clip","text":"[androidJvm]\\ val clip : Clip","title":"clip"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlay-node/fragment-id/","text":"// shared / org.readium.r2.shared / MediaOverlayNode / fragmentId fragmentId \u00b6 [androidJvm]\\ val fragmentId : String ?","title":"Fragment id"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlay-node/fragment-id/#fragmentid","text":"[androidJvm]\\ val fragmentId : String ?","title":"fragmentId"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlay-node/role/","text":"// shared / org.readium.r2.shared / MediaOverlayNode / role role \u00b6 [androidJvm]\\ val role : List < String >","title":"Role"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlay-node/role/#role","text":"[androidJvm]\\ val role : List < String >","title":"role"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlay-node/text-file/","text":"// shared / org.readium.r2.shared / MediaOverlayNode / textFile textFile \u00b6 [androidJvm]\\ val textFile : String","title":"Text file"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlay-node/text-file/#textfile","text":"[androidJvm]\\ val textFile : String","title":"textFile"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlay-node/text/","text":"// shared / org.readium.r2.shared / MediaOverlayNode / text text \u00b6 [androidJvm]\\ val text : String","title":"Text"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlay-node/text/#text","text":"[androidJvm]\\ val text : String","title":"text"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlays/","text":"// shared / org.readium.r2.shared / MediaOverlays MediaOverlays \u00b6 [androidJvm]\\ data class MediaOverlays (nodes: List < MediaOverlayNode >) : Serializable Types \u00b6 Name Summary NextNodeResult [androidJvm] data class NextNodeResult (found: MediaOverlayNode ?, prevFound: Boolean ) Functions \u00b6 Name Summary clip [androidJvm] fun clip (ref: String ): Clip ? nodeForFragment [androidJvm] fun nodeForFragment (ref: String ?): MediaOverlayNode ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlays/#mediaoverlays","text":"[androidJvm]\\ data class MediaOverlays (nodes: List < MediaOverlayNode >) : Serializable","title":"MediaOverlays"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlays/#types","text":"Name Summary NextNodeResult [androidJvm] data class NextNodeResult (found: MediaOverlayNode ?, prevFound: Boolean )","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlays/#functions","text":"Name Summary clip [androidJvm] fun clip (ref: String ): Clip ? nodeForFragment [androidJvm] fun nodeForFragment (ref: String ?): MediaOverlayNode ?","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlays/-media-overlays/","text":"// shared / org.readium.r2.shared / MediaOverlays / MediaOverlays MediaOverlays \u00b6 [androidJvm]\\ fun MediaOverlays (nodes: List < MediaOverlayNode > = listOf())","title":" media overlays"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlays/-media-overlays/#mediaoverlays","text":"[androidJvm]\\ fun MediaOverlays (nodes: List < MediaOverlayNode > = listOf())","title":"MediaOverlays"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlays/clip/","text":"// shared / org.readium.r2.shared / MediaOverlays / clip clip \u00b6 [androidJvm]\\ fun clip (ref: String ): Clip ?","title":"Clip"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlays/clip/#clip","text":"[androidJvm]\\ fun clip (ref: String ): Clip ?","title":"clip"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlays/node-for-fragment/","text":"// shared / org.readium.r2.shared / MediaOverlays / nodeForFragment nodeForFragment \u00b6 [androidJvm]\\ fun nodeForFragment (ref: String ?): MediaOverlayNode ?","title":"Node for fragment"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlays/node-for-fragment/#nodeforfragment","text":"[androidJvm]\\ fun nodeForFragment (ref: String ?): MediaOverlayNode ?","title":"nodeForFragment"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlays/-next-node-result/","text":"// shared / org.readium.r2.shared / MediaOverlays / NextNodeResult NextNodeResult \u00b6 [androidJvm]\\ data class NextNodeResult (found: MediaOverlayNode ?, prevFound: Boolean ) Properties \u00b6 Name Summary found [androidJvm] val found : MediaOverlayNode ? prevFound [androidJvm] val prevFound : Boolean","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlays/-next-node-result/#nextnoderesult","text":"[androidJvm]\\ data class NextNodeResult (found: MediaOverlayNode ?, prevFound: Boolean )","title":"NextNodeResult"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlays/-next-node-result/#properties","text":"Name Summary found [androidJvm] val found : MediaOverlayNode ? prevFound [androidJvm] val prevFound : Boolean","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlays/-next-node-result/-next-node-result/","text":"// shared / org.readium.r2.shared / MediaOverlays / NextNodeResult / NextNodeResult NextNodeResult \u00b6 [androidJvm]\\ fun NextNodeResult (found: MediaOverlayNode ?, prevFound: Boolean )","title":" next node result"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlays/-next-node-result/-next-node-result/#nextnoderesult","text":"[androidJvm]\\ fun NextNodeResult (found: MediaOverlayNode ?, prevFound: Boolean )","title":"NextNodeResult"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlays/-next-node-result/found/","text":"// shared / org.readium.r2.shared / MediaOverlays / NextNodeResult / found found \u00b6 [androidJvm]\\ val found : MediaOverlayNode ?","title":"Found"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlays/-next-node-result/found/#found","text":"[androidJvm]\\ val found : MediaOverlayNode ?","title":"found"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlays/-next-node-result/prev-found/","text":"// shared / org.readium.r2.shared / MediaOverlays / NextNodeResult / prevFound prevFound \u00b6 [androidJvm]\\ val prevFound : Boolean","title":"Prev found"},{"location":"readium/shared/shared/org.readium.r2.shared/-media-overlays/-next-node-result/prev-found/#prevfound","text":"[androidJvm]\\ val prevFound : Boolean","title":"prevFound"},{"location":"readium/shared/shared/org.readium.r2.shared/-pdf-support/","text":"// shared / org.readium.r2.shared / PdfSupport PdfSupport \u00b6 [androidJvm]\\ @ Target (allowedTargets = [ AnnotationTarget.CLASS , AnnotationTarget.FUNCTION , AnnotationTarget.TYPEALIAS , AnnotationTarget.PROPERTY ]) annotation class PdfSupport","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-pdf-support/#pdfsupport","text":"[androidJvm]\\ @ Target (allowedTargets = [ AnnotationTarget.CLASS , AnnotationTarget.FUNCTION , AnnotationTarget.TYPEALIAS , AnnotationTarget.PROPERTY ]) annotation class PdfSupport","title":"PdfSupport"},{"location":"readium/shared/shared/org.readium.r2.shared/-pdf-support/-pdf-support/","text":"// shared / org.readium.r2.shared / PdfSupport / PdfSupport PdfSupport \u00b6 [androidJvm]\\ fun PdfSupport ()","title":" pdf support"},{"location":"readium/shared/shared/org.readium.r2.shared/-pdf-support/-pdf-support/#pdfsupport","text":"[androidJvm]\\ fun PdfSupport ()","title":"PdfSupport"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/","text":"// shared / org.readium.r2.shared / ReadiumCSSName ReadiumCSSName \u00b6 [androidJvm]\\ enum ReadiumCSSName : Enum < ReadiumCSSName > Entries \u00b6 ligatures [androidJvm] ligatures (\"--USER__ligatures\") hyphens [androidJvm] hyphens (\"--USER__bodyHyphens\") paraIndent [androidJvm] paraIndent (\"--USER__paraIndent\") lineHeight [androidJvm] lineHeight (\"--USER__lineHeight\") pageMargins [androidJvm] pageMargins (\"--USER__pageMargins\") letterSpacing [androidJvm] letterSpacing (\"--USER__letterSpacing\") wordSpacing [androidJvm] wordSpacing (\"--USER__wordSpacing\") columnCount [androidJvm] columnCount (\"--USER__colCount\") textAlignment [androidJvm] textAlignment (\"--USER__textAlign\") publisherDefault [androidJvm] publisherDefault (\"--USER__advancedSettings\") scroll [androidJvm] scroll (\"--USER__scroll\") appearance [androidJvm] appearance (\"--USER__appearance\") fontOverride [androidJvm] fontOverride (\"--USER__fontOverride\") fontFamily [androidJvm] fontFamily (\"--USER__fontFamily\") fontSize [androidJvm] fontSize (\"--USER__fontSize\") Types \u00b6 Name Summary Companion [androidJvm] object Companion Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/#readiumcssname","text":"[androidJvm]\\ enum ReadiumCSSName : Enum < ReadiumCSSName >","title":"ReadiumCSSName"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/#entries","text":"ligatures [androidJvm] ligatures (\"--USER__ligatures\") hyphens [androidJvm] hyphens (\"--USER__bodyHyphens\") paraIndent [androidJvm] paraIndent (\"--USER__paraIndent\") lineHeight [androidJvm] lineHeight (\"--USER__lineHeight\") pageMargins [androidJvm] pageMargins (\"--USER__pageMargins\") letterSpacing [androidJvm] letterSpacing (\"--USER__letterSpacing\") wordSpacing [androidJvm] wordSpacing (\"--USER__wordSpacing\") columnCount [androidJvm] columnCount (\"--USER__colCount\") textAlignment [androidJvm] textAlignment (\"--USER__textAlign\") publisherDefault [androidJvm] publisherDefault (\"--USER__advancedSettings\") scroll [androidJvm] scroll (\"--USER__scroll\") appearance [androidJvm] appearance (\"--USER__appearance\") fontOverride [androidJvm] fontOverride (\"--USER__fontOverride\") fontFamily [androidJvm] fontFamily (\"--USER__fontFamily\") fontSize [androidJvm] fontSize (\"--USER__fontSize\")","title":"Entries"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/ref/","text":"// shared / org.readium.r2.shared / ReadiumCSSName / ref ref \u00b6 [androidJvm]\\ val ref : String","title":"Ref"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/ref/#ref","text":"[androidJvm]\\ val ref : String","title":"ref"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/-companion/","text":"// shared / org.readium.r2.shared / ReadiumCSSName / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary ref [androidJvm] fun ref (name: String ): ReadiumCSSName","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/-companion/#functions","text":"Name Summary ref [androidJvm] fun ref (name: String ): ReadiumCSSName","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/-companion/ref/","text":"// shared / org.readium.r2.shared / ReadiumCSSName / Companion / ref ref \u00b6 [androidJvm]\\ fun ref (name: String ): ReadiumCSSName","title":"Ref"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/-companion/ref/#ref","text":"[androidJvm]\\ fun ref (name: String ): ReadiumCSSName","title":"ref"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/appearance/","text":"// shared / org.readium.r2.shared / ReadiumCSSName / appearance appearance \u00b6 [androidJvm]\\ appearance (\"--USER__appearance\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/appearance/#appearance","text":"[androidJvm]\\ appearance (\"--USER__appearance\")","title":"appearance"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/appearance/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/column-count/","text":"// shared / org.readium.r2.shared / ReadiumCSSName / columnCount columnCount \u00b6 [androidJvm]\\ columnCount (\"--USER__colCount\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/column-count/#columncount","text":"[androidJvm]\\ columnCount (\"--USER__colCount\")","title":"columnCount"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/column-count/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/font-family/","text":"// shared / org.readium.r2.shared / ReadiumCSSName / fontFamily fontFamily \u00b6 [androidJvm]\\ fontFamily (\"--USER__fontFamily\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/font-family/#fontfamily","text":"[androidJvm]\\ fontFamily (\"--USER__fontFamily\")","title":"fontFamily"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/font-family/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/font-override/","text":"// shared / org.readium.r2.shared / ReadiumCSSName / fontOverride fontOverride \u00b6 [androidJvm]\\ fontOverride (\"--USER__fontOverride\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/font-override/#fontoverride","text":"[androidJvm]\\ fontOverride (\"--USER__fontOverride\")","title":"fontOverride"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/font-override/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/font-size/","text":"// shared / org.readium.r2.shared / ReadiumCSSName / fontSize fontSize \u00b6 [androidJvm]\\ fontSize (\"--USER__fontSize\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/font-size/#fontsize","text":"[androidJvm]\\ fontSize (\"--USER__fontSize\")","title":"fontSize"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/font-size/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/hyphens/","text":"// shared / org.readium.r2.shared / ReadiumCSSName / hyphens hyphens \u00b6 [androidJvm]\\ hyphens (\"--USER__bodyHyphens\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/hyphens/#hyphens","text":"[androidJvm]\\ hyphens (\"--USER__bodyHyphens\")","title":"hyphens"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/hyphens/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/letter-spacing/","text":"// shared / org.readium.r2.shared / ReadiumCSSName / letterSpacing letterSpacing \u00b6 [androidJvm]\\ letterSpacing (\"--USER__letterSpacing\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/letter-spacing/#letterspacing","text":"[androidJvm]\\ letterSpacing (\"--USER__letterSpacing\")","title":"letterSpacing"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/letter-spacing/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/ligatures/","text":"// shared / org.readium.r2.shared / ReadiumCSSName / ligatures ligatures \u00b6 [androidJvm]\\ ligatures (\"--USER__ligatures\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/ligatures/#ligatures","text":"[androidJvm]\\ ligatures (\"--USER__ligatures\")","title":"ligatures"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/ligatures/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/line-height/","text":"// shared / org.readium.r2.shared / ReadiumCSSName / lineHeight lineHeight \u00b6 [androidJvm]\\ lineHeight (\"--USER__lineHeight\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/line-height/#lineheight","text":"[androidJvm]\\ lineHeight (\"--USER__lineHeight\")","title":"lineHeight"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/line-height/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/page-margins/","text":"// shared / org.readium.r2.shared / ReadiumCSSName / pageMargins pageMargins \u00b6 [androidJvm]\\ pageMargins (\"--USER__pageMargins\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/page-margins/#pagemargins","text":"[androidJvm]\\ pageMargins (\"--USER__pageMargins\")","title":"pageMargins"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/page-margins/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/para-indent/","text":"// shared / org.readium.r2.shared / ReadiumCSSName / paraIndent paraIndent \u00b6 [androidJvm]\\ paraIndent (\"--USER__paraIndent\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/para-indent/#paraindent","text":"[androidJvm]\\ paraIndent (\"--USER__paraIndent\")","title":"paraIndent"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/para-indent/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/publisher-default/","text":"// shared / org.readium.r2.shared / ReadiumCSSName / publisherDefault publisherDefault \u00b6 [androidJvm]\\ publisherDefault (\"--USER__advancedSettings\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/publisher-default/#publisherdefault","text":"[androidJvm]\\ publisherDefault (\"--USER__advancedSettings\")","title":"publisherDefault"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/publisher-default/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/scroll/","text":"// shared / org.readium.r2.shared / ReadiumCSSName / scroll scroll \u00b6 [androidJvm]\\ scroll (\"--USER__scroll\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/scroll/#scroll","text":"[androidJvm]\\ scroll (\"--USER__scroll\")","title":"scroll"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/scroll/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/text-alignment/","text":"// shared / org.readium.r2.shared / ReadiumCSSName / textAlignment textAlignment \u00b6 [androidJvm]\\ textAlignment (\"--USER__textAlign\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/text-alignment/#textalignment","text":"[androidJvm]\\ textAlignment (\"--USER__textAlign\")","title":"textAlignment"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/text-alignment/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/word-spacing/","text":"// shared / org.readium.r2.shared / ReadiumCSSName / wordSpacing wordSpacing \u00b6 [androidJvm]\\ wordSpacing (\"--USER__wordSpacing\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/word-spacing/#wordspacing","text":"[androidJvm]\\ wordSpacing (\"--USER__wordSpacing\")","title":"wordSpacing"},{"location":"readium/shared/shared/org.readium.r2.shared/-readium-c-s-s-name/word-spacing/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int ref [androidJvm] val ref : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-root-file/","text":"// shared / org.readium.r2.shared / RootFile RootFile \u00b6 [androidJvm]\\ class RootFile Constructors \u00b6 RootFile [androidJvm] fun RootFile (rootPath: String = \"\", rootFilePath: String = \"\", mimetype: String = \"\", version: Double ? = null) Properties \u00b6 Name Summary mimetype [androidJvm] var mimetype : String rootFilePath [androidJvm] var rootFilePath : String rootPath [androidJvm] var rootPath : String version [androidJvm] var version : Double ? = null","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-root-file/#rootfile","text":"[androidJvm]\\ class RootFile","title":"RootFile"},{"location":"readium/shared/shared/org.readium.r2.shared/-root-file/#constructors","text":"RootFile [androidJvm] fun RootFile (rootPath: String = \"\", rootFilePath: String = \"\", mimetype: String = \"\", version: Double ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared/-root-file/#properties","text":"Name Summary mimetype [androidJvm] var mimetype : String rootFilePath [androidJvm] var rootFilePath : String rootPath [androidJvm] var rootPath : String version [androidJvm] var version : Double ? = null","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-root-file/-root-file/","text":"// shared / org.readium.r2.shared / RootFile / RootFile RootFile \u00b6 [androidJvm]\\ fun RootFile (rootPath: String = \"\", rootFilePath: String = \"\", mimetype: String = \"\", version: Double ? = null) fun RootFile ()","title":" root file"},{"location":"readium/shared/shared/org.readium.r2.shared/-root-file/-root-file/#rootfile","text":"[androidJvm]\\ fun RootFile (rootPath: String = \"\", rootFilePath: String = \"\", mimetype: String = \"\", version: Double ? = null) fun RootFile ()","title":"RootFile"},{"location":"readium/shared/shared/org.readium.r2.shared/-root-file/mimetype/","text":"// shared / org.readium.r2.shared / RootFile / mimetype mimetype \u00b6 [androidJvm]\\ var mimetype : String","title":"Mimetype"},{"location":"readium/shared/shared/org.readium.r2.shared/-root-file/mimetype/#mimetype","text":"[androidJvm]\\ var mimetype : String","title":"mimetype"},{"location":"readium/shared/shared/org.readium.r2.shared/-root-file/root-file-path/","text":"// shared / org.readium.r2.shared / RootFile / rootFilePath rootFilePath \u00b6 [androidJvm]\\ var rootFilePath : String","title":"Root file path"},{"location":"readium/shared/shared/org.readium.r2.shared/-root-file/root-file-path/#rootfilepath","text":"[androidJvm]\\ var rootFilePath : String","title":"rootFilePath"},{"location":"readium/shared/shared/org.readium.r2.shared/-root-file/root-path/","text":"// shared / org.readium.r2.shared / RootFile / rootPath rootPath \u00b6 [androidJvm]\\ var rootPath : String","title":"Root path"},{"location":"readium/shared/shared/org.readium.r2.shared/-root-file/root-path/#rootpath","text":"[androidJvm]\\ var rootPath : String","title":"rootPath"},{"location":"readium/shared/shared/org.readium.r2.shared/-root-file/version/","text":"// shared / org.readium.r2.shared / RootFile / version version \u00b6 [androidJvm]\\ var version : Double ? = null","title":"Version"},{"location":"readium/shared/shared/org.readium.r2.shared/-root-file/version/#version","text":"[androidJvm]\\ var version : Double ? = null","title":"version"},{"location":"readium/shared/shared/org.readium.r2.shared/-search/","text":"// shared / org.readium.r2.shared / Search Search \u00b6 [androidJvm]\\ @ Target (allowedTargets = [ AnnotationTarget.CLASS , AnnotationTarget.FUNCTION , AnnotationTarget.TYPEALIAS , AnnotationTarget.PROPERTY ]) annotation class Search","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-search/#search","text":"[androidJvm]\\ @ Target (allowedTargets = [ AnnotationTarget.CLASS , AnnotationTarget.FUNCTION , AnnotationTarget.TYPEALIAS , AnnotationTarget.PROPERTY ]) annotation class Search","title":"Search"},{"location":"readium/shared/shared/org.readium.r2.shared/-search/-search/","text":"// shared / org.readium.r2.shared / Search / Search Search \u00b6 [androidJvm]\\ fun Search ()","title":" search"},{"location":"readium/shared/shared/org.readium.r2.shared/-search/-search/#search","text":"[androidJvm]\\ fun Search ()","title":"Search"},{"location":"readium/shared/shared/org.readium.r2.shared/-switchable/","text":"// shared / org.readium.r2.shared / Switchable Switchable \u00b6 [androidJvm]\\ class Switchable (onValue: String , offValue: String , on: Boolean , ref: String , name: String ) : UserProperty Functions \u00b6 Name Summary getJson [androidJvm] fun getJson (): String switch [androidJvm] fun switch () toString [androidJvm] open override fun toString (): String Properties \u00b6 Name Summary name [androidJvm] var name : String on [androidJvm] var on : Boolean ref [androidJvm] var ref : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-switchable/#switchable","text":"[androidJvm]\\ class Switchable (onValue: String , offValue: String , on: Boolean , ref: String , name: String ) : UserProperty","title":"Switchable"},{"location":"readium/shared/shared/org.readium.r2.shared/-switchable/#functions","text":"Name Summary getJson [androidJvm] fun getJson (): String switch [androidJvm] fun switch () toString [androidJvm] open override fun toString (): String","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared/-switchable/#properties","text":"Name Summary name [androidJvm] var name : String on [androidJvm] var on : Boolean ref [androidJvm] var ref : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-switchable/-switchable/","text":"// shared / org.readium.r2.shared / Switchable / Switchable Switchable \u00b6 [androidJvm]\\ fun Switchable (onValue: String , offValue: String , on: Boolean , ref: String , name: String )","title":" switchable"},{"location":"readium/shared/shared/org.readium.r2.shared/-switchable/-switchable/#switchable","text":"[androidJvm]\\ fun Switchable (onValue: String , offValue: String , on: Boolean , ref: String , name: String )","title":"Switchable"},{"location":"readium/shared/shared/org.readium.r2.shared/-switchable/on/","text":"// shared / org.readium.r2.shared / Switchable / on on \u00b6 [androidJvm]\\ var on : Boolean","title":"On"},{"location":"readium/shared/shared/org.readium.r2.shared/-switchable/on/#on","text":"[androidJvm]\\ var on : Boolean","title":"on"},{"location":"readium/shared/shared/org.readium.r2.shared/-switchable/switch/","text":"// shared / org.readium.r2.shared / Switchable / switch switch \u00b6 [androidJvm]\\ fun switch ()","title":"Switch"},{"location":"readium/shared/shared/org.readium.r2.shared/-switchable/switch/#switch","text":"[androidJvm]\\ fun switch ()","title":"switch"},{"location":"readium/shared/shared/org.readium.r2.shared/-switchable/to-string/","text":"// shared / org.readium.r2.shared / Switchable / toString toString \u00b6 [androidJvm]\\ open override fun toString (): String","title":"To string"},{"location":"readium/shared/shared/org.readium.r2.shared/-switchable/to-string/#tostring","text":"[androidJvm]\\ open override fun toString (): String","title":"toString"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-exception/","text":"// shared / org.readium.r2.shared / UserException UserException \u00b6 [androidJvm]\\ open class UserException : Exception An exception that can be presented to the user using a localized message. Constructors \u00b6 UserException [androidJvm] fun UserException (@ StringRes userMessageId: Int , vararg args: Any ?, cause: Throwable ? = null) UserException [androidJvm] fun UserException (@ PluralsRes userMessageId: Int , quantity: Int ?, vararg args: Any ?, cause: Throwable ? = null) UserException [androidJvm] fun UserException (message: String , cause: Throwable ? = null) UserException [androidJvm] fun UserException (cause: UserException ) Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? Inheritors \u00b6 Name Resource ContentProtection Publication SearchException HttpException","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-exception/#userexception","text":"[androidJvm]\\ open class UserException : Exception An exception that can be presented to the user using a localized message.","title":"UserException"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-exception/#constructors","text":"UserException [androidJvm] fun UserException (@ StringRes userMessageId: Int , vararg args: Any ?, cause: Throwable ? = null) UserException [androidJvm] fun UserException (@ PluralsRes userMessageId: Int , quantity: Int ?, vararg args: Any ?, cause: Throwable ? = null) UserException [androidJvm] fun UserException (message: String , cause: Throwable ? = null) UserException [androidJvm] fun UserException (cause: UserException )","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-exception/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-exception/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-exception/#inheritors","text":"Name Resource ContentProtection Publication SearchException HttpException","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-exception/-user-exception/","text":"// shared / org.readium.r2.shared / UserException / UserException UserException \u00b6 [androidJvm]\\ fun UserException (@ StringRes userMessageId: Int , vararg args: Any ?, cause: Throwable ? = null) fun UserException (@ PluralsRes userMessageId: Int , quantity: Int ?, vararg args: Any ?, cause: Throwable ? = null) fun UserException (message: String , cause: Throwable ? = null) fun UserException (cause: UserException )","title":" user exception"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-exception/-user-exception/#userexception","text":"[androidJvm]\\ fun UserException (@ StringRes userMessageId: Int , vararg args: Any ?, cause: Throwable ? = null) fun UserException (@ PluralsRes userMessageId: Int , quantity: Int ?, vararg args: Any ?, cause: Throwable ? = null) fun UserException (message: String , cause: Throwable ? = null) fun UserException (cause: UserException )","title":"UserException"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-exception/get-user-message/","text":"// shared / org.readium.r2.shared / UserException / getUserMessage getUserMessage \u00b6 [androidJvm]\\ open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. Parameters \u00b6 androidJvm includesCauses Includes nested UserException causes in the user message when true.","title":"Get user message"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-exception/get-user-message/#getusermessage","text":"[androidJvm]\\ open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception.","title":"getUserMessage"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-exception/get-user-message/#parameters","text":"androidJvm includesCauses Includes nested UserException causes in the user message when true.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-properties/","text":"// shared / org.readium.r2.shared / UserProperties UserProperties \u00b6 [androidJvm]\\ class UserProperties : Serializable Functions \u00b6 Name Summary addEnumerable [androidJvm] fun addEnumerable (index: Int , values: List < String >, ref: String , name: String ) addIncremental [androidJvm] fun addIncremental (nValue: Float , min: Float , max: Float , step: Float , suffix: String , ref: String , name: String ) addSwitchable [androidJvm] fun addSwitchable (onValue: String , offValue: String , on: Boolean , ref: String , name: String ) getByRef [androidJvm] inline fun < T : UserProperty > getByRef (ref: String ): T Properties \u00b6 Name Summary properties [androidJvm] val properties : MutableList < UserProperty >","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-properties/#userproperties","text":"[androidJvm]\\ class UserProperties : Serializable","title":"UserProperties"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-properties/#functions","text":"Name Summary addEnumerable [androidJvm] fun addEnumerable (index: Int , values: List < String >, ref: String , name: String ) addIncremental [androidJvm] fun addIncremental (nValue: Float , min: Float , max: Float , step: Float , suffix: String , ref: String , name: String ) addSwitchable [androidJvm] fun addSwitchable (onValue: String , offValue: String , on: Boolean , ref: String , name: String ) getByRef [androidJvm] inline fun < T : UserProperty > getByRef (ref: String ): T","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-properties/#properties","text":"Name Summary properties [androidJvm] val properties : MutableList < UserProperty >","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-properties/-user-properties/","text":"// shared / org.readium.r2.shared / UserProperties / UserProperties UserProperties \u00b6 [androidJvm]\\ fun UserProperties ()","title":" user properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-properties/-user-properties/#userproperties","text":"[androidJvm]\\ fun UserProperties ()","title":"UserProperties"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-properties/add-enumerable/","text":"// shared / org.readium.r2.shared / UserProperties / addEnumerable addEnumerable \u00b6 [androidJvm]\\ fun addEnumerable (index: Int , values: List < String >, ref: String , name: String )","title":"Add enumerable"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-properties/add-enumerable/#addenumerable","text":"[androidJvm]\\ fun addEnumerable (index: Int , values: List < String >, ref: String , name: String )","title":"addEnumerable"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-properties/add-incremental/","text":"// shared / org.readium.r2.shared / UserProperties / addIncremental addIncremental \u00b6 [androidJvm]\\ fun addIncremental (nValue: Float , min: Float , max: Float , step: Float , suffix: String , ref: String , name: String )","title":"Add incremental"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-properties/add-incremental/#addincremental","text":"[androidJvm]\\ fun addIncremental (nValue: Float , min: Float , max: Float , step: Float , suffix: String , ref: String , name: String )","title":"addIncremental"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-properties/add-switchable/","text":"// shared / org.readium.r2.shared / UserProperties / addSwitchable addSwitchable \u00b6 [androidJvm]\\ fun addSwitchable (onValue: String , offValue: String , on: Boolean , ref: String , name: String )","title":"Add switchable"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-properties/add-switchable/#addswitchable","text":"[androidJvm]\\ fun addSwitchable (onValue: String , offValue: String , on: Boolean , ref: String , name: String )","title":"addSwitchable"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-properties/get-by-ref/","text":"// shared / org.readium.r2.shared / UserProperties / getByRef getByRef \u00b6 [androidJvm]\\ inline fun < T : UserProperty > getByRef (ref: String ): T","title":"Get by ref"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-properties/get-by-ref/#getbyref","text":"[androidJvm]\\ inline fun < T : UserProperty > getByRef (ref: String ): T","title":"getByRef"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-properties/properties/","text":"// shared / org.readium.r2.shared / UserProperties / properties properties \u00b6 [androidJvm]\\ val properties : MutableList < UserProperty >","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-properties/properties/#properties","text":"[androidJvm]\\ val properties : MutableList < UserProperty >","title":"properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-property/","text":"// shared / org.readium.r2.shared / UserProperty UserProperty \u00b6 [androidJvm]\\ sealed class UserProperty Functions \u00b6 Name Summary getJson [androidJvm] fun getJson (): String toString [androidJvm] abstract override fun toString (): String Properties \u00b6 Name Summary name [androidJvm] var name : String ref [androidJvm] var ref : String Inheritors \u00b6 Name Enumerable Incremental Switchable","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-property/#userproperty","text":"[androidJvm]\\ sealed class UserProperty","title":"UserProperty"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-property/#functions","text":"Name Summary getJson [androidJvm] fun getJson (): String toString [androidJvm] abstract override fun toString (): String","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-property/#properties","text":"Name Summary name [androidJvm] var name : String ref [androidJvm] var ref : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-property/#inheritors","text":"Name Enumerable Incremental Switchable","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-property/get-json/","text":"// shared / org.readium.r2.shared / UserProperty / getJson getJson \u00b6 [androidJvm]\\ fun getJson (): String","title":"Get json"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-property/get-json/#getjson","text":"[androidJvm]\\ fun getJson (): String","title":"getJson"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-property/name/","text":"// shared / org.readium.r2.shared / UserProperty / name name \u00b6 [androidJvm]\\ var name : String","title":"Name"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-property/name/#name","text":"[androidJvm]\\ var name : String","title":"name"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-property/ref/","text":"// shared / org.readium.r2.shared / UserProperty / ref ref \u00b6 [androidJvm]\\ var ref : String","title":"Ref"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-property/ref/#ref","text":"[androidJvm]\\ var ref : String","title":"ref"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-property/to-string/","text":"// shared / org.readium.r2.shared / UserProperty / toString toString \u00b6 [androidJvm]\\ abstract override fun toString (): String","title":"To string"},{"location":"readium/shared/shared/org.readium.r2.shared/-user-property/to-string/#tostring","text":"[androidJvm]\\ abstract override fun toString (): String","title":"toString"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/","text":"// shared / org.readium.r2.shared.drm Package org.readium.r2.shared.drm \u00b6 Types \u00b6 Name Summary DRM [androidJvm] data class DRM (brand: DRM.Brand ) : Serializable DRMLicense [androidJvm] interface DRMLicense : Serializable","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/#package-orgreadiumr2shareddrm","text":"","title":"Package org.readium.r2.shared.drm"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/#types","text":"Name Summary DRM [androidJvm] data class DRM (brand: DRM.Brand ) : Serializable DRMLicense [androidJvm] interface DRMLicense : Serializable","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/","text":"// shared / org.readium.r2.shared.drm / DRM DRM \u00b6 [androidJvm]\\ data class DRM (brand: DRM.Brand ) : Serializable Types \u00b6 Name Summary Brand [androidJvm] enum Brand : Enum < DRM.Brand > , Serializable Scheme [androidJvm] enum Scheme : Enum < DRM.Scheme > , Serializable Properties \u00b6 Name Summary brand [androidJvm] val brand : DRM.Brand license [androidJvm] var license : DRMLicense ? = null scheme [androidJvm] val scheme : DRM.Scheme","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/#drm","text":"[androidJvm]\\ data class DRM (brand: DRM.Brand ) : Serializable","title":"DRM"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/#types","text":"Name Summary Brand [androidJvm] enum Brand : Enum < DRM.Brand > , Serializable Scheme [androidJvm] enum Scheme : Enum < DRM.Scheme > , Serializable","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/#properties","text":"Name Summary brand [androidJvm] val brand : DRM.Brand license [androidJvm] var license : DRMLicense ? = null scheme [androidJvm] val scheme : DRM.Scheme","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-d-r-m/","text":"// shared / org.readium.r2.shared.drm / DRM / DRM DRM \u00b6 [androidJvm]\\ fun DRM (brand: DRM.Brand )","title":" d r m"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-d-r-m/#drm","text":"[androidJvm]\\ fun DRM (brand: DRM.Brand )","title":"DRM"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/brand/","text":"// shared / org.readium.r2.shared.drm / DRM / brand brand \u00b6 [androidJvm]\\ val brand : DRM.Brand","title":"Brand"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/brand/#brand","text":"[androidJvm]\\ val brand : DRM.Brand","title":"brand"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/license/","text":"// shared / org.readium.r2.shared.drm / DRM / license license \u00b6 [androidJvm]\\ var license : DRMLicense ? = null","title":"License"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/license/#license","text":"[androidJvm]\\ var license : DRMLicense ? = null","title":"license"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/scheme/","text":"// shared / org.readium.r2.shared.drm / DRM / scheme scheme \u00b6 [androidJvm]\\ val scheme : DRM.Scheme","title":"Scheme"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/scheme/#scheme","text":"[androidJvm]\\ val scheme : DRM.Scheme","title":"scheme"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-brand/","text":"// shared / org.readium.r2.shared.drm / DRM / Brand Brand \u00b6 [androidJvm]\\ enum Brand : Enum < DRM.Brand > , Serializable Entries \u00b6 lcp [androidJvm] lcp (\"lcp\") Types \u00b6 Name Summary Companion [androidJvm] object Companion : MapCompanion < String , DRM.Brand > Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-brand/#brand","text":"[androidJvm]\\ enum Brand : Enum < DRM.Brand > , Serializable","title":"Brand"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-brand/#entries","text":"lcp [androidJvm] lcp (\"lcp\")","title":"Entries"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-brand/#types","text":"Name Summary Companion [androidJvm] object Companion : MapCompanion < String , DRM.Brand >","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-brand/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-brand/raw-value/","text":"// shared / org.readium.r2.shared.drm / DRM / Brand / rawValue rawValue \u00b6 [androidJvm]\\ val rawValue : String","title":"Raw value"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-brand/raw-value/#rawvalue","text":"[androidJvm]\\ val rawValue : String","title":"rawValue"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-brand/-companion/","text":"// shared / org.readium.r2.shared.drm / DRM / Brand / Companion Companion \u00b6 [androidJvm]\\ object Companion : MapCompanion < String , DRM.Brand > Functions \u00b6 Name Summary get [androidJvm] open fun get (key: String ?): DRM.Brand ? Returns the element matching the key , or null if not found. invoke [androidJvm] open operator fun invoke (key: String ?): DRM.Brand ? Alias to get , to be used like keyMapper(\"a_key\"). Properties \u00b6 Name Summary keys [androidJvm] val keys : Set < String > Returns the available keys .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-brand/-companion/#companion","text":"[androidJvm]\\ object Companion : MapCompanion < String , DRM.Brand >","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-brand/-companion/#functions","text":"Name Summary get [androidJvm] open fun get (key: String ?): DRM.Brand ? Returns the element matching the key , or null if not found. invoke [androidJvm] open operator fun invoke (key: String ?): DRM.Brand ? Alias to get , to be used like keyMapper(\"a_key\").","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-brand/-companion/#properties","text":"Name Summary keys [androidJvm] val keys : Set < String > Returns the available keys .","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-brand/lcp/","text":"// shared / org.readium.r2.shared.drm / DRM / Brand / lcp lcp \u00b6 [androidJvm]\\ lcp (\"lcp\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-brand/lcp/#lcp","text":"[androidJvm]\\ lcp (\"lcp\")","title":"lcp"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-brand/lcp/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-scheme/","text":"// shared / org.readium.r2.shared.drm / DRM / Scheme Scheme \u00b6 [androidJvm]\\ enum Scheme : Enum < DRM.Scheme > , Serializable Entries \u00b6 lcp [androidJvm] lcp (\"http://readium.org/2014/01/lcp\") Types \u00b6 Name Summary Companion [androidJvm] object Companion : MapCompanion < String , DRM.Scheme > Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-scheme/#scheme","text":"[androidJvm]\\ enum Scheme : Enum < DRM.Scheme > , Serializable","title":"Scheme"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-scheme/#entries","text":"lcp [androidJvm] lcp (\"http://readium.org/2014/01/lcp\")","title":"Entries"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-scheme/#types","text":"Name Summary Companion [androidJvm] object Companion : MapCompanion < String , DRM.Scheme >","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-scheme/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-scheme/raw-value/","text":"// shared / org.readium.r2.shared.drm / DRM / Scheme / rawValue rawValue \u00b6 [androidJvm]\\ val rawValue : String","title":"Raw value"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-scheme/raw-value/#rawvalue","text":"[androidJvm]\\ val rawValue : String","title":"rawValue"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-scheme/-companion/","text":"// shared / org.readium.r2.shared.drm / DRM / Scheme / Companion Companion \u00b6 [androidJvm]\\ object Companion : MapCompanion < String , DRM.Scheme > Functions \u00b6 Name Summary get [androidJvm] open fun get (key: String ?): DRM.Scheme ? Returns the element matching the key , or null if not found. invoke [androidJvm] open operator fun invoke (key: String ?): DRM.Scheme ? Alias to get , to be used like keyMapper(\"a_key\"). Properties \u00b6 Name Summary keys [androidJvm] val keys : Set < String > Returns the available keys .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-scheme/-companion/#companion","text":"[androidJvm]\\ object Companion : MapCompanion < String , DRM.Scheme >","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-scheme/-companion/#functions","text":"Name Summary get [androidJvm] open fun get (key: String ?): DRM.Scheme ? Returns the element matching the key , or null if not found. invoke [androidJvm] open operator fun invoke (key: String ?): DRM.Scheme ? Alias to get , to be used like keyMapper(\"a_key\").","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-scheme/-companion/#properties","text":"Name Summary keys [androidJvm] val keys : Set < String > Returns the available keys .","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-scheme/lcp/","text":"// shared / org.readium.r2.shared.drm / DRM / Scheme / lcp lcp \u00b6 [androidJvm]\\ lcp (\"http://readium.org/2014/01/lcp\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-scheme/lcp/#lcp","text":"[androidJvm]\\ lcp (\"http://readium.org/2014/01/lcp\")","title":"lcp"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m/-scheme/lcp/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int rawValue [androidJvm] val rawValue : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m-license/","text":"// shared / org.readium.r2.shared.drm / DRMLicense DRMLicense \u00b6 [androidJvm]\\ interface DRMLicense : Serializable Functions \u00b6 Name Summary copy [androidJvm] abstract fun copy (text: String ): String ? decipher [androidJvm] abstract fun decipher (data: ByteArray ): ByteArray ? Properties \u00b6 Name Summary canCopy [androidJvm] abstract val canCopy : Boolean encryptionProfile [androidJvm] abstract val encryptionProfile : String ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m-license/#drmlicense","text":"[androidJvm]\\ interface DRMLicense : Serializable","title":"DRMLicense"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m-license/#functions","text":"Name Summary copy [androidJvm] abstract fun copy (text: String ): String ? decipher [androidJvm] abstract fun decipher (data: ByteArray ): ByteArray ?","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m-license/#properties","text":"Name Summary canCopy [androidJvm] abstract val canCopy : Boolean encryptionProfile [androidJvm] abstract val encryptionProfile : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m-license/can-copy/","text":"// shared / org.readium.r2.shared.drm / DRMLicense / canCopy canCopy \u00b6 [androidJvm]\\ abstract val canCopy : Boolean","title":"Can copy"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m-license/can-copy/#cancopy","text":"[androidJvm]\\ abstract val canCopy : Boolean","title":"canCopy"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m-license/copy/","text":"// shared / org.readium.r2.shared.drm / DRMLicense / copy copy \u00b6 [androidJvm]\\ abstract fun copy (text: String ): String ?","title":"Copy"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m-license/copy/#copy","text":"[androidJvm]\\ abstract fun copy (text: String ): String ?","title":"copy"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m-license/decipher/","text":"// shared / org.readium.r2.shared.drm / DRMLicense / decipher decipher \u00b6 [androidJvm]\\ abstract fun decipher (data: ByteArray ): ByteArray ?","title":"Decipher"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m-license/decipher/#decipher","text":"[androidJvm]\\ abstract fun decipher (data: ByteArray ): ByteArray ?","title":"decipher"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m-license/encryption-profile/","text":"// shared / org.readium.r2.shared.drm / DRMLicense / encryptionProfile encryptionProfile \u00b6 [androidJvm]\\ abstract val encryptionProfile : String ?","title":"Encryption profile"},{"location":"readium/shared/shared/org.readium.r2.shared.drm/-d-r-m-license/encryption-profile/#encryptionprofile","text":"[androidJvm]\\ abstract val encryptionProfile : String ?","title":"encryptionProfile"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/","text":"// shared / org.readium.r2.shared.extensions Package org.readium.r2.shared.extensions \u00b6 Types \u00b6 Name Summary JSONParceler [androidJvm] object JSONParceler : Parceler< Map < String , Any >> Implementation of a Parceler to be used with @Parcelize to serialize JSON objects. Functions \u00b6 Name Summary addPrefix [androidJvm] fun String . addPrefix (prefix: CharSequence ): String If this string starts with the given prefix , returns this string. Otherwise, returns a copy of this string after adding the prefix . asInstance [androidJvm] inline fun < T > Throwable . asInstance (): T ? fun < R > Throwable . asInstance (klass: Class < R >): R ? Finds the first cause instance of the given type. coerceFirstNonNegative [androidJvm] fun LongRange . coerceFirstNonNegative (): LongRange coerceIn [androidJvm] fun LongRange . coerceIn (range: LongRange ): LongRange destroyPublication [androidJvm] fun Intent . destroyPublication (activity: Activity ?) getPublication [androidJvm] fun Intent . getPublication (activity: Activity ?): Publication getPublicationOrNull [androidJvm] fun Intent . getPublicationOrNull (): Publication ? fun Bundle . getPublicationOrNull (): Publication ? inflate [androidJvm] fun ByteArray . inflate (nowrap: Boolean = false, bufferSize: Int = 32 * 1024): ByteArray Inflates a ZIP-compressed ByteArray . iso8601ToDate [androidJvm] fun String . iso8601ToDate (): Date ? isParentOf [androidJvm] fun File . isParentOf (other: File ): Boolean Returns whether the other is a descendant of this file. mapNotNull [androidJvm] fun < T > JSONArray . mapNotNull (transform: ( Any ) -> T ?): List < T > Returns a list containing the results of applying the given transform function to each element in the original JSONArray . If the tranform returns null, it is not included in the output list. [androidJvm] fun < T > JSONObject . mapNotNull (transform: ( Pair < String , Any >) -> T ?): List < T > Returns a list containing the results of applying the given transform function to each element in the original JSONObject . If the tranform returns null, it is not included in the output list. md5 [androidJvm] fun File . md5 (): String ? Computes the MD5 hash of the file. [androidJvm] fun ByteArray . md5 (): String ? Computes the MD5 hash of the byte array. mediaType [androidJvm] suspend fun File . mediaType (mediaTypeHint: String ? = null): MediaType Sniffs the media type of the file. optNullableBoolean [androidJvm] fun JSONObject . optNullableBoolean (name: String , remove: Boolean = false): Boolean ? Returns the value mapped by name if it exists, coercing it if necessary, or null if no such mapping exists. If remove is true, then the mapping will be removed from the JSONObject . optNullableDouble [androidJvm] fun JSONObject . optNullableDouble (name: String , remove: Boolean = false): Double ? Returns the value mapped by name if it exists, coercing it if necessary, or null if no such mapping exists. If remove is true, then the mapping will be removed from the JSONObject . optNullableInt [androidJvm] fun JSONObject . optNullableInt (name: String , remove: Boolean = false): Int ? Returns the value mapped by name if it exists, coercing it if necessary, or null if no such mapping exists. If remove is true, then the mapping will be removed from the JSONObject . optNullableLong [androidJvm] fun JSONObject . optNullableLong (name: String , remove: Boolean = false): Long ? Returns the value mapped by name if it exists, coercing it if necessary, or null if no such mapping exists. If remove is true, then the mapping will be removed from the JSONObject . optNullableString [androidJvm] fun JSONObject . optNullableString (name: String , remove: Boolean = false): String ? Returns the value mapped by name if it exists, coercing it if necessary, or null if no such mapping exists. If remove is true, then the mapping will be removed from the JSONObject . optPositiveDouble [androidJvm] fun JSONObject . optPositiveDouble (name: String , fallback: Double = -1.0, remove: Boolean = false): Double ? Returns the value mapped by name if it exists and is a positive double or can be coerced to a positive double, or fallback otherwise. If remove is true, then the mapping will be removed from the JSONObject . optPositiveInt [androidJvm] fun JSONObject . optPositiveInt (name: String , fallback: Int = -1, remove: Boolean = false): Int ? Returns the value mapped by name if it exists and is a positive integer or can be coerced to a positive integer, or fallback otherwise. If remove is true, then the mapping will be removed from the JSONObject . optStringsFromArrayOrSingle [androidJvm] fun JSONObject . optStringsFromArrayOrSingle (name: String , remove: Boolean = false): List < String > Returns the value mapped by name if it exists and is either a JSONArray of String or a single String value, or an empty list otherwise. If remove is true, then the mapping will be removed from the JSONObject . putIfNotEmpty [androidJvm] fun JSONObject . putIfNotEmpty (name: String , jsonArray: JSONArray ?) Maps name to jsonArray , clobbering any existing name/value mapping with the same name. If the JSONArray is empty, any existing mapping for name is removed. [androidJvm] fun JSONObject . putIfNotEmpty (name: String , jsonObject: JSONObject ?) Maps name to jsonObject , clobbering any existing name/value mapping with the same name. If the JSONObject is empty, any existing mapping for name is removed. [androidJvm] fun JSONObject . putIfNotEmpty (name: String , jsonable: JSONable ?) Maps name to jsonable after converting it to a JSONObject , clobbering any existing name/value mapping with the same name. If the JSONObject argument is empty, any existing mapping for name is removed. putPublication [androidJvm] fun Intent . putPublication (publication: Publication ) fun Bundle . putPublication (publication: Publication ) putPublicationFrom [androidJvm] fun Intent . putPublicationFrom (activity: Activity ) fun Bundle . putPublicationFrom (activity: Activity ) removeLastComponent [androidJvm] fun URL . removeLastComponent (): URL requireLengthFitInt [androidJvm] fun LongRange . requireLengthFitInt (): LongRange toIso8601String [androidJvm] fun Date . toIso8601String (timeZone: TimeZone = TimeZone.getTimeZone(\"UTC\")): String toList [androidJvm] fun JSONArray . toList (): List < Any > Unwraps recursively the JSONArray to a List. toMap [androidJvm] fun JSONObject . toMap (): Map < String , Any > Unwraps recursively the JSONObject to a Map. toPng [androidJvm] suspend fun Bitmap . toPng (quality: Int = 100): ByteArray ? tryOr [androidJvm] inline fun < T > tryOr (default: T , closure: () -> T ): T Returns the result of the given closure , or default if an Exception was raised. tryOrLog [androidJvm] inline fun < T > tryOrLog (closure: () -> T ): T ? Returns the result of the given closure , or null if an Exception was raised. The Exception will be logged. tryOrNull [androidJvm] inline fun < T > tryOrNull (closure: () -> T ): T ? Returns the result of the given closure , or null if an Exception was raised. Properties \u00b6 Name Summary extension [androidJvm] val URL . extension : String ? Returns the file extension of the URL.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/#package-orgreadiumr2sharedextensions","text":"","title":"Package org.readium.r2.shared.extensions"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/#types","text":"Name Summary JSONParceler [androidJvm] object JSONParceler : Parceler< Map < String , Any >> Implementation of a Parceler to be used with @Parcelize to serialize JSON objects.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/#functions","text":"Name Summary addPrefix [androidJvm] fun String . addPrefix (prefix: CharSequence ): String If this string starts with the given prefix , returns this string. Otherwise, returns a copy of this string after adding the prefix . asInstance [androidJvm] inline fun < T > Throwable . asInstance (): T ? fun < R > Throwable . asInstance (klass: Class < R >): R ? Finds the first cause instance of the given type. coerceFirstNonNegative [androidJvm] fun LongRange . coerceFirstNonNegative (): LongRange coerceIn [androidJvm] fun LongRange . coerceIn (range: LongRange ): LongRange destroyPublication [androidJvm] fun Intent . destroyPublication (activity: Activity ?) getPublication [androidJvm] fun Intent . getPublication (activity: Activity ?): Publication getPublicationOrNull [androidJvm] fun Intent . getPublicationOrNull (): Publication ? fun Bundle . getPublicationOrNull (): Publication ? inflate [androidJvm] fun ByteArray . inflate (nowrap: Boolean = false, bufferSize: Int = 32 * 1024): ByteArray Inflates a ZIP-compressed ByteArray . iso8601ToDate [androidJvm] fun String . iso8601ToDate (): Date ? isParentOf [androidJvm] fun File . isParentOf (other: File ): Boolean Returns whether the other is a descendant of this file. mapNotNull [androidJvm] fun < T > JSONArray . mapNotNull (transform: ( Any ) -> T ?): List < T > Returns a list containing the results of applying the given transform function to each element in the original JSONArray . If the tranform returns null, it is not included in the output list. [androidJvm] fun < T > JSONObject . mapNotNull (transform: ( Pair < String , Any >) -> T ?): List < T > Returns a list containing the results of applying the given transform function to each element in the original JSONObject . If the tranform returns null, it is not included in the output list. md5 [androidJvm] fun File . md5 (): String ? Computes the MD5 hash of the file. [androidJvm] fun ByteArray . md5 (): String ? Computes the MD5 hash of the byte array. mediaType [androidJvm] suspend fun File . mediaType (mediaTypeHint: String ? = null): MediaType Sniffs the media type of the file. optNullableBoolean [androidJvm] fun JSONObject . optNullableBoolean (name: String , remove: Boolean = false): Boolean ? Returns the value mapped by name if it exists, coercing it if necessary, or null if no such mapping exists. If remove is true, then the mapping will be removed from the JSONObject . optNullableDouble [androidJvm] fun JSONObject . optNullableDouble (name: String , remove: Boolean = false): Double ? Returns the value mapped by name if it exists, coercing it if necessary, or null if no such mapping exists. If remove is true, then the mapping will be removed from the JSONObject . optNullableInt [androidJvm] fun JSONObject . optNullableInt (name: String , remove: Boolean = false): Int ? Returns the value mapped by name if it exists, coercing it if necessary, or null if no such mapping exists. If remove is true, then the mapping will be removed from the JSONObject . optNullableLong [androidJvm] fun JSONObject . optNullableLong (name: String , remove: Boolean = false): Long ? Returns the value mapped by name if it exists, coercing it if necessary, or null if no such mapping exists. If remove is true, then the mapping will be removed from the JSONObject . optNullableString [androidJvm] fun JSONObject . optNullableString (name: String , remove: Boolean = false): String ? Returns the value mapped by name if it exists, coercing it if necessary, or null if no such mapping exists. If remove is true, then the mapping will be removed from the JSONObject . optPositiveDouble [androidJvm] fun JSONObject . optPositiveDouble (name: String , fallback: Double = -1.0, remove: Boolean = false): Double ? Returns the value mapped by name if it exists and is a positive double or can be coerced to a positive double, or fallback otherwise. If remove is true, then the mapping will be removed from the JSONObject . optPositiveInt [androidJvm] fun JSONObject . optPositiveInt (name: String , fallback: Int = -1, remove: Boolean = false): Int ? Returns the value mapped by name if it exists and is a positive integer or can be coerced to a positive integer, or fallback otherwise. If remove is true, then the mapping will be removed from the JSONObject . optStringsFromArrayOrSingle [androidJvm] fun JSONObject . optStringsFromArrayOrSingle (name: String , remove: Boolean = false): List < String > Returns the value mapped by name if it exists and is either a JSONArray of String or a single String value, or an empty list otherwise. If remove is true, then the mapping will be removed from the JSONObject . putIfNotEmpty [androidJvm] fun JSONObject . putIfNotEmpty (name: String , jsonArray: JSONArray ?) Maps name to jsonArray , clobbering any existing name/value mapping with the same name. If the JSONArray is empty, any existing mapping for name is removed. [androidJvm] fun JSONObject . putIfNotEmpty (name: String , jsonObject: JSONObject ?) Maps name to jsonObject , clobbering any existing name/value mapping with the same name. If the JSONObject is empty, any existing mapping for name is removed. [androidJvm] fun JSONObject . putIfNotEmpty (name: String , jsonable: JSONable ?) Maps name to jsonable after converting it to a JSONObject , clobbering any existing name/value mapping with the same name. If the JSONObject argument is empty, any existing mapping for name is removed. putPublication [androidJvm] fun Intent . putPublication (publication: Publication ) fun Bundle . putPublication (publication: Publication ) putPublicationFrom [androidJvm] fun Intent . putPublicationFrom (activity: Activity ) fun Bundle . putPublicationFrom (activity: Activity ) removeLastComponent [androidJvm] fun URL . removeLastComponent (): URL requireLengthFitInt [androidJvm] fun LongRange . requireLengthFitInt (): LongRange toIso8601String [androidJvm] fun Date . toIso8601String (timeZone: TimeZone = TimeZone.getTimeZone(\"UTC\")): String toList [androidJvm] fun JSONArray . toList (): List < Any > Unwraps recursively the JSONArray to a List. toMap [androidJvm] fun JSONObject . toMap (): Map < String , Any > Unwraps recursively the JSONObject to a Map. toPng [androidJvm] suspend fun Bitmap . toPng (quality: Int = 100): ByteArray ? tryOr [androidJvm] inline fun < T > tryOr (default: T , closure: () -> T ): T Returns the result of the given closure , or default if an Exception was raised. tryOrLog [androidJvm] inline fun < T > tryOrLog (closure: () -> T ): T ? Returns the result of the given closure , or null if an Exception was raised. The Exception will be logged. tryOrNull [androidJvm] inline fun < T > tryOrNull (closure: () -> T ): T ? Returns the result of the given closure , or null if an Exception was raised.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/#properties","text":"Name Summary extension [androidJvm] val URL . extension : String ? Returns the file extension of the URL.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/add-prefix/","text":"// shared / org.readium.r2.shared.extensions / addPrefix addPrefix \u00b6 [androidJvm]\\ fun String . addPrefix (prefix: CharSequence ): String If this string starts with the given prefix , returns this string. Otherwise, returns a copy of this string after adding the prefix .","title":"Add prefix"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/add-prefix/#addprefix","text":"[androidJvm]\\ fun String . addPrefix (prefix: CharSequence ): String If this string starts with the given prefix , returns this string. Otherwise, returns a copy of this string after adding the prefix .","title":"addPrefix"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/as-instance/","text":"// shared / org.readium.r2.shared.extensions / asInstance asInstance \u00b6 [androidJvm]\\ inline fun < T > Throwable . asInstance (): T ? fun < R > Throwable . asInstance (klass: Class < R >): R ? Finds the first cause instance of the given type.","title":"As instance"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/as-instance/#asinstance","text":"[androidJvm]\\ inline fun < T > Throwable . asInstance (): T ? fun < R > Throwable . asInstance (klass: Class < R >): R ? Finds the first cause instance of the given type.","title":"asInstance"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/coerce-first-non-negative/","text":"// shared / org.readium.r2.shared.extensions / coerceFirstNonNegative coerceFirstNonNegative \u00b6 [androidJvm]\\ fun LongRange . coerceFirstNonNegative (): LongRange","title":"Coerce first non negative"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/coerce-first-non-negative/#coercefirstnonnegative","text":"[androidJvm]\\ fun LongRange . coerceFirstNonNegative (): LongRange","title":"coerceFirstNonNegative"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/coerce-in/","text":"// shared / org.readium.r2.shared.extensions / coerceIn coerceIn \u00b6 [androidJvm]\\ fun LongRange . coerceIn (range: LongRange ): LongRange","title":"Coerce in"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/coerce-in/#coercein","text":"[androidJvm]\\ fun LongRange . coerceIn (range: LongRange ): LongRange","title":"coerceIn"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/destroy-publication/","text":"// shared / org.readium.r2.shared.extensions / destroyPublication destroyPublication \u00b6 [androidJvm]\\ fun Intent . destroyPublication (activity: Activity ?)","title":"Destroy publication"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/destroy-publication/#destroypublication","text":"[androidJvm]\\ fun Intent . destroyPublication (activity: Activity ?)","title":"destroyPublication"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/extension/","text":"// shared / org.readium.r2.shared.extensions / extension extension \u00b6 [androidJvm]\\ val URL . extension : String ? Returns the file extension of the URL.","title":"Extension"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/extension/#extension","text":"[androidJvm]\\ val URL . extension : String ? Returns the file extension of the URL.","title":"extension"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/get-publication-or-null/","text":"// shared / org.readium.r2.shared.extensions / getPublicationOrNull getPublicationOrNull \u00b6 [androidJvm]\\ fun Intent . getPublicationOrNull (): Publication ? fun Bundle . getPublicationOrNull (): Publication ?","title":"Get publication or null"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/get-publication-or-null/#getpublicationornull","text":"[androidJvm]\\ fun Intent . getPublicationOrNull (): Publication ? fun Bundle . getPublicationOrNull (): Publication ?","title":"getPublicationOrNull"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/get-publication/","text":"// shared / org.readium.r2.shared.extensions / getPublication getPublication \u00b6 [androidJvm]\\ fun Intent . getPublication (activity: Activity ?): Publication","title":"Get publication"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/get-publication/#getpublication","text":"[androidJvm]\\ fun Intent . getPublication (activity: Activity ?): Publication","title":"getPublication"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/inflate/","text":"// shared / org.readium.r2.shared.extensions / inflate inflate \u00b6 [androidJvm]\\ fun ByteArray . inflate (nowrap: Boolean = false, bufferSize: Int = 32 * 1024): ByteArray Inflates a ZIP-compressed ByteArray . Parameters \u00b6 androidJvm nowrap If true then support GZIP compatible compression, see the documentation of Inflater","title":"Inflate"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/inflate/#inflate","text":"[androidJvm]\\ fun ByteArray . inflate (nowrap: Boolean = false, bufferSize: Int = 32 * 1024): ByteArray Inflates a ZIP-compressed ByteArray .","title":"inflate"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/inflate/#parameters","text":"androidJvm nowrap If true then support GZIP compatible compression, see the documentation of Inflater","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/is-parent-of/","text":"// shared / org.readium.r2.shared.extensions / isParentOf isParentOf \u00b6 [androidJvm]\\ fun File . isParentOf (other: File ): Boolean Returns whether the other is a descendant of this file.","title":"Is parent of"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/is-parent-of/#isparentof","text":"[androidJvm]\\ fun File . isParentOf (other: File ): Boolean Returns whether the other is a descendant of this file.","title":"isParentOf"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/iso8601-to-date/","text":"// shared / org.readium.r2.shared.extensions / iso8601ToDate iso8601ToDate \u00b6 [androidJvm]\\ fun String . iso8601ToDate (): Date ?","title":"Iso8601 to date"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/iso8601-to-date/#iso8601todate","text":"[androidJvm]\\ fun String . iso8601ToDate (): Date ?","title":"iso8601ToDate"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/map-not-null/","text":"// shared / org.readium.r2.shared.extensions / mapNotNull mapNotNull \u00b6 [androidJvm]\\ fun < T > JSONObject . mapNotNull (transform: ( Pair < String , Any >) -> T ?): List < T > Returns a list containing the results of applying the given transform function to each element in the original JSONObject . If the tranform returns null, it is not included in the output list. [androidJvm]\\ fun < T > JSONArray . mapNotNull (transform: ( Any ) -> T ?): List < T > Returns a list containing the results of applying the given transform function to each element in the original JSONArray . If the tranform returns null, it is not included in the output list.","title":"Map not null"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/map-not-null/#mapnotnull","text":"[androidJvm]\\ fun < T > JSONObject . mapNotNull (transform: ( Pair < String , Any >) -> T ?): List < T > Returns a list containing the results of applying the given transform function to each element in the original JSONObject . If the tranform returns null, it is not included in the output list. [androidJvm]\\ fun < T > JSONArray . mapNotNull (transform: ( Any ) -> T ?): List < T > Returns a list containing the results of applying the given transform function to each element in the original JSONArray . If the tranform returns null, it is not included in the output list.","title":"mapNotNull"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/md5/","text":"// shared / org.readium.r2.shared.extensions / md5 md5 \u00b6 [androidJvm]\\ fun ByteArray . md5 (): String ? Computes the MD5 hash of the byte array. [androidJvm]\\ fun File . md5 (): String ? Computes the MD5 hash of the file. Returns null if File is a directory or a file that failed to be read.","title":"Md5"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/md5/#md5","text":"[androidJvm]\\ fun ByteArray . md5 (): String ? Computes the MD5 hash of the byte array. [androidJvm]\\ fun File . md5 (): String ? Computes the MD5 hash of the file. Returns null if File is a directory or a file that failed to be read.","title":"md5"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/media-type/","text":"// shared / org.readium.r2.shared.extensions / mediaType mediaType \u00b6 [androidJvm]\\ suspend fun File . mediaType (mediaTypeHint: String ? = null): MediaType Sniffs the media type of the file. If unknown, fallback on MediaType.BINARY.","title":"Media type"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/media-type/#mediatype","text":"[androidJvm]\\ suspend fun File . mediaType (mediaTypeHint: String ? = null): MediaType Sniffs the media type of the file. If unknown, fallback on MediaType.BINARY.","title":"mediaType"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/opt-nullable-boolean/","text":"// shared / org.readium.r2.shared.extensions / optNullableBoolean optNullableBoolean \u00b6 [androidJvm]\\ fun JSONObject . optNullableBoolean (name: String , remove: Boolean = false): Boolean ? Returns the value mapped by name if it exists, coercing it if necessary, or null if no such mapping exists. If remove is true, then the mapping will be removed from the JSONObject .","title":"Opt nullable boolean"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/opt-nullable-boolean/#optnullableboolean","text":"[androidJvm]\\ fun JSONObject . optNullableBoolean (name: String , remove: Boolean = false): Boolean ? Returns the value mapped by name if it exists, coercing it if necessary, or null if no such mapping exists. If remove is true, then the mapping will be removed from the JSONObject .","title":"optNullableBoolean"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/opt-nullable-double/","text":"// shared / org.readium.r2.shared.extensions / optNullableDouble optNullableDouble \u00b6 [androidJvm]\\ fun JSONObject . optNullableDouble (name: String , remove: Boolean = false): Double ? Returns the value mapped by name if it exists, coercing it if necessary, or null if no such mapping exists. If remove is true, then the mapping will be removed from the JSONObject .","title":"Opt nullable double"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/opt-nullable-double/#optnullabledouble","text":"[androidJvm]\\ fun JSONObject . optNullableDouble (name: String , remove: Boolean = false): Double ? Returns the value mapped by name if it exists, coercing it if necessary, or null if no such mapping exists. If remove is true, then the mapping will be removed from the JSONObject .","title":"optNullableDouble"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/opt-nullable-int/","text":"// shared / org.readium.r2.shared.extensions / optNullableInt optNullableInt \u00b6 [androidJvm]\\ fun JSONObject . optNullableInt (name: String , remove: Boolean = false): Int ? Returns the value mapped by name if it exists, coercing it if necessary, or null if no such mapping exists. If remove is true, then the mapping will be removed from the JSONObject .","title":"Opt nullable int"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/opt-nullable-int/#optnullableint","text":"[androidJvm]\\ fun JSONObject . optNullableInt (name: String , remove: Boolean = false): Int ? Returns the value mapped by name if it exists, coercing it if necessary, or null if no such mapping exists. If remove is true, then the mapping will be removed from the JSONObject .","title":"optNullableInt"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/opt-nullable-long/","text":"// shared / org.readium.r2.shared.extensions / optNullableLong optNullableLong \u00b6 [androidJvm]\\ fun JSONObject . optNullableLong (name: String , remove: Boolean = false): Long ? Returns the value mapped by name if it exists, coercing it if necessary, or null if no such mapping exists. If remove is true, then the mapping will be removed from the JSONObject .","title":"Opt nullable long"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/opt-nullable-long/#optnullablelong","text":"[androidJvm]\\ fun JSONObject . optNullableLong (name: String , remove: Boolean = false): Long ? Returns the value mapped by name if it exists, coercing it if necessary, or null if no such mapping exists. If remove is true, then the mapping will be removed from the JSONObject .","title":"optNullableLong"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/opt-nullable-string/","text":"// shared / org.readium.r2.shared.extensions / optNullableString optNullableString \u00b6 [androidJvm]\\ fun JSONObject . optNullableString (name: String , remove: Boolean = false): String ? Returns the value mapped by name if it exists, coercing it if necessary, or null if no such mapping exists. If remove is true, then the mapping will be removed from the JSONObject .","title":"Opt nullable string"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/opt-nullable-string/#optnullablestring","text":"[androidJvm]\\ fun JSONObject . optNullableString (name: String , remove: Boolean = false): String ? Returns the value mapped by name if it exists, coercing it if necessary, or null if no such mapping exists. If remove is true, then the mapping will be removed from the JSONObject .","title":"optNullableString"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/opt-positive-double/","text":"// shared / org.readium.r2.shared.extensions / optPositiveDouble optPositiveDouble \u00b6 [androidJvm]\\ fun JSONObject . optPositiveDouble (name: String , fallback: Double = -1.0, remove: Boolean = false): Double ? Returns the value mapped by name if it exists and is a positive double or can be coerced to a positive double, or fallback otherwise. If remove is true, then the mapping will be removed from the JSONObject .","title":"Opt positive double"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/opt-positive-double/#optpositivedouble","text":"[androidJvm]\\ fun JSONObject . optPositiveDouble (name: String , fallback: Double = -1.0, remove: Boolean = false): Double ? Returns the value mapped by name if it exists and is a positive double or can be coerced to a positive double, or fallback otherwise. If remove is true, then the mapping will be removed from the JSONObject .","title":"optPositiveDouble"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/opt-positive-int/","text":"// shared / org.readium.r2.shared.extensions / optPositiveInt optPositiveInt \u00b6 [androidJvm]\\ fun JSONObject . optPositiveInt (name: String , fallback: Int = -1, remove: Boolean = false): Int ? Returns the value mapped by name if it exists and is a positive integer or can be coerced to a positive integer, or fallback otherwise. If remove is true, then the mapping will be removed from the JSONObject .","title":"Opt positive int"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/opt-positive-int/#optpositiveint","text":"[androidJvm]\\ fun JSONObject . optPositiveInt (name: String , fallback: Int = -1, remove: Boolean = false): Int ? Returns the value mapped by name if it exists and is a positive integer or can be coerced to a positive integer, or fallback otherwise. If remove is true, then the mapping will be removed from the JSONObject .","title":"optPositiveInt"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/opt-strings-from-array-or-single/","text":"// shared / org.readium.r2.shared.extensions / optStringsFromArrayOrSingle optStringsFromArrayOrSingle \u00b6 [androidJvm]\\ fun JSONObject . optStringsFromArrayOrSingle (name: String , remove: Boolean = false): List < String > Returns the value mapped by name if it exists and is either a JSONArray of String or a single String value, or an empty list otherwise. If remove is true, then the mapping will be removed from the JSONObject . E.g. \"a\", \"b\" or \"a\"","title":"Opt strings from array or single"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/opt-strings-from-array-or-single/#optstringsfromarrayorsingle","text":"[androidJvm]\\ fun JSONObject . optStringsFromArrayOrSingle (name: String , remove: Boolean = false): List < String > Returns the value mapped by name if it exists and is either a JSONArray of String or a single String value, or an empty list otherwise. If remove is true, then the mapping will be removed from the JSONObject . E.g. \"a\", \"b\" or \"a\"","title":"optStringsFromArrayOrSingle"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/put-if-not-empty/","text":"// shared / org.readium.r2.shared.extensions / putIfNotEmpty putIfNotEmpty \u00b6 [androidJvm]\\ fun JSONObject . putIfNotEmpty (name: String , jsonObject: JSONObject ?) Maps name to jsonObject , clobbering any existing name/value mapping with the same name. If the JSONObject is empty, any existing mapping for name is removed. [androidJvm]\\ fun JSONObject . putIfNotEmpty (name: String , jsonArray: JSONArray ?) Maps name to jsonArray , clobbering any existing name/value mapping with the same name. If the JSONArray is empty, any existing mapping for name is removed. [androidJvm]\\ fun JSONObject . putIfNotEmpty (name: String , jsonable: JSONable ?) Maps name to jsonable after converting it to a JSONObject , clobbering any existing name/value mapping with the same name. If the JSONObject argument is empty, any existing mapping for name is removed.","title":"Put if not empty"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/put-if-not-empty/#putifnotempty","text":"[androidJvm]\\ fun JSONObject . putIfNotEmpty (name: String , jsonObject: JSONObject ?) Maps name to jsonObject , clobbering any existing name/value mapping with the same name. If the JSONObject is empty, any existing mapping for name is removed. [androidJvm]\\ fun JSONObject . putIfNotEmpty (name: String , jsonArray: JSONArray ?) Maps name to jsonArray , clobbering any existing name/value mapping with the same name. If the JSONArray is empty, any existing mapping for name is removed. [androidJvm]\\ fun JSONObject . putIfNotEmpty (name: String , jsonable: JSONable ?) Maps name to jsonable after converting it to a JSONObject , clobbering any existing name/value mapping with the same name. If the JSONObject argument is empty, any existing mapping for name is removed.","title":"putIfNotEmpty"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/put-publication-from/","text":"// shared / org.readium.r2.shared.extensions / putPublicationFrom putPublicationFrom \u00b6 [androidJvm]\\ fun Intent . putPublicationFrom (activity: Activity ) fun Bundle . putPublicationFrom (activity: Activity )","title":"Put publication from"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/put-publication-from/#putpublicationfrom","text":"[androidJvm]\\ fun Intent . putPublicationFrom (activity: Activity ) fun Bundle . putPublicationFrom (activity: Activity )","title":"putPublicationFrom"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/put-publication/","text":"// shared / org.readium.r2.shared.extensions / putPublication putPublication \u00b6 [androidJvm]\\ fun Intent . putPublication (publication: Publication ) fun Bundle . putPublication (publication: Publication )","title":"Put publication"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/put-publication/#putpublication","text":"[androidJvm]\\ fun Intent . putPublication (publication: Publication ) fun Bundle . putPublication (publication: Publication )","title":"putPublication"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/remove-last-component/","text":"// shared / org.readium.r2.shared.extensions / removeLastComponent removeLastComponent \u00b6 [androidJvm]\\ fun URL . removeLastComponent (): URL","title":"Remove last component"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/remove-last-component/#removelastcomponent","text":"[androidJvm]\\ fun URL . removeLastComponent (): URL","title":"removeLastComponent"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/require-length-fit-int/","text":"// shared / org.readium.r2.shared.extensions / requireLengthFitInt requireLengthFitInt \u00b6 [androidJvm]\\ fun LongRange . requireLengthFitInt (): LongRange","title":"Require length fit int"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/require-length-fit-int/#requirelengthfitint","text":"[androidJvm]\\ fun LongRange . requireLengthFitInt (): LongRange","title":"requireLengthFitInt"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/to-iso8601-string/","text":"// shared / org.readium.r2.shared.extensions / toIso8601String toIso8601String \u00b6 [androidJvm]\\ fun Date . toIso8601String (timeZone: TimeZone = TimeZone.getTimeZone(\"UTC\")): String","title":"To iso8601 string"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/to-iso8601-string/#toiso8601string","text":"[androidJvm]\\ fun Date . toIso8601String (timeZone: TimeZone = TimeZone.getTimeZone(\"UTC\")): String","title":"toIso8601String"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/to-list/","text":"// shared / org.readium.r2.shared.extensions / toList toList \u00b6 [androidJvm]\\ fun JSONArray . toList (): List < Any > Unwraps recursively the JSONArray to a List.","title":"To list"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/to-list/#tolist","text":"[androidJvm]\\ fun JSONArray . toList (): List < Any > Unwraps recursively the JSONArray to a List.","title":"toList"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/to-map/","text":"// shared / org.readium.r2.shared.extensions / toMap toMap \u00b6 [androidJvm]\\ fun JSONObject . toMap (): Map < String , Any > Unwraps recursively the JSONObject to a Map.","title":"To map"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/to-map/#tomap","text":"[androidJvm]\\ fun JSONObject . toMap (): Map < String , Any > Unwraps recursively the JSONObject to a Map.","title":"toMap"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/to-png/","text":"// shared / org.readium.r2.shared.extensions / toPng toPng \u00b6 [androidJvm]\\ suspend fun Bitmap . toPng (quality: Int = 100): ByteArray ?","title":"To png"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/to-png/#topng","text":"[androidJvm]\\ suspend fun Bitmap . toPng (quality: Int = 100): ByteArray ?","title":"toPng"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/try-or-log/","text":"// shared / org.readium.r2.shared.extensions / tryOrLog tryOrLog \u00b6 [androidJvm]\\ inline fun < T > tryOrLog (closure: () -> T ): T ? Returns the result of the given closure , or null if an Exception was raised. The Exception will be logged.","title":"Try or log"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/try-or-log/#tryorlog","text":"[androidJvm]\\ inline fun < T > tryOrLog (closure: () -> T ): T ? Returns the result of the given closure , or null if an Exception was raised. The Exception will be logged.","title":"tryOrLog"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/try-or-null/","text":"// shared / org.readium.r2.shared.extensions / tryOrNull tryOrNull \u00b6 [androidJvm]\\ inline fun < T > tryOrNull (closure: () -> T ): T ? Returns the result of the given closure , or null if an Exception was raised.","title":"Try or null"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/try-or-null/#tryornull","text":"[androidJvm]\\ inline fun < T > tryOrNull (closure: () -> T ): T ? Returns the result of the given closure , or null if an Exception was raised.","title":"tryOrNull"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/try-or/","text":"// shared / org.readium.r2.shared.extensions / tryOr tryOr \u00b6 [androidJvm]\\ inline fun < T > tryOr (default: T , closure: () -> T ): T Returns the result of the given closure , or default if an Exception was raised.","title":"Try or"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/try-or/#tryor","text":"[androidJvm]\\ inline fun < T > tryOr (default: T , closure: () -> T ): T Returns the result of the given closure , or default if an Exception was raised.","title":"tryOr"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/-j-s-o-n-parceler/","text":"// shared / org.readium.r2.shared.extensions / JSONParceler JSONParceler \u00b6 [androidJvm]\\ object JSONParceler : Parceler< Map < String , Any >> Implementation of a Parceler to be used with @Parcelize to serialize JSON objects. Functions \u00b6 Name Summary create [androidJvm] open override fun create (parcel: Parcel ): Map < String , Any > newArray [androidJvm] open fun newArray (size: Int ): Array < Map < String , Any >> write [androidJvm] open override fun Map < String , Any >. write (parcel: Parcel , flags: Int )","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/-j-s-o-n-parceler/#jsonparceler","text":"[androidJvm]\\ object JSONParceler : Parceler< Map < String , Any >> Implementation of a Parceler to be used with @Parcelize to serialize JSON objects.","title":"JSONParceler"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/-j-s-o-n-parceler/#functions","text":"Name Summary create [androidJvm] open override fun create (parcel: Parcel ): Map < String , Any > newArray [androidJvm] open fun newArray (size: Int ): Array < Map < String , Any >> write [androidJvm] open override fun Map < String , Any >. write (parcel: Parcel , flags: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/-j-s-o-n-parceler/create/","text":"// shared / org.readium.r2.shared.extensions / JSONParceler / create create \u00b6 [androidJvm]\\ open override fun create (parcel: Parcel ): Map < String , Any >","title":"Create"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/-j-s-o-n-parceler/create/#create","text":"[androidJvm]\\ open override fun create (parcel: Parcel ): Map < String , Any >","title":"create"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/-j-s-o-n-parceler/write/","text":"// shared / org.readium.r2.shared.extensions / JSONParceler / write write \u00b6 [androidJvm]\\ open override fun Map < String , Any >. write (parcel: Parcel , flags: Int )","title":"Write"},{"location":"readium/shared/shared/org.readium.r2.shared.extensions/-j-s-o-n-parceler/write/#write","text":"[androidJvm]\\ open override fun Map < String , Any >. write (parcel: Parcel , flags: Int )","title":"write"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/","text":"// shared / org.readium.r2.shared.fetcher Package org.readium.r2.shared.fetcher \u00b6 Types \u00b6 Name Summary ArchiveFetcher [androidJvm] class ArchiveFetcher : Fetcher Provides access to entries of an archive. BaseBytesResource [androidJvm] sealed class BaseBytesResource : Resource BufferingResource [androidJvm] class BufferingResource (resource: Resource , resourceLength: Long ?, bufferSize: Long ) : ProxyResource Wraps a Resource and buffers its content. BytesResource [androidJvm] class BytesResource (link: Link , bytes: suspend () -> ByteArray ) : BaseBytesResource Creates a Resource serving ByteArray . DefaultResourceContentExtractorFactory [androidJvm] class DefaultResourceContentExtractorFactory : ResourceContentExtractor.Factory EmptyFetcher [androidJvm] class EmptyFetcher : Fetcher A Fetcher providing no resources at all. FailureResource [androidJvm] class FailureResource (link: Link , error: Resource.Exception ) : Resource Creates a Resource that will always return the given error . Fetcher [androidJvm] interface Fetcher : SuspendingCloseable Provides access to a Resource from a Link . FileFetcher [androidJvm] class FileFetcher (paths: Map < String , File >) : Fetcher Provides access to resources on the local file system. HtmlResourceContentExtractor [androidJvm] class HtmlResourceContentExtractor : ResourceContentExtractor ResourceContentExtractor implementation for HTML resources. HttpFetcher [androidJvm] class HttpFetcher (client: HttpClient , baseUrl: String ?) : Fetcher Fetches remote resources through HTTP. LazyResource [androidJvm] class LazyResource (factory: suspend () -> Resource ) : Resource Wraps a Resource which will be created only when first accessing one of its members. ProxyResource [androidJvm] abstract class ProxyResource (resource: Resource ) : Resource A base class for a Resource which acts as a proxy to another one. Resource [androidJvm] interface Resource : SuspendingCloseable Acts as a proxy to an actual resource by handling read access. ResourceContentExtractor [androidJvm] interface ResourceContentExtractor Extracts pure content from a marked-up (e.g. HTML) or binary (e.g. PDF) resource. ResourceInputStream [androidJvm] class ResourceInputStream (resource: Resource , range: LongRange ?) : InputStream Input stream reading a Resource 's content. ResourceTransformer [androidJvm] typealias ResourceTransformer = ( Resource ) -> Resource Implements the transformation of a Resource. It can be used, for example, to decrypt, deobfuscate, inject CSS or JavaScript, correct content \u2013 e.g. adding a missing dir=\"rtl\" in an HTML document, pre-process \u2013 e.g. before indexing a publication's content, etc. If the transformation doesn't apply, simply return resource unchanged. ResourceTry [androidJvm] typealias ResourceTry < SuccessT > = Try < SuccessT , Resource.Exception > RoutingFetcher [androidJvm] class RoutingFetcher (routes: List < RoutingFetcher.Route >) : Fetcher Routes requests to child fetchers, depending on a provided predicate. StringResource [androidJvm] class StringResource (link: Link , string: suspend () -> String ) : BaseBytesResource Creates a Resource serving a String . TransformingFetcher [androidJvm] class TransformingFetcher (fetcher: Fetcher , transformers: List < ResourceTransformer >) : Fetcher Transforms the resources' content of a child fetcher using a list of ResourceTransformer functions. TransformingResource [androidJvm] abstract class TransformingResource (resource: Resource , cacheBytes: Boolean ) : ProxyResource Transforms the bytes of resource on-the-fly. Functions \u00b6 Name Summary buffered [androidJvm] fun Resource . buffered (resourceLength: Long ? = null, size: Long = BufferingResource.DEFAULT_BUFFER_SIZE): BufferingResource Wraps this resource in a BufferingResource to improve reading performances. flatMapCatching [androidJvm] inline fun < R , S > ResourceTry < S >. flatMapCatching (transform: ( S ) -> ResourceTry < R >): ResourceTry < R > mapCatching [androidJvm] inline fun < R , S > ResourceTry < S >. mapCatching (transform: ( S ) -> R ): ResourceTry < R > Maps the result with the given transform","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/#package-orgreadiumr2sharedfetcher","text":"","title":"Package org.readium.r2.shared.fetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/#types","text":"Name Summary ArchiveFetcher [androidJvm] class ArchiveFetcher : Fetcher Provides access to entries of an archive. BaseBytesResource [androidJvm] sealed class BaseBytesResource : Resource BufferingResource [androidJvm] class BufferingResource (resource: Resource , resourceLength: Long ?, bufferSize: Long ) : ProxyResource Wraps a Resource and buffers its content. BytesResource [androidJvm] class BytesResource (link: Link , bytes: suspend () -> ByteArray ) : BaseBytesResource Creates a Resource serving ByteArray . DefaultResourceContentExtractorFactory [androidJvm] class DefaultResourceContentExtractorFactory : ResourceContentExtractor.Factory EmptyFetcher [androidJvm] class EmptyFetcher : Fetcher A Fetcher providing no resources at all. FailureResource [androidJvm] class FailureResource (link: Link , error: Resource.Exception ) : Resource Creates a Resource that will always return the given error . Fetcher [androidJvm] interface Fetcher : SuspendingCloseable Provides access to a Resource from a Link . FileFetcher [androidJvm] class FileFetcher (paths: Map < String , File >) : Fetcher Provides access to resources on the local file system. HtmlResourceContentExtractor [androidJvm] class HtmlResourceContentExtractor : ResourceContentExtractor ResourceContentExtractor implementation for HTML resources. HttpFetcher [androidJvm] class HttpFetcher (client: HttpClient , baseUrl: String ?) : Fetcher Fetches remote resources through HTTP. LazyResource [androidJvm] class LazyResource (factory: suspend () -> Resource ) : Resource Wraps a Resource which will be created only when first accessing one of its members. ProxyResource [androidJvm] abstract class ProxyResource (resource: Resource ) : Resource A base class for a Resource which acts as a proxy to another one. Resource [androidJvm] interface Resource : SuspendingCloseable Acts as a proxy to an actual resource by handling read access. ResourceContentExtractor [androidJvm] interface ResourceContentExtractor Extracts pure content from a marked-up (e.g. HTML) or binary (e.g. PDF) resource. ResourceInputStream [androidJvm] class ResourceInputStream (resource: Resource , range: LongRange ?) : InputStream Input stream reading a Resource 's content. ResourceTransformer [androidJvm] typealias ResourceTransformer = ( Resource ) -> Resource Implements the transformation of a Resource. It can be used, for example, to decrypt, deobfuscate, inject CSS or JavaScript, correct content \u2013 e.g. adding a missing dir=\"rtl\" in an HTML document, pre-process \u2013 e.g. before indexing a publication's content, etc. If the transformation doesn't apply, simply return resource unchanged. ResourceTry [androidJvm] typealias ResourceTry < SuccessT > = Try < SuccessT , Resource.Exception > RoutingFetcher [androidJvm] class RoutingFetcher (routes: List < RoutingFetcher.Route >) : Fetcher Routes requests to child fetchers, depending on a provided predicate. StringResource [androidJvm] class StringResource (link: Link , string: suspend () -> String ) : BaseBytesResource Creates a Resource serving a String . TransformingFetcher [androidJvm] class TransformingFetcher (fetcher: Fetcher , transformers: List < ResourceTransformer >) : Fetcher Transforms the resources' content of a child fetcher using a list of ResourceTransformer functions. TransformingResource [androidJvm] abstract class TransformingResource (resource: Resource , cacheBytes: Boolean ) : ProxyResource Transforms the bytes of resource on-the-fly.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/#functions","text":"Name Summary buffered [androidJvm] fun Resource . buffered (resourceLength: Long ? = null, size: Long = BufferingResource.DEFAULT_BUFFER_SIZE): BufferingResource Wraps this resource in a BufferingResource to improve reading performances. flatMapCatching [androidJvm] inline fun < R , S > ResourceTry < S >. flatMapCatching (transform: ( S ) -> ResourceTry < R >): ResourceTry < R > mapCatching [androidJvm] inline fun < R , S > ResourceTry < S >. mapCatching (transform: ( S ) -> R ): ResourceTry < R > Maps the result with the given transform","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/buffered/","text":"// shared / org.readium.r2.shared.fetcher / buffered buffered \u00b6 [androidJvm]\\ fun Resource . buffered (resourceLength: Long ? = null, size: Long = BufferingResource.DEFAULT_BUFFER_SIZE): BufferingResource Wraps this resource in a BufferingResource to improve reading performances. Parameters \u00b6 androidJvm resourceLength The total length of the resource, when known. This can improve performance by avoiding requesting the length from the underlying resource. bufferSize Size of the buffer chunks to read.","title":"Buffered"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/buffered/#buffered","text":"[androidJvm]\\ fun Resource . buffered (resourceLength: Long ? = null, size: Long = BufferingResource.DEFAULT_BUFFER_SIZE): BufferingResource Wraps this resource in a BufferingResource to improve reading performances.","title":"buffered"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/buffered/#parameters","text":"androidJvm resourceLength The total length of the resource, when known. This can improve performance by avoiding requesting the length from the underlying resource. bufferSize Size of the buffer chunks to read.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/flat-map-catching/","text":"// shared / org.readium.r2.shared.fetcher / flatMapCatching flatMapCatching \u00b6 [androidJvm]\\ inline fun < R , S > ResourceTry < S >. flatMapCatching (transform: ( S ) -> ResourceTry < R >): ResourceTry < R >","title":"Flat map catching"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/flat-map-catching/#flatmapcatching","text":"[androidJvm]\\ inline fun < R , S > ResourceTry < S >. flatMapCatching (transform: ( S ) -> ResourceTry < R >): ResourceTry < R >","title":"flatMapCatching"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/map-catching/","text":"// shared / org.readium.r2.shared.fetcher / mapCatching mapCatching \u00b6 [androidJvm]\\ inline fun < R , S > ResourceTry < S >. mapCatching (transform: ( S ) -> R ): ResourceTry < R > Maps the result with the given transform If the transform throws an Exception , it is wrapped in a failure with Resource.Exception.Other.","title":"Map catching"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/map-catching/#mapcatching","text":"[androidJvm]\\ inline fun < R , S > ResourceTry < S >. mapCatching (transform: ( S ) -> R ): ResourceTry < R > Maps the result with the given transform If the transform throws an Exception , it is wrapped in a failure with Resource.Exception.Other.","title":"mapCatching"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-archive-fetcher/","text":"// shared / org.readium.r2.shared.fetcher / ArchiveFetcher ArchiveFetcher \u00b6 [androidJvm]\\ class ArchiveFetcher : Fetcher Provides access to entries of an archive. Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. get [androidJvm] open override fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. [androidJvm] open fun get (href: String ): Resource Returns the Resource at the given href . links [androidJvm] open suspend override fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-archive-fetcher/#archivefetcher","text":"[androidJvm]\\ class ArchiveFetcher : Fetcher Provides access to entries of an archive.","title":"ArchiveFetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-archive-fetcher/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-archive-fetcher/#functions","text":"Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. get [androidJvm] open override fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. [androidJvm] open fun get (href: String ): Resource Returns the Resource at the given href . links [androidJvm] open suspend override fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-archive-fetcher/close/","text":"// shared / org.readium.r2.shared.fetcher / ArchiveFetcher / close close \u00b6 [androidJvm]\\ open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect.","title":"Close"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-archive-fetcher/close/#close","text":"[androidJvm]\\ open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect.","title":"close"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-archive-fetcher/get/","text":"// shared / org.readium.r2.shared.fetcher / ArchiveFetcher / get get \u00b6 [androidJvm]\\ open override fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. A Resource is always returned, since for some cases we can't know if it exists before actually fetching it, such as HTTP. Therefore, errors are handled at the Resource level.","title":"Get"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-archive-fetcher/get/#get","text":"[androidJvm]\\ open override fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. A Resource is always returned, since for some cases we can't know if it exists before actually fetching it, such as HTTP. Therefore, errors are handled at the Resource level.","title":"get"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-archive-fetcher/links/","text":"// shared / org.readium.r2.shared.fetcher / ArchiveFetcher / links links \u00b6 [androidJvm]\\ open suspend override fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable. If the medium has an inherent resource order, it should be followed. Otherwise, HREFs are sorted alphabetically.","title":"Links"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-archive-fetcher/links/#links","text":"[androidJvm]\\ open suspend override fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable. If the medium has an inherent resource order, it should be followed. Otherwise, HREFs are sorted alphabetically.","title":"links"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-archive-fetcher/-companion/","text":"// shared / org.readium.r2.shared.fetcher / ArchiveFetcher / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary fromPath [androidJvm] suspend fun fromPath (path: String , archiveFactory: ArchiveFactory = DefaultArchiveFactory()): ArchiveFetcher ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-archive-fetcher/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-archive-fetcher/-companion/#functions","text":"Name Summary fromPath [androidJvm] suspend fun fromPath (path: String , archiveFactory: ArchiveFactory = DefaultArchiveFactory()): ArchiveFetcher ?","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-archive-fetcher/-companion/from-path/","text":"// shared / org.readium.r2.shared.fetcher / ArchiveFetcher / Companion / fromPath fromPath \u00b6 [androidJvm]\\ suspend fun fromPath (path: String , archiveFactory: ArchiveFactory = DefaultArchiveFactory()): ArchiveFetcher ?","title":"From path"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-archive-fetcher/-companion/from-path/#frompath","text":"[androidJvm]\\ suspend fun fromPath (path: String , archiveFactory: ArchiveFactory = DefaultArchiveFactory()): ArchiveFetcher ?","title":"fromPath"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-base-bytes-resource/","text":"// shared / org.readium.r2.shared.fetcher / BaseBytesResource BaseBytesResource \u00b6 [androidJvm]\\ sealed class BaseBytesResource : Resource Functions \u00b6 Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. length [androidJvm] open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. link [androidJvm] open suspend override fun link (): Link Returns the link from which the resource was retrieved. read [androidJvm] open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. readAsJson [androidJvm] open suspend fun readAsJson (): ResourceTry < JSONObject > Reads the full content as a JSON object. readAsString [androidJvm] open suspend fun readAsString (charset: Charset ? = null): ResourceTry < String > Reads the full content as a String . readAsXml [androidJvm] open suspend fun readAsXml (): ResourceTry < ElementNode > Reads the full content as an XML document. Properties \u00b6 Name Summary bytes [androidJvm] val bytes : suspend () -> ByteArray file [androidJvm] open val file : File ? Direct file to this resource, when available. link [androidJvm] val link : Link Inheritors \u00b6 Name BytesResource StringResource","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-base-bytes-resource/#basebytesresource","text":"[androidJvm]\\ sealed class BaseBytesResource : Resource","title":"BaseBytesResource"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-base-bytes-resource/#functions","text":"Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. length [androidJvm] open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. link [androidJvm] open suspend override fun link (): Link Returns the link from which the resource was retrieved. read [androidJvm] open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. readAsJson [androidJvm] open suspend fun readAsJson (): ResourceTry < JSONObject > Reads the full content as a JSON object. readAsString [androidJvm] open suspend fun readAsString (charset: Charset ? = null): ResourceTry < String > Reads the full content as a String . readAsXml [androidJvm] open suspend fun readAsXml (): ResourceTry < ElementNode > Reads the full content as an XML document.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-base-bytes-resource/#properties","text":"Name Summary bytes [androidJvm] val bytes : suspend () -> ByteArray file [androidJvm] open val file : File ? Direct file to this resource, when available. link [androidJvm] val link : Link","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-base-bytes-resource/#inheritors","text":"Name BytesResource StringResource","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-base-bytes-resource/bytes/","text":"// shared / org.readium.r2.shared.fetcher / BaseBytesResource / bytes bytes \u00b6 [androidJvm]\\ val bytes : suspend () -> ByteArray","title":"Bytes"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-base-bytes-resource/bytes/#bytes","text":"[androidJvm]\\ val bytes : suspend () -> ByteArray","title":"bytes"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-base-bytes-resource/close/","text":"// shared / org.readium.r2.shared.fetcher / BaseBytesResource / close close \u00b6 [androidJvm]\\ open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect.","title":"Close"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-base-bytes-resource/close/#close","text":"[androidJvm]\\ open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect.","title":"close"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-base-bytes-resource/length/","text":"// shared / org.readium.r2.shared.fetcher / BaseBytesResource / length length \u00b6 [androidJvm]\\ open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. This value must be treated as a hint, as it might not reflect the actual bytes length. To get the real length, you need to read the whole resource.","title":"Length"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-base-bytes-resource/length/#length","text":"[androidJvm]\\ open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. This value must be treated as a hint, as it might not reflect the actual bytes length. To get the real length, you need to read the whole resource.","title":"length"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-base-bytes-resource/link/","text":"// shared / org.readium.r2.shared.fetcher / BaseBytesResource / link link \u00b6 [androidJvm]\\ open suspend override fun link (): Link Returns the link from which the resource was retrieved. It might be modified by the Resource to include additional metadata, e.g. the Content-Type HTTP header in Link.type . [androidJvm]\\ val link : Link","title":"Link"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-base-bytes-resource/link/#link","text":"[androidJvm]\\ open suspend override fun link (): Link Returns the link from which the resource was retrieved. It might be modified by the Resource to include additional metadata, e.g. the Content-Type HTTP header in Link.type . [androidJvm]\\ val link : Link","title":"link"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-base-bytes-resource/read/","text":"// shared / org.readium.r2.shared.fetcher / BaseBytesResource / read read \u00b6 [androidJvm]\\ open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. When range is null, the whole content is returned. Out-of-range indexes are clamped to the available length automatically.","title":"Read"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-base-bytes-resource/read/#read","text":"[androidJvm]\\ open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. When range is null, the whole content is returned. Out-of-range indexes are clamped to the available length automatically.","title":"read"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-buffering-resource/","text":"// shared / org.readium.r2.shared.fetcher / BufferingResource BufferingResource \u00b6 [androidJvm]\\ class BufferingResource (resource: Resource , resourceLength: Long ?, bufferSize: Long ) : ProxyResource Wraps a Resource and buffers its content. Expensive interaction with the underlying resource is minimized, since most (smaller) requests can be satisfied by accessing the buffer alone. The drawback is that some extra space is required to hold the buffer and that copying takes place when filling that buffer, but this is usually outweighed by the performance benefits. Note that this implementation is pretty limited and the benefits are only apparent when reading forward and consecutively \u2013 e.g. when downloading the resource by chunks. The buffer is ignored when reading backward or far ahead. Parameters \u00b6 androidJvm resource Underlying resource which will be buffered. resourceLength The total length of the resource, when known. This can improve performance by avoiding requesting the length from the underlying resource. bufferSize Size of the buffer chunks to read. Constructors \u00b6 BufferingResource [androidJvm] fun BufferingResource (resource: Resource , resourceLength: Long ? = null, bufferSize: Long = DEFAULT_BUFFER_SIZE) Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. length [androidJvm] open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. link [androidJvm] open suspend override fun link (): Link Returns the link from which the resource was retrieved. read [androidJvm] open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. readAsJson [androidJvm] open suspend fun readAsJson (): ResourceTry < JSONObject > Reads the full content as a JSON object. readAsString [androidJvm] open suspend fun readAsString (charset: Charset ? = null): ResourceTry < String > Reads the full content as a String . readAsXml [androidJvm] open suspend fun readAsXml (): ResourceTry < ElementNode > Reads the full content as an XML document. toString [androidJvm] open override fun toString (): String Properties \u00b6 Name Summary file [androidJvm] open override val file : File ? Direct file to this resource, when available.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-buffering-resource/#bufferingresource","text":"[androidJvm]\\ class BufferingResource (resource: Resource , resourceLength: Long ?, bufferSize: Long ) : ProxyResource Wraps a Resource and buffers its content. Expensive interaction with the underlying resource is minimized, since most (smaller) requests can be satisfied by accessing the buffer alone. The drawback is that some extra space is required to hold the buffer and that copying takes place when filling that buffer, but this is usually outweighed by the performance benefits. Note that this implementation is pretty limited and the benefits are only apparent when reading forward and consecutively \u2013 e.g. when downloading the resource by chunks. The buffer is ignored when reading backward or far ahead.","title":"BufferingResource"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-buffering-resource/#parameters","text":"androidJvm resource Underlying resource which will be buffered. resourceLength The total length of the resource, when known. This can improve performance by avoiding requesting the length from the underlying resource. bufferSize Size of the buffer chunks to read.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-buffering-resource/#constructors","text":"BufferingResource [androidJvm] fun BufferingResource (resource: Resource , resourceLength: Long ? = null, bufferSize: Long = DEFAULT_BUFFER_SIZE)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-buffering-resource/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-buffering-resource/#functions","text":"Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. length [androidJvm] open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. link [androidJvm] open suspend override fun link (): Link Returns the link from which the resource was retrieved. read [androidJvm] open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. readAsJson [androidJvm] open suspend fun readAsJson (): ResourceTry < JSONObject > Reads the full content as a JSON object. readAsString [androidJvm] open suspend fun readAsString (charset: Charset ? = null): ResourceTry < String > Reads the full content as a String . readAsXml [androidJvm] open suspend fun readAsXml (): ResourceTry < ElementNode > Reads the full content as an XML document. toString [androidJvm] open override fun toString (): String","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-buffering-resource/#properties","text":"Name Summary file [androidJvm] open override val file : File ? Direct file to this resource, when available.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-buffering-resource/-buffering-resource/","text":"// shared / org.readium.r2.shared.fetcher / BufferingResource / BufferingResource BufferingResource \u00b6 [androidJvm]\\ fun BufferingResource (resource: Resource , resourceLength: Long ? = null, bufferSize: Long = DEFAULT_BUFFER_SIZE) Parameters \u00b6 androidJvm resource Underlying resource which will be buffered. resourceLength The total length of the resource, when known. This can improve performance by avoiding requesting the length from the underlying resource. bufferSize Size of the buffer chunks to read.","title":" buffering resource"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-buffering-resource/-buffering-resource/#bufferingresource","text":"[androidJvm]\\ fun BufferingResource (resource: Resource , resourceLength: Long ? = null, bufferSize: Long = DEFAULT_BUFFER_SIZE)","title":"BufferingResource"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-buffering-resource/-buffering-resource/#parameters","text":"androidJvm resource Underlying resource which will be buffered. resourceLength The total length of the resource, when known. This can improve performance by avoiding requesting the length from the underlying resource. bufferSize Size of the buffer chunks to read.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-buffering-resource/read/","text":"// shared / org.readium.r2.shared.fetcher / BufferingResource / read read \u00b6 [androidJvm]\\ open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. When range is null, the whole content is returned. Out-of-range indexes are clamped to the available length automatically.","title":"Read"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-buffering-resource/read/#read","text":"[androidJvm]\\ open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. When range is null, the whole content is returned. Out-of-range indexes are clamped to the available length automatically.","title":"read"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-buffering-resource/-companion/","text":"// shared / org.readium.r2.shared.fetcher / BufferingResource / Companion Companion \u00b6 [androidJvm]\\ object Companion Properties \u00b6 Name Summary DEFAULT_BUFFER_SIZE [androidJvm] const val DEFAULT_BUFFER_SIZE : Long = 8192","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-buffering-resource/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-buffering-resource/-companion/#properties","text":"Name Summary DEFAULT_BUFFER_SIZE [androidJvm] const val DEFAULT_BUFFER_SIZE : Long = 8192","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-buffering-resource/-companion/-d-e-f-a-u-l-t_-b-u-f-f-e-r_-s-i-z-e/","text":"// shared / org.readium.r2.shared.fetcher / BufferingResource / Companion / DEFAULT_BUFFER_SIZE DEFAULT_BUFFER_SIZE \u00b6 [androidJvm]\\ const val DEFAULT_BUFFER_SIZE : Long = 8192","title":" d e f a u l t  b u f f e r  s i z e"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-buffering-resource/-companion/-d-e-f-a-u-l-t_-b-u-f-f-e-r_-s-i-z-e/#default_buffer_size","text":"[androidJvm]\\ const val DEFAULT_BUFFER_SIZE : Long = 8192","title":"DEFAULT_BUFFER_SIZE"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-bytes-resource/","text":"// shared / org.readium.r2.shared.fetcher / BytesResource BytesResource \u00b6 [androidJvm]\\ class BytesResource (link: Link , bytes: suspend () -> ByteArray ) : BaseBytesResource Creates a Resource serving ByteArray . Constructors \u00b6 BytesResource [androidJvm] fun BytesResource (link: Link , bytes: ByteArray ) BytesResource [androidJvm] fun BytesResource (link: Link , bytes: suspend () -> ByteArray ) Functions \u00b6 Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. length [androidJvm] open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. link [androidJvm] open suspend override fun link (): Link Returns the link from which the resource was retrieved. read [androidJvm] open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. readAsJson [androidJvm] open suspend fun readAsJson (): ResourceTry < JSONObject > Reads the full content as a JSON object. readAsString [androidJvm] open suspend fun readAsString (charset: Charset ? = null): ResourceTry < String > Reads the full content as a String . readAsXml [androidJvm] open suspend fun readAsXml (): ResourceTry < ElementNode > Reads the full content as an XML document. toString [androidJvm] open override fun toString (): String Properties \u00b6 Name Summary bytes [androidJvm] val bytes : suspend () -> ByteArray file [androidJvm] open val file : File ? Direct file to this resource, when available. link [androidJvm] val link : Link","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-bytes-resource/#bytesresource","text":"[androidJvm]\\ class BytesResource (link: Link , bytes: suspend () -> ByteArray ) : BaseBytesResource Creates a Resource serving ByteArray .","title":"BytesResource"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-bytes-resource/#constructors","text":"BytesResource [androidJvm] fun BytesResource (link: Link , bytes: ByteArray ) BytesResource [androidJvm] fun BytesResource (link: Link , bytes: suspend () -> ByteArray )","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-bytes-resource/#functions","text":"Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. length [androidJvm] open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. link [androidJvm] open suspend override fun link (): Link Returns the link from which the resource was retrieved. read [androidJvm] open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. readAsJson [androidJvm] open suspend fun readAsJson (): ResourceTry < JSONObject > Reads the full content as a JSON object. readAsString [androidJvm] open suspend fun readAsString (charset: Charset ? = null): ResourceTry < String > Reads the full content as a String . readAsXml [androidJvm] open suspend fun readAsXml (): ResourceTry < ElementNode > Reads the full content as an XML document. toString [androidJvm] open override fun toString (): String","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-bytes-resource/#properties","text":"Name Summary bytes [androidJvm] val bytes : suspend () -> ByteArray file [androidJvm] open val file : File ? Direct file to this resource, when available. link [androidJvm] val link : Link","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-bytes-resource/-bytes-resource/","text":"// shared / org.readium.r2.shared.fetcher / BytesResource / BytesResource BytesResource \u00b6 [androidJvm]\\ fun BytesResource (link: Link , bytes: ByteArray ) fun BytesResource (link: Link , bytes: suspend () -> ByteArray )","title":" bytes resource"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-bytes-resource/-bytes-resource/#bytesresource","text":"[androidJvm]\\ fun BytesResource (link: Link , bytes: ByteArray ) fun BytesResource (link: Link , bytes: suspend () -> ByteArray )","title":"BytesResource"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-bytes-resource/to-string/","text":"// shared / org.readium.r2.shared.fetcher / BytesResource / toString toString \u00b6 [androidJvm]\\ open override fun toString (): String","title":"To string"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-bytes-resource/to-string/#tostring","text":"[androidJvm]\\ open override fun toString (): String","title":"toString"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-default-resource-content-extractor-factory/","text":"// shared / org.readium.r2.shared.fetcher / DefaultResourceContentExtractorFactory DefaultResourceContentExtractorFactory \u00b6 [androidJvm]\\ class DefaultResourceContentExtractorFactory : ResourceContentExtractor.Factory Functions \u00b6 Name Summary createExtractor [androidJvm] open suspend override fun createExtractor (resource: Resource ): ResourceContentExtractor ? Creates a ResourceContentExtractor instance for the given resource .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-default-resource-content-extractor-factory/#defaultresourcecontentextractorfactory","text":"[androidJvm]\\ class DefaultResourceContentExtractorFactory : ResourceContentExtractor.Factory","title":"DefaultResourceContentExtractorFactory"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-default-resource-content-extractor-factory/#functions","text":"Name Summary createExtractor [androidJvm] open suspend override fun createExtractor (resource: Resource ): ResourceContentExtractor ? Creates a ResourceContentExtractor instance for the given resource .","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-default-resource-content-extractor-factory/-default-resource-content-extractor-factory/","text":"// shared / org.readium.r2.shared.fetcher / DefaultResourceContentExtractorFactory / DefaultResourceContentExtractorFactory DefaultResourceContentExtractorFactory \u00b6 [androidJvm]\\ fun DefaultResourceContentExtractorFactory ()","title":" default resource content extractor factory"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-default-resource-content-extractor-factory/-default-resource-content-extractor-factory/#defaultresourcecontentextractorfactory","text":"[androidJvm]\\ fun DefaultResourceContentExtractorFactory ()","title":"DefaultResourceContentExtractorFactory"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-default-resource-content-extractor-factory/create-extractor/","text":"// shared / org.readium.r2.shared.fetcher / DefaultResourceContentExtractorFactory / createExtractor createExtractor \u00b6 [androidJvm]\\ open suspend override fun createExtractor (resource: Resource ): ResourceContentExtractor ? Creates a ResourceContentExtractor instance for the given resource . Return null if the resource format is not supported.","title":"Create extractor"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-default-resource-content-extractor-factory/create-extractor/#createextractor","text":"[androidJvm]\\ open suspend override fun createExtractor (resource: Resource ): ResourceContentExtractor ? Creates a ResourceContentExtractor instance for the given resource . Return null if the resource format is not supported.","title":"createExtractor"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-empty-fetcher/","text":"// shared / org.readium.r2.shared.fetcher / EmptyFetcher EmptyFetcher \u00b6 [androidJvm]\\ class EmptyFetcher : Fetcher A Fetcher providing no resources at all. Constructors \u00b6 EmptyFetcher [androidJvm] fun EmptyFetcher () Functions \u00b6 Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. get [androidJvm] open override fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. [androidJvm] open fun get (href: String ): Resource Returns the Resource at the given href . links [androidJvm] open suspend override fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-empty-fetcher/#emptyfetcher","text":"[androidJvm]\\ class EmptyFetcher : Fetcher A Fetcher providing no resources at all.","title":"EmptyFetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-empty-fetcher/#constructors","text":"EmptyFetcher [androidJvm] fun EmptyFetcher ()","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-empty-fetcher/#functions","text":"Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. get [androidJvm] open override fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. [androidJvm] open fun get (href: String ): Resource Returns the Resource at the given href . links [androidJvm] open suspend override fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-empty-fetcher/-empty-fetcher/","text":"// shared / org.readium.r2.shared.fetcher / EmptyFetcher / EmptyFetcher EmptyFetcher \u00b6 [androidJvm]\\ fun EmptyFetcher ()","title":" empty fetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-empty-fetcher/-empty-fetcher/#emptyfetcher","text":"[androidJvm]\\ fun EmptyFetcher ()","title":"EmptyFetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-empty-fetcher/close/","text":"// shared / org.readium.r2.shared.fetcher / EmptyFetcher / close close \u00b6 [androidJvm]\\ open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect.","title":"Close"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-empty-fetcher/close/#close","text":"[androidJvm]\\ open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect.","title":"close"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-empty-fetcher/get/","text":"// shared / org.readium.r2.shared.fetcher / EmptyFetcher / get get \u00b6 [androidJvm]\\ open override fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. A Resource is always returned, since for some cases we can't know if it exists before actually fetching it, such as HTTP. Therefore, errors are handled at the Resource level.","title":"Get"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-empty-fetcher/get/#get","text":"[androidJvm]\\ open override fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. A Resource is always returned, since for some cases we can't know if it exists before actually fetching it, such as HTTP. Therefore, errors are handled at the Resource level.","title":"get"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-empty-fetcher/links/","text":"// shared / org.readium.r2.shared.fetcher / EmptyFetcher / links links \u00b6 [androidJvm]\\ open suspend override fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable. If the medium has an inherent resource order, it should be followed. Otherwise, HREFs are sorted alphabetically.","title":"Links"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-empty-fetcher/links/#links","text":"[androidJvm]\\ open suspend override fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable. If the medium has an inherent resource order, it should be followed. Otherwise, HREFs are sorted alphabetically.","title":"links"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-failure-resource/","text":"// shared / org.readium.r2.shared.fetcher / FailureResource FailureResource \u00b6 [androidJvm]\\ class FailureResource (link: Link , error: Resource.Exception ) : Resource Creates a Resource that will always return the given error . Constructors \u00b6 FailureResource [androidJvm] fun FailureResource (link: Link , error: Resource.Exception ) Functions \u00b6 Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. length [androidJvm] open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. link [androidJvm] open suspend override fun link (): Link Returns the link from which the resource was retrieved. read [androidJvm] open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. readAsJson [androidJvm] open suspend fun readAsJson (): ResourceTry < JSONObject > Reads the full content as a JSON object. readAsString [androidJvm] open suspend fun readAsString (charset: Charset ? = null): ResourceTry < String > Reads the full content as a String . readAsXml [androidJvm] open suspend fun readAsXml (): ResourceTry < ElementNode > Reads the full content as an XML document. toString [androidJvm] open override fun toString (): String Properties \u00b6 Name Summary file [androidJvm] open val file : File ? Direct file to this resource, when available.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-failure-resource/#failureresource","text":"[androidJvm]\\ class FailureResource (link: Link , error: Resource.Exception ) : Resource Creates a Resource that will always return the given error .","title":"FailureResource"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-failure-resource/#constructors","text":"FailureResource [androidJvm] fun FailureResource (link: Link , error: Resource.Exception )","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-failure-resource/#functions","text":"Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. length [androidJvm] open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. link [androidJvm] open suspend override fun link (): Link Returns the link from which the resource was retrieved. read [androidJvm] open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. readAsJson [androidJvm] open suspend fun readAsJson (): ResourceTry < JSONObject > Reads the full content as a JSON object. readAsString [androidJvm] open suspend fun readAsString (charset: Charset ? = null): ResourceTry < String > Reads the full content as a String . readAsXml [androidJvm] open suspend fun readAsXml (): ResourceTry < ElementNode > Reads the full content as an XML document. toString [androidJvm] open override fun toString (): String","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-failure-resource/#properties","text":"Name Summary file [androidJvm] open val file : File ? Direct file to this resource, when available.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-failure-resource/-failure-resource/","text":"// shared / org.readium.r2.shared.fetcher / FailureResource / FailureResource FailureResource \u00b6 [androidJvm]\\ fun FailureResource (link: Link , error: Resource.Exception )","title":" failure resource"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-failure-resource/-failure-resource/#failureresource","text":"[androidJvm]\\ fun FailureResource (link: Link , error: Resource.Exception )","title":"FailureResource"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-failure-resource/close/","text":"// shared / org.readium.r2.shared.fetcher / FailureResource / close close \u00b6 [androidJvm]\\ open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect.","title":"Close"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-failure-resource/close/#close","text":"[androidJvm]\\ open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect.","title":"close"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-failure-resource/length/","text":"// shared / org.readium.r2.shared.fetcher / FailureResource / length length \u00b6 [androidJvm]\\ open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. This value must be treated as a hint, as it might not reflect the actual bytes length. To get the real length, you need to read the whole resource.","title":"Length"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-failure-resource/length/#length","text":"[androidJvm]\\ open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. This value must be treated as a hint, as it might not reflect the actual bytes length. To get the real length, you need to read the whole resource.","title":"length"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-failure-resource/link/","text":"// shared / org.readium.r2.shared.fetcher / FailureResource / link link \u00b6 [androidJvm]\\ open suspend override fun link (): Link Returns the link from which the resource was retrieved. It might be modified by the Resource to include additional metadata, e.g. the Content-Type HTTP header in Link.type .","title":"Link"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-failure-resource/link/#link","text":"[androidJvm]\\ open suspend override fun link (): Link Returns the link from which the resource was retrieved. It might be modified by the Resource to include additional metadata, e.g. the Content-Type HTTP header in Link.type .","title":"link"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-failure-resource/read/","text":"// shared / org.readium.r2.shared.fetcher / FailureResource / read read \u00b6 [androidJvm]\\ open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. When range is null, the whole content is returned. Out-of-range indexes are clamped to the available length automatically.","title":"Read"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-failure-resource/read/#read","text":"[androidJvm]\\ open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. When range is null, the whole content is returned. Out-of-range indexes are clamped to the available length automatically.","title":"read"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-failure-resource/to-string/","text":"// shared / org.readium.r2.shared.fetcher / FailureResource / toString toString \u00b6 [androidJvm]\\ open override fun toString (): String","title":"To string"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-failure-resource/to-string/#tostring","text":"[androidJvm]\\ open override fun toString (): String","title":"toString"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-fetcher/","text":"// shared / org.readium.r2.shared.fetcher / Fetcher Fetcher \u00b6 [androidJvm]\\ interface Fetcher : SuspendingCloseable Provides access to a Resource from a Link . Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary close [androidJvm] abstract suspend fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. get [androidJvm] open fun get (href: String ): Resource Returns the Resource at the given href . [androidJvm] abstract fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. links [androidJvm] abstract suspend fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable. Inheritors \u00b6 Name ArchiveFetcher EmptyFetcher FileFetcher HttpFetcher RoutingFetcher TransformingFetcher","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-fetcher/#fetcher","text":"[androidJvm]\\ interface Fetcher : SuspendingCloseable Provides access to a Resource from a Link .","title":"Fetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-fetcher/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-fetcher/#functions","text":"Name Summary close [androidJvm] abstract suspend fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. get [androidJvm] open fun get (href: String ): Resource Returns the Resource at the given href . [androidJvm] abstract fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. links [androidJvm] abstract suspend fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-fetcher/#inheritors","text":"Name ArchiveFetcher EmptyFetcher FileFetcher HttpFetcher RoutingFetcher TransformingFetcher","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-fetcher/get/","text":"// shared / org.readium.r2.shared.fetcher / Fetcher / get get \u00b6 [androidJvm]\\ abstract fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. A Resource is always returned, since for some cases we can't know if it exists before actually fetching it, such as HTTP. Therefore, errors are handled at the Resource level. [androidJvm]\\ open fun get (href: String ): Resource Returns the Resource at the given href .","title":"Get"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-fetcher/get/#get","text":"[androidJvm]\\ abstract fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. A Resource is always returned, since for some cases we can't know if it exists before actually fetching it, such as HTTP. Therefore, errors are handled at the Resource level. [androidJvm]\\ open fun get (href: String ): Resource Returns the Resource at the given href .","title":"get"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-fetcher/links/","text":"// shared / org.readium.r2.shared.fetcher / Fetcher / links links \u00b6 [androidJvm]\\ abstract suspend fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable. If the medium has an inherent resource order, it should be followed. Otherwise, HREFs are sorted alphabetically.","title":"Links"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-fetcher/links/#links","text":"[androidJvm]\\ abstract suspend fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable. If the medium has an inherent resource order, it should be followed. Otherwise, HREFs are sorted alphabetically.","title":"links"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-fetcher/-companion/","text":"// shared / org.readium.r2.shared.fetcher / Fetcher / Companion Companion \u00b6 [androidJvm]\\ object Companion","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-fetcher/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/","text":"// shared / org.readium.r2.shared.fetcher / FileFetcher FileFetcher \u00b6 [androidJvm]\\ class FileFetcher (paths: Map < String , File >) : Fetcher Provides access to resources on the local file system. paths contains the reachable local paths, indexed by the exposed HREF. Sub-paths are reachable as well, to be able to access a whole directory. Constructors \u00b6 FileFetcher [androidJvm] fun FileFetcher (href: String , file: File ) Provides access to the given local file at href . FileFetcher [androidJvm] fun FileFetcher (paths: Map < String , File >) Types \u00b6 Name Summary FileResource [androidJvm] class FileResource (link: Link , file: File ) : Resource Functions \u00b6 Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. get [androidJvm] open fun get (href: String ): Resource Returns the Resource at the given href . [androidJvm] open override fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. links [androidJvm] open suspend override fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/#filefetcher","text":"[androidJvm]\\ class FileFetcher (paths: Map < String , File >) : Fetcher Provides access to resources on the local file system. paths contains the reachable local paths, indexed by the exposed HREF. Sub-paths are reachable as well, to be able to access a whole directory.","title":"FileFetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/#constructors","text":"FileFetcher [androidJvm] fun FileFetcher (href: String , file: File ) Provides access to the given local file at href . FileFetcher [androidJvm] fun FileFetcher (paths: Map < String , File >)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/#types","text":"Name Summary FileResource [androidJvm] class FileResource (link: Link , file: File ) : Resource","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/#functions","text":"Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. get [androidJvm] open fun get (href: String ): Resource Returns the Resource at the given href . [androidJvm] open override fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. links [androidJvm] open suspend override fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/-file-fetcher/","text":"// shared / org.readium.r2.shared.fetcher / FileFetcher / FileFetcher FileFetcher \u00b6 [androidJvm]\\ fun FileFetcher (href: String , file: File ) Provides access to the given local file at href . [androidJvm]\\ fun FileFetcher (paths: Map < String , File >)","title":" file fetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/-file-fetcher/#filefetcher","text":"[androidJvm]\\ fun FileFetcher (href: String , file: File ) Provides access to the given local file at href . [androidJvm]\\ fun FileFetcher (paths: Map < String , File >)","title":"FileFetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/close/","text":"// shared / org.readium.r2.shared.fetcher / FileFetcher / close close \u00b6 [androidJvm]\\ open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect.","title":"Close"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/close/#close","text":"[androidJvm]\\ open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect.","title":"close"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/get/","text":"// shared / org.readium.r2.shared.fetcher / FileFetcher / get get \u00b6 [androidJvm]\\ open override fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. A Resource is always returned, since for some cases we can't know if it exists before actually fetching it, such as HTTP. Therefore, errors are handled at the Resource level.","title":"Get"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/get/#get","text":"[androidJvm]\\ open override fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. A Resource is always returned, since for some cases we can't know if it exists before actually fetching it, such as HTTP. Therefore, errors are handled at the Resource level.","title":"get"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/links/","text":"// shared / org.readium.r2.shared.fetcher / FileFetcher / links links \u00b6 [androidJvm]\\ open suspend override fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable. If the medium has an inherent resource order, it should be followed. Otherwise, HREFs are sorted alphabetically.","title":"Links"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/links/#links","text":"[androidJvm]\\ open suspend override fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable. If the medium has an inherent resource order, it should be followed. Otherwise, HREFs are sorted alphabetically.","title":"links"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/-file-resource/","text":"// shared / org.readium.r2.shared.fetcher / FileFetcher / FileResource FileResource \u00b6 [androidJvm]\\ class FileResource (link: Link , file: File ) : Resource Functions \u00b6 Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. length [androidJvm] open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. link [androidJvm] open suspend override fun link (): Link Returns the link from which the resource was retrieved. read [androidJvm] open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. readAsJson [androidJvm] open suspend fun readAsJson (): ResourceTry < JSONObject > Reads the full content as a JSON object. readAsString [androidJvm] open suspend fun readAsString (charset: Charset ? = null): ResourceTry < String > Reads the full content as a String . readAsXml [androidJvm] open suspend fun readAsXml (): ResourceTry < ElementNode > Reads the full content as an XML document. toString [androidJvm] open override fun toString (): String Properties \u00b6 Name Summary file [androidJvm] open override val file : File Direct file to this resource, when available. link [androidJvm] val link : Link","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/-file-resource/#fileresource","text":"[androidJvm]\\ class FileResource (link: Link , file: File ) : Resource","title":"FileResource"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/-file-resource/#functions","text":"Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. length [androidJvm] open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. link [androidJvm] open suspend override fun link (): Link Returns the link from which the resource was retrieved. read [androidJvm] open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. readAsJson [androidJvm] open suspend fun readAsJson (): ResourceTry < JSONObject > Reads the full content as a JSON object. readAsString [androidJvm] open suspend fun readAsString (charset: Charset ? = null): ResourceTry < String > Reads the full content as a String . readAsXml [androidJvm] open suspend fun readAsXml (): ResourceTry < ElementNode > Reads the full content as an XML document. toString [androidJvm] open override fun toString (): String","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/-file-resource/#properties","text":"Name Summary file [androidJvm] open override val file : File Direct file to this resource, when available. link [androidJvm] val link : Link","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/-file-resource/-file-resource/","text":"// shared / org.readium.r2.shared.fetcher / FileFetcher / FileResource / FileResource FileResource \u00b6 [androidJvm]\\ fun FileResource (link: Link , file: File )","title":" file resource"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/-file-resource/-file-resource/#fileresource","text":"[androidJvm]\\ fun FileResource (link: Link , file: File )","title":"FileResource"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/-file-resource/close/","text":"// shared / org.readium.r2.shared.fetcher / FileFetcher / FileResource / close close \u00b6 [androidJvm]\\ open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect.","title":"Close"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/-file-resource/close/#close","text":"[androidJvm]\\ open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect.","title":"close"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/-file-resource/file/","text":"// shared / org.readium.r2.shared.fetcher / FileFetcher / FileResource / file file \u00b6 [androidJvm]\\ open override val file : File Direct file to this resource, when available. This is meant to be used as an optimization for consumers which can't work efficiently with streams. However, file is not guaranteed to be set, for example if the resource underwent transformations or is being read from an archive. Therefore, consumers should always fallback on regular stream reading, using read or ResourceInputStream .","title":"File"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/-file-resource/file/#file","text":"[androidJvm]\\ open override val file : File Direct file to this resource, when available. This is meant to be used as an optimization for consumers which can't work efficiently with streams. However, file is not guaranteed to be set, for example if the resource underwent transformations or is being read from an archive. Therefore, consumers should always fallback on regular stream reading, using read or ResourceInputStream .","title":"file"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/-file-resource/length/","text":"// shared / org.readium.r2.shared.fetcher / FileFetcher / FileResource / length length \u00b6 [androidJvm]\\ open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. This value must be treated as a hint, as it might not reflect the actual bytes length. To get the real length, you need to read the whole resource.","title":"Length"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/-file-resource/length/#length","text":"[androidJvm]\\ open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. This value must be treated as a hint, as it might not reflect the actual bytes length. To get the real length, you need to read the whole resource.","title":"length"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/-file-resource/link/","text":"// shared / org.readium.r2.shared.fetcher / FileFetcher / FileResource / link link \u00b6 [androidJvm]\\ open suspend override fun link (): Link Returns the link from which the resource was retrieved. It might be modified by the Resource to include additional metadata, e.g. the Content-Type HTTP header in Link.type . [androidJvm]\\ val link : Link","title":"Link"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/-file-resource/link/#link","text":"[androidJvm]\\ open suspend override fun link (): Link Returns the link from which the resource was retrieved. It might be modified by the Resource to include additional metadata, e.g. the Content-Type HTTP header in Link.type . [androidJvm]\\ val link : Link","title":"link"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/-file-resource/read/","text":"// shared / org.readium.r2.shared.fetcher / FileFetcher / FileResource / read read \u00b6 [androidJvm]\\ open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. When range is null, the whole content is returned. Out-of-range indexes are clamped to the available length automatically.","title":"Read"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/-file-resource/read/#read","text":"[androidJvm]\\ open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. When range is null, the whole content is returned. Out-of-range indexes are clamped to the available length automatically.","title":"read"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/-file-resource/to-string/","text":"// shared / org.readium.r2.shared.fetcher / FileFetcher / FileResource / toString toString \u00b6 [androidJvm]\\ open override fun toString (): String","title":"To string"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-file-fetcher/-file-resource/to-string/#tostring","text":"[androidJvm]\\ open override fun toString (): String","title":"toString"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-html-resource-content-extractor/","text":"// shared / org.readium.r2.shared.fetcher / HtmlResourceContentExtractor HtmlResourceContentExtractor \u00b6 [androidJvm]\\ class HtmlResourceContentExtractor : ResourceContentExtractor ResourceContentExtractor implementation for HTML resources. Constructors \u00b6 HtmlResourceContentExtractor [androidJvm] fun HtmlResourceContentExtractor () Functions \u00b6 Name Summary extractText [androidJvm] open suspend override fun extractText (resource: Resource ): ResourceTry < String > Extracts the text content of the given resource .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-html-resource-content-extractor/#htmlresourcecontentextractor","text":"[androidJvm]\\ class HtmlResourceContentExtractor : ResourceContentExtractor ResourceContentExtractor implementation for HTML resources.","title":"HtmlResourceContentExtractor"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-html-resource-content-extractor/#constructors","text":"HtmlResourceContentExtractor [androidJvm] fun HtmlResourceContentExtractor ()","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-html-resource-content-extractor/#functions","text":"Name Summary extractText [androidJvm] open suspend override fun extractText (resource: Resource ): ResourceTry < String > Extracts the text content of the given resource .","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-html-resource-content-extractor/-html-resource-content-extractor/","text":"// shared / org.readium.r2.shared.fetcher / HtmlResourceContentExtractor / HtmlResourceContentExtractor HtmlResourceContentExtractor \u00b6 [androidJvm]\\ fun HtmlResourceContentExtractor ()","title":" html resource content extractor"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-html-resource-content-extractor/-html-resource-content-extractor/#htmlresourcecontentextractor","text":"[androidJvm]\\ fun HtmlResourceContentExtractor ()","title":"HtmlResourceContentExtractor"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-html-resource-content-extractor/extract-text/","text":"// shared / org.readium.r2.shared.fetcher / HtmlResourceContentExtractor / extractText extractText \u00b6 [androidJvm]\\ open suspend override fun extractText (resource: Resource ): ResourceTry < String > Extracts the text content of the given resource .","title":"Extract text"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-html-resource-content-extractor/extract-text/#extracttext","text":"[androidJvm]\\ open suspend override fun extractText (resource: Resource ): ResourceTry < String > Extracts the text content of the given resource .","title":"extractText"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-http-fetcher/","text":"// shared / org.readium.r2.shared.fetcher / HttpFetcher HttpFetcher \u00b6 [androidJvm]\\ class HttpFetcher (client: HttpClient , baseUrl: String ?) : Fetcher Fetches remote resources through HTTP. Since this fetcher is used when doing progressive download streaming (e.g. audiobook), the HTTP byte range requests are open-ended and reused. This helps to avoid issuing too many requests. Parameters \u00b6 androidJvm client HTTP client used to perform HTTP requests. baseUrl Base URL from which relative HREF are served. Constructors \u00b6 HttpFetcher [androidJvm] fun HttpFetcher (client: HttpClient , baseUrl: String ? = null) Functions \u00b6 Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. get [androidJvm] open fun get (href: String ): Resource Returns the Resource at the given href . [androidJvm] open override fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. links [androidJvm] open suspend override fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-http-fetcher/#httpfetcher","text":"[androidJvm]\\ class HttpFetcher (client: HttpClient , baseUrl: String ?) : Fetcher Fetches remote resources through HTTP. Since this fetcher is used when doing progressive download streaming (e.g. audiobook), the HTTP byte range requests are open-ended and reused. This helps to avoid issuing too many requests.","title":"HttpFetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-http-fetcher/#parameters","text":"androidJvm client HTTP client used to perform HTTP requests. baseUrl Base URL from which relative HREF are served.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-http-fetcher/#constructors","text":"HttpFetcher [androidJvm] fun HttpFetcher (client: HttpClient , baseUrl: String ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-http-fetcher/#functions","text":"Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. get [androidJvm] open fun get (href: String ): Resource Returns the Resource at the given href . [androidJvm] open override fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. links [androidJvm] open suspend override fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-http-fetcher/-http-fetcher/","text":"// shared / org.readium.r2.shared.fetcher / HttpFetcher / HttpFetcher HttpFetcher \u00b6 [androidJvm]\\ fun HttpFetcher (client: HttpClient , baseUrl: String ? = null) Parameters \u00b6 androidJvm client HTTP client used to perform HTTP requests. baseUrl Base URL from which relative HREF are served.","title":" http fetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-http-fetcher/-http-fetcher/#httpfetcher","text":"[androidJvm]\\ fun HttpFetcher (client: HttpClient , baseUrl: String ? = null)","title":"HttpFetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-http-fetcher/-http-fetcher/#parameters","text":"androidJvm client HTTP client used to perform HTTP requests. baseUrl Base URL from which relative HREF are served.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-http-fetcher/close/","text":"// shared / org.readium.r2.shared.fetcher / HttpFetcher / close close \u00b6 [androidJvm]\\ open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect.","title":"Close"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-http-fetcher/close/#close","text":"[androidJvm]\\ open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect.","title":"close"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-http-fetcher/get/","text":"// shared / org.readium.r2.shared.fetcher / HttpFetcher / get get \u00b6 [androidJvm]\\ open override fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. A Resource is always returned, since for some cases we can't know if it exists before actually fetching it, such as HTTP. Therefore, errors are handled at the Resource level.","title":"Get"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-http-fetcher/get/#get","text":"[androidJvm]\\ open override fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. A Resource is always returned, since for some cases we can't know if it exists before actually fetching it, such as HTTP. Therefore, errors are handled at the Resource level.","title":"get"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-http-fetcher/links/","text":"// shared / org.readium.r2.shared.fetcher / HttpFetcher / links links \u00b6 [androidJvm]\\ open suspend override fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable. If the medium has an inherent resource order, it should be followed. Otherwise, HREFs are sorted alphabetically.","title":"Links"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-http-fetcher/links/#links","text":"[androidJvm]\\ open suspend override fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable. If the medium has an inherent resource order, it should be followed. Otherwise, HREFs are sorted alphabetically.","title":"links"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-lazy-resource/","text":"// shared / org.readium.r2.shared.fetcher / LazyResource LazyResource \u00b6 [androidJvm]\\ class LazyResource (factory: suspend () -> Resource ) : Resource Wraps a Resource which will be created only when first accessing one of its members. Constructors \u00b6 LazyResource [androidJvm] fun LazyResource (factory: suspend () -> Resource ) Functions \u00b6 Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. length [androidJvm] open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. link [androidJvm] open suspend override fun link (): Link Returns the link from which the resource was retrieved. read [androidJvm] open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. readAsJson [androidJvm] open suspend fun readAsJson (): ResourceTry < JSONObject > Reads the full content as a JSON object. readAsString [androidJvm] open suspend fun readAsString (charset: Charset ? = null): ResourceTry < String > Reads the full content as a String . readAsXml [androidJvm] open suspend fun readAsXml (): ResourceTry < ElementNode > Reads the full content as an XML document. toString [androidJvm] open override fun toString (): String Properties \u00b6 Name Summary file [androidJvm] open val file : File ? Direct file to this resource, when available.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-lazy-resource/#lazyresource","text":"[androidJvm]\\ class LazyResource (factory: suspend () -> Resource ) : Resource Wraps a Resource which will be created only when first accessing one of its members.","title":"LazyResource"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-lazy-resource/#constructors","text":"LazyResource [androidJvm] fun LazyResource (factory: suspend () -> Resource )","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-lazy-resource/#functions","text":"Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. length [androidJvm] open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. link [androidJvm] open suspend override fun link (): Link Returns the link from which the resource was retrieved. read [androidJvm] open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. readAsJson [androidJvm] open suspend fun readAsJson (): ResourceTry < JSONObject > Reads the full content as a JSON object. readAsString [androidJvm] open suspend fun readAsString (charset: Charset ? = null): ResourceTry < String > Reads the full content as a String . readAsXml [androidJvm] open suspend fun readAsXml (): ResourceTry < ElementNode > Reads the full content as an XML document. toString [androidJvm] open override fun toString (): String","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-lazy-resource/#properties","text":"Name Summary file [androidJvm] open val file : File ? Direct file to this resource, when available.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-lazy-resource/-lazy-resource/","text":"// shared / org.readium.r2.shared.fetcher / LazyResource / LazyResource LazyResource \u00b6 [androidJvm]\\ fun LazyResource (factory: suspend () -> Resource )","title":" lazy resource"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-lazy-resource/-lazy-resource/#lazyresource","text":"[androidJvm]\\ fun LazyResource (factory: suspend () -> Resource )","title":"LazyResource"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-lazy-resource/close/","text":"// shared / org.readium.r2.shared.fetcher / LazyResource / close close \u00b6 [androidJvm]\\ open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect.","title":"Close"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-lazy-resource/close/#close","text":"[androidJvm]\\ open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect.","title":"close"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-lazy-resource/length/","text":"// shared / org.readium.r2.shared.fetcher / LazyResource / length length \u00b6 [androidJvm]\\ open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. This value must be treated as a hint, as it might not reflect the actual bytes length. To get the real length, you need to read the whole resource.","title":"Length"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-lazy-resource/length/#length","text":"[androidJvm]\\ open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. This value must be treated as a hint, as it might not reflect the actual bytes length. To get the real length, you need to read the whole resource.","title":"length"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-lazy-resource/link/","text":"// shared / org.readium.r2.shared.fetcher / LazyResource / link link \u00b6 [androidJvm]\\ open suspend override fun link (): Link Returns the link from which the resource was retrieved. It might be modified by the Resource to include additional metadata, e.g. the Content-Type HTTP header in Link.type .","title":"Link"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-lazy-resource/link/#link","text":"[androidJvm]\\ open suspend override fun link (): Link Returns the link from which the resource was retrieved. It might be modified by the Resource to include additional metadata, e.g. the Content-Type HTTP header in Link.type .","title":"link"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-lazy-resource/read/","text":"// shared / org.readium.r2.shared.fetcher / LazyResource / read read \u00b6 [androidJvm]\\ open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. When range is null, the whole content is returned. Out-of-range indexes are clamped to the available length automatically.","title":"Read"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-lazy-resource/read/#read","text":"[androidJvm]\\ open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. When range is null, the whole content is returned. Out-of-range indexes are clamped to the available length automatically.","title":"read"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-lazy-resource/to-string/","text":"// shared / org.readium.r2.shared.fetcher / LazyResource / toString toString \u00b6 [androidJvm]\\ open override fun toString (): String","title":"To string"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-lazy-resource/to-string/#tostring","text":"[androidJvm]\\ open override fun toString (): String","title":"toString"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-proxy-resource/","text":"// shared / org.readium.r2.shared.fetcher / ProxyResource ProxyResource \u00b6 [androidJvm]\\ abstract class ProxyResource (resource: Resource ) : Resource A base class for a Resource which acts as a proxy to another one. Every function is delegating to the proxied resource, and subclasses should override some of them. Constructors \u00b6 ProxyResource [androidJvm] fun ProxyResource (resource: Resource ) Functions \u00b6 Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. length [androidJvm] open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. link [androidJvm] open suspend override fun link (): Link Returns the link from which the resource was retrieved. read [androidJvm] open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. readAsJson [androidJvm] open suspend fun readAsJson (): ResourceTry < JSONObject > Reads the full content as a JSON object. readAsString [androidJvm] open suspend fun readAsString (charset: Charset ? = null): ResourceTry < String > Reads the full content as a String . readAsXml [androidJvm] open suspend fun readAsXml (): ResourceTry < ElementNode > Reads the full content as an XML document. toString [androidJvm] open override fun toString (): String Properties \u00b6 Name Summary file [androidJvm] open override val file : File ? Direct file to this resource, when available. Inheritors \u00b6 Name TransformingResource BufferingResource","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-proxy-resource/#proxyresource","text":"[androidJvm]\\ abstract class ProxyResource (resource: Resource ) : Resource A base class for a Resource which acts as a proxy to another one. Every function is delegating to the proxied resource, and subclasses should override some of them.","title":"ProxyResource"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-proxy-resource/#constructors","text":"ProxyResource [androidJvm] fun ProxyResource (resource: Resource )","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-proxy-resource/#functions","text":"Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. length [androidJvm] open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. link [androidJvm] open suspend override fun link (): Link Returns the link from which the resource was retrieved. read [androidJvm] open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. readAsJson [androidJvm] open suspend fun readAsJson (): ResourceTry < JSONObject > Reads the full content as a JSON object. readAsString [androidJvm] open suspend fun readAsString (charset: Charset ? = null): ResourceTry < String > Reads the full content as a String . readAsXml [androidJvm] open suspend fun readAsXml (): ResourceTry < ElementNode > Reads the full content as an XML document. toString [androidJvm] open override fun toString (): String","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-proxy-resource/#properties","text":"Name Summary file [androidJvm] open override val file : File ? Direct file to this resource, when available.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-proxy-resource/#inheritors","text":"Name TransformingResource BufferingResource","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-proxy-resource/-proxy-resource/","text":"// shared / org.readium.r2.shared.fetcher / ProxyResource / ProxyResource ProxyResource \u00b6 [androidJvm]\\ fun ProxyResource (resource: Resource )","title":" proxy resource"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-proxy-resource/-proxy-resource/#proxyresource","text":"[androidJvm]\\ fun ProxyResource (resource: Resource )","title":"ProxyResource"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-proxy-resource/close/","text":"// shared / org.readium.r2.shared.fetcher / ProxyResource / close close \u00b6 [androidJvm]\\ open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect.","title":"Close"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-proxy-resource/close/#close","text":"[androidJvm]\\ open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect.","title":"close"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-proxy-resource/file/","text":"// shared / org.readium.r2.shared.fetcher / ProxyResource / file file \u00b6 [androidJvm]\\ open override val file : File ? Direct file to this resource, when available. This is meant to be used as an optimization for consumers which can't work efficiently with streams. However, file is not guaranteed to be set, for example if the resource underwent transformations or is being read from an archive. Therefore, consumers should always fallback on regular stream reading, using read or ResourceInputStream .","title":"File"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-proxy-resource/file/#file","text":"[androidJvm]\\ open override val file : File ? Direct file to this resource, when available. This is meant to be used as an optimization for consumers which can't work efficiently with streams. However, file is not guaranteed to be set, for example if the resource underwent transformations or is being read from an archive. Therefore, consumers should always fallback on regular stream reading, using read or ResourceInputStream .","title":"file"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-proxy-resource/length/","text":"// shared / org.readium.r2.shared.fetcher / ProxyResource / length length \u00b6 [androidJvm]\\ open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. This value must be treated as a hint, as it might not reflect the actual bytes length. To get the real length, you need to read the whole resource.","title":"Length"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-proxy-resource/length/#length","text":"[androidJvm]\\ open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. This value must be treated as a hint, as it might not reflect the actual bytes length. To get the real length, you need to read the whole resource.","title":"length"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-proxy-resource/link/","text":"// shared / org.readium.r2.shared.fetcher / ProxyResource / link link \u00b6 [androidJvm]\\ open suspend override fun link (): Link Returns the link from which the resource was retrieved. It might be modified by the Resource to include additional metadata, e.g. the Content-Type HTTP header in Link.type .","title":"Link"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-proxy-resource/link/#link","text":"[androidJvm]\\ open suspend override fun link (): Link Returns the link from which the resource was retrieved. It might be modified by the Resource to include additional metadata, e.g. the Content-Type HTTP header in Link.type .","title":"link"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-proxy-resource/read/","text":"// shared / org.readium.r2.shared.fetcher / ProxyResource / read read \u00b6 [androidJvm]\\ open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. When range is null, the whole content is returned. Out-of-range indexes are clamped to the available length automatically.","title":"Read"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-proxy-resource/read/#read","text":"[androidJvm]\\ open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. When range is null, the whole content is returned. Out-of-range indexes are clamped to the available length automatically.","title":"read"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-proxy-resource/to-string/","text":"// shared / org.readium.r2.shared.fetcher / ProxyResource / toString toString \u00b6 [androidJvm]\\ open override fun toString (): String","title":"To string"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-proxy-resource/to-string/#tostring","text":"[androidJvm]\\ open override fun toString (): String","title":"toString"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/","text":"// shared / org.readium.r2.shared.fetcher / Resource Resource \u00b6 [androidJvm]\\ interface Resource : SuspendingCloseable Acts as a proxy to an actual resource by handling read access. Types \u00b6 Name Summary Companion [androidJvm] object Companion Exception [androidJvm] sealed class Exception : UserException Errors occurring while accessing a resource. Functions \u00b6 Name Summary close [androidJvm] abstract suspend fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. length [androidJvm] abstract suspend fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. link [androidJvm] abstract suspend fun link (): Link Returns the link from which the resource was retrieved. read [androidJvm] abstract suspend fun read (range: LongRange ? = null): ResourceTry < ByteArray > Reads the bytes at the given range. readAsJson [androidJvm] open suspend fun readAsJson (): ResourceTry < JSONObject > Reads the full content as a JSON object. readAsString [androidJvm] open suspend fun readAsString (charset: Charset ? = null): ResourceTry < String > Reads the full content as a String . readAsXml [androidJvm] open suspend fun readAsXml (): ResourceTry < ElementNode > Reads the full content as an XML document. Properties \u00b6 Name Summary file [androidJvm] open val file : File ? Direct file to this resource, when available. Inheritors \u00b6 Name BaseBytesResource FileFetcher FailureResource ProxyResource LazyResource Extensions \u00b6 Name Summary buffered [androidJvm] fun Resource . buffered (resourceLength: Long ? = null, size: Long = BufferingResource.DEFAULT_BUFFER_SIZE): BufferingResource Wraps this resource in a BufferingResource to improve reading performances.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/#resource","text":"[androidJvm]\\ interface Resource : SuspendingCloseable Acts as a proxy to an actual resource by handling read access.","title":"Resource"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/#types","text":"Name Summary Companion [androidJvm] object Companion Exception [androidJvm] sealed class Exception : UserException Errors occurring while accessing a resource.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/#functions","text":"Name Summary close [androidJvm] abstract suspend fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. length [androidJvm] abstract suspend fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. link [androidJvm] abstract suspend fun link (): Link Returns the link from which the resource was retrieved. read [androidJvm] abstract suspend fun read (range: LongRange ? = null): ResourceTry < ByteArray > Reads the bytes at the given range. readAsJson [androidJvm] open suspend fun readAsJson (): ResourceTry < JSONObject > Reads the full content as a JSON object. readAsString [androidJvm] open suspend fun readAsString (charset: Charset ? = null): ResourceTry < String > Reads the full content as a String . readAsXml [androidJvm] open suspend fun readAsXml (): ResourceTry < ElementNode > Reads the full content as an XML document.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/#properties","text":"Name Summary file [androidJvm] open val file : File ? Direct file to this resource, when available.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/#inheritors","text":"Name BaseBytesResource FileFetcher FailureResource ProxyResource LazyResource","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/#extensions","text":"Name Summary buffered [androidJvm] fun Resource . buffered (resourceLength: Long ? = null, size: Long = BufferingResource.DEFAULT_BUFFER_SIZE): BufferingResource Wraps this resource in a BufferingResource to improve reading performances.","title":"Extensions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/file/","text":"// shared / org.readium.r2.shared.fetcher / Resource / file file \u00b6 [androidJvm]\\ open val file : File ? Direct file to this resource, when available. This is meant to be used as an optimization for consumers which can't work efficiently with streams. However, file is not guaranteed to be set, for example if the resource underwent transformations or is being read from an archive. Therefore, consumers should always fallback on regular stream reading, using read or ResourceInputStream .","title":"File"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/file/#file","text":"[androidJvm]\\ open val file : File ? Direct file to this resource, when available. This is meant to be used as an optimization for consumers which can't work efficiently with streams. However, file is not guaranteed to be set, for example if the resource underwent transformations or is being read from an archive. Therefore, consumers should always fallback on regular stream reading, using read or ResourceInputStream .","title":"file"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/length/","text":"// shared / org.readium.r2.shared.fetcher / Resource / length length \u00b6 [androidJvm]\\ abstract suspend fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. This value must be treated as a hint, as it might not reflect the actual bytes length. To get the real length, you need to read the whole resource.","title":"Length"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/length/#length","text":"[androidJvm]\\ abstract suspend fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. This value must be treated as a hint, as it might not reflect the actual bytes length. To get the real length, you need to read the whole resource.","title":"length"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/link/","text":"// shared / org.readium.r2.shared.fetcher / Resource / link link \u00b6 [androidJvm]\\ abstract suspend fun link (): Link Returns the link from which the resource was retrieved. It might be modified by the Resource to include additional metadata, e.g. the Content-Type HTTP header in Link.type .","title":"Link"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/link/#link","text":"[androidJvm]\\ abstract suspend fun link (): Link Returns the link from which the resource was retrieved. It might be modified by the Resource to include additional metadata, e.g. the Content-Type HTTP header in Link.type .","title":"link"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/read-as-json/","text":"// shared / org.readium.r2.shared.fetcher / Resource / readAsJson readAsJson \u00b6 [androidJvm]\\ open suspend fun readAsJson (): ResourceTry < JSONObject > Reads the full content as a JSON object.","title":"Read as json"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/read-as-json/#readasjson","text":"[androidJvm]\\ open suspend fun readAsJson (): ResourceTry < JSONObject > Reads the full content as a JSON object.","title":"readAsJson"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/read-as-string/","text":"// shared / org.readium.r2.shared.fetcher / Resource / readAsString readAsString \u00b6 [androidJvm]\\ open suspend fun readAsString (charset: Charset ? = null): ResourceTry < String > Reads the full content as a String . If charset is null, then it is parsed from the charset parameter of link().type, or falls back on UTF-8.","title":"Read as string"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/read-as-string/#readasstring","text":"[androidJvm]\\ open suspend fun readAsString (charset: Charset ? = null): ResourceTry < String > Reads the full content as a String . If charset is null, then it is parsed from the charset parameter of link().type, or falls back on UTF-8.","title":"readAsString"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/read-as-xml/","text":"// shared / org.readium.r2.shared.fetcher / Resource / readAsXml readAsXml \u00b6 [androidJvm]\\ open suspend fun readAsXml (): ResourceTry < ElementNode > Reads the full content as an XML document.","title":"Read as xml"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/read-as-xml/#readasxml","text":"[androidJvm]\\ open suspend fun readAsXml (): ResourceTry < ElementNode > Reads the full content as an XML document.","title":"readAsXml"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/read/","text":"// shared / org.readium.r2.shared.fetcher / Resource / read read \u00b6 [androidJvm]\\ abstract suspend fun read (range: LongRange ? = null): ResourceTry < ByteArray > Reads the bytes at the given range. When range is null, the whole content is returned. Out-of-range indexes are clamped to the available length automatically.","title":"Read"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/read/#read","text":"[androidJvm]\\ abstract suspend fun read (range: LongRange ? = null): ResourceTry < ByteArray > Reads the bytes at the given range. When range is null, the whole content is returned. Out-of-range indexes are clamped to the available length automatically.","title":"read"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-companion/","text":"// shared / org.readium.r2.shared.fetcher / Resource / Companion Companion \u00b6 [androidJvm]\\ object Companion","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/","text":"// shared / org.readium.r2.shared.fetcher / Resource / Exception Exception \u00b6 [androidJvm]\\ sealed class Exception : UserException Errors occurring while accessing a resource. Types \u00b6 Name Summary BadRequest [androidJvm] class BadRequest (parameters: Map < String , String >, cause: Throwable ?) : Resource.Exception Equivalent to a 400 HTTP error. Cancelled [androidJvm] object Cancelled : Resource.Exception The request was cancelled by the caller. Companion [androidJvm] object Companion Forbidden [androidJvm] class Forbidden (cause: Throwable ?) : Resource.Exception Equivalent to a 403 HTTP error. NotFound [androidJvm] class NotFound (cause: Throwable ?) : Resource.Exception Equivalent to a 404 HTTP error. Offline [androidJvm] object Offline : Resource.Exception The Internet connection appears to be offline. Other [androidJvm] class Other (cause: Throwable ) : Resource.Exception For any other error, such as HTTP 500. OutOfMemory [androidJvm] class OutOfMemory (cause: OutOfMemoryError ) : Resource.Exception Equivalent to a 507 HTTP error. Unavailable [androidJvm] class Unavailable (cause: Throwable ?) : Resource.Exception Equivalent to a 503 HTTP error. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? Inheritors \u00b6 Name Resource.Exception Resource.Exception Resource.Exception Resource.Exception Resource.Exception Resource.Exception Resource.Exception Resource.Exception","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/#exception","text":"[androidJvm]\\ sealed class Exception : UserException Errors occurring while accessing a resource.","title":"Exception"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/#types","text":"Name Summary BadRequest [androidJvm] class BadRequest (parameters: Map < String , String >, cause: Throwable ?) : Resource.Exception Equivalent to a 400 HTTP error. Cancelled [androidJvm] object Cancelled : Resource.Exception The request was cancelled by the caller. Companion [androidJvm] object Companion Forbidden [androidJvm] class Forbidden (cause: Throwable ?) : Resource.Exception Equivalent to a 403 HTTP error. NotFound [androidJvm] class NotFound (cause: Throwable ?) : Resource.Exception Equivalent to a 404 HTTP error. Offline [androidJvm] object Offline : Resource.Exception The Internet connection appears to be offline. Other [androidJvm] class Other (cause: Throwable ) : Resource.Exception For any other error, such as HTTP 500. OutOfMemory [androidJvm] class OutOfMemory (cause: OutOfMemoryError ) : Resource.Exception Equivalent to a 507 HTTP error. Unavailable [androidJvm] class Unavailable (cause: Throwable ?) : Resource.Exception Equivalent to a 503 HTTP error.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/#inheritors","text":"Name Resource.Exception Resource.Exception Resource.Exception Resource.Exception Resource.Exception Resource.Exception Resource.Exception Resource.Exception","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-bad-request/","text":"// shared / org.readium.r2.shared.fetcher / Resource / Exception / BadRequest BadRequest \u00b6 [androidJvm]\\ class BadRequest (parameters: Map < String , String >, cause: Throwable ?) : Resource.Exception Equivalent to a 400 HTTP error. Constructors \u00b6 BadRequest [androidJvm] fun BadRequest (parameters: Map < String , String > = emptyMap(), cause: Throwable ? = null) Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? parameters [androidJvm] val parameters : Map < String , String >","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-bad-request/#badrequest","text":"[androidJvm]\\ class BadRequest (parameters: Map < String , String >, cause: Throwable ?) : Resource.Exception Equivalent to a 400 HTTP error.","title":"BadRequest"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-bad-request/#constructors","text":"BadRequest [androidJvm] fun BadRequest (parameters: Map < String , String > = emptyMap(), cause: Throwable ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-bad-request/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-bad-request/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? parameters [androidJvm] val parameters : Map < String , String >","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-bad-request/-bad-request/","text":"// shared / org.readium.r2.shared.fetcher / Resource / Exception / BadRequest / BadRequest BadRequest \u00b6 [androidJvm]\\ fun BadRequest (parameters: Map < String , String > = emptyMap(), cause: Throwable ? = null)","title":" bad request"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-bad-request/-bad-request/#badrequest","text":"[androidJvm]\\ fun BadRequest (parameters: Map < String , String > = emptyMap(), cause: Throwable ? = null)","title":"BadRequest"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-bad-request/parameters/","text":"// shared / org.readium.r2.shared.fetcher / Resource / Exception / BadRequest / parameters parameters \u00b6 [androidJvm]\\ val parameters : Map < String , String >","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-bad-request/parameters/#parameters","text":"[androidJvm]\\ val parameters : Map < String , String >","title":"parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-cancelled/","text":"// shared / org.readium.r2.shared.fetcher / Resource / Exception / Cancelled Cancelled \u00b6 [androidJvm]\\ object Cancelled : Resource.Exception The request was cancelled by the caller. For example, when a coroutine is cancelled. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-cancelled/#cancelled","text":"[androidJvm]\\ object Cancelled : Resource.Exception The request was cancelled by the caller. For example, when a coroutine is cancelled.","title":"Cancelled"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-cancelled/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-cancelled/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-companion/","text":"// shared / org.readium.r2.shared.fetcher / Resource / Exception / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary wrap [androidJvm] fun wrap (e: Throwable ): Resource.Exception","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-companion/#functions","text":"Name Summary wrap [androidJvm] fun wrap (e: Throwable ): Resource.Exception","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-companion/wrap/","text":"// shared / org.readium.r2.shared.fetcher / Resource / Exception / Companion / wrap wrap \u00b6 [androidJvm]\\ fun wrap (e: Throwable ): Resource.Exception","title":"Wrap"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-companion/wrap/#wrap","text":"[androidJvm]\\ fun wrap (e: Throwable ): Resource.Exception","title":"wrap"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-forbidden/","text":"// shared / org.readium.r2.shared.fetcher / Resource / Exception / Forbidden Forbidden \u00b6 [androidJvm]\\ class Forbidden (cause: Throwable ?) : Resource.Exception Equivalent to a 403 HTTP error. This can be returned when trying to read a resource protected with a DRM that is not unlocked. Constructors \u00b6 Forbidden [androidJvm] fun Forbidden (cause: Throwable ? = null) Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-forbidden/#forbidden","text":"[androidJvm]\\ class Forbidden (cause: Throwable ?) : Resource.Exception Equivalent to a 403 HTTP error. This can be returned when trying to read a resource protected with a DRM that is not unlocked.","title":"Forbidden"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-forbidden/#constructors","text":"Forbidden [androidJvm] fun Forbidden (cause: Throwable ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-forbidden/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-forbidden/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-forbidden/-forbidden/","text":"// shared / org.readium.r2.shared.fetcher / Resource / Exception / Forbidden / Forbidden Forbidden \u00b6 [androidJvm]\\ fun Forbidden (cause: Throwable ? = null)","title":" forbidden"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-forbidden/-forbidden/#forbidden","text":"[androidJvm]\\ fun Forbidden (cause: Throwable ? = null)","title":"Forbidden"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-not-found/","text":"// shared / org.readium.r2.shared.fetcher / Resource / Exception / NotFound NotFound \u00b6 [androidJvm]\\ class NotFound (cause: Throwable ?) : Resource.Exception Equivalent to a 404 HTTP error. Constructors \u00b6 NotFound [androidJvm] fun NotFound (cause: Throwable ? = null) Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-not-found/#notfound","text":"[androidJvm]\\ class NotFound (cause: Throwable ?) : Resource.Exception Equivalent to a 404 HTTP error.","title":"NotFound"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-not-found/#constructors","text":"NotFound [androidJvm] fun NotFound (cause: Throwable ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-not-found/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-not-found/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-not-found/-not-found/","text":"// shared / org.readium.r2.shared.fetcher / Resource / Exception / NotFound / NotFound NotFound \u00b6 [androidJvm]\\ fun NotFound (cause: Throwable ? = null)","title":" not found"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-not-found/-not-found/#notfound","text":"[androidJvm]\\ fun NotFound (cause: Throwable ? = null)","title":"NotFound"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-offline/","text":"// shared / org.readium.r2.shared.fetcher / Resource / Exception / Offline Offline \u00b6 [androidJvm]\\ object Offline : Resource.Exception The Internet connection appears to be offline. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-offline/#offline","text":"[androidJvm]\\ object Offline : Resource.Exception The Internet connection appears to be offline.","title":"Offline"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-offline/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-offline/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-other/","text":"// shared / org.readium.r2.shared.fetcher / Resource / Exception / Other Other \u00b6 [androidJvm]\\ class Other (cause: Throwable ) : Resource.Exception For any other error, such as HTTP 500. Constructors \u00b6 Other [androidJvm] fun Other (cause: Throwable ) Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-other/#other","text":"[androidJvm]\\ class Other (cause: Throwable ) : Resource.Exception For any other error, such as HTTP 500.","title":"Other"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-other/#constructors","text":"Other [androidJvm] fun Other (cause: Throwable )","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-other/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-other/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-other/-other/","text":"// shared / org.readium.r2.shared.fetcher / Resource / Exception / Other / Other Other \u00b6 [androidJvm]\\ fun Other (cause: Throwable )","title":" other"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-other/-other/#other","text":"[androidJvm]\\ fun Other (cause: Throwable )","title":"Other"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-out-of-memory/","text":"// shared / org.readium.r2.shared.fetcher / Resource / Exception / OutOfMemory OutOfMemory \u00b6 [androidJvm]\\ class OutOfMemory (cause: OutOfMemoryError ) : Resource.Exception Equivalent to a 507 HTTP error. Used when the requested range is too large to be read in memory. Constructors \u00b6 OutOfMemory [androidJvm] fun OutOfMemory (cause: OutOfMemoryError ) Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-out-of-memory/#outofmemory","text":"[androidJvm]\\ class OutOfMemory (cause: OutOfMemoryError ) : Resource.Exception Equivalent to a 507 HTTP error. Used when the requested range is too large to be read in memory.","title":"OutOfMemory"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-out-of-memory/#constructors","text":"OutOfMemory [androidJvm] fun OutOfMemory (cause: OutOfMemoryError )","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-out-of-memory/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-out-of-memory/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-out-of-memory/-out-of-memory/","text":"// shared / org.readium.r2.shared.fetcher / Resource / Exception / OutOfMemory / OutOfMemory OutOfMemory \u00b6 [androidJvm]\\ fun OutOfMemory (cause: OutOfMemoryError )","title":" out of memory"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-out-of-memory/-out-of-memory/#outofmemory","text":"[androidJvm]\\ fun OutOfMemory (cause: OutOfMemoryError )","title":"OutOfMemory"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-unavailable/","text":"// shared / org.readium.r2.shared.fetcher / Resource / Exception / Unavailable Unavailable \u00b6 [androidJvm]\\ class Unavailable (cause: Throwable ?) : Resource.Exception Equivalent to a 503 HTTP error. Used when the source can't be reached, e.g. no Internet connection, or an issue with the file system. Usually this is a temporary error. Constructors \u00b6 Unavailable [androidJvm] fun Unavailable (cause: Throwable ? = null) Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-unavailable/#unavailable","text":"[androidJvm]\\ class Unavailable (cause: Throwable ?) : Resource.Exception Equivalent to a 503 HTTP error. Used when the source can't be reached, e.g. no Internet connection, or an issue with the file system. Usually this is a temporary error.","title":"Unavailable"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-unavailable/#constructors","text":"Unavailable [androidJvm] fun Unavailable (cause: Throwable ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-unavailable/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-unavailable/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-unavailable/-unavailable/","text":"// shared / org.readium.r2.shared.fetcher / Resource / Exception / Unavailable / Unavailable Unavailable \u00b6 [androidJvm]\\ fun Unavailable (cause: Throwable ? = null)","title":" unavailable"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource/-exception/-unavailable/-unavailable/#unavailable","text":"[androidJvm]\\ fun Unavailable (cause: Throwable ? = null)","title":"Unavailable"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-content-extractor/","text":"// shared / org.readium.r2.shared.fetcher / ResourceContentExtractor ResourceContentExtractor \u00b6 [androidJvm]\\ interface ResourceContentExtractor Extracts pure content from a marked-up (e.g. HTML) or binary (e.g. PDF) resource. Types \u00b6 Name Summary Factory [androidJvm] interface Factory Functions \u00b6 Name Summary extractText [androidJvm] open suspend fun extractText (resource: Resource ): ResourceTry < String > Extracts the text content of the given resource . Inheritors \u00b6 Name HtmlResourceContentExtractor","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-content-extractor/#resourcecontentextractor","text":"[androidJvm]\\ interface ResourceContentExtractor Extracts pure content from a marked-up (e.g. HTML) or binary (e.g. PDF) resource.","title":"ResourceContentExtractor"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-content-extractor/#types","text":"Name Summary Factory [androidJvm] interface Factory","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-content-extractor/#functions","text":"Name Summary extractText [androidJvm] open suspend fun extractText (resource: Resource ): ResourceTry < String > Extracts the text content of the given resource .","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-content-extractor/#inheritors","text":"Name HtmlResourceContentExtractor","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-content-extractor/extract-text/","text":"// shared / org.readium.r2.shared.fetcher / ResourceContentExtractor / extractText extractText \u00b6 [androidJvm]\\ open suspend fun extractText (resource: Resource ): ResourceTry < String > Extracts the text content of the given resource .","title":"Extract text"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-content-extractor/extract-text/#extracttext","text":"[androidJvm]\\ open suspend fun extractText (resource: Resource ): ResourceTry < String > Extracts the text content of the given resource .","title":"extractText"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-content-extractor/-factory/","text":"// shared / org.readium.r2.shared.fetcher / ResourceContentExtractor / Factory Factory \u00b6 [androidJvm]\\ interface Factory Functions \u00b6 Name Summary createExtractor [androidJvm] abstract suspend fun createExtractor (resource: Resource ): ResourceContentExtractor ? Creates a ResourceContentExtractor instance for the given resource . Inheritors \u00b6 Name DefaultResourceContentExtractorFactory","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-content-extractor/-factory/#factory","text":"[androidJvm]\\ interface Factory","title":"Factory"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-content-extractor/-factory/#functions","text":"Name Summary createExtractor [androidJvm] abstract suspend fun createExtractor (resource: Resource ): ResourceContentExtractor ? Creates a ResourceContentExtractor instance for the given resource .","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-content-extractor/-factory/#inheritors","text":"Name DefaultResourceContentExtractorFactory","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-content-extractor/-factory/create-extractor/","text":"// shared / org.readium.r2.shared.fetcher / ResourceContentExtractor / Factory / createExtractor createExtractor \u00b6 [androidJvm]\\ abstract suspend fun createExtractor (resource: Resource ): ResourceContentExtractor ? Creates a ResourceContentExtractor instance for the given resource . Return null if the resource format is not supported.","title":"Create extractor"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-content-extractor/-factory/create-extractor/#createextractor","text":"[androidJvm]\\ abstract suspend fun createExtractor (resource: Resource ): ResourceContentExtractor ? Creates a ResourceContentExtractor instance for the given resource . Return null if the resource format is not supported.","title":"createExtractor"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-input-stream/","text":"// shared / org.readium.r2.shared.fetcher / ResourceInputStream ResourceInputStream \u00b6 [androidJvm]\\ class ResourceInputStream (resource: Resource , range: LongRange ?) : InputStream Input stream reading a Resource 's content. If you experience bad performances, consider wrapping the stream in a BufferedInputStream. This is particularly useful when streaming deflated ZIP entries. Constructors \u00b6 ResourceInputStream [androidJvm] fun ResourceInputStream (resource: Resource , range: LongRange ? = null) Functions \u00b6 Name Summary available [androidJvm] open override fun available (): Int close [androidJvm] open override fun close () Closes the underlying resource. mark [androidJvm] open override fun mark (readlimit: Int ) markSupported [androidJvm] open override fun markSupported (): Boolean read [androidJvm] open override fun read (): Int open fun read (p0: ByteArray ): Int open override fun read (b: ByteArray , off: Int , len: Int ): Int reset [androidJvm] open override fun reset () skip [androidJvm] open override fun skip (n: Long ): Long Properties \u00b6 Name Summary range [androidJvm] val range : LongRange ? = null","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-input-stream/#resourceinputstream","text":"[androidJvm]\\ class ResourceInputStream (resource: Resource , range: LongRange ?) : InputStream Input stream reading a Resource 's content. If you experience bad performances, consider wrapping the stream in a BufferedInputStream. This is particularly useful when streaming deflated ZIP entries.","title":"ResourceInputStream"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-input-stream/#constructors","text":"ResourceInputStream [androidJvm] fun ResourceInputStream (resource: Resource , range: LongRange ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-input-stream/#functions","text":"Name Summary available [androidJvm] open override fun available (): Int close [androidJvm] open override fun close () Closes the underlying resource. mark [androidJvm] open override fun mark (readlimit: Int ) markSupported [androidJvm] open override fun markSupported (): Boolean read [androidJvm] open override fun read (): Int open fun read (p0: ByteArray ): Int open override fun read (b: ByteArray , off: Int , len: Int ): Int reset [androidJvm] open override fun reset () skip [androidJvm] open override fun skip (n: Long ): Long","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-input-stream/#properties","text":"Name Summary range [androidJvm] val range : LongRange ? = null","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-input-stream/-resource-input-stream/","text":"// shared / org.readium.r2.shared.fetcher / ResourceInputStream / ResourceInputStream ResourceInputStream \u00b6 [androidJvm]\\ fun ResourceInputStream (resource: Resource , range: LongRange ? = null)","title":" resource input stream"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-input-stream/-resource-input-stream/#resourceinputstream","text":"[androidJvm]\\ fun ResourceInputStream (resource: Resource , range: LongRange ? = null)","title":"ResourceInputStream"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-input-stream/available/","text":"// shared / org.readium.r2.shared.fetcher / ResourceInputStream / available available \u00b6 [androidJvm]\\ open override fun available (): Int","title":"Available"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-input-stream/available/#available","text":"[androidJvm]\\ open override fun available (): Int","title":"available"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-input-stream/close/","text":"// shared / org.readium.r2.shared.fetcher / ResourceInputStream / close close \u00b6 [androidJvm]\\ open override fun close () Closes the underlying resource.","title":"Close"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-input-stream/close/#close","text":"[androidJvm]\\ open override fun close () Closes the underlying resource.","title":"close"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-input-stream/mark-supported/","text":"// shared / org.readium.r2.shared.fetcher / ResourceInputStream / markSupported markSupported \u00b6 [androidJvm]\\ open override fun markSupported (): Boolean","title":"Mark supported"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-input-stream/mark-supported/#marksupported","text":"[androidJvm]\\ open override fun markSupported (): Boolean","title":"markSupported"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-input-stream/mark/","text":"// shared / org.readium.r2.shared.fetcher / ResourceInputStream / mark mark \u00b6 [androidJvm]\\ open override fun mark (readlimit: Int )","title":"Mark"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-input-stream/mark/#mark","text":"[androidJvm]\\ open override fun mark (readlimit: Int )","title":"mark"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-input-stream/range/","text":"// shared / org.readium.r2.shared.fetcher / ResourceInputStream / range range \u00b6 [androidJvm]\\ val range : LongRange ? = null","title":"Range"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-input-stream/range/#range","text":"[androidJvm]\\ val range : LongRange ? = null","title":"range"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-input-stream/read/","text":"// shared / org.readium.r2.shared.fetcher / ResourceInputStream / read read \u00b6 [androidJvm]\\ open override fun read (): Int open override fun read (b: ByteArray , off: Int , len: Int ): Int","title":"Read"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-input-stream/read/#read","text":"[androidJvm]\\ open override fun read (): Int open override fun read (b: ByteArray , off: Int , len: Int ): Int","title":"read"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-input-stream/reset/","text":"// shared / org.readium.r2.shared.fetcher / ResourceInputStream / reset reset \u00b6 [androidJvm]\\ open override fun reset ()","title":"Reset"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-input-stream/reset/#reset","text":"[androidJvm]\\ open override fun reset ()","title":"reset"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-input-stream/skip/","text":"// shared / org.readium.r2.shared.fetcher / ResourceInputStream / skip skip \u00b6 [androidJvm]\\ open override fun skip (n: Long ): Long","title":"Skip"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-resource-input-stream/skip/#skip","text":"[androidJvm]\\ open override fun skip (n: Long ): Long","title":"skip"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-routing-fetcher/","text":"// shared / org.readium.r2.shared.fetcher / RoutingFetcher RoutingFetcher \u00b6 [androidJvm]\\ class RoutingFetcher (routes: List < RoutingFetcher.Route >) : Fetcher Routes requests to child fetchers, depending on a provided predicate. This can be used for example to serve a publication containing both local and remote resources, and more generally to concatenate different content sources. The routes will be tested in the given order. Constructors \u00b6 RoutingFetcher [androidJvm] fun RoutingFetcher (local: Fetcher , remote: Fetcher ) RoutingFetcher [androidJvm] fun RoutingFetcher (routes: List < RoutingFetcher.Route >) Types \u00b6 Name Summary Route [androidJvm] class Route (fetcher: Fetcher , accepts: ( Link ) -> Boolean ) Holds a child fetcher and the predicate used to determine if it can answer a request. Functions \u00b6 Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. get [androidJvm] open fun get (href: String ): Resource Returns the Resource at the given href . [androidJvm] open override fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. links [androidJvm] open suspend override fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-routing-fetcher/#routingfetcher","text":"[androidJvm]\\ class RoutingFetcher (routes: List < RoutingFetcher.Route >) : Fetcher Routes requests to child fetchers, depending on a provided predicate. This can be used for example to serve a publication containing both local and remote resources, and more generally to concatenate different content sources. The routes will be tested in the given order.","title":"RoutingFetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-routing-fetcher/#constructors","text":"RoutingFetcher [androidJvm] fun RoutingFetcher (local: Fetcher , remote: Fetcher ) RoutingFetcher [androidJvm] fun RoutingFetcher (routes: List < RoutingFetcher.Route >)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-routing-fetcher/#types","text":"Name Summary Route [androidJvm] class Route (fetcher: Fetcher , accepts: ( Link ) -> Boolean ) Holds a child fetcher and the predicate used to determine if it can answer a request.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-routing-fetcher/#functions","text":"Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. get [androidJvm] open fun get (href: String ): Resource Returns the Resource at the given href . [androidJvm] open override fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. links [androidJvm] open suspend override fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-routing-fetcher/-routing-fetcher/","text":"// shared / org.readium.r2.shared.fetcher / RoutingFetcher / RoutingFetcher RoutingFetcher \u00b6 [androidJvm]\\ fun RoutingFetcher (local: Fetcher , remote: Fetcher ) fun RoutingFetcher (routes: List < RoutingFetcher.Route >)","title":" routing fetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-routing-fetcher/-routing-fetcher/#routingfetcher","text":"[androidJvm]\\ fun RoutingFetcher (local: Fetcher , remote: Fetcher ) fun RoutingFetcher (routes: List < RoutingFetcher.Route >)","title":"RoutingFetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-routing-fetcher/close/","text":"// shared / org.readium.r2.shared.fetcher / RoutingFetcher / close close \u00b6 [androidJvm]\\ open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect.","title":"Close"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-routing-fetcher/close/#close","text":"[androidJvm]\\ open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect.","title":"close"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-routing-fetcher/get/","text":"// shared / org.readium.r2.shared.fetcher / RoutingFetcher / get get \u00b6 [androidJvm]\\ open override fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. A Resource is always returned, since for some cases we can't know if it exists before actually fetching it, such as HTTP. Therefore, errors are handled at the Resource level.","title":"Get"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-routing-fetcher/get/#get","text":"[androidJvm]\\ open override fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. A Resource is always returned, since for some cases we can't know if it exists before actually fetching it, such as HTTP. Therefore, errors are handled at the Resource level.","title":"get"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-routing-fetcher/links/","text":"// shared / org.readium.r2.shared.fetcher / RoutingFetcher / links links \u00b6 [androidJvm]\\ open suspend override fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable. If the medium has an inherent resource order, it should be followed. Otherwise, HREFs are sorted alphabetically.","title":"Links"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-routing-fetcher/links/#links","text":"[androidJvm]\\ open suspend override fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable. If the medium has an inherent resource order, it should be followed. Otherwise, HREFs are sorted alphabetically.","title":"links"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-routing-fetcher/-route/","text":"// shared / org.readium.r2.shared.fetcher / RoutingFetcher / Route Route \u00b6 [androidJvm]\\ class Route (fetcher: Fetcher , accepts: ( Link ) -> Boolean ) Holds a child fetcher and the predicate used to determine if it can answer a request. The default value for accepts means that the fetcher will accept any link. Constructors \u00b6 Route [androidJvm] fun Route (fetcher: Fetcher , accepts: ( Link ) -> Boolean = { true }) Properties \u00b6 Name Summary accepts [androidJvm] val accepts : ( Link ) -> Boolean fetcher [androidJvm] val fetcher : Fetcher","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-routing-fetcher/-route/#route","text":"[androidJvm]\\ class Route (fetcher: Fetcher , accepts: ( Link ) -> Boolean ) Holds a child fetcher and the predicate used to determine if it can answer a request. The default value for accepts means that the fetcher will accept any link.","title":"Route"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-routing-fetcher/-route/#constructors","text":"Route [androidJvm] fun Route (fetcher: Fetcher , accepts: ( Link ) -> Boolean = { true })","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-routing-fetcher/-route/#properties","text":"Name Summary accepts [androidJvm] val accepts : ( Link ) -> Boolean fetcher [androidJvm] val fetcher : Fetcher","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-routing-fetcher/-route/-route/","text":"// shared / org.readium.r2.shared.fetcher / RoutingFetcher / Route / Route Route \u00b6 [androidJvm]\\ fun Route (fetcher: Fetcher , accepts: ( Link ) -> Boolean = { true })","title":" route"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-routing-fetcher/-route/-route/#route","text":"[androidJvm]\\ fun Route (fetcher: Fetcher , accepts: ( Link ) -> Boolean = { true })","title":"Route"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-routing-fetcher/-route/accepts/","text":"// shared / org.readium.r2.shared.fetcher / RoutingFetcher / Route / accepts accepts \u00b6 [androidJvm]\\ val accepts : ( Link ) -> Boolean","title":"Accepts"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-routing-fetcher/-route/accepts/#accepts","text":"[androidJvm]\\ val accepts : ( Link ) -> Boolean","title":"accepts"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-routing-fetcher/-route/fetcher/","text":"// shared / org.readium.r2.shared.fetcher / RoutingFetcher / Route / fetcher fetcher \u00b6 [androidJvm]\\ val fetcher : Fetcher","title":"Fetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-routing-fetcher/-route/fetcher/#fetcher","text":"[androidJvm]\\ val fetcher : Fetcher","title":"fetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-string-resource/","text":"// shared / org.readium.r2.shared.fetcher / StringResource StringResource \u00b6 [androidJvm]\\ class StringResource (link: Link , string: suspend () -> String ) : BaseBytesResource Creates a Resource serving a String . Constructors \u00b6 StringResource [androidJvm] fun StringResource (link: Link , string: String ) StringResource [androidJvm] fun StringResource (link: Link , string: suspend () -> String ) Functions \u00b6 Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. length [androidJvm] open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. link [androidJvm] open suspend override fun link (): Link Returns the link from which the resource was retrieved. read [androidJvm] open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. readAsJson [androidJvm] open suspend fun readAsJson (): ResourceTry < JSONObject > Reads the full content as a JSON object. readAsString [androidJvm] open suspend fun readAsString (charset: Charset ? = null): ResourceTry < String > Reads the full content as a String . readAsXml [androidJvm] open suspend fun readAsXml (): ResourceTry < ElementNode > Reads the full content as an XML document. toString [androidJvm] open override fun toString (): String Properties \u00b6 Name Summary bytes [androidJvm] val bytes : suspend () -> ByteArray file [androidJvm] open val file : File ? Direct file to this resource, when available. link [androidJvm] val link : Link","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-string-resource/#stringresource","text":"[androidJvm]\\ class StringResource (link: Link , string: suspend () -> String ) : BaseBytesResource Creates a Resource serving a String .","title":"StringResource"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-string-resource/#constructors","text":"StringResource [androidJvm] fun StringResource (link: Link , string: String ) StringResource [androidJvm] fun StringResource (link: Link , string: suspend () -> String )","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-string-resource/#functions","text":"Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. length [androidJvm] open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. link [androidJvm] open suspend override fun link (): Link Returns the link from which the resource was retrieved. read [androidJvm] open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. readAsJson [androidJvm] open suspend fun readAsJson (): ResourceTry < JSONObject > Reads the full content as a JSON object. readAsString [androidJvm] open suspend fun readAsString (charset: Charset ? = null): ResourceTry < String > Reads the full content as a String . readAsXml [androidJvm] open suspend fun readAsXml (): ResourceTry < ElementNode > Reads the full content as an XML document. toString [androidJvm] open override fun toString (): String","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-string-resource/#properties","text":"Name Summary bytes [androidJvm] val bytes : suspend () -> ByteArray file [androidJvm] open val file : File ? Direct file to this resource, when available. link [androidJvm] val link : Link","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-string-resource/-string-resource/","text":"// shared / org.readium.r2.shared.fetcher / StringResource / StringResource StringResource \u00b6 [androidJvm]\\ fun StringResource (link: Link , string: String ) fun StringResource (link: Link , string: suspend () -> String )","title":" string resource"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-string-resource/-string-resource/#stringresource","text":"[androidJvm]\\ fun StringResource (link: Link , string: String ) fun StringResource (link: Link , string: suspend () -> String )","title":"StringResource"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-string-resource/to-string/","text":"// shared / org.readium.r2.shared.fetcher / StringResource / toString toString \u00b6 [androidJvm]\\ open override fun toString (): String","title":"To string"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-string-resource/to-string/#tostring","text":"[androidJvm]\\ open override fun toString (): String","title":"toString"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-transforming-fetcher/","text":"// shared / org.readium.r2.shared.fetcher / TransformingFetcher TransformingFetcher \u00b6 [androidJvm]\\ class TransformingFetcher (fetcher: Fetcher , transformers: List < ResourceTransformer >) : Fetcher Transforms the resources' content of a child fetcher using a list of ResourceTransformer functions. Constructors \u00b6 TransformingFetcher [androidJvm] fun TransformingFetcher (fetcher: Fetcher , transformer: ResourceTransformer ) TransformingFetcher [androidJvm] fun TransformingFetcher (fetcher: Fetcher , transformers: List < ResourceTransformer >) Functions \u00b6 Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. get [androidJvm] open fun get (href: String ): Resource Returns the Resource at the given href . [androidJvm] open override fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. links [androidJvm] open suspend override fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-transforming-fetcher/#transformingfetcher","text":"[androidJvm]\\ class TransformingFetcher (fetcher: Fetcher , transformers: List < ResourceTransformer >) : Fetcher Transforms the resources' content of a child fetcher using a list of ResourceTransformer functions.","title":"TransformingFetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-transforming-fetcher/#constructors","text":"TransformingFetcher [androidJvm] fun TransformingFetcher (fetcher: Fetcher , transformer: ResourceTransformer ) TransformingFetcher [androidJvm] fun TransformingFetcher (fetcher: Fetcher , transformers: List < ResourceTransformer >)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-transforming-fetcher/#functions","text":"Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. get [androidJvm] open fun get (href: String ): Resource Returns the Resource at the given href . [androidJvm] open override fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. links [androidJvm] open suspend override fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-transforming-fetcher/-transforming-fetcher/","text":"// shared / org.readium.r2.shared.fetcher / TransformingFetcher / TransformingFetcher TransformingFetcher \u00b6 [androidJvm]\\ fun TransformingFetcher (fetcher: Fetcher , transformer: ResourceTransformer ) fun TransformingFetcher (fetcher: Fetcher , transformers: List < ResourceTransformer >)","title":" transforming fetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-transforming-fetcher/-transforming-fetcher/#transformingfetcher","text":"[androidJvm]\\ fun TransformingFetcher (fetcher: Fetcher , transformer: ResourceTransformer ) fun TransformingFetcher (fetcher: Fetcher , transformers: List < ResourceTransformer >)","title":"TransformingFetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-transforming-fetcher/close/","text":"// shared / org.readium.r2.shared.fetcher / TransformingFetcher / close close \u00b6 [androidJvm]\\ open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect.","title":"Close"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-transforming-fetcher/close/#close","text":"[androidJvm]\\ open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect.","title":"close"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-transforming-fetcher/get/","text":"// shared / org.readium.r2.shared.fetcher / TransformingFetcher / get get \u00b6 [androidJvm]\\ open override fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. A Resource is always returned, since for some cases we can't know if it exists before actually fetching it, such as HTTP. Therefore, errors are handled at the Resource level.","title":"Get"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-transforming-fetcher/get/#get","text":"[androidJvm]\\ open override fun get (link: Link ): Resource Returns the Resource at the given link 's HREF. A Resource is always returned, since for some cases we can't know if it exists before actually fetching it, such as HTTP. Therefore, errors are handled at the Resource level.","title":"get"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-transforming-fetcher/links/","text":"// shared / org.readium.r2.shared.fetcher / TransformingFetcher / links links \u00b6 [androidJvm]\\ open suspend override fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable. If the medium has an inherent resource order, it should be followed. Otherwise, HREFs are sorted alphabetically.","title":"Links"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-transforming-fetcher/links/#links","text":"[androidJvm]\\ open suspend override fun links (): List < Link > Known resources available in the medium, such as file paths on the file system or entries in a ZIP archive. This list is not exhaustive, and additional unknown resources might be reachable. If the medium has an inherent resource order, it should be followed. Otherwise, HREFs are sorted alphabetically.","title":"links"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-transforming-resource/","text":"// shared / org.readium.r2.shared.fetcher / TransformingResource TransformingResource \u00b6 [androidJvm]\\ abstract class TransformingResource (resource: Resource , cacheBytes: Boolean ) : ProxyResource Transforms the bytes of resource on-the-fly. Warning: The transformation runs on the full content of resource , so it's not appropriate for large resources which can't be held in memory. Pass cacheBytes = true to cache the result of the transformation. This may be useful if multiple ranges will be read. Constructors \u00b6 TransformingResource [androidJvm] fun TransformingResource (resource: Resource , cacheBytes: Boolean = false) Functions \u00b6 Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. length [androidJvm] open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. link [androidJvm] open suspend override fun link (): Link Returns the link from which the resource was retrieved. read [androidJvm] open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. readAsJson [androidJvm] open suspend fun readAsJson (): ResourceTry < JSONObject > Reads the full content as a JSON object. readAsString [androidJvm] open suspend fun readAsString (charset: Charset ? = null): ResourceTry < String > Reads the full content as a String . readAsXml [androidJvm] open suspend fun readAsXml (): ResourceTry < ElementNode > Reads the full content as an XML document. toString [androidJvm] open override fun toString (): String transform [androidJvm] abstract suspend fun transform (data: ResourceTry < ByteArray >): ResourceTry < ByteArray > Properties \u00b6 Name Summary file [androidJvm] open override val file : File ? Direct file to this resource, when available.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-transforming-resource/#transformingresource","text":"[androidJvm]\\ abstract class TransformingResource (resource: Resource , cacheBytes: Boolean ) : ProxyResource Transforms the bytes of resource on-the-fly. Warning: The transformation runs on the full content of resource , so it's not appropriate for large resources which can't be held in memory. Pass cacheBytes = true to cache the result of the transformation. This may be useful if multiple ranges will be read.","title":"TransformingResource"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-transforming-resource/#constructors","text":"TransformingResource [androidJvm] fun TransformingResource (resource: Resource , cacheBytes: Boolean = false)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-transforming-resource/#functions","text":"Name Summary close [androidJvm] open suspend override fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. length [androidJvm] open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. link [androidJvm] open suspend override fun link (): Link Returns the link from which the resource was retrieved. read [androidJvm] open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. readAsJson [androidJvm] open suspend fun readAsJson (): ResourceTry < JSONObject > Reads the full content as a JSON object. readAsString [androidJvm] open suspend fun readAsString (charset: Charset ? = null): ResourceTry < String > Reads the full content as a String . readAsXml [androidJvm] open suspend fun readAsXml (): ResourceTry < ElementNode > Reads the full content as an XML document. toString [androidJvm] open override fun toString (): String transform [androidJvm] abstract suspend fun transform (data: ResourceTry < ByteArray >): ResourceTry < ByteArray >","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-transforming-resource/#properties","text":"Name Summary file [androidJvm] open override val file : File ? Direct file to this resource, when available.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-transforming-resource/-transforming-resource/","text":"// shared / org.readium.r2.shared.fetcher / TransformingResource / TransformingResource TransformingResource \u00b6 [androidJvm]\\ fun TransformingResource (resource: Resource , cacheBytes: Boolean = false)","title":" transforming resource"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-transforming-resource/-transforming-resource/#transformingresource","text":"[androidJvm]\\ fun TransformingResource (resource: Resource , cacheBytes: Boolean = false)","title":"TransformingResource"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-transforming-resource/length/","text":"// shared / org.readium.r2.shared.fetcher / TransformingResource / length length \u00b6 [androidJvm]\\ open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. This value must be treated as a hint, as it might not reflect the actual bytes length. To get the real length, you need to read the whole resource.","title":"Length"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-transforming-resource/length/#length","text":"[androidJvm]\\ open suspend override fun length (): ResourceTry < Long > Returns data length from metadata if available, or calculated from reading the bytes otherwise. This value must be treated as a hint, as it might not reflect the actual bytes length. To get the real length, you need to read the whole resource.","title":"length"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-transforming-resource/read/","text":"// shared / org.readium.r2.shared.fetcher / TransformingResource / read read \u00b6 [androidJvm]\\ open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. When range is null, the whole content is returned. Out-of-range indexes are clamped to the available length automatically.","title":"Read"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-transforming-resource/read/#read","text":"[androidJvm]\\ open suspend override fun read (range: LongRange ?): ResourceTry < ByteArray > Reads the bytes at the given range. When range is null, the whole content is returned. Out-of-range indexes are clamped to the available length automatically.","title":"read"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-transforming-resource/transform/","text":"// shared / org.readium.r2.shared.fetcher / TransformingResource / transform transform \u00b6 [androidJvm]\\ abstract suspend fun transform (data: ResourceTry < ByteArray >): ResourceTry < ByteArray >","title":"Transform"},{"location":"readium/shared/shared/org.readium.r2.shared.fetcher/-transforming-resource/transform/#transform","text":"[androidJvm]\\ abstract suspend fun transform (data: ResourceTry < ByteArray >): ResourceTry < ByteArray >","title":"transform"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/","text":"// shared / org.readium.r2.shared.opds Package org.readium.r2.shared.opds \u00b6 Types \u00b6 Name Summary Acquisition [androidJvm] data class Acquisition (type: String , children: List < Acquisition >) : JSONable , Parcelable OPDS Acquisition Object. Availability [androidJvm] data class Availability (state: Availability.State , since: Date ?, until: Date ?) : JSONable , Parcelable Indicated the availability of a given resource. Copies [androidJvm] data class Copies (total: Int ?, available: Int ?) : JSONable , Parcelable Library-specific feature that contains information about the copies that a library has acquired. Facet [androidJvm] data class Facet (title: String , metadata: OpdsMetadata , links: MutableList < Link >) Feed [androidJvm] data class Feed (title: String , type: Int , href: URL , metadata: OpdsMetadata , links: MutableList < Link >, facets: MutableList < Facet >, groups: MutableList < Group >, publications: MutableList < Publication >, navigation: MutableList < Link >, context: MutableList < String >) Group [androidJvm] data class Group (title: String ) Holds [androidJvm] data class Holds (total: Int ?, position: Int ?) : JSONable , Parcelable Library-specific features when a specific book is unavailable but provides a hold list. OpdsMetadata [androidJvm] data class OpdsMetadata (title: String , numberOfItems: Int ?, itemsPerPage: Int ?, currentPage: Int ?, modified: Date ?, position: Int ?, rdfType: String ?) ParseData [androidJvm] data class ParseData (feed: Feed ?, publication: Publication ?, type: Int ) Price [androidJvm] data class Price (currency: String , value: Double ) : JSONable , Parcelable The price of a publication in an OPDS link.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/#package-orgreadiumr2sharedopds","text":"","title":"Package org.readium.r2.shared.opds"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/#types","text":"Name Summary Acquisition [androidJvm] data class Acquisition (type: String , children: List < Acquisition >) : JSONable , Parcelable OPDS Acquisition Object. Availability [androidJvm] data class Availability (state: Availability.State , since: Date ?, until: Date ?) : JSONable , Parcelable Indicated the availability of a given resource. Copies [androidJvm] data class Copies (total: Int ?, available: Int ?) : JSONable , Parcelable Library-specific feature that contains information about the copies that a library has acquired. Facet [androidJvm] data class Facet (title: String , metadata: OpdsMetadata , links: MutableList < Link >) Feed [androidJvm] data class Feed (title: String , type: Int , href: URL , metadata: OpdsMetadata , links: MutableList < Link >, facets: MutableList < Facet >, groups: MutableList < Group >, publications: MutableList < Publication >, navigation: MutableList < Link >, context: MutableList < String >) Group [androidJvm] data class Group (title: String ) Holds [androidJvm] data class Holds (total: Int ?, position: Int ?) : JSONable , Parcelable Library-specific features when a specific book is unavailable but provides a hold list. OpdsMetadata [androidJvm] data class OpdsMetadata (title: String , numberOfItems: Int ?, itemsPerPage: Int ?, currentPage: Int ?, modified: Date ?, position: Int ?, rdfType: String ?) ParseData [androidJvm] data class ParseData (feed: Feed ?, publication: Publication ?, type: Int ) Price [androidJvm] data class Price (currency: String , value: Double ) : JSONable , Parcelable The price of a publication in an OPDS link.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-acquisition/","text":"// shared / org.readium.r2.shared.opds / Acquisition Acquisition \u00b6 [androidJvm]\\ data class Acquisition (type: String , children: List < Acquisition >) : JSONable , Parcelable OPDS Acquisition Object. https://drafts.opds.io/schema/acquisition-object.schema.json Constructors \u00b6 Acquisition [androidJvm] fun Acquisition (type: String , children: List < Acquisition > = emptyList()) Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes an Acquisition to its JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary children [androidJvm] val children : List < Acquisition > mediaType [androidJvm] val mediaType : MediaType Media type of the resource to acquire. type [androidJvm] val type : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-acquisition/#acquisition","text":"[androidJvm]\\ data class Acquisition (type: String , children: List < Acquisition >) : JSONable , Parcelable OPDS Acquisition Object. https://drafts.opds.io/schema/acquisition-object.schema.json","title":"Acquisition"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-acquisition/#constructors","text":"Acquisition [androidJvm] fun Acquisition (type: String , children: List < Acquisition > = emptyList())","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-acquisition/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-acquisition/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes an Acquisition to its JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-acquisition/#properties","text":"Name Summary children [androidJvm] val children : List < Acquisition > mediaType [androidJvm] val mediaType : MediaType Media type of the resource to acquire. type [androidJvm] val type : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-acquisition/-acquisition/","text":"// shared / org.readium.r2.shared.opds / Acquisition / Acquisition Acquisition \u00b6 [androidJvm]\\ fun Acquisition (type: String , children: List < Acquisition > = emptyList())","title":" acquisition"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-acquisition/-acquisition/#acquisition","text":"[androidJvm]\\ fun Acquisition (type: String , children: List < Acquisition > = emptyList())","title":"Acquisition"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-acquisition/children/","text":"// shared / org.readium.r2.shared.opds / Acquisition / children children \u00b6 [androidJvm]\\ val children : List < Acquisition >","title":"Children"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-acquisition/children/#children","text":"[androidJvm]\\ val children : List < Acquisition >","title":"children"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-acquisition/media-type/","text":"// shared / org.readium.r2.shared.opds / Acquisition / mediaType mediaType \u00b6 [androidJvm]\\ val mediaType : MediaType Media type of the resource to acquire.","title":"Media type"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-acquisition/media-type/#mediatype","text":"[androidJvm]\\ val mediaType : MediaType Media type of the resource to acquire.","title":"mediaType"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-acquisition/to-j-s-o-n/","text":"// shared / org.readium.r2.shared.opds / Acquisition / toJSON toJSON \u00b6 [androidJvm]\\ open override fun toJSON (): JSONObject Serializes an Acquisition to its JSON representation.","title":"To j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-acquisition/to-j-s-o-n/#tojson","text":"[androidJvm]\\ open override fun toJSON (): JSONObject Serializes an Acquisition to its JSON representation.","title":"toJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-acquisition/type/","text":"// shared / org.readium.r2.shared.opds / Acquisition / type type \u00b6 [androidJvm]\\ val type : String","title":"Type"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-acquisition/type/#type","text":"[androidJvm]\\ val type : String","title":"type"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-acquisition/-companion/","text":"// shared / org.readium.r2.shared.opds / Acquisition / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): Acquisition ? Creates an Acquisition from its JSON representation. If the acquisition can't be parsed, a warning will be logged with warnings . fromJSONArray [androidJvm] fun fromJSONArray (json: JSONArray ?, warnings: WarningLogger ? = null): List < Acquisition > Creates a list of Acquisition from its JSON representation. If an acquisition can't be parsed, a warning will be logged with warnings .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-acquisition/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-acquisition/-companion/#functions","text":"Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): Acquisition ? Creates an Acquisition from its JSON representation. If the acquisition can't be parsed, a warning will be logged with warnings . fromJSONArray [androidJvm] fun fromJSONArray (json: JSONArray ?, warnings: WarningLogger ? = null): List < Acquisition > Creates a list of Acquisition from its JSON representation. If an acquisition can't be parsed, a warning will be logged with warnings .","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-acquisition/-companion/from-j-s-o-n-array/","text":"// shared / org.readium.r2.shared.opds / Acquisition / Companion / fromJSONArray fromJSONArray \u00b6 [androidJvm]\\ fun fromJSONArray (json: JSONArray ?, warnings: WarningLogger ? = null): List < Acquisition > Creates a list of Acquisition from its JSON representation. If an acquisition can't be parsed, a warning will be logged with warnings .","title":"From j s o n array"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-acquisition/-companion/from-j-s-o-n-array/#fromjsonarray","text":"[androidJvm]\\ fun fromJSONArray (json: JSONArray ?, warnings: WarningLogger ? = null): List < Acquisition > Creates a list of Acquisition from its JSON representation. If an acquisition can't be parsed, a warning will be logged with warnings .","title":"fromJSONArray"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-acquisition/-companion/from-j-s-o-n/","text":"// shared / org.readium.r2.shared.opds / Acquisition / Companion / fromJSON fromJSON \u00b6 [androidJvm]\\ fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): Acquisition ? Creates an Acquisition from its JSON representation. If the acquisition can't be parsed, a warning will be logged with warnings .","title":"From j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-acquisition/-companion/from-j-s-o-n/#fromjson","text":"[androidJvm]\\ fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): Acquisition ? Creates an Acquisition from its JSON representation. If the acquisition can't be parsed, a warning will be logged with warnings .","title":"fromJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/","text":"// shared / org.readium.r2.shared.opds / Availability Availability \u00b6 [androidJvm]\\ data class Availability (state: Availability.State , since: Date ?, until: Date ?) : JSONable , Parcelable Indicated the availability of a given resource. https://drafts.opds.io/schema/properties.schema.json Parameters \u00b6 androidJvm since Timestamp for the previous state change. until Timestamp for the next state change. Constructors \u00b6 Availability [androidJvm] fun Availability (state: Availability.State , since: Date ? = null, until: Date ? = null) Types \u00b6 Name Summary Companion [androidJvm] object Companion State [androidJvm] enum State : Enum < Availability.State > Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes an Availability to its JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary since [androidJvm] val since : Date ? = null state [androidJvm] val state : Availability.State until [androidJvm] val until : Date ? = null","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/#availability","text":"[androidJvm]\\ data class Availability (state: Availability.State , since: Date ?, until: Date ?) : JSONable , Parcelable Indicated the availability of a given resource. https://drafts.opds.io/schema/properties.schema.json","title":"Availability"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/#parameters","text":"androidJvm since Timestamp for the previous state change. until Timestamp for the next state change.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/#constructors","text":"Availability [androidJvm] fun Availability (state: Availability.State , since: Date ? = null, until: Date ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/#types","text":"Name Summary Companion [androidJvm] object Companion State [androidJvm] enum State : Enum < Availability.State >","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes an Availability to its JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/#properties","text":"Name Summary since [androidJvm] val since : Date ? = null state [androidJvm] val state : Availability.State until [androidJvm] val until : Date ? = null","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-availability/","text":"// shared / org.readium.r2.shared.opds / Availability / Availability Availability \u00b6 [androidJvm]\\ fun Availability (state: Availability.State , since: Date ? = null, until: Date ? = null) Parameters \u00b6 androidJvm since Timestamp for the previous state change. until Timestamp for the next state change.","title":" availability"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-availability/#availability","text":"[androidJvm]\\ fun Availability (state: Availability.State , since: Date ? = null, until: Date ? = null)","title":"Availability"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-availability/#parameters","text":"androidJvm since Timestamp for the previous state change. until Timestamp for the next state change.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/since/","text":"// shared / org.readium.r2.shared.opds / Availability / since since \u00b6 [androidJvm]\\ val since : Date ? = null","title":"Since"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/since/#since","text":"[androidJvm]\\ val since : Date ? = null","title":"since"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/state/","text":"// shared / org.readium.r2.shared.opds / Availability / state state \u00b6 [androidJvm]\\ val state : Availability.State","title":"State"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/state/#state","text":"[androidJvm]\\ val state : Availability.State","title":"state"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/to-j-s-o-n/","text":"// shared / org.readium.r2.shared.opds / Availability / toJSON toJSON \u00b6 [androidJvm]\\ open override fun toJSON (): JSONObject Serializes an Availability to its JSON representation.","title":"To j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/to-j-s-o-n/#tojson","text":"[androidJvm]\\ open override fun toJSON (): JSONObject Serializes an Availability to its JSON representation.","title":"toJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/until/","text":"// shared / org.readium.r2.shared.opds / Availability / until until \u00b6 [androidJvm]\\ val until : Date ? = null","title":"Until"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/until/#until","text":"[androidJvm]\\ val until : Date ? = null","title":"until"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-companion/","text":"// shared / org.readium.r2.shared.opds / Availability / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): Availability ? Creates an Availability from its JSON representation. If the availability can't be parsed, a warning will be logged with warnings .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-companion/#functions","text":"Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): Availability ? Creates an Availability from its JSON representation. If the availability can't be parsed, a warning will be logged with warnings .","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-companion/from-j-s-o-n/","text":"// shared / org.readium.r2.shared.opds / Availability / Companion / fromJSON fromJSON \u00b6 [androidJvm]\\ fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): Availability ? Creates an Availability from its JSON representation. If the availability can't be parsed, a warning will be logged with warnings .","title":"From j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-companion/from-j-s-o-n/#fromjson","text":"[androidJvm]\\ fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): Availability ? Creates an Availability from its JSON representation. If the availability can't be parsed, a warning will be logged with warnings .","title":"fromJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-state/","text":"// shared / org.readium.r2.shared.opds / Availability / State State \u00b6 [androidJvm]\\ enum State : Enum < Availability.State > Entries \u00b6 READY [androidJvm] READY (\"ready\") RESERVED [androidJvm] RESERVED (\"reserved\") UNAVAILABLE [androidJvm] UNAVAILABLE (\"unavailable\") AVAILABLE [androidJvm] AVAILABLE (\"available\") Types \u00b6 Name Summary Companion [androidJvm] object Companion : MapCompanion < String , Availability.State > Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-state/#state","text":"[androidJvm]\\ enum State : Enum < Availability.State >","title":"State"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-state/#entries","text":"READY [androidJvm] READY (\"ready\") RESERVED [androidJvm] RESERVED (\"reserved\") UNAVAILABLE [androidJvm] UNAVAILABLE (\"unavailable\") AVAILABLE [androidJvm] AVAILABLE (\"available\")","title":"Entries"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-state/#types","text":"Name Summary Companion [androidJvm] object Companion : MapCompanion < String , Availability.State >","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-state/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-state/value/","text":"// shared / org.readium.r2.shared.opds / Availability / State / value value \u00b6 [androidJvm]\\ val value : String","title":"Value"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-state/value/#value","text":"[androidJvm]\\ val value : String","title":"value"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-state/-a-v-a-i-l-a-b-l-e/","text":"// shared / org.readium.r2.shared.opds / Availability / State / AVAILABLE AVAILABLE \u00b6 [androidJvm]\\ AVAILABLE (\"available\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-state/-a-v-a-i-l-a-b-l-e/#available","text":"[androidJvm]\\ AVAILABLE (\"available\")","title":"AVAILABLE"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-state/-a-v-a-i-l-a-b-l-e/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-state/-companion/","text":"// shared / org.readium.r2.shared.opds / Availability / State / Companion Companion \u00b6 [androidJvm]\\ object Companion : MapCompanion < String , Availability.State > Functions \u00b6 Name Summary get [androidJvm] open fun get (key: String ?): Availability.State ? Returns the element matching the key , or null if not found. invoke [androidJvm] open operator fun invoke (key: String ?): Availability.State ? Alias to get , to be used like keyMapper(\"a_key\"). Properties \u00b6 Name Summary keys [androidJvm] val keys : Set < String > Returns the available keys .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-state/-companion/#companion","text":"[androidJvm]\\ object Companion : MapCompanion < String , Availability.State >","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-state/-companion/#functions","text":"Name Summary get [androidJvm] open fun get (key: String ?): Availability.State ? Returns the element matching the key , or null if not found. invoke [androidJvm] open operator fun invoke (key: String ?): Availability.State ? Alias to get , to be used like keyMapper(\"a_key\").","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-state/-companion/#properties","text":"Name Summary keys [androidJvm] val keys : Set < String > Returns the available keys .","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-state/-r-e-a-d-y/","text":"// shared / org.readium.r2.shared.opds / Availability / State / READY READY \u00b6 [androidJvm]\\ READY (\"ready\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-state/-r-e-a-d-y/#ready","text":"[androidJvm]\\ READY (\"ready\")","title":"READY"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-state/-r-e-a-d-y/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-state/-r-e-s-e-r-v-e-d/","text":"// shared / org.readium.r2.shared.opds / Availability / State / RESERVED RESERVED \u00b6 [androidJvm]\\ RESERVED (\"reserved\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-state/-r-e-s-e-r-v-e-d/#reserved","text":"[androidJvm]\\ RESERVED (\"reserved\")","title":"RESERVED"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-state/-r-e-s-e-r-v-e-d/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-state/-u-n-a-v-a-i-l-a-b-l-e/","text":"// shared / org.readium.r2.shared.opds / Availability / State / UNAVAILABLE UNAVAILABLE \u00b6 [androidJvm]\\ UNAVAILABLE (\"unavailable\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-state/-u-n-a-v-a-i-l-a-b-l-e/#unavailable","text":"[androidJvm]\\ UNAVAILABLE (\"unavailable\")","title":"UNAVAILABLE"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-availability/-state/-u-n-a-v-a-i-l-a-b-l-e/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-copies/","text":"// shared / org.readium.r2.shared.opds / Copies Copies \u00b6 [androidJvm]\\ data class Copies (total: Int ?, available: Int ?) : JSONable , Parcelable Library-specific feature that contains information about the copies that a library has acquired. https://drafts.opds.io/schema/properties.schema.json Constructors \u00b6 Copies [androidJvm] fun Copies (total: Int ? = null, available: Int ? = null) Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes an Copies to its JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary available [androidJvm] val available : Int ? = null total [androidJvm] val total : Int ? = null","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-copies/#copies","text":"[androidJvm]\\ data class Copies (total: Int ?, available: Int ?) : JSONable , Parcelable Library-specific feature that contains information about the copies that a library has acquired. https://drafts.opds.io/schema/properties.schema.json","title":"Copies"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-copies/#constructors","text":"Copies [androidJvm] fun Copies (total: Int ? = null, available: Int ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-copies/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-copies/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes an Copies to its JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-copies/#properties","text":"Name Summary available [androidJvm] val available : Int ? = null total [androidJvm] val total : Int ? = null","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-copies/-copies/","text":"// shared / org.readium.r2.shared.opds / Copies / Copies Copies \u00b6 [androidJvm]\\ fun Copies (total: Int ? = null, available: Int ? = null)","title":" copies"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-copies/-copies/#copies","text":"[androidJvm]\\ fun Copies (total: Int ? = null, available: Int ? = null)","title":"Copies"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-copies/available/","text":"// shared / org.readium.r2.shared.opds / Copies / available available \u00b6 [androidJvm]\\ val available : Int ? = null","title":"Available"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-copies/available/#available","text":"[androidJvm]\\ val available : Int ? = null","title":"available"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-copies/to-j-s-o-n/","text":"// shared / org.readium.r2.shared.opds / Copies / toJSON toJSON \u00b6 [androidJvm]\\ open override fun toJSON (): JSONObject Serializes an Copies to its JSON representation.","title":"To j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-copies/to-j-s-o-n/#tojson","text":"[androidJvm]\\ open override fun toJSON (): JSONObject Serializes an Copies to its JSON representation.","title":"toJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-copies/total/","text":"// shared / org.readium.r2.shared.opds / Copies / total total \u00b6 [androidJvm]\\ val total : Int ? = null","title":"Total"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-copies/total/#total","text":"[androidJvm]\\ val total : Int ? = null","title":"total"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-copies/-companion/","text":"// shared / org.readium.r2.shared.opds / Copies / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?): Copies ? Creates an Copies from its JSON representation.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-copies/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-copies/-companion/#functions","text":"Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?): Copies ? Creates an Copies from its JSON representation.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-copies/-companion/from-j-s-o-n/","text":"// shared / org.readium.r2.shared.opds / Copies / Companion / fromJSON fromJSON \u00b6 [androidJvm]\\ fun fromJSON (json: JSONObject ?): Copies ? Creates an Copies from its JSON representation.","title":"From j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-copies/-companion/from-j-s-o-n/#fromjson","text":"[androidJvm]\\ fun fromJSON (json: JSONObject ?): Copies ? Creates an Copies from its JSON representation.","title":"fromJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-facet/","text":"// shared / org.readium.r2.shared.opds / Facet Facet \u00b6 [androidJvm]\\ data class Facet (title: String , metadata: OpdsMetadata , links: MutableList < Link >) Properties \u00b6 Name Summary links [androidJvm] var links : MutableList < Link > metadata [androidJvm] var metadata : OpdsMetadata title [androidJvm] val title : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-facet/#facet","text":"[androidJvm]\\ data class Facet (title: String , metadata: OpdsMetadata , links: MutableList < Link >)","title":"Facet"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-facet/#properties","text":"Name Summary links [androidJvm] var links : MutableList < Link > metadata [androidJvm] var metadata : OpdsMetadata title [androidJvm] val title : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-facet/-facet/","text":"// shared / org.readium.r2.shared.opds / Facet / Facet Facet \u00b6 [androidJvm]\\ fun Facet (title: String , metadata: OpdsMetadata = OpdsMetadata(title = title), links: MutableList < Link > = mutableListOf())","title":" facet"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-facet/-facet/#facet","text":"[androidJvm]\\ fun Facet (title: String , metadata: OpdsMetadata = OpdsMetadata(title = title), links: MutableList < Link > = mutableListOf())","title":"Facet"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-facet/links/","text":"// shared / org.readium.r2.shared.opds / Facet / links links \u00b6 [androidJvm]\\ var links : MutableList < Link >","title":"Links"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-facet/links/#links","text":"[androidJvm]\\ var links : MutableList < Link >","title":"links"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-facet/metadata/","text":"// shared / org.readium.r2.shared.opds / Facet / metadata metadata \u00b6 [androidJvm]\\ var metadata : OpdsMetadata","title":"Metadata"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-facet/metadata/#metadata","text":"[androidJvm]\\ var metadata : OpdsMetadata","title":"metadata"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-facet/title/","text":"// shared / org.readium.r2.shared.opds / Facet / title title \u00b6 [androidJvm]\\ val title : String","title":"Title"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-facet/title/#title","text":"[androidJvm]\\ val title : String","title":"title"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-feed/","text":"// shared / org.readium.r2.shared.opds / Feed Feed \u00b6 [androidJvm]\\ data class Feed (title: String , type: Int , href: URL , metadata: OpdsMetadata , links: MutableList < Link >, facets: MutableList < Facet >, groups: MutableList < Group >, publications: MutableList < Publication >, navigation: MutableList < Link >, context: MutableList < String >) Properties \u00b6 Name Summary context [androidJvm] var context : MutableList < String > facets [androidJvm] var facets : MutableList < Facet > groups [androidJvm] var groups : MutableList < Group > href [androidJvm] val href : URL links [androidJvm] var links : MutableList < Link > metadata [androidJvm] var metadata : OpdsMetadata navigation [androidJvm] var navigation : MutableList < Link > publications [androidJvm] var publications : MutableList < Publication > title [androidJvm] val title : String type [androidJvm] val type : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-feed/#feed","text":"[androidJvm]\\ data class Feed (title: String , type: Int , href: URL , metadata: OpdsMetadata , links: MutableList < Link >, facets: MutableList < Facet >, groups: MutableList < Group >, publications: MutableList < Publication >, navigation: MutableList < Link >, context: MutableList < String >)","title":"Feed"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-feed/#properties","text":"Name Summary context [androidJvm] var context : MutableList < String > facets [androidJvm] var facets : MutableList < Facet > groups [androidJvm] var groups : MutableList < Group > href [androidJvm] val href : URL links [androidJvm] var links : MutableList < Link > metadata [androidJvm] var metadata : OpdsMetadata navigation [androidJvm] var navigation : MutableList < Link > publications [androidJvm] var publications : MutableList < Publication > title [androidJvm] val title : String type [androidJvm] val type : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-feed/-feed/","text":"// shared / org.readium.r2.shared.opds / Feed / Feed Feed \u00b6 [androidJvm]\\ fun Feed (title: String , type: Int , href: URL , metadata: OpdsMetadata = OpdsMetadata(title = title), links: MutableList < Link > = mutableListOf(), facets: MutableList < Facet > = mutableListOf(), groups: MutableList < Group > = mutableListOf(), publications: MutableList < Publication > = mutableListOf(), navigation: MutableList < Link > = mutableListOf(), context: MutableList < String > = mutableListOf())","title":" feed"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-feed/-feed/#feed","text":"[androidJvm]\\ fun Feed (title: String , type: Int , href: URL , metadata: OpdsMetadata = OpdsMetadata(title = title), links: MutableList < Link > = mutableListOf(), facets: MutableList < Facet > = mutableListOf(), groups: MutableList < Group > = mutableListOf(), publications: MutableList < Publication > = mutableListOf(), navigation: MutableList < Link > = mutableListOf(), context: MutableList < String > = mutableListOf())","title":"Feed"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-feed/context/","text":"// shared / org.readium.r2.shared.opds / Feed / context context \u00b6 [androidJvm]\\ var context : MutableList < String >","title":"Context"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-feed/context/#context","text":"[androidJvm]\\ var context : MutableList < String >","title":"context"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-feed/facets/","text":"// shared / org.readium.r2.shared.opds / Feed / facets facets \u00b6 [androidJvm]\\ var facets : MutableList < Facet >","title":"Facets"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-feed/facets/#facets","text":"[androidJvm]\\ var facets : MutableList < Facet >","title":"facets"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-feed/groups/","text":"// shared / org.readium.r2.shared.opds / Feed / groups groups \u00b6 [androidJvm]\\ var groups : MutableList < Group >","title":"Groups"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-feed/groups/#groups","text":"[androidJvm]\\ var groups : MutableList < Group >","title":"groups"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-feed/href/","text":"// shared / org.readium.r2.shared.opds / Feed / href href \u00b6 [androidJvm]\\ val href : URL","title":"Href"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-feed/href/#href","text":"[androidJvm]\\ val href : URL","title":"href"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-feed/links/","text":"// shared / org.readium.r2.shared.opds / Feed / links links \u00b6 [androidJvm]\\ var links : MutableList < Link >","title":"Links"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-feed/links/#links","text":"[androidJvm]\\ var links : MutableList < Link >","title":"links"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-feed/metadata/","text":"// shared / org.readium.r2.shared.opds / Feed / metadata metadata \u00b6 [androidJvm]\\ var metadata : OpdsMetadata","title":"Metadata"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-feed/metadata/#metadata","text":"[androidJvm]\\ var metadata : OpdsMetadata","title":"metadata"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-feed/navigation/","text":"// shared / org.readium.r2.shared.opds / Feed / navigation navigation \u00b6 [androidJvm]\\ var navigation : MutableList < Link >","title":"Navigation"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-feed/navigation/#navigation","text":"[androidJvm]\\ var navigation : MutableList < Link >","title":"navigation"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-feed/publications/","text":"// shared / org.readium.r2.shared.opds / Feed / publications publications \u00b6 [androidJvm]\\ var publications : MutableList < Publication >","title":"Publications"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-feed/publications/#publications","text":"[androidJvm]\\ var publications : MutableList < Publication >","title":"publications"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-feed/title/","text":"// shared / org.readium.r2.shared.opds / Feed / title title \u00b6 [androidJvm]\\ val title : String","title":"Title"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-feed/title/#title","text":"[androidJvm]\\ val title : String","title":"title"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-feed/type/","text":"// shared / org.readium.r2.shared.opds / Feed / type type \u00b6 [androidJvm]\\ val type : Int","title":"Type"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-feed/type/#type","text":"[androidJvm]\\ val type : Int","title":"type"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-group/","text":"// shared / org.readium.r2.shared.opds / Group Group \u00b6 [androidJvm]\\ data class Group (title: String ) Properties \u00b6 Name Summary links [androidJvm] var links : MutableList < Link > metadata [androidJvm] var metadata : OpdsMetadata navigation [androidJvm] var navigation : MutableList < Link > publications [androidJvm] var publications : MutableList < Publication > title [androidJvm] val title : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-group/#group","text":"[androidJvm]\\ data class Group (title: String )","title":"Group"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-group/#properties","text":"Name Summary links [androidJvm] var links : MutableList < Link > metadata [androidJvm] var metadata : OpdsMetadata navigation [androidJvm] var navigation : MutableList < Link > publications [androidJvm] var publications : MutableList < Publication > title [androidJvm] val title : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-group/-group/","text":"// shared / org.readium.r2.shared.opds / Group / Group Group \u00b6 [androidJvm]\\ fun Group (title: String )","title":" group"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-group/-group/#group","text":"[androidJvm]\\ fun Group (title: String )","title":"Group"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-group/links/","text":"// shared / org.readium.r2.shared.opds / Group / links links \u00b6 [androidJvm]\\ var links : MutableList < Link >","title":"Links"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-group/links/#links","text":"[androidJvm]\\ var links : MutableList < Link >","title":"links"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-group/metadata/","text":"// shared / org.readium.r2.shared.opds / Group / metadata metadata \u00b6 [androidJvm]\\ var metadata : OpdsMetadata","title":"Metadata"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-group/metadata/#metadata","text":"[androidJvm]\\ var metadata : OpdsMetadata","title":"metadata"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-group/navigation/","text":"// shared / org.readium.r2.shared.opds / Group / navigation navigation \u00b6 [androidJvm]\\ var navigation : MutableList < Link >","title":"Navigation"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-group/navigation/#navigation","text":"[androidJvm]\\ var navigation : MutableList < Link >","title":"navigation"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-group/publications/","text":"// shared / org.readium.r2.shared.opds / Group / publications publications \u00b6 [androidJvm]\\ var publications : MutableList < Publication >","title":"Publications"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-group/publications/#publications","text":"[androidJvm]\\ var publications : MutableList < Publication >","title":"publications"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-group/title/","text":"// shared / org.readium.r2.shared.opds / Group / title title \u00b6 [androidJvm]\\ val title : String","title":"Title"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-group/title/#title","text":"[androidJvm]\\ val title : String","title":"title"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-holds/","text":"// shared / org.readium.r2.shared.opds / Holds Holds \u00b6 [androidJvm]\\ data class Holds (total: Int ?, position: Int ?) : JSONable , Parcelable Library-specific features when a specific book is unavailable but provides a hold list. https://drafts.opds.io/schema/properties.schema.json Constructors \u00b6 Holds [androidJvm] fun Holds (total: Int ? = null, position: Int ? = null) Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes an Holds to its JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary position [androidJvm] val position : Int ? = null total [androidJvm] val total : Int ? = null","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-holds/#holds","text":"[androidJvm]\\ data class Holds (total: Int ?, position: Int ?) : JSONable , Parcelable Library-specific features when a specific book is unavailable but provides a hold list. https://drafts.opds.io/schema/properties.schema.json","title":"Holds"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-holds/#constructors","text":"Holds [androidJvm] fun Holds (total: Int ? = null, position: Int ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-holds/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-holds/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes an Holds to its JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-holds/#properties","text":"Name Summary position [androidJvm] val position : Int ? = null total [androidJvm] val total : Int ? = null","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-holds/-holds/","text":"// shared / org.readium.r2.shared.opds / Holds / Holds Holds \u00b6 [androidJvm]\\ fun Holds (total: Int ? = null, position: Int ? = null)","title":" holds"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-holds/-holds/#holds","text":"[androidJvm]\\ fun Holds (total: Int ? = null, position: Int ? = null)","title":"Holds"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-holds/position/","text":"// shared / org.readium.r2.shared.opds / Holds / position position \u00b6 [androidJvm]\\ val position : Int ? = null","title":"Position"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-holds/position/#position","text":"[androidJvm]\\ val position : Int ? = null","title":"position"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-holds/to-j-s-o-n/","text":"// shared / org.readium.r2.shared.opds / Holds / toJSON toJSON \u00b6 [androidJvm]\\ open override fun toJSON (): JSONObject Serializes an Holds to its JSON representation.","title":"To j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-holds/to-j-s-o-n/#tojson","text":"[androidJvm]\\ open override fun toJSON (): JSONObject Serializes an Holds to its JSON representation.","title":"toJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-holds/total/","text":"// shared / org.readium.r2.shared.opds / Holds / total total \u00b6 [androidJvm]\\ val total : Int ? = null","title":"Total"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-holds/total/#total","text":"[androidJvm]\\ val total : Int ? = null","title":"total"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-holds/-companion/","text":"// shared / org.readium.r2.shared.opds / Holds / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?): Holds ? Creates an Holds from its JSON representation.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-holds/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-holds/-companion/#functions","text":"Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?): Holds ? Creates an Holds from its JSON representation.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-holds/-companion/from-j-s-o-n/","text":"// shared / org.readium.r2.shared.opds / Holds / Companion / fromJSON fromJSON \u00b6 [androidJvm]\\ fun fromJSON (json: JSONObject ?): Holds ? Creates an Holds from its JSON representation.","title":"From j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-holds/-companion/from-j-s-o-n/#fromjson","text":"[androidJvm]\\ fun fromJSON (json: JSONObject ?): Holds ? Creates an Holds from its JSON representation.","title":"fromJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-opds-metadata/","text":"// shared / org.readium.r2.shared.opds / OpdsMetadata OpdsMetadata \u00b6 [androidJvm]\\ data class OpdsMetadata (title: String , numberOfItems: Int ?, itemsPerPage: Int ?, currentPage: Int ?, modified: Date ?, position: Int ?, rdfType: String ?) Properties \u00b6 Name Summary currentPage [androidJvm] var currentPage : Int ? = null itemsPerPage [androidJvm] var itemsPerPage : Int ? = null modified [androidJvm] var modified : Date ? = null numberOfItems [androidJvm] var numberOfItems : Int ? = null position [androidJvm] var position : Int ? = null rdfType [androidJvm] var rdfType : String ? = null title [androidJvm] var title : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-opds-metadata/#opdsmetadata","text":"[androidJvm]\\ data class OpdsMetadata (title: String , numberOfItems: Int ?, itemsPerPage: Int ?, currentPage: Int ?, modified: Date ?, position: Int ?, rdfType: String ?)","title":"OpdsMetadata"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-opds-metadata/#properties","text":"Name Summary currentPage [androidJvm] var currentPage : Int ? = null itemsPerPage [androidJvm] var itemsPerPage : Int ? = null modified [androidJvm] var modified : Date ? = null numberOfItems [androidJvm] var numberOfItems : Int ? = null position [androidJvm] var position : Int ? = null rdfType [androidJvm] var rdfType : String ? = null title [androidJvm] var title : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-opds-metadata/-opds-metadata/","text":"// shared / org.readium.r2.shared.opds / OpdsMetadata / OpdsMetadata OpdsMetadata \u00b6 [androidJvm]\\ fun OpdsMetadata (title: String , numberOfItems: Int ? = null, itemsPerPage: Int ? = null, currentPage: Int ? = null, modified: Date ? = null, position: Int ? = null, rdfType: String ? = null)","title":" opds metadata"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-opds-metadata/-opds-metadata/#opdsmetadata","text":"[androidJvm]\\ fun OpdsMetadata (title: String , numberOfItems: Int ? = null, itemsPerPage: Int ? = null, currentPage: Int ? = null, modified: Date ? = null, position: Int ? = null, rdfType: String ? = null)","title":"OpdsMetadata"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-opds-metadata/current-page/","text":"// shared / org.readium.r2.shared.opds / OpdsMetadata / currentPage currentPage \u00b6 [androidJvm]\\ var currentPage : Int ? = null","title":"Current page"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-opds-metadata/current-page/#currentpage","text":"[androidJvm]\\ var currentPage : Int ? = null","title":"currentPage"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-opds-metadata/items-per-page/","text":"// shared / org.readium.r2.shared.opds / OpdsMetadata / itemsPerPage itemsPerPage \u00b6 [androidJvm]\\ var itemsPerPage : Int ? = null","title":"Items per page"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-opds-metadata/items-per-page/#itemsperpage","text":"[androidJvm]\\ var itemsPerPage : Int ? = null","title":"itemsPerPage"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-opds-metadata/modified/","text":"// shared / org.readium.r2.shared.opds / OpdsMetadata / modified modified \u00b6 [androidJvm]\\ var modified : Date ? = null","title":"Modified"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-opds-metadata/modified/#modified","text":"[androidJvm]\\ var modified : Date ? = null","title":"modified"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-opds-metadata/number-of-items/","text":"// shared / org.readium.r2.shared.opds / OpdsMetadata / numberOfItems numberOfItems \u00b6 [androidJvm]\\ var numberOfItems : Int ? = null","title":"Number of items"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-opds-metadata/number-of-items/#numberofitems","text":"[androidJvm]\\ var numberOfItems : Int ? = null","title":"numberOfItems"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-opds-metadata/position/","text":"// shared / org.readium.r2.shared.opds / OpdsMetadata / position position \u00b6 [androidJvm]\\ var position : Int ? = null","title":"Position"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-opds-metadata/position/#position","text":"[androidJvm]\\ var position : Int ? = null","title":"position"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-opds-metadata/rdf-type/","text":"// shared / org.readium.r2.shared.opds / OpdsMetadata / rdfType rdfType \u00b6 [androidJvm]\\ var rdfType : String ? = null","title":"Rdf type"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-opds-metadata/rdf-type/#rdftype","text":"[androidJvm]\\ var rdfType : String ? = null","title":"rdfType"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-opds-metadata/title/","text":"// shared / org.readium.r2.shared.opds / OpdsMetadata / title title \u00b6 [androidJvm]\\ var title : String","title":"Title"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-opds-metadata/title/#title","text":"[androidJvm]\\ var title : String","title":"title"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-parse-data/","text":"// shared / org.readium.r2.shared.opds / ParseData ParseData \u00b6 [androidJvm]\\ data class ParseData (feed: Feed ?, publication: Publication ?, type: Int ) Properties \u00b6 Name Summary feed [androidJvm] val feed : Feed ? publication [androidJvm] val publication : Publication ? type [androidJvm] val type : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-parse-data/#parsedata","text":"[androidJvm]\\ data class ParseData (feed: Feed ?, publication: Publication ?, type: Int )","title":"ParseData"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-parse-data/#properties","text":"Name Summary feed [androidJvm] val feed : Feed ? publication [androidJvm] val publication : Publication ? type [androidJvm] val type : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-parse-data/-parse-data/","text":"// shared / org.readium.r2.shared.opds / ParseData / ParseData ParseData \u00b6 [androidJvm]\\ fun ParseData (feed: Feed ?, publication: Publication ?, type: Int )","title":" parse data"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-parse-data/-parse-data/#parsedata","text":"[androidJvm]\\ fun ParseData (feed: Feed ?, publication: Publication ?, type: Int )","title":"ParseData"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-parse-data/feed/","text":"// shared / org.readium.r2.shared.opds / ParseData / feed feed \u00b6 [androidJvm]\\ val feed : Feed ?","title":"Feed"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-parse-data/feed/#feed","text":"[androidJvm]\\ val feed : Feed ?","title":"feed"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-parse-data/publication/","text":"// shared / org.readium.r2.shared.opds / ParseData / publication publication \u00b6 [androidJvm]\\ val publication : Publication ?","title":"Publication"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-parse-data/publication/#publication","text":"[androidJvm]\\ val publication : Publication ?","title":"publication"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-parse-data/type/","text":"// shared / org.readium.r2.shared.opds / ParseData / type type \u00b6 [androidJvm]\\ val type : Int","title":"Type"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-parse-data/type/#type","text":"[androidJvm]\\ val type : Int","title":"type"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-price/","text":"// shared / org.readium.r2.shared.opds / Price Price \u00b6 [androidJvm]\\ data class Price (currency: String , value: Double ) : JSONable , Parcelable The price of a publication in an OPDS link. https://drafts.opds.io/schema/properties.schema.json Parameters \u00b6 androidJvm currency Currency for the price, eg. EUR. value Price value, should only be used for display purposes, because of precision issues inherent with Double and the JSON parsing. Constructors \u00b6 Price [androidJvm] fun Price (currency: String , value: Double ) Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes an Price to its JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary currency [androidJvm] val currency : String value [androidJvm] val value : Double","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-price/#price","text":"[androidJvm]\\ data class Price (currency: String , value: Double ) : JSONable , Parcelable The price of a publication in an OPDS link. https://drafts.opds.io/schema/properties.schema.json","title":"Price"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-price/#parameters","text":"androidJvm currency Currency for the price, eg. EUR. value Price value, should only be used for display purposes, because of precision issues inherent with Double and the JSON parsing.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-price/#constructors","text":"Price [androidJvm] fun Price (currency: String , value: Double )","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-price/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-price/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes an Price to its JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-price/#properties","text":"Name Summary currency [androidJvm] val currency : String value [androidJvm] val value : Double","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-price/-price/","text":"// shared / org.readium.r2.shared.opds / Price / Price Price \u00b6 [androidJvm]\\ fun Price (currency: String , value: Double ) Parameters \u00b6 androidJvm currency Currency for the price, eg. EUR. value Price value, should only be used for display purposes, because of precision issues inherent with Double and the JSON parsing.","title":" price"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-price/-price/#price","text":"[androidJvm]\\ fun Price (currency: String , value: Double )","title":"Price"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-price/-price/#parameters","text":"androidJvm currency Currency for the price, eg. EUR. value Price value, should only be used for display purposes, because of precision issues inherent with Double and the JSON parsing.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-price/currency/","text":"// shared / org.readium.r2.shared.opds / Price / currency currency \u00b6 [androidJvm]\\ val currency : String","title":"Currency"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-price/currency/#currency","text":"[androidJvm]\\ val currency : String","title":"currency"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-price/to-j-s-o-n/","text":"// shared / org.readium.r2.shared.opds / Price / toJSON toJSON \u00b6 [androidJvm]\\ open override fun toJSON (): JSONObject Serializes an Price to its JSON representation.","title":"To j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-price/to-j-s-o-n/#tojson","text":"[androidJvm]\\ open override fun toJSON (): JSONObject Serializes an Price to its JSON representation.","title":"toJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-price/value/","text":"// shared / org.readium.r2.shared.opds / Price / value value \u00b6 [androidJvm]\\ val value : Double","title":"Value"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-price/value/#value","text":"[androidJvm]\\ val value : Double","title":"value"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-price/-companion/","text":"// shared / org.readium.r2.shared.opds / Price / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): Price ? Creates an Price from its JSON representation. If the price can't be parsed, a warning will be logged with warnings .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-price/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-price/-companion/#functions","text":"Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): Price ? Creates an Price from its JSON representation. If the price can't be parsed, a warning will be logged with warnings .","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-price/-companion/from-j-s-o-n/","text":"// shared / org.readium.r2.shared.opds / Price / Companion / fromJSON fromJSON \u00b6 [androidJvm]\\ fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): Price ? Creates an Price from its JSON representation. If the price can't be parsed, a warning will be logged with warnings .","title":"From j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.opds/-price/-companion/from-j-s-o-n/#fromjson","text":"[androidJvm]\\ fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): Price ? Creates an Price from its JSON representation. If the price can't be parsed, a warning will be logged with warnings .","title":"fromJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/","text":"// shared / org.readium.r2.shared.parser.xml Package org.readium.r2.shared.parser.xml \u00b6 Types \u00b6 Name Summary Attribute [androidJvm] data class Attribute (name: String , namespace: String , value: String ) AttributeMap [androidJvm] typealias AttributeMap = Map < String , Map < String , String >> ElementNode [androidJvm] data class ElementNode (name: String , namespace: String , lang: String , attributes: AttributeMap , children: List < Node >) : Node Represents a node with children in the XML tree Node [androidJvm] sealed class Node TextNode [androidJvm] data class TextNode (text: String ) : Node Container for text in the XML tree XmlParser [androidJvm] class XmlParser (isNamespaceAware: Boolean , isCaseSensitive: Boolean ) XML Parser with support for namespaces, mixed content and lang inheritance","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/#package-orgreadiumr2sharedparserxml","text":"","title":"Package org.readium.r2.shared.parser.xml"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/#types","text":"Name Summary Attribute [androidJvm] data class Attribute (name: String , namespace: String , value: String ) AttributeMap [androidJvm] typealias AttributeMap = Map < String , Map < String , String >> ElementNode [androidJvm] data class ElementNode (name: String , namespace: String , lang: String , attributes: AttributeMap , children: List < Node >) : Node Represents a node with children in the XML tree Node [androidJvm] sealed class Node TextNode [androidJvm] data class TextNode (text: String ) : Node Container for text in the XML tree XmlParser [androidJvm] class XmlParser (isNamespaceAware: Boolean , isCaseSensitive: Boolean ) XML Parser with support for namespaces, mixed content and lang inheritance","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-attribute/","text":"// shared / org.readium.r2.shared.parser.xml / Attribute Attribute \u00b6 [androidJvm]\\ data class Attribute (name: String , namespace: String , value: String ) Properties \u00b6 Name Summary name [androidJvm] val name : String namespace [androidJvm] val namespace : String value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-attribute/#attribute","text":"[androidJvm]\\ data class Attribute (name: String , namespace: String , value: String )","title":"Attribute"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-attribute/#properties","text":"Name Summary name [androidJvm] val name : String namespace [androidJvm] val namespace : String value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-attribute/-attribute/","text":"// shared / org.readium.r2.shared.parser.xml / Attribute / Attribute Attribute \u00b6 [androidJvm]\\ fun Attribute (name: String , namespace: String , value: String )","title":" attribute"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-attribute/-attribute/#attribute","text":"[androidJvm]\\ fun Attribute (name: String , namespace: String , value: String )","title":"Attribute"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-attribute/name/","text":"// shared / org.readium.r2.shared.parser.xml / Attribute / name name \u00b6 [androidJvm]\\ val name : String","title":"Name"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-attribute/name/#name","text":"[androidJvm]\\ val name : String","title":"name"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-attribute/namespace/","text":"// shared / org.readium.r2.shared.parser.xml / Attribute / namespace namespace \u00b6 [androidJvm]\\ val namespace : String","title":"Namespace"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-attribute/namespace/#namespace","text":"[androidJvm]\\ val namespace : String","title":"namespace"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-attribute/value/","text":"// shared / org.readium.r2.shared.parser.xml / Attribute / value value \u00b6 [androidJvm]\\ val value : String","title":"Value"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-attribute/value/#value","text":"[androidJvm]\\ val value : String","title":"value"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/","text":"// shared / org.readium.r2.shared.parser.xml / ElementNode ElementNode \u00b6 [androidJvm]\\ data class ElementNode (name: String , namespace: String , lang: String , attributes: AttributeMap , children: List < Node >) : Node Represents a node with children in the XML tree Constructors \u00b6 ElementNode [androidJvm] fun ElementNode (name: String , namespace: String = \"\", lang: String = \"\", attributes: AttributeMap = emptyMap(), children: List < Node > = listOf()) Functions \u00b6 Name Summary collect [androidJvm] fun collect (name: String , namespace: String ): List < ElementNode > Recursively collect all descendent ElementNode with the given name and namespace into a list collectText [androidJvm] fun collectText (): String Recursively collect and concatenate all descendent TextNode in depth-first order get [androidJvm] fun get (name: String , namespace: String ): List < ElementNode > Return a list of ElementNode children with the given name and namespace getAll [androidJvm] fun getAll (): List < ElementNode > Return a list of all ElementNode children getAttr [androidJvm] fun getAttr (name: String ): String ? Return the value of an attribute picked in the same namespace as this ElementNode , fallback to no namespace and at last to null. getAttrNs [androidJvm] fun getAttrNs (name: String , namespace: String ): String ? Return the value of an attribute picked in a specific namespace or null if it does not exist getFirst [androidJvm] fun getFirst (name: String , namespace: String ): ElementNode ? Return the first ElementNode child with the given name and namespace, or null if there is none Properties \u00b6 Name Summary attributes [androidJvm] val attributes : AttributeMap children [androidJvm] val children : List < Node > id [androidJvm] val id : String ? Return the id attribute as specified in getAttr with fallback to XML namespace lang [androidJvm] val lang : String name [androidJvm] val name : String namespace [androidJvm] val namespace : String text [androidJvm] val text : String ? Text of the first child if it is a TextNode , or null otherwise","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/#elementnode","text":"[androidJvm]\\ data class ElementNode (name: String , namespace: String , lang: String , attributes: AttributeMap , children: List < Node >) : Node Represents a node with children in the XML tree","title":"ElementNode"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/#constructors","text":"ElementNode [androidJvm] fun ElementNode (name: String , namespace: String = \"\", lang: String = \"\", attributes: AttributeMap = emptyMap(), children: List < Node > = listOf())","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/#functions","text":"Name Summary collect [androidJvm] fun collect (name: String , namespace: String ): List < ElementNode > Recursively collect all descendent ElementNode with the given name and namespace into a list collectText [androidJvm] fun collectText (): String Recursively collect and concatenate all descendent TextNode in depth-first order get [androidJvm] fun get (name: String , namespace: String ): List < ElementNode > Return a list of ElementNode children with the given name and namespace getAll [androidJvm] fun getAll (): List < ElementNode > Return a list of all ElementNode children getAttr [androidJvm] fun getAttr (name: String ): String ? Return the value of an attribute picked in the same namespace as this ElementNode , fallback to no namespace and at last to null. getAttrNs [androidJvm] fun getAttrNs (name: String , namespace: String ): String ? Return the value of an attribute picked in a specific namespace or null if it does not exist getFirst [androidJvm] fun getFirst (name: String , namespace: String ): ElementNode ? Return the first ElementNode child with the given name and namespace, or null if there is none","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/#properties","text":"Name Summary attributes [androidJvm] val attributes : AttributeMap children [androidJvm] val children : List < Node > id [androidJvm] val id : String ? Return the id attribute as specified in getAttr with fallback to XML namespace lang [androidJvm] val lang : String name [androidJvm] val name : String namespace [androidJvm] val namespace : String text [androidJvm] val text : String ? Text of the first child if it is a TextNode , or null otherwise","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/-element-node/","text":"// shared / org.readium.r2.shared.parser.xml / ElementNode / ElementNode ElementNode \u00b6 [androidJvm]\\ fun ElementNode (name: String , namespace: String = \"\", lang: String = \"\", attributes: AttributeMap = emptyMap(), children: List < Node > = listOf())","title":" element node"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/-element-node/#elementnode","text":"[androidJvm]\\ fun ElementNode (name: String , namespace: String = \"\", lang: String = \"\", attributes: AttributeMap = emptyMap(), children: List < Node > = listOf())","title":"ElementNode"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/attributes/","text":"// shared / org.readium.r2.shared.parser.xml / ElementNode / attributes attributes \u00b6 [androidJvm]\\ val attributes : AttributeMap","title":"Attributes"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/attributes/#attributes","text":"[androidJvm]\\ val attributes : AttributeMap","title":"attributes"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/children/","text":"// shared / org.readium.r2.shared.parser.xml / ElementNode / children children \u00b6 [androidJvm]\\ val children : List < Node >","title":"Children"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/children/#children","text":"[androidJvm]\\ val children : List < Node >","title":"children"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/collect-text/","text":"// shared / org.readium.r2.shared.parser.xml / ElementNode / collectText collectText \u00b6 [androidJvm]\\ fun collectText (): String Recursively collect and concatenate all descendent TextNode in depth-first order","title":"Collect text"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/collect-text/#collecttext","text":"[androidJvm]\\ fun collectText (): String Recursively collect and concatenate all descendent TextNode in depth-first order","title":"collectText"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/collect/","text":"// shared / org.readium.r2.shared.parser.xml / ElementNode / collect collect \u00b6 [androidJvm]\\ fun collect (name: String , namespace: String ): List < ElementNode > Recursively collect all descendent ElementNode with the given name and namespace into a list","title":"Collect"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/collect/#collect","text":"[androidJvm]\\ fun collect (name: String , namespace: String ): List < ElementNode > Recursively collect all descendent ElementNode with the given name and namespace into a list","title":"collect"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/get-all/","text":"// shared / org.readium.r2.shared.parser.xml / ElementNode / getAll getAll \u00b6 [androidJvm]\\ fun getAll (): List < ElementNode > Return a list of all ElementNode children","title":"Get all"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/get-all/#getall","text":"[androidJvm]\\ fun getAll (): List < ElementNode > Return a list of all ElementNode children","title":"getAll"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/get-attr-ns/","text":"// shared / org.readium.r2.shared.parser.xml / ElementNode / getAttrNs getAttrNs \u00b6 [androidJvm]\\ fun getAttrNs (name: String , namespace: String ): String ? Return the value of an attribute picked in a specific namespace or null if it does not exist","title":"Get attr ns"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/get-attr-ns/#getattrns","text":"[androidJvm]\\ fun getAttrNs (name: String , namespace: String ): String ? Return the value of an attribute picked in a specific namespace or null if it does not exist","title":"getAttrNs"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/get-attr/","text":"// shared / org.readium.r2.shared.parser.xml / ElementNode / getAttr getAttr \u00b6 [androidJvm]\\ fun getAttr (name: String ): String ? Return the value of an attribute picked in the same namespace as this ElementNode , fallback to no namespace and at last to null.","title":"Get attr"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/get-attr/#getattr","text":"[androidJvm]\\ fun getAttr (name: String ): String ? Return the value of an attribute picked in the same namespace as this ElementNode , fallback to no namespace and at last to null.","title":"getAttr"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/get-first/","text":"// shared / org.readium.r2.shared.parser.xml / ElementNode / getFirst getFirst \u00b6 [androidJvm]\\ fun getFirst (name: String , namespace: String ): ElementNode ? Return the first ElementNode child with the given name and namespace, or null if there is none","title":"Get first"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/get-first/#getfirst","text":"[androidJvm]\\ fun getFirst (name: String , namespace: String ): ElementNode ? Return the first ElementNode child with the given name and namespace, or null if there is none","title":"getFirst"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/get/","text":"// shared / org.readium.r2.shared.parser.xml / ElementNode / get get \u00b6 [androidJvm]\\ fun get (name: String , namespace: String ): List < ElementNode > Return a list of ElementNode children with the given name and namespace","title":"Get"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/get/#get","text":"[androidJvm]\\ fun get (name: String , namespace: String ): List < ElementNode > Return a list of ElementNode children with the given name and namespace","title":"get"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/id/","text":"// shared / org.readium.r2.shared.parser.xml / ElementNode / id id \u00b6 [androidJvm]\\ val id : String ? Return the id attribute as specified in getAttr with fallback to XML namespace","title":"Id"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/id/#id","text":"[androidJvm]\\ val id : String ? Return the id attribute as specified in getAttr with fallback to XML namespace","title":"id"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/lang/","text":"// shared / org.readium.r2.shared.parser.xml / ElementNode / lang lang \u00b6 [androidJvm]\\ val lang : String","title":"Lang"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/lang/#lang","text":"[androidJvm]\\ val lang : String","title":"lang"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/name/","text":"// shared / org.readium.r2.shared.parser.xml / ElementNode / name name \u00b6 [androidJvm]\\ val name : String","title":"Name"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/name/#name","text":"[androidJvm]\\ val name : String","title":"name"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/namespace/","text":"// shared / org.readium.r2.shared.parser.xml / ElementNode / namespace namespace \u00b6 [androidJvm]\\ val namespace : String","title":"Namespace"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/namespace/#namespace","text":"[androidJvm]\\ val namespace : String","title":"namespace"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/text/","text":"// shared / org.readium.r2.shared.parser.xml / ElementNode / text text \u00b6 [androidJvm]\\ val text : String ? Text of the first child if it is a TextNode , or null otherwise","title":"Text"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-element-node/text/#text","text":"[androidJvm]\\ val text : String ? Text of the first child if it is a TextNode , or null otherwise","title":"text"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-node/","text":"// shared / org.readium.r2.shared.parser.xml / Node Node \u00b6 [androidJvm]\\ sealed class Node Inheritors \u00b6 Name TextNode ElementNode","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-node/#node","text":"[androidJvm]\\ sealed class Node","title":"Node"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-node/#inheritors","text":"Name TextNode ElementNode","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-text-node/","text":"// shared / org.readium.r2.shared.parser.xml / TextNode TextNode \u00b6 [androidJvm]\\ data class TextNode (text: String ) : Node Container for text in the XML tree Constructors \u00b6 TextNode [androidJvm] fun TextNode (text: String ) Properties \u00b6 Name Summary text [androidJvm] val text : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-text-node/#textnode","text":"[androidJvm]\\ data class TextNode (text: String ) : Node Container for text in the XML tree","title":"TextNode"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-text-node/#constructors","text":"TextNode [androidJvm] fun TextNode (text: String )","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-text-node/#properties","text":"Name Summary text [androidJvm] val text : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-text-node/-text-node/","text":"// shared / org.readium.r2.shared.parser.xml / TextNode / TextNode TextNode \u00b6 [androidJvm]\\ fun TextNode (text: String )","title":" text node"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-text-node/-text-node/#textnode","text":"[androidJvm]\\ fun TextNode (text: String )","title":"TextNode"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-text-node/text/","text":"// shared / org.readium.r2.shared.parser.xml / TextNode / text text \u00b6 [androidJvm]\\ val text : String","title":"Text"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-text-node/text/#text","text":"[androidJvm]\\ val text : String","title":"text"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-xml-parser/","text":"// shared / org.readium.r2.shared.parser.xml / XmlParser XmlParser \u00b6 [androidJvm]\\ class XmlParser (isNamespaceAware: Boolean , isCaseSensitive: Boolean ) XML Parser with support for namespaces, mixed content and lang inheritance isNamespaceAware behaves as defined in XmlPullParser specification. If isCaseSensitive is false, attribute and tag names are lowercased during the parsing Constructors \u00b6 XmlParser [androidJvm] fun XmlParser (isNamespaceAware: Boolean = true, isCaseSensitive: Boolean = true) Functions \u00b6 Name Summary parse [androidJvm] fun parse (stream: InputStream ): ElementNode Properties \u00b6 Name Summary isCaseSensitive [androidJvm] val isCaseSensitive : Boolean = true isNamespaceAware [androidJvm] val isNamespaceAware : Boolean = true parser [androidJvm] val parser : XmlPullParser","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-xml-parser/#xmlparser","text":"[androidJvm]\\ class XmlParser (isNamespaceAware: Boolean , isCaseSensitive: Boolean ) XML Parser with support for namespaces, mixed content and lang inheritance isNamespaceAware behaves as defined in XmlPullParser specification. If isCaseSensitive is false, attribute and tag names are lowercased during the parsing","title":"XmlParser"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-xml-parser/#constructors","text":"XmlParser [androidJvm] fun XmlParser (isNamespaceAware: Boolean = true, isCaseSensitive: Boolean = true)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-xml-parser/#functions","text":"Name Summary parse [androidJvm] fun parse (stream: InputStream ): ElementNode","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-xml-parser/#properties","text":"Name Summary isCaseSensitive [androidJvm] val isCaseSensitive : Boolean = true isNamespaceAware [androidJvm] val isNamespaceAware : Boolean = true parser [androidJvm] val parser : XmlPullParser","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-xml-parser/-xml-parser/","text":"// shared / org.readium.r2.shared.parser.xml / XmlParser / XmlParser XmlParser \u00b6 [androidJvm]\\ fun XmlParser (isNamespaceAware: Boolean = true, isCaseSensitive: Boolean = true)","title":" xml parser"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-xml-parser/-xml-parser/#xmlparser","text":"[androidJvm]\\ fun XmlParser (isNamespaceAware: Boolean = true, isCaseSensitive: Boolean = true)","title":"XmlParser"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-xml-parser/is-case-sensitive/","text":"// shared / org.readium.r2.shared.parser.xml / XmlParser / isCaseSensitive isCaseSensitive \u00b6 [androidJvm]\\ val isCaseSensitive : Boolean = true","title":"Is case sensitive"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-xml-parser/is-case-sensitive/#iscasesensitive","text":"[androidJvm]\\ val isCaseSensitive : Boolean = true","title":"isCaseSensitive"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-xml-parser/is-namespace-aware/","text":"// shared / org.readium.r2.shared.parser.xml / XmlParser / isNamespaceAware isNamespaceAware \u00b6 [androidJvm]\\ val isNamespaceAware : Boolean = true","title":"Is namespace aware"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-xml-parser/is-namespace-aware/#isnamespaceaware","text":"[androidJvm]\\ val isNamespaceAware : Boolean = true","title":"isNamespaceAware"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-xml-parser/parse/","text":"// shared / org.readium.r2.shared.parser.xml / XmlParser / parse parse \u00b6 [androidJvm]\\ fun parse (stream: InputStream ): ElementNode","title":"Parse"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-xml-parser/parse/#parse","text":"[androidJvm]\\ fun parse (stream: InputStream ): ElementNode","title":"parse"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-xml-parser/parser/","text":"// shared / org.readium.r2.shared.parser.xml / XmlParser / parser parser \u00b6 [androidJvm]\\ val parser : XmlPullParser","title":"Parser"},{"location":"readium/shared/shared/org.readium.r2.shared.parser.xml/-xml-parser/parser/#parser","text":"[androidJvm]\\ val parser : XmlPullParser","title":"parser"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/","text":"// shared / org.readium.r2.shared.publication Package org.readium.r2.shared.publication \u00b6 Types \u00b6 Name Summary Collection [androidJvm] typealias Collection = Contributor Collection type used for collection/series metadata. For convenience, the JSON schema reuse the Contributor's definition. ContentProtection [androidJvm] interface ContentProtection Bridge between a Content Protection technology and the Readium toolkit. Contributor [androidJvm] data class Contributor (localizedName: LocalizedString , localizedSortAs: LocalizedString ?, identifier: String ?, roles: Set < String >, position: Double ?, links: List < Link >) : JSONable , Parcelable Contributor Object for the Readium Web Publication Manifest. https://readium.org/webpub-manifest/schema/contributor-object.schema.json Link [androidJvm] data class Link (href: String , type: String ?, templated: Boolean , title: String ?, rels: Set < String >, properties: Properties , height: Int ?, width: Int ?, bitrate: Double ?, duration: Double ?, languages: List < String >, alternates: List < Link >, children: List < Link >) : JSONable , Parcelable Link Object for the Readium Web Publication Manifest. https://readium.org/webpub-manifest/schema/link.schema.json LinkHrefNormalizer [androidJvm] typealias LinkHrefNormalizer = ( String ) -> String Function used to recursively transform the href of a Link when parsing its JSON representation. LocalizedString [androidJvm] data class LocalizedString (translations: Map < String ?, LocalizedString.Translation >) : JSONable , Parcelable Represents a string with multiple translations indexed by a BCP 47 language tag. Locator [androidJvm] data class Locator (href: String , type: String , title: String ?, locations: Locator.Locations , text: Locator.Text ) : JSONable , Parcelable Provides a precise location in a publication in a format that can be stored and shared. LocatorCollection [androidJvm] data class LocatorCollection (metadata: LocatorCollection.Metadata , links: List < Link >, locators: List < Locator >) : JSONable , Parcelable Represents a sequential list of Locator objects. Manifest [androidJvm] data class Manifest (context: List < String >, metadata: Metadata , links: List < Link >, readingOrder: List < Link >, resources: List < Link >, tableOfContents: List < Link >, subcollections: Map < String , List < PublicationCollection >>) : JSONable , Parcelable Holds the metadata of a Readium publication, as described in the Readium Web Publication Manifest. Metadata [androidJvm] data class Metadata (identifier: String ?, type: String ?, localizedTitle: LocalizedString , localizedSubtitle: LocalizedString ?, localizedSortAs: LocalizedString ?, modified: Date ?, published: Date ?, languages: List < String >, subjects: List < Subject >, authors: List < Contributor >, translators: List < Contributor >, editors: List < Contributor >, artists: List < Contributor >, illustrators: List < Contributor >, letterers: List < Contributor >, pencilers: List < Contributor >, colorists: List < Contributor >, inkers: List < Contributor >, narrators: List < Contributor >, contributors: List < Contributor >, publishers: List < Contributor >, imprints: List < Contributor >, readingProgression: ReadingProgression , description: String ?, duration: Double ?, numberOfPages: Int ?, belongsTo: Map < String , List < Collection >>, otherMetadata: Map < String , Any >) : JSONable , Parcelable https://readium.org/webpub-manifest/schema/metadata.schema.json Properties [androidJvm] data class Properties (otherProperties: Map < String , Any >) : JSONable , Parcelable Properties associated to the linked resource. Publication [androidJvm] class Publication (manifest: Manifest , fetcher: Fetcher , servicesBuilder: Publication.ServicesBuilder , positionsFactory: Publication.PositionListFactory ?, userSettingsUIPreset: MutableMap < ReadiumCSSName , Boolean >, cssStyle: String ?, internalData: MutableMap < String , String >) The Publication shared model is the entry-point for all the metadata and services related to a Readium publication. PublicationCollection [androidJvm] data class PublicationCollection (metadata: Map < String , Any >, links: List < Link >, subcollections: Map < String , List < PublicationCollection >>) : JSONable , Parcelable Core Collection Model PublicationId [androidJvm] typealias PublicationId = String A reference uniquely identifying a publication in the reading app. For example, a database primary key for a local publication, or a source URL for a remote one. We can't use publication.metadata.identifier directly because it might be null or not really unique in the reading app. That's why sometimes we require an ID provided by the app. ReadingProgression [androidJvm] enum ReadingProgression : Enum < ReadingProgression > , Parcelable Subject [androidJvm] data class Subject (localizedName: LocalizedString , localizedSortAs: LocalizedString ?, scheme: String ?, code: String ?, links: List < Link >) : JSONable , Parcelable https://github.com/readium/webpub-manifest/tree/master/contexts/default#subjects Functions \u00b6 Name Summary allMatchMediaType [androidJvm] fun List < Link >. allMatchMediaType (mediaType: MediaType ): Boolean Returns whether all the resources in the collection are matching the given media type. allMatchMediaTypes [androidJvm] fun List < Link >. allMatchMediaTypes (mediaTypes: List < MediaType >): Boolean Returns whether all the resources in the collection are matching any of the given media types. filterByMediaType [androidJvm] fun List < Link >. filterByMediaType (mediaType: MediaType ): List < Link > Finds all the links matching the given media type. filterByMediaTypes [androidJvm] fun List < Link >. filterByMediaTypes (mediaTypes: List < MediaType >): List < Link > Finds all the links matching any of the given media types. filterByRel [androidJvm] fun List < Link >. filterByRel (rel: String ): List < Link > Finds all the links with the given relation. firstWithHref [androidJvm] fun List < Link >. firstWithHref (href: String ): Link ? Finds the first link matching the given HREF. firstWithMediaType [androidJvm] fun List < Link >. firstWithMediaType (mediaType: MediaType ): Link ? Finds the first link matching the given media type. firstWithRel [androidJvm] fun List < Link >. firstWithRel (rel: String ): Link ? Finds the first link with the given relation. indexOfFirstWithHref [androidJvm] fun List < Link >. indexOfFirstWithHref (href: String ): Int ? Returns the first Link with the given href , or null if not found. toLocator [androidJvm] fun Link . toLocator (): Locator Creates a Locator from a reading order Link . Properties \u00b6 Name Summary allAreAudio [androidJvm] val List < Link >. allAreAudio : Boolean Returns whether all the resources in the collection are audio clips. allAreBitmap [androidJvm] val List < Link >. allAreBitmap : Boolean Returns whether all the resources in the collection are bitmaps. allAreHtml [androidJvm] val List < Link >. allAreHtml : Boolean Returns whether all the resources in the collection are HTML documents. allAreVideo [androidJvm] val List < Link >. allAreVideo : Boolean Returns whether all the resources in the collection are video clips. LinkHrefNormalizerIdentity [androidJvm] val LinkHrefNormalizerIdentity : LinkHrefNormalizer Default href normalizer for Link , doing nothing.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/#package-orgreadiumr2sharedpublication","text":"","title":"Package org.readium.r2.shared.publication"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/#types","text":"Name Summary Collection [androidJvm] typealias Collection = Contributor Collection type used for collection/series metadata. For convenience, the JSON schema reuse the Contributor's definition. ContentProtection [androidJvm] interface ContentProtection Bridge between a Content Protection technology and the Readium toolkit. Contributor [androidJvm] data class Contributor (localizedName: LocalizedString , localizedSortAs: LocalizedString ?, identifier: String ?, roles: Set < String >, position: Double ?, links: List < Link >) : JSONable , Parcelable Contributor Object for the Readium Web Publication Manifest. https://readium.org/webpub-manifest/schema/contributor-object.schema.json Link [androidJvm] data class Link (href: String , type: String ?, templated: Boolean , title: String ?, rels: Set < String >, properties: Properties , height: Int ?, width: Int ?, bitrate: Double ?, duration: Double ?, languages: List < String >, alternates: List < Link >, children: List < Link >) : JSONable , Parcelable Link Object for the Readium Web Publication Manifest. https://readium.org/webpub-manifest/schema/link.schema.json LinkHrefNormalizer [androidJvm] typealias LinkHrefNormalizer = ( String ) -> String Function used to recursively transform the href of a Link when parsing its JSON representation. LocalizedString [androidJvm] data class LocalizedString (translations: Map < String ?, LocalizedString.Translation >) : JSONable , Parcelable Represents a string with multiple translations indexed by a BCP 47 language tag. Locator [androidJvm] data class Locator (href: String , type: String , title: String ?, locations: Locator.Locations , text: Locator.Text ) : JSONable , Parcelable Provides a precise location in a publication in a format that can be stored and shared. LocatorCollection [androidJvm] data class LocatorCollection (metadata: LocatorCollection.Metadata , links: List < Link >, locators: List < Locator >) : JSONable , Parcelable Represents a sequential list of Locator objects. Manifest [androidJvm] data class Manifest (context: List < String >, metadata: Metadata , links: List < Link >, readingOrder: List < Link >, resources: List < Link >, tableOfContents: List < Link >, subcollections: Map < String , List < PublicationCollection >>) : JSONable , Parcelable Holds the metadata of a Readium publication, as described in the Readium Web Publication Manifest. Metadata [androidJvm] data class Metadata (identifier: String ?, type: String ?, localizedTitle: LocalizedString , localizedSubtitle: LocalizedString ?, localizedSortAs: LocalizedString ?, modified: Date ?, published: Date ?, languages: List < String >, subjects: List < Subject >, authors: List < Contributor >, translators: List < Contributor >, editors: List < Contributor >, artists: List < Contributor >, illustrators: List < Contributor >, letterers: List < Contributor >, pencilers: List < Contributor >, colorists: List < Contributor >, inkers: List < Contributor >, narrators: List < Contributor >, contributors: List < Contributor >, publishers: List < Contributor >, imprints: List < Contributor >, readingProgression: ReadingProgression , description: String ?, duration: Double ?, numberOfPages: Int ?, belongsTo: Map < String , List < Collection >>, otherMetadata: Map < String , Any >) : JSONable , Parcelable https://readium.org/webpub-manifest/schema/metadata.schema.json Properties [androidJvm] data class Properties (otherProperties: Map < String , Any >) : JSONable , Parcelable Properties associated to the linked resource. Publication [androidJvm] class Publication (manifest: Manifest , fetcher: Fetcher , servicesBuilder: Publication.ServicesBuilder , positionsFactory: Publication.PositionListFactory ?, userSettingsUIPreset: MutableMap < ReadiumCSSName , Boolean >, cssStyle: String ?, internalData: MutableMap < String , String >) The Publication shared model is the entry-point for all the metadata and services related to a Readium publication. PublicationCollection [androidJvm] data class PublicationCollection (metadata: Map < String , Any >, links: List < Link >, subcollections: Map < String , List < PublicationCollection >>) : JSONable , Parcelable Core Collection Model PublicationId [androidJvm] typealias PublicationId = String A reference uniquely identifying a publication in the reading app. For example, a database primary key for a local publication, or a source URL for a remote one. We can't use publication.metadata.identifier directly because it might be null or not really unique in the reading app. That's why sometimes we require an ID provided by the app. ReadingProgression [androidJvm] enum ReadingProgression : Enum < ReadingProgression > , Parcelable Subject [androidJvm] data class Subject (localizedName: LocalizedString , localizedSortAs: LocalizedString ?, scheme: String ?, code: String ?, links: List < Link >) : JSONable , Parcelable https://github.com/readium/webpub-manifest/tree/master/contexts/default#subjects","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/#functions","text":"Name Summary allMatchMediaType [androidJvm] fun List < Link >. allMatchMediaType (mediaType: MediaType ): Boolean Returns whether all the resources in the collection are matching the given media type. allMatchMediaTypes [androidJvm] fun List < Link >. allMatchMediaTypes (mediaTypes: List < MediaType >): Boolean Returns whether all the resources in the collection are matching any of the given media types. filterByMediaType [androidJvm] fun List < Link >. filterByMediaType (mediaType: MediaType ): List < Link > Finds all the links matching the given media type. filterByMediaTypes [androidJvm] fun List < Link >. filterByMediaTypes (mediaTypes: List < MediaType >): List < Link > Finds all the links matching any of the given media types. filterByRel [androidJvm] fun List < Link >. filterByRel (rel: String ): List < Link > Finds all the links with the given relation. firstWithHref [androidJvm] fun List < Link >. firstWithHref (href: String ): Link ? Finds the first link matching the given HREF. firstWithMediaType [androidJvm] fun List < Link >. firstWithMediaType (mediaType: MediaType ): Link ? Finds the first link matching the given media type. firstWithRel [androidJvm] fun List < Link >. firstWithRel (rel: String ): Link ? Finds the first link with the given relation. indexOfFirstWithHref [androidJvm] fun List < Link >. indexOfFirstWithHref (href: String ): Int ? Returns the first Link with the given href , or null if not found. toLocator [androidJvm] fun Link . toLocator (): Locator Creates a Locator from a reading order Link .","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/#properties","text":"Name Summary allAreAudio [androidJvm] val List < Link >. allAreAudio : Boolean Returns whether all the resources in the collection are audio clips. allAreBitmap [androidJvm] val List < Link >. allAreBitmap : Boolean Returns whether all the resources in the collection are bitmaps. allAreHtml [androidJvm] val List < Link >. allAreHtml : Boolean Returns whether all the resources in the collection are HTML documents. allAreVideo [androidJvm] val List < Link >. allAreVideo : Boolean Returns whether all the resources in the collection are video clips. LinkHrefNormalizerIdentity [androidJvm] val LinkHrefNormalizerIdentity : LinkHrefNormalizer Default href normalizer for Link , doing nothing.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link-href-normalizer-identity/","text":"// shared / org.readium.r2.shared.publication / LinkHrefNormalizerIdentity LinkHrefNormalizerIdentity \u00b6 [androidJvm]\\ val LinkHrefNormalizerIdentity : LinkHrefNormalizer Default href normalizer for Link , doing nothing.","title":" link href normalizer identity"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link-href-normalizer-identity/#linkhrefnormalizeridentity","text":"[androidJvm]\\ val LinkHrefNormalizerIdentity : LinkHrefNormalizer Default href normalizer for Link , doing nothing.","title":"LinkHrefNormalizerIdentity"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/all-are-audio/","text":"// shared / org.readium.r2.shared.publication / allAreAudio allAreAudio \u00b6 [androidJvm]\\ val List < Link >. allAreAudio : Boolean Returns whether all the resources in the collection are audio clips.","title":"All are audio"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/all-are-audio/#allareaudio","text":"[androidJvm]\\ val List < Link >. allAreAudio : Boolean Returns whether all the resources in the collection are audio clips.","title":"allAreAudio"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/all-are-bitmap/","text":"// shared / org.readium.r2.shared.publication / allAreBitmap allAreBitmap \u00b6 [androidJvm]\\ val List < Link >. allAreBitmap : Boolean Returns whether all the resources in the collection are bitmaps.","title":"All are bitmap"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/all-are-bitmap/#allarebitmap","text":"[androidJvm]\\ val List < Link >. allAreBitmap : Boolean Returns whether all the resources in the collection are bitmaps.","title":"allAreBitmap"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/all-are-html/","text":"// shared / org.readium.r2.shared.publication / allAreHtml allAreHtml \u00b6 [androidJvm]\\ val List < Link >. allAreHtml : Boolean Returns whether all the resources in the collection are HTML documents.","title":"All are html"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/all-are-html/#allarehtml","text":"[androidJvm]\\ val List < Link >. allAreHtml : Boolean Returns whether all the resources in the collection are HTML documents.","title":"allAreHtml"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/all-are-video/","text":"// shared / org.readium.r2.shared.publication / allAreVideo allAreVideo \u00b6 [androidJvm]\\ val List < Link >. allAreVideo : Boolean Returns whether all the resources in the collection are video clips.","title":"All are video"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/all-are-video/#allarevideo","text":"[androidJvm]\\ val List < Link >. allAreVideo : Boolean Returns whether all the resources in the collection are video clips.","title":"allAreVideo"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/all-match-media-type/","text":"// shared / org.readium.r2.shared.publication / allMatchMediaType allMatchMediaType \u00b6 [androidJvm]\\ fun List < Link >. allMatchMediaType (mediaType: MediaType ): Boolean Returns whether all the resources in the collection are matching the given media type.","title":"All match media type"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/all-match-media-type/#allmatchmediatype","text":"[androidJvm]\\ fun List < Link >. allMatchMediaType (mediaType: MediaType ): Boolean Returns whether all the resources in the collection are matching the given media type.","title":"allMatchMediaType"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/all-match-media-types/","text":"// shared / org.readium.r2.shared.publication / allMatchMediaTypes allMatchMediaTypes \u00b6 [androidJvm]\\ fun List < Link >. allMatchMediaTypes (mediaTypes: List < MediaType >): Boolean Returns whether all the resources in the collection are matching any of the given media types.","title":"All match media types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/all-match-media-types/#allmatchmediatypes","text":"[androidJvm]\\ fun List < Link >. allMatchMediaTypes (mediaTypes: List < MediaType >): Boolean Returns whether all the resources in the collection are matching any of the given media types.","title":"allMatchMediaTypes"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/filter-by-media-type/","text":"// shared / org.readium.r2.shared.publication / filterByMediaType filterByMediaType \u00b6 [androidJvm]\\ fun List < Link >. filterByMediaType (mediaType: MediaType ): List < Link > Finds all the links matching the given media type.","title":"Filter by media type"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/filter-by-media-type/#filterbymediatype","text":"[androidJvm]\\ fun List < Link >. filterByMediaType (mediaType: MediaType ): List < Link > Finds all the links matching the given media type.","title":"filterByMediaType"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/filter-by-media-types/","text":"// shared / org.readium.r2.shared.publication / filterByMediaTypes filterByMediaTypes \u00b6 [androidJvm]\\ fun List < Link >. filterByMediaTypes (mediaTypes: List < MediaType >): List < Link > Finds all the links matching any of the given media types.","title":"Filter by media types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/filter-by-media-types/#filterbymediatypes","text":"[androidJvm]\\ fun List < Link >. filterByMediaTypes (mediaTypes: List < MediaType >): List < Link > Finds all the links matching any of the given media types.","title":"filterByMediaTypes"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/filter-by-rel/","text":"// shared / org.readium.r2.shared.publication / filterByRel filterByRel \u00b6 [androidJvm]\\ fun List < Link >. filterByRel (rel: String ): List < Link > Finds all the links with the given relation.","title":"Filter by rel"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/filter-by-rel/#filterbyrel","text":"[androidJvm]\\ fun List < Link >. filterByRel (rel: String ): List < Link > Finds all the links with the given relation.","title":"filterByRel"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/first-with-href/","text":"// shared / org.readium.r2.shared.publication / firstWithHref firstWithHref \u00b6 [androidJvm]\\ fun List < Link >. firstWithHref (href: String ): Link ? Finds the first link matching the given HREF.","title":"First with href"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/first-with-href/#firstwithhref","text":"[androidJvm]\\ fun List < Link >. firstWithHref (href: String ): Link ? Finds the first link matching the given HREF.","title":"firstWithHref"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/first-with-media-type/","text":"// shared / org.readium.r2.shared.publication / firstWithMediaType firstWithMediaType \u00b6 [androidJvm]\\ fun List < Link >. firstWithMediaType (mediaType: MediaType ): Link ? Finds the first link matching the given media type.","title":"First with media type"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/first-with-media-type/#firstwithmediatype","text":"[androidJvm]\\ fun List < Link >. firstWithMediaType (mediaType: MediaType ): Link ? Finds the first link matching the given media type.","title":"firstWithMediaType"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/first-with-rel/","text":"// shared / org.readium.r2.shared.publication / firstWithRel firstWithRel \u00b6 [androidJvm]\\ fun List < Link >. firstWithRel (rel: String ): Link ? Finds the first link with the given relation.","title":"First with rel"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/first-with-rel/#firstwithrel","text":"[androidJvm]\\ fun List < Link >. firstWithRel (rel: String ): Link ? Finds the first link with the given relation.","title":"firstWithRel"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/index-of-first-with-href/","text":"// shared / org.readium.r2.shared.publication / indexOfFirstWithHref indexOfFirstWithHref \u00b6 [androidJvm]\\ fun List < Link >. indexOfFirstWithHref (href: String ): Int ? Returns the first Link with the given href , or null if not found.","title":"Index of first with href"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/index-of-first-with-href/#indexoffirstwithhref","text":"[androidJvm]\\ fun List < Link >. indexOfFirstWithHref (href: String ): Int ? Returns the first Link with the given href , or null if not found.","title":"indexOfFirstWithHref"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/to-locator/","text":"// shared / org.readium.r2.shared.publication / toLocator toLocator \u00b6 [androidJvm]\\ fun Link . toLocator (): Locator Creates a Locator from a reading order Link .","title":"To locator"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/to-locator/#tolocator","text":"[androidJvm]\\ fun Link . toLocator (): Locator Creates a Locator from a reading order Link .","title":"toLocator"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/","text":"// shared / org.readium.r2.shared.publication / ContentProtection ContentProtection \u00b6 [androidJvm]\\ interface ContentProtection Bridge between a Content Protection technology and the Readium toolkit. Its responsibilities are to: Unlock a publication by returning a customized [Fetcher](../../org.readium.r2.shared.fetcher/-fetcher/index.md). Create a [ContentProtectionService](../../org.readium.r2.shared.publication.services/-content-protection-service/index.md) publication service. Types \u00b6 Name Summary Exception [androidJvm] sealed class Exception : UserException ProtectedAsset [androidJvm] data class ProtectedAsset (asset: PublicationAsset , fetcher: Fetcher , onCreatePublication: Publication.Builder .() -> Unit ) Holds the result of opening a PublicationAsset with a ContentProtection . Scheme [androidJvm] class Scheme (uri: String , name: LocalizedString ?) Represents a specific Content Protection technology, uniquely identified with an uri . Functions \u00b6 Name Summary open [androidJvm] abstract suspend fun open (asset: PublicationAsset , fetcher: Fetcher , credentials: String ?, allowUserInteraction: Boolean , sender: Any ?): Try < ContentProtection.ProtectedAsset , Publication.OpeningException >? Attempts to unlock a potentially protected publication asset.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/#contentprotection","text":"[androidJvm]\\ interface ContentProtection Bridge between a Content Protection technology and the Readium toolkit. Its responsibilities are to: Unlock a publication by returning a customized [Fetcher](../../org.readium.r2.shared.fetcher/-fetcher/index.md). Create a [ContentProtectionService](../../org.readium.r2.shared.publication.services/-content-protection-service/index.md) publication service.","title":"ContentProtection"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/#types","text":"Name Summary Exception [androidJvm] sealed class Exception : UserException ProtectedAsset [androidJvm] data class ProtectedAsset (asset: PublicationAsset , fetcher: Fetcher , onCreatePublication: Publication.Builder .() -> Unit ) Holds the result of opening a PublicationAsset with a ContentProtection . Scheme [androidJvm] class Scheme (uri: String , name: LocalizedString ?) Represents a specific Content Protection technology, uniquely identified with an uri .","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/#functions","text":"Name Summary open [androidJvm] abstract suspend fun open (asset: PublicationAsset , fetcher: Fetcher , credentials: String ?, allowUserInteraction: Boolean , sender: Any ?): Try < ContentProtection.ProtectedAsset , Publication.OpeningException >? Attempts to unlock a potentially protected publication asset.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/open/","text":"// shared / org.readium.r2.shared.publication / ContentProtection / open open \u00b6 [androidJvm]\\ abstract suspend fun open (asset: PublicationAsset , fetcher: Fetcher , credentials: String ?, allowUserInteraction: Boolean , sender: Any ?): Try < ContentProtection.ProtectedAsset , Publication.OpeningException >? Attempts to unlock a potentially protected publication asset. The Streamer will create a leaf fetcher for the low-level asset access (e.g. ArchiveFetcher for a ZIP archive), to avoid having each Content Protection open the asset to check if it's protected or not. A publication might be protected in such a way that the package format can't be recognized, in which case the Content Protection will have the responsibility of creating a new leaf Fetcher . Return \u00b6 A ProtectedAsset in case of success, null if the asset is not protected by this technology or a Publication.OpeningException if the asset can't be successfully opened, even in restricted mode.","title":"Open"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/open/#open","text":"[androidJvm]\\ abstract suspend fun open (asset: PublicationAsset , fetcher: Fetcher , credentials: String ?, allowUserInteraction: Boolean , sender: Any ?): Try < ContentProtection.ProtectedAsset , Publication.OpeningException >? Attempts to unlock a potentially protected publication asset. The Streamer will create a leaf fetcher for the low-level asset access (e.g. ArchiveFetcher for a ZIP archive), to avoid having each Content Protection open the asset to check if it's protected or not. A publication might be protected in such a way that the package format can't be recognized, in which case the Content Protection will have the responsibility of creating a new leaf Fetcher .","title":"open"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/open/#return","text":"A ProtectedAsset in case of success, null if the asset is not protected by this technology or a Publication.OpeningException if the asset can't be successfully opened, even in restricted mode.","title":"Return"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-exception/","text":"// shared / org.readium.r2.shared.publication / ContentProtection / Exception Exception \u00b6 [androidJvm]\\ sealed class Exception : UserException Types \u00b6 Name Summary SchemeNotSupported [androidJvm] class SchemeNotSupported (scheme: ContentProtection.Scheme ?) : ContentProtection.Exception Exception returned when the given Content Protection scheme is not supported by the app. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? Inheritors \u00b6 Name ContentProtection.Exception","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-exception/#exception","text":"[androidJvm]\\ sealed class Exception : UserException","title":"Exception"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-exception/#types","text":"Name Summary SchemeNotSupported [androidJvm] class SchemeNotSupported (scheme: ContentProtection.Scheme ?) : ContentProtection.Exception Exception returned when the given Content Protection scheme is not supported by the app.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-exception/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-exception/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-exception/#inheritors","text":"Name ContentProtection.Exception","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-exception/-scheme-not-supported/","text":"// shared / org.readium.r2.shared.publication / ContentProtection / Exception / SchemeNotSupported SchemeNotSupported \u00b6 [androidJvm]\\ class SchemeNotSupported (scheme: ContentProtection.Scheme ?) : ContentProtection.Exception Exception returned when the given Content Protection scheme is not supported by the app. Constructors \u00b6 SchemeNotSupported [androidJvm] fun SchemeNotSupported (scheme: ContentProtection.Scheme ? = null) Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? scheme [androidJvm] val scheme : ContentProtection.Scheme ? = null","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-exception/-scheme-not-supported/#schemenotsupported","text":"[androidJvm]\\ class SchemeNotSupported (scheme: ContentProtection.Scheme ?) : ContentProtection.Exception Exception returned when the given Content Protection scheme is not supported by the app.","title":"SchemeNotSupported"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-exception/-scheme-not-supported/#constructors","text":"SchemeNotSupported [androidJvm] fun SchemeNotSupported (scheme: ContentProtection.Scheme ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-exception/-scheme-not-supported/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-exception/-scheme-not-supported/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? scheme [androidJvm] val scheme : ContentProtection.Scheme ? = null","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-exception/-scheme-not-supported/-scheme-not-supported/","text":"// shared / org.readium.r2.shared.publication / ContentProtection / Exception / SchemeNotSupported / SchemeNotSupported SchemeNotSupported \u00b6 [androidJvm]\\ fun SchemeNotSupported (scheme: ContentProtection.Scheme ? = null)","title":" scheme not supported"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-exception/-scheme-not-supported/-scheme-not-supported/#schemenotsupported","text":"[androidJvm]\\ fun SchemeNotSupported (scheme: ContentProtection.Scheme ? = null)","title":"SchemeNotSupported"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-exception/-scheme-not-supported/scheme/","text":"// shared / org.readium.r2.shared.publication / ContentProtection / Exception / SchemeNotSupported / scheme scheme \u00b6 [androidJvm]\\ val scheme : ContentProtection.Scheme ? = null","title":"Scheme"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-exception/-scheme-not-supported/scheme/#scheme","text":"[androidJvm]\\ val scheme : ContentProtection.Scheme ? = null","title":"scheme"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-protected-asset/","text":"// shared / org.readium.r2.shared.publication / ContentProtection / ProtectedAsset ProtectedAsset \u00b6 [androidJvm]\\ data class ProtectedAsset (asset: PublicationAsset , fetcher: Fetcher , onCreatePublication: Publication.Builder .() -> Unit ) Holds the result of opening a PublicationAsset with a ContentProtection . Constructors \u00b6 ProtectedAsset [androidJvm] fun ProtectedAsset (asset: PublicationAsset , fetcher: Fetcher , onCreatePublication: Publication.Builder .() -> Unit = {}) Properties \u00b6 Name Summary asset [androidJvm] val asset : PublicationAsset Protected asset which will be provided to the parsers. In most cases, this will be the asset provided to ContentProtection::open(), but a Content Protection might modify it in some cases: fetcher [androidJvm] val fetcher : Fetcher Primary leaf fetcher to be used by parsers. The Content Protection can unlock resources by modifying the Fetcher provided to ContentProtection::open(), for example by: onCreatePublication [androidJvm] val onCreatePublication : Publication.Builder .() -> Unit Called on every parsed Publication.Builder. It can be used to modify the Manifest, the root Fetcher or the list of service factories of a Publication .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-protected-asset/#protectedasset","text":"[androidJvm]\\ data class ProtectedAsset (asset: PublicationAsset , fetcher: Fetcher , onCreatePublication: Publication.Builder .() -> Unit ) Holds the result of opening a PublicationAsset with a ContentProtection .","title":"ProtectedAsset"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-protected-asset/#constructors","text":"ProtectedAsset [androidJvm] fun ProtectedAsset (asset: PublicationAsset , fetcher: Fetcher , onCreatePublication: Publication.Builder .() -> Unit = {})","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-protected-asset/#properties","text":"Name Summary asset [androidJvm] val asset : PublicationAsset Protected asset which will be provided to the parsers. In most cases, this will be the asset provided to ContentProtection::open(), but a Content Protection might modify it in some cases: fetcher [androidJvm] val fetcher : Fetcher Primary leaf fetcher to be used by parsers. The Content Protection can unlock resources by modifying the Fetcher provided to ContentProtection::open(), for example by: onCreatePublication [androidJvm] val onCreatePublication : Publication.Builder .() -> Unit Called on every parsed Publication.Builder. It can be used to modify the Manifest, the root Fetcher or the list of service factories of a Publication .","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-protected-asset/-protected-asset/","text":"// shared / org.readium.r2.shared.publication / ContentProtection / ProtectedAsset / ProtectedAsset ProtectedAsset \u00b6 [androidJvm]\\ fun ProtectedAsset (asset: PublicationAsset , fetcher: Fetcher , onCreatePublication: Publication.Builder .() -> Unit = {})","title":" protected asset"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-protected-asset/-protected-asset/#protectedasset","text":"[androidJvm]\\ fun ProtectedAsset (asset: PublicationAsset , fetcher: Fetcher , onCreatePublication: Publication.Builder .() -> Unit = {})","title":"ProtectedAsset"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-protected-asset/asset/","text":"// shared / org.readium.r2.shared.publication / ContentProtection / ProtectedAsset / asset asset \u00b6 [androidJvm]\\ val asset : PublicationAsset","title":"Asset"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-protected-asset/asset/#asset","text":"[androidJvm]\\ val asset : PublicationAsset","title":"asset"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-protected-asset/fetcher/","text":"// shared / org.readium.r2.shared.publication / ContentProtection / ProtectedAsset / fetcher fetcher \u00b6 [androidJvm]\\ val fetcher : Fetcher","title":"Fetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-protected-asset/fetcher/#fetcher","text":"[androidJvm]\\ val fetcher : Fetcher","title":"fetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-protected-asset/on-create-publication/","text":"// shared / org.readium.r2.shared.publication / ContentProtection / ProtectedAsset / onCreatePublication onCreatePublication \u00b6 [androidJvm]\\ val onCreatePublication : Publication.Builder .() -> Unit","title":"On create publication"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-protected-asset/on-create-publication/#oncreatepublication","text":"[androidJvm]\\ val onCreatePublication : Publication.Builder .() -> Unit","title":"onCreatePublication"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-scheme/","text":"// shared / org.readium.r2.shared.publication / ContentProtection / Scheme Scheme \u00b6 [androidJvm]\\ class Scheme (uri: String , name: LocalizedString ?) Represents a specific Content Protection technology, uniquely identified with an uri . Constructors \u00b6 Scheme [androidJvm] fun Scheme (uri: String , name: LocalizedString ?) Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary equals [androidJvm] open operator override fun equals (other: Any ?): Boolean hashCode [androidJvm] open override fun hashCode (): Int Properties \u00b6 Name Summary name [androidJvm] val name : LocalizedString ? uri [androidJvm] val uri : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-scheme/#scheme","text":"[androidJvm]\\ class Scheme (uri: String , name: LocalizedString ?) Represents a specific Content Protection technology, uniquely identified with an uri .","title":"Scheme"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-scheme/#constructors","text":"Scheme [androidJvm] fun Scheme (uri: String , name: LocalizedString ?)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-scheme/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-scheme/#functions","text":"Name Summary equals [androidJvm] open operator override fun equals (other: Any ?): Boolean hashCode [androidJvm] open override fun hashCode (): Int","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-scheme/#properties","text":"Name Summary name [androidJvm] val name : LocalizedString ? uri [androidJvm] val uri : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-scheme/-scheme/","text":"// shared / org.readium.r2.shared.publication / ContentProtection / Scheme / Scheme Scheme \u00b6 [androidJvm]\\ fun Scheme (uri: String , name: LocalizedString ?)","title":" scheme"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-scheme/-scheme/#scheme","text":"[androidJvm]\\ fun Scheme (uri: String , name: LocalizedString ?)","title":"Scheme"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-scheme/equals/","text":"// shared / org.readium.r2.shared.publication / ContentProtection / Scheme / equals equals \u00b6 [androidJvm]\\ open operator override fun equals (other: Any ?): Boolean","title":"Equals"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-scheme/equals/#equals","text":"[androidJvm]\\ open operator override fun equals (other: Any ?): Boolean","title":"equals"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-scheme/hash-code/","text":"// shared / org.readium.r2.shared.publication / ContentProtection / Scheme / hashCode hashCode \u00b6 [androidJvm]\\ open override fun hashCode (): Int","title":"Hash code"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-scheme/hash-code/#hashcode","text":"[androidJvm]\\ open override fun hashCode (): Int","title":"hashCode"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-scheme/name/","text":"// shared / org.readium.r2.shared.publication / ContentProtection / Scheme / name name \u00b6 [androidJvm]\\ val name : LocalizedString ?","title":"Name"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-scheme/name/#name","text":"[androidJvm]\\ val name : LocalizedString ?","title":"name"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-scheme/uri/","text":"// shared / org.readium.r2.shared.publication / ContentProtection / Scheme / uri uri \u00b6 [androidJvm]\\ val uri : String","title":"Uri"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-scheme/uri/#uri","text":"[androidJvm]\\ val uri : String","title":"uri"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-scheme/-companion/","text":"// shared / org.readium.r2.shared.publication / ContentProtection / Scheme / Companion Companion \u00b6 [androidJvm]\\ object Companion Properties \u00b6 Name Summary Adept [androidJvm] val Adept : ContentProtection.Scheme Adobe ADEPT DRM scheme. Lcp [androidJvm] val Lcp : ContentProtection.Scheme Readium LCP DRM scheme.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-scheme/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-scheme/-companion/#properties","text":"Name Summary Adept [androidJvm] val Adept : ContentProtection.Scheme Adobe ADEPT DRM scheme. Lcp [androidJvm] val Lcp : ContentProtection.Scheme Readium LCP DRM scheme.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-scheme/-companion/-adept/","text":"// shared / org.readium.r2.shared.publication / ContentProtection / Scheme / Companion / Adept Adept \u00b6 [androidJvm]\\ val Adept : ContentProtection.Scheme Adobe ADEPT DRM scheme.","title":" adept"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-scheme/-companion/-adept/#adept","text":"[androidJvm]\\ val Adept : ContentProtection.Scheme Adobe ADEPT DRM scheme.","title":"Adept"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-scheme/-companion/-lcp/","text":"// shared / org.readium.r2.shared.publication / ContentProtection / Scheme / Companion / Lcp Lcp \u00b6 [androidJvm]\\ val Lcp : ContentProtection.Scheme Readium LCP DRM scheme.","title":" lcp"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-content-protection/-scheme/-companion/-lcp/#lcp","text":"[androidJvm]\\ val Lcp : ContentProtection.Scheme Readium LCP DRM scheme.","title":"Lcp"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/","text":"// shared / org.readium.r2.shared.publication / Contributor Contributor \u00b6 [androidJvm]\\ data class Contributor (localizedName: LocalizedString , localizedSortAs: LocalizedString ?, identifier: String ?, roles: Set < String >, position: Double ?, links: List < Link >) : JSONable , Parcelable Contributor Object for the Readium Web Publication Manifest. https://readium.org/webpub-manifest/schema/contributor-object.schema.json Parameters \u00b6 androidJvm localizedName The name of the contributor. identifier An unambiguous reference to this contributor. sortAs The string used to sort the name of the contributor. roles The roles of the contributor in the publication making. position The position of the publication in this collection/series, when the contributor represents a collection. links Used to retrieve similar publications for the given contributor. Constructors \u00b6 Contributor [androidJvm] fun Contributor (name: String ) Shortcut to create a Contributor using a string as name . Contributor [androidJvm] fun Contributor (localizedName: LocalizedString , localizedSortAs: LocalizedString ? = null, identifier: String ? = null, roles: Set < String > = emptySet(), position: Double ? = null, links: List < Link > = emptyList()) Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes a Subject to its RWPM JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary identifier [androidJvm] val identifier : String ? = null links [androidJvm] val links : List < Link > localizedName [androidJvm] val localizedName : LocalizedString localizedSortAs [androidJvm] val localizedSortAs : LocalizedString ? = null name [androidJvm] val name : String Returns the default translation string for the localizedName . position [androidJvm] val position : Double ? = null roles [androidJvm] val roles : Set < String > sortAs [androidJvm] val sortAs : String ? Returns the default translation string for the localizedSortAs .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/#contributor","text":"[androidJvm]\\ data class Contributor (localizedName: LocalizedString , localizedSortAs: LocalizedString ?, identifier: String ?, roles: Set < String >, position: Double ?, links: List < Link >) : JSONable , Parcelable Contributor Object for the Readium Web Publication Manifest. https://readium.org/webpub-manifest/schema/contributor-object.schema.json","title":"Contributor"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/#parameters","text":"androidJvm localizedName The name of the contributor. identifier An unambiguous reference to this contributor. sortAs The string used to sort the name of the contributor. roles The roles of the contributor in the publication making. position The position of the publication in this collection/series, when the contributor represents a collection. links Used to retrieve similar publications for the given contributor.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/#constructors","text":"Contributor [androidJvm] fun Contributor (name: String ) Shortcut to create a Contributor using a string as name . Contributor [androidJvm] fun Contributor (localizedName: LocalizedString , localizedSortAs: LocalizedString ? = null, identifier: String ? = null, roles: Set < String > = emptySet(), position: Double ? = null, links: List < Link > = emptyList())","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes a Subject to its RWPM JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/#properties","text":"Name Summary identifier [androidJvm] val identifier : String ? = null links [androidJvm] val links : List < Link > localizedName [androidJvm] val localizedName : LocalizedString localizedSortAs [androidJvm] val localizedSortAs : LocalizedString ? = null name [androidJvm] val name : String Returns the default translation string for the localizedName . position [androidJvm] val position : Double ? = null roles [androidJvm] val roles : Set < String > sortAs [androidJvm] val sortAs : String ? Returns the default translation string for the localizedSortAs .","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/-contributor/","text":"// shared / org.readium.r2.shared.publication / Contributor / Contributor Contributor \u00b6 [androidJvm]\\ fun Contributor (name: String ) Shortcut to create a Contributor using a string as name . [androidJvm]\\ fun Contributor (localizedName: LocalizedString , localizedSortAs: LocalizedString ? = null, identifier: String ? = null, roles: Set < String > = emptySet(), position: Double ? = null, links: List < Link > = emptyList()) Parameters \u00b6 androidJvm localizedName The name of the contributor. identifier An unambiguous reference to this contributor. sortAs The string used to sort the name of the contributor. roles The roles of the contributor in the publication making. position The position of the publication in this collection/series, when the contributor represents a collection. links Used to retrieve similar publications for the given contributor.","title":" contributor"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/-contributor/#contributor","text":"[androidJvm]\\ fun Contributor (name: String ) Shortcut to create a Contributor using a string as name . [androidJvm]\\ fun Contributor (localizedName: LocalizedString , localizedSortAs: LocalizedString ? = null, identifier: String ? = null, roles: Set < String > = emptySet(), position: Double ? = null, links: List < Link > = emptyList())","title":"Contributor"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/-contributor/#parameters","text":"androidJvm localizedName The name of the contributor. identifier An unambiguous reference to this contributor. sortAs The string used to sort the name of the contributor. roles The roles of the contributor in the publication making. position The position of the publication in this collection/series, when the contributor represents a collection. links Used to retrieve similar publications for the given contributor.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/identifier/","text":"// shared / org.readium.r2.shared.publication / Contributor / identifier identifier \u00b6 [androidJvm]\\ val identifier : String ? = null","title":"Identifier"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/identifier/#identifier","text":"[androidJvm]\\ val identifier : String ? = null","title":"identifier"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/links/","text":"// shared / org.readium.r2.shared.publication / Contributor / links links \u00b6 [androidJvm]\\ val links : List < Link >","title":"Links"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/links/#links","text":"[androidJvm]\\ val links : List < Link >","title":"links"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/localized-name/","text":"// shared / org.readium.r2.shared.publication / Contributor / localizedName localizedName \u00b6 [androidJvm]\\ val localizedName : LocalizedString","title":"Localized name"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/localized-name/#localizedname","text":"[androidJvm]\\ val localizedName : LocalizedString","title":"localizedName"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/localized-sort-as/","text":"// shared / org.readium.r2.shared.publication / Contributor / localizedSortAs localizedSortAs \u00b6 [androidJvm]\\ val localizedSortAs : LocalizedString ? = null","title":"Localized sort as"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/localized-sort-as/#localizedsortas","text":"[androidJvm]\\ val localizedSortAs : LocalizedString ? = null","title":"localizedSortAs"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/name/","text":"// shared / org.readium.r2.shared.publication / Contributor / name name \u00b6 [androidJvm]\\ val name : String Returns the default translation string for the localizedName .","title":"Name"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/name/#name","text":"[androidJvm]\\ val name : String Returns the default translation string for the localizedName .","title":"name"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/position/","text":"// shared / org.readium.r2.shared.publication / Contributor / position position \u00b6 [androidJvm]\\ val position : Double ? = null","title":"Position"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/position/#position","text":"[androidJvm]\\ val position : Double ? = null","title":"position"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/roles/","text":"// shared / org.readium.r2.shared.publication / Contributor / roles roles \u00b6 [androidJvm]\\ val roles : Set < String >","title":"Roles"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/roles/#roles","text":"[androidJvm]\\ val roles : Set < String >","title":"roles"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/sort-as/","text":"// shared / org.readium.r2.shared.publication / Contributor / sortAs sortAs \u00b6 [androidJvm]\\ val sortAs : String ? Returns the default translation string for the localizedSortAs .","title":"Sort as"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/sort-as/#sortas","text":"[androidJvm]\\ val sortAs : String ? Returns the default translation string for the localizedSortAs .","title":"sortAs"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/to-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / Contributor / toJSON toJSON \u00b6 [androidJvm]\\ open override fun toJSON (): JSONObject Serializes a Subject to its RWPM JSON representation.","title":"To j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/to-j-s-o-n/#tojson","text":"[androidJvm]\\ open override fun toJSON (): JSONObject Serializes a Subject to its RWPM JSON representation.","title":"toJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/-companion/","text":"// shared / org.readium.r2.shared.publication / Contributor / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary fromJSON [androidJvm] fun fromJSON (json: Any ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): Contributor ? Parses a Contributor from its RWPM JSON representation. fromJSONArray [androidJvm] fun fromJSONArray (json: Any ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): List < Contributor > Creates a list of Contributor from its RWPM JSON representation.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/-companion/#functions","text":"Name Summary fromJSON [androidJvm] fun fromJSON (json: Any ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): Contributor ? Parses a Contributor from its RWPM JSON representation. fromJSONArray [androidJvm] fun fromJSONArray (json: Any ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): List < Contributor > Creates a list of Contributor from its RWPM JSON representation.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/-companion/from-j-s-o-n-array/","text":"// shared / org.readium.r2.shared.publication / Contributor / Companion / fromJSONArray fromJSONArray \u00b6 [androidJvm]\\ fun fromJSONArray (json: Any ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): List < Contributor > Creates a list of Contributor from its RWPM JSON representation. The links ' href and their children's will be normalized recursively using the provided normalizeHref closure. If a contributor can't be parsed, a warning will be logged with warnings .","title":"From j s o n array"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/-companion/from-j-s-o-n-array/#fromjsonarray","text":"[androidJvm]\\ fun fromJSONArray (json: Any ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): List < Contributor > Creates a list of Contributor from its RWPM JSON representation. The links ' href and their children's will be normalized recursively using the provided normalizeHref closure. If a contributor can't be parsed, a warning will be logged with warnings .","title":"fromJSONArray"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/-companion/from-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / Contributor / Companion / fromJSON fromJSON \u00b6 [androidJvm]\\ fun fromJSON (json: Any ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): Contributor ? Parses a Contributor from its RWPM JSON representation. A contributor can be parsed from a single string, or a full-fledged object. The links ' href and their children's will be normalized recursively using the provided normalizeHref closure. If the contributor can't be parsed, a warning will be logged with warnings .","title":"From j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-contributor/-companion/from-j-s-o-n/#fromjson","text":"[androidJvm]\\ fun fromJSON (json: Any ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): Contributor ? Parses a Contributor from its RWPM JSON representation. A contributor can be parsed from a single string, or a full-fledged object. The links ' href and their children's will be normalized recursively using the provided normalizeHref closure. If the contributor can't be parsed, a warning will be logged with warnings .","title":"fromJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/","text":"// shared / org.readium.r2.shared.publication / Link Link \u00b6 [androidJvm]\\ data class Link (href: String , type: String ?, templated: Boolean , title: String ?, rels: Set < String >, properties: Properties , height: Int ?, width: Int ?, bitrate: Double ?, duration: Double ?, languages: List < String >, alternates: List < Link >, children: List < Link >) : JSONable , Parcelable Link Object for the Readium Web Publication Manifest. https://readium.org/webpub-manifest/schema/link.schema.json Parameters \u00b6 androidJvm href URI or URI template of the linked resource. type MIME type of the linked resource. templated Indicates that a URI template is used in href. title Title of the linked resource. rels Relation between the linked resource and its containing collection. properties Properties associated to the linked resource. height Height of the linked resource in pixels. width Width of the linked resource in pixels. bitrate Bitrate of the linked resource in kbps. duration Length of the linked resource in seconds. languages Expected language of the linked resource (BCP 47 tag). alternates Alternate resources for the linked resource. children Resources that are children of the linked resource, in the context of a given collection role. Constructors \u00b6 Link [androidJvm] fun Link (href: String , type: String ? = null, templated: Boolean = false, title: String ? = null, rels: Set < String > = setOf(), properties: Properties = Properties(), height: Int ? = null, width: Int ? = null, bitrate: Double ? = null, duration: Double ? = null, languages: List < String > = listOf(), alternates: List < Link > = listOf(), children: List < Link > = listOf()) Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary addProperties [androidJvm] fun addProperties (properties: Map < String , Any >): Link Makes a copy of this Link after merging in the given additional other properties . describeContents [androidJvm] abstract fun describeContents (): Int expandTemplate [androidJvm] fun expandTemplate (parameters: Map < String , String >): Link Expands the HREF by replacing URI template variables by the given parameters. toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes a Link to its RWPM JSON representation. toUrl [androidJvm] fun toUrl (baseUrl: String ?): String ? Computes an absolute URL to the link, relative to the given baseUrl . writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary alternates [androidJvm] val alternates : List < Link > bitrate [androidJvm] val bitrate : Double ? = null children [androidJvm] val children : List < Link > duration [androidJvm] val duration : Double ? = null height [androidJvm] val height : Int ? = null href [androidJvm] val href : String languages [androidJvm] val languages : List < String > mediaType [androidJvm] val mediaType : MediaType Media type of the linked resource. properties [androidJvm] val properties : Properties rels [androidJvm] val rels : Set < String > templated [androidJvm] val templated : Boolean = false templateParameters [androidJvm] val templateParameters : List < String > List of URI template parameter keys, if the Link is templated. title [androidJvm] val title : String ? = null type [androidJvm] val type : String ? = null width [androidJvm] val width : Int ? = null Extensions \u00b6 Name Summary toLocator [androidJvm] fun Link . toLocator (): Locator Creates a Locator from a reading order Link .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/#link","text":"[androidJvm]\\ data class Link (href: String , type: String ?, templated: Boolean , title: String ?, rels: Set < String >, properties: Properties , height: Int ?, width: Int ?, bitrate: Double ?, duration: Double ?, languages: List < String >, alternates: List < Link >, children: List < Link >) : JSONable , Parcelable Link Object for the Readium Web Publication Manifest. https://readium.org/webpub-manifest/schema/link.schema.json","title":"Link"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/#parameters","text":"androidJvm href URI or URI template of the linked resource. type MIME type of the linked resource. templated Indicates that a URI template is used in href. title Title of the linked resource. rels Relation between the linked resource and its containing collection. properties Properties associated to the linked resource. height Height of the linked resource in pixels. width Width of the linked resource in pixels. bitrate Bitrate of the linked resource in kbps. duration Length of the linked resource in seconds. languages Expected language of the linked resource (BCP 47 tag). alternates Alternate resources for the linked resource. children Resources that are children of the linked resource, in the context of a given collection role.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/#constructors","text":"Link [androidJvm] fun Link (href: String , type: String ? = null, templated: Boolean = false, title: String ? = null, rels: Set < String > = setOf(), properties: Properties = Properties(), height: Int ? = null, width: Int ? = null, bitrate: Double ? = null, duration: Double ? = null, languages: List < String > = listOf(), alternates: List < Link > = listOf(), children: List < Link > = listOf())","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/#functions","text":"Name Summary addProperties [androidJvm] fun addProperties (properties: Map < String , Any >): Link Makes a copy of this Link after merging in the given additional other properties . describeContents [androidJvm] abstract fun describeContents (): Int expandTemplate [androidJvm] fun expandTemplate (parameters: Map < String , String >): Link Expands the HREF by replacing URI template variables by the given parameters. toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes a Link to its RWPM JSON representation. toUrl [androidJvm] fun toUrl (baseUrl: String ?): String ? Computes an absolute URL to the link, relative to the given baseUrl . writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/#properties","text":"Name Summary alternates [androidJvm] val alternates : List < Link > bitrate [androidJvm] val bitrate : Double ? = null children [androidJvm] val children : List < Link > duration [androidJvm] val duration : Double ? = null height [androidJvm] val height : Int ? = null href [androidJvm] val href : String languages [androidJvm] val languages : List < String > mediaType [androidJvm] val mediaType : MediaType Media type of the linked resource. properties [androidJvm] val properties : Properties rels [androidJvm] val rels : Set < String > templated [androidJvm] val templated : Boolean = false templateParameters [androidJvm] val templateParameters : List < String > List of URI template parameter keys, if the Link is templated. title [androidJvm] val title : String ? = null type [androidJvm] val type : String ? = null width [androidJvm] val width : Int ? = null","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/#extensions","text":"Name Summary toLocator [androidJvm] fun Link . toLocator (): Locator Creates a Locator from a reading order Link .","title":"Extensions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/-link/","text":"// shared / org.readium.r2.shared.publication / Link / Link Link \u00b6 [androidJvm]\\ fun Link (href: String , type: String ? = null, templated: Boolean = false, title: String ? = null, rels: Set < String > = setOf(), properties: Properties = Properties(), height: Int ? = null, width: Int ? = null, bitrate: Double ? = null, duration: Double ? = null, languages: List < String > = listOf(), alternates: List < Link > = listOf(), children: List < Link > = listOf()) Parameters \u00b6 androidJvm href URI or URI template of the linked resource. type MIME type of the linked resource. templated Indicates that a URI template is used in href. title Title of the linked resource. rels Relation between the linked resource and its containing collection. properties Properties associated to the linked resource. height Height of the linked resource in pixels. width Width of the linked resource in pixels. bitrate Bitrate of the linked resource in kbps. duration Length of the linked resource in seconds. languages Expected language of the linked resource (BCP 47 tag). alternates Alternate resources for the linked resource. children Resources that are children of the linked resource, in the context of a given collection role.","title":" link"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/-link/#link","text":"[androidJvm]\\ fun Link (href: String , type: String ? = null, templated: Boolean = false, title: String ? = null, rels: Set < String > = setOf(), properties: Properties = Properties(), height: Int ? = null, width: Int ? = null, bitrate: Double ? = null, duration: Double ? = null, languages: List < String > = listOf(), alternates: List < Link > = listOf(), children: List < Link > = listOf())","title":"Link"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/-link/#parameters","text":"androidJvm href URI or URI template of the linked resource. type MIME type of the linked resource. templated Indicates that a URI template is used in href. title Title of the linked resource. rels Relation between the linked resource and its containing collection. properties Properties associated to the linked resource. height Height of the linked resource in pixels. width Width of the linked resource in pixels. bitrate Bitrate of the linked resource in kbps. duration Length of the linked resource in seconds. languages Expected language of the linked resource (BCP 47 tag). alternates Alternate resources for the linked resource. children Resources that are children of the linked resource, in the context of a given collection role.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/add-properties/","text":"// shared / org.readium.r2.shared.publication / Link / addProperties addProperties \u00b6 [androidJvm]\\ fun addProperties (properties: Map < String , Any >): Link Makes a copy of this Link after merging in the given additional other properties .","title":"Add properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/add-properties/#addproperties","text":"[androidJvm]\\ fun addProperties (properties: Map < String , Any >): Link Makes a copy of this Link after merging in the given additional other properties .","title":"addProperties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/alternates/","text":"// shared / org.readium.r2.shared.publication / Link / alternates alternates \u00b6 [androidJvm]\\ val alternates : List < Link >","title":"Alternates"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/alternates/#alternates","text":"[androidJvm]\\ val alternates : List < Link >","title":"alternates"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/bitrate/","text":"// shared / org.readium.r2.shared.publication / Link / bitrate bitrate \u00b6 [androidJvm]\\ val bitrate : Double ? = null","title":"Bitrate"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/bitrate/#bitrate","text":"[androidJvm]\\ val bitrate : Double ? = null","title":"bitrate"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/children/","text":"// shared / org.readium.r2.shared.publication / Link / children children \u00b6 [androidJvm]\\ val children : List < Link >","title":"Children"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/children/#children","text":"[androidJvm]\\ val children : List < Link >","title":"children"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/duration/","text":"// shared / org.readium.r2.shared.publication / Link / duration duration \u00b6 [androidJvm]\\ val duration : Double ? = null","title":"Duration"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/duration/#duration","text":"[androidJvm]\\ val duration : Double ? = null","title":"duration"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/expand-template/","text":"// shared / org.readium.r2.shared.publication / Link / expandTemplate expandTemplate \u00b6 [androidJvm]\\ fun expandTemplate (parameters: Map < String , String >): Link Expands the HREF by replacing URI template variables by the given parameters. See RFC 6570 on URI template.","title":"Expand template"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/expand-template/#expandtemplate","text":"[androidJvm]\\ fun expandTemplate (parameters: Map < String , String >): Link Expands the HREF by replacing URI template variables by the given parameters. See RFC 6570 on URI template.","title":"expandTemplate"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/height/","text":"// shared / org.readium.r2.shared.publication / Link / height height \u00b6 [androidJvm]\\ val height : Int ? = null","title":"Height"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/height/#height","text":"[androidJvm]\\ val height : Int ? = null","title":"height"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/href/","text":"// shared / org.readium.r2.shared.publication / Link / href href \u00b6 [androidJvm]\\ val href : String","title":"Href"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/href/#href","text":"[androidJvm]\\ val href : String","title":"href"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/languages/","text":"// shared / org.readium.r2.shared.publication / Link / languages languages \u00b6 [androidJvm]\\ val languages : List < String >","title":"Languages"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/languages/#languages","text":"[androidJvm]\\ val languages : List < String >","title":"languages"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/media-type/","text":"// shared / org.readium.r2.shared.publication / Link / mediaType mediaType \u00b6 [androidJvm]\\ val mediaType : MediaType Media type of the linked resource.","title":"Media type"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/media-type/#mediatype","text":"[androidJvm]\\ val mediaType : MediaType Media type of the linked resource.","title":"mediaType"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/properties/","text":"// shared / org.readium.r2.shared.publication / Link / properties properties \u00b6 [androidJvm]\\ val properties : Properties","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/properties/#properties","text":"[androidJvm]\\ val properties : Properties","title":"properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/rels/","text":"// shared / org.readium.r2.shared.publication / Link / rels rels \u00b6 [androidJvm]\\ val rels : Set < String >","title":"Rels"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/rels/#rels","text":"[androidJvm]\\ val rels : Set < String >","title":"rels"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/template-parameters/","text":"// shared / org.readium.r2.shared.publication / Link / templateParameters templateParameters \u00b6 [androidJvm]\\ val templateParameters : List < String > List of URI template parameter keys, if the Link is templated.","title":"Template parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/template-parameters/#templateparameters","text":"[androidJvm]\\ val templateParameters : List < String > List of URI template parameter keys, if the Link is templated.","title":"templateParameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/templated/","text":"// shared / org.readium.r2.shared.publication / Link / templated templated \u00b6 [androidJvm]\\ val templated : Boolean = false","title":"Templated"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/templated/#templated","text":"[androidJvm]\\ val templated : Boolean = false","title":"templated"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/title/","text":"// shared / org.readium.r2.shared.publication / Link / title title \u00b6 [androidJvm]\\ val title : String ? = null","title":"Title"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/title/#title","text":"[androidJvm]\\ val title : String ? = null","title":"title"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/to-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / Link / toJSON toJSON \u00b6 [androidJvm]\\ open override fun toJSON (): JSONObject Serializes a Link to its RWPM JSON representation.","title":"To j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/to-j-s-o-n/#tojson","text":"[androidJvm]\\ open override fun toJSON (): JSONObject Serializes a Link to its RWPM JSON representation.","title":"toJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/to-url/","text":"// shared / org.readium.r2.shared.publication / Link / toUrl toUrl \u00b6 [androidJvm]\\ fun toUrl (baseUrl: String ?): String ? Computes an absolute URL to the link, relative to the given baseUrl . If the link's href is already absolute, the baseUrl is ignored.","title":"To url"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/to-url/#tourl","text":"[androidJvm]\\ fun toUrl (baseUrl: String ?): String ? Computes an absolute URL to the link, relative to the given baseUrl . If the link's href is already absolute, the baseUrl is ignored.","title":"toUrl"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/type/","text":"// shared / org.readium.r2.shared.publication / Link / type type \u00b6 [androidJvm]\\ val type : String ? = null","title":"Type"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/type/#type","text":"[androidJvm]\\ val type : String ? = null","title":"type"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/width/","text":"// shared / org.readium.r2.shared.publication / Link / width width \u00b6 [androidJvm]\\ val width : Int ? = null","title":"Width"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/width/#width","text":"[androidJvm]\\ val width : Int ? = null","title":"width"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/-companion/","text":"// shared / org.readium.r2.shared.publication / Link / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): Link ? Creates an Link from its RWPM JSON representation. It's href and its children's recursively will be normalized using the provided normalizeHref closure. If the link can't be parsed, a warning will be logged with warnings . fromJSONArray [androidJvm] fun fromJSONArray (json: JSONArray ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): List < Link > Creates a list of Link from its RWPM JSON representation. It's href and its children's recursively will be normalized using the provided normalizeHref closure. If a link can't be parsed, a warning will be logged with warnings .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/-companion/#functions","text":"Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): Link ? Creates an Link from its RWPM JSON representation. It's href and its children's recursively will be normalized using the provided normalizeHref closure. If the link can't be parsed, a warning will be logged with warnings . fromJSONArray [androidJvm] fun fromJSONArray (json: JSONArray ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): List < Link > Creates a list of Link from its RWPM JSON representation. It's href and its children's recursively will be normalized using the provided normalizeHref closure. If a link can't be parsed, a warning will be logged with warnings .","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/-companion/from-j-s-o-n-array/","text":"// shared / org.readium.r2.shared.publication / Link / Companion / fromJSONArray fromJSONArray \u00b6 [androidJvm]\\ fun fromJSONArray (json: JSONArray ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): List < Link > Creates a list of Link from its RWPM JSON representation. It's href and its children's recursively will be normalized using the provided normalizeHref closure. If a link can't be parsed, a warning will be logged with warnings .","title":"From j s o n array"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/-companion/from-j-s-o-n-array/#fromjsonarray","text":"[androidJvm]\\ fun fromJSONArray (json: JSONArray ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): List < Link > Creates a list of Link from its RWPM JSON representation. It's href and its children's recursively will be normalized using the provided normalizeHref closure. If a link can't be parsed, a warning will be logged with warnings .","title":"fromJSONArray"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/-companion/from-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / Link / Companion / fromJSON fromJSON \u00b6 [androidJvm]\\ fun fromJSON (json: JSONObject ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): Link ? Creates an Link from its RWPM JSON representation. It's href and its children's recursively will be normalized using the provided normalizeHref closure. If the link can't be parsed, a warning will be logged with warnings .","title":"From j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-link/-companion/from-j-s-o-n/#fromjson","text":"[androidJvm]\\ fun fromJSON (json: JSONObject ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): Link ? Creates an Link from its RWPM JSON representation. It's href and its children's recursively will be normalized using the provided normalizeHref closure. If the link can't be parsed, a warning will be logged with warnings .","title":"fromJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/","text":"// shared / org.readium.r2.shared.publication / LocalizedString LocalizedString \u00b6 [androidJvm]\\ data class LocalizedString (translations: Map < String ?, LocalizedString.Translation >) : JSONable , Parcelable Represents a string with multiple translations indexed by a BCP 47 language tag. Constructors \u00b6 LocalizedString [androidJvm] fun LocalizedString (value: String , lang: String ? = null) Shortcut to create a LocalizedString using a single string for a given language. LocalizedString [androidJvm] fun LocalizedString (translations: Map < String ?, LocalizedString.Translation > = emptyMap()) Types \u00b6 Name Summary Companion [androidJvm] object Companion Translation [androidJvm] data class Translation (string: String ) : Parcelable Functions \u00b6 Name Summary copyWithString [androidJvm] fun copyWithString (language: String ?, string: String ): LocalizedString Returns a new LocalizedString after adding (or replacing) the translation with the given language . describeContents [androidJvm] abstract fun describeContents (): Int getOrFallback [androidJvm] fun getOrFallback (language: String ?): LocalizedString.Translation ? Returns the first translation for the given language BCP\u201347 tag. If not found, then fallback: 1. on the default Locale 2. on the undefined language 3. on the English language 4. the first translation found mapLanguages [androidJvm] fun mapLanguages (transform: ( Map.Entry < String ?, LocalizedString.Translation >) -> String ?): LocalizedString Returns a new LocalizedString after applying the transform function to each language. mapTranslations [androidJvm] fun mapTranslations (transform: ( Map.Entry < String ?, LocalizedString.Translation >) -> LocalizedString.Translation ): LocalizedString Returns a new LocalizedString after applying the transform function to each translation. toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes a LocalizedString to its RWPM JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary defaultTranslation [androidJvm] val defaultTranslation : LocalizedString.Translation The default translation for this localized string. string [androidJvm] val string : String The default translation string for this localized string. This is a shortcut for apps. translations [androidJvm] val translations : Map < String ?, LocalizedString.Translation >","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/#localizedstring","text":"[androidJvm]\\ data class LocalizedString (translations: Map < String ?, LocalizedString.Translation >) : JSONable , Parcelable Represents a string with multiple translations indexed by a BCP 47 language tag.","title":"LocalizedString"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/#constructors","text":"LocalizedString [androidJvm] fun LocalizedString (value: String , lang: String ? = null) Shortcut to create a LocalizedString using a single string for a given language. LocalizedString [androidJvm] fun LocalizedString (translations: Map < String ?, LocalizedString.Translation > = emptyMap())","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/#types","text":"Name Summary Companion [androidJvm] object Companion Translation [androidJvm] data class Translation (string: String ) : Parcelable","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/#functions","text":"Name Summary copyWithString [androidJvm] fun copyWithString (language: String ?, string: String ): LocalizedString Returns a new LocalizedString after adding (or replacing) the translation with the given language . describeContents [androidJvm] abstract fun describeContents (): Int getOrFallback [androidJvm] fun getOrFallback (language: String ?): LocalizedString.Translation ? Returns the first translation for the given language BCP\u201347 tag. If not found, then fallback: 1. on the default Locale 2. on the undefined language 3. on the English language 4. the first translation found mapLanguages [androidJvm] fun mapLanguages (transform: ( Map.Entry < String ?, LocalizedString.Translation >) -> String ?): LocalizedString Returns a new LocalizedString after applying the transform function to each language. mapTranslations [androidJvm] fun mapTranslations (transform: ( Map.Entry < String ?, LocalizedString.Translation >) -> LocalizedString.Translation ): LocalizedString Returns a new LocalizedString after applying the transform function to each translation. toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes a LocalizedString to its RWPM JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/#properties","text":"Name Summary defaultTranslation [androidJvm] val defaultTranslation : LocalizedString.Translation The default translation for this localized string. string [androidJvm] val string : String The default translation string for this localized string. This is a shortcut for apps. translations [androidJvm] val translations : Map < String ?, LocalizedString.Translation >","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/-localized-string/","text":"// shared / org.readium.r2.shared.publication / LocalizedString / LocalizedString LocalizedString \u00b6 [androidJvm]\\ fun LocalizedString (value: String , lang: String ? = null) Shortcut to create a LocalizedString using a single string for a given language. [androidJvm]\\ fun LocalizedString (translations: Map < String ?, LocalizedString.Translation > = emptyMap())","title":" localized string"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/-localized-string/#localizedstring","text":"[androidJvm]\\ fun LocalizedString (value: String , lang: String ? = null) Shortcut to create a LocalizedString using a single string for a given language. [androidJvm]\\ fun LocalizedString (translations: Map < String ?, LocalizedString.Translation > = emptyMap())","title":"LocalizedString"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/copy-with-string/","text":"// shared / org.readium.r2.shared.publication / LocalizedString / copyWithString copyWithString \u00b6 [androidJvm]\\ fun copyWithString (language: String ?, string: String ): LocalizedString Returns a new LocalizedString after adding (or replacing) the translation with the given language .","title":"Copy with string"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/copy-with-string/#copywithstring","text":"[androidJvm]\\ fun copyWithString (language: String ?, string: String ): LocalizedString Returns a new LocalizedString after adding (or replacing) the translation with the given language .","title":"copyWithString"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/default-translation/","text":"// shared / org.readium.r2.shared.publication / LocalizedString / defaultTranslation defaultTranslation \u00b6 [androidJvm]\\ val defaultTranslation : LocalizedString.Translation The default translation for this localized string.","title":"Default translation"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/default-translation/#defaulttranslation","text":"[androidJvm]\\ val defaultTranslation : LocalizedString.Translation The default translation for this localized string.","title":"defaultTranslation"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/get-or-fallback/","text":"// shared / org.readium.r2.shared.publication / LocalizedString / getOrFallback getOrFallback \u00b6 [androidJvm]\\ fun getOrFallback (language: String ?): LocalizedString.Translation ? Returns the first translation for the given language BCP\u201347 tag. If not found, then fallback: 1. on the default Locale 2. on the undefined language 3. on the English language 4. the first translation found","title":"Get or fallback"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/get-or-fallback/#getorfallback","text":"[androidJvm]\\ fun getOrFallback (language: String ?): LocalizedString.Translation ? Returns the first translation for the given language BCP\u201347 tag. If not found, then fallback: 1. on the default Locale 2. on the undefined language 3. on the English language 4. the first translation found","title":"getOrFallback"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/map-languages/","text":"// shared / org.readium.r2.shared.publication / LocalizedString / mapLanguages mapLanguages \u00b6 [androidJvm]\\ fun mapLanguages (transform: ( Map.Entry < String ?, LocalizedString.Translation >) -> String ?): LocalizedString Returns a new LocalizedString after applying the transform function to each language.","title":"Map languages"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/map-languages/#maplanguages","text":"[androidJvm]\\ fun mapLanguages (transform: ( Map.Entry < String ?, LocalizedString.Translation >) -> String ?): LocalizedString Returns a new LocalizedString after applying the transform function to each language.","title":"mapLanguages"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/map-translations/","text":"// shared / org.readium.r2.shared.publication / LocalizedString / mapTranslations mapTranslations \u00b6 [androidJvm]\\ fun mapTranslations (transform: ( Map.Entry < String ?, LocalizedString.Translation >) -> LocalizedString.Translation ): LocalizedString Returns a new LocalizedString after applying the transform function to each translation.","title":"Map translations"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/map-translations/#maptranslations","text":"[androidJvm]\\ fun mapTranslations (transform: ( Map.Entry < String ?, LocalizedString.Translation >) -> LocalizedString.Translation ): LocalizedString Returns a new LocalizedString after applying the transform function to each translation.","title":"mapTranslations"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/string/","text":"// shared / org.readium.r2.shared.publication / LocalizedString / string string \u00b6 [androidJvm]\\ val string : String The default translation string for this localized string. This is a shortcut for apps.","title":"String"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/string/#string","text":"[androidJvm]\\ val string : String The default translation string for this localized string. This is a shortcut for apps.","title":"string"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/to-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / LocalizedString / toJSON toJSON \u00b6 [androidJvm]\\ open override fun toJSON (): JSONObject Serializes a LocalizedString to its RWPM JSON representation.","title":"To j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/to-j-s-o-n/#tojson","text":"[androidJvm]\\ open override fun toJSON (): JSONObject Serializes a LocalizedString to its RWPM JSON representation.","title":"toJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/translations/","text":"// shared / org.readium.r2.shared.publication / LocalizedString / translations translations \u00b6 [androidJvm]\\ val translations : Map < String ?, LocalizedString.Translation >","title":"Translations"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/translations/#translations","text":"[androidJvm]\\ val translations : Map < String ?, LocalizedString.Translation >","title":"translations"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/-companion/","text":"// shared / org.readium.r2.shared.publication / LocalizedString / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary fromJSON [androidJvm] fun fromJSON (json: Any ?, warnings: WarningLogger ? = null): LocalizedString ? Parses a LocalizedString from its RWPM JSON representation. If the localized string can't be parsed, a warning will be logged with warnings . fromStrings [androidJvm] fun fromStrings (strings: Map < String ?, String >): LocalizedString Shortcut to create a LocalizedString using a map of translations indexed by the BCP 47 language tag. Properties \u00b6 Name Summary UNDEFINED_LANGUAGE [androidJvm] const val UNDEFINED_LANGUAGE : String BCP-47 tag for an undefined language.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/-companion/#functions","text":"Name Summary fromJSON [androidJvm] fun fromJSON (json: Any ?, warnings: WarningLogger ? = null): LocalizedString ? Parses a LocalizedString from its RWPM JSON representation. If the localized string can't be parsed, a warning will be logged with warnings . fromStrings [androidJvm] fun fromStrings (strings: Map < String ?, String >): LocalizedString Shortcut to create a LocalizedString using a map of translations indexed by the BCP 47 language tag.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/-companion/#properties","text":"Name Summary UNDEFINED_LANGUAGE [androidJvm] const val UNDEFINED_LANGUAGE : String BCP-47 tag for an undefined language.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/-companion/-u-n-d-e-f-i-n-e-d_-l-a-n-g-u-a-g-e/","text":"// shared / org.readium.r2.shared.publication / LocalizedString / Companion / UNDEFINED_LANGUAGE UNDEFINED_LANGUAGE \u00b6 [androidJvm]\\ const val UNDEFINED_LANGUAGE : String BCP-47 tag for an undefined language.","title":" u n d e f i n e d  l a n g u a g e"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/-companion/-u-n-d-e-f-i-n-e-d_-l-a-n-g-u-a-g-e/#undefined_language","text":"[androidJvm]\\ const val UNDEFINED_LANGUAGE : String BCP-47 tag for an undefined language.","title":"UNDEFINED_LANGUAGE"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/-companion/from-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / LocalizedString / Companion / fromJSON fromJSON \u00b6 [androidJvm]\\ fun fromJSON (json: Any ?, warnings: WarningLogger ? = null): LocalizedString ? Parses a LocalizedString from its RWPM JSON representation. If the localized string can't be parsed, a warning will be logged with warnings . \"anyOf\": [ { \"type\": \"string\" }, { \"description\": \"The language in a language map must be a valid BCP 47 tag.\", \"type\": \"object\", \"patternProperties\": { \"^((? (en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))|((? (A-Za-z{2,3}(-(? A-Za-z{3}(-A-Za-z{3}){0,2}))?)|A-Za-z{4}|A-Za-z{5,8})(-(?","title":"From j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/-companion/from-j-s-o-n/#fromjson","text":"[androidJvm]\\ fun fromJSON (json: Any ?, warnings: WarningLogger ? = null): LocalizedString ? Parses a LocalizedString from its RWPM JSON representation. If the localized string can't be parsed, a warning will be logged with warnings . \"anyOf\": [ { \"type\": \"string\" }, { \"description\": \"The language in a language map must be a valid BCP 47 tag.\", \"type\": \"object\", \"patternProperties\": { \"^((? (en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))|((? (A-Za-z{2,3}(-(? A-Za-z{3}(-A-Za-z{3}){0,2}))?)|A-Za-z{4}|A-Za-z{5,8})(-(?","title":"fromJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/-companion/from-strings/","text":"// shared / org.readium.r2.shared.publication / LocalizedString / Companion / fromStrings fromStrings \u00b6 [androidJvm]\\ fun fromStrings (strings: Map < String ?, String >): LocalizedString Shortcut to create a LocalizedString using a map of translations indexed by the BCP 47 language tag.","title":"From strings"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/-companion/from-strings/#fromstrings","text":"[androidJvm]\\ fun fromStrings (strings: Map < String ?, String >): LocalizedString Shortcut to create a LocalizedString using a map of translations indexed by the BCP 47 language tag.","title":"fromStrings"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/-translation/","text":"// shared / org.readium.r2.shared.publication / LocalizedString / Translation Translation \u00b6 [androidJvm]\\ data class Translation (string: String ) : Parcelable Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary string [androidJvm] val string : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/-translation/#translation","text":"[androidJvm]\\ data class Translation (string: String ) : Parcelable","title":"Translation"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/-translation/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/-translation/#properties","text":"Name Summary string [androidJvm] val string : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/-translation/-translation/","text":"// shared / org.readium.r2.shared.publication / LocalizedString / Translation / Translation Translation \u00b6 [androidJvm]\\ fun Translation (string: String )","title":" translation"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/-translation/-translation/#translation","text":"[androidJvm]\\ fun Translation (string: String )","title":"Translation"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/-translation/string/","text":"// shared / org.readium.r2.shared.publication / LocalizedString / Translation / string string \u00b6 [androidJvm]\\ val string : String","title":"String"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-localized-string/-translation/string/#string","text":"[androidJvm]\\ val string : String","title":"string"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/","text":"// shared / org.readium.r2.shared.publication / Locator Locator \u00b6 [androidJvm]\\ data class Locator (href: String , type: String , title: String ?, locations: Locator.Locations , text: Locator.Text ) : JSONable , Parcelable Provides a precise location in a publication in a format that can be stored and shared. There are many different use cases for locators: getting back to the last position in a publication bookmarks highlights & annotations search results human-readable (and shareable) reference in a publication https://github.com/readium/architecture/tree/master/locators Constructors \u00b6 Locator [androidJvm] fun Locator (href: String , type: String , title: String ? = null, locations: Locator.Locations = Locations(), text: Locator.Text = Text()) Types \u00b6 Name Summary Companion [androidJvm] object Companion Locations [androidJvm] data class Locations (fragments: List < String >, progression: Double ?, position: Int ?, totalProgression: Double ?, otherLocations: Map < String , Any >) : JSONable , Parcelable One or more alternative expressions of the location. https://github.com/readium/architecture/tree/master/models/locators#the-location-object Text [androidJvm] data class Text (before: String ?, highlight: String ?, after: String ?) : JSONable , Parcelable Textual context of the locator. Functions \u00b6 Name Summary copyWithLocations [androidJvm] fun copyWithLocations (fragments: List < String > = locations.fragments, progression: Double ? = locations.progression, position: Int ? = locations.position, totalProgression: Double ? = locations.totalProgression, otherLocations: Map < String , Any > = locations.otherLocations): Locator Shortcut to get a copy of the Locator with different Locations sub-properties. describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes the object to its JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary href [androidJvm] val href : String locations [androidJvm] val locations : Locator.Locations text [androidJvm] val text : Locator.Text title [androidJvm] val title : String ? = null type [androidJvm] val type : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/#locator","text":"[androidJvm]\\ data class Locator (href: String , type: String , title: String ?, locations: Locator.Locations , text: Locator.Text ) : JSONable , Parcelable Provides a precise location in a publication in a format that can be stored and shared. There are many different use cases for locators: getting back to the last position in a publication bookmarks highlights & annotations search results human-readable (and shareable) reference in a publication https://github.com/readium/architecture/tree/master/locators","title":"Locator"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/#constructors","text":"Locator [androidJvm] fun Locator (href: String , type: String , title: String ? = null, locations: Locator.Locations = Locations(), text: Locator.Text = Text())","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/#types","text":"Name Summary Companion [androidJvm] object Companion Locations [androidJvm] data class Locations (fragments: List < String >, progression: Double ?, position: Int ?, totalProgression: Double ?, otherLocations: Map < String , Any >) : JSONable , Parcelable One or more alternative expressions of the location. https://github.com/readium/architecture/tree/master/models/locators#the-location-object Text [androidJvm] data class Text (before: String ?, highlight: String ?, after: String ?) : JSONable , Parcelable Textual context of the locator.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/#functions","text":"Name Summary copyWithLocations [androidJvm] fun copyWithLocations (fragments: List < String > = locations.fragments, progression: Double ? = locations.progression, position: Int ? = locations.position, totalProgression: Double ? = locations.totalProgression, otherLocations: Map < String , Any > = locations.otherLocations): Locator Shortcut to get a copy of the Locator with different Locations sub-properties. describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes the object to its JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/#properties","text":"Name Summary href [androidJvm] val href : String locations [androidJvm] val locations : Locator.Locations text [androidJvm] val text : Locator.Text title [androidJvm] val title : String ? = null type [androidJvm] val type : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locator/","text":"// shared / org.readium.r2.shared.publication / Locator / Locator Locator \u00b6 [androidJvm]\\ fun Locator (href: String , type: String , title: String ? = null, locations: Locator.Locations = Locations(), text: Locator.Text = Text())","title":" locator"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locator/#locator","text":"[androidJvm]\\ fun Locator (href: String , type: String , title: String ? = null, locations: Locator.Locations = Locations(), text: Locator.Text = Text())","title":"Locator"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/copy-with-locations/","text":"// shared / org.readium.r2.shared.publication / Locator / copyWithLocations copyWithLocations \u00b6 [androidJvm]\\ fun copyWithLocations (fragments: List < String > = locations.fragments, progression: Double ? = locations.progression, position: Int ? = locations.position, totalProgression: Double ? = locations.totalProgression, otherLocations: Map < String , Any > = locations.otherLocations): Locator Shortcut to get a copy of the Locator with different Locations sub-properties.","title":"Copy with locations"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/copy-with-locations/#copywithlocations","text":"[androidJvm]\\ fun copyWithLocations (fragments: List < String > = locations.fragments, progression: Double ? = locations.progression, position: Int ? = locations.position, totalProgression: Double ? = locations.totalProgression, otherLocations: Map < String , Any > = locations.otherLocations): Locator Shortcut to get a copy of the Locator with different Locations sub-properties.","title":"copyWithLocations"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/href/","text":"// shared / org.readium.r2.shared.publication / Locator / href href \u00b6 [androidJvm]\\ val href : String","title":"Href"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/href/#href","text":"[androidJvm]\\ val href : String","title":"href"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/locations/","text":"// shared / org.readium.r2.shared.publication / Locator / locations locations \u00b6 [androidJvm]\\ val locations : Locator.Locations","title":"Locations"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/locations/#locations","text":"[androidJvm]\\ val locations : Locator.Locations","title":"locations"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/text/","text":"// shared / org.readium.r2.shared.publication / Locator / text text \u00b6 [androidJvm]\\ val text : Locator.Text","title":"Text"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/text/#text","text":"[androidJvm]\\ val text : Locator.Text","title":"text"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/title/","text":"// shared / org.readium.r2.shared.publication / Locator / title title \u00b6 [androidJvm]\\ val title : String ? = null","title":"Title"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/title/#title","text":"[androidJvm]\\ val title : String ? = null","title":"title"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/to-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / Locator / toJSON toJSON \u00b6 [androidJvm]\\ open override fun toJSON (): JSONObject Serializes the object to its JSON representation.","title":"To j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/to-j-s-o-n/#tojson","text":"[androidJvm]\\ open override fun toJSON (): JSONObject Serializes the object to its JSON representation.","title":"toJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/type/","text":"// shared / org.readium.r2.shared.publication / Locator / type type \u00b6 [androidJvm]\\ val type : String","title":"Type"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/type/#type","text":"[androidJvm]\\ val type : String","title":"type"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-companion/","text":"// shared / org.readium.r2.shared.publication / Locator / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): Locator ? fromJSONArray [androidJvm] fun fromJSONArray (json: JSONArray ?, warnings: WarningLogger ? = null): List < Locator >","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-companion/#functions","text":"Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): Locator ? fromJSONArray [androidJvm] fun fromJSONArray (json: JSONArray ?, warnings: WarningLogger ? = null): List < Locator >","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-companion/from-j-s-o-n-array/","text":"// shared / org.readium.r2.shared.publication / Locator / Companion / fromJSONArray fromJSONArray \u00b6 [androidJvm]\\ fun fromJSONArray (json: JSONArray ?, warnings: WarningLogger ? = null): List < Locator >","title":"From j s o n array"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-companion/from-j-s-o-n-array/#fromjsonarray","text":"[androidJvm]\\ fun fromJSONArray (json: JSONArray ?, warnings: WarningLogger ? = null): List < Locator >","title":"fromJSONArray"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-companion/from-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / Locator / Companion / fromJSON fromJSON \u00b6 [androidJvm]\\ fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): Locator ?","title":"From j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-companion/from-j-s-o-n/#fromjson","text":"[androidJvm]\\ fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): Locator ?","title":"fromJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/","text":"// shared / org.readium.r2.shared.publication / Locator / Locations Locations \u00b6 [androidJvm]\\ data class Locations (fragments: List < String >, progression: Double ?, position: Int ?, totalProgression: Double ?, otherLocations: Map < String , Any >) : JSONable , Parcelable One or more alternative expressions of the location. https://github.com/readium/architecture/tree/master/models/locators#the-location-object Parameters \u00b6 androidJvm fragments Contains one or more fragment in the resource referenced by the Locator . progression Progression in the resource expressed as a percentage (between 0 and 1). position An index in the publication (>= 1). totalProgression Progression in the publication expressed as a percentage (between 0 and 1). otherLocations Additional locations for extensions. Constructors \u00b6 Locations [androidJvm] fun Locations (fragments: List < String > = emptyList(), progression: Double ? = null, position: Int ? = null, totalProgression: Double ? = null, otherLocations: Map < String , Any > = emptyMap()) Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int get [androidJvm] operator fun get (key: String ): Any ? Syntactic sugar to access the otherLocations values by subscripting Locations directly. locations[\"cssSelector\"] == locations.otherLocations[\"cssSelector\"] toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes the object to its JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary fragments [androidJvm] val fragments : List < String > otherLocations [androidJvm] val otherLocations : Map < String , Any > position [androidJvm] val position : Int ? = null progression [androidJvm] val progression : Double ? = null totalProgression [androidJvm] val totalProgression : Double ? = null Extensions \u00b6 Name Summary cssSelector [androidJvm] val Locator.Locations . cssSelector : String ? A CSS Selector. domRange [androidJvm] val Locator.Locations . domRange : DomRange ? An HTML DOM range. partialCfi [androidJvm] val Locator.Locations . partialCfi : String ? partialCfi is an expression conforming to the \"right-hand\" side of the EPUB CFI syntax, that is to say: without the EPUB-specific OPF spine item reference that precedes the first ! exclamation mark (which denotes the \"step indirection\" into a publication document). Note that the wrapping epubcfi(***) syntax is not used for the partialCfi string, i.e. the \"fragment\" part of the CFI grammar is ignored.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/#locations","text":"[androidJvm]\\ data class Locations (fragments: List < String >, progression: Double ?, position: Int ?, totalProgression: Double ?, otherLocations: Map < String , Any >) : JSONable , Parcelable One or more alternative expressions of the location. https://github.com/readium/architecture/tree/master/models/locators#the-location-object","title":"Locations"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/#parameters","text":"androidJvm fragments Contains one or more fragment in the resource referenced by the Locator . progression Progression in the resource expressed as a percentage (between 0 and 1). position An index in the publication (>= 1). totalProgression Progression in the publication expressed as a percentage (between 0 and 1). otherLocations Additional locations for extensions.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/#constructors","text":"Locations [androidJvm] fun Locations (fragments: List < String > = emptyList(), progression: Double ? = null, position: Int ? = null, totalProgression: Double ? = null, otherLocations: Map < String , Any > = emptyMap())","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int get [androidJvm] operator fun get (key: String ): Any ? Syntactic sugar to access the otherLocations values by subscripting Locations directly. locations[\"cssSelector\"] == locations.otherLocations[\"cssSelector\"] toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes the object to its JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/#properties","text":"Name Summary fragments [androidJvm] val fragments : List < String > otherLocations [androidJvm] val otherLocations : Map < String , Any > position [androidJvm] val position : Int ? = null progression [androidJvm] val progression : Double ? = null totalProgression [androidJvm] val totalProgression : Double ? = null","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/#extensions","text":"Name Summary cssSelector [androidJvm] val Locator.Locations . cssSelector : String ? A CSS Selector. domRange [androidJvm] val Locator.Locations . domRange : DomRange ? An HTML DOM range. partialCfi [androidJvm] val Locator.Locations . partialCfi : String ? partialCfi is an expression conforming to the \"right-hand\" side of the EPUB CFI syntax, that is to say: without the EPUB-specific OPF spine item reference that precedes the first ! exclamation mark (which denotes the \"step indirection\" into a publication document). Note that the wrapping epubcfi(***) syntax is not used for the partialCfi string, i.e. the \"fragment\" part of the CFI grammar is ignored.","title":"Extensions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/-locations/","text":"// shared / org.readium.r2.shared.publication / Locator / Locations / Locations Locations \u00b6 [androidJvm]\\ fun Locations (fragments: List < String > = emptyList(), progression: Double ? = null, position: Int ? = null, totalProgression: Double ? = null, otherLocations: Map < String , Any > = emptyMap()) Parameters \u00b6 androidJvm fragments Contains one or more fragment in the resource referenced by the Locator . progression Progression in the resource expressed as a percentage (between 0 and 1). position An index in the publication (>= 1). totalProgression Progression in the publication expressed as a percentage (between 0 and 1). otherLocations Additional locations for extensions.","title":" locations"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/-locations/#locations","text":"[androidJvm]\\ fun Locations (fragments: List < String > = emptyList(), progression: Double ? = null, position: Int ? = null, totalProgression: Double ? = null, otherLocations: Map < String , Any > = emptyMap())","title":"Locations"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/-locations/#parameters","text":"androidJvm fragments Contains one or more fragment in the resource referenced by the Locator . progression Progression in the resource expressed as a percentage (between 0 and 1). position An index in the publication (>= 1). totalProgression Progression in the publication expressed as a percentage (between 0 and 1). otherLocations Additional locations for extensions.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/fragments/","text":"// shared / org.readium.r2.shared.publication / Locator / Locations / fragments fragments \u00b6 [androidJvm]\\ val fragments : List < String >","title":"Fragments"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/fragments/#fragments","text":"[androidJvm]\\ val fragments : List < String >","title":"fragments"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/get/","text":"// shared / org.readium.r2.shared.publication / Locator / Locations / get get \u00b6 [androidJvm]\\ operator fun get (key: String ): Any ? Syntactic sugar to access the otherLocations values by subscripting Locations directly. locations[\"cssSelector\"] == locations.otherLocations[\"cssSelector\"]","title":"Get"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/get/#get","text":"[androidJvm]\\ operator fun get (key: String ): Any ? Syntactic sugar to access the otherLocations values by subscripting Locations directly. locations[\"cssSelector\"] == locations.otherLocations[\"cssSelector\"]","title":"get"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/other-locations/","text":"// shared / org.readium.r2.shared.publication / Locator / Locations / otherLocations otherLocations \u00b6 [androidJvm]\\ val otherLocations : Map < String , Any >","title":"Other locations"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/other-locations/#otherlocations","text":"[androidJvm]\\ val otherLocations : Map < String , Any >","title":"otherLocations"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/position/","text":"// shared / org.readium.r2.shared.publication / Locator / Locations / position position \u00b6 [androidJvm]\\ val position : Int ? = null","title":"Position"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/position/#position","text":"[androidJvm]\\ val position : Int ? = null","title":"position"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/progression/","text":"// shared / org.readium.r2.shared.publication / Locator / Locations / progression progression \u00b6 [androidJvm]\\ val progression : Double ? = null","title":"Progression"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/progression/#progression","text":"[androidJvm]\\ val progression : Double ? = null","title":"progression"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/to-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / Locator / Locations / toJSON toJSON \u00b6 [androidJvm]\\ open override fun toJSON (): JSONObject Serializes the object to its JSON representation.","title":"To j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/to-j-s-o-n/#tojson","text":"[androidJvm]\\ open override fun toJSON (): JSONObject Serializes the object to its JSON representation.","title":"toJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/total-progression/","text":"// shared / org.readium.r2.shared.publication / Locator / Locations / totalProgression totalProgression \u00b6 [androidJvm]\\ val totalProgression : Double ? = null","title":"Total progression"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/total-progression/#totalprogression","text":"[androidJvm]\\ val totalProgression : Double ? = null","title":"totalProgression"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/-companion/","text":"// shared / org.readium.r2.shared.publication / Locator / Locations / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?): Locator.Locations","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/-companion/#functions","text":"Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?): Locator.Locations","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/-companion/from-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / Locator / Locations / Companion / fromJSON fromJSON \u00b6 [androidJvm]\\ fun fromJSON (json: JSONObject ?): Locator.Locations","title":"From j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-locations/-companion/from-j-s-o-n/#fromjson","text":"[androidJvm]\\ fun fromJSON (json: JSONObject ?): Locator.Locations","title":"fromJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-text/","text":"// shared / org.readium.r2.shared.publication / Locator / Text Text \u00b6 [androidJvm]\\ data class Text (before: String ?, highlight: String ?, after: String ?) : JSONable , Parcelable Textual context of the locator. A Locator Text Object contains multiple text fragments, useful to give a context to the Locator or for highlights. https://github.com/readium/architecture/tree/master/models/locators#the-text-object Parameters \u00b6 androidJvm before The text before the locator. highlight The text at the locator. after The text after the locator. Constructors \u00b6 Text [androidJvm] fun Text (before: String ? = null, highlight: String ? = null, after: String ? = null) Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes the object to its JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary after [androidJvm] val after : String ? = null before [androidJvm] val before : String ? = null highlight [androidJvm] val highlight : String ? = null","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-text/#text","text":"[androidJvm]\\ data class Text (before: String ?, highlight: String ?, after: String ?) : JSONable , Parcelable Textual context of the locator. A Locator Text Object contains multiple text fragments, useful to give a context to the Locator or for highlights. https://github.com/readium/architecture/tree/master/models/locators#the-text-object","title":"Text"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-text/#parameters","text":"androidJvm before The text before the locator. highlight The text at the locator. after The text after the locator.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-text/#constructors","text":"Text [androidJvm] fun Text (before: String ? = null, highlight: String ? = null, after: String ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-text/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-text/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes the object to its JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-text/#properties","text":"Name Summary after [androidJvm] val after : String ? = null before [androidJvm] val before : String ? = null highlight [androidJvm] val highlight : String ? = null","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-text/-text/","text":"// shared / org.readium.r2.shared.publication / Locator / Text / Text Text \u00b6 [androidJvm]\\ fun Text (before: String ? = null, highlight: String ? = null, after: String ? = null) Parameters \u00b6 androidJvm before The text before the locator. highlight The text at the locator. after The text after the locator.","title":" text"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-text/-text/#text","text":"[androidJvm]\\ fun Text (before: String ? = null, highlight: String ? = null, after: String ? = null)","title":"Text"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-text/-text/#parameters","text":"androidJvm before The text before the locator. highlight The text at the locator. after The text after the locator.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-text/after/","text":"// shared / org.readium.r2.shared.publication / Locator / Text / after after \u00b6 [androidJvm]\\ val after : String ? = null","title":"After"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-text/after/#after","text":"[androidJvm]\\ val after : String ? = null","title":"after"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-text/before/","text":"// shared / org.readium.r2.shared.publication / Locator / Text / before before \u00b6 [androidJvm]\\ val before : String ? = null","title":"Before"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-text/before/#before","text":"[androidJvm]\\ val before : String ? = null","title":"before"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-text/highlight/","text":"// shared / org.readium.r2.shared.publication / Locator / Text / highlight highlight \u00b6 [androidJvm]\\ val highlight : String ? = null","title":"Highlight"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-text/highlight/#highlight","text":"[androidJvm]\\ val highlight : String ? = null","title":"highlight"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-text/to-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / Locator / Text / toJSON toJSON \u00b6 [androidJvm]\\ open override fun toJSON (): JSONObject Serializes the object to its JSON representation.","title":"To j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-text/to-j-s-o-n/#tojson","text":"[androidJvm]\\ open override fun toJSON (): JSONObject Serializes the object to its JSON representation.","title":"toJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-text/-companion/","text":"// shared / org.readium.r2.shared.publication / Locator / Text / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?): Locator.Text","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-text/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-text/-companion/#functions","text":"Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?): Locator.Text","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-text/-companion/from-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / Locator / Text / Companion / fromJSON fromJSON \u00b6 [androidJvm]\\ fun fromJSON (json: JSONObject ?): Locator.Text","title":"From j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator/-text/-companion/from-j-s-o-n/#fromjson","text":"[androidJvm]\\ fun fromJSON (json: JSONObject ?): Locator.Text","title":"fromJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/","text":"// shared / org.readium.r2.shared.publication / LocatorCollection LocatorCollection \u00b6 [androidJvm]\\ data class LocatorCollection (metadata: LocatorCollection.Metadata , links: List < Link >, locators: List < Locator >) : JSONable , Parcelable Represents a sequential list of Locator objects. For example, a search result or a list of positions. Constructors \u00b6 LocatorCollection [androidJvm] fun LocatorCollection (metadata: LocatorCollection.Metadata = Metadata(), links: List < Link > = emptyList(), locators: List < Locator > = emptyList()) Types \u00b6 Name Summary Companion [androidJvm] object Companion Metadata [androidJvm] data class Metadata (localizedTitle: LocalizedString ?, numberOfItems: Int ?, otherMetadata: Map < String , Any >) : JSONable , Parcelable Holds the metadata of a LocatorCollection. Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes the object to its JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary links [androidJvm] val links : List < Link > locators [androidJvm] val locators : List < Locator > metadata [androidJvm] val metadata : LocatorCollection.Metadata","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/#locatorcollection","text":"[androidJvm]\\ data class LocatorCollection (metadata: LocatorCollection.Metadata , links: List < Link >, locators: List < Locator >) : JSONable , Parcelable Represents a sequential list of Locator objects. For example, a search result or a list of positions.","title":"LocatorCollection"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/#constructors","text":"LocatorCollection [androidJvm] fun LocatorCollection (metadata: LocatorCollection.Metadata = Metadata(), links: List < Link > = emptyList(), locators: List < Locator > = emptyList())","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/#types","text":"Name Summary Companion [androidJvm] object Companion Metadata [androidJvm] data class Metadata (localizedTitle: LocalizedString ?, numberOfItems: Int ?, otherMetadata: Map < String , Any >) : JSONable , Parcelable Holds the metadata of a LocatorCollection.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes the object to its JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/#properties","text":"Name Summary links [androidJvm] val links : List < Link > locators [androidJvm] val locators : List < Locator > metadata [androidJvm] val metadata : LocatorCollection.Metadata","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-locator-collection/","text":"// shared / org.readium.r2.shared.publication / LocatorCollection / LocatorCollection LocatorCollection \u00b6 [androidJvm]\\ fun LocatorCollection (metadata: LocatorCollection.Metadata = Metadata(), links: List < Link > = emptyList(), locators: List < Locator > = emptyList())","title":" locator collection"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-locator-collection/#locatorcollection","text":"[androidJvm]\\ fun LocatorCollection (metadata: LocatorCollection.Metadata = Metadata(), links: List < Link > = emptyList(), locators: List < Locator > = emptyList())","title":"LocatorCollection"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/links/","text":"// shared / org.readium.r2.shared.publication / LocatorCollection / links links \u00b6 [androidJvm]\\ val links : List < Link >","title":"Links"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/links/#links","text":"[androidJvm]\\ val links : List < Link >","title":"links"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/locators/","text":"// shared / org.readium.r2.shared.publication / LocatorCollection / locators locators \u00b6 [androidJvm]\\ val locators : List < Locator >","title":"Locators"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/locators/#locators","text":"[androidJvm]\\ val locators : List < Locator >","title":"locators"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/metadata/","text":"// shared / org.readium.r2.shared.publication / LocatorCollection / metadata metadata \u00b6 [androidJvm]\\ val metadata : LocatorCollection.Metadata","title":"Metadata"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/metadata/#metadata","text":"[androidJvm]\\ val metadata : LocatorCollection.Metadata","title":"metadata"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/to-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / LocatorCollection / toJSON toJSON \u00b6 [androidJvm]\\ open override fun toJSON (): JSONObject Serializes the object to its JSON representation.","title":"To j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/to-j-s-o-n/#tojson","text":"[androidJvm]\\ open override fun toJSON (): JSONObject Serializes the object to its JSON representation.","title":"toJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-companion/","text":"// shared / org.readium.r2.shared.publication / LocatorCollection / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): LocatorCollection","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-companion/#functions","text":"Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): LocatorCollection","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-companion/from-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / LocatorCollection / Companion / fromJSON fromJSON \u00b6 [androidJvm]\\ fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): LocatorCollection","title":"From j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-companion/from-j-s-o-n/#fromjson","text":"[androidJvm]\\ fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): LocatorCollection","title":"fromJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-metadata/","text":"// shared / org.readium.r2.shared.publication / LocatorCollection / Metadata Metadata \u00b6 [androidJvm]\\ data class Metadata (localizedTitle: LocalizedString ?, numberOfItems: Int ?, otherMetadata: Map < String , Any >) : JSONable , Parcelable Holds the metadata of a LocatorCollection. Parameters \u00b6 androidJvm numberOfItems Indicates the total number of locators in the collection. Constructors \u00b6 Metadata [androidJvm] fun Metadata (localizedTitle: LocalizedString ? = null, numberOfItems: Int ? = null, otherMetadata: Map < String , Any > = mapOf()) Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes the object to its JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary localizedTitle [androidJvm] val localizedTitle : LocalizedString ? = null numberOfItems [androidJvm] val numberOfItems : Int ? = null otherMetadata [androidJvm] val otherMetadata : Map < String , Any > title [androidJvm] val title : String ? Returns the default translation string for the localizedTitle .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-metadata/#metadata","text":"[androidJvm]\\ data class Metadata (localizedTitle: LocalizedString ?, numberOfItems: Int ?, otherMetadata: Map < String , Any >) : JSONable , Parcelable Holds the metadata of a LocatorCollection.","title":"Metadata"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-metadata/#parameters","text":"androidJvm numberOfItems Indicates the total number of locators in the collection.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-metadata/#constructors","text":"Metadata [androidJvm] fun Metadata (localizedTitle: LocalizedString ? = null, numberOfItems: Int ? = null, otherMetadata: Map < String , Any > = mapOf())","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-metadata/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-metadata/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes the object to its JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-metadata/#properties","text":"Name Summary localizedTitle [androidJvm] val localizedTitle : LocalizedString ? = null numberOfItems [androidJvm] val numberOfItems : Int ? = null otherMetadata [androidJvm] val otherMetadata : Map < String , Any > title [androidJvm] val title : String ? Returns the default translation string for the localizedTitle .","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-metadata/-metadata/","text":"// shared / org.readium.r2.shared.publication / LocatorCollection / Metadata / Metadata Metadata \u00b6 [androidJvm]\\ fun Metadata (localizedTitle: LocalizedString ? = null, numberOfItems: Int ? = null, otherMetadata: Map < String , Any > = mapOf()) Parameters \u00b6 androidJvm numberOfItems Indicates the total number of locators in the collection.","title":" metadata"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-metadata/-metadata/#metadata","text":"[androidJvm]\\ fun Metadata (localizedTitle: LocalizedString ? = null, numberOfItems: Int ? = null, otherMetadata: Map < String , Any > = mapOf())","title":"Metadata"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-metadata/-metadata/#parameters","text":"androidJvm numberOfItems Indicates the total number of locators in the collection.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-metadata/localized-title/","text":"// shared / org.readium.r2.shared.publication / LocatorCollection / Metadata / localizedTitle localizedTitle \u00b6 [androidJvm]\\ val localizedTitle : LocalizedString ? = null","title":"Localized title"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-metadata/localized-title/#localizedtitle","text":"[androidJvm]\\ val localizedTitle : LocalizedString ? = null","title":"localizedTitle"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-metadata/number-of-items/","text":"// shared / org.readium.r2.shared.publication / LocatorCollection / Metadata / numberOfItems numberOfItems \u00b6 [androidJvm]\\ val numberOfItems : Int ? = null","title":"Number of items"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-metadata/number-of-items/#numberofitems","text":"[androidJvm]\\ val numberOfItems : Int ? = null","title":"numberOfItems"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-metadata/other-metadata/","text":"// shared / org.readium.r2.shared.publication / LocatorCollection / Metadata / otherMetadata otherMetadata \u00b6 [androidJvm]\\ val otherMetadata : Map < String , Any >","title":"Other metadata"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-metadata/other-metadata/#othermetadata","text":"[androidJvm]\\ val otherMetadata : Map < String , Any >","title":"otherMetadata"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-metadata/title/","text":"// shared / org.readium.r2.shared.publication / LocatorCollection / Metadata / title title \u00b6 [androidJvm]\\ val title : String ? Returns the default translation string for the localizedTitle .","title":"Title"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-metadata/title/#title","text":"[androidJvm]\\ val title : String ? Returns the default translation string for the localizedTitle .","title":"title"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-metadata/to-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / LocatorCollection / Metadata / toJSON toJSON \u00b6 [androidJvm]\\ open override fun toJSON (): JSONObject Serializes the object to its JSON representation.","title":"To j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-metadata/to-j-s-o-n/#tojson","text":"[androidJvm]\\ open override fun toJSON (): JSONObject Serializes the object to its JSON representation.","title":"toJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-metadata/-companion/","text":"// shared / org.readium.r2.shared.publication / LocatorCollection / Metadata / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): LocatorCollection.Metadata","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-metadata/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-metadata/-companion/#functions","text":"Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): LocatorCollection.Metadata","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-metadata/-companion/from-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / LocatorCollection / Metadata / Companion / fromJSON fromJSON \u00b6 [androidJvm]\\ fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): LocatorCollection.Metadata","title":"From j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-locator-collection/-metadata/-companion/from-j-s-o-n/#fromjson","text":"[androidJvm]\\ fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): LocatorCollection.Metadata","title":"fromJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/","text":"// shared / org.readium.r2.shared.publication / Manifest Manifest \u00b6 [androidJvm]\\ data class Manifest (context: List < String >, metadata: Metadata , links: List < Link >, readingOrder: List < Link >, resources: List < Link >, tableOfContents: List < Link >, subcollections: Map < String , List < PublicationCollection >>) : JSONable , Parcelable Holds the metadata of a Readium publication, as described in the Readium Web Publication Manifest. Constructors \u00b6 Manifest [androidJvm] fun Manifest (context: List < String > = emptyList(), metadata: Metadata , links: List < Link > = emptyList(), readingOrder: List < Link > = emptyList(), resources: List < Link > = emptyList(), tableOfContents: List < Link > = emptyList(), subcollections: Map < String , List < PublicationCollection >> = emptyMap()) Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int linksWithRel [androidJvm] fun linksWithRel (rel: String ): List < Link > Finds all Link s having the given rel in the manifest's links. linkWithRel [androidJvm] fun linkWithRel (rel: String ): Link ? Finds the first Link with the given relation in the manifest's links. toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes a Publication to its RWPM JSON representation. toString [androidJvm] open override fun toString (): String Returns the RWPM JSON representation for this manifest, as a string. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary context [androidJvm] val context : List < String > links [androidJvm] var links : List < Link > metadata [androidJvm] val metadata : Metadata readingOrder [androidJvm] val readingOrder : List < Link > resources [androidJvm] val resources : List < Link > subcollections [androidJvm] val subcollections : Map < String , List < PublicationCollection >> tableOfContents [androidJvm] val tableOfContents : List < Link >","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/#manifest","text":"[androidJvm]\\ data class Manifest (context: List < String >, metadata: Metadata , links: List < Link >, readingOrder: List < Link >, resources: List < Link >, tableOfContents: List < Link >, subcollections: Map < String , List < PublicationCollection >>) : JSONable , Parcelable Holds the metadata of a Readium publication, as described in the Readium Web Publication Manifest.","title":"Manifest"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/#constructors","text":"Manifest [androidJvm] fun Manifest (context: List < String > = emptyList(), metadata: Metadata , links: List < Link > = emptyList(), readingOrder: List < Link > = emptyList(), resources: List < Link > = emptyList(), tableOfContents: List < Link > = emptyList(), subcollections: Map < String , List < PublicationCollection >> = emptyMap())","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int linksWithRel [androidJvm] fun linksWithRel (rel: String ): List < Link > Finds all Link s having the given rel in the manifest's links. linkWithRel [androidJvm] fun linkWithRel (rel: String ): Link ? Finds the first Link with the given relation in the manifest's links. toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes a Publication to its RWPM JSON representation. toString [androidJvm] open override fun toString (): String Returns the RWPM JSON representation for this manifest, as a string. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/#properties","text":"Name Summary context [androidJvm] val context : List < String > links [androidJvm] var links : List < Link > metadata [androidJvm] val metadata : Metadata readingOrder [androidJvm] val readingOrder : List < Link > resources [androidJvm] val resources : List < Link > subcollections [androidJvm] val subcollections : Map < String , List < PublicationCollection >> tableOfContents [androidJvm] val tableOfContents : List < Link >","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/-manifest/","text":"// shared / org.readium.r2.shared.publication / Manifest / Manifest Manifest \u00b6 [androidJvm]\\ fun Manifest (context: List < String > = emptyList(), metadata: Metadata , links: List < Link > = emptyList(), readingOrder: List < Link > = emptyList(), resources: List < Link > = emptyList(), tableOfContents: List < Link > = emptyList(), subcollections: Map < String , List < PublicationCollection >> = emptyMap())","title":" manifest"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/-manifest/#manifest","text":"[androidJvm]\\ fun Manifest (context: List < String > = emptyList(), metadata: Metadata , links: List < Link > = emptyList(), readingOrder: List < Link > = emptyList(), resources: List < Link > = emptyList(), tableOfContents: List < Link > = emptyList(), subcollections: Map < String , List < PublicationCollection >> = emptyMap())","title":"Manifest"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/context/","text":"// shared / org.readium.r2.shared.publication / Manifest / context context \u00b6 [androidJvm]\\ val context : List < String >","title":"Context"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/context/#context","text":"[androidJvm]\\ val context : List < String >","title":"context"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/link-with-rel/","text":"// shared / org.readium.r2.shared.publication / Manifest / linkWithRel linkWithRel \u00b6 [androidJvm]\\ fun linkWithRel (rel: String ): Link ? Finds the first Link with the given relation in the manifest's links.","title":"Link with rel"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/link-with-rel/#linkwithrel","text":"[androidJvm]\\ fun linkWithRel (rel: String ): Link ? Finds the first Link with the given relation in the manifest's links.","title":"linkWithRel"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/links-with-rel/","text":"// shared / org.readium.r2.shared.publication / Manifest / linksWithRel linksWithRel \u00b6 [androidJvm]\\ fun linksWithRel (rel: String ): List < Link > Finds all Link s having the given rel in the manifest's links.","title":"Links with rel"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/links-with-rel/#linkswithrel","text":"[androidJvm]\\ fun linksWithRel (rel: String ): List < Link > Finds all Link s having the given rel in the manifest's links.","title":"linksWithRel"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/links/","text":"// shared / org.readium.r2.shared.publication / Manifest / links links \u00b6 [androidJvm]\\ var links : List < Link >","title":"Links"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/links/#links","text":"[androidJvm]\\ var links : List < Link >","title":"links"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/metadata/","text":"// shared / org.readium.r2.shared.publication / Manifest / metadata metadata \u00b6 [androidJvm]\\ val metadata : Metadata","title":"Metadata"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/metadata/#metadata","text":"[androidJvm]\\ val metadata : Metadata","title":"metadata"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/reading-order/","text":"// shared / org.readium.r2.shared.publication / Manifest / readingOrder readingOrder \u00b6 [androidJvm]\\ val readingOrder : List < Link >","title":"Reading order"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/reading-order/#readingorder","text":"[androidJvm]\\ val readingOrder : List < Link >","title":"readingOrder"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/resources/","text":"// shared / org.readium.r2.shared.publication / Manifest / resources resources \u00b6 [androidJvm]\\ val resources : List < Link >","title":"Resources"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/resources/#resources","text":"[androidJvm]\\ val resources : List < Link >","title":"resources"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/subcollections/","text":"// shared / org.readium.r2.shared.publication / Manifest / subcollections subcollections \u00b6 [androidJvm]\\ val subcollections : Map < String , List < PublicationCollection >>","title":"Subcollections"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/subcollections/#subcollections","text":"[androidJvm]\\ val subcollections : Map < String , List < PublicationCollection >>","title":"subcollections"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/table-of-contents/","text":"// shared / org.readium.r2.shared.publication / Manifest / tableOfContents tableOfContents \u00b6 [androidJvm]\\ val tableOfContents : List < Link >","title":"Table of contents"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/table-of-contents/#tableofcontents","text":"[androidJvm]\\ val tableOfContents : List < Link >","title":"tableOfContents"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/to-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / Manifest / toJSON toJSON \u00b6 [androidJvm]\\ open override fun toJSON (): JSONObject Serializes a Publication to its RWPM JSON representation.","title":"To j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/to-j-s-o-n/#tojson","text":"[androidJvm]\\ open override fun toJSON (): JSONObject Serializes a Publication to its RWPM JSON representation.","title":"toJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/to-string/","text":"// shared / org.readium.r2.shared.publication / Manifest / toString toString \u00b6 [androidJvm]\\ open override fun toString (): String Returns the RWPM JSON representation for this manifest, as a string.","title":"To string"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/to-string/#tostring","text":"[androidJvm]\\ open override fun toString (): String Returns the RWPM JSON representation for this manifest, as a string.","title":"toString"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/-companion/","text":"// shared / org.readium.r2.shared.publication / Manifest / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?, packaged: Boolean = false, warnings: WarningLogger ? = null): Manifest ? Parses a Manifest from its RWPM JSON representation.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/-companion/#functions","text":"Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?, packaged: Boolean = false, warnings: WarningLogger ? = null): Manifest ? Parses a Manifest from its RWPM JSON representation.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/-companion/from-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / Manifest / Companion / fromJSON fromJSON \u00b6 [androidJvm]\\ fun fromJSON (json: JSONObject ?, packaged: Boolean = false, warnings: WarningLogger ? = null): Manifest ? Parses a Manifest from its RWPM JSON representation. If the publication can't be parsed, a warning will be logged with warnings . https://readium.org/webpub-manifest/ https://readium.org/webpub-manifest/schema/publication.schema.json","title":"From j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-manifest/-companion/from-j-s-o-n/#fromjson","text":"[androidJvm]\\ fun fromJSON (json: JSONObject ?, packaged: Boolean = false, warnings: WarningLogger ? = null): Manifest ? Parses a Manifest from its RWPM JSON representation. If the publication can't be parsed, a warning will be logged with warnings . https://readium.org/webpub-manifest/ https://readium.org/webpub-manifest/schema/publication.schema.json","title":"fromJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/","text":"// shared / org.readium.r2.shared.publication / Metadata Metadata \u00b6 [androidJvm]\\ data class Metadata (identifier: String ?, type: String ?, localizedTitle: LocalizedString , localizedSubtitle: LocalizedString ?, localizedSortAs: LocalizedString ?, modified: Date ?, published: Date ?, languages: List < String >, subjects: List < Subject >, authors: List < Contributor >, translators: List < Contributor >, editors: List < Contributor >, artists: List < Contributor >, illustrators: List < Contributor >, letterers: List < Contributor >, pencilers: List < Contributor >, colorists: List < Contributor >, inkers: List < Contributor >, narrators: List < Contributor >, contributors: List < Contributor >, publishers: List < Contributor >, imprints: List < Contributor >, readingProgression: ReadingProgression , description: String ?, duration: Double ?, numberOfPages: Int ?, belongsTo: Map < String , List < Collection >>, otherMetadata: Map < String , Any >) : JSONable , Parcelable https://readium.org/webpub-manifest/schema/metadata.schema.json Parameters \u00b6 androidJvm readingProgression WARNING: This contains the reading progression as declared in the publication, so it might be AUTO. To lay out the content, use effectiveReadingProgression to get the calculated reading progression from the declared direction and the language. otherMetadata Additional metadata for extensions, as a JSON dictionary. Constructors \u00b6 Metadata [androidJvm] fun Metadata (identifier: String ? = null, type: String ? = null, localizedTitle: LocalizedString , localizedSubtitle: LocalizedString ? = null, localizedSortAs: LocalizedString ? = null, modified: Date ? = null, published: Date ? = null, languages: List < String > = emptyList(), subjects: List < Subject > = emptyList(), authors: List < Contributor > = emptyList(), translators: List < Contributor > = emptyList(), editors: List < Contributor > = emptyList(), artists: List < Contributor > = emptyList(), illustrators: List < Contributor > = emptyList(), letterers: List < Contributor > = emptyList(), pencilers: List < Contributor > = emptyList(), colorists: List < Contributor > = emptyList(), inkers: List < Contributor > = emptyList(), narrators: List < Contributor > = emptyList(), contributors: List < Contributor > = emptyList(), publishers: List < Contributor > = emptyList(), imprints: List < Contributor > = emptyList(), readingProgression: ReadingProgression = ReadingProgression.AUTO, description: String ? = null, duration: Double ? = null, numberOfPages: Int ? = null, belongsTo: Map < String , List < Collection >> = emptyMap(), belongsToCollections: List < Collection > = emptyList(), belongsToSeries: List < Collection > = emptyList(), otherMetadata: Map < String , Any > = mapOf()) Metadata [androidJvm] fun Metadata (identifier: String ? = null, type: String ? = null, localizedTitle: LocalizedString , localizedSubtitle: LocalizedString ? = null, localizedSortAs: LocalizedString ? = null, modified: Date ? = null, published: Date ? = null, languages: List < String > = emptyList(), subjects: List < Subject > = emptyList(), authors: List < Contributor > = emptyList(), translators: List < Contributor > = emptyList(), editors: List < Contributor > = emptyList(), artists: List < Contributor > = emptyList(), illustrators: List < Contributor > = emptyList(), letterers: List < Contributor > = emptyList(), pencilers: List < Contributor > = emptyList(), colorists: List < Contributor > = emptyList(), inkers: List < Contributor > = emptyList(), narrators: List < Contributor > = emptyList(), contributors: List < Contributor > = emptyList(), publishers: List < Contributor > = emptyList(), imprints: List < Contributor > = emptyList(), readingProgression: ReadingProgression = ReadingProgression.AUTO, description: String ? = null, duration: Double ? = null, numberOfPages: Int ? = null, belongsTo: Map < String , List < Collection >> = emptyMap(), otherMetadata: Map < String , Any > = mapOf()) Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int get [androidJvm] operator fun get (key: String ): Any ? Syntactic sugar to access the otherMetadata values by subscripting Metadata directly. metadata[\"layout\"] == metadata.otherMetadata[\"layout\"] toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes a Metadata to its RWPM JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary artists [androidJvm] val artists : List < Contributor > authors [androidJvm] val authors : List < Contributor > belongsTo [androidJvm] val belongsTo : Map < String , List < Collection >> belongsToCollections [androidJvm] val belongsToCollections : List < Collection > belongsToSeries [androidJvm] val belongsToSeries : List < Collection > colorists [androidJvm] val colorists : List < Contributor > contributors [androidJvm] val contributors : List < Contributor > description [androidJvm] val description : String ? = null duration [androidJvm] val duration : Double ? = null editors [androidJvm] val editors : List < Contributor > effectiveReadingProgression [androidJvm] val effectiveReadingProgression : ReadingProgression Computes a ReadingProgression when the value of readingProgression is set to auto, using the publication language. identifier [androidJvm] val identifier : String ? = null illustrators [androidJvm] val illustrators : List < Contributor > imprints [androidJvm] val imprints : List < Contributor > inkers [androidJvm] val inkers : List < Contributor > languages [androidJvm] val languages : List < String > letterers [androidJvm] val letterers : List < Contributor > localizedSortAs [androidJvm] val localizedSortAs : LocalizedString ? = null localizedSubtitle [androidJvm] val localizedSubtitle : LocalizedString ? = null localizedTitle [androidJvm] val localizedTitle : LocalizedString modified [androidJvm] val modified : Date ? = null narrators [androidJvm] val narrators : List < Contributor > numberOfPages [androidJvm] val numberOfPages : Int ? = null otherMetadata [androidJvm] val otherMetadata : Map < String , Any > pencilers [androidJvm] val pencilers : List < Contributor > published [androidJvm] val published : Date ? = null publishers [androidJvm] val publishers : List < Contributor > readingProgression [androidJvm] val readingProgression : ReadingProgression sortAs [androidJvm] val sortAs : String ? Returns the default translation string for the localizedSortAs . subjects [androidJvm] val subjects : List < Subject > title [androidJvm] val title : String Returns the default translation string for the localizedTitle . translators [androidJvm] val translators : List < Contributor > type [androidJvm] val type : String ? = null Extensions \u00b6 Name Summary presentation [androidJvm] val Metadata . presentation : Presentation","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/#metadata","text":"[androidJvm]\\ data class Metadata (identifier: String ?, type: String ?, localizedTitle: LocalizedString , localizedSubtitle: LocalizedString ?, localizedSortAs: LocalizedString ?, modified: Date ?, published: Date ?, languages: List < String >, subjects: List < Subject >, authors: List < Contributor >, translators: List < Contributor >, editors: List < Contributor >, artists: List < Contributor >, illustrators: List < Contributor >, letterers: List < Contributor >, pencilers: List < Contributor >, colorists: List < Contributor >, inkers: List < Contributor >, narrators: List < Contributor >, contributors: List < Contributor >, publishers: List < Contributor >, imprints: List < Contributor >, readingProgression: ReadingProgression , description: String ?, duration: Double ?, numberOfPages: Int ?, belongsTo: Map < String , List < Collection >>, otherMetadata: Map < String , Any >) : JSONable , Parcelable https://readium.org/webpub-manifest/schema/metadata.schema.json","title":"Metadata"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/#parameters","text":"androidJvm readingProgression WARNING: This contains the reading progression as declared in the publication, so it might be AUTO. To lay out the content, use effectiveReadingProgression to get the calculated reading progression from the declared direction and the language. otherMetadata Additional metadata for extensions, as a JSON dictionary.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/#constructors","text":"Metadata [androidJvm] fun Metadata (identifier: String ? = null, type: String ? = null, localizedTitle: LocalizedString , localizedSubtitle: LocalizedString ? = null, localizedSortAs: LocalizedString ? = null, modified: Date ? = null, published: Date ? = null, languages: List < String > = emptyList(), subjects: List < Subject > = emptyList(), authors: List < Contributor > = emptyList(), translators: List < Contributor > = emptyList(), editors: List < Contributor > = emptyList(), artists: List < Contributor > = emptyList(), illustrators: List < Contributor > = emptyList(), letterers: List < Contributor > = emptyList(), pencilers: List < Contributor > = emptyList(), colorists: List < Contributor > = emptyList(), inkers: List < Contributor > = emptyList(), narrators: List < Contributor > = emptyList(), contributors: List < Contributor > = emptyList(), publishers: List < Contributor > = emptyList(), imprints: List < Contributor > = emptyList(), readingProgression: ReadingProgression = ReadingProgression.AUTO, description: String ? = null, duration: Double ? = null, numberOfPages: Int ? = null, belongsTo: Map < String , List < Collection >> = emptyMap(), belongsToCollections: List < Collection > = emptyList(), belongsToSeries: List < Collection > = emptyList(), otherMetadata: Map < String , Any > = mapOf()) Metadata [androidJvm] fun Metadata (identifier: String ? = null, type: String ? = null, localizedTitle: LocalizedString , localizedSubtitle: LocalizedString ? = null, localizedSortAs: LocalizedString ? = null, modified: Date ? = null, published: Date ? = null, languages: List < String > = emptyList(), subjects: List < Subject > = emptyList(), authors: List < Contributor > = emptyList(), translators: List < Contributor > = emptyList(), editors: List < Contributor > = emptyList(), artists: List < Contributor > = emptyList(), illustrators: List < Contributor > = emptyList(), letterers: List < Contributor > = emptyList(), pencilers: List < Contributor > = emptyList(), colorists: List < Contributor > = emptyList(), inkers: List < Contributor > = emptyList(), narrators: List < Contributor > = emptyList(), contributors: List < Contributor > = emptyList(), publishers: List < Contributor > = emptyList(), imprints: List < Contributor > = emptyList(), readingProgression: ReadingProgression = ReadingProgression.AUTO, description: String ? = null, duration: Double ? = null, numberOfPages: Int ? = null, belongsTo: Map < String , List < Collection >> = emptyMap(), otherMetadata: Map < String , Any > = mapOf())","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int get [androidJvm] operator fun get (key: String ): Any ? Syntactic sugar to access the otherMetadata values by subscripting Metadata directly. metadata[\"layout\"] == metadata.otherMetadata[\"layout\"] toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes a Metadata to its RWPM JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/#properties","text":"Name Summary artists [androidJvm] val artists : List < Contributor > authors [androidJvm] val authors : List < Contributor > belongsTo [androidJvm] val belongsTo : Map < String , List < Collection >> belongsToCollections [androidJvm] val belongsToCollections : List < Collection > belongsToSeries [androidJvm] val belongsToSeries : List < Collection > colorists [androidJvm] val colorists : List < Contributor > contributors [androidJvm] val contributors : List < Contributor > description [androidJvm] val description : String ? = null duration [androidJvm] val duration : Double ? = null editors [androidJvm] val editors : List < Contributor > effectiveReadingProgression [androidJvm] val effectiveReadingProgression : ReadingProgression Computes a ReadingProgression when the value of readingProgression is set to auto, using the publication language. identifier [androidJvm] val identifier : String ? = null illustrators [androidJvm] val illustrators : List < Contributor > imprints [androidJvm] val imprints : List < Contributor > inkers [androidJvm] val inkers : List < Contributor > languages [androidJvm] val languages : List < String > letterers [androidJvm] val letterers : List < Contributor > localizedSortAs [androidJvm] val localizedSortAs : LocalizedString ? = null localizedSubtitle [androidJvm] val localizedSubtitle : LocalizedString ? = null localizedTitle [androidJvm] val localizedTitle : LocalizedString modified [androidJvm] val modified : Date ? = null narrators [androidJvm] val narrators : List < Contributor > numberOfPages [androidJvm] val numberOfPages : Int ? = null otherMetadata [androidJvm] val otherMetadata : Map < String , Any > pencilers [androidJvm] val pencilers : List < Contributor > published [androidJvm] val published : Date ? = null publishers [androidJvm] val publishers : List < Contributor > readingProgression [androidJvm] val readingProgression : ReadingProgression sortAs [androidJvm] val sortAs : String ? Returns the default translation string for the localizedSortAs . subjects [androidJvm] val subjects : List < Subject > title [androidJvm] val title : String Returns the default translation string for the localizedTitle . translators [androidJvm] val translators : List < Contributor > type [androidJvm] val type : String ? = null","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/#extensions","text":"Name Summary presentation [androidJvm] val Metadata . presentation : Presentation","title":"Extensions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/-metadata/","text":"// shared / org.readium.r2.shared.publication / Metadata / Metadata Metadata \u00b6 [androidJvm]\\ fun Metadata (identifier: String ? = null, type: String ? = null, localizedTitle: LocalizedString , localizedSubtitle: LocalizedString ? = null, localizedSortAs: LocalizedString ? = null, modified: Date ? = null, published: Date ? = null, languages: List < String > = emptyList(), subjects: List < Subject > = emptyList(), authors: List < Contributor > = emptyList(), translators: List < Contributor > = emptyList(), editors: List < Contributor > = emptyList(), artists: List < Contributor > = emptyList(), illustrators: List < Contributor > = emptyList(), letterers: List < Contributor > = emptyList(), pencilers: List < Contributor > = emptyList(), colorists: List < Contributor > = emptyList(), inkers: List < Contributor > = emptyList(), narrators: List < Contributor > = emptyList(), contributors: List < Contributor > = emptyList(), publishers: List < Contributor > = emptyList(), imprints: List < Contributor > = emptyList(), readingProgression: ReadingProgression = ReadingProgression.AUTO, description: String ? = null, duration: Double ? = null, numberOfPages: Int ? = null, belongsTo: Map < String , List < Collection >> = emptyMap(), belongsToCollections: List < Collection > = emptyList(), belongsToSeries: List < Collection > = emptyList(), otherMetadata: Map < String , Any > = mapOf()) [androidJvm]\\ fun Metadata (identifier: String ? = null, type: String ? = null, localizedTitle: LocalizedString , localizedSubtitle: LocalizedString ? = null, localizedSortAs: LocalizedString ? = null, modified: Date ? = null, published: Date ? = null, languages: List < String > = emptyList(), subjects: List < Subject > = emptyList(), authors: List < Contributor > = emptyList(), translators: List < Contributor > = emptyList(), editors: List < Contributor > = emptyList(), artists: List < Contributor > = emptyList(), illustrators: List < Contributor > = emptyList(), letterers: List < Contributor > = emptyList(), pencilers: List < Contributor > = emptyList(), colorists: List < Contributor > = emptyList(), inkers: List < Contributor > = emptyList(), narrators: List < Contributor > = emptyList(), contributors: List < Contributor > = emptyList(), publishers: List < Contributor > = emptyList(), imprints: List < Contributor > = emptyList(), readingProgression: ReadingProgression = ReadingProgression.AUTO, description: String ? = null, duration: Double ? = null, numberOfPages: Int ? = null, belongsTo: Map < String , List < Collection >> = emptyMap(), otherMetadata: Map < String , Any > = mapOf()) Parameters \u00b6 androidJvm readingProgression WARNING: This contains the reading progression as declared in the publication, so it might be AUTO. To lay out the content, use effectiveReadingProgression to get the calculated reading progression from the declared direction and the language. otherMetadata Additional metadata for extensions, as a JSON dictionary.","title":" metadata"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/-metadata/#metadata","text":"[androidJvm]\\ fun Metadata (identifier: String ? = null, type: String ? = null, localizedTitle: LocalizedString , localizedSubtitle: LocalizedString ? = null, localizedSortAs: LocalizedString ? = null, modified: Date ? = null, published: Date ? = null, languages: List < String > = emptyList(), subjects: List < Subject > = emptyList(), authors: List < Contributor > = emptyList(), translators: List < Contributor > = emptyList(), editors: List < Contributor > = emptyList(), artists: List < Contributor > = emptyList(), illustrators: List < Contributor > = emptyList(), letterers: List < Contributor > = emptyList(), pencilers: List < Contributor > = emptyList(), colorists: List < Contributor > = emptyList(), inkers: List < Contributor > = emptyList(), narrators: List < Contributor > = emptyList(), contributors: List < Contributor > = emptyList(), publishers: List < Contributor > = emptyList(), imprints: List < Contributor > = emptyList(), readingProgression: ReadingProgression = ReadingProgression.AUTO, description: String ? = null, duration: Double ? = null, numberOfPages: Int ? = null, belongsTo: Map < String , List < Collection >> = emptyMap(), belongsToCollections: List < Collection > = emptyList(), belongsToSeries: List < Collection > = emptyList(), otherMetadata: Map < String , Any > = mapOf()) [androidJvm]\\ fun Metadata (identifier: String ? = null, type: String ? = null, localizedTitle: LocalizedString , localizedSubtitle: LocalizedString ? = null, localizedSortAs: LocalizedString ? = null, modified: Date ? = null, published: Date ? = null, languages: List < String > = emptyList(), subjects: List < Subject > = emptyList(), authors: List < Contributor > = emptyList(), translators: List < Contributor > = emptyList(), editors: List < Contributor > = emptyList(), artists: List < Contributor > = emptyList(), illustrators: List < Contributor > = emptyList(), letterers: List < Contributor > = emptyList(), pencilers: List < Contributor > = emptyList(), colorists: List < Contributor > = emptyList(), inkers: List < Contributor > = emptyList(), narrators: List < Contributor > = emptyList(), contributors: List < Contributor > = emptyList(), publishers: List < Contributor > = emptyList(), imprints: List < Contributor > = emptyList(), readingProgression: ReadingProgression = ReadingProgression.AUTO, description: String ? = null, duration: Double ? = null, numberOfPages: Int ? = null, belongsTo: Map < String , List < Collection >> = emptyMap(), otherMetadata: Map < String , Any > = mapOf())","title":"Metadata"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/-metadata/#parameters","text":"androidJvm readingProgression WARNING: This contains the reading progression as declared in the publication, so it might be AUTO. To lay out the content, use effectiveReadingProgression to get the calculated reading progression from the declared direction and the language. otherMetadata Additional metadata for extensions, as a JSON dictionary.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/artists/","text":"// shared / org.readium.r2.shared.publication / Metadata / artists artists \u00b6 [androidJvm]\\ val artists : List < Contributor >","title":"Artists"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/artists/#artists","text":"[androidJvm]\\ val artists : List < Contributor >","title":"artists"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/authors/","text":"// shared / org.readium.r2.shared.publication / Metadata / authors authors \u00b6 [androidJvm]\\ val authors : List < Contributor >","title":"Authors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/authors/#authors","text":"[androidJvm]\\ val authors : List < Contributor >","title":"authors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/belongs-to-collections/","text":"// shared / org.readium.r2.shared.publication / Metadata / belongsToCollections belongsToCollections \u00b6 [androidJvm]\\ val belongsToCollections : List < Collection >","title":"Belongs to collections"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/belongs-to-collections/#belongstocollections","text":"[androidJvm]\\ val belongsToCollections : List < Collection >","title":"belongsToCollections"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/belongs-to-series/","text":"// shared / org.readium.r2.shared.publication / Metadata / belongsToSeries belongsToSeries \u00b6 [androidJvm]\\ val belongsToSeries : List < Collection >","title":"Belongs to series"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/belongs-to-series/#belongstoseries","text":"[androidJvm]\\ val belongsToSeries : List < Collection >","title":"belongsToSeries"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/belongs-to/","text":"// shared / org.readium.r2.shared.publication / Metadata / belongsTo belongsTo \u00b6 [androidJvm]\\ val belongsTo : Map < String , List < Collection >>","title":"Belongs to"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/belongs-to/#belongsto","text":"[androidJvm]\\ val belongsTo : Map < String , List < Collection >>","title":"belongsTo"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/colorists/","text":"// shared / org.readium.r2.shared.publication / Metadata / colorists colorists \u00b6 [androidJvm]\\ val colorists : List < Contributor >","title":"Colorists"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/colorists/#colorists","text":"[androidJvm]\\ val colorists : List < Contributor >","title":"colorists"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/contributors/","text":"// shared / org.readium.r2.shared.publication / Metadata / contributors contributors \u00b6 [androidJvm]\\ val contributors : List < Contributor >","title":"Contributors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/contributors/#contributors","text":"[androidJvm]\\ val contributors : List < Contributor >","title":"contributors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/description/","text":"// shared / org.readium.r2.shared.publication / Metadata / description description \u00b6 [androidJvm]\\ val description : String ? = null","title":"Description"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/description/#description","text":"[androidJvm]\\ val description : String ? = null","title":"description"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/duration/","text":"// shared / org.readium.r2.shared.publication / Metadata / duration duration \u00b6 [androidJvm]\\ val duration : Double ? = null","title":"Duration"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/duration/#duration","text":"[androidJvm]\\ val duration : Double ? = null","title":"duration"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/editors/","text":"// shared / org.readium.r2.shared.publication / Metadata / editors editors \u00b6 [androidJvm]\\ val editors : List < Contributor >","title":"Editors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/editors/#editors","text":"[androidJvm]\\ val editors : List < Contributor >","title":"editors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/effective-reading-progression/","text":"// shared / org.readium.r2.shared.publication / Metadata / effectiveReadingProgression effectiveReadingProgression \u00b6 [androidJvm]\\ val effectiveReadingProgression : ReadingProgression Computes a ReadingProgression when the value of readingProgression is set to auto, using the publication language. See this issue for more details: https://github.com/readium/architecture/issues/113","title":"Effective reading progression"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/effective-reading-progression/#effectivereadingprogression","text":"[androidJvm]\\ val effectiveReadingProgression : ReadingProgression Computes a ReadingProgression when the value of readingProgression is set to auto, using the publication language. See this issue for more details: https://github.com/readium/architecture/issues/113","title":"effectiveReadingProgression"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/get/","text":"// shared / org.readium.r2.shared.publication / Metadata / get get \u00b6 [androidJvm]\\ operator fun get (key: String ): Any ? Syntactic sugar to access the otherMetadata values by subscripting Metadata directly. metadata[\"layout\"] == metadata.otherMetadata[\"layout\"]","title":"Get"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/get/#get","text":"[androidJvm]\\ operator fun get (key: String ): Any ? Syntactic sugar to access the otherMetadata values by subscripting Metadata directly. metadata[\"layout\"] == metadata.otherMetadata[\"layout\"]","title":"get"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/identifier/","text":"// shared / org.readium.r2.shared.publication / Metadata / identifier identifier \u00b6 [androidJvm]\\ val identifier : String ? = null","title":"Identifier"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/identifier/#identifier","text":"[androidJvm]\\ val identifier : String ? = null","title":"identifier"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/illustrators/","text":"// shared / org.readium.r2.shared.publication / Metadata / illustrators illustrators \u00b6 [androidJvm]\\ val illustrators : List < Contributor >","title":"Illustrators"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/illustrators/#illustrators","text":"[androidJvm]\\ val illustrators : List < Contributor >","title":"illustrators"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/imprints/","text":"// shared / org.readium.r2.shared.publication / Metadata / imprints imprints \u00b6 [androidJvm]\\ val imprints : List < Contributor >","title":"Imprints"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/imprints/#imprints","text":"[androidJvm]\\ val imprints : List < Contributor >","title":"imprints"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/inkers/","text":"// shared / org.readium.r2.shared.publication / Metadata / inkers inkers \u00b6 [androidJvm]\\ val inkers : List < Contributor >","title":"Inkers"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/inkers/#inkers","text":"[androidJvm]\\ val inkers : List < Contributor >","title":"inkers"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/languages/","text":"// shared / org.readium.r2.shared.publication / Metadata / languages languages \u00b6 [androidJvm]\\ val languages : List < String >","title":"Languages"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/languages/#languages","text":"[androidJvm]\\ val languages : List < String >","title":"languages"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/letterers/","text":"// shared / org.readium.r2.shared.publication / Metadata / letterers letterers \u00b6 [androidJvm]\\ val letterers : List < Contributor >","title":"Letterers"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/letterers/#letterers","text":"[androidJvm]\\ val letterers : List < Contributor >","title":"letterers"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/localized-sort-as/","text":"// shared / org.readium.r2.shared.publication / Metadata / localizedSortAs localizedSortAs \u00b6 [androidJvm]\\ val localizedSortAs : LocalizedString ? = null","title":"Localized sort as"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/localized-sort-as/#localizedsortas","text":"[androidJvm]\\ val localizedSortAs : LocalizedString ? = null","title":"localizedSortAs"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/localized-subtitle/","text":"// shared / org.readium.r2.shared.publication / Metadata / localizedSubtitle localizedSubtitle \u00b6 [androidJvm]\\ val localizedSubtitle : LocalizedString ? = null","title":"Localized subtitle"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/localized-subtitle/#localizedsubtitle","text":"[androidJvm]\\ val localizedSubtitle : LocalizedString ? = null","title":"localizedSubtitle"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/localized-title/","text":"// shared / org.readium.r2.shared.publication / Metadata / localizedTitle localizedTitle \u00b6 [androidJvm]\\ val localizedTitle : LocalizedString","title":"Localized title"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/localized-title/#localizedtitle","text":"[androidJvm]\\ val localizedTitle : LocalizedString","title":"localizedTitle"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/modified/","text":"// shared / org.readium.r2.shared.publication / Metadata / modified modified \u00b6 [androidJvm]\\ val modified : Date ? = null","title":"Modified"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/modified/#modified","text":"[androidJvm]\\ val modified : Date ? = null","title":"modified"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/narrators/","text":"// shared / org.readium.r2.shared.publication / Metadata / narrators narrators \u00b6 [androidJvm]\\ val narrators : List < Contributor >","title":"Narrators"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/narrators/#narrators","text":"[androidJvm]\\ val narrators : List < Contributor >","title":"narrators"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/number-of-pages/","text":"// shared / org.readium.r2.shared.publication / Metadata / numberOfPages numberOfPages \u00b6 [androidJvm]\\ val numberOfPages : Int ? = null","title":"Number of pages"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/number-of-pages/#numberofpages","text":"[androidJvm]\\ val numberOfPages : Int ? = null","title":"numberOfPages"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/other-metadata/","text":"// shared / org.readium.r2.shared.publication / Metadata / otherMetadata otherMetadata \u00b6 [androidJvm]\\ val otherMetadata : Map < String , Any >","title":"Other metadata"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/other-metadata/#othermetadata","text":"[androidJvm]\\ val otherMetadata : Map < String , Any >","title":"otherMetadata"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/pencilers/","text":"// shared / org.readium.r2.shared.publication / Metadata / pencilers pencilers \u00b6 [androidJvm]\\ val pencilers : List < Contributor >","title":"Pencilers"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/pencilers/#pencilers","text":"[androidJvm]\\ val pencilers : List < Contributor >","title":"pencilers"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/published/","text":"// shared / org.readium.r2.shared.publication / Metadata / published published \u00b6 [androidJvm]\\ val published : Date ? = null","title":"Published"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/published/#published","text":"[androidJvm]\\ val published : Date ? = null","title":"published"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/publishers/","text":"// shared / org.readium.r2.shared.publication / Metadata / publishers publishers \u00b6 [androidJvm]\\ val publishers : List < Contributor >","title":"Publishers"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/publishers/#publishers","text":"[androidJvm]\\ val publishers : List < Contributor >","title":"publishers"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/reading-progression/","text":"// shared / org.readium.r2.shared.publication / Metadata / readingProgression readingProgression \u00b6 [androidJvm]\\ val readingProgression : ReadingProgression","title":"Reading progression"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/reading-progression/#readingprogression","text":"[androidJvm]\\ val readingProgression : ReadingProgression","title":"readingProgression"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/sort-as/","text":"// shared / org.readium.r2.shared.publication / Metadata / sortAs sortAs \u00b6 [androidJvm]\\ val sortAs : String ? Returns the default translation string for the localizedSortAs .","title":"Sort as"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/sort-as/#sortas","text":"[androidJvm]\\ val sortAs : String ? Returns the default translation string for the localizedSortAs .","title":"sortAs"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/subjects/","text":"// shared / org.readium.r2.shared.publication / Metadata / subjects subjects \u00b6 [androidJvm]\\ val subjects : List < Subject >","title":"Subjects"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/subjects/#subjects","text":"[androidJvm]\\ val subjects : List < Subject >","title":"subjects"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/title/","text":"// shared / org.readium.r2.shared.publication / Metadata / title title \u00b6 [androidJvm]\\ val title : String Returns the default translation string for the localizedTitle .","title":"Title"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/title/#title","text":"[androidJvm]\\ val title : String Returns the default translation string for the localizedTitle .","title":"title"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/to-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / Metadata / toJSON toJSON \u00b6 [androidJvm]\\ open override fun toJSON (): JSONObject Serializes a Metadata to its RWPM JSON representation.","title":"To j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/to-j-s-o-n/#tojson","text":"[androidJvm]\\ open override fun toJSON (): JSONObject Serializes a Metadata to its RWPM JSON representation.","title":"toJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/translators/","text":"// shared / org.readium.r2.shared.publication / Metadata / translators translators \u00b6 [androidJvm]\\ val translators : List < Contributor >","title":"Translators"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/translators/#translators","text":"[androidJvm]\\ val translators : List < Contributor >","title":"translators"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/type/","text":"// shared / org.readium.r2.shared.publication / Metadata / type type \u00b6 [androidJvm]\\ val type : String ? = null","title":"Type"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/type/#type","text":"[androidJvm]\\ val type : String ? = null","title":"type"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/-companion/","text":"// shared / org.readium.r2.shared.publication / Metadata / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): Metadata ? Parses a Metadata from its RWPM JSON representation.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/-companion/#functions","text":"Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): Metadata ? Parses a Metadata from its RWPM JSON representation.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/-companion/from-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / Metadata / Companion / fromJSON fromJSON \u00b6 [androidJvm]\\ fun fromJSON (json: JSONObject ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): Metadata ? Parses a Metadata from its RWPM JSON representation. If the metadata can't be parsed, a warning will be logged with warnings .","title":"From j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-metadata/-companion/from-j-s-o-n/#fromjson","text":"[androidJvm]\\ fun fromJSON (json: JSONObject ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): Metadata ? Parses a Metadata from its RWPM JSON representation. If the metadata can't be parsed, a warning will be logged with warnings .","title":"fromJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-properties/","text":"// shared / org.readium.r2.shared.publication / Properties Properties \u00b6 [androidJvm]\\ data class Properties (otherProperties: Map < String , Any >) : JSONable , Parcelable Properties associated to the linked resource. This is opened for extensions. https://readium.org/webpub-manifest/schema/link.schema.json Constructors \u00b6 Properties [androidJvm] fun Properties (otherProperties: Map < String , Any > = emptyMap()) Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary add [androidJvm] fun add (properties: Map < String , Any >): Properties Makes a copy of this Properties after merging in the given additional other properties . describeContents [androidJvm] abstract fun describeContents (): Int get [androidJvm] operator fun get (key: String ): Any ? Syntactic sugar to access the otherProperties values by subscripting Properties directly. properties[\"price\"] == properties.otherProperties[\"price\"] toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes a Properties to its RWPM JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary otherProperties [androidJvm] val otherProperties : Map < String , Any > Extensions \u00b6 Name Summary archive [androidJvm] val Properties . archive : ArchiveProperties ? Provides information about how the resource is stored in the publication archive. authenticate [androidJvm] val Properties . authenticate : Link ? Indicates that the linked resource supports authentication with the associated Authentication Document. availability [androidJvm] val Properties . availability : Availability ? Indicated the availability of a given resource. clipped [androidJvm] val Properties . clipped : Boolean ? Specifies whether or not the parts of a linked resource that flow out of the viewport are clipped. contains [androidJvm] val Properties . contains : Set < String > Identifies content contained in the linked resource, that cannot be strictly identified using a media type. copies [androidJvm] val Properties . copies : Copies ? Library-specific feature that contains information about the copies that a library has acquired. encryption [androidJvm] val Properties . encryption : Encryption ? Indicates that a resource is encrypted/obfuscated and provides relevant information for decryption. fit [androidJvm] val Properties . fit : Presentation.Fit ? Suggested method for constraining a resource inside the viewport. holds [androidJvm] val Properties . holds : Holds ? Library-specific features when a specific book is unavailable but provides a hold list. indirectAcquisitions [androidJvm] val Properties . indirectAcquisitions : List < Acquisition > Indirect acquisition provides a hint for the expected media type that will be acquired after additional steps. layout [androidJvm] val Properties . layout : EpubLayout ? Hints how the layout of the resource should be presented. numberOfItems [androidJvm] val Properties . numberOfItems : Int ? Provides a hint about the expected number of items returned. orientation [androidJvm] val Properties . orientation : Presentation.Orientation ? Suggested orientation for the device when displaying the linked resource. overflow [androidJvm] val Properties . overflow : Presentation.Overflow ? Suggested method for handling overflow while displaying the linked resource. page [androidJvm] val Properties . page : Presentation.Page ? Indicates how the linked resource should be displayed in a reading environment that displays synthetic spreads. price [androidJvm] val Properties . price : Price ? The price of a publication is tied to its acquisition link. spread [androidJvm] val Properties . spread : Presentation.Spread ? Indicates the condition to be met for the linked resource to be rendered within a synthetic spread.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-properties/#properties","text":"[androidJvm]\\ data class Properties (otherProperties: Map < String , Any >) : JSONable , Parcelable Properties associated to the linked resource. This is opened for extensions. https://readium.org/webpub-manifest/schema/link.schema.json","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-properties/#constructors","text":"Properties [androidJvm] fun Properties (otherProperties: Map < String , Any > = emptyMap())","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-properties/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-properties/#functions","text":"Name Summary add [androidJvm] fun add (properties: Map < String , Any >): Properties Makes a copy of this Properties after merging in the given additional other properties . describeContents [androidJvm] abstract fun describeContents (): Int get [androidJvm] operator fun get (key: String ): Any ? Syntactic sugar to access the otherProperties values by subscripting Properties directly. properties[\"price\"] == properties.otherProperties[\"price\"] toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes a Properties to its RWPM JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-properties/#properties_1","text":"Name Summary otherProperties [androidJvm] val otherProperties : Map < String , Any >","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-properties/#extensions","text":"Name Summary archive [androidJvm] val Properties . archive : ArchiveProperties ? Provides information about how the resource is stored in the publication archive. authenticate [androidJvm] val Properties . authenticate : Link ? Indicates that the linked resource supports authentication with the associated Authentication Document. availability [androidJvm] val Properties . availability : Availability ? Indicated the availability of a given resource. clipped [androidJvm] val Properties . clipped : Boolean ? Specifies whether or not the parts of a linked resource that flow out of the viewport are clipped. contains [androidJvm] val Properties . contains : Set < String > Identifies content contained in the linked resource, that cannot be strictly identified using a media type. copies [androidJvm] val Properties . copies : Copies ? Library-specific feature that contains information about the copies that a library has acquired. encryption [androidJvm] val Properties . encryption : Encryption ? Indicates that a resource is encrypted/obfuscated and provides relevant information for decryption. fit [androidJvm] val Properties . fit : Presentation.Fit ? Suggested method for constraining a resource inside the viewport. holds [androidJvm] val Properties . holds : Holds ? Library-specific features when a specific book is unavailable but provides a hold list. indirectAcquisitions [androidJvm] val Properties . indirectAcquisitions : List < Acquisition > Indirect acquisition provides a hint for the expected media type that will be acquired after additional steps. layout [androidJvm] val Properties . layout : EpubLayout ? Hints how the layout of the resource should be presented. numberOfItems [androidJvm] val Properties . numberOfItems : Int ? Provides a hint about the expected number of items returned. orientation [androidJvm] val Properties . orientation : Presentation.Orientation ? Suggested orientation for the device when displaying the linked resource. overflow [androidJvm] val Properties . overflow : Presentation.Overflow ? Suggested method for handling overflow while displaying the linked resource. page [androidJvm] val Properties . page : Presentation.Page ? Indicates how the linked resource should be displayed in a reading environment that displays synthetic spreads. price [androidJvm] val Properties . price : Price ? The price of a publication is tied to its acquisition link. spread [androidJvm] val Properties . spread : Presentation.Spread ? Indicates the condition to be met for the linked resource to be rendered within a synthetic spread.","title":"Extensions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-properties/-properties/","text":"// shared / org.readium.r2.shared.publication / Properties / Properties Properties \u00b6 [androidJvm]\\ fun Properties (otherProperties: Map < String , Any > = emptyMap())","title":" properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-properties/-properties/#properties","text":"[androidJvm]\\ fun Properties (otherProperties: Map < String , Any > = emptyMap())","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-properties/add/","text":"// shared / org.readium.r2.shared.publication / Properties / add add \u00b6 [androidJvm]\\ fun add (properties: Map < String , Any >): Properties Makes a copy of this Properties after merging in the given additional other properties .","title":"Add"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-properties/add/#add","text":"[androidJvm]\\ fun add (properties: Map < String , Any >): Properties Makes a copy of this Properties after merging in the given additional other properties .","title":"add"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-properties/get/","text":"// shared / org.readium.r2.shared.publication / Properties / get get \u00b6 [androidJvm]\\ operator fun get (key: String ): Any ? Syntactic sugar to access the otherProperties values by subscripting Properties directly. properties[\"price\"] == properties.otherProperties[\"price\"]","title":"Get"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-properties/get/#get","text":"[androidJvm]\\ operator fun get (key: String ): Any ? Syntactic sugar to access the otherProperties values by subscripting Properties directly. properties[\"price\"] == properties.otherProperties[\"price\"]","title":"get"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-properties/other-properties/","text":"// shared / org.readium.r2.shared.publication / Properties / otherProperties otherProperties \u00b6 [androidJvm]\\ val otherProperties : Map < String , Any >","title":"Other properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-properties/other-properties/#otherproperties","text":"[androidJvm]\\ val otherProperties : Map < String , Any >","title":"otherProperties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-properties/to-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / Properties / toJSON toJSON \u00b6 [androidJvm]\\ open override fun toJSON (): JSONObject Serializes a Properties to its RWPM JSON representation.","title":"To j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-properties/to-j-s-o-n/#tojson","text":"[androidJvm]\\ open override fun toJSON (): JSONObject Serializes a Properties to its RWPM JSON representation.","title":"toJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-properties/-companion/","text":"// shared / org.readium.r2.shared.publication / Properties / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?): Properties Creates a Properties from its RWPM JSON representation.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-properties/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-properties/-companion/#functions","text":"Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?): Properties Creates a Properties from its RWPM JSON representation.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-properties/-companion/from-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / Properties / Companion / fromJSON fromJSON \u00b6 [androidJvm]\\ fun fromJSON (json: JSONObject ?): Properties Creates a Properties from its RWPM JSON representation.","title":"From j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-properties/-companion/from-j-s-o-n/#fromjson","text":"[androidJvm]\\ fun fromJSON (json: JSONObject ?): Properties Creates a Properties from its RWPM JSON representation.","title":"fromJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/","text":"// shared / org.readium.r2.shared.publication / Publication Publication \u00b6 [androidJvm]\\ class Publication (manifest: Manifest , fetcher: Fetcher , servicesBuilder: Publication.ServicesBuilder , positionsFactory: Publication.PositionListFactory ?, userSettingsUIPreset: MutableMap < ReadiumCSSName , Boolean >, cssStyle: String ?, internalData: MutableMap < String , String >) The Publication shared model is the entry-point for all the metadata and services related to a Readium publication. Parameters \u00b6 androidJvm manifest The manifest holding the publication metadata extracted from the publication file. fetcher The underlying fetcher used to read publication resources. The default implementation returns Resource.Exception.NotFound for all HREFs. servicesBuilder Holds the list of service factories used to create the instances of Publication.Service attached to this Publication. positionsFactory Factory used to build lazily the positions . Constructors \u00b6 Publication [androidJvm] fun Publication (manifest: Manifest , fetcher: Fetcher = EmptyFetcher(), servicesBuilder: Publication.ServicesBuilder = ServicesBuilder(), positionsFactory: Publication.PositionListFactory ? = null, userSettingsUIPreset: MutableMap < ReadiumCSSName , Boolean > = mutableMapOf(), cssStyle: String ? = null, internalData: MutableMap < String , String > = mutableMapOf()) Types \u00b6 Name Summary Builder [androidJvm] class Builder (manifest: Manifest , fetcher: Fetcher , servicesBuilder: Publication.ServicesBuilder ) Builds a Publication from its components. Companion [androidJvm] object Companion EXTENSION [androidJvm] enum EXTENSION : Enum < Publication.EXTENSION > OpeningException [androidJvm] sealed class OpeningException : UserException Errors occurring while opening a Publication. Service [androidJvm] interface Service Base interface to be implemented by all publication services. ServicesBuilder [androidJvm] class ServicesBuilder Builds a list of Publication.Service from a collection of service factories. TYPE [androidJvm] enum TYPE : Enum < Publication.TYPE > Functions \u00b6 Name Summary close [androidJvm] fun close (): Job Closes any opened resource associated with the Publication , including services. findService [androidJvm] fun < T : Publication.Service > findService (serviceType: KClass < T >): T ? Returns the first publication service that is an instance of klass. findServices [androidJvm] fun < T : Publication.Service > findServices (serviceType: KClass < T >): List < T > Returns all the publication services that are instances of klass. get [androidJvm] fun get (link: Link ): Resource Returns the resource targeted by the given non-templated link . linksWithRel [androidJvm] fun linksWithRel (rel: String ): List < Link > Finds all Link s having the given rel in the publications's links. linkWithHref [androidJvm] fun linkWithHref (href: String ): Link ? Finds the first Link with the given HREF in the publication's links. linkWithRel [androidJvm] fun linkWithRel (rel: String ): Link ? Finds the first Link having the given rel in the publications's links. setSelfLink [androidJvm] fun setSelfLink (href: String ) Sets the URL where this Publication 's RWPM manifest is served. Properties \u00b6 Name Summary baseUrl [androidJvm] val baseUrl : URL ? The URL where this publication is served, computed from the Link with self relation. context [androidJvm] val context : List < String > cssStyle [androidJvm] var cssStyle : String ? = null jsonManifest [androidJvm] val jsonManifest : String Returns the RWPM JSON representation for this Publication 's manifest, as a string. links [androidJvm] val links : List < Link > metadata [androidJvm] val metadata : Metadata readingOrder [androidJvm] val readingOrder : List < Link > Identifies a list of resources in reading order for the publication. resources [androidJvm] val resources : List < Link > Identifies resources that are necessary for rendering the publication. subcollections [androidJvm] val subcollections : Map < String , List < PublicationCollection >> tableOfContents [androidJvm] val tableOfContents : List < Link > Identifies the collection that contains a table of contents. type [androidJvm] var type : Publication.TYPE userSettingsUIPreset [androidJvm] var userSettingsUIPreset : MutableMap < ReadiumCSSName , Boolean > Extensions \u00b6 Name Summary cover [androidJvm] suspend fun Publication . cover (): Bitmap ? Returns the publication cover as a Bitmap at its maximum size. coverFitting [androidJvm] suspend fun Publication . coverFitting (maxSize: Size ): Bitmap ? Returns the publication cover as a Bitmap , scaled down to fit the given maxSize . credentials [androidJvm] val Publication . credentials : String ? Credentials used to unlock this Publication . images [androidJvm] val Publication . images : List < Link > isProtected [androidJvm] val Publication . isProtected : Boolean Returns whether this Publication is protected by a Content Protection technology. isRestricted [androidJvm] val Publication . isRestricted : Boolean Whether the Publication has a restricted access to its resources, and can't be rendered in a Navigator. isSearchable [androidJvm] val Publication . isSearchable : Boolean Indicates whether the content of this publication can be searched. landmarks [androidJvm] val Publication . landmarks : List < Link > Identifies fundamental structural components of the publication in order to enable Reading Systems to provide the User efficient access to them. listOfAudioClips [androidJvm] val Publication . listOfAudioClips : List < Link > listOfIllustrations [androidJvm] val Publication . listOfIllustrations : List < Link > listOfTables [androidJvm] val Publication . listOfTables : List < Link > listOfVideoClips [androidJvm] val Publication . listOfVideoClips : List < Link > locate [androidJvm] suspend fun Publication . locate (locator: Locator ): Locator ? Locates the target of the given locator . locateProgression [androidJvm] suspend fun Publication . locateProgression (totalProgression: Double ): Locator ? Locates the target at the given progression relative to the whole publication. pageList [androidJvm] val Publication . pageList : List < Link > Provides navigation to positions in the Publication content that correspond to the locations of page boundaries present in a print source being represented by this EPUB Publication. positions [androidJvm] suspend fun Publication . positions (): List < Locator > Returns the list of all the positions in the publication. positionsByReadingOrder [androidJvm] suspend fun Publication . positionsByReadingOrder (): List < List < Locator >> Returns the list of all the positions in the publication, grouped by the resource reading order index. protectionError [androidJvm] val Publication . protectionError : UserException ? The error raised when trying to unlock the Publication , if any. protectionLocalizedName [androidJvm] val Publication . protectionLocalizedName : LocalizedString ? User-facing localized name for this Content Protection, e.g. \"Readium LCP\". It could be used in a sentence such as \"Protected by {name}\". protectionName [androidJvm] val Publication . protectionName : String ? User-facing name for this Content Protection, e.g. \"Readium LCP\". It could be used in a sentence such as \"Protected by {name}\". protectionScheme [androidJvm] val Publication . protectionScheme : ContentProtection.Scheme ? Known technology for this type of Content Protection. rights [androidJvm] val Publication . rights : ContentProtectionService.UserRights Manages consumption of user rights and permissions. search [androidJvm] suspend fun Publication . search (query: String , options: SearchService.Options ? = null): SearchTry < SearchIterator > Starts a new search through the publication content, with the given query . searchOptions [androidJvm] val Publication . searchOptions : SearchService.Options Default value for the search options of this publication.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/#publication","text":"[androidJvm]\\ class Publication (manifest: Manifest , fetcher: Fetcher , servicesBuilder: Publication.ServicesBuilder , positionsFactory: Publication.PositionListFactory ?, userSettingsUIPreset: MutableMap < ReadiumCSSName , Boolean >, cssStyle: String ?, internalData: MutableMap < String , String >) The Publication shared model is the entry-point for all the metadata and services related to a Readium publication.","title":"Publication"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/#parameters","text":"androidJvm manifest The manifest holding the publication metadata extracted from the publication file. fetcher The underlying fetcher used to read publication resources. The default implementation returns Resource.Exception.NotFound for all HREFs. servicesBuilder Holds the list of service factories used to create the instances of Publication.Service attached to this Publication. positionsFactory Factory used to build lazily the positions .","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/#constructors","text":"Publication [androidJvm] fun Publication (manifest: Manifest , fetcher: Fetcher = EmptyFetcher(), servicesBuilder: Publication.ServicesBuilder = ServicesBuilder(), positionsFactory: Publication.PositionListFactory ? = null, userSettingsUIPreset: MutableMap < ReadiumCSSName , Boolean > = mutableMapOf(), cssStyle: String ? = null, internalData: MutableMap < String , String > = mutableMapOf())","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/#types","text":"Name Summary Builder [androidJvm] class Builder (manifest: Manifest , fetcher: Fetcher , servicesBuilder: Publication.ServicesBuilder ) Builds a Publication from its components. Companion [androidJvm] object Companion EXTENSION [androidJvm] enum EXTENSION : Enum < Publication.EXTENSION > OpeningException [androidJvm] sealed class OpeningException : UserException Errors occurring while opening a Publication. Service [androidJvm] interface Service Base interface to be implemented by all publication services. ServicesBuilder [androidJvm] class ServicesBuilder Builds a list of Publication.Service from a collection of service factories. TYPE [androidJvm] enum TYPE : Enum < Publication.TYPE >","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/#functions","text":"Name Summary close [androidJvm] fun close (): Job Closes any opened resource associated with the Publication , including services. findService [androidJvm] fun < T : Publication.Service > findService (serviceType: KClass < T >): T ? Returns the first publication service that is an instance of klass. findServices [androidJvm] fun < T : Publication.Service > findServices (serviceType: KClass < T >): List < T > Returns all the publication services that are instances of klass. get [androidJvm] fun get (link: Link ): Resource Returns the resource targeted by the given non-templated link . linksWithRel [androidJvm] fun linksWithRel (rel: String ): List < Link > Finds all Link s having the given rel in the publications's links. linkWithHref [androidJvm] fun linkWithHref (href: String ): Link ? Finds the first Link with the given HREF in the publication's links. linkWithRel [androidJvm] fun linkWithRel (rel: String ): Link ? Finds the first Link having the given rel in the publications's links. setSelfLink [androidJvm] fun setSelfLink (href: String ) Sets the URL where this Publication 's RWPM manifest is served.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/#properties","text":"Name Summary baseUrl [androidJvm] val baseUrl : URL ? The URL where this publication is served, computed from the Link with self relation. context [androidJvm] val context : List < String > cssStyle [androidJvm] var cssStyle : String ? = null jsonManifest [androidJvm] val jsonManifest : String Returns the RWPM JSON representation for this Publication 's manifest, as a string. links [androidJvm] val links : List < Link > metadata [androidJvm] val metadata : Metadata readingOrder [androidJvm] val readingOrder : List < Link > Identifies a list of resources in reading order for the publication. resources [androidJvm] val resources : List < Link > Identifies resources that are necessary for rendering the publication. subcollections [androidJvm] val subcollections : Map < String , List < PublicationCollection >> tableOfContents [androidJvm] val tableOfContents : List < Link > Identifies the collection that contains a table of contents. type [androidJvm] var type : Publication.TYPE userSettingsUIPreset [androidJvm] var userSettingsUIPreset : MutableMap < ReadiumCSSName , Boolean >","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/#extensions","text":"Name Summary cover [androidJvm] suspend fun Publication . cover (): Bitmap ? Returns the publication cover as a Bitmap at its maximum size. coverFitting [androidJvm] suspend fun Publication . coverFitting (maxSize: Size ): Bitmap ? Returns the publication cover as a Bitmap , scaled down to fit the given maxSize . credentials [androidJvm] val Publication . credentials : String ? Credentials used to unlock this Publication . images [androidJvm] val Publication . images : List < Link > isProtected [androidJvm] val Publication . isProtected : Boolean Returns whether this Publication is protected by a Content Protection technology. isRestricted [androidJvm] val Publication . isRestricted : Boolean Whether the Publication has a restricted access to its resources, and can't be rendered in a Navigator. isSearchable [androidJvm] val Publication . isSearchable : Boolean Indicates whether the content of this publication can be searched. landmarks [androidJvm] val Publication . landmarks : List < Link > Identifies fundamental structural components of the publication in order to enable Reading Systems to provide the User efficient access to them. listOfAudioClips [androidJvm] val Publication . listOfAudioClips : List < Link > listOfIllustrations [androidJvm] val Publication . listOfIllustrations : List < Link > listOfTables [androidJvm] val Publication . listOfTables : List < Link > listOfVideoClips [androidJvm] val Publication . listOfVideoClips : List < Link > locate [androidJvm] suspend fun Publication . locate (locator: Locator ): Locator ? Locates the target of the given locator . locateProgression [androidJvm] suspend fun Publication . locateProgression (totalProgression: Double ): Locator ? Locates the target at the given progression relative to the whole publication. pageList [androidJvm] val Publication . pageList : List < Link > Provides navigation to positions in the Publication content that correspond to the locations of page boundaries present in a print source being represented by this EPUB Publication. positions [androidJvm] suspend fun Publication . positions (): List < Locator > Returns the list of all the positions in the publication. positionsByReadingOrder [androidJvm] suspend fun Publication . positionsByReadingOrder (): List < List < Locator >> Returns the list of all the positions in the publication, grouped by the resource reading order index. protectionError [androidJvm] val Publication . protectionError : UserException ? The error raised when trying to unlock the Publication , if any. protectionLocalizedName [androidJvm] val Publication . protectionLocalizedName : LocalizedString ? User-facing localized name for this Content Protection, e.g. \"Readium LCP\". It could be used in a sentence such as \"Protected by {name}\". protectionName [androidJvm] val Publication . protectionName : String ? User-facing name for this Content Protection, e.g. \"Readium LCP\". It could be used in a sentence such as \"Protected by {name}\". protectionScheme [androidJvm] val Publication . protectionScheme : ContentProtection.Scheme ? Known technology for this type of Content Protection. rights [androidJvm] val Publication . rights : ContentProtectionService.UserRights Manages consumption of user rights and permissions. search [androidJvm] suspend fun Publication . search (query: String , options: SearchService.Options ? = null): SearchTry < SearchIterator > Starts a new search through the publication content, with the given query . searchOptions [androidJvm] val Publication . searchOptions : SearchService.Options Default value for the search options of this publication.","title":"Extensions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-publication/","text":"// shared / org.readium.r2.shared.publication / Publication / Publication Publication \u00b6 [androidJvm]\\ fun Publication (manifest: Manifest , fetcher: Fetcher = EmptyFetcher(), servicesBuilder: Publication.ServicesBuilder = ServicesBuilder(), positionsFactory: Publication.PositionListFactory ? = null, userSettingsUIPreset: MutableMap < ReadiumCSSName , Boolean > = mutableMapOf(), cssStyle: String ? = null, internalData: MutableMap < String , String > = mutableMapOf()) Parameters \u00b6 androidJvm manifest The manifest holding the publication metadata extracted from the publication file. fetcher The underlying fetcher used to read publication resources. The default implementation returns Resource.Exception.NotFound for all HREFs. servicesBuilder Holds the list of service factories used to create the instances of Publication.Service attached to this Publication. positionsFactory Factory used to build lazily the positions .","title":" publication"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-publication/#publication","text":"[androidJvm]\\ fun Publication (manifest: Manifest , fetcher: Fetcher = EmptyFetcher(), servicesBuilder: Publication.ServicesBuilder = ServicesBuilder(), positionsFactory: Publication.PositionListFactory ? = null, userSettingsUIPreset: MutableMap < ReadiumCSSName , Boolean > = mutableMapOf(), cssStyle: String ? = null, internalData: MutableMap < String , String > = mutableMapOf())","title":"Publication"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-publication/#parameters","text":"androidJvm manifest The manifest holding the publication metadata extracted from the publication file. fetcher The underlying fetcher used to read publication resources. The default implementation returns Resource.Exception.NotFound for all HREFs. servicesBuilder Holds the list of service factories used to create the instances of Publication.Service attached to this Publication. positionsFactory Factory used to build lazily the positions .","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/base-url/","text":"// shared / org.readium.r2.shared.publication / Publication / baseUrl baseUrl \u00b6 [androidJvm]\\ val baseUrl : URL ? The URL where this publication is served, computed from the Link with self relation.","title":"Base url"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/base-url/#baseurl","text":"[androidJvm]\\ val baseUrl : URL ? The URL where this publication is served, computed from the Link with self relation.","title":"baseUrl"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/close/","text":"// shared / org.readium.r2.shared.publication / Publication / close close \u00b6 [androidJvm]\\ fun close (): Job Closes any opened resource associated with the Publication , including services.","title":"Close"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/close/#close","text":"[androidJvm]\\ fun close (): Job Closes any opened resource associated with the Publication , including services.","title":"close"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/context/","text":"// shared / org.readium.r2.shared.publication / Publication / context context \u00b6 [androidJvm]\\ val context : List < String >","title":"Context"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/context/#context","text":"[androidJvm]\\ val context : List < String >","title":"context"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/css-style/","text":"// shared / org.readium.r2.shared.publication / Publication / cssStyle cssStyle \u00b6 [androidJvm]\\ var cssStyle : String ? = null","title":"Css style"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/css-style/#cssstyle","text":"[androidJvm]\\ var cssStyle : String ? = null","title":"cssStyle"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/find-service/","text":"// shared / org.readium.r2.shared.publication / Publication / findService findService \u00b6 [androidJvm]\\ fun < T : Publication.Service > findService (serviceType: KClass < T >): T ? Returns the first publication service that is an instance of klass.","title":"Find service"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/find-service/#findservice","text":"[androidJvm]\\ fun < T : Publication.Service > findService (serviceType: KClass < T >): T ? Returns the first publication service that is an instance of klass.","title":"findService"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/find-services/","text":"// shared / org.readium.r2.shared.publication / Publication / findServices findServices \u00b6 [androidJvm]\\ fun < T : Publication.Service > findServices (serviceType: KClass < T >): List < T > Returns all the publication services that are instances of klass.","title":"Find services"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/find-services/#findservices","text":"[androidJvm]\\ fun < T : Publication.Service > findServices (serviceType: KClass < T >): List < T > Returns all the publication services that are instances of klass.","title":"findServices"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/get/","text":"// shared / org.readium.r2.shared.publication / Publication / get get \u00b6 [androidJvm]\\ fun get (link: Link ): Resource Returns the resource targeted by the given non-templated link .","title":"Get"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/get/#get","text":"[androidJvm]\\ fun get (link: Link ): Resource Returns the resource targeted by the given non-templated link .","title":"get"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/json-manifest/","text":"// shared / org.readium.r2.shared.publication / Publication / jsonManifest jsonManifest \u00b6 [androidJvm]\\ val jsonManifest : String Returns the RWPM JSON representation for this Publication 's manifest, as a string.","title":"Json manifest"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/json-manifest/#jsonmanifest","text":"[androidJvm]\\ val jsonManifest : String Returns the RWPM JSON representation for this Publication 's manifest, as a string.","title":"jsonManifest"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/link-with-href/","text":"// shared / org.readium.r2.shared.publication / Publication / linkWithHref linkWithHref \u00b6 [androidJvm]\\ fun linkWithHref (href: String ): Link ? Finds the first Link with the given HREF in the publication's links. Searches through (in order) readingOrder , resources and links recursively following alternate and children links. If there's no match, try again after removing any query parameter and anchor from the given href .","title":"Link with href"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/link-with-href/#linkwithhref","text":"[androidJvm]\\ fun linkWithHref (href: String ): Link ? Finds the first Link with the given HREF in the publication's links. Searches through (in order) readingOrder , resources and links recursively following alternate and children links. If there's no match, try again after removing any query parameter and anchor from the given href .","title":"linkWithHref"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/link-with-rel/","text":"// shared / org.readium.r2.shared.publication / Publication / linkWithRel linkWithRel \u00b6 [androidJvm]\\ fun linkWithRel (rel: String ): Link ? Finds the first Link having the given rel in the publications's links.","title":"Link with rel"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/link-with-rel/#linkwithrel","text":"[androidJvm]\\ fun linkWithRel (rel: String ): Link ? Finds the first Link having the given rel in the publications's links.","title":"linkWithRel"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/links-with-rel/","text":"// shared / org.readium.r2.shared.publication / Publication / linksWithRel linksWithRel \u00b6 [androidJvm]\\ fun linksWithRel (rel: String ): List < Link > Finds all Link s having the given rel in the publications's links.","title":"Links with rel"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/links-with-rel/#linkswithrel","text":"[androidJvm]\\ fun linksWithRel (rel: String ): List < Link > Finds all Link s having the given rel in the publications's links.","title":"linksWithRel"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/links/","text":"// shared / org.readium.r2.shared.publication / Publication / links links \u00b6 [androidJvm]\\ val links : List < Link >","title":"Links"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/links/#links","text":"[androidJvm]\\ val links : List < Link >","title":"links"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/metadata/","text":"// shared / org.readium.r2.shared.publication / Publication / metadata metadata \u00b6 [androidJvm]\\ val metadata : Metadata","title":"Metadata"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/metadata/#metadata","text":"[androidJvm]\\ val metadata : Metadata","title":"metadata"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/reading-order/","text":"// shared / org.readium.r2.shared.publication / Publication / readingOrder readingOrder \u00b6 [androidJvm]\\ val readingOrder : List < Link > Identifies a list of resources in reading order for the publication.","title":"Reading order"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/reading-order/#readingorder","text":"[androidJvm]\\ val readingOrder : List < Link > Identifies a list of resources in reading order for the publication.","title":"readingOrder"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/resources/","text":"// shared / org.readium.r2.shared.publication / Publication / resources resources \u00b6 [androidJvm]\\ val resources : List < Link > Identifies resources that are necessary for rendering the publication.","title":"Resources"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/resources/#resources","text":"[androidJvm]\\ val resources : List < Link > Identifies resources that are necessary for rendering the publication.","title":"resources"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/set-self-link/","text":"// shared / org.readium.r2.shared.publication / Publication / setSelfLink setSelfLink \u00b6 [androidJvm]\\ fun setSelfLink (href: String ) Sets the URL where this Publication 's RWPM manifest is served.","title":"Set self link"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/set-self-link/#setselflink","text":"[androidJvm]\\ fun setSelfLink (href: String ) Sets the URL where this Publication 's RWPM manifest is served.","title":"setSelfLink"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/subcollections/","text":"// shared / org.readium.r2.shared.publication / Publication / subcollections subcollections \u00b6 [androidJvm]\\ val subcollections : Map < String , List < PublicationCollection >>","title":"Subcollections"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/subcollections/#subcollections","text":"[androidJvm]\\ val subcollections : Map < String , List < PublicationCollection >>","title":"subcollections"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/table-of-contents/","text":"// shared / org.readium.r2.shared.publication / Publication / tableOfContents tableOfContents \u00b6 [androidJvm]\\ val tableOfContents : List < Link > Identifies the collection that contains a table of contents.","title":"Table of contents"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/table-of-contents/#tableofcontents","text":"[androidJvm]\\ val tableOfContents : List < Link > Identifies the collection that contains a table of contents.","title":"tableOfContents"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/type/","text":"// shared / org.readium.r2.shared.publication / Publication / type type \u00b6 [androidJvm]\\ var type : Publication.TYPE","title":"Type"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/type/#type","text":"[androidJvm]\\ var type : Publication.TYPE","title":"type"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/user-settings-u-i-preset/","text":"// shared / org.readium.r2.shared.publication / Publication / userSettingsUIPreset userSettingsUIPreset \u00b6 [androidJvm]\\ var userSettingsUIPreset : MutableMap < ReadiumCSSName , Boolean >","title":"User settings u i preset"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/user-settings-u-i-preset/#usersettingsuipreset","text":"[androidJvm]\\ var userSettingsUIPreset : MutableMap < ReadiumCSSName , Boolean >","title":"userSettingsUIPreset"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-builder/","text":"// shared / org.readium.r2.shared.publication / Publication / Builder Builder \u00b6 [androidJvm]\\ class Builder (manifest: Manifest , fetcher: Fetcher , servicesBuilder: Publication.ServicesBuilder ) Builds a Publication from its components. A Publication's construction is distributed over the Streamer and its parsers, so a builder is useful to pass the parts around. Constructors \u00b6 Builder [androidJvm] fun Builder (manifest: Manifest , fetcher: Fetcher , servicesBuilder: Publication.ServicesBuilder = ServicesBuilder()) Functions \u00b6 Name Summary build [androidJvm] fun build (): Publication Properties \u00b6 Name Summary fetcher [androidJvm] var fetcher : Fetcher manifest [androidJvm] var manifest : Manifest servicesBuilder [androidJvm] var servicesBuilder : Publication.ServicesBuilder","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-builder/#builder","text":"[androidJvm]\\ class Builder (manifest: Manifest , fetcher: Fetcher , servicesBuilder: Publication.ServicesBuilder ) Builds a Publication from its components. A Publication's construction is distributed over the Streamer and its parsers, so a builder is useful to pass the parts around.","title":"Builder"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-builder/#constructors","text":"Builder [androidJvm] fun Builder (manifest: Manifest , fetcher: Fetcher , servicesBuilder: Publication.ServicesBuilder = ServicesBuilder())","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-builder/#functions","text":"Name Summary build [androidJvm] fun build (): Publication","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-builder/#properties","text":"Name Summary fetcher [androidJvm] var fetcher : Fetcher manifest [androidJvm] var manifest : Manifest servicesBuilder [androidJvm] var servicesBuilder : Publication.ServicesBuilder","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-builder/-builder/","text":"// shared / org.readium.r2.shared.publication / Publication / Builder / Builder Builder \u00b6 [androidJvm]\\ fun Builder (manifest: Manifest , fetcher: Fetcher , servicesBuilder: Publication.ServicesBuilder = ServicesBuilder())","title":" builder"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-builder/-builder/#builder","text":"[androidJvm]\\ fun Builder (manifest: Manifest , fetcher: Fetcher , servicesBuilder: Publication.ServicesBuilder = ServicesBuilder())","title":"Builder"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-builder/build/","text":"// shared / org.readium.r2.shared.publication / Publication / Builder / build build \u00b6 [androidJvm]\\ fun build (): Publication","title":"Build"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-builder/build/#build","text":"[androidJvm]\\ fun build (): Publication","title":"build"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-builder/fetcher/","text":"// shared / org.readium.r2.shared.publication / Publication / Builder / fetcher fetcher \u00b6 [androidJvm]\\ var fetcher : Fetcher","title":"Fetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-builder/fetcher/#fetcher","text":"[androidJvm]\\ var fetcher : Fetcher","title":"fetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-builder/manifest/","text":"// shared / org.readium.r2.shared.publication / Publication / Builder / manifest manifest \u00b6 [androidJvm]\\ var manifest : Manifest","title":"Manifest"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-builder/manifest/#manifest","text":"[androidJvm]\\ var manifest : Manifest","title":"manifest"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-builder/services-builder/","text":"// shared / org.readium.r2.shared.publication / Publication / Builder / servicesBuilder servicesBuilder \u00b6 [androidJvm]\\ var servicesBuilder : Publication.ServicesBuilder","title":"Services builder"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-builder/services-builder/#servicesbuilder","text":"[androidJvm]\\ var servicesBuilder : Publication.ServicesBuilder","title":"servicesBuilder"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-companion/","text":"// shared / org.readium.r2.shared.publication / Publication / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary localBaseUrlOf [androidJvm] fun localBaseUrlOf (filename: String , port: Int ): String Creates the base URL for a Publication locally served through HTTP, from the publication's filename and the HTTP server port . localUrlOf [androidJvm] fun localUrlOf (filename: String , port: Int , href: String ): String Gets the absolute URL of a resource locally served through HTTP.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-companion/#functions","text":"Name Summary localBaseUrlOf [androidJvm] fun localBaseUrlOf (filename: String , port: Int ): String Creates the base URL for a Publication locally served through HTTP, from the publication's filename and the HTTP server port . localUrlOf [androidJvm] fun localUrlOf (filename: String , port: Int , href: String ): String Gets the absolute URL of a resource locally served through HTTP.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-companion/local-base-url-of/","text":"// shared / org.readium.r2.shared.publication / Publication / Companion / localBaseUrlOf localBaseUrlOf \u00b6 [androidJvm]\\ fun localBaseUrlOf (filename: String , port: Int ): String Creates the base URL for a Publication locally served through HTTP, from the publication's filename and the HTTP server port . Note: This is used for backward-compatibility, but ideally this should be handled by the Server, and set in the self Link . Unfortunately, the self Link is not available in the navigator at the moment without changing the code in reading apps.","title":"Local base url of"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-companion/local-base-url-of/#localbaseurlof","text":"[androidJvm]\\ fun localBaseUrlOf (filename: String , port: Int ): String Creates the base URL for a Publication locally served through HTTP, from the publication's filename and the HTTP server port . Note: This is used for backward-compatibility, but ideally this should be handled by the Server, and set in the self Link . Unfortunately, the self Link is not available in the navigator at the moment without changing the code in reading apps.","title":"localBaseUrlOf"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-companion/local-url-of/","text":"// shared / org.readium.r2.shared.publication / Publication / Companion / localUrlOf localUrlOf \u00b6 [androidJvm]\\ fun localUrlOf (filename: String , port: Int , href: String ): String Gets the absolute URL of a resource locally served through HTTP.","title":"Local url of"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-companion/local-url-of/#localurlof","text":"[androidJvm]\\ fun localUrlOf (filename: String , port: Int , href: String ): String Gets the absolute URL of a resource locally served through HTTP.","title":"localUrlOf"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/","text":"// shared / org.readium.r2.shared.publication / Publication / EXTENSION EXTENSION \u00b6 [androidJvm]\\ enum EXTENSION : Enum < Publication.EXTENSION > Entries \u00b6 UNKNOWN [androidJvm] UNKNOWN (\"\") LCPL [androidJvm] LCPL (\".lcpl\") AUDIO [androidJvm] AUDIO (\".audiobook\") DIVINA [androidJvm] DIVINA (\".divina\") JSON [androidJvm] JSON (\".json\") CBZ [androidJvm] CBZ (\".cbz\") EPUB [androidJvm] EPUB (\".epub\") Types \u00b6 Name Summary Companion [androidJvm] object Companion Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] var value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/#extension","text":"[androidJvm]\\ enum EXTENSION : Enum < Publication.EXTENSION >","title":"EXTENSION"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/#entries","text":"UNKNOWN [androidJvm] UNKNOWN (\"\") LCPL [androidJvm] LCPL (\".lcpl\") AUDIO [androidJvm] AUDIO (\".audiobook\") DIVINA [androidJvm] DIVINA (\".divina\") JSON [androidJvm] JSON (\".json\") CBZ [androidJvm] CBZ (\".cbz\") EPUB [androidJvm] EPUB (\".epub\")","title":"Entries"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] var value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/value/","text":"// shared / org.readium.r2.shared.publication / Publication / EXTENSION / value value \u00b6 [androidJvm]\\ var value : String","title":"Value"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/value/#value","text":"[androidJvm]\\ var value : String","title":"value"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/-a-u-d-i-o/","text":"// shared / org.readium.r2.shared.publication / Publication / EXTENSION / AUDIO AUDIO \u00b6 [androidJvm]\\ AUDIO (\".audiobook\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] var value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/-a-u-d-i-o/#audio","text":"[androidJvm]\\ AUDIO (\".audiobook\")","title":"AUDIO"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/-a-u-d-i-o/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] var value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/-c-b-z/","text":"// shared / org.readium.r2.shared.publication / Publication / EXTENSION / CBZ CBZ \u00b6 [androidJvm]\\ CBZ (\".cbz\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] var value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/-c-b-z/#cbz","text":"[androidJvm]\\ CBZ (\".cbz\")","title":"CBZ"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/-c-b-z/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] var value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/-companion/","text":"// shared / org.readium.r2.shared.publication / Publication / EXTENSION / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary fromString [androidJvm] fun fromString (type: String ): Publication.EXTENSION ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/-companion/#functions","text":"Name Summary fromString [androidJvm] fun fromString (type: String ): Publication.EXTENSION ?","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/-companion/from-string/","text":"// shared / org.readium.r2.shared.publication / Publication / EXTENSION / Companion / fromString fromString \u00b6 [androidJvm]\\ fun fromString (type: String ): Publication.EXTENSION ?","title":"From string"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/-companion/from-string/#fromstring","text":"[androidJvm]\\ fun fromString (type: String ): Publication.EXTENSION ?","title":"fromString"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/-d-i-v-i-n-a/","text":"// shared / org.readium.r2.shared.publication / Publication / EXTENSION / DIVINA DIVINA \u00b6 [androidJvm]\\ DIVINA (\".divina\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] var value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/-d-i-v-i-n-a/#divina","text":"[androidJvm]\\ DIVINA (\".divina\")","title":"DIVINA"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/-d-i-v-i-n-a/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] var value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/-e-p-u-b/","text":"// shared / org.readium.r2.shared.publication / Publication / EXTENSION / EPUB EPUB \u00b6 [androidJvm]\\ EPUB (\".epub\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] var value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/-e-p-u-b/#epub","text":"[androidJvm]\\ EPUB (\".epub\")","title":"EPUB"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/-e-p-u-b/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] var value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / Publication / EXTENSION / JSON JSON \u00b6 [androidJvm]\\ JSON (\".json\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] var value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/-j-s-o-n/#json","text":"[androidJvm]\\ JSON (\".json\")","title":"JSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/-j-s-o-n/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] var value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/-l-c-p-l/","text":"// shared / org.readium.r2.shared.publication / Publication / EXTENSION / LCPL LCPL \u00b6 [androidJvm]\\ LCPL (\".lcpl\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] var value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/-l-c-p-l/#lcpl","text":"[androidJvm]\\ LCPL (\".lcpl\")","title":"LCPL"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/-l-c-p-l/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] var value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/-u-n-k-n-o-w-n/","text":"// shared / org.readium.r2.shared.publication / Publication / EXTENSION / UNKNOWN UNKNOWN \u00b6 [androidJvm]\\ UNKNOWN (\"\") Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] var value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/-u-n-k-n-o-w-n/#unknown","text":"[androidJvm]\\ UNKNOWN (\"\")","title":"UNKNOWN"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-e-x-t-e-n-s-i-o-n/-u-n-k-n-o-w-n/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] var value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/","text":"// shared / org.readium.r2.shared.publication / Publication / OpeningException OpeningException \u00b6 [androidJvm]\\ sealed class OpeningException : UserException Errors occurring while opening a Publication. Types \u00b6 Name Summary Forbidden [androidJvm] class Forbidden (cause: Throwable ?) : Publication.OpeningException We're not allowed to open the publication at all, for example because it expired. IncorrectCredentials [androidJvm] object IncorrectCredentials : Publication.OpeningException The provided credentials are incorrect and we can't open the publication in a restricted state (e.g. for a password-protected ZIP). NotFound [androidJvm] class NotFound (cause: Throwable ?) : Publication.OpeningException The publication file was not found on the file system. ParsingFailed [androidJvm] class ParsingFailed (cause: Throwable ?) : Publication.OpeningException The publication parser failed with the given underlying exception. Unavailable [androidJvm] class Unavailable (cause: Throwable ?) : Publication.OpeningException The publication can't be opened at the moment, for example because of a networking error. This error is generally temporary, so the operation may be retried or postponed. UnsupportedFormat [androidJvm] class UnsupportedFormat (cause: Throwable ?) : Publication.OpeningException The file format could not be recognized by any parser. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? Inheritors \u00b6 Name Publication.OpeningException Publication.OpeningException Publication.OpeningException Publication.OpeningException Publication.OpeningException Publication.OpeningException","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/#openingexception","text":"[androidJvm]\\ sealed class OpeningException : UserException Errors occurring while opening a Publication.","title":"OpeningException"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/#types","text":"Name Summary Forbidden [androidJvm] class Forbidden (cause: Throwable ?) : Publication.OpeningException We're not allowed to open the publication at all, for example because it expired. IncorrectCredentials [androidJvm] object IncorrectCredentials : Publication.OpeningException The provided credentials are incorrect and we can't open the publication in a restricted state (e.g. for a password-protected ZIP). NotFound [androidJvm] class NotFound (cause: Throwable ?) : Publication.OpeningException The publication file was not found on the file system. ParsingFailed [androidJvm] class ParsingFailed (cause: Throwable ?) : Publication.OpeningException The publication parser failed with the given underlying exception. Unavailable [androidJvm] class Unavailable (cause: Throwable ?) : Publication.OpeningException The publication can't be opened at the moment, for example because of a networking error. This error is generally temporary, so the operation may be retried or postponed. UnsupportedFormat [androidJvm] class UnsupportedFormat (cause: Throwable ?) : Publication.OpeningException The file format could not be recognized by any parser.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/#inheritors","text":"Name Publication.OpeningException Publication.OpeningException Publication.OpeningException Publication.OpeningException Publication.OpeningException Publication.OpeningException","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-forbidden/","text":"// shared / org.readium.r2.shared.publication / Publication / OpeningException / Forbidden Forbidden \u00b6 [androidJvm]\\ class Forbidden (cause: Throwable ?) : Publication.OpeningException We're not allowed to open the publication at all, for example because it expired. Constructors \u00b6 Forbidden [androidJvm] fun Forbidden (cause: Throwable ? = null) Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-forbidden/#forbidden","text":"[androidJvm]\\ class Forbidden (cause: Throwable ?) : Publication.OpeningException We're not allowed to open the publication at all, for example because it expired.","title":"Forbidden"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-forbidden/#constructors","text":"Forbidden [androidJvm] fun Forbidden (cause: Throwable ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-forbidden/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-forbidden/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-forbidden/-forbidden/","text":"// shared / org.readium.r2.shared.publication / Publication / OpeningException / Forbidden / Forbidden Forbidden \u00b6 [androidJvm]\\ fun Forbidden (cause: Throwable ? = null)","title":" forbidden"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-forbidden/-forbidden/#forbidden","text":"[androidJvm]\\ fun Forbidden (cause: Throwable ? = null)","title":"Forbidden"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-incorrect-credentials/","text":"// shared / org.readium.r2.shared.publication / Publication / OpeningException / IncorrectCredentials IncorrectCredentials \u00b6 [androidJvm]\\ object IncorrectCredentials : Publication.OpeningException The provided credentials are incorrect and we can't open the publication in a restricted state (e.g. for a password-protected ZIP). Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-incorrect-credentials/#incorrectcredentials","text":"[androidJvm]\\ object IncorrectCredentials : Publication.OpeningException The provided credentials are incorrect and we can't open the publication in a restricted state (e.g. for a password-protected ZIP).","title":"IncorrectCredentials"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-incorrect-credentials/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-incorrect-credentials/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-not-found/","text":"// shared / org.readium.r2.shared.publication / Publication / OpeningException / NotFound NotFound \u00b6 [androidJvm]\\ class NotFound (cause: Throwable ?) : Publication.OpeningException The publication file was not found on the file system. Constructors \u00b6 NotFound [androidJvm] fun NotFound (cause: Throwable ? = null) Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-not-found/#notfound","text":"[androidJvm]\\ class NotFound (cause: Throwable ?) : Publication.OpeningException The publication file was not found on the file system.","title":"NotFound"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-not-found/#constructors","text":"NotFound [androidJvm] fun NotFound (cause: Throwable ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-not-found/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-not-found/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-not-found/-not-found/","text":"// shared / org.readium.r2.shared.publication / Publication / OpeningException / NotFound / NotFound NotFound \u00b6 [androidJvm]\\ fun NotFound (cause: Throwable ? = null)","title":" not found"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-not-found/-not-found/#notfound","text":"[androidJvm]\\ fun NotFound (cause: Throwable ? = null)","title":"NotFound"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-parsing-failed/","text":"// shared / org.readium.r2.shared.publication / Publication / OpeningException / ParsingFailed ParsingFailed \u00b6 [androidJvm]\\ class ParsingFailed (cause: Throwable ?) : Publication.OpeningException The publication parser failed with the given underlying exception. Constructors \u00b6 ParsingFailed [androidJvm] fun ParsingFailed (cause: Throwable ? = null) Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-parsing-failed/#parsingfailed","text":"[androidJvm]\\ class ParsingFailed (cause: Throwable ?) : Publication.OpeningException The publication parser failed with the given underlying exception.","title":"ParsingFailed"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-parsing-failed/#constructors","text":"ParsingFailed [androidJvm] fun ParsingFailed (cause: Throwable ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-parsing-failed/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-parsing-failed/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-parsing-failed/-parsing-failed/","text":"// shared / org.readium.r2.shared.publication / Publication / OpeningException / ParsingFailed / ParsingFailed ParsingFailed \u00b6 [androidJvm]\\ fun ParsingFailed (cause: Throwable ? = null)","title":" parsing failed"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-parsing-failed/-parsing-failed/#parsingfailed","text":"[androidJvm]\\ fun ParsingFailed (cause: Throwable ? = null)","title":"ParsingFailed"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-unavailable/","text":"// shared / org.readium.r2.shared.publication / Publication / OpeningException / Unavailable Unavailable \u00b6 [androidJvm]\\ class Unavailable (cause: Throwable ?) : Publication.OpeningException The publication can't be opened at the moment, for example because of a networking error. This error is generally temporary, so the operation may be retried or postponed. Constructors \u00b6 Unavailable [androidJvm] fun Unavailable (cause: Throwable ? = null) Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-unavailable/#unavailable","text":"[androidJvm]\\ class Unavailable (cause: Throwable ?) : Publication.OpeningException The publication can't be opened at the moment, for example because of a networking error. This error is generally temporary, so the operation may be retried or postponed.","title":"Unavailable"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-unavailable/#constructors","text":"Unavailable [androidJvm] fun Unavailable (cause: Throwable ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-unavailable/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-unavailable/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-unavailable/-unavailable/","text":"// shared / org.readium.r2.shared.publication / Publication / OpeningException / Unavailable / Unavailable Unavailable \u00b6 [androidJvm]\\ fun Unavailable (cause: Throwable ? = null)","title":" unavailable"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-unavailable/-unavailable/#unavailable","text":"[androidJvm]\\ fun Unavailable (cause: Throwable ? = null)","title":"Unavailable"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-unsupported-format/","text":"// shared / org.readium.r2.shared.publication / Publication / OpeningException / UnsupportedFormat UnsupportedFormat \u00b6 [androidJvm]\\ class UnsupportedFormat (cause: Throwable ?) : Publication.OpeningException The file format could not be recognized by any parser. Constructors \u00b6 UnsupportedFormat [androidJvm] fun UnsupportedFormat (cause: Throwable ? = null) Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-unsupported-format/#unsupportedformat","text":"[androidJvm]\\ class UnsupportedFormat (cause: Throwable ?) : Publication.OpeningException The file format could not be recognized by any parser.","title":"UnsupportedFormat"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-unsupported-format/#constructors","text":"UnsupportedFormat [androidJvm] fun UnsupportedFormat (cause: Throwable ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-unsupported-format/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-unsupported-format/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-unsupported-format/-unsupported-format/","text":"// shared / org.readium.r2.shared.publication / Publication / OpeningException / UnsupportedFormat / UnsupportedFormat UnsupportedFormat \u00b6 [androidJvm]\\ fun UnsupportedFormat (cause: Throwable ? = null)","title":" unsupported format"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-opening-exception/-unsupported-format/-unsupported-format/#unsupportedformat","text":"[androidJvm]\\ fun UnsupportedFormat (cause: Throwable ? = null)","title":"UnsupportedFormat"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/","text":"// shared / org.readium.r2.shared.publication / Publication / Service Service \u00b6 [androidJvm]\\ interface Service Base interface to be implemented by all publication services. Types \u00b6 Name Summary Context [androidJvm] class Context (publication: Ref < Publication >, manifest: Manifest , fetcher: Fetcher ) Container for the context from which a service is created. Functions \u00b6 Name Summary close [androidJvm] open fun close () Closes any opened file handles, removes temporary files, etc. get [androidJvm] open fun get (link: Link ): Resource ? A service can return a Resource to: Properties \u00b6 Name Summary links [androidJvm] open val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get . Inheritors \u00b6 Name ContentProtectionService CoverService LocatorService PositionsService SearchService","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/#service","text":"[androidJvm]\\ interface Service Base interface to be implemented by all publication services.","title":"Service"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/#types","text":"Name Summary Context [androidJvm] class Context (publication: Ref < Publication >, manifest: Manifest , fetcher: Fetcher ) Container for the context from which a service is created.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/#functions","text":"Name Summary close [androidJvm] open fun close () Closes any opened file handles, removes temporary files, etc. get [androidJvm] open fun get (link: Link ): Resource ? A service can return a Resource to:","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/#properties","text":"Name Summary links [androidJvm] open val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get .","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/#inheritors","text":"Name ContentProtectionService CoverService LocatorService PositionsService SearchService","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/close/","text":"// shared / org.readium.r2.shared.publication / Publication / Service / close close \u00b6 [androidJvm]\\ open fun close () Closes any opened file handles, removes temporary files, etc.","title":"Close"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/close/#close","text":"[androidJvm]\\ open fun close () Closes any opened file handles, removes temporary files, etc.","title":"close"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/get/","text":"// shared / org.readium.r2.shared.publication / Publication / Service / get get \u00b6 [androidJvm]\\ open fun get (link: Link ): Resource ? A service can return a Resource to: respond to a request to its web API declared in links, serve additional resources on behalf of the publication, replace a publication resource by its own version. Called by Publication.get for each request. Warning: If you need to request one of the publication resources to answer the request, use the Fetcher provided by the Publication.Service.Context instead of Publication.get , otherwise it will trigger an infinite loop. Return \u00b6 The Resource containing the response, or null if the service doesn't recognize this request.","title":"Get"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/get/#get","text":"[androidJvm]\\ open fun get (link: Link ): Resource ? A service can return a Resource to: respond to a request to its web API declared in links, serve additional resources on behalf of the publication, replace a publication resource by its own version. Called by Publication.get for each request. Warning: If you need to request one of the publication resources to answer the request, use the Fetcher provided by the Publication.Service.Context instead of Publication.get , otherwise it will trigger an infinite loop.","title":"get"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/get/#return","text":"The Resource containing the response, or null if the service doesn't recognize this request.","title":"Return"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/links/","text":"// shared / org.readium.r2.shared.publication / Publication / Service / links links \u00b6 [androidJvm]\\ open val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get . To disambiguate the href with a publication's local resources, you should use the prefix /~readium/. A custom media type or rel should be used to identify the service. You can use a templated URI to accept query parameters, e.g.: Link(\\ href = \"/~readium/search{?text}\",\\ type = \"application/vnd.readium.search+json\",\\ templated = true\\ )","title":"Links"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/links/#links","text":"[androidJvm]\\ open val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get . To disambiguate the href with a publication's local resources, you should use the prefix /~readium/. A custom media type or rel should be used to identify the service. You can use a templated URI to accept query parameters, e.g.: Link(\\ href = \"/~readium/search{?text}\",\\ type = \"application/vnd.readium.search+json\",\\ templated = true\\ )","title":"links"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/-context/","text":"// shared / org.readium.r2.shared.publication / Publication / Service / Context Context \u00b6 [androidJvm]\\ class Context (publication: Ref < Publication >, manifest: Manifest , fetcher: Fetcher ) Container for the context from which a service is created. Parameters \u00b6 androidJvm publication Reference to the parent publication. Don't store directly the referenced publication, always access it through the Ref property. The publication won't be set when the service is created or when calling Service.links , but you can use it during regular service operations. If you need to initialize your service differently depending on the publication, use manifest. Constructors \u00b6 Context [androidJvm] fun Context (publication: Ref < Publication >, manifest: Manifest , fetcher: Fetcher ) Properties \u00b6 Name Summary fetcher [androidJvm] val fetcher : Fetcher manifest [androidJvm] val manifest : Manifest publication [androidJvm] val publication : Ref < Publication >","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/-context/#context","text":"[androidJvm]\\ class Context (publication: Ref < Publication >, manifest: Manifest , fetcher: Fetcher ) Container for the context from which a service is created.","title":"Context"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/-context/#parameters","text":"androidJvm publication Reference to the parent publication. Don't store directly the referenced publication, always access it through the Ref property. The publication won't be set when the service is created or when calling Service.links , but you can use it during regular service operations. If you need to initialize your service differently depending on the publication, use manifest.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/-context/#constructors","text":"Context [androidJvm] fun Context (publication: Ref < Publication >, manifest: Manifest , fetcher: Fetcher )","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/-context/#properties","text":"Name Summary fetcher [androidJvm] val fetcher : Fetcher manifest [androidJvm] val manifest : Manifest publication [androidJvm] val publication : Ref < Publication >","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/-context/-context/","text":"// shared / org.readium.r2.shared.publication / Publication / Service / Context / Context Context \u00b6 [androidJvm]\\ fun Context (publication: Ref < Publication >, manifest: Manifest , fetcher: Fetcher ) Parameters \u00b6 androidJvm publication Reference to the parent publication. Don't store directly the referenced publication, always access it through the Ref property. The publication won't be set when the service is created or when calling Service.links , but you can use it during regular service operations. If you need to initialize your service differently depending on the publication, use manifest.","title":" context"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/-context/-context/#context","text":"[androidJvm]\\ fun Context (publication: Ref < Publication >, manifest: Manifest , fetcher: Fetcher )","title":"Context"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/-context/-context/#parameters","text":"androidJvm publication Reference to the parent publication. Don't store directly the referenced publication, always access it through the Ref property. The publication won't be set when the service is created or when calling Service.links , but you can use it during regular service operations. If you need to initialize your service differently depending on the publication, use manifest.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/-context/fetcher/","text":"// shared / org.readium.r2.shared.publication / Publication / Service / Context / fetcher fetcher \u00b6 [androidJvm]\\ val fetcher : Fetcher","title":"Fetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/-context/fetcher/#fetcher","text":"[androidJvm]\\ val fetcher : Fetcher","title":"fetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/-context/manifest/","text":"// shared / org.readium.r2.shared.publication / Publication / Service / Context / manifest manifest \u00b6 [androidJvm]\\ val manifest : Manifest","title":"Manifest"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/-context/manifest/#manifest","text":"[androidJvm]\\ val manifest : Manifest","title":"manifest"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/-context/publication/","text":"// shared / org.readium.r2.shared.publication / Publication / Service / Context / publication publication \u00b6 [androidJvm]\\ val publication : Ref < Publication >","title":"Publication"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-service/-context/publication/#publication","text":"[androidJvm]\\ val publication : Ref < Publication >","title":"publication"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-services-builder/","text":"// shared / org.readium.r2.shared.publication / Publication / ServicesBuilder ServicesBuilder \u00b6 [androidJvm]\\ class ServicesBuilder Builds a list of Publication.Service from a collection of service factories. Provides helpers to manipulate the list of services of a Publication . Constructors \u00b6 ServicesBuilder [androidJvm] fun ServicesBuilder (contentProtection: ServiceFactory ? = null, cover: ServiceFactory ? = null, locator: ServiceFactory ? = { DefaultLocatorService(it.manifest.readingOrder, it.publication) }, positions: ServiceFactory ? = null, search: ServiceFactory ? = null) Functions \u00b6 Name Summary build [androidJvm] fun build (context: Publication.Service.Context ): List < Publication.Service > Builds the actual list of publication services to use in a Publication. decorate [androidJvm] fun < T : Publication.Service > decorate (serviceType: KClass < T >, transform: ( ServiceFactory ?) -> ServiceFactory ) Replaces the service factory associated with the given service type with the result of transform . get [androidJvm] operator fun < T : Publication.Service > get (serviceType: KClass < T >): ServiceFactory ? Gets the publication service factory for the given service type. remove [androidJvm] fun < T : Publication.Service > remove (serviceType: KClass < T >) Removes the service factory producing the given kind of service, if any. set [androidJvm] operator fun < T : Publication.Service > set (serviceType: KClass < T >, factory: ServiceFactory ?) Sets the publication service factory for the given service type. Extensions \u00b6 Name Summary contentProtectionServiceFactory [androidJvm] var Publication.ServicesBuilder . contentProtectionServiceFactory : ServiceFactory ? Factory to build a ContentProtectionService . coverServiceFactory [androidJvm] var Publication.ServicesBuilder . coverServiceFactory : ServiceFactory ? Factory to build a CoverService . locatorServiceFactory [androidJvm] var Publication.ServicesBuilder . locatorServiceFactory : ServiceFactory ? Factory to build a LocatorService positionsServiceFactory [androidJvm] var Publication.ServicesBuilder . positionsServiceFactory : ServiceFactory ? Factory to build a PositionsService searchServiceFactory [androidJvm] var Publication.ServicesBuilder . searchServiceFactory : ServiceFactory ? Factory to build a SearchService","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-services-builder/#servicesbuilder","text":"[androidJvm]\\ class ServicesBuilder Builds a list of Publication.Service from a collection of service factories. Provides helpers to manipulate the list of services of a Publication .","title":"ServicesBuilder"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-services-builder/#constructors","text":"ServicesBuilder [androidJvm] fun ServicesBuilder (contentProtection: ServiceFactory ? = null, cover: ServiceFactory ? = null, locator: ServiceFactory ? = { DefaultLocatorService(it.manifest.readingOrder, it.publication) }, positions: ServiceFactory ? = null, search: ServiceFactory ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-services-builder/#functions","text":"Name Summary build [androidJvm] fun build (context: Publication.Service.Context ): List < Publication.Service > Builds the actual list of publication services to use in a Publication. decorate [androidJvm] fun < T : Publication.Service > decorate (serviceType: KClass < T >, transform: ( ServiceFactory ?) -> ServiceFactory ) Replaces the service factory associated with the given service type with the result of transform . get [androidJvm] operator fun < T : Publication.Service > get (serviceType: KClass < T >): ServiceFactory ? Gets the publication service factory for the given service type. remove [androidJvm] fun < T : Publication.Service > remove (serviceType: KClass < T >) Removes the service factory producing the given kind of service, if any. set [androidJvm] operator fun < T : Publication.Service > set (serviceType: KClass < T >, factory: ServiceFactory ?) Sets the publication service factory for the given service type.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-services-builder/#extensions","text":"Name Summary contentProtectionServiceFactory [androidJvm] var Publication.ServicesBuilder . contentProtectionServiceFactory : ServiceFactory ? Factory to build a ContentProtectionService . coverServiceFactory [androidJvm] var Publication.ServicesBuilder . coverServiceFactory : ServiceFactory ? Factory to build a CoverService . locatorServiceFactory [androidJvm] var Publication.ServicesBuilder . locatorServiceFactory : ServiceFactory ? Factory to build a LocatorService positionsServiceFactory [androidJvm] var Publication.ServicesBuilder . positionsServiceFactory : ServiceFactory ? Factory to build a PositionsService searchServiceFactory [androidJvm] var Publication.ServicesBuilder . searchServiceFactory : ServiceFactory ? Factory to build a SearchService","title":"Extensions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-services-builder/-services-builder/","text":"// shared / org.readium.r2.shared.publication / Publication / ServicesBuilder / ServicesBuilder ServicesBuilder \u00b6 [androidJvm]\\ fun ServicesBuilder (contentProtection: ServiceFactory ? = null, cover: ServiceFactory ? = null, locator: ServiceFactory ? = { DefaultLocatorService(it.manifest.readingOrder, it.publication) }, positions: ServiceFactory ? = null, search: ServiceFactory ? = null)","title":" services builder"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-services-builder/-services-builder/#servicesbuilder","text":"[androidJvm]\\ fun ServicesBuilder (contentProtection: ServiceFactory ? = null, cover: ServiceFactory ? = null, locator: ServiceFactory ? = { DefaultLocatorService(it.manifest.readingOrder, it.publication) }, positions: ServiceFactory ? = null, search: ServiceFactory ? = null)","title":"ServicesBuilder"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-services-builder/build/","text":"// shared / org.readium.r2.shared.publication / Publication / ServicesBuilder / build build \u00b6 [androidJvm]\\ fun build (context: Publication.Service.Context ): List < Publication.Service > Builds the actual list of publication services to use in a Publication.","title":"Build"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-services-builder/build/#build","text":"[androidJvm]\\ fun build (context: Publication.Service.Context ): List < Publication.Service > Builds the actual list of publication services to use in a Publication.","title":"build"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-services-builder/decorate/","text":"// shared / org.readium.r2.shared.publication / Publication / ServicesBuilder / decorate decorate \u00b6 [androidJvm]\\ fun < T : Publication.Service > decorate (serviceType: KClass < T >, transform: ( ServiceFactory ?) -> ServiceFactory ) Replaces the service factory associated with the given service type with the result of transform .","title":"Decorate"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-services-builder/decorate/#decorate","text":"[androidJvm]\\ fun < T : Publication.Service > decorate (serviceType: KClass < T >, transform: ( ServiceFactory ?) -> ServiceFactory ) Replaces the service factory associated with the given service type with the result of transform .","title":"decorate"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-services-builder/get/","text":"// shared / org.readium.r2.shared.publication / Publication / ServicesBuilder / get get \u00b6 [androidJvm]\\ operator fun < T : Publication.Service > get (serviceType: KClass < T >): ServiceFactory ? Gets the publication service factory for the given service type.","title":"Get"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-services-builder/get/#get","text":"[androidJvm]\\ operator fun < T : Publication.Service > get (serviceType: KClass < T >): ServiceFactory ? Gets the publication service factory for the given service type.","title":"get"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-services-builder/remove/","text":"// shared / org.readium.r2.shared.publication / Publication / ServicesBuilder / remove remove \u00b6 [androidJvm]\\ fun < T : Publication.Service > remove (serviceType: KClass < T >) Removes the service factory producing the given kind of service, if any.","title":"Remove"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-services-builder/remove/#remove","text":"[androidJvm]\\ fun < T : Publication.Service > remove (serviceType: KClass < T >) Removes the service factory producing the given kind of service, if any.","title":"remove"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-services-builder/set/","text":"// shared / org.readium.r2.shared.publication / Publication / ServicesBuilder / set set \u00b6 [androidJvm]\\ operator fun < T : Publication.Service > set (serviceType: KClass < T >, factory: ServiceFactory ?) Sets the publication service factory for the given service type.","title":"Set"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-services-builder/set/#set","text":"[androidJvm]\\ operator fun < T : Publication.Service > set (serviceType: KClass < T >, factory: ServiceFactory ?) Sets the publication service factory for the given service type.","title":"set"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-t-y-p-e/","text":"// shared / org.readium.r2.shared.publication / Publication / TYPE TYPE \u00b6 [androidJvm]\\ enum TYPE : Enum < Publication.TYPE > Entries \u00b6 DiViNa [androidJvm] DiViNa () AUDIO [androidJvm] AUDIO () WEBPUB [androidJvm] WEBPUB () FXL [androidJvm] FXL () CBZ [androidJvm] CBZ () EPUB [androidJvm] EPUB () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-t-y-p-e/#type","text":"[androidJvm]\\ enum TYPE : Enum < Publication.TYPE >","title":"TYPE"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-t-y-p-e/#entries","text":"DiViNa [androidJvm] DiViNa () AUDIO [androidJvm] AUDIO () WEBPUB [androidJvm] WEBPUB () FXL [androidJvm] FXL () CBZ [androidJvm] CBZ () EPUB [androidJvm] EPUB ()","title":"Entries"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-t-y-p-e/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-t-y-p-e/-a-u-d-i-o/","text":"// shared / org.readium.r2.shared.publication / Publication / TYPE / AUDIO AUDIO \u00b6 [androidJvm]\\ AUDIO () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-t-y-p-e/-a-u-d-i-o/#audio","text":"[androidJvm]\\ AUDIO ()","title":"AUDIO"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-t-y-p-e/-a-u-d-i-o/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-t-y-p-e/-c-b-z/","text":"// shared / org.readium.r2.shared.publication / Publication / TYPE / CBZ CBZ \u00b6 [androidJvm]\\ CBZ () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-t-y-p-e/-c-b-z/#cbz","text":"[androidJvm]\\ CBZ ()","title":"CBZ"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-t-y-p-e/-c-b-z/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-t-y-p-e/-di-vi-na/","text":"// shared / org.readium.r2.shared.publication / Publication / TYPE / DiViNa DiViNa \u00b6 [androidJvm]\\ DiViNa () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-t-y-p-e/-di-vi-na/#divina","text":"[androidJvm]\\ DiViNa ()","title":"DiViNa"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-t-y-p-e/-di-vi-na/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-t-y-p-e/-e-p-u-b/","text":"// shared / org.readium.r2.shared.publication / Publication / TYPE / EPUB EPUB \u00b6 [androidJvm]\\ EPUB () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-t-y-p-e/-e-p-u-b/#epub","text":"[androidJvm]\\ EPUB ()","title":"EPUB"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-t-y-p-e/-e-p-u-b/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-t-y-p-e/-f-x-l/","text":"// shared / org.readium.r2.shared.publication / Publication / TYPE / FXL FXL \u00b6 [androidJvm]\\ FXL () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-t-y-p-e/-f-x-l/#fxl","text":"[androidJvm]\\ FXL ()","title":"FXL"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-t-y-p-e/-f-x-l/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-t-y-p-e/-w-e-b-p-u-b/","text":"// shared / org.readium.r2.shared.publication / Publication / TYPE / WEBPUB WEBPUB \u00b6 [androidJvm]\\ WEBPUB () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-t-y-p-e/-w-e-b-p-u-b/#webpub","text":"[androidJvm]\\ WEBPUB ()","title":"WEBPUB"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication/-t-y-p-e/-w-e-b-p-u-b/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication-collection/","text":"// shared / org.readium.r2.shared.publication / PublicationCollection PublicationCollection \u00b6 [androidJvm]\\ data class PublicationCollection (metadata: Map < String , Any >, links: List < Link >, subcollections: Map < String , List < PublicationCollection >>) : JSONable , Parcelable Core Collection Model https://readium.org/webpub-manifest/schema/subcollection.schema.json Can be used as extension point in the Readium Web Publication Manifest. Constructors \u00b6 PublicationCollection [androidJvm] fun PublicationCollection (metadata: Map < String , Any > = emptyMap(), links: List < Link > = emptyList(), subcollections: Map < String , List < PublicationCollection >> = emptyMap()) Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes a PublicationCollection to its RWPM JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary links [androidJvm] val links : List < Link > metadata [androidJvm] val metadata : Map < String , Any > subcollections [androidJvm] val subcollections : Map < String , List < PublicationCollection >>","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication-collection/#publicationcollection","text":"[androidJvm]\\ data class PublicationCollection (metadata: Map < String , Any >, links: List < Link >, subcollections: Map < String , List < PublicationCollection >>) : JSONable , Parcelable Core Collection Model https://readium.org/webpub-manifest/schema/subcollection.schema.json Can be used as extension point in the Readium Web Publication Manifest.","title":"PublicationCollection"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication-collection/#constructors","text":"PublicationCollection [androidJvm] fun PublicationCollection (metadata: Map < String , Any > = emptyMap(), links: List < Link > = emptyList(), subcollections: Map < String , List < PublicationCollection >> = emptyMap())","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication-collection/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication-collection/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes a PublicationCollection to its RWPM JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication-collection/#properties","text":"Name Summary links [androidJvm] val links : List < Link > metadata [androidJvm] val metadata : Map < String , Any > subcollections [androidJvm] val subcollections : Map < String , List < PublicationCollection >>","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication-collection/-publication-collection/","text":"// shared / org.readium.r2.shared.publication / PublicationCollection / PublicationCollection PublicationCollection \u00b6 [androidJvm]\\ fun PublicationCollection (metadata: Map < String , Any > = emptyMap(), links: List < Link > = emptyList(), subcollections: Map < String , List < PublicationCollection >> = emptyMap())","title":" publication collection"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication-collection/-publication-collection/#publicationcollection","text":"[androidJvm]\\ fun PublicationCollection (metadata: Map < String , Any > = emptyMap(), links: List < Link > = emptyList(), subcollections: Map < String , List < PublicationCollection >> = emptyMap())","title":"PublicationCollection"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication-collection/links/","text":"// shared / org.readium.r2.shared.publication / PublicationCollection / links links \u00b6 [androidJvm]\\ val links : List < Link >","title":"Links"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication-collection/links/#links","text":"[androidJvm]\\ val links : List < Link >","title":"links"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication-collection/metadata/","text":"// shared / org.readium.r2.shared.publication / PublicationCollection / metadata metadata \u00b6 [androidJvm]\\ val metadata : Map < String , Any >","title":"Metadata"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication-collection/metadata/#metadata","text":"[androidJvm]\\ val metadata : Map < String , Any >","title":"metadata"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication-collection/subcollections/","text":"// shared / org.readium.r2.shared.publication / PublicationCollection / subcollections subcollections \u00b6 [androidJvm]\\ val subcollections : Map < String , List < PublicationCollection >>","title":"Subcollections"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication-collection/subcollections/#subcollections","text":"[androidJvm]\\ val subcollections : Map < String , List < PublicationCollection >>","title":"subcollections"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication-collection/to-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / PublicationCollection / toJSON toJSON \u00b6 [androidJvm]\\ open override fun toJSON (): JSONObject Serializes a PublicationCollection to its RWPM JSON representation.","title":"To j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication-collection/to-j-s-o-n/#tojson","text":"[androidJvm]\\ open override fun toJSON (): JSONObject Serializes a PublicationCollection to its RWPM JSON representation.","title":"toJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication-collection/-companion/","text":"// shared / org.readium.r2.shared.publication / PublicationCollection / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary collectionsFromJSON [androidJvm] fun collectionsFromJSON (json: JSONObject , normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): Map < String , List < PublicationCollection >> Parses a map of PublicationCollection indexed by their roles from its RWPM JSON representation. fromJSON [androidJvm] fun fromJSON (json: Any ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): PublicationCollection ? Parses a PublicationCollection from its RWPM JSON representation.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication-collection/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication-collection/-companion/#functions","text":"Name Summary collectionsFromJSON [androidJvm] fun collectionsFromJSON (json: JSONObject , normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): Map < String , List < PublicationCollection >> Parses a map of PublicationCollection indexed by their roles from its RWPM JSON representation. fromJSON [androidJvm] fun fromJSON (json: Any ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): PublicationCollection ? Parses a PublicationCollection from its RWPM JSON representation.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication-collection/-companion/collections-from-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / PublicationCollection / Companion / collectionsFromJSON collectionsFromJSON \u00b6 [androidJvm]\\ fun collectionsFromJSON (json: JSONObject , normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): Map < String , List < PublicationCollection >> Parses a map of PublicationCollection indexed by their roles from its RWPM JSON representation. If the collection can't be parsed, a warning will be logged with warnings . The links ' href and their children's will be normalized recursively using the provided normalizeHref closure.","title":"Collections from j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication-collection/-companion/collections-from-j-s-o-n/#collectionsfromjson","text":"[androidJvm]\\ fun collectionsFromJSON (json: JSONObject , normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): Map < String , List < PublicationCollection >> Parses a map of PublicationCollection indexed by their roles from its RWPM JSON representation. If the collection can't be parsed, a warning will be logged with warnings . The links ' href and their children's will be normalized recursively using the provided normalizeHref closure.","title":"collectionsFromJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication-collection/-companion/from-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / PublicationCollection / Companion / fromJSON fromJSON \u00b6 [androidJvm]\\ fun fromJSON (json: Any ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): PublicationCollection ? Parses a PublicationCollection from its RWPM JSON representation. If the collection can't be parsed, a warning will be logged with warnings . The links ' href and their children's will be normalized recursively using the provided normalizeHref closure.","title":"From j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-publication-collection/-companion/from-j-s-o-n/#fromjson","text":"[androidJvm]\\ fun fromJSON (json: Any ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): PublicationCollection ? Parses a PublicationCollection from its RWPM JSON representation. If the collection can't be parsed, a warning will be logged with warnings . The links ' href and their children's will be normalized recursively using the provided normalizeHref closure.","title":"fromJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/","text":"// shared / org.readium.r2.shared.publication / ReadingProgression ReadingProgression \u00b6 [androidJvm]\\ enum ReadingProgression : Enum < ReadingProgression > , Parcelable Entries \u00b6 AUTO [androidJvm] AUTO (\"auto\") BTT [androidJvm] BTT (\"btt\") Bottom to top TTB [androidJvm] TTB (\"ttb\") Top to bottom LTR [androidJvm] LTR (\"ltr\") Left to right RTL [androidJvm] RTL (\"rtl\") Right to left Types \u00b6 Name Summary Companion [androidJvm] object Companion : MapWithDefaultCompanion < String , ReadingProgression > Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/#readingprogression","text":"[androidJvm]\\ enum ReadingProgression : Enum < ReadingProgression > , Parcelable","title":"ReadingProgression"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/#entries","text":"AUTO [androidJvm] AUTO (\"auto\") BTT [androidJvm] BTT (\"btt\") Bottom to top TTB [androidJvm] TTB (\"ttb\") Top to bottom LTR [androidJvm] LTR (\"ltr\") Left to right RTL [androidJvm] RTL (\"rtl\") Right to left","title":"Entries"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/#types","text":"Name Summary Companion [androidJvm] object Companion : MapWithDefaultCompanion < String , ReadingProgression >","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/value/","text":"// shared / org.readium.r2.shared.publication / ReadingProgression / value value \u00b6 [androidJvm]\\ val value : String","title":"Value"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/value/#value","text":"[androidJvm]\\ val value : String","title":"value"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/-a-u-t-o/","text":"// shared / org.readium.r2.shared.publication / ReadingProgression / AUTO AUTO \u00b6 [androidJvm]\\ AUTO (\"auto\") Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/-a-u-t-o/#auto","text":"[androidJvm]\\ AUTO (\"auto\")","title":"AUTO"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/-a-u-t-o/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/-a-u-t-o/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/-b-t-t/","text":"// shared / org.readium.r2.shared.publication / ReadingProgression / BTT BTT \u00b6 [androidJvm]\\ BTT (\"btt\") Bottom to top Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/-b-t-t/#btt","text":"[androidJvm]\\ BTT (\"btt\") Bottom to top","title":"BTT"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/-b-t-t/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/-b-t-t/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/-companion/","text":"// shared / org.readium.r2.shared.publication / ReadingProgression / Companion Companion \u00b6 [androidJvm]\\ object Companion : MapWithDefaultCompanion < String , ReadingProgression > Functions \u00b6 Name Summary get [androidJvm] open override fun get (key: String ?): ReadingProgression ? Returns the element matching the key , or null if not found. getOrDefault [androidJvm] fun getOrDefault (key: String ?): ReadingProgression Returns the element matching the key , or the default value as a fallback. invoke [androidJvm] open operator override fun invoke (key: String ?): ReadingProgression Alias to getOrDefault , to be used like keyMapper(\"a_key\"). Properties \u00b6 Name Summary default [androidJvm] val default : ReadingProgression keys [androidJvm] val keys : Set < String > Returns the available keys .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/-companion/#companion","text":"[androidJvm]\\ object Companion : MapWithDefaultCompanion < String , ReadingProgression >","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/-companion/#functions","text":"Name Summary get [androidJvm] open override fun get (key: String ?): ReadingProgression ? Returns the element matching the key , or null if not found. getOrDefault [androidJvm] fun getOrDefault (key: String ?): ReadingProgression Returns the element matching the key , or the default value as a fallback. invoke [androidJvm] open operator override fun invoke (key: String ?): ReadingProgression Alias to getOrDefault , to be used like keyMapper(\"a_key\").","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/-companion/#properties","text":"Name Summary default [androidJvm] val default : ReadingProgression keys [androidJvm] val keys : Set < String > Returns the available keys .","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/-companion/get/","text":"// shared / org.readium.r2.shared.publication / ReadingProgression / Companion / get get \u00b6 [androidJvm]\\ open override fun get (key: String ?): ReadingProgression ? Returns the element matching the key , or null if not found. To be overriden in subclasses if custom retrieval is needed \u2013 for example, testing lowercase keys.","title":"Get"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/-companion/get/#get","text":"[androidJvm]\\ open override fun get (key: String ?): ReadingProgression ? Returns the element matching the key , or null if not found. To be overriden in subclasses if custom retrieval is needed \u2013 for example, testing lowercase keys.","title":"get"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/-l-t-r/","text":"// shared / org.readium.r2.shared.publication / ReadingProgression / LTR LTR \u00b6 [androidJvm]\\ LTR (\"ltr\") Left to right Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/-l-t-r/#ltr","text":"[androidJvm]\\ LTR (\"ltr\") Left to right","title":"LTR"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/-l-t-r/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/-l-t-r/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/-r-t-l/","text":"// shared / org.readium.r2.shared.publication / ReadingProgression / RTL RTL \u00b6 [androidJvm]\\ RTL (\"rtl\") Right to left Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/-r-t-l/#rtl","text":"[androidJvm]\\ RTL (\"rtl\") Right to left","title":"RTL"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/-r-t-l/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/-r-t-l/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/-t-t-b/","text":"// shared / org.readium.r2.shared.publication / ReadingProgression / TTB TTB \u00b6 [androidJvm]\\ TTB (\"ttb\") Top to bottom Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/-t-t-b/#ttb","text":"[androidJvm]\\ TTB (\"ttb\") Top to bottom","title":"TTB"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/-t-t-b/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-reading-progression/-t-t-b/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/","text":"// shared / org.readium.r2.shared.publication / Subject Subject \u00b6 [androidJvm]\\ data class Subject (localizedName: LocalizedString , localizedSortAs: LocalizedString ?, scheme: String ?, code: String ?, links: List < Link >) : JSONable , Parcelable https://github.com/readium/webpub-manifest/tree/master/contexts/default#subjects Parameters \u00b6 androidJvm sortAs Provides a string that a machine can sort. scheme EPUB 3.1 opf:authority. code EPUB 3.1 opf:term. links Used to retrieve similar publications for the given subjects. Constructors \u00b6 Subject [androidJvm] fun Subject (name: String ) Shortcut to create a Subject using a string as name . Subject [androidJvm] fun Subject (localizedName: LocalizedString , localizedSortAs: LocalizedString ? = null, scheme: String ? = null, code: String ? = null, links: List < Link > = emptyList()) Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes a Subject to its RWPM JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary code [androidJvm] val code : String ? = null links [androidJvm] val links : List < Link > localizedName [androidJvm] val localizedName : LocalizedString localizedSortAs [androidJvm] val localizedSortAs : LocalizedString ? = null name [androidJvm] val name : String Returns the default translation string for the name . scheme [androidJvm] val scheme : String ? = null sortAs [androidJvm] val sortAs : String ? Returns the default translation string for the localizedSortAs .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/#subject","text":"[androidJvm]\\ data class Subject (localizedName: LocalizedString , localizedSortAs: LocalizedString ?, scheme: String ?, code: String ?, links: List < Link >) : JSONable , Parcelable https://github.com/readium/webpub-manifest/tree/master/contexts/default#subjects","title":"Subject"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/#parameters","text":"androidJvm sortAs Provides a string that a machine can sort. scheme EPUB 3.1 opf:authority. code EPUB 3.1 opf:term. links Used to retrieve similar publications for the given subjects.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/#constructors","text":"Subject [androidJvm] fun Subject (name: String ) Shortcut to create a Subject using a string as name . Subject [androidJvm] fun Subject (localizedName: LocalizedString , localizedSortAs: LocalizedString ? = null, scheme: String ? = null, code: String ? = null, links: List < Link > = emptyList())","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes a Subject to its RWPM JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/#properties","text":"Name Summary code [androidJvm] val code : String ? = null links [androidJvm] val links : List < Link > localizedName [androidJvm] val localizedName : LocalizedString localizedSortAs [androidJvm] val localizedSortAs : LocalizedString ? = null name [androidJvm] val name : String Returns the default translation string for the name . scheme [androidJvm] val scheme : String ? = null sortAs [androidJvm] val sortAs : String ? Returns the default translation string for the localizedSortAs .","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/-subject/","text":"// shared / org.readium.r2.shared.publication / Subject / Subject Subject \u00b6 [androidJvm]\\ fun Subject (name: String ) Shortcut to create a Subject using a string as name . [androidJvm]\\ fun Subject (localizedName: LocalizedString , localizedSortAs: LocalizedString ? = null, scheme: String ? = null, code: String ? = null, links: List < Link > = emptyList()) Parameters \u00b6 androidJvm sortAs Provides a string that a machine can sort. scheme EPUB 3.1 opf:authority. code EPUB 3.1 opf:term. links Used to retrieve similar publications for the given subjects.","title":" subject"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/-subject/#subject","text":"[androidJvm]\\ fun Subject (name: String ) Shortcut to create a Subject using a string as name . [androidJvm]\\ fun Subject (localizedName: LocalizedString , localizedSortAs: LocalizedString ? = null, scheme: String ? = null, code: String ? = null, links: List < Link > = emptyList())","title":"Subject"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/-subject/#parameters","text":"androidJvm sortAs Provides a string that a machine can sort. scheme EPUB 3.1 opf:authority. code EPUB 3.1 opf:term. links Used to retrieve similar publications for the given subjects.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/code/","text":"// shared / org.readium.r2.shared.publication / Subject / code code \u00b6 [androidJvm]\\ val code : String ? = null","title":"Code"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/code/#code","text":"[androidJvm]\\ val code : String ? = null","title":"code"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/links/","text":"// shared / org.readium.r2.shared.publication / Subject / links links \u00b6 [androidJvm]\\ val links : List < Link >","title":"Links"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/links/#links","text":"[androidJvm]\\ val links : List < Link >","title":"links"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/localized-name/","text":"// shared / org.readium.r2.shared.publication / Subject / localizedName localizedName \u00b6 [androidJvm]\\ val localizedName : LocalizedString","title":"Localized name"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/localized-name/#localizedname","text":"[androidJvm]\\ val localizedName : LocalizedString","title":"localizedName"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/localized-sort-as/","text":"// shared / org.readium.r2.shared.publication / Subject / localizedSortAs localizedSortAs \u00b6 [androidJvm]\\ val localizedSortAs : LocalizedString ? = null","title":"Localized sort as"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/localized-sort-as/#localizedsortas","text":"[androidJvm]\\ val localizedSortAs : LocalizedString ? = null","title":"localizedSortAs"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/name/","text":"// shared / org.readium.r2.shared.publication / Subject / name name \u00b6 [androidJvm]\\ val name : String Returns the default translation string for the name .","title":"Name"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/name/#name","text":"[androidJvm]\\ val name : String Returns the default translation string for the name .","title":"name"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/scheme/","text":"// shared / org.readium.r2.shared.publication / Subject / scheme scheme \u00b6 [androidJvm]\\ val scheme : String ? = null","title":"Scheme"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/scheme/#scheme","text":"[androidJvm]\\ val scheme : String ? = null","title":"scheme"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/sort-as/","text":"// shared / org.readium.r2.shared.publication / Subject / sortAs sortAs \u00b6 [androidJvm]\\ val sortAs : String ? Returns the default translation string for the localizedSortAs .","title":"Sort as"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/sort-as/#sortas","text":"[androidJvm]\\ val sortAs : String ? Returns the default translation string for the localizedSortAs .","title":"sortAs"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/to-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / Subject / toJSON toJSON \u00b6 [androidJvm]\\ open override fun toJSON (): JSONObject Serializes a Subject to its RWPM JSON representation.","title":"To j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/to-j-s-o-n/#tojson","text":"[androidJvm]\\ open override fun toJSON (): JSONObject Serializes a Subject to its RWPM JSON representation.","title":"toJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/-companion/","text":"// shared / org.readium.r2.shared.publication / Subject / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary fromJSON [androidJvm] fun fromJSON (json: Any ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): Subject ? Parses a Subject from its RWPM JSON representation. fromJSONArray [androidJvm] fun fromJSONArray (json: Any ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): List < Subject > Creates a list of Subject from its RWPM JSON representation.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/-companion/#functions","text":"Name Summary fromJSON [androidJvm] fun fromJSON (json: Any ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): Subject ? Parses a Subject from its RWPM JSON representation. fromJSONArray [androidJvm] fun fromJSONArray (json: Any ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): List < Subject > Creates a list of Subject from its RWPM JSON representation.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/-companion/from-j-s-o-n-array/","text":"// shared / org.readium.r2.shared.publication / Subject / Companion / fromJSONArray fromJSONArray \u00b6 [androidJvm]\\ fun fromJSONArray (json: Any ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): List < Subject > Creates a list of Subject from its RWPM JSON representation. The links ' href and their children's will be normalized recursively using the provided normalizeHref closure. If a subject can't be parsed, a warning will be logged with warnings .","title":"From j s o n array"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/-companion/from-j-s-o-n-array/#fromjsonarray","text":"[androidJvm]\\ fun fromJSONArray (json: Any ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): List < Subject > Creates a list of Subject from its RWPM JSON representation. The links ' href and their children's will be normalized recursively using the provided normalizeHref closure. If a subject can't be parsed, a warning will be logged with warnings .","title":"fromJSONArray"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/-companion/from-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication / Subject / Companion / fromJSON fromJSON \u00b6 [androidJvm]\\ fun fromJSON (json: Any ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): Subject ? Parses a Subject from its RWPM JSON representation. A subject can be parsed from a single string, or a full-fledged object. The links ' href and their children's will be normalized recursively using the provided normalizeHref closure. If the subject can't be parsed, a warning will be logged with warnings .","title":"From j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication/-subject/-companion/from-j-s-o-n/#fromjson","text":"[androidJvm]\\ fun fromJSON (json: Any ?, normalizeHref: LinkHrefNormalizer = LinkHrefNormalizerIdentity, warnings: WarningLogger ? = null): Subject ? Parses a Subject from its RWPM JSON representation. A subject can be parsed from a single string, or a full-fledged object. The links ' href and their children's will be normalized recursively using the provided normalizeHref closure. If the subject can't be parsed, a warning will be logged with warnings .","title":"fromJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/","text":"// shared / org.readium.r2.shared.publication.archive Package org.readium.r2.shared.publication.archive \u00b6 Types \u00b6 Name Summary ArchiveProperties [androidJvm] data class ArchiveProperties (entryLength: Long , isEntryCompressed: Boolean ) : JSONable , Parcelable Holds information about how the resource is stored in the publication archive. Properties \u00b6 Name Summary archive [androidJvm] val Properties . archive : ArchiveProperties ? Provides information about how the resource is stored in the publication archive.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/#package-orgreadiumr2sharedpublicationarchive","text":"","title":"Package org.readium.r2.shared.publication.archive"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/#types","text":"Name Summary ArchiveProperties [androidJvm] data class ArchiveProperties (entryLength: Long , isEntryCompressed: Boolean ) : JSONable , Parcelable Holds information about how the resource is stored in the publication archive.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/#properties","text":"Name Summary archive [androidJvm] val Properties . archive : ArchiveProperties ? Provides information about how the resource is stored in the publication archive.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/archive/","text":"// shared / org.readium.r2.shared.publication.archive / archive archive \u00b6 [androidJvm]\\ val Properties . archive : ArchiveProperties ? Provides information about how the resource is stored in the publication archive.","title":"Archive"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/archive/#archive","text":"[androidJvm]\\ val Properties . archive : ArchiveProperties ? Provides information about how the resource is stored in the publication archive.","title":"archive"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/-archive-properties/","text":"// shared / org.readium.r2.shared.publication.archive / ArchiveProperties ArchiveProperties \u00b6 [androidJvm]\\ data class ArchiveProperties (entryLength: Long , isEntryCompressed: Boolean ) : JSONable , Parcelable Holds information about how the resource is stored in the publication archive. Parameters \u00b6 androidJvm entryLength The length of the entry stored in the archive. It might be a compressed length if the entry is deflated. isEntryCompressed Indicates whether the entry was compressed before being stored in the archive. Constructors \u00b6 ArchiveProperties [androidJvm] fun ArchiveProperties (entryLength: Long , isEntryCompressed: Boolean ) Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes the object to its JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary entryLength [androidJvm] val entryLength : Long isEntryCompressed [androidJvm] val isEntryCompressed : Boolean","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/-archive-properties/#archiveproperties","text":"[androidJvm]\\ data class ArchiveProperties (entryLength: Long , isEntryCompressed: Boolean ) : JSONable , Parcelable Holds information about how the resource is stored in the publication archive.","title":"ArchiveProperties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/-archive-properties/#parameters","text":"androidJvm entryLength The length of the entry stored in the archive. It might be a compressed length if the entry is deflated. isEntryCompressed Indicates whether the entry was compressed before being stored in the archive.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/-archive-properties/#constructors","text":"ArchiveProperties [androidJvm] fun ArchiveProperties (entryLength: Long , isEntryCompressed: Boolean )","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/-archive-properties/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/-archive-properties/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes the object to its JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/-archive-properties/#properties","text":"Name Summary entryLength [androidJvm] val entryLength : Long isEntryCompressed [androidJvm] val isEntryCompressed : Boolean","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/-archive-properties/-archive-properties/","text":"// shared / org.readium.r2.shared.publication.archive / ArchiveProperties / ArchiveProperties ArchiveProperties \u00b6 [androidJvm]\\ fun ArchiveProperties (entryLength: Long , isEntryCompressed: Boolean ) Parameters \u00b6 androidJvm entryLength The length of the entry stored in the archive. It might be a compressed length if the entry is deflated. isEntryCompressed Indicates whether the entry was compressed before being stored in the archive.","title":" archive properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/-archive-properties/-archive-properties/#archiveproperties","text":"[androidJvm]\\ fun ArchiveProperties (entryLength: Long , isEntryCompressed: Boolean )","title":"ArchiveProperties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/-archive-properties/-archive-properties/#parameters","text":"androidJvm entryLength The length of the entry stored in the archive. It might be a compressed length if the entry is deflated. isEntryCompressed Indicates whether the entry was compressed before being stored in the archive.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/-archive-properties/entry-length/","text":"// shared / org.readium.r2.shared.publication.archive / ArchiveProperties / entryLength entryLength \u00b6 [androidJvm]\\ val entryLength : Long","title":"Entry length"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/-archive-properties/entry-length/#entrylength","text":"[androidJvm]\\ val entryLength : Long","title":"entryLength"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/-archive-properties/is-entry-compressed/","text":"// shared / org.readium.r2.shared.publication.archive / ArchiveProperties / isEntryCompressed isEntryCompressed \u00b6 [androidJvm]\\ val isEntryCompressed : Boolean","title":"Is entry compressed"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/-archive-properties/is-entry-compressed/#isentrycompressed","text":"[androidJvm]\\ val isEntryCompressed : Boolean","title":"isEntryCompressed"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/-archive-properties/to-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication.archive / ArchiveProperties / toJSON toJSON \u00b6 [androidJvm]\\ open override fun toJSON (): JSONObject Serializes the object to its JSON representation.","title":"To j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/-archive-properties/to-j-s-o-n/#tojson","text":"[androidJvm]\\ open override fun toJSON (): JSONObject Serializes the object to its JSON representation.","title":"toJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/-archive-properties/-companion/","text":"// shared / org.readium.r2.shared.publication.archive / ArchiveProperties / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): ArchiveProperties ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/-archive-properties/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/-archive-properties/-companion/#functions","text":"Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): ArchiveProperties ?","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/-archive-properties/-companion/from-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication.archive / ArchiveProperties / Companion / fromJSON fromJSON \u00b6 [androidJvm]\\ fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): ArchiveProperties ?","title":"From j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.archive/-archive-properties/-companion/from-j-s-o-n/#fromjson","text":"[androidJvm]\\ fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): ArchiveProperties ?","title":"fromJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/","text":"// shared / org.readium.r2.shared.publication.asset Package org.readium.r2.shared.publication.asset \u00b6 Types \u00b6 Name Summary FileAsset [androidJvm] class FileAsset : PublicationAsset Represents a publication stored as a file on the local file system. PublicationAsset [androidJvm] interface PublicationAsset Represents a digital medium (e.g. a file) offering access to a publication.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/#package-orgreadiumr2sharedpublicationasset","text":"","title":"Package org.readium.r2.shared.publication.asset"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/#types","text":"Name Summary FileAsset [androidJvm] class FileAsset : PublicationAsset Represents a publication stored as a file on the local file system. PublicationAsset [androidJvm] interface PublicationAsset Represents a digital medium (e.g. a file) offering access to a publication.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-file-asset/","text":"// shared / org.readium.r2.shared.publication.asset / FileAsset FileAsset \u00b6 [androidJvm]\\ class FileAsset : PublicationAsset Represents a publication stored as a file on the local file system. Parameters \u00b6 androidJvm file File on the file system. Constructors \u00b6 FileAsset [androidJvm] fun FileAsset (file: File , mediaType: MediaType ? = null) Creates a FileAsset from a File and an optional media type, when known. FileAsset [androidJvm] fun FileAsset (file: File , mediaTypeHint: String ?) Creates a FileAsset from a File and an optional media type hint. Functions \u00b6 Name Summary createFetcher [androidJvm] open suspend override fun createFetcher (dependencies: PublicationAsset.Dependencies , credentials: String ?): Try < Fetcher , Publication.OpeningException > Creates a fetcher used to access the asset's content. mediaType [androidJvm] open suspend override fun mediaType (): MediaType Media type of the asset. toString [androidJvm] open override fun toString (): String Properties \u00b6 Name Summary file [androidJvm] val file : File name [androidJvm] open override val name : String Name of the asset, e.g. a filename.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-file-asset/#fileasset","text":"[androidJvm]\\ class FileAsset : PublicationAsset Represents a publication stored as a file on the local file system.","title":"FileAsset"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-file-asset/#parameters","text":"androidJvm file File on the file system.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-file-asset/#constructors","text":"FileAsset [androidJvm] fun FileAsset (file: File , mediaType: MediaType ? = null) Creates a FileAsset from a File and an optional media type, when known. FileAsset [androidJvm] fun FileAsset (file: File , mediaTypeHint: String ?) Creates a FileAsset from a File and an optional media type hint.","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-file-asset/#functions","text":"Name Summary createFetcher [androidJvm] open suspend override fun createFetcher (dependencies: PublicationAsset.Dependencies , credentials: String ?): Try < Fetcher , Publication.OpeningException > Creates a fetcher used to access the asset's content. mediaType [androidJvm] open suspend override fun mediaType (): MediaType Media type of the asset. toString [androidJvm] open override fun toString (): String","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-file-asset/#properties","text":"Name Summary file [androidJvm] val file : File name [androidJvm] open override val name : String Name of the asset, e.g. a filename.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-file-asset/-file-asset/","text":"// shared / org.readium.r2.shared.publication.asset / FileAsset / FileAsset FileAsset \u00b6 [androidJvm]\\ fun FileAsset (file: File , mediaType: MediaType ? = null) Creates a FileAsset from a File and an optional media type, when known. [androidJvm]\\ fun FileAsset (file: File , mediaTypeHint: String ?) Creates a FileAsset from a File and an optional media type hint. Providing a media type hint will improve performances when sniffing the media type.","title":" file asset"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-file-asset/-file-asset/#fileasset","text":"[androidJvm]\\ fun FileAsset (file: File , mediaType: MediaType ? = null) Creates a FileAsset from a File and an optional media type, when known. [androidJvm]\\ fun FileAsset (file: File , mediaTypeHint: String ?) Creates a FileAsset from a File and an optional media type hint. Providing a media type hint will improve performances when sniffing the media type.","title":"FileAsset"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-file-asset/create-fetcher/","text":"// shared / org.readium.r2.shared.publication.asset / FileAsset / createFetcher createFetcher \u00b6 [androidJvm]\\ open suspend override fun createFetcher (dependencies: PublicationAsset.Dependencies , credentials: String ?): Try < Fetcher , Publication.OpeningException > Creates a fetcher used to access the asset's content.","title":"Create fetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-file-asset/create-fetcher/#createfetcher","text":"[androidJvm]\\ open suspend override fun createFetcher (dependencies: PublicationAsset.Dependencies , credentials: String ?): Try < Fetcher , Publication.OpeningException > Creates a fetcher used to access the asset's content.","title":"createFetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-file-asset/file/","text":"// shared / org.readium.r2.shared.publication.asset / FileAsset / file file \u00b6 [androidJvm]\\ val file : File","title":"File"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-file-asset/file/#file","text":"[androidJvm]\\ val file : File","title":"file"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-file-asset/media-type/","text":"// shared / org.readium.r2.shared.publication.asset / FileAsset / mediaType mediaType \u00b6 [androidJvm]\\ open suspend override fun mediaType (): MediaType Media type of the asset. If unknown, fallback on MediaType.BINARY.","title":"Media type"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-file-asset/media-type/#mediatype","text":"[androidJvm]\\ open suspend override fun mediaType (): MediaType Media type of the asset. If unknown, fallback on MediaType.BINARY.","title":"mediaType"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-file-asset/name/","text":"// shared / org.readium.r2.shared.publication.asset / FileAsset / name name \u00b6 [androidJvm]\\ open override val name : String Name of the asset, e.g. a filename.","title":"Name"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-file-asset/name/#name","text":"[androidJvm]\\ open override val name : String Name of the asset, e.g. a filename.","title":"name"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-file-asset/to-string/","text":"// shared / org.readium.r2.shared.publication.asset / FileAsset / toString toString \u00b6 [androidJvm]\\ open override fun toString (): String","title":"To string"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-file-asset/to-string/#tostring","text":"[androidJvm]\\ open override fun toString (): String","title":"toString"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-publication-asset/","text":"// shared / org.readium.r2.shared.publication.asset / PublicationAsset PublicationAsset \u00b6 [androidJvm]\\ interface PublicationAsset Represents a digital medium (e.g. a file) offering access to a publication. Types \u00b6 Name Summary Dependencies [androidJvm] data class Dependencies (archiveFactory: ArchiveFactory ) Functions \u00b6 Name Summary createFetcher [androidJvm] abstract suspend fun createFetcher (dependencies: PublicationAsset.Dependencies , credentials: String ?): Try < Fetcher , Publication.OpeningException > Creates a fetcher used to access the asset's content. mediaType [androidJvm] abstract suspend fun mediaType (): MediaType Media type of the asset. Properties \u00b6 Name Summary name [androidJvm] abstract val name : String Name of the asset, e.g. a filename. Inheritors \u00b6 Name FileAsset","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-publication-asset/#publicationasset","text":"[androidJvm]\\ interface PublicationAsset Represents a digital medium (e.g. a file) offering access to a publication.","title":"PublicationAsset"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-publication-asset/#types","text":"Name Summary Dependencies [androidJvm] data class Dependencies (archiveFactory: ArchiveFactory )","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-publication-asset/#functions","text":"Name Summary createFetcher [androidJvm] abstract suspend fun createFetcher (dependencies: PublicationAsset.Dependencies , credentials: String ?): Try < Fetcher , Publication.OpeningException > Creates a fetcher used to access the asset's content. mediaType [androidJvm] abstract suspend fun mediaType (): MediaType Media type of the asset.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-publication-asset/#properties","text":"Name Summary name [androidJvm] abstract val name : String Name of the asset, e.g. a filename.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-publication-asset/#inheritors","text":"Name FileAsset","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-publication-asset/create-fetcher/","text":"// shared / org.readium.r2.shared.publication.asset / PublicationAsset / createFetcher createFetcher \u00b6 [androidJvm]\\ abstract suspend fun createFetcher (dependencies: PublicationAsset.Dependencies , credentials: String ?): Try < Fetcher , Publication.OpeningException > Creates a fetcher used to access the asset's content.","title":"Create fetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-publication-asset/create-fetcher/#createfetcher","text":"[androidJvm]\\ abstract suspend fun createFetcher (dependencies: PublicationAsset.Dependencies , credentials: String ?): Try < Fetcher , Publication.OpeningException > Creates a fetcher used to access the asset's content.","title":"createFetcher"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-publication-asset/media-type/","text":"// shared / org.readium.r2.shared.publication.asset / PublicationAsset / mediaType mediaType \u00b6 [androidJvm]\\ abstract suspend fun mediaType (): MediaType Media type of the asset. If unknown, fallback on MediaType.BINARY.","title":"Media type"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-publication-asset/media-type/#mediatype","text":"[androidJvm]\\ abstract suspend fun mediaType (): MediaType Media type of the asset. If unknown, fallback on MediaType.BINARY.","title":"mediaType"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-publication-asset/name/","text":"// shared / org.readium.r2.shared.publication.asset / PublicationAsset / name name \u00b6 [androidJvm]\\ abstract val name : String Name of the asset, e.g. a filename.","title":"Name"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-publication-asset/name/#name","text":"[androidJvm]\\ abstract val name : String Name of the asset, e.g. a filename.","title":"name"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-publication-asset/-dependencies/","text":"// shared / org.readium.r2.shared.publication.asset / PublicationAsset / Dependencies Dependencies \u00b6 [androidJvm]\\ data class Dependencies (archiveFactory: ArchiveFactory ) Properties \u00b6 Name Summary archiveFactory [androidJvm] val archiveFactory : ArchiveFactory","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-publication-asset/-dependencies/#dependencies","text":"[androidJvm]\\ data class Dependencies (archiveFactory: ArchiveFactory )","title":"Dependencies"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-publication-asset/-dependencies/#properties","text":"Name Summary archiveFactory [androidJvm] val archiveFactory : ArchiveFactory","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-publication-asset/-dependencies/-dependencies/","text":"// shared / org.readium.r2.shared.publication.asset / PublicationAsset / Dependencies / Dependencies Dependencies \u00b6 [androidJvm]\\ fun Dependencies (archiveFactory: ArchiveFactory )","title":" dependencies"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-publication-asset/-dependencies/-dependencies/#dependencies","text":"[androidJvm]\\ fun Dependencies (archiveFactory: ArchiveFactory )","title":"Dependencies"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-publication-asset/-dependencies/archive-factory/","text":"// shared / org.readium.r2.shared.publication.asset / PublicationAsset / Dependencies / archiveFactory archiveFactory \u00b6 [androidJvm]\\ val archiveFactory : ArchiveFactory","title":"Archive factory"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.asset/-publication-asset/-dependencies/archive-factory/#archivefactory","text":"[androidJvm]\\ val archiveFactory : ArchiveFactory","title":"archiveFactory"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/","text":"// shared / org.readium.r2.shared.publication.encryption Package org.readium.r2.shared.publication.encryption \u00b6 Types \u00b6 Name Summary Encryption [androidJvm] data class Encryption (algorithm: String , compression: String ?, originalLength: Long ?, profile: String ?, scheme: String ?) : JSONable , Parcelable Indicates that a resource is encrypted/obfuscated and provides relevant information for decryption. Properties \u00b6 Name Summary encryption [androidJvm] val Properties . encryption : Encryption ? Indicates that a resource is encrypted/obfuscated and provides relevant information for decryption.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/#package-orgreadiumr2sharedpublicationencryption","text":"","title":"Package org.readium.r2.shared.publication.encryption"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/#types","text":"Name Summary Encryption [androidJvm] data class Encryption (algorithm: String , compression: String ?, originalLength: Long ?, profile: String ?, scheme: String ?) : JSONable , Parcelable Indicates that a resource is encrypted/obfuscated and provides relevant information for decryption.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/#properties","text":"Name Summary encryption [androidJvm] val Properties . encryption : Encryption ? Indicates that a resource is encrypted/obfuscated and provides relevant information for decryption.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/encryption/","text":"// shared / org.readium.r2.shared.publication.encryption / encryption encryption \u00b6 [androidJvm]\\ val Properties . encryption : Encryption ? Indicates that a resource is encrypted/obfuscated and provides relevant information for decryption.","title":"Encryption"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/encryption/#encryption","text":"[androidJvm]\\ val Properties . encryption : Encryption ? Indicates that a resource is encrypted/obfuscated and provides relevant information for decryption.","title":"encryption"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/","text":"// shared / org.readium.r2.shared.publication.encryption / Encryption Encryption \u00b6 [androidJvm]\\ data class Encryption (algorithm: String , compression: String ?, originalLength: Long ?, profile: String ?, scheme: String ?) : JSONable , Parcelable Indicates that a resource is encrypted/obfuscated and provides relevant information for decryption. Parameters \u00b6 androidJvm algorithm Identifies the algorithm used to encrypt the resource (URI). compression Compression method used on the resource. originalLength Original length of the resource in bytes before compression and/or encryption. profile Identifies the encryption profile used to encrypt the resource (URI). scheme Identifies the encryption scheme used to encrypt the resource (URI). Constructors \u00b6 Encryption [androidJvm] fun Encryption (algorithm: String , compression: String ? = null, originalLength: Long ? = null, profile: String ? = null, scheme: String ? = null) Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes an Encryption to its RWPM JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary algorithm [androidJvm] val algorithm : String compression [androidJvm] val compression : String ? = null originalLength [androidJvm] val originalLength : Long ? = null profile [androidJvm] val profile : String ? = null scheme [androidJvm] val scheme : String ? = null","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/#encryption","text":"[androidJvm]\\ data class Encryption (algorithm: String , compression: String ?, originalLength: Long ?, profile: String ?, scheme: String ?) : JSONable , Parcelable Indicates that a resource is encrypted/obfuscated and provides relevant information for decryption.","title":"Encryption"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/#parameters","text":"androidJvm algorithm Identifies the algorithm used to encrypt the resource (URI). compression Compression method used on the resource. originalLength Original length of the resource in bytes before compression and/or encryption. profile Identifies the encryption profile used to encrypt the resource (URI). scheme Identifies the encryption scheme used to encrypt the resource (URI).","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/#constructors","text":"Encryption [androidJvm] fun Encryption (algorithm: String , compression: String ? = null, originalLength: Long ? = null, profile: String ? = null, scheme: String ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes an Encryption to its RWPM JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/#properties","text":"Name Summary algorithm [androidJvm] val algorithm : String compression [androidJvm] val compression : String ? = null originalLength [androidJvm] val originalLength : Long ? = null profile [androidJvm] val profile : String ? = null scheme [androidJvm] val scheme : String ? = null","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/-encryption/","text":"// shared / org.readium.r2.shared.publication.encryption / Encryption / Encryption Encryption \u00b6 [androidJvm]\\ fun Encryption (algorithm: String , compression: String ? = null, originalLength: Long ? = null, profile: String ? = null, scheme: String ? = null) Parameters \u00b6 androidJvm algorithm Identifies the algorithm used to encrypt the resource (URI). compression Compression method used on the resource. originalLength Original length of the resource in bytes before compression and/or encryption. profile Identifies the encryption profile used to encrypt the resource (URI). scheme Identifies the encryption scheme used to encrypt the resource (URI).","title":" encryption"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/-encryption/#encryption","text":"[androidJvm]\\ fun Encryption (algorithm: String , compression: String ? = null, originalLength: Long ? = null, profile: String ? = null, scheme: String ? = null)","title":"Encryption"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/-encryption/#parameters","text":"androidJvm algorithm Identifies the algorithm used to encrypt the resource (URI). compression Compression method used on the resource. originalLength Original length of the resource in bytes before compression and/or encryption. profile Identifies the encryption profile used to encrypt the resource (URI). scheme Identifies the encryption scheme used to encrypt the resource (URI).","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/algorithm/","text":"// shared / org.readium.r2.shared.publication.encryption / Encryption / algorithm algorithm \u00b6 [androidJvm]\\ val algorithm : String","title":"Algorithm"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/algorithm/#algorithm","text":"[androidJvm]\\ val algorithm : String","title":"algorithm"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/compression/","text":"// shared / org.readium.r2.shared.publication.encryption / Encryption / compression compression \u00b6 [androidJvm]\\ val compression : String ? = null","title":"Compression"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/compression/#compression","text":"[androidJvm]\\ val compression : String ? = null","title":"compression"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/original-length/","text":"// shared / org.readium.r2.shared.publication.encryption / Encryption / originalLength originalLength \u00b6 [androidJvm]\\ val originalLength : Long ? = null","title":"Original length"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/original-length/#originallength","text":"[androidJvm]\\ val originalLength : Long ? = null","title":"originalLength"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/profile/","text":"// shared / org.readium.r2.shared.publication.encryption / Encryption / profile profile \u00b6 [androidJvm]\\ val profile : String ? = null","title":"Profile"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/profile/#profile","text":"[androidJvm]\\ val profile : String ? = null","title":"profile"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/scheme/","text":"// shared / org.readium.r2.shared.publication.encryption / Encryption / scheme scheme \u00b6 [androidJvm]\\ val scheme : String ? = null","title":"Scheme"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/scheme/#scheme","text":"[androidJvm]\\ val scheme : String ? = null","title":"scheme"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/to-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication.encryption / Encryption / toJSON toJSON \u00b6 [androidJvm]\\ open override fun toJSON (): JSONObject Serializes an Encryption to its RWPM JSON representation.","title":"To j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/to-j-s-o-n/#tojson","text":"[androidJvm]\\ open override fun toJSON (): JSONObject Serializes an Encryption to its RWPM JSON representation.","title":"toJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/-companion/","text":"// shared / org.readium.r2.shared.publication.encryption / Encryption / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): Encryption ? Creates an Encryption from its RWPM JSON representation. If the encryption can't be parsed, a warning will be logged with warnings .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/-companion/#functions","text":"Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): Encryption ? Creates an Encryption from its RWPM JSON representation. If the encryption can't be parsed, a warning will be logged with warnings .","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/-companion/from-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication.encryption / Encryption / Companion / fromJSON fromJSON \u00b6 [androidJvm]\\ fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): Encryption ? Creates an Encryption from its RWPM JSON representation. If the encryption can't be parsed, a warning will be logged with warnings .","title":"From j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.encryption/-encryption/-companion/from-j-s-o-n/#fromjson","text":"[androidJvm]\\ fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): Encryption ? Creates an Encryption from its RWPM JSON representation. If the encryption can't be parsed, a warning will be logged with warnings .","title":"fromJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/","text":"// shared / org.readium.r2.shared.publication.epub Package org.readium.r2.shared.publication.epub \u00b6 Types \u00b6 Name Summary EpubLayout [androidJvm] enum EpubLayout : Enum < EpubLayout > , Parcelable Hints how the layout of the resource should be presented. https://readium.org/webpub-manifest/schema/extensions/epub/metadata.schema.json Functions \u00b6 Name Summary layoutOf [androidJvm] fun Presentation . layoutOf (link: Link ): EpubLayout Get the layout of the given resource in this publication. Falls back on REFLOWABLE. Properties \u00b6 Name Summary contains [androidJvm] val Properties . contains : Set < String > Identifies content contained in the linked resource, that cannot be strictly identified using a media type. landmarks [androidJvm] val Publication . landmarks : List < Link > Identifies fundamental structural components of the publication in order to enable Reading Systems to provide the User efficient access to them. layout [androidJvm] val Properties . layout : EpubLayout ? Hints how the layout of the resource should be presented. listOfAudioClips [androidJvm] val Publication . listOfAudioClips : List < Link > listOfIllustrations [androidJvm] val Publication . listOfIllustrations : List < Link > listOfTables [androidJvm] val Publication . listOfTables : List < Link > listOfVideoClips [androidJvm] val Publication . listOfVideoClips : List < Link > pageList [androidJvm] val Publication . pageList : List < Link > Provides navigation to positions in the Publication content that correspond to the locations of page boundaries present in a print source being represented by this EPUB Publication.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/#package-orgreadiumr2sharedpublicationepub","text":"","title":"Package org.readium.r2.shared.publication.epub"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/#types","text":"Name Summary EpubLayout [androidJvm] enum EpubLayout : Enum < EpubLayout > , Parcelable Hints how the layout of the resource should be presented. https://readium.org/webpub-manifest/schema/extensions/epub/metadata.schema.json","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/#functions","text":"Name Summary layoutOf [androidJvm] fun Presentation . layoutOf (link: Link ): EpubLayout Get the layout of the given resource in this publication. Falls back on REFLOWABLE.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/#properties","text":"Name Summary contains [androidJvm] val Properties . contains : Set < String > Identifies content contained in the linked resource, that cannot be strictly identified using a media type. landmarks [androidJvm] val Publication . landmarks : List < Link > Identifies fundamental structural components of the publication in order to enable Reading Systems to provide the User efficient access to them. layout [androidJvm] val Properties . layout : EpubLayout ? Hints how the layout of the resource should be presented. listOfAudioClips [androidJvm] val Publication . listOfAudioClips : List < Link > listOfIllustrations [androidJvm] val Publication . listOfIllustrations : List < Link > listOfTables [androidJvm] val Publication . listOfTables : List < Link > listOfVideoClips [androidJvm] val Publication . listOfVideoClips : List < Link > pageList [androidJvm] val Publication . pageList : List < Link > Provides navigation to positions in the Publication content that correspond to the locations of page boundaries present in a print source being represented by this EPUB Publication.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/contains/","text":"// shared / org.readium.r2.shared.publication.epub / contains contains \u00b6 [androidJvm]\\ val Properties . contains : Set < String > Identifies content contained in the linked resource, that cannot be strictly identified using a media type.","title":"Contains"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/contains/#contains","text":"[androidJvm]\\ val Properties . contains : Set < String > Identifies content contained in the linked resource, that cannot be strictly identified using a media type.","title":"contains"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/landmarks/","text":"// shared / org.readium.r2.shared.publication.epub / landmarks landmarks \u00b6 [androidJvm]\\ val Publication . landmarks : List < Link > Identifies fundamental structural components of the publication in order to enable Reading Systems to provide the User efficient access to them.","title":"Landmarks"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/landmarks/#landmarks","text":"[androidJvm]\\ val Publication . landmarks : List < Link > Identifies fundamental structural components of the publication in order to enable Reading Systems to provide the User efficient access to them.","title":"landmarks"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/layout-of/","text":"// shared / org.readium.r2.shared.publication.epub / layoutOf layoutOf \u00b6 [androidJvm]\\ fun Presentation . layoutOf (link: Link ): EpubLayout Get the layout of the given resource in this publication. Falls back on REFLOWABLE.","title":"Layout of"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/layout-of/#layoutof","text":"[androidJvm]\\ fun Presentation . layoutOf (link: Link ): EpubLayout Get the layout of the given resource in this publication. Falls back on REFLOWABLE.","title":"layoutOf"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/layout/","text":"// shared / org.readium.r2.shared.publication.epub / layout layout \u00b6 [androidJvm]\\ val Properties . layout : EpubLayout ? Hints how the layout of the resource should be presented.","title":"Layout"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/layout/#layout","text":"[androidJvm]\\ val Properties . layout : EpubLayout ? Hints how the layout of the resource should be presented.","title":"layout"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/list-of-audio-clips/","text":"// shared / org.readium.r2.shared.publication.epub / listOfAudioClips listOfAudioClips \u00b6 [androidJvm]\\ val Publication . listOfAudioClips : List < Link >","title":"List of audio clips"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/list-of-audio-clips/#listofaudioclips","text":"[androidJvm]\\ val Publication . listOfAudioClips : List < Link >","title":"listOfAudioClips"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/list-of-illustrations/","text":"// shared / org.readium.r2.shared.publication.epub / listOfIllustrations listOfIllustrations \u00b6 [androidJvm]\\ val Publication . listOfIllustrations : List < Link >","title":"List of illustrations"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/list-of-illustrations/#listofillustrations","text":"[androidJvm]\\ val Publication . listOfIllustrations : List < Link >","title":"listOfIllustrations"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/list-of-tables/","text":"// shared / org.readium.r2.shared.publication.epub / listOfTables listOfTables \u00b6 [androidJvm]\\ val Publication . listOfTables : List < Link >","title":"List of tables"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/list-of-tables/#listoftables","text":"[androidJvm]\\ val Publication . listOfTables : List < Link >","title":"listOfTables"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/list-of-video-clips/","text":"// shared / org.readium.r2.shared.publication.epub / listOfVideoClips listOfVideoClips \u00b6 [androidJvm]\\ val Publication . listOfVideoClips : List < Link >","title":"List of video clips"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/list-of-video-clips/#listofvideoclips","text":"[androidJvm]\\ val Publication . listOfVideoClips : List < Link >","title":"listOfVideoClips"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/page-list/","text":"// shared / org.readium.r2.shared.publication.epub / pageList pageList \u00b6 [androidJvm]\\ val Publication . pageList : List < Link > Provides navigation to positions in the Publication content that correspond to the locations of page boundaries present in a print source being represented by this EPUB Publication.","title":"Page list"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/page-list/#pagelist","text":"[androidJvm]\\ val Publication . pageList : List < Link > Provides navigation to positions in the Publication content that correspond to the locations of page boundaries present in a print source being represented by this EPUB Publication.","title":"pageList"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/-epub-layout/","text":"// shared / org.readium.r2.shared.publication.epub / EpubLayout EpubLayout \u00b6 [androidJvm]\\ enum EpubLayout : Enum < EpubLayout > , Parcelable Hints how the layout of the resource should be presented. https://readium.org/webpub-manifest/schema/extensions/epub/metadata.schema.json Entries \u00b6 REFLOWABLE [androidJvm] REFLOWABLE (\"reflowable\") FIXED [androidJvm] FIXED (\"fixed\") Types \u00b6 Name Summary Companion [androidJvm] object Companion : MapCompanion < String , EpubLayout > Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/-epub-layout/#epublayout","text":"[androidJvm]\\ enum EpubLayout : Enum < EpubLayout > , Parcelable Hints how the layout of the resource should be presented. https://readium.org/webpub-manifest/schema/extensions/epub/metadata.schema.json","title":"EpubLayout"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/-epub-layout/#entries","text":"REFLOWABLE [androidJvm] REFLOWABLE (\"reflowable\") FIXED [androidJvm] FIXED (\"fixed\")","title":"Entries"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/-epub-layout/#types","text":"Name Summary Companion [androidJvm] object Companion : MapCompanion < String , EpubLayout >","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/-epub-layout/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/-epub-layout/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/-epub-layout/value/","text":"// shared / org.readium.r2.shared.publication.epub / EpubLayout / value value \u00b6 [androidJvm]\\ val value : String","title":"Value"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/-epub-layout/value/#value","text":"[androidJvm]\\ val value : String","title":"value"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/-epub-layout/-companion/","text":"// shared / org.readium.r2.shared.publication.epub / EpubLayout / Companion Companion \u00b6 [androidJvm]\\ object Companion : MapCompanion < String , EpubLayout > Functions \u00b6 Name Summary get [androidJvm] open fun get (key: String ?): EpubLayout ? Returns the element matching the key , or null if not found. invoke [androidJvm] open operator fun invoke (key: String ?): EpubLayout ? Alias to get , to be used like keyMapper(\"a_key\"). Properties \u00b6 Name Summary keys [androidJvm] val keys : Set < String > Returns the available keys .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/-epub-layout/-companion/#companion","text":"[androidJvm]\\ object Companion : MapCompanion < String , EpubLayout >","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/-epub-layout/-companion/#functions","text":"Name Summary get [androidJvm] open fun get (key: String ?): EpubLayout ? Returns the element matching the key , or null if not found. invoke [androidJvm] open operator fun invoke (key: String ?): EpubLayout ? Alias to get , to be used like keyMapper(\"a_key\").","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/-epub-layout/-companion/#properties","text":"Name Summary keys [androidJvm] val keys : Set < String > Returns the available keys .","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/-epub-layout/-f-i-x-e-d/","text":"// shared / org.readium.r2.shared.publication.epub / EpubLayout / FIXED FIXED \u00b6 [androidJvm]\\ FIXED (\"fixed\") Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/-epub-layout/-f-i-x-e-d/#fixed","text":"[androidJvm]\\ FIXED (\"fixed\")","title":"FIXED"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/-epub-layout/-f-i-x-e-d/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/-epub-layout/-f-i-x-e-d/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/-epub-layout/-r-e-f-l-o-w-a-b-l-e/","text":"// shared / org.readium.r2.shared.publication.epub / EpubLayout / REFLOWABLE REFLOWABLE \u00b6 [androidJvm]\\ REFLOWABLE (\"reflowable\") Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/-epub-layout/-r-e-f-l-o-w-a-b-l-e/#reflowable","text":"[androidJvm]\\ REFLOWABLE (\"reflowable\")","title":"REFLOWABLE"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/-epub-layout/-r-e-f-l-o-w-a-b-l-e/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.epub/-epub-layout/-r-e-f-l-o-w-a-b-l-e/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/","text":"// shared / org.readium.r2.shared.publication.html Package org.readium.r2.shared.publication.html \u00b6 Types \u00b6 Name Summary DomRange [androidJvm] data class DomRange (start: DomRange.Point , end: DomRange.Point ?) : JSONable , Parcelable This construct enables a serializable representation of a DOM Range. Properties \u00b6 Name Summary cssSelector [androidJvm] val Locator.Locations . cssSelector : String ? A CSS Selector. domRange [androidJvm] val Locator.Locations . domRange : DomRange ? An HTML DOM range. partialCfi [androidJvm] val Locator.Locations . partialCfi : String ? partialCfi is an expression conforming to the \"right-hand\" side of the EPUB CFI syntax, that is to say: without the EPUB-specific OPF spine item reference that precedes the first ! exclamation mark (which denotes the \"step indirection\" into a publication document). Note that the wrapping epubcfi(***) syntax is not used for the partialCfi string, i.e. the \"fragment\" part of the CFI grammar is ignored.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/#package-orgreadiumr2sharedpublicationhtml","text":"","title":"Package org.readium.r2.shared.publication.html"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/#types","text":"Name Summary DomRange [androidJvm] data class DomRange (start: DomRange.Point , end: DomRange.Point ?) : JSONable , Parcelable This construct enables a serializable representation of a DOM Range.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/#properties","text":"Name Summary cssSelector [androidJvm] val Locator.Locations . cssSelector : String ? A CSS Selector. domRange [androidJvm] val Locator.Locations . domRange : DomRange ? An HTML DOM range. partialCfi [androidJvm] val Locator.Locations . partialCfi : String ? partialCfi is an expression conforming to the \"right-hand\" side of the EPUB CFI syntax, that is to say: without the EPUB-specific OPF spine item reference that precedes the first ! exclamation mark (which denotes the \"step indirection\" into a publication document). Note that the wrapping epubcfi(***) syntax is not used for the partialCfi string, i.e. the \"fragment\" part of the CFI grammar is ignored.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/css-selector/","text":"// shared / org.readium.r2.shared.publication.html / cssSelector cssSelector \u00b6 [androidJvm]\\ val Locator.Locations . cssSelector : String ? A CSS Selector.","title":"Css selector"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/css-selector/#cssselector","text":"[androidJvm]\\ val Locator.Locations . cssSelector : String ? A CSS Selector.","title":"cssSelector"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/dom-range/","text":"// shared / org.readium.r2.shared.publication.html / domRange domRange \u00b6 [androidJvm]\\ val Locator.Locations . domRange : DomRange ? An HTML DOM range.","title":"Dom range"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/dom-range/#domrange","text":"[androidJvm]\\ val Locator.Locations . domRange : DomRange ? An HTML DOM range.","title":"domRange"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/partial-cfi/","text":"// shared / org.readium.r2.shared.publication.html / partialCfi partialCfi \u00b6 [androidJvm]\\ val Locator.Locations . partialCfi : String ? partialCfi is an expression conforming to the \"right-hand\" side of the EPUB CFI syntax, that is to say: without the EPUB-specific OPF spine item reference that precedes the first ! exclamation mark (which denotes the \"step indirection\" into a publication document). Note that the wrapping epubcfi(***) syntax is not used for the partialCfi string, i.e. the \"fragment\" part of the CFI grammar is ignored.","title":"Partial cfi"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/partial-cfi/#partialcfi","text":"[androidJvm]\\ val Locator.Locations . partialCfi : String ? partialCfi is an expression conforming to the \"right-hand\" side of the EPUB CFI syntax, that is to say: without the EPUB-specific OPF spine item reference that precedes the first ! exclamation mark (which denotes the \"step indirection\" into a publication document). Note that the wrapping epubcfi(***) syntax is not used for the partialCfi string, i.e. the \"fragment\" part of the CFI grammar is ignored.","title":"partialCfi"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/","text":"// shared / org.readium.r2.shared.publication.html / DomRange DomRange \u00b6 [androidJvm]\\ data class DomRange (start: DomRange.Point , end: DomRange.Point ?) : JSONable , Parcelable This construct enables a serializable representation of a DOM Range. In a DOM Range object, the startContainer + startOffset tuple represents the start boundary point. Similarly, the the endContainer + endOffset tuple represents the end boundary point. In both cases, the start/endContainer property is a pointer to either a DOM text node, or a DOM element (this typically depends on the mechanism from which the DOM Range instance originates, for example when obtaining the currently-selected document fragment using the window.selection API). In the case of a DOM text node, the start/endOffset corresponds to a position within the character data. In the case of a DOM element node, the start/endOffset corresponds to a position that designates a child text node. Note that end field is optional. When only the start field is specified, the domRange object represents a \"collapsed\" range that has identical start and end boundary points. https://github.com/readium/architecture/blob/master/models/locators/extensions/html.md#the-domrange-object Parameters \u00b6 androidJvm start A serializable representation of the \"start\" boundary point of the DOM Range. end A serializable representation of the \"end\" boundary point of the DOM Range. Constructors \u00b6 DomRange [androidJvm] fun DomRange (start: DomRange.Point , end: DomRange.Point ? = null) Types \u00b6 Name Summary Companion [androidJvm] object Companion Point [androidJvm] data class Point (cssSelector: String , textNodeIndex: Int , charOffset: Int ?) : JSONable , Parcelable A serializable representation of a boundary point in a DOM Range. Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes the object to its JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary end [androidJvm] val end : DomRange.Point ? = null start [androidJvm] val start : DomRange.Point","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/#domrange","text":"[androidJvm]\\ data class DomRange (start: DomRange.Point , end: DomRange.Point ?) : JSONable , Parcelable This construct enables a serializable representation of a DOM Range. In a DOM Range object, the startContainer + startOffset tuple represents the start boundary point. Similarly, the the endContainer + endOffset tuple represents the end boundary point. In both cases, the start/endContainer property is a pointer to either a DOM text node, or a DOM element (this typically depends on the mechanism from which the DOM Range instance originates, for example when obtaining the currently-selected document fragment using the window.selection API). In the case of a DOM text node, the start/endOffset corresponds to a position within the character data. In the case of a DOM element node, the start/endOffset corresponds to a position that designates a child text node. Note that end field is optional. When only the start field is specified, the domRange object represents a \"collapsed\" range that has identical start and end boundary points. https://github.com/readium/architecture/blob/master/models/locators/extensions/html.md#the-domrange-object","title":"DomRange"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/#parameters","text":"androidJvm start A serializable representation of the \"start\" boundary point of the DOM Range. end A serializable representation of the \"end\" boundary point of the DOM Range.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/#constructors","text":"DomRange [androidJvm] fun DomRange (start: DomRange.Point , end: DomRange.Point ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/#types","text":"Name Summary Companion [androidJvm] object Companion Point [androidJvm] data class Point (cssSelector: String , textNodeIndex: Int , charOffset: Int ?) : JSONable , Parcelable A serializable representation of a boundary point in a DOM Range.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes the object to its JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/#properties","text":"Name Summary end [androidJvm] val end : DomRange.Point ? = null start [androidJvm] val start : DomRange.Point","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-dom-range/","text":"// shared / org.readium.r2.shared.publication.html / DomRange / DomRange DomRange \u00b6 [androidJvm]\\ fun DomRange (start: DomRange.Point , end: DomRange.Point ? = null) Parameters \u00b6 androidJvm start A serializable representation of the \"start\" boundary point of the DOM Range. end A serializable representation of the \"end\" boundary point of the DOM Range.","title":" dom range"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-dom-range/#domrange","text":"[androidJvm]\\ fun DomRange (start: DomRange.Point , end: DomRange.Point ? = null)","title":"DomRange"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-dom-range/#parameters","text":"androidJvm start A serializable representation of the \"start\" boundary point of the DOM Range. end A serializable representation of the \"end\" boundary point of the DOM Range.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/end/","text":"// shared / org.readium.r2.shared.publication.html / DomRange / end end \u00b6 [androidJvm]\\ val end : DomRange.Point ? = null","title":"End"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/end/#end","text":"[androidJvm]\\ val end : DomRange.Point ? = null","title":"end"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/start/","text":"// shared / org.readium.r2.shared.publication.html / DomRange / start start \u00b6 [androidJvm]\\ val start : DomRange.Point","title":"Start"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/start/#start","text":"[androidJvm]\\ val start : DomRange.Point","title":"start"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/to-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication.html / DomRange / toJSON toJSON \u00b6 [androidJvm]\\ open override fun toJSON (): JSONObject Serializes the object to its JSON representation.","title":"To j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/to-j-s-o-n/#tojson","text":"[androidJvm]\\ open override fun toJSON (): JSONObject Serializes the object to its JSON representation.","title":"toJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-companion/","text":"// shared / org.readium.r2.shared.publication.html / DomRange / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): DomRange ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-companion/#functions","text":"Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): DomRange ?","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-companion/from-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication.html / DomRange / Companion / fromJSON fromJSON \u00b6 [androidJvm]\\ fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): DomRange ?","title":"From j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-companion/from-j-s-o-n/#fromjson","text":"[androidJvm]\\ fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): DomRange ?","title":"fromJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-point/","text":"// shared / org.readium.r2.shared.publication.html / DomRange / Point Point \u00b6 [androidJvm]\\ data class Point (cssSelector: String , textNodeIndex: Int , charOffset: Int ?) : JSONable , Parcelable A serializable representation of a boundary point in a DOM Range. The cssSelector field always references a DOM element. If the original DOM Range start/endContainer property references a DOM text node, the textNodeIndex field is used to complement the CSS Selector; thereby providing a pointer to a child DOM text node; and charOffset is used to tell a position within the character data of that DOM text node (just as the DOM Range start/endOffset does). If the original DOM Range start/endContainer property references a DOM Element, then the textNodeIndex field is used to designate the child Text node (just as the DOM Range start/endOffset does), and the optional charOffset field is not used (as there is no explicit position within the character data of the text node). https://github.com/readium/architecture/blob/master/models/locators/extensions/html.md#the-start-and-end-object Constructors \u00b6 Point [androidJvm] fun Point (cssSelector: String , textNodeIndex: Int , charOffset: Int ? = null) Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes the object to its JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary charOffset [androidJvm] val charOffset : Int ? = null cssSelector [androidJvm] val cssSelector : String textNodeIndex [androidJvm] val textNodeIndex : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-point/#point","text":"[androidJvm]\\ data class Point (cssSelector: String , textNodeIndex: Int , charOffset: Int ?) : JSONable , Parcelable A serializable representation of a boundary point in a DOM Range. The cssSelector field always references a DOM element. If the original DOM Range start/endContainer property references a DOM text node, the textNodeIndex field is used to complement the CSS Selector; thereby providing a pointer to a child DOM text node; and charOffset is used to tell a position within the character data of that DOM text node (just as the DOM Range start/endOffset does). If the original DOM Range start/endContainer property references a DOM Element, then the textNodeIndex field is used to designate the child Text node (just as the DOM Range start/endOffset does), and the optional charOffset field is not used (as there is no explicit position within the character data of the text node). https://github.com/readium/architecture/blob/master/models/locators/extensions/html.md#the-start-and-end-object","title":"Point"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-point/#constructors","text":"Point [androidJvm] fun Point (cssSelector: String , textNodeIndex: Int , charOffset: Int ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-point/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-point/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes the object to its JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-point/#properties","text":"Name Summary charOffset [androidJvm] val charOffset : Int ? = null cssSelector [androidJvm] val cssSelector : String textNodeIndex [androidJvm] val textNodeIndex : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-point/-point/","text":"// shared / org.readium.r2.shared.publication.html / DomRange / Point / Point Point \u00b6 [androidJvm]\\ fun Point (cssSelector: String , textNodeIndex: Int , charOffset: Int ? = null)","title":" point"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-point/-point/#point","text":"[androidJvm]\\ fun Point (cssSelector: String , textNodeIndex: Int , charOffset: Int ? = null)","title":"Point"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-point/char-offset/","text":"// shared / org.readium.r2.shared.publication.html / DomRange / Point / charOffset charOffset \u00b6 [androidJvm]\\ val charOffset : Int ? = null","title":"Char offset"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-point/char-offset/#charoffset","text":"[androidJvm]\\ val charOffset : Int ? = null","title":"charOffset"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-point/css-selector/","text":"// shared / org.readium.r2.shared.publication.html / DomRange / Point / cssSelector cssSelector \u00b6 [androidJvm]\\ val cssSelector : String","title":"Css selector"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-point/css-selector/#cssselector","text":"[androidJvm]\\ val cssSelector : String","title":"cssSelector"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-point/text-node-index/","text":"// shared / org.readium.r2.shared.publication.html / DomRange / Point / textNodeIndex textNodeIndex \u00b6 [androidJvm]\\ val textNodeIndex : Int","title":"Text node index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-point/text-node-index/#textnodeindex","text":"[androidJvm]\\ val textNodeIndex : Int","title":"textNodeIndex"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-point/to-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication.html / DomRange / Point / toJSON toJSON \u00b6 [androidJvm]\\ open override fun toJSON (): JSONObject Serializes the object to its JSON representation.","title":"To j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-point/to-j-s-o-n/#tojson","text":"[androidJvm]\\ open override fun toJSON (): JSONObject Serializes the object to its JSON representation.","title":"toJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-point/-companion/","text":"// shared / org.readium.r2.shared.publication.html / DomRange / Point / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): DomRange.Point ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-point/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-point/-companion/#functions","text":"Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): DomRange.Point ?","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-point/-companion/from-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication.html / DomRange / Point / Companion / fromJSON fromJSON \u00b6 [androidJvm]\\ fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): DomRange.Point ?","title":"From j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.html/-dom-range/-point/-companion/from-j-s-o-n/#fromjson","text":"[androidJvm]\\ fun fromJSON (json: JSONObject ?, warnings: WarningLogger ? = null): DomRange.Point ?","title":"fromJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.opds/","text":"// shared / org.readium.r2.shared.publication.opds Package org.readium.r2.shared.publication.opds \u00b6 Properties \u00b6 Name Summary authenticate [androidJvm] val Properties . authenticate : Link ? Indicates that the linked resource supports authentication with the associated Authentication Document. availability [androidJvm] val Properties . availability : Availability ? Indicated the availability of a given resource. copies [androidJvm] val Properties . copies : Copies ? Library-specific feature that contains information about the copies that a library has acquired. holds [androidJvm] val Properties . holds : Holds ? Library-specific features when a specific book is unavailable but provides a hold list. images [androidJvm] val Publication . images : List < Link > indirectAcquisitions [androidJvm] val Properties . indirectAcquisitions : List < Acquisition > Indirect acquisition provides a hint for the expected media type that will be acquired after additional steps. numberOfItems [androidJvm] val Properties . numberOfItems : Int ? Provides a hint about the expected number of items returned. price [androidJvm] val Properties . price : Price ? The price of a publication is tied to its acquisition link.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.opds/#package-orgreadiumr2sharedpublicationopds","text":"","title":"Package org.readium.r2.shared.publication.opds"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.opds/#properties","text":"Name Summary authenticate [androidJvm] val Properties . authenticate : Link ? Indicates that the linked resource supports authentication with the associated Authentication Document. availability [androidJvm] val Properties . availability : Availability ? Indicated the availability of a given resource. copies [androidJvm] val Properties . copies : Copies ? Library-specific feature that contains information about the copies that a library has acquired. holds [androidJvm] val Properties . holds : Holds ? Library-specific features when a specific book is unavailable but provides a hold list. images [androidJvm] val Publication . images : List < Link > indirectAcquisitions [androidJvm] val Properties . indirectAcquisitions : List < Acquisition > Indirect acquisition provides a hint for the expected media type that will be acquired after additional steps. numberOfItems [androidJvm] val Properties . numberOfItems : Int ? Provides a hint about the expected number of items returned. price [androidJvm] val Properties . price : Price ? The price of a publication is tied to its acquisition link.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.opds/authenticate/","text":"// shared / org.readium.r2.shared.publication.opds / authenticate authenticate \u00b6 [androidJvm]\\ val Properties . authenticate : Link ? Indicates that the linked resource supports authentication with the associated Authentication Document. See https://drafts.opds.io/authentication-for-opds-1.0.html","title":"Authenticate"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.opds/authenticate/#authenticate","text":"[androidJvm]\\ val Properties . authenticate : Link ? Indicates that the linked resource supports authentication with the associated Authentication Document. See https://drafts.opds.io/authentication-for-opds-1.0.html","title":"authenticate"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.opds/availability/","text":"// shared / org.readium.r2.shared.publication.opds / availability availability \u00b6 [androidJvm]\\ val Properties . availability : Availability ? Indicated the availability of a given resource.","title":"Availability"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.opds/availability/#availability","text":"[androidJvm]\\ val Properties . availability : Availability ? Indicated the availability of a given resource.","title":"availability"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.opds/copies/","text":"// shared / org.readium.r2.shared.publication.opds / copies copies \u00b6 [androidJvm]\\ val Properties . copies : Copies ? Library-specific feature that contains information about the copies that a library has acquired.","title":"Copies"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.opds/copies/#copies","text":"[androidJvm]\\ val Properties . copies : Copies ? Library-specific feature that contains information about the copies that a library has acquired.","title":"copies"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.opds/holds/","text":"// shared / org.readium.r2.shared.publication.opds / holds holds \u00b6 [androidJvm]\\ val Properties . holds : Holds ? Library-specific features when a specific book is unavailable but provides a hold list.","title":"Holds"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.opds/holds/#holds","text":"[androidJvm]\\ val Properties . holds : Holds ? Library-specific features when a specific book is unavailable but provides a hold list.","title":"holds"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.opds/images/","text":"// shared / org.readium.r2.shared.publication.opds / images images \u00b6 [androidJvm]\\ val Publication . images : List < Link >","title":"Images"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.opds/images/#images","text":"[androidJvm]\\ val Publication . images : List < Link >","title":"images"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.opds/indirect-acquisitions/","text":"// shared / org.readium.r2.shared.publication.opds / indirectAcquisitions indirectAcquisitions \u00b6 [androidJvm]\\ val Properties . indirectAcquisitions : List < Acquisition > Indirect acquisition provides a hint for the expected media type that will be acquired after additional steps.","title":"Indirect acquisitions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.opds/indirect-acquisitions/#indirectacquisitions","text":"[androidJvm]\\ val Properties . indirectAcquisitions : List < Acquisition > Indirect acquisition provides a hint for the expected media type that will be acquired after additional steps.","title":"indirectAcquisitions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.opds/number-of-items/","text":"// shared / org.readium.r2.shared.publication.opds / numberOfItems numberOfItems \u00b6 [androidJvm]\\ val Properties . numberOfItems : Int ? Provides a hint about the expected number of items returned.","title":"Number of items"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.opds/number-of-items/#numberofitems","text":"[androidJvm]\\ val Properties . numberOfItems : Int ? Provides a hint about the expected number of items returned.","title":"numberOfItems"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.opds/price/","text":"// shared / org.readium.r2.shared.publication.opds / price price \u00b6 [androidJvm]\\ val Properties . price : Price ? The price of a publication is tied to its acquisition link.","title":"Price"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.opds/price/#price","text":"[androidJvm]\\ val Properties . price : Price ? The price of a publication is tied to its acquisition link.","title":"price"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/","text":"// shared / org.readium.r2.shared.publication.presentation Package org.readium.r2.shared.publication.presentation \u00b6 Types \u00b6 Name Summary Presentation [androidJvm] data class Presentation (clipped: Boolean ?, continuous: Boolean ?, fit: Presentation.Fit ?, orientation: Presentation.Orientation ?, overflow: Presentation.Overflow ?, spread: Presentation.Spread ?, layout: EpubLayout ?) : JSONable , Parcelable The Presentation Hints extension defines a number of hints for User Agents about the way content should be presented to the user. Properties \u00b6 Name Summary clipped [androidJvm] val Properties . clipped : Boolean ? Specifies whether or not the parts of a linked resource that flow out of the viewport are clipped. fit [androidJvm] val Properties . fit : Presentation.Fit ? Suggested method for constraining a resource inside the viewport. orientation [androidJvm] val Properties . orientation : Presentation.Orientation ? Suggested orientation for the device when displaying the linked resource. overflow [androidJvm] val Properties . overflow : Presentation.Overflow ? Suggested method for handling overflow while displaying the linked resource. page [androidJvm] val Properties . page : Presentation.Page ? Indicates how the linked resource should be displayed in a reading environment that displays synthetic spreads. presentation [androidJvm] val Metadata . presentation : Presentation spread [androidJvm] val Properties . spread : Presentation.Spread ? Indicates the condition to be met for the linked resource to be rendered within a synthetic spread.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/#package-orgreadiumr2sharedpublicationpresentation","text":"","title":"Package org.readium.r2.shared.publication.presentation"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/#types","text":"Name Summary Presentation [androidJvm] data class Presentation (clipped: Boolean ?, continuous: Boolean ?, fit: Presentation.Fit ?, orientation: Presentation.Orientation ?, overflow: Presentation.Overflow ?, spread: Presentation.Spread ?, layout: EpubLayout ?) : JSONable , Parcelable The Presentation Hints extension defines a number of hints for User Agents about the way content should be presented to the user.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/#properties","text":"Name Summary clipped [androidJvm] val Properties . clipped : Boolean ? Specifies whether or not the parts of a linked resource that flow out of the viewport are clipped. fit [androidJvm] val Properties . fit : Presentation.Fit ? Suggested method for constraining a resource inside the viewport. orientation [androidJvm] val Properties . orientation : Presentation.Orientation ? Suggested orientation for the device when displaying the linked resource. overflow [androidJvm] val Properties . overflow : Presentation.Overflow ? Suggested method for handling overflow while displaying the linked resource. page [androidJvm] val Properties . page : Presentation.Page ? Indicates how the linked resource should be displayed in a reading environment that displays synthetic spreads. presentation [androidJvm] val Metadata . presentation : Presentation spread [androidJvm] val Properties . spread : Presentation.Spread ? Indicates the condition to be met for the linked resource to be rendered within a synthetic spread.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/clipped/","text":"// shared / org.readium.r2.shared.publication.presentation / clipped clipped \u00b6 [androidJvm]\\ val Properties . clipped : Boolean ? Specifies whether or not the parts of a linked resource that flow out of the viewport are clipped.","title":"Clipped"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/clipped/#clipped","text":"[androidJvm]\\ val Properties . clipped : Boolean ? Specifies whether or not the parts of a linked resource that flow out of the viewport are clipped.","title":"clipped"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/fit/","text":"// shared / org.readium.r2.shared.publication.presentation / fit fit \u00b6 [androidJvm]\\ val Properties . fit : Presentation.Fit ? Suggested method for constraining a resource inside the viewport.","title":"Fit"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/fit/#fit","text":"[androidJvm]\\ val Properties . fit : Presentation.Fit ? Suggested method for constraining a resource inside the viewport.","title":"fit"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/orientation/","text":"// shared / org.readium.r2.shared.publication.presentation / orientation orientation \u00b6 [androidJvm]\\ val Properties . orientation : Presentation.Orientation ? Suggested orientation for the device when displaying the linked resource.","title":"Orientation"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/orientation/#orientation","text":"[androidJvm]\\ val Properties . orientation : Presentation.Orientation ? Suggested orientation for the device when displaying the linked resource.","title":"orientation"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/overflow/","text":"// shared / org.readium.r2.shared.publication.presentation / overflow overflow \u00b6 [androidJvm]\\ val Properties . overflow : Presentation.Overflow ? Suggested method for handling overflow while displaying the linked resource.","title":"Overflow"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/overflow/#overflow","text":"[androidJvm]\\ val Properties . overflow : Presentation.Overflow ? Suggested method for handling overflow while displaying the linked resource.","title":"overflow"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/page/","text":"// shared / org.readium.r2.shared.publication.presentation / page page \u00b6 [androidJvm]\\ val Properties . page : Presentation.Page ? Indicates how the linked resource should be displayed in a reading environment that displays synthetic spreads.","title":"Page"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/page/#page","text":"[androidJvm]\\ val Properties . page : Presentation.Page ? Indicates how the linked resource should be displayed in a reading environment that displays synthetic spreads.","title":"page"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/presentation/","text":"// shared / org.readium.r2.shared.publication.presentation / presentation presentation \u00b6 [androidJvm]\\ val Metadata . presentation : Presentation","title":"Presentation"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/presentation/#presentation","text":"[androidJvm]\\ val Metadata . presentation : Presentation","title":"presentation"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/spread/","text":"// shared / org.readium.r2.shared.publication.presentation / spread spread \u00b6 [androidJvm]\\ val Properties . spread : Presentation.Spread ? Indicates the condition to be met for the linked resource to be rendered within a synthetic spread.","title":"Spread"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/spread/#spread","text":"[androidJvm]\\ val Properties . spread : Presentation.Spread ? Indicates the condition to be met for the linked resource to be rendered within a synthetic spread.","title":"spread"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation Presentation \u00b6 [androidJvm]\\ data class Presentation (clipped: Boolean ?, continuous: Boolean ?, fit: Presentation.Fit ?, orientation: Presentation.Orientation ?, overflow: Presentation.Overflow ?, spread: Presentation.Spread ?, layout: EpubLayout ?) : JSONable , Parcelable The Presentation Hints extension defines a number of hints for User Agents about the way content should be presented to the user. https://readium.org/webpub-manifest/extensions/presentation.html https://readium.org/webpub-manifest/schema/extensions/presentation/metadata.schema.json These properties are nullable to avoid having default values when it doesn't make sense for a given Publication. If a navigator needs a default value when not specified, Presentation.DEFAULT_X and Presentation.X.DEFAULT can be used. Parameters \u00b6 androidJvm clipped Specifies whether or not the parts of a linked resource that flow out of the viewport are clipped. continuous Indicates how the progression between resources from the readingOrder should be handled. fit Suggested method for constraining a resource inside the viewport. orientation Suggested orientation for the device when displaying the linked resource. overflow Suggested method for handling overflow while displaying the linked resource. spread Indicates the condition to be met for the linked resource to be rendered within a synthetic spread. layout Hints how the layout of the resource should be presented (EPUB extension). Constructors \u00b6 Presentation [androidJvm] fun Presentation (clipped: Boolean ? = null, continuous: Boolean ? = null, fit: Presentation.Fit ? = null, orientation: Presentation.Orientation ? = null, overflow: Presentation.Overflow ? = null, spread: Presentation.Spread ? = null, layout: EpubLayout ? = null) Types \u00b6 Name Summary Companion [androidJvm] object Companion Fit [androidJvm] enum Fit : Enum < Presentation.Fit > , Parcelable Suggested method for constraining a resource inside the viewport. Orientation [androidJvm] enum Orientation : Enum < Presentation.Orientation > , Parcelable Suggested orientation for the device when displaying the linked resource. Overflow [androidJvm] enum Overflow : Enum < Presentation.Overflow > , Parcelable Suggested method for handling overflow while displaying the linked resource. Page [androidJvm] enum Page : Enum < Presentation.Page > , Parcelable Indicates how the linked resource should be displayed in a reading environment that displays synthetic spreads. Spread [androidJvm] enum Spread : Enum < Presentation.Spread > , Parcelable Indicates the condition to be met for the linked resource to be rendered within a synthetic spread. Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes a Presentation to its RWPM JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary clipped [androidJvm] val clipped : Boolean ? = null continuous [androidJvm] val continuous : Boolean ? = null fit [androidJvm] val fit : Presentation.Fit ? = null layout [androidJvm] val layout : EpubLayout ? = null orientation [androidJvm] val orientation : Presentation.Orientation ? = null overflow [androidJvm] val overflow : Presentation.Overflow ? = null spread [androidJvm] val spread : Presentation.Spread ? = null Extensions \u00b6 Name Summary layoutOf [androidJvm] fun Presentation . layoutOf (link: Link ): EpubLayout Get the layout of the given resource in this publication. Falls back on REFLOWABLE.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/#presentation","text":"[androidJvm]\\ data class Presentation (clipped: Boolean ?, continuous: Boolean ?, fit: Presentation.Fit ?, orientation: Presentation.Orientation ?, overflow: Presentation.Overflow ?, spread: Presentation.Spread ?, layout: EpubLayout ?) : JSONable , Parcelable The Presentation Hints extension defines a number of hints for User Agents about the way content should be presented to the user. https://readium.org/webpub-manifest/extensions/presentation.html https://readium.org/webpub-manifest/schema/extensions/presentation/metadata.schema.json These properties are nullable to avoid having default values when it doesn't make sense for a given Publication. If a navigator needs a default value when not specified, Presentation.DEFAULT_X and Presentation.X.DEFAULT can be used.","title":"Presentation"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/#parameters","text":"androidJvm clipped Specifies whether or not the parts of a linked resource that flow out of the viewport are clipped. continuous Indicates how the progression between resources from the readingOrder should be handled. fit Suggested method for constraining a resource inside the viewport. orientation Suggested orientation for the device when displaying the linked resource. overflow Suggested method for handling overflow while displaying the linked resource. spread Indicates the condition to be met for the linked resource to be rendered within a synthetic spread. layout Hints how the layout of the resource should be presented (EPUB extension).","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/#constructors","text":"Presentation [androidJvm] fun Presentation (clipped: Boolean ? = null, continuous: Boolean ? = null, fit: Presentation.Fit ? = null, orientation: Presentation.Orientation ? = null, overflow: Presentation.Overflow ? = null, spread: Presentation.Spread ? = null, layout: EpubLayout ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/#types","text":"Name Summary Companion [androidJvm] object Companion Fit [androidJvm] enum Fit : Enum < Presentation.Fit > , Parcelable Suggested method for constraining a resource inside the viewport. Orientation [androidJvm] enum Orientation : Enum < Presentation.Orientation > , Parcelable Suggested orientation for the device when displaying the linked resource. Overflow [androidJvm] enum Overflow : Enum < Presentation.Overflow > , Parcelable Suggested method for handling overflow while displaying the linked resource. Page [androidJvm] enum Page : Enum < Presentation.Page > , Parcelable Indicates how the linked resource should be displayed in a reading environment that displays synthetic spreads. Spread [androidJvm] enum Spread : Enum < Presentation.Spread > , Parcelable Indicates the condition to be met for the linked resource to be rendered within a synthetic spread.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int toJSON [androidJvm] open override fun toJSON (): JSONObject Serializes a Presentation to its RWPM JSON representation. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/#properties","text":"Name Summary clipped [androidJvm] val clipped : Boolean ? = null continuous [androidJvm] val continuous : Boolean ? = null fit [androidJvm] val fit : Presentation.Fit ? = null layout [androidJvm] val layout : EpubLayout ? = null orientation [androidJvm] val orientation : Presentation.Orientation ? = null overflow [androidJvm] val overflow : Presentation.Overflow ? = null spread [androidJvm] val spread : Presentation.Spread ? = null","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/#extensions","text":"Name Summary layoutOf [androidJvm] fun Presentation . layoutOf (link: Link ): EpubLayout Get the layout of the given resource in this publication. Falls back on REFLOWABLE.","title":"Extensions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-presentation/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Presentation Presentation \u00b6 [androidJvm]\\ fun Presentation (clipped: Boolean ? = null, continuous: Boolean ? = null, fit: Presentation.Fit ? = null, orientation: Presentation.Orientation ? = null, overflow: Presentation.Overflow ? = null, spread: Presentation.Spread ? = null, layout: EpubLayout ? = null) Parameters \u00b6 androidJvm clipped Specifies whether or not the parts of a linked resource that flow out of the viewport are clipped. continuous Indicates how the progression between resources from the readingOrder should be handled. fit Suggested method for constraining a resource inside the viewport. orientation Suggested orientation for the device when displaying the linked resource. overflow Suggested method for handling overflow while displaying the linked resource. spread Indicates the condition to be met for the linked resource to be rendered within a synthetic spread. layout Hints how the layout of the resource should be presented (EPUB extension).","title":" presentation"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-presentation/#presentation","text":"[androidJvm]\\ fun Presentation (clipped: Boolean ? = null, continuous: Boolean ? = null, fit: Presentation.Fit ? = null, orientation: Presentation.Orientation ? = null, overflow: Presentation.Overflow ? = null, spread: Presentation.Spread ? = null, layout: EpubLayout ? = null)","title":"Presentation"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-presentation/#parameters","text":"androidJvm clipped Specifies whether or not the parts of a linked resource that flow out of the viewport are clipped. continuous Indicates how the progression between resources from the readingOrder should be handled. fit Suggested method for constraining a resource inside the viewport. orientation Suggested orientation for the device when displaying the linked resource. overflow Suggested method for handling overflow while displaying the linked resource. spread Indicates the condition to be met for the linked resource to be rendered within a synthetic spread. layout Hints how the layout of the resource should be presented (EPUB extension).","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/clipped/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / clipped clipped \u00b6 [androidJvm]\\ val clipped : Boolean ? = null","title":"Clipped"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/clipped/#clipped","text":"[androidJvm]\\ val clipped : Boolean ? = null","title":"clipped"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/continuous/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / continuous continuous \u00b6 [androidJvm]\\ val continuous : Boolean ? = null","title":"Continuous"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/continuous/#continuous","text":"[androidJvm]\\ val continuous : Boolean ? = null","title":"continuous"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/fit/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / fit fit \u00b6 [androidJvm]\\ val fit : Presentation.Fit ? = null","title":"Fit"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/fit/#fit","text":"[androidJvm]\\ val fit : Presentation.Fit ? = null","title":"fit"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/layout/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / layout layout \u00b6 [androidJvm]\\ val layout : EpubLayout ? = null","title":"Layout"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/layout/#layout","text":"[androidJvm]\\ val layout : EpubLayout ? = null","title":"layout"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/orientation/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / orientation orientation \u00b6 [androidJvm]\\ val orientation : Presentation.Orientation ? = null","title":"Orientation"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/orientation/#orientation","text":"[androidJvm]\\ val orientation : Presentation.Orientation ? = null","title":"orientation"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/overflow/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / overflow overflow \u00b6 [androidJvm]\\ val overflow : Presentation.Overflow ? = null","title":"Overflow"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/overflow/#overflow","text":"[androidJvm]\\ val overflow : Presentation.Overflow ? = null","title":"overflow"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/spread/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / spread spread \u00b6 [androidJvm]\\ val spread : Presentation.Spread ? = null","title":"Spread"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/spread/#spread","text":"[androidJvm]\\ val spread : Presentation.Spread ? = null","title":"spread"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/to-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / toJSON toJSON \u00b6 [androidJvm]\\ open override fun toJSON (): JSONObject Serializes a Presentation to its RWPM JSON representation.","title":"To j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/to-j-s-o-n/#tojson","text":"[androidJvm]\\ open override fun toJSON (): JSONObject Serializes a Presentation to its RWPM JSON representation.","title":"toJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-companion/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?): Presentation Creates a Properties from its RWPM JSON representation. Properties \u00b6 Name Summary DEFAULT_CLIPPED [androidJvm] const val DEFAULT_CLIPPED : Boolean = false Default value for clipped , if not specified. DEFAULT_CONTINUOUS [androidJvm] const val DEFAULT_CONTINUOUS : Boolean = true Default value for continuous , if not specified.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-companion/#functions","text":"Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject ?): Presentation Creates a Properties from its RWPM JSON representation.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-companion/#properties","text":"Name Summary DEFAULT_CLIPPED [androidJvm] const val DEFAULT_CLIPPED : Boolean = false Default value for clipped , if not specified. DEFAULT_CONTINUOUS [androidJvm] const val DEFAULT_CONTINUOUS : Boolean = true Default value for continuous , if not specified.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-companion/-d-e-f-a-u-l-t_-c-l-i-p-p-e-d/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Companion / DEFAULT_CLIPPED DEFAULT_CLIPPED \u00b6 [androidJvm]\\ const val DEFAULT_CLIPPED : Boolean = false Default value for clipped , if not specified.","title":" d e f a u l t  c l i p p e d"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-companion/-d-e-f-a-u-l-t_-c-l-i-p-p-e-d/#default_clipped","text":"[androidJvm]\\ const val DEFAULT_CLIPPED : Boolean = false Default value for clipped , if not specified.","title":"DEFAULT_CLIPPED"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-companion/-d-e-f-a-u-l-t_-c-o-n-t-i-n-u-o-u-s/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Companion / DEFAULT_CONTINUOUS DEFAULT_CONTINUOUS \u00b6 [androidJvm]\\ const val DEFAULT_CONTINUOUS : Boolean = true Default value for continuous , if not specified.","title":" d e f a u l t  c o n t i n u o u s"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-companion/-d-e-f-a-u-l-t_-c-o-n-t-i-n-u-o-u-s/#default_continuous","text":"[androidJvm]\\ const val DEFAULT_CONTINUOUS : Boolean = true Default value for continuous , if not specified.","title":"DEFAULT_CONTINUOUS"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-companion/from-j-s-o-n/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Companion / fromJSON fromJSON \u00b6 [androidJvm]\\ fun fromJSON (json: JSONObject ?): Presentation Creates a Properties from its RWPM JSON representation.","title":"From j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-companion/from-j-s-o-n/#fromjson","text":"[androidJvm]\\ fun fromJSON (json: JSONObject ?): Presentation Creates a Properties from its RWPM JSON representation.","title":"fromJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Fit Fit \u00b6 [androidJvm]\\ enum Fit : Enum < Presentation.Fit > , Parcelable Suggested method for constraining a resource inside the viewport. Entries \u00b6 COVER [androidJvm] COVER (\"cover\") CONTAIN [androidJvm] CONTAIN (\"contain\") HEIGHT [androidJvm] HEIGHT (\"height\") WIDTH [androidJvm] WIDTH (\"width\") Types \u00b6 Name Summary Companion [androidJvm] object Companion : MapCompanion < String , Presentation.Fit > Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/#fit","text":"[androidJvm]\\ enum Fit : Enum < Presentation.Fit > , Parcelable Suggested method for constraining a resource inside the viewport.","title":"Fit"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/#entries","text":"COVER [androidJvm] COVER (\"cover\") CONTAIN [androidJvm] CONTAIN (\"contain\") HEIGHT [androidJvm] HEIGHT (\"height\") WIDTH [androidJvm] WIDTH (\"width\")","title":"Entries"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/#types","text":"Name Summary Companion [androidJvm] object Companion : MapCompanion < String , Presentation.Fit >","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/value/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Fit / value value \u00b6 [androidJvm]\\ val value : String","title":"Value"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/value/#value","text":"[androidJvm]\\ val value : String","title":"value"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/-c-o-n-t-a-i-n/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Fit / CONTAIN CONTAIN \u00b6 [androidJvm]\\ CONTAIN (\"contain\") Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/-c-o-n-t-a-i-n/#contain","text":"[androidJvm]\\ CONTAIN (\"contain\")","title":"CONTAIN"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/-c-o-n-t-a-i-n/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/-c-o-n-t-a-i-n/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/-c-o-v-e-r/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Fit / COVER COVER \u00b6 [androidJvm]\\ COVER (\"cover\") Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/-c-o-v-e-r/#cover","text":"[androidJvm]\\ COVER (\"cover\")","title":"COVER"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/-c-o-v-e-r/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/-c-o-v-e-r/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/-companion/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Fit / Companion Companion \u00b6 [androidJvm]\\ object Companion : MapCompanion < String , Presentation.Fit > Functions \u00b6 Name Summary get [androidJvm] open fun get (key: String ?): Presentation.Fit ? Returns the element matching the key , or null if not found. invoke [androidJvm] open operator fun invoke (key: String ?): Presentation.Fit ? Alias to get , to be used like keyMapper(\"a_key\"). Properties \u00b6 Name Summary DEFAULT [androidJvm] val DEFAULT : Presentation.Fit Default value for Fit , if not specified. keys [androidJvm] val keys : Set < String > Returns the available keys .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/-companion/#companion","text":"[androidJvm]\\ object Companion : MapCompanion < String , Presentation.Fit >","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/-companion/#functions","text":"Name Summary get [androidJvm] open fun get (key: String ?): Presentation.Fit ? Returns the element matching the key , or null if not found. invoke [androidJvm] open operator fun invoke (key: String ?): Presentation.Fit ? Alias to get , to be used like keyMapper(\"a_key\").","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/-companion/#properties","text":"Name Summary DEFAULT [androidJvm] val DEFAULT : Presentation.Fit Default value for Fit , if not specified. keys [androidJvm] val keys : Set < String > Returns the available keys .","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/-companion/-d-e-f-a-u-l-t/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Fit / Companion / DEFAULT DEFAULT \u00b6 [androidJvm]\\ val DEFAULT : Presentation.Fit Default value for Fit , if not specified.","title":" d e f a u l t"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/-companion/-d-e-f-a-u-l-t/#default","text":"[androidJvm]\\ val DEFAULT : Presentation.Fit Default value for Fit , if not specified.","title":"DEFAULT"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/-h-e-i-g-h-t/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Fit / HEIGHT HEIGHT \u00b6 [androidJvm]\\ HEIGHT (\"height\") Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/-h-e-i-g-h-t/#height","text":"[androidJvm]\\ HEIGHT (\"height\")","title":"HEIGHT"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/-h-e-i-g-h-t/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/-h-e-i-g-h-t/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/-w-i-d-t-h/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Fit / WIDTH WIDTH \u00b6 [androidJvm]\\ WIDTH (\"width\") Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/-w-i-d-t-h/#width","text":"[androidJvm]\\ WIDTH (\"width\")","title":"WIDTH"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/-w-i-d-t-h/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-fit/-w-i-d-t-h/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-orientation/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Orientation Orientation \u00b6 [androidJvm]\\ enum Orientation : Enum < Presentation.Orientation > , Parcelable Suggested orientation for the device when displaying the linked resource. Entries \u00b6 PORTRAIT [androidJvm] PORTRAIT (\"portrait\") LANDSCAPE [androidJvm] LANDSCAPE (\"landscape\") AUTO [androidJvm] AUTO (\"auto\") Types \u00b6 Name Summary Companion [androidJvm] object Companion : MapCompanion < String , Presentation.Orientation > Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-orientation/#orientation","text":"[androidJvm]\\ enum Orientation : Enum < Presentation.Orientation > , Parcelable Suggested orientation for the device when displaying the linked resource.","title":"Orientation"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-orientation/#entries","text":"PORTRAIT [androidJvm] PORTRAIT (\"portrait\") LANDSCAPE [androidJvm] LANDSCAPE (\"landscape\") AUTO [androidJvm] AUTO (\"auto\")","title":"Entries"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-orientation/#types","text":"Name Summary Companion [androidJvm] object Companion : MapCompanion < String , Presentation.Orientation >","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-orientation/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-orientation/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-orientation/value/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Orientation / value value \u00b6 [androidJvm]\\ val value : String","title":"Value"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-orientation/value/#value","text":"[androidJvm]\\ val value : String","title":"value"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-orientation/-a-u-t-o/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Orientation / AUTO AUTO \u00b6 [androidJvm]\\ AUTO (\"auto\") Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-orientation/-a-u-t-o/#auto","text":"[androidJvm]\\ AUTO (\"auto\")","title":"AUTO"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-orientation/-a-u-t-o/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-orientation/-a-u-t-o/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-orientation/-companion/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Orientation / Companion Companion \u00b6 [androidJvm]\\ object Companion : MapCompanion < String , Presentation.Orientation > Functions \u00b6 Name Summary get [androidJvm] open fun get (key: String ?): Presentation.Orientation ? Returns the element matching the key , or null if not found. invoke [androidJvm] open operator fun invoke (key: String ?): Presentation.Orientation ? Alias to get , to be used like keyMapper(\"a_key\"). Properties \u00b6 Name Summary DEFAULT [androidJvm] val DEFAULT : Presentation.Orientation Default value for Orientation , if not specified. keys [androidJvm] val keys : Set < String > Returns the available keys .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-orientation/-companion/#companion","text":"[androidJvm]\\ object Companion : MapCompanion < String , Presentation.Orientation >","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-orientation/-companion/#functions","text":"Name Summary get [androidJvm] open fun get (key: String ?): Presentation.Orientation ? Returns the element matching the key , or null if not found. invoke [androidJvm] open operator fun invoke (key: String ?): Presentation.Orientation ? Alias to get , to be used like keyMapper(\"a_key\").","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-orientation/-companion/#properties","text":"Name Summary DEFAULT [androidJvm] val DEFAULT : Presentation.Orientation Default value for Orientation , if not specified. keys [androidJvm] val keys : Set < String > Returns the available keys .","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-orientation/-companion/-d-e-f-a-u-l-t/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Orientation / Companion / DEFAULT DEFAULT \u00b6 [androidJvm]\\ val DEFAULT : Presentation.Orientation Default value for Orientation , if not specified.","title":" d e f a u l t"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-orientation/-companion/-d-e-f-a-u-l-t/#default","text":"[androidJvm]\\ val DEFAULT : Presentation.Orientation Default value for Orientation , if not specified.","title":"DEFAULT"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-orientation/-l-a-n-d-s-c-a-p-e/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Orientation / LANDSCAPE LANDSCAPE \u00b6 [androidJvm]\\ LANDSCAPE (\"landscape\") Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-orientation/-l-a-n-d-s-c-a-p-e/#landscape","text":"[androidJvm]\\ LANDSCAPE (\"landscape\")","title":"LANDSCAPE"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-orientation/-l-a-n-d-s-c-a-p-e/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-orientation/-l-a-n-d-s-c-a-p-e/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-orientation/-p-o-r-t-r-a-i-t/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Orientation / PORTRAIT PORTRAIT \u00b6 [androidJvm]\\ PORTRAIT (\"portrait\") Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-orientation/-p-o-r-t-r-a-i-t/#portrait","text":"[androidJvm]\\ PORTRAIT (\"portrait\")","title":"PORTRAIT"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-orientation/-p-o-r-t-r-a-i-t/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-orientation/-p-o-r-t-r-a-i-t/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-overflow/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Overflow Overflow \u00b6 [androidJvm]\\ enum Overflow : Enum < Presentation.Overflow > , Parcelable Suggested method for handling overflow while displaying the linked resource. Entries \u00b6 SCROLLED [androidJvm] SCROLLED (\"scrolled\") PAGINATED [androidJvm] PAGINATED (\"paginated\") AUTO [androidJvm] AUTO (\"auto\") Types \u00b6 Name Summary Companion [androidJvm] object Companion : MapCompanion < String , Presentation.Overflow > Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-overflow/#overflow","text":"[androidJvm]\\ enum Overflow : Enum < Presentation.Overflow > , Parcelable Suggested method for handling overflow while displaying the linked resource.","title":"Overflow"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-overflow/#entries","text":"SCROLLED [androidJvm] SCROLLED (\"scrolled\") PAGINATED [androidJvm] PAGINATED (\"paginated\") AUTO [androidJvm] AUTO (\"auto\")","title":"Entries"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-overflow/#types","text":"Name Summary Companion [androidJvm] object Companion : MapCompanion < String , Presentation.Overflow >","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-overflow/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-overflow/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-overflow/value/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Overflow / value value \u00b6 [androidJvm]\\ val value : String","title":"Value"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-overflow/value/#value","text":"[androidJvm]\\ val value : String","title":"value"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-overflow/-a-u-t-o/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Overflow / AUTO AUTO \u00b6 [androidJvm]\\ AUTO (\"auto\") Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-overflow/-a-u-t-o/#auto","text":"[androidJvm]\\ AUTO (\"auto\")","title":"AUTO"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-overflow/-a-u-t-o/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-overflow/-a-u-t-o/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-overflow/-companion/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Overflow / Companion Companion \u00b6 [androidJvm]\\ object Companion : MapCompanion < String , Presentation.Overflow > Functions \u00b6 Name Summary get [androidJvm] open fun get (key: String ?): Presentation.Overflow ? Returns the element matching the key , or null if not found. invoke [androidJvm] open operator fun invoke (key: String ?): Presentation.Overflow ? Alias to get , to be used like keyMapper(\"a_key\"). Properties \u00b6 Name Summary DEFAULT [androidJvm] val DEFAULT : Presentation.Overflow Default value for Overflow , if not specified. keys [androidJvm] val keys : Set < String > Returns the available keys .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-overflow/-companion/#companion","text":"[androidJvm]\\ object Companion : MapCompanion < String , Presentation.Overflow >","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-overflow/-companion/#functions","text":"Name Summary get [androidJvm] open fun get (key: String ?): Presentation.Overflow ? Returns the element matching the key , or null if not found. invoke [androidJvm] open operator fun invoke (key: String ?): Presentation.Overflow ? Alias to get , to be used like keyMapper(\"a_key\").","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-overflow/-companion/#properties","text":"Name Summary DEFAULT [androidJvm] val DEFAULT : Presentation.Overflow Default value for Overflow , if not specified. keys [androidJvm] val keys : Set < String > Returns the available keys .","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-overflow/-companion/-d-e-f-a-u-l-t/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Overflow / Companion / DEFAULT DEFAULT \u00b6 [androidJvm]\\ val DEFAULT : Presentation.Overflow Default value for Overflow , if not specified.","title":" d e f a u l t"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-overflow/-companion/-d-e-f-a-u-l-t/#default","text":"[androidJvm]\\ val DEFAULT : Presentation.Overflow Default value for Overflow , if not specified.","title":"DEFAULT"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-overflow/-p-a-g-i-n-a-t-e-d/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Overflow / PAGINATED PAGINATED \u00b6 [androidJvm]\\ PAGINATED (\"paginated\") Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-overflow/-p-a-g-i-n-a-t-e-d/#paginated","text":"[androidJvm]\\ PAGINATED (\"paginated\")","title":"PAGINATED"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-overflow/-p-a-g-i-n-a-t-e-d/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-overflow/-p-a-g-i-n-a-t-e-d/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-overflow/-s-c-r-o-l-l-e-d/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Overflow / SCROLLED SCROLLED \u00b6 [androidJvm]\\ SCROLLED (\"scrolled\") Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-overflow/-s-c-r-o-l-l-e-d/#scrolled","text":"[androidJvm]\\ SCROLLED (\"scrolled\")","title":"SCROLLED"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-overflow/-s-c-r-o-l-l-e-d/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-overflow/-s-c-r-o-l-l-e-d/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-page/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Page Page \u00b6 [androidJvm]\\ enum Page : Enum < Presentation.Page > , Parcelable Indicates how the linked resource should be displayed in a reading environment that displays synthetic spreads. Entries \u00b6 CENTER [androidJvm] CENTER (\"center\") RIGHT [androidJvm] RIGHT (\"right\") LEFT [androidJvm] LEFT (\"left\") Types \u00b6 Name Summary Companion [androidJvm] object Companion : MapCompanion < String , Presentation.Page > Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-page/#page","text":"[androidJvm]\\ enum Page : Enum < Presentation.Page > , Parcelable Indicates how the linked resource should be displayed in a reading environment that displays synthetic spreads.","title":"Page"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-page/#entries","text":"CENTER [androidJvm] CENTER (\"center\") RIGHT [androidJvm] RIGHT (\"right\") LEFT [androidJvm] LEFT (\"left\")","title":"Entries"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-page/#types","text":"Name Summary Companion [androidJvm] object Companion : MapCompanion < String , Presentation.Page >","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-page/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-page/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-page/value/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Page / value value \u00b6 [androidJvm]\\ val value : String","title":"Value"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-page/value/#value","text":"[androidJvm]\\ val value : String","title":"value"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-page/-c-e-n-t-e-r/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Page / CENTER CENTER \u00b6 [androidJvm]\\ CENTER (\"center\") Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-page/-c-e-n-t-e-r/#center","text":"[androidJvm]\\ CENTER (\"center\")","title":"CENTER"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-page/-c-e-n-t-e-r/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-page/-c-e-n-t-e-r/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-page/-companion/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Page / Companion Companion \u00b6 [androidJvm]\\ object Companion : MapCompanion < String , Presentation.Page > Functions \u00b6 Name Summary get [androidJvm] open fun get (key: String ?): Presentation.Page ? Returns the element matching the key , or null if not found. invoke [androidJvm] open operator fun invoke (key: String ?): Presentation.Page ? Alias to get , to be used like keyMapper(\"a_key\"). Properties \u00b6 Name Summary keys [androidJvm] val keys : Set < String > Returns the available keys .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-page/-companion/#companion","text":"[androidJvm]\\ object Companion : MapCompanion < String , Presentation.Page >","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-page/-companion/#functions","text":"Name Summary get [androidJvm] open fun get (key: String ?): Presentation.Page ? Returns the element matching the key , or null if not found. invoke [androidJvm] open operator fun invoke (key: String ?): Presentation.Page ? Alias to get , to be used like keyMapper(\"a_key\").","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-page/-companion/#properties","text":"Name Summary keys [androidJvm] val keys : Set < String > Returns the available keys .","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-page/-l-e-f-t/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Page / LEFT LEFT \u00b6 [androidJvm]\\ LEFT (\"left\") Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-page/-l-e-f-t/#left","text":"[androidJvm]\\ LEFT (\"left\")","title":"LEFT"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-page/-l-e-f-t/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-page/-l-e-f-t/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-page/-r-i-g-h-t/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Page / RIGHT RIGHT \u00b6 [androidJvm]\\ RIGHT (\"right\") Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-page/-r-i-g-h-t/#right","text":"[androidJvm]\\ RIGHT (\"right\")","title":"RIGHT"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-page/-r-i-g-h-t/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-page/-r-i-g-h-t/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Spread Spread \u00b6 [androidJvm]\\ enum Spread : Enum < Presentation.Spread > , Parcelable Indicates the condition to be met for the linked resource to be rendered within a synthetic spread. Entries \u00b6 LANDSCAPE [androidJvm] LANDSCAPE (\"landscape\") NONE [androidJvm] NONE (\"none\") BOTH [androidJvm] BOTH (\"both\") AUTO [androidJvm] AUTO (\"auto\") Types \u00b6 Name Summary Companion [androidJvm] object Companion : MapCompanion < String , Presentation.Spread > Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/#spread","text":"[androidJvm]\\ enum Spread : Enum < Presentation.Spread > , Parcelable Indicates the condition to be met for the linked resource to be rendered within a synthetic spread.","title":"Spread"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/#entries","text":"LANDSCAPE [androidJvm] LANDSCAPE (\"landscape\") NONE [androidJvm] NONE (\"none\") BOTH [androidJvm] BOTH (\"both\") AUTO [androidJvm] AUTO (\"auto\")","title":"Entries"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/#types","text":"Name Summary Companion [androidJvm] object Companion : MapCompanion < String , Presentation.Spread >","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/value/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Spread / value value \u00b6 [androidJvm]\\ val value : String","title":"Value"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/value/#value","text":"[androidJvm]\\ val value : String","title":"value"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/-a-u-t-o/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Spread / AUTO AUTO \u00b6 [androidJvm]\\ AUTO (\"auto\") Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/-a-u-t-o/#auto","text":"[androidJvm]\\ AUTO (\"auto\")","title":"AUTO"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/-a-u-t-o/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/-a-u-t-o/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/-b-o-t-h/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Spread / BOTH BOTH \u00b6 [androidJvm]\\ BOTH (\"both\") Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/-b-o-t-h/#both","text":"[androidJvm]\\ BOTH (\"both\")","title":"BOTH"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/-b-o-t-h/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/-b-o-t-h/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/-companion/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Spread / Companion Companion \u00b6 [androidJvm]\\ object Companion : MapCompanion < String , Presentation.Spread > Functions \u00b6 Name Summary get [androidJvm] open fun get (key: String ?): Presentation.Spread ? Returns the element matching the key , or null if not found. invoke [androidJvm] open operator fun invoke (key: String ?): Presentation.Spread ? Alias to get , to be used like keyMapper(\"a_key\"). Properties \u00b6 Name Summary DEFAULT [androidJvm] val DEFAULT : Presentation.Spread Default value for Spread , if not specified. keys [androidJvm] val keys : Set < String > Returns the available keys .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/-companion/#companion","text":"[androidJvm]\\ object Companion : MapCompanion < String , Presentation.Spread >","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/-companion/#functions","text":"Name Summary get [androidJvm] open fun get (key: String ?): Presentation.Spread ? Returns the element matching the key , or null if not found. invoke [androidJvm] open operator fun invoke (key: String ?): Presentation.Spread ? Alias to get , to be used like keyMapper(\"a_key\").","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/-companion/#properties","text":"Name Summary DEFAULT [androidJvm] val DEFAULT : Presentation.Spread Default value for Spread , if not specified. keys [androidJvm] val keys : Set < String > Returns the available keys .","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/-companion/-d-e-f-a-u-l-t/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Spread / Companion / DEFAULT DEFAULT \u00b6 [androidJvm]\\ val DEFAULT : Presentation.Spread Default value for Spread , if not specified.","title":" d e f a u l t"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/-companion/-d-e-f-a-u-l-t/#default","text":"[androidJvm]\\ val DEFAULT : Presentation.Spread Default value for Spread , if not specified.","title":"DEFAULT"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/-l-a-n-d-s-c-a-p-e/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Spread / LANDSCAPE LANDSCAPE \u00b6 [androidJvm]\\ LANDSCAPE (\"landscape\") Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/-l-a-n-d-s-c-a-p-e/#landscape","text":"[androidJvm]\\ LANDSCAPE (\"landscape\")","title":"LANDSCAPE"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/-l-a-n-d-s-c-a-p-e/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/-l-a-n-d-s-c-a-p-e/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/-n-o-n-e/","text":"// shared / org.readium.r2.shared.publication.presentation / Presentation / Spread / NONE NONE \u00b6 [androidJvm]\\ NONE (\"none\") Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/-n-o-n-e/#none","text":"[androidJvm]\\ NONE (\"none\")","title":"NONE"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/-n-o-n-e/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.presentation/-presentation/-spread/-n-o-n-e/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int value [androidJvm] val value : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/","text":"// shared / org.readium.r2.shared.publication.services Package org.readium.r2.shared.publication.services \u00b6 Types \u00b6 Name Summary ContentProtectionService [androidJvm] interface ContentProtectionService : Publication.Service Provides information about a publication's content protection and manages user rights. CoverService [androidJvm] interface CoverService : Publication.Service Provides an easy access to a bitmap version of the publication cover. DefaultLocatorService [androidJvm] open class DefaultLocatorService (readingOrder: List < Link >, positionsByReadingOrder: suspend () -> List < List < Locator >>) : LocatorService GeneratedCoverService [androidJvm] abstract class GeneratedCoverService : CoverService A CoverService which provides a unique cover for each Publication. InMemoryCoverService [androidJvm] class InMemoryCoverService : GeneratedCoverService A CoverService which uses a provided in-memory bitmap. LocatorService [androidJvm] interface LocatorService : Publication.Service Locates the destination of various sources (e.g. locators, progression, etc.) in the publication. PerResourcePositionsService [androidJvm] class PerResourcePositionsService (readingOrder: List < Link >, fallbackMediaType: String ) : PositionsService Simple PositionsService for a Publication which generates one position per readingOrder resource. PositionsService [androidJvm] interface PositionsService : Publication.Service Provides a list of discrete locations in the publication, no matter what the original format is. Functions \u00b6 Name Summary cover [androidJvm] suspend fun Publication . cover (): Bitmap ? Returns the publication cover as a Bitmap at its maximum size. coverFitting [androidJvm] suspend fun Publication . coverFitting (maxSize: Size ): Bitmap ? Returns the publication cover as a Bitmap , scaled down to fit the given maxSize . locate [androidJvm] suspend fun Publication . locate (locator: Locator ): Locator ? Locates the target of the given locator . locateProgression [androidJvm] suspend fun Publication . locateProgression (totalProgression: Double ): Locator ? Locates the target at the given progression relative to the whole publication. positions [androidJvm] suspend fun Publication . positions (): List < Locator > Returns the list of all the positions in the publication. positionsByReadingOrder [androidJvm] suspend fun Publication . positionsByReadingOrder (): List < List < Locator >> Returns the list of all the positions in the publication, grouped by the resource reading order index. Properties \u00b6 Name Summary contentProtectionServiceFactory [androidJvm] var Publication.ServicesBuilder . contentProtectionServiceFactory : ServiceFactory ? Factory to build a ContentProtectionService . coverServiceFactory [androidJvm] var Publication.ServicesBuilder . coverServiceFactory : ServiceFactory ? Factory to build a CoverService . credentials [androidJvm] val Publication . credentials : String ? Credentials used to unlock this Publication . isProtected [androidJvm] val Publication . isProtected : Boolean Returns whether this Publication is protected by a Content Protection technology. isRestricted [androidJvm] val Publication . isRestricted : Boolean Whether the Publication has a restricted access to its resources, and can't be rendered in a Navigator. locatorServiceFactory [androidJvm] var Publication.ServicesBuilder . locatorServiceFactory : ServiceFactory ? Factory to build a LocatorService positionsServiceFactory [androidJvm] var Publication.ServicesBuilder . positionsServiceFactory : ServiceFactory ? Factory to build a PositionsService protectionError [androidJvm] val Publication . protectionError : UserException ? The error raised when trying to unlock the Publication , if any. protectionLocalizedName [androidJvm] val Publication . protectionLocalizedName : LocalizedString ? User-facing localized name for this Content Protection, e.g. \"Readium LCP\". It could be used in a sentence such as \"Protected by {name}\". protectionName [androidJvm] val Publication . protectionName : String ? User-facing name for this Content Protection, e.g. \"Readium LCP\". It could be used in a sentence such as \"Protected by {name}\". protectionScheme [androidJvm] val Publication . protectionScheme : ContentProtection.Scheme ? Known technology for this type of Content Protection. rights [androidJvm] val Publication . rights : ContentProtectionService.UserRights Manages consumption of user rights and permissions.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/#package-orgreadiumr2sharedpublicationservices","text":"","title":"Package org.readium.r2.shared.publication.services"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/#types","text":"Name Summary ContentProtectionService [androidJvm] interface ContentProtectionService : Publication.Service Provides information about a publication's content protection and manages user rights. CoverService [androidJvm] interface CoverService : Publication.Service Provides an easy access to a bitmap version of the publication cover. DefaultLocatorService [androidJvm] open class DefaultLocatorService (readingOrder: List < Link >, positionsByReadingOrder: suspend () -> List < List < Locator >>) : LocatorService GeneratedCoverService [androidJvm] abstract class GeneratedCoverService : CoverService A CoverService which provides a unique cover for each Publication. InMemoryCoverService [androidJvm] class InMemoryCoverService : GeneratedCoverService A CoverService which uses a provided in-memory bitmap. LocatorService [androidJvm] interface LocatorService : Publication.Service Locates the destination of various sources (e.g. locators, progression, etc.) in the publication. PerResourcePositionsService [androidJvm] class PerResourcePositionsService (readingOrder: List < Link >, fallbackMediaType: String ) : PositionsService Simple PositionsService for a Publication which generates one position per readingOrder resource. PositionsService [androidJvm] interface PositionsService : Publication.Service Provides a list of discrete locations in the publication, no matter what the original format is.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/#functions","text":"Name Summary cover [androidJvm] suspend fun Publication . cover (): Bitmap ? Returns the publication cover as a Bitmap at its maximum size. coverFitting [androidJvm] suspend fun Publication . coverFitting (maxSize: Size ): Bitmap ? Returns the publication cover as a Bitmap , scaled down to fit the given maxSize . locate [androidJvm] suspend fun Publication . locate (locator: Locator ): Locator ? Locates the target of the given locator . locateProgression [androidJvm] suspend fun Publication . locateProgression (totalProgression: Double ): Locator ? Locates the target at the given progression relative to the whole publication. positions [androidJvm] suspend fun Publication . positions (): List < Locator > Returns the list of all the positions in the publication. positionsByReadingOrder [androidJvm] suspend fun Publication . positionsByReadingOrder (): List < List < Locator >> Returns the list of all the positions in the publication, grouped by the resource reading order index.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/#properties","text":"Name Summary contentProtectionServiceFactory [androidJvm] var Publication.ServicesBuilder . contentProtectionServiceFactory : ServiceFactory ? Factory to build a ContentProtectionService . coverServiceFactory [androidJvm] var Publication.ServicesBuilder . coverServiceFactory : ServiceFactory ? Factory to build a CoverService . credentials [androidJvm] val Publication . credentials : String ? Credentials used to unlock this Publication . isProtected [androidJvm] val Publication . isProtected : Boolean Returns whether this Publication is protected by a Content Protection technology. isRestricted [androidJvm] val Publication . isRestricted : Boolean Whether the Publication has a restricted access to its resources, and can't be rendered in a Navigator. locatorServiceFactory [androidJvm] var Publication.ServicesBuilder . locatorServiceFactory : ServiceFactory ? Factory to build a LocatorService positionsServiceFactory [androidJvm] var Publication.ServicesBuilder . positionsServiceFactory : ServiceFactory ? Factory to build a PositionsService protectionError [androidJvm] val Publication . protectionError : UserException ? The error raised when trying to unlock the Publication , if any. protectionLocalizedName [androidJvm] val Publication . protectionLocalizedName : LocalizedString ? User-facing localized name for this Content Protection, e.g. \"Readium LCP\". It could be used in a sentence such as \"Protected by {name}\". protectionName [androidJvm] val Publication . protectionName : String ? User-facing name for this Content Protection, e.g. \"Readium LCP\". It could be used in a sentence such as \"Protected by {name}\". protectionScheme [androidJvm] val Publication . protectionScheme : ContentProtection.Scheme ? Known technology for this type of Content Protection. rights [androidJvm] val Publication . rights : ContentProtectionService.UserRights Manages consumption of user rights and permissions.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/content-protection-service-factory/","text":"// shared / org.readium.r2.shared.publication.services / contentProtectionServiceFactory contentProtectionServiceFactory \u00b6 [androidJvm]\\ var Publication.ServicesBuilder . contentProtectionServiceFactory : ServiceFactory ? Factory to build a ContentProtectionService .","title":"Content protection service factory"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/content-protection-service-factory/#contentprotectionservicefactory","text":"[androidJvm]\\ var Publication.ServicesBuilder . contentProtectionServiceFactory : ServiceFactory ? Factory to build a ContentProtectionService .","title":"contentProtectionServiceFactory"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/cover-fitting/","text":"// shared / org.readium.r2.shared.publication.services / coverFitting coverFitting \u00b6 [androidJvm]\\ suspend fun Publication . coverFitting (maxSize: Size ): Bitmap ? Returns the publication cover as a Bitmap , scaled down to fit the given maxSize .","title":"Cover fitting"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/cover-fitting/#coverfitting","text":"[androidJvm]\\ suspend fun Publication . coverFitting (maxSize: Size ): Bitmap ? Returns the publication cover as a Bitmap , scaled down to fit the given maxSize .","title":"coverFitting"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/cover-service-factory/","text":"// shared / org.readium.r2.shared.publication.services / coverServiceFactory coverServiceFactory \u00b6 [androidJvm]\\ var Publication.ServicesBuilder . coverServiceFactory : ServiceFactory ? Factory to build a CoverService .","title":"Cover service factory"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/cover-service-factory/#coverservicefactory","text":"[androidJvm]\\ var Publication.ServicesBuilder . coverServiceFactory : ServiceFactory ? Factory to build a CoverService .","title":"coverServiceFactory"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/cover/","text":"// shared / org.readium.r2.shared.publication.services / cover cover \u00b6 [androidJvm]\\ suspend fun Publication . cover (): Bitmap ? Returns the publication cover as a Bitmap at its maximum size.","title":"Cover"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/cover/#cover","text":"[androidJvm]\\ suspend fun Publication . cover (): Bitmap ? Returns the publication cover as a Bitmap at its maximum size.","title":"cover"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/credentials/","text":"// shared / org.readium.r2.shared.publication.services / credentials credentials \u00b6 [androidJvm]\\ val Publication . credentials : String ? Credentials used to unlock this Publication .","title":"Credentials"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/credentials/#credentials","text":"[androidJvm]\\ val Publication . credentials : String ? Credentials used to unlock this Publication .","title":"credentials"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/is-protected/","text":"// shared / org.readium.r2.shared.publication.services / isProtected isProtected \u00b6 [androidJvm]\\ val Publication . isProtected : Boolean Returns whether this Publication is protected by a Content Protection technology.","title":"Is protected"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/is-protected/#isprotected","text":"[androidJvm]\\ val Publication . isProtected : Boolean Returns whether this Publication is protected by a Content Protection technology.","title":"isProtected"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/is-restricted/","text":"// shared / org.readium.r2.shared.publication.services / isRestricted isRestricted \u00b6 [androidJvm]\\ val Publication . isRestricted : Boolean Whether the Publication has a restricted access to its resources, and can't be rendered in a Navigator.","title":"Is restricted"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/is-restricted/#isrestricted","text":"[androidJvm]\\ val Publication . isRestricted : Boolean Whether the Publication has a restricted access to its resources, and can't be rendered in a Navigator.","title":"isRestricted"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/locate-progression/","text":"// shared / org.readium.r2.shared.publication.services / locateProgression locateProgression \u00b6 [androidJvm]\\ suspend fun Publication . locateProgression (totalProgression: Double ): Locator ? Locates the target at the given progression relative to the whole publication.","title":"Locate progression"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/locate-progression/#locateprogression","text":"[androidJvm]\\ suspend fun Publication . locateProgression (totalProgression: Double ): Locator ? Locates the target at the given progression relative to the whole publication.","title":"locateProgression"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/locate/","text":"// shared / org.readium.r2.shared.publication.services / locate locate \u00b6 [androidJvm]\\ suspend fun Publication . locate (locator: Locator ): Locator ? Locates the target of the given locator .","title":"Locate"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/locate/#locate","text":"[androidJvm]\\ suspend fun Publication . locate (locator: Locator ): Locator ? Locates the target of the given locator .","title":"locate"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/locator-service-factory/","text":"// shared / org.readium.r2.shared.publication.services / locatorServiceFactory locatorServiceFactory \u00b6 [androidJvm]\\ var Publication.ServicesBuilder . locatorServiceFactory : ServiceFactory ? Factory to build a LocatorService","title":"Locator service factory"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/locator-service-factory/#locatorservicefactory","text":"[androidJvm]\\ var Publication.ServicesBuilder . locatorServiceFactory : ServiceFactory ? Factory to build a LocatorService","title":"locatorServiceFactory"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/positions-by-reading-order/","text":"// shared / org.readium.r2.shared.publication.services / positionsByReadingOrder positionsByReadingOrder \u00b6 [androidJvm]\\ suspend fun Publication . positionsByReadingOrder (): List < List < Locator >> Returns the list of all the positions in the publication, grouped by the resource reading order index.","title":"Positions by reading order"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/positions-by-reading-order/#positionsbyreadingorder","text":"[androidJvm]\\ suspend fun Publication . positionsByReadingOrder (): List < List < Locator >> Returns the list of all the positions in the publication, grouped by the resource reading order index.","title":"positionsByReadingOrder"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/positions-service-factory/","text":"// shared / org.readium.r2.shared.publication.services / positionsServiceFactory positionsServiceFactory \u00b6 [androidJvm]\\ var Publication.ServicesBuilder . positionsServiceFactory : ServiceFactory ? Factory to build a PositionsService","title":"Positions service factory"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/positions-service-factory/#positionsservicefactory","text":"[androidJvm]\\ var Publication.ServicesBuilder . positionsServiceFactory : ServiceFactory ? Factory to build a PositionsService","title":"positionsServiceFactory"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/positions/","text":"// shared / org.readium.r2.shared.publication.services / positions positions \u00b6 [androidJvm]\\ suspend fun Publication . positions (): List < Locator > Returns the list of all the positions in the publication.","title":"Positions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/positions/#positions","text":"[androidJvm]\\ suspend fun Publication . positions (): List < Locator > Returns the list of all the positions in the publication.","title":"positions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/protection-error/","text":"// shared / org.readium.r2.shared.publication.services / protectionError protectionError \u00b6 [androidJvm]\\ val Publication . protectionError : UserException ? The error raised when trying to unlock the Publication , if any.","title":"Protection error"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/protection-error/#protectionerror","text":"[androidJvm]\\ val Publication . protectionError : UserException ? The error raised when trying to unlock the Publication , if any.","title":"protectionError"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/protection-localized-name/","text":"// shared / org.readium.r2.shared.publication.services / protectionLocalizedName protectionLocalizedName \u00b6 [androidJvm]\\ val Publication . protectionLocalizedName : LocalizedString ? User-facing localized name for this Content Protection, e.g. \"Readium LCP\". It could be used in a sentence such as \"Protected by {name}\".","title":"Protection localized name"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/protection-localized-name/#protectionlocalizedname","text":"[androidJvm]\\ val Publication . protectionLocalizedName : LocalizedString ? User-facing localized name for this Content Protection, e.g. \"Readium LCP\". It could be used in a sentence such as \"Protected by {name}\".","title":"protectionLocalizedName"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/protection-name/","text":"// shared / org.readium.r2.shared.publication.services / protectionName protectionName \u00b6 [androidJvm]\\ val Publication . protectionName : String ? User-facing name for this Content Protection, e.g. \"Readium LCP\". It could be used in a sentence such as \"Protected by {name}\".","title":"Protection name"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/protection-name/#protectionname","text":"[androidJvm]\\ val Publication . protectionName : String ? User-facing name for this Content Protection, e.g. \"Readium LCP\". It could be used in a sentence such as \"Protected by {name}\".","title":"protectionName"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/protection-scheme/","text":"// shared / org.readium.r2.shared.publication.services / protectionScheme protectionScheme \u00b6 [androidJvm]\\ val Publication . protectionScheme : ContentProtection.Scheme ? Known technology for this type of Content Protection.","title":"Protection scheme"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/protection-scheme/#protectionscheme","text":"[androidJvm]\\ val Publication . protectionScheme : ContentProtection.Scheme ? Known technology for this type of Content Protection.","title":"protectionScheme"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/rights/","text":"// shared / org.readium.r2.shared.publication.services / rights rights \u00b6 [androidJvm]\\ val Publication . rights : ContentProtectionService.UserRights Manages consumption of user rights and permissions.","title":"Rights"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/rights/#rights","text":"[androidJvm]\\ val Publication . rights : ContentProtectionService.UserRights Manages consumption of user rights and permissions.","title":"rights"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/","text":"// shared / org.readium.r2.shared.publication.services / ContentProtectionService ContentProtectionService \u00b6 [androidJvm]\\ interface ContentProtectionService : Publication.Service Provides information about a publication's content protection and manages user rights. Types \u00b6 Name Summary UserRights [androidJvm] interface UserRights Manages consumption of user rights and permissions. Functions \u00b6 Name Summary close [androidJvm] open fun close () Closes any opened file handles, removes temporary files, etc. get [androidJvm] open override fun get (link: Link ): Resource ? A service can return a Resource to: Properties \u00b6 Name Summary credentials [androidJvm] abstract val credentials : String ? Credentials used to unlock this Publication . error [androidJvm] abstract val error : UserException ? The error raised when trying to unlock the Publication , if any. isRestricted [androidJvm] abstract val isRestricted : Boolean Whether the Publication has a restricted access to its resources, and can't be rendered in a Navigator. links [androidJvm] open override val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get . name [androidJvm] open val name : LocalizedString ? User-facing name for this Content Protection, e.g. \"Readium LCP\". It could be used in a sentence such as \"Protected by {name}\" rights [androidJvm] abstract val rights : ContentProtectionService.UserRights Manages consumption of user rights and permissions. scheme [androidJvm] open val scheme : ContentProtection.Scheme ? Known technology for this type of Content Protection.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/#contentprotectionservice","text":"[androidJvm]\\ interface ContentProtectionService : Publication.Service Provides information about a publication's content protection and manages user rights.","title":"ContentProtectionService"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/#types","text":"Name Summary UserRights [androidJvm] interface UserRights Manages consumption of user rights and permissions.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/#functions","text":"Name Summary close [androidJvm] open fun close () Closes any opened file handles, removes temporary files, etc. get [androidJvm] open override fun get (link: Link ): Resource ? A service can return a Resource to:","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/#properties","text":"Name Summary credentials [androidJvm] abstract val credentials : String ? Credentials used to unlock this Publication . error [androidJvm] abstract val error : UserException ? The error raised when trying to unlock the Publication , if any. isRestricted [androidJvm] abstract val isRestricted : Boolean Whether the Publication has a restricted access to its resources, and can't be rendered in a Navigator. links [androidJvm] open override val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get . name [androidJvm] open val name : LocalizedString ? User-facing name for this Content Protection, e.g. \"Readium LCP\". It could be used in a sentence such as \"Protected by {name}\" rights [androidJvm] abstract val rights : ContentProtectionService.UserRights Manages consumption of user rights and permissions. scheme [androidJvm] open val scheme : ContentProtection.Scheme ? Known technology for this type of Content Protection.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/credentials/","text":"// shared / org.readium.r2.shared.publication.services / ContentProtectionService / credentials credentials \u00b6 [androidJvm]\\ abstract val credentials : String ? Credentials used to unlock this Publication .","title":"Credentials"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/credentials/#credentials","text":"[androidJvm]\\ abstract val credentials : String ? Credentials used to unlock this Publication .","title":"credentials"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/error/","text":"// shared / org.readium.r2.shared.publication.services / ContentProtectionService / error error \u00b6 [androidJvm]\\ abstract val error : UserException ? The error raised when trying to unlock the Publication , if any.","title":"Error"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/error/#error","text":"[androidJvm]\\ abstract val error : UserException ? The error raised when trying to unlock the Publication , if any.","title":"error"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/get/","text":"// shared / org.readium.r2.shared.publication.services / ContentProtectionService / get get \u00b6 [androidJvm]\\ open override fun get (link: Link ): Resource ? A service can return a Resource to: respond to a request to its web API declared in links, serve additional resources on behalf of the publication, replace a publication resource by its own version. Called by Publication.get for each request. Warning: If you need to request one of the publication resources to answer the request, use the Fetcher provided by the Publication.Service.Context instead of Publication.get , otherwise it will trigger an infinite loop. Return \u00b6 The Resource containing the response, or null if the service doesn't recognize this request.","title":"Get"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/get/#get","text":"[androidJvm]\\ open override fun get (link: Link ): Resource ? A service can return a Resource to: respond to a request to its web API declared in links, serve additional resources on behalf of the publication, replace a publication resource by its own version. Called by Publication.get for each request. Warning: If you need to request one of the publication resources to answer the request, use the Fetcher provided by the Publication.Service.Context instead of Publication.get , otherwise it will trigger an infinite loop.","title":"get"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/get/#return","text":"The Resource containing the response, or null if the service doesn't recognize this request.","title":"Return"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/is-restricted/","text":"// shared / org.readium.r2.shared.publication.services / ContentProtectionService / isRestricted isRestricted \u00b6 [androidJvm]\\ abstract val isRestricted : Boolean Whether the Publication has a restricted access to its resources, and can't be rendered in a Navigator.","title":"Is restricted"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/is-restricted/#isrestricted","text":"[androidJvm]\\ abstract val isRestricted : Boolean Whether the Publication has a restricted access to its resources, and can't be rendered in a Navigator.","title":"isRestricted"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/links/","text":"// shared / org.readium.r2.shared.publication.services / ContentProtectionService / links links \u00b6 [androidJvm]\\ open override val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get . To disambiguate the href with a publication's local resources, you should use the prefix /~readium/. A custom media type or rel should be used to identify the service. You can use a templated URI to accept query parameters, e.g.: Link(\\ href = \"/~readium/search{?text}\",\\ type = \"application/vnd.readium.search+json\",\\ templated = true\\ )","title":"Links"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/links/#links","text":"[androidJvm]\\ open override val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get . To disambiguate the href with a publication's local resources, you should use the prefix /~readium/. A custom media type or rel should be used to identify the service. You can use a templated URI to accept query parameters, e.g.: Link(\\ href = \"/~readium/search{?text}\",\\ type = \"application/vnd.readium.search+json\",\\ templated = true\\ )","title":"links"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/name/","text":"// shared / org.readium.r2.shared.publication.services / ContentProtectionService / name name \u00b6 [androidJvm]\\ open val name : LocalizedString ? User-facing name for this Content Protection, e.g. \"Readium LCP\". It could be used in a sentence such as \"Protected by {name}\"","title":"Name"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/name/#name","text":"[androidJvm]\\ open val name : LocalizedString ? User-facing name for this Content Protection, e.g. \"Readium LCP\". It could be used in a sentence such as \"Protected by {name}\"","title":"name"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/rights/","text":"// shared / org.readium.r2.shared.publication.services / ContentProtectionService / rights rights \u00b6 [androidJvm]\\ abstract val rights : ContentProtectionService.UserRights Manages consumption of user rights and permissions.","title":"Rights"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/rights/#rights","text":"[androidJvm]\\ abstract val rights : ContentProtectionService.UserRights Manages consumption of user rights and permissions.","title":"rights"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/scheme/","text":"// shared / org.readium.r2.shared.publication.services / ContentProtectionService / scheme scheme \u00b6 [androidJvm]\\ open val scheme : ContentProtection.Scheme ? Known technology for this type of Content Protection.","title":"Scheme"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/scheme/#scheme","text":"[androidJvm]\\ open val scheme : ContentProtection.Scheme ? Known technology for this type of Content Protection.","title":"scheme"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/","text":"// shared / org.readium.r2.shared.publication.services / ContentProtectionService / UserRights UserRights \u00b6 [androidJvm]\\ interface UserRights Manages consumption of user rights and permissions. Types \u00b6 Name Summary AllRestricted [androidJvm] object AllRestricted : ContentProtectionService.UserRights A UserRights which forbids any right. Unrestricted [androidJvm] object Unrestricted : ContentProtectionService.UserRights A UserRights without any restriction. Functions \u00b6 Name Summary canCopy [androidJvm] abstract fun canCopy (text: String ): Boolean Returns whether the user is allowed to copy the given text to the pasteboard. canPrint [androidJvm] abstract fun canPrint (pageCount: Int ): Boolean Returns whether the user is allowed to print the given amount of pages. copy [androidJvm] abstract fun copy (text: String ): Boolean Consumes the given text with the copy right. print [androidJvm] abstract fun print (pageCount: Int ): Boolean Consumes the given amount of pages with the print right. Properties \u00b6 Name Summary canCopy [androidJvm] abstract val canCopy : Boolean Returns whether the user is currently allowed to copy content to the pasteboard. canPrint [androidJvm] abstract val canPrint : Boolean Returns whether the user is currently allowed to print the content. Inheritors \u00b6 Name ContentProtectionService.UserRights ContentProtectionService.UserRights","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/#userrights","text":"[androidJvm]\\ interface UserRights Manages consumption of user rights and permissions.","title":"UserRights"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/#types","text":"Name Summary AllRestricted [androidJvm] object AllRestricted : ContentProtectionService.UserRights A UserRights which forbids any right. Unrestricted [androidJvm] object Unrestricted : ContentProtectionService.UserRights A UserRights without any restriction.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/#functions","text":"Name Summary canCopy [androidJvm] abstract fun canCopy (text: String ): Boolean Returns whether the user is allowed to copy the given text to the pasteboard. canPrint [androidJvm] abstract fun canPrint (pageCount: Int ): Boolean Returns whether the user is allowed to print the given amount of pages. copy [androidJvm] abstract fun copy (text: String ): Boolean Consumes the given text with the copy right. print [androidJvm] abstract fun print (pageCount: Int ): Boolean Consumes the given amount of pages with the print right.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/#properties","text":"Name Summary canCopy [androidJvm] abstract val canCopy : Boolean Returns whether the user is currently allowed to copy content to the pasteboard. canPrint [androidJvm] abstract val canPrint : Boolean Returns whether the user is currently allowed to print the content.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/#inheritors","text":"Name ContentProtectionService.UserRights ContentProtectionService.UserRights","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/can-copy/","text":"// shared / org.readium.r2.shared.publication.services / ContentProtectionService / UserRights / canCopy canCopy \u00b6 [androidJvm]\\ abstract fun canCopy (text: String ): Boolean Returns whether the user is allowed to copy the given text to the pasteboard. This is more specific than the canCopy property, and can return false if the given text exceeds the allowed amount of characters to copy. To be used before presenting, for example, a pop-up to share a selected portion of content. [androidJvm]\\ abstract val canCopy : Boolean Returns whether the user is currently allowed to copy content to the pasteboard. Navigators and reading apps can use this to know if the \"Copy\" action should be greyed out or not. This should be called every time the \"Copy\" action will be displayed, because the value might change during runtime.","title":"Can copy"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/can-copy/#cancopy","text":"[androidJvm]\\ abstract fun canCopy (text: String ): Boolean Returns whether the user is allowed to copy the given text to the pasteboard. This is more specific than the canCopy property, and can return false if the given text exceeds the allowed amount of characters to copy. To be used before presenting, for example, a pop-up to share a selected portion of content. [androidJvm]\\ abstract val canCopy : Boolean Returns whether the user is currently allowed to copy content to the pasteboard. Navigators and reading apps can use this to know if the \"Copy\" action should be greyed out or not. This should be called every time the \"Copy\" action will be displayed, because the value might change during runtime.","title":"canCopy"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/can-print/","text":"// shared / org.readium.r2.shared.publication.services / ContentProtectionService / UserRights / canPrint canPrint \u00b6 [androidJvm]\\ abstract fun canPrint (pageCount: Int ): Boolean Returns whether the user is allowed to print the given amount of pages. This is more specific than the canPrint property, and can return false if the given pageCount exceeds the allowed amount of pages to print. To be used before attempting to launch a print job, for example. [androidJvm]\\ abstract val canPrint : Boolean Returns whether the user is currently allowed to print the content. Navigators and reading apps can use this to know if the \"Print\" action should be greyed out or not.","title":"Can print"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/can-print/#canprint","text":"[androidJvm]\\ abstract fun canPrint (pageCount: Int ): Boolean Returns whether the user is allowed to print the given amount of pages. This is more specific than the canPrint property, and can return false if the given pageCount exceeds the allowed amount of pages to print. To be used before attempting to launch a print job, for example. [androidJvm]\\ abstract val canPrint : Boolean Returns whether the user is currently allowed to print the content. Navigators and reading apps can use this to know if the \"Print\" action should be greyed out or not.","title":"canPrint"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/copy/","text":"// shared / org.readium.r2.shared.publication.services / ContentProtectionService / UserRights / copy copy \u00b6 [androidJvm]\\ abstract fun copy (text: String ): Boolean Consumes the given text with the copy right. Returns whether the user is allowed to copy the given text.","title":"Copy"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/copy/#copy","text":"[androidJvm]\\ abstract fun copy (text: String ): Boolean Consumes the given text with the copy right. Returns whether the user is allowed to copy the given text.","title":"copy"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/print/","text":"// shared / org.readium.r2.shared.publication.services / ContentProtectionService / UserRights / print print \u00b6 [androidJvm]\\ abstract fun print (pageCount: Int ): Boolean Consumes the given amount of pages with the print right. Returns whether the user is allowed to print the given amount of pages.","title":"Print"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/print/#print","text":"[androidJvm]\\ abstract fun print (pageCount: Int ): Boolean Consumes the given amount of pages with the print right. Returns whether the user is allowed to print the given amount of pages.","title":"print"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/-all-restricted/","text":"// shared / org.readium.r2.shared.publication.services / ContentProtectionService / UserRights / AllRestricted AllRestricted \u00b6 [androidJvm]\\ object AllRestricted : ContentProtectionService.UserRights A UserRights which forbids any right. Functions \u00b6 Name Summary canCopy [androidJvm] open override fun canCopy (text: String ): Boolean Returns whether the user is allowed to copy the given text to the pasteboard. canPrint [androidJvm] open override fun canPrint (pageCount: Int ): Boolean Returns whether the user is allowed to print the given amount of pages. copy [androidJvm] open override fun copy (text: String ): Boolean Consumes the given text with the copy right. print [androidJvm] open override fun print (pageCount: Int ): Boolean Consumes the given amount of pages with the print right. Properties \u00b6 Name Summary canCopy [androidJvm] open override val canCopy : Boolean = false Returns whether the user is currently allowed to copy content to the pasteboard. canPrint [androidJvm] open override val canPrint : Boolean = false Returns whether the user is currently allowed to print the content.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/-all-restricted/#allrestricted","text":"[androidJvm]\\ object AllRestricted : ContentProtectionService.UserRights A UserRights which forbids any right.","title":"AllRestricted"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/-all-restricted/#functions","text":"Name Summary canCopy [androidJvm] open override fun canCopy (text: String ): Boolean Returns whether the user is allowed to copy the given text to the pasteboard. canPrint [androidJvm] open override fun canPrint (pageCount: Int ): Boolean Returns whether the user is allowed to print the given amount of pages. copy [androidJvm] open override fun copy (text: String ): Boolean Consumes the given text with the copy right. print [androidJvm] open override fun print (pageCount: Int ): Boolean Consumes the given amount of pages with the print right.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/-all-restricted/#properties","text":"Name Summary canCopy [androidJvm] open override val canCopy : Boolean = false Returns whether the user is currently allowed to copy content to the pasteboard. canPrint [androidJvm] open override val canPrint : Boolean = false Returns whether the user is currently allowed to print the content.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/-all-restricted/can-copy/","text":"// shared / org.readium.r2.shared.publication.services / ContentProtectionService / UserRights / AllRestricted / canCopy canCopy \u00b6 [androidJvm]\\ open override fun canCopy (text: String ): Boolean Returns whether the user is allowed to copy the given text to the pasteboard. This is more specific than the canCopy property, and can return false if the given text exceeds the allowed amount of characters to copy. To be used before presenting, for example, a pop-up to share a selected portion of content. [androidJvm]\\ open override val canCopy : Boolean = false Returns whether the user is currently allowed to copy content to the pasteboard. Navigators and reading apps can use this to know if the \"Copy\" action should be greyed out or not. This should be called every time the \"Copy\" action will be displayed, because the value might change during runtime.","title":"Can copy"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/-all-restricted/can-copy/#cancopy","text":"[androidJvm]\\ open override fun canCopy (text: String ): Boolean Returns whether the user is allowed to copy the given text to the pasteboard. This is more specific than the canCopy property, and can return false if the given text exceeds the allowed amount of characters to copy. To be used before presenting, for example, a pop-up to share a selected portion of content. [androidJvm]\\ open override val canCopy : Boolean = false Returns whether the user is currently allowed to copy content to the pasteboard. Navigators and reading apps can use this to know if the \"Copy\" action should be greyed out or not. This should be called every time the \"Copy\" action will be displayed, because the value might change during runtime.","title":"canCopy"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/-all-restricted/can-print/","text":"// shared / org.readium.r2.shared.publication.services / ContentProtectionService / UserRights / AllRestricted / canPrint canPrint \u00b6 [androidJvm]\\ open override fun canPrint (pageCount: Int ): Boolean Returns whether the user is allowed to print the given amount of pages. This is more specific than the canPrint property, and can return false if the given pageCount exceeds the allowed amount of pages to print. To be used before attempting to launch a print job, for example. [androidJvm]\\ open override val canPrint : Boolean = false Returns whether the user is currently allowed to print the content. Navigators and reading apps can use this to know if the \"Print\" action should be greyed out or not.","title":"Can print"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/-all-restricted/can-print/#canprint","text":"[androidJvm]\\ open override fun canPrint (pageCount: Int ): Boolean Returns whether the user is allowed to print the given amount of pages. This is more specific than the canPrint property, and can return false if the given pageCount exceeds the allowed amount of pages to print. To be used before attempting to launch a print job, for example. [androidJvm]\\ open override val canPrint : Boolean = false Returns whether the user is currently allowed to print the content. Navigators and reading apps can use this to know if the \"Print\" action should be greyed out or not.","title":"canPrint"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/-all-restricted/copy/","text":"// shared / org.readium.r2.shared.publication.services / ContentProtectionService / UserRights / AllRestricted / copy copy \u00b6 [androidJvm]\\ open override fun copy (text: String ): Boolean Consumes the given text with the copy right. Returns whether the user is allowed to copy the given text.","title":"Copy"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/-all-restricted/copy/#copy","text":"[androidJvm]\\ open override fun copy (text: String ): Boolean Consumes the given text with the copy right. Returns whether the user is allowed to copy the given text.","title":"copy"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/-all-restricted/print/","text":"// shared / org.readium.r2.shared.publication.services / ContentProtectionService / UserRights / AllRestricted / print print \u00b6 [androidJvm]\\ open override fun print (pageCount: Int ): Boolean Consumes the given amount of pages with the print right. Returns whether the user is allowed to print the given amount of pages.","title":"Print"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/-all-restricted/print/#print","text":"[androidJvm]\\ open override fun print (pageCount: Int ): Boolean Consumes the given amount of pages with the print right. Returns whether the user is allowed to print the given amount of pages.","title":"print"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/-unrestricted/","text":"// shared / org.readium.r2.shared.publication.services / ContentProtectionService / UserRights / Unrestricted Unrestricted \u00b6 [androidJvm]\\ object Unrestricted : ContentProtectionService.UserRights A UserRights without any restriction. Functions \u00b6 Name Summary canCopy [androidJvm] open override fun canCopy (text: String ): Boolean Returns whether the user is allowed to copy the given text to the pasteboard. canPrint [androidJvm] open override fun canPrint (pageCount: Int ): Boolean Returns whether the user is allowed to print the given amount of pages. copy [androidJvm] open override fun copy (text: String ): Boolean Consumes the given text with the copy right. print [androidJvm] open override fun print (pageCount: Int ): Boolean Consumes the given amount of pages with the print right. Properties \u00b6 Name Summary canCopy [androidJvm] open override val canCopy : Boolean = true Returns whether the user is currently allowed to copy content to the pasteboard. canPrint [androidJvm] open override val canPrint : Boolean = true Returns whether the user is currently allowed to print the content.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/-unrestricted/#unrestricted","text":"[androidJvm]\\ object Unrestricted : ContentProtectionService.UserRights A UserRights without any restriction.","title":"Unrestricted"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/-unrestricted/#functions","text":"Name Summary canCopy [androidJvm] open override fun canCopy (text: String ): Boolean Returns whether the user is allowed to copy the given text to the pasteboard. canPrint [androidJvm] open override fun canPrint (pageCount: Int ): Boolean Returns whether the user is allowed to print the given amount of pages. copy [androidJvm] open override fun copy (text: String ): Boolean Consumes the given text with the copy right. print [androidJvm] open override fun print (pageCount: Int ): Boolean Consumes the given amount of pages with the print right.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/-unrestricted/#properties","text":"Name Summary canCopy [androidJvm] open override val canCopy : Boolean = true Returns whether the user is currently allowed to copy content to the pasteboard. canPrint [androidJvm] open override val canPrint : Boolean = true Returns whether the user is currently allowed to print the content.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/-unrestricted/can-copy/","text":"// shared / org.readium.r2.shared.publication.services / ContentProtectionService / UserRights / Unrestricted / canCopy canCopy \u00b6 [androidJvm]\\ open override fun canCopy (text: String ): Boolean Returns whether the user is allowed to copy the given text to the pasteboard. This is more specific than the canCopy property, and can return false if the given text exceeds the allowed amount of characters to copy. To be used before presenting, for example, a pop-up to share a selected portion of content. [androidJvm]\\ open override val canCopy : Boolean = true Returns whether the user is currently allowed to copy content to the pasteboard. Navigators and reading apps can use this to know if the \"Copy\" action should be greyed out or not. This should be called every time the \"Copy\" action will be displayed, because the value might change during runtime.","title":"Can copy"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/-unrestricted/can-copy/#cancopy","text":"[androidJvm]\\ open override fun canCopy (text: String ): Boolean Returns whether the user is allowed to copy the given text to the pasteboard. This is more specific than the canCopy property, and can return false if the given text exceeds the allowed amount of characters to copy. To be used before presenting, for example, a pop-up to share a selected portion of content. [androidJvm]\\ open override val canCopy : Boolean = true Returns whether the user is currently allowed to copy content to the pasteboard. Navigators and reading apps can use this to know if the \"Copy\" action should be greyed out or not. This should be called every time the \"Copy\" action will be displayed, because the value might change during runtime.","title":"canCopy"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/-unrestricted/can-print/","text":"// shared / org.readium.r2.shared.publication.services / ContentProtectionService / UserRights / Unrestricted / canPrint canPrint \u00b6 [androidJvm]\\ open override fun canPrint (pageCount: Int ): Boolean Returns whether the user is allowed to print the given amount of pages. This is more specific than the canPrint property, and can return false if the given pageCount exceeds the allowed amount of pages to print. To be used before attempting to launch a print job, for example. [androidJvm]\\ open override val canPrint : Boolean = true Returns whether the user is currently allowed to print the content. Navigators and reading apps can use this to know if the \"Print\" action should be greyed out or not.","title":"Can print"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/-unrestricted/can-print/#canprint","text":"[androidJvm]\\ open override fun canPrint (pageCount: Int ): Boolean Returns whether the user is allowed to print the given amount of pages. This is more specific than the canPrint property, and can return false if the given pageCount exceeds the allowed amount of pages to print. To be used before attempting to launch a print job, for example. [androidJvm]\\ open override val canPrint : Boolean = true Returns whether the user is currently allowed to print the content. Navigators and reading apps can use this to know if the \"Print\" action should be greyed out or not.","title":"canPrint"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/-unrestricted/copy/","text":"// shared / org.readium.r2.shared.publication.services / ContentProtectionService / UserRights / Unrestricted / copy copy \u00b6 [androidJvm]\\ open override fun copy (text: String ): Boolean Consumes the given text with the copy right. Returns whether the user is allowed to copy the given text.","title":"Copy"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/-unrestricted/copy/#copy","text":"[androidJvm]\\ open override fun copy (text: String ): Boolean Consumes the given text with the copy right. Returns whether the user is allowed to copy the given text.","title":"copy"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/-unrestricted/print/","text":"// shared / org.readium.r2.shared.publication.services / ContentProtectionService / UserRights / Unrestricted / print print \u00b6 [androidJvm]\\ open override fun print (pageCount: Int ): Boolean Consumes the given amount of pages with the print right. Returns whether the user is allowed to print the given amount of pages.","title":"Print"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-content-protection-service/-user-rights/-unrestricted/print/#print","text":"[androidJvm]\\ open override fun print (pageCount: Int ): Boolean Consumes the given amount of pages with the print right. Returns whether the user is allowed to print the given amount of pages.","title":"print"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-cover-service/","text":"// shared / org.readium.r2.shared.publication.services / CoverService CoverService \u00b6 [androidJvm]\\ interface CoverService : Publication.Service Provides an easy access to a bitmap version of the publication cover. While at first glance, getting the cover could be seen as a helper, the implementation actually depends on the publication format: Some might allow vector images or even HTML pages, in which case they need to be converted to bitmaps. Others require to render the cover from a specific file format, e.g. PDF. Furthermore, a reading app might want to use a custom strategy to choose the cover image, for example by: iterating through the images collection for a publication parsed from an OPDS 2 feed generating a bitmap from scratch using the publication's title using a cover selected by the user. Functions \u00b6 Name Summary close [androidJvm] open fun close () Closes any opened file handles, removes temporary files, etc. cover [androidJvm] abstract suspend fun cover (): Bitmap ? Returns the publication cover as a Bitmap at its maximum size. coverFitting [androidJvm] open suspend fun coverFitting (maxSize: Size ): Bitmap ? Returns the publication cover as a Bitmap , scaled down to fit the given maxSize . get [androidJvm] open fun get (link: Link ): Resource ? A service can return a Resource to: Properties \u00b6 Name Summary links [androidJvm] open val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get . Inheritors \u00b6 Name GeneratedCoverService","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-cover-service/#coverservice","text":"[androidJvm]\\ interface CoverService : Publication.Service Provides an easy access to a bitmap version of the publication cover. While at first glance, getting the cover could be seen as a helper, the implementation actually depends on the publication format: Some might allow vector images or even HTML pages, in which case they need to be converted to bitmaps. Others require to render the cover from a specific file format, e.g. PDF. Furthermore, a reading app might want to use a custom strategy to choose the cover image, for example by: iterating through the images collection for a publication parsed from an OPDS 2 feed generating a bitmap from scratch using the publication's title using a cover selected by the user.","title":"CoverService"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-cover-service/#functions","text":"Name Summary close [androidJvm] open fun close () Closes any opened file handles, removes temporary files, etc. cover [androidJvm] abstract suspend fun cover (): Bitmap ? Returns the publication cover as a Bitmap at its maximum size. coverFitting [androidJvm] open suspend fun coverFitting (maxSize: Size ): Bitmap ? Returns the publication cover as a Bitmap , scaled down to fit the given maxSize . get [androidJvm] open fun get (link: Link ): Resource ? A service can return a Resource to:","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-cover-service/#properties","text":"Name Summary links [androidJvm] open val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get .","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-cover-service/#inheritors","text":"Name GeneratedCoverService","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-cover-service/cover-fitting/","text":"// shared / org.readium.r2.shared.publication.services / CoverService / coverFitting coverFitting \u00b6 [androidJvm]\\ open suspend fun coverFitting (maxSize: Size ): Bitmap ? Returns the publication cover as a Bitmap , scaled down to fit the given maxSize .","title":"Cover fitting"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-cover-service/cover-fitting/#coverfitting","text":"[androidJvm]\\ open suspend fun coverFitting (maxSize: Size ): Bitmap ? Returns the publication cover as a Bitmap , scaled down to fit the given maxSize .","title":"coverFitting"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-cover-service/cover/","text":"// shared / org.readium.r2.shared.publication.services / CoverService / cover cover \u00b6 [androidJvm]\\ abstract suspend fun cover (): Bitmap ? Returns the publication cover as a Bitmap at its maximum size. If the cover is not a bitmap format (e.g. SVG), it should be scaled down to fit the screen.","title":"Cover"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-cover-service/cover/#cover","text":"[androidJvm]\\ abstract suspend fun cover (): Bitmap ? Returns the publication cover as a Bitmap at its maximum size. If the cover is not a bitmap format (e.g. SVG), it should be scaled down to fit the screen.","title":"cover"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-default-locator-service/","text":"// shared / org.readium.r2.shared.publication.services / DefaultLocatorService DefaultLocatorService \u00b6 [androidJvm]\\ open class DefaultLocatorService (readingOrder: List < Link >, positionsByReadingOrder: suspend () -> List < List < Locator >>) : LocatorService Constructors \u00b6 DefaultLocatorService [androidJvm] fun DefaultLocatorService (readingOrder: List < Link >, publication: Ref < Publication >) Functions \u00b6 Name Summary close [androidJvm] open fun close () Closes any opened file handles, removes temporary files, etc. get [androidJvm] open fun get (link: Link ): Resource ? A service can return a Resource to: locate [androidJvm] open suspend override fun locate (locator: Locator ): Locator ? Locates the target of the given locator . locateProgression [androidJvm] open suspend override fun locateProgression (totalProgression: Double ): Locator ? Locates the target at the given totalProgression relative to the whole publication. Properties \u00b6 Name Summary links [androidJvm] open val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get . positionsByReadingOrder [androidJvm] val positionsByReadingOrder : suspend () -> List < List < Locator >> readingOrder [androidJvm] val readingOrder : List < Link >","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-default-locator-service/#defaultlocatorservice","text":"[androidJvm]\\ open class DefaultLocatorService (readingOrder: List < Link >, positionsByReadingOrder: suspend () -> List < List < Locator >>) : LocatorService","title":"DefaultLocatorService"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-default-locator-service/#constructors","text":"DefaultLocatorService [androidJvm] fun DefaultLocatorService (readingOrder: List < Link >, publication: Ref < Publication >)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-default-locator-service/#functions","text":"Name Summary close [androidJvm] open fun close () Closes any opened file handles, removes temporary files, etc. get [androidJvm] open fun get (link: Link ): Resource ? A service can return a Resource to: locate [androidJvm] open suspend override fun locate (locator: Locator ): Locator ? Locates the target of the given locator . locateProgression [androidJvm] open suspend override fun locateProgression (totalProgression: Double ): Locator ? Locates the target at the given totalProgression relative to the whole publication.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-default-locator-service/#properties","text":"Name Summary links [androidJvm] open val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get . positionsByReadingOrder [androidJvm] val positionsByReadingOrder : suspend () -> List < List < Locator >> readingOrder [androidJvm] val readingOrder : List < Link >","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-default-locator-service/-default-locator-service/","text":"// shared / org.readium.r2.shared.publication.services / DefaultLocatorService / DefaultLocatorService DefaultLocatorService \u00b6 [androidJvm]\\ fun DefaultLocatorService (readingOrder: List < Link >, publication: Ref < Publication >) fun DefaultLocatorService (readingOrder: List < Link >, positionsByReadingOrder: suspend () -> List < List < Locator >>)","title":" default locator service"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-default-locator-service/-default-locator-service/#defaultlocatorservice","text":"[androidJvm]\\ fun DefaultLocatorService (readingOrder: List < Link >, publication: Ref < Publication >) fun DefaultLocatorService (readingOrder: List < Link >, positionsByReadingOrder: suspend () -> List < List < Locator >>)","title":"DefaultLocatorService"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-default-locator-service/locate-progression/","text":"// shared / org.readium.r2.shared.publication.services / DefaultLocatorService / locateProgression locateProgression \u00b6 [androidJvm]\\ open suspend override fun locateProgression (totalProgression: Double ): Locator ? Locates the target at the given totalProgression relative to the whole publication.","title":"Locate progression"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-default-locator-service/locate-progression/#locateprogression","text":"[androidJvm]\\ open suspend override fun locateProgression (totalProgression: Double ): Locator ? Locates the target at the given totalProgression relative to the whole publication.","title":"locateProgression"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-default-locator-service/locate/","text":"// shared / org.readium.r2.shared.publication.services / DefaultLocatorService / locate locate \u00b6 [androidJvm]\\ open suspend override fun locate (locator: Locator ): Locator ? Locates the target of the given locator .","title":"Locate"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-default-locator-service/locate/#locate","text":"[androidJvm]\\ open suspend override fun locate (locator: Locator ): Locator ? Locates the target of the given locator .","title":"locate"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-default-locator-service/positions-by-reading-order/","text":"// shared / org.readium.r2.shared.publication.services / DefaultLocatorService / positionsByReadingOrder positionsByReadingOrder \u00b6 [androidJvm]\\ val positionsByReadingOrder : suspend () -> List < List < Locator >>","title":"Positions by reading order"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-default-locator-service/positions-by-reading-order/#positionsbyreadingorder","text":"[androidJvm]\\ val positionsByReadingOrder : suspend () -> List < List < Locator >>","title":"positionsByReadingOrder"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-default-locator-service/reading-order/","text":"// shared / org.readium.r2.shared.publication.services / DefaultLocatorService / readingOrder readingOrder \u00b6 [androidJvm]\\ val readingOrder : List < Link >","title":"Reading order"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-default-locator-service/reading-order/#readingorder","text":"[androidJvm]\\ val readingOrder : List < Link >","title":"readingOrder"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-generated-cover-service/","text":"// shared / org.readium.r2.shared.publication.services / GeneratedCoverService GeneratedCoverService \u00b6 [androidJvm]\\ abstract class GeneratedCoverService : CoverService A CoverService which provides a unique cover for each Publication. Constructors \u00b6 GeneratedCoverService [androidJvm] fun GeneratedCoverService () Functions \u00b6 Name Summary close [androidJvm] open fun close () Closes any opened file handles, removes temporary files, etc. cover [androidJvm] abstract suspend override fun cover (): Bitmap Returns the publication cover as a Bitmap at its maximum size. coverFitting [androidJvm] open suspend fun coverFitting (maxSize: Size ): Bitmap ? Returns the publication cover as a Bitmap , scaled down to fit the given maxSize . get [androidJvm] open override fun get (link: Link ): Resource ? A service can return a Resource to: Properties \u00b6 Name Summary links [androidJvm] open override val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get . Inheritors \u00b6 Name InMemoryCoverService","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-generated-cover-service/#generatedcoverservice","text":"[androidJvm]\\ abstract class GeneratedCoverService : CoverService A CoverService which provides a unique cover for each Publication.","title":"GeneratedCoverService"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-generated-cover-service/#constructors","text":"GeneratedCoverService [androidJvm] fun GeneratedCoverService ()","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-generated-cover-service/#functions","text":"Name Summary close [androidJvm] open fun close () Closes any opened file handles, removes temporary files, etc. cover [androidJvm] abstract suspend override fun cover (): Bitmap Returns the publication cover as a Bitmap at its maximum size. coverFitting [androidJvm] open suspend fun coverFitting (maxSize: Size ): Bitmap ? Returns the publication cover as a Bitmap , scaled down to fit the given maxSize . get [androidJvm] open override fun get (link: Link ): Resource ? A service can return a Resource to:","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-generated-cover-service/#properties","text":"Name Summary links [androidJvm] open override val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get .","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-generated-cover-service/#inheritors","text":"Name InMemoryCoverService","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-generated-cover-service/-generated-cover-service/","text":"// shared / org.readium.r2.shared.publication.services / GeneratedCoverService / GeneratedCoverService GeneratedCoverService \u00b6 [androidJvm]\\ fun GeneratedCoverService ()","title":" generated cover service"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-generated-cover-service/-generated-cover-service/#generatedcoverservice","text":"[androidJvm]\\ fun GeneratedCoverService ()","title":"GeneratedCoverService"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-generated-cover-service/cover/","text":"// shared / org.readium.r2.shared.publication.services / GeneratedCoverService / cover cover \u00b6 [androidJvm]\\ abstract suspend override fun cover (): Bitmap Returns the publication cover as a Bitmap at its maximum size. If the cover is not a bitmap format (e.g. SVG), it should be scaled down to fit the screen.","title":"Cover"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-generated-cover-service/cover/#cover","text":"[androidJvm]\\ abstract suspend override fun cover (): Bitmap Returns the publication cover as a Bitmap at its maximum size. If the cover is not a bitmap format (e.g. SVG), it should be scaled down to fit the screen.","title":"cover"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-generated-cover-service/get/","text":"// shared / org.readium.r2.shared.publication.services / GeneratedCoverService / get get \u00b6 [androidJvm]\\ open override fun get (link: Link ): Resource ? A service can return a Resource to: respond to a request to its web API declared in links, serve additional resources on behalf of the publication, replace a publication resource by its own version. Called by Publication.get for each request. Warning: If you need to request one of the publication resources to answer the request, use the Fetcher provided by the Publication.Service.Context instead of Publication.get , otherwise it will trigger an infinite loop. Return \u00b6 The Resource containing the response, or null if the service doesn't recognize this request.","title":"Get"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-generated-cover-service/get/#get","text":"[androidJvm]\\ open override fun get (link: Link ): Resource ? A service can return a Resource to: respond to a request to its web API declared in links, serve additional resources on behalf of the publication, replace a publication resource by its own version. Called by Publication.get for each request. Warning: If you need to request one of the publication resources to answer the request, use the Fetcher provided by the Publication.Service.Context instead of Publication.get , otherwise it will trigger an infinite loop.","title":"get"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-generated-cover-service/get/#return","text":"The Resource containing the response, or null if the service doesn't recognize this request.","title":"Return"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-generated-cover-service/links/","text":"// shared / org.readium.r2.shared.publication.services / GeneratedCoverService / links links \u00b6 [androidJvm]\\ open override val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get . To disambiguate the href with a publication's local resources, you should use the prefix /~readium/. A custom media type or rel should be used to identify the service. You can use a templated URI to accept query parameters, e.g.: Link(\\ href = \"/~readium/search{?text}\",\\ type = \"application/vnd.readium.search+json\",\\ templated = true\\ )","title":"Links"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-generated-cover-service/links/#links","text":"[androidJvm]\\ open override val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get . To disambiguate the href with a publication's local resources, you should use the prefix /~readium/. A custom media type or rel should be used to identify the service. You can use a templated URI to accept query parameters, e.g.: Link(\\ href = \"/~readium/search{?text}\",\\ type = \"application/vnd.readium.search+json\",\\ templated = true\\ )","title":"links"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-in-memory-cover-service/","text":"// shared / org.readium.r2.shared.publication.services / InMemoryCoverService InMemoryCoverService \u00b6 [androidJvm]\\ class InMemoryCoverService : GeneratedCoverService A CoverService which uses a provided in-memory bitmap. Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary close [androidJvm] open fun close () Closes any opened file handles, removes temporary files, etc. cover [androidJvm] open suspend override fun cover (): Bitmap Returns the publication cover as a Bitmap at its maximum size. coverFitting [androidJvm] open suspend fun coverFitting (maxSize: Size ): Bitmap ? Returns the publication cover as a Bitmap , scaled down to fit the given maxSize . get [androidJvm] open override fun get (link: Link ): Resource ? A service can return a Resource to: Properties \u00b6 Name Summary links [androidJvm] open override val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-in-memory-cover-service/#inmemorycoverservice","text":"[androidJvm]\\ class InMemoryCoverService : GeneratedCoverService A CoverService which uses a provided in-memory bitmap.","title":"InMemoryCoverService"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-in-memory-cover-service/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-in-memory-cover-service/#functions","text":"Name Summary close [androidJvm] open fun close () Closes any opened file handles, removes temporary files, etc. cover [androidJvm] open suspend override fun cover (): Bitmap Returns the publication cover as a Bitmap at its maximum size. coverFitting [androidJvm] open suspend fun coverFitting (maxSize: Size ): Bitmap ? Returns the publication cover as a Bitmap , scaled down to fit the given maxSize . get [androidJvm] open override fun get (link: Link ): Resource ? A service can return a Resource to:","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-in-memory-cover-service/#properties","text":"Name Summary links [androidJvm] open override val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get .","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-in-memory-cover-service/cover/","text":"// shared / org.readium.r2.shared.publication.services / InMemoryCoverService / cover cover \u00b6 [androidJvm]\\ open suspend override fun cover (): Bitmap Returns the publication cover as a Bitmap at its maximum size. If the cover is not a bitmap format (e.g. SVG), it should be scaled down to fit the screen.","title":"Cover"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-in-memory-cover-service/cover/#cover","text":"[androidJvm]\\ open suspend override fun cover (): Bitmap Returns the publication cover as a Bitmap at its maximum size. If the cover is not a bitmap format (e.g. SVG), it should be scaled down to fit the screen.","title":"cover"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-in-memory-cover-service/-companion/","text":"// shared / org.readium.r2.shared.publication.services / InMemoryCoverService / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary createFactory [androidJvm] fun createFactory (cover: Bitmap ?): ServiceFactory ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-in-memory-cover-service/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-in-memory-cover-service/-companion/#functions","text":"Name Summary createFactory [androidJvm] fun createFactory (cover: Bitmap ?): ServiceFactory ?","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-in-memory-cover-service/-companion/create-factory/","text":"// shared / org.readium.r2.shared.publication.services / InMemoryCoverService / Companion / createFactory createFactory \u00b6 [androidJvm]\\ fun createFactory (cover: Bitmap ?): ServiceFactory ?","title":"Create factory"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-in-memory-cover-service/-companion/create-factory/#createfactory","text":"[androidJvm]\\ fun createFactory (cover: Bitmap ?): ServiceFactory ?","title":"createFactory"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-locator-service/","text":"// shared / org.readium.r2.shared.publication.services / LocatorService LocatorService \u00b6 [androidJvm]\\ interface LocatorService : Publication.Service Locates the destination of various sources (e.g. locators, progression, etc.) in the publication. This service can be used to implement a variety of features, such as: Jumping to a given position or total progression, by converting it first to a [Locator](../../org.readium.r2.shared.publication/-locator/index.md). Converting a [Locator](../../org.readium.r2.shared.publication/-locator/index.md) which was created from an alternate manifest with a different reading order. For example, when downloading a streamed manifest or offloading a package. Functions \u00b6 Name Summary close [androidJvm] open fun close () Closes any opened file handles, removes temporary files, etc. get [androidJvm] open fun get (link: Link ): Resource ? A service can return a Resource to: locate [androidJvm] abstract suspend fun locate (locator: Locator ): Locator ? Locates the target of the given locator . locateProgression [androidJvm] abstract suspend fun locateProgression (totalProgression: Double ): Locator ? Locates the target at the given totalProgression relative to the whole publication. Properties \u00b6 Name Summary links [androidJvm] open val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get . Inheritors \u00b6 Name DefaultLocatorService","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-locator-service/#locatorservice","text":"[androidJvm]\\ interface LocatorService : Publication.Service Locates the destination of various sources (e.g. locators, progression, etc.) in the publication. This service can be used to implement a variety of features, such as: Jumping to a given position or total progression, by converting it first to a [Locator](../../org.readium.r2.shared.publication/-locator/index.md). Converting a [Locator](../../org.readium.r2.shared.publication/-locator/index.md) which was created from an alternate manifest with a different reading order. For example, when downloading a streamed manifest or offloading a package.","title":"LocatorService"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-locator-service/#functions","text":"Name Summary close [androidJvm] open fun close () Closes any opened file handles, removes temporary files, etc. get [androidJvm] open fun get (link: Link ): Resource ? A service can return a Resource to: locate [androidJvm] abstract suspend fun locate (locator: Locator ): Locator ? Locates the target of the given locator . locateProgression [androidJvm] abstract suspend fun locateProgression (totalProgression: Double ): Locator ? Locates the target at the given totalProgression relative to the whole publication.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-locator-service/#properties","text":"Name Summary links [androidJvm] open val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get .","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-locator-service/#inheritors","text":"Name DefaultLocatorService","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-locator-service/locate-progression/","text":"// shared / org.readium.r2.shared.publication.services / LocatorService / locateProgression locateProgression \u00b6 [androidJvm]\\ abstract suspend fun locateProgression (totalProgression: Double ): Locator ? Locates the target at the given totalProgression relative to the whole publication.","title":"Locate progression"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-locator-service/locate-progression/#locateprogression","text":"[androidJvm]\\ abstract suspend fun locateProgression (totalProgression: Double ): Locator ? Locates the target at the given totalProgression relative to the whole publication.","title":"locateProgression"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-locator-service/locate/","text":"// shared / org.readium.r2.shared.publication.services / LocatorService / locate locate \u00b6 [androidJvm]\\ abstract suspend fun locate (locator: Locator ): Locator ? Locates the target of the given locator .","title":"Locate"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-locator-service/locate/#locate","text":"[androidJvm]\\ abstract suspend fun locate (locator: Locator ): Locator ? Locates the target of the given locator .","title":"locate"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-per-resource-positions-service/","text":"// shared / org.readium.r2.shared.publication.services / PerResourcePositionsService PerResourcePositionsService \u00b6 [androidJvm]\\ class PerResourcePositionsService (readingOrder: List < Link >, fallbackMediaType: String ) : PositionsService Simple PositionsService for a Publication which generates one position per readingOrder resource. Parameters \u00b6 androidJvm fallbackMediaType Media type that will be used as a fallback if the Link doesn't specify any. Constructors \u00b6 PerResourcePositionsService [androidJvm] fun PerResourcePositionsService (readingOrder: List < Link >, fallbackMediaType: String ) Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary close [androidJvm] open fun close () Closes any opened file handles, removes temporary files, etc. get [androidJvm] open override fun get (link: Link ): Resource ? A service can return a Resource to: positions [androidJvm] open suspend fun positions (): List < Locator > Returns the list of all the positions in the publication. positionsByReadingOrder [androidJvm] open suspend override fun positionsByReadingOrder (): List < List < Locator >> Returns the list of all the positions in the publication, grouped by the resource reading order index. Properties \u00b6 Name Summary links [androidJvm] open override val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-per-resource-positions-service/#perresourcepositionsservice","text":"[androidJvm]\\ class PerResourcePositionsService (readingOrder: List < Link >, fallbackMediaType: String ) : PositionsService Simple PositionsService for a Publication which generates one position per readingOrder resource.","title":"PerResourcePositionsService"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-per-resource-positions-service/#parameters","text":"androidJvm fallbackMediaType Media type that will be used as a fallback if the Link doesn't specify any.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-per-resource-positions-service/#constructors","text":"PerResourcePositionsService [androidJvm] fun PerResourcePositionsService (readingOrder: List < Link >, fallbackMediaType: String )","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-per-resource-positions-service/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-per-resource-positions-service/#functions","text":"Name Summary close [androidJvm] open fun close () Closes any opened file handles, removes temporary files, etc. get [androidJvm] open override fun get (link: Link ): Resource ? A service can return a Resource to: positions [androidJvm] open suspend fun positions (): List < Locator > Returns the list of all the positions in the publication. positionsByReadingOrder [androidJvm] open suspend override fun positionsByReadingOrder (): List < List < Locator >> Returns the list of all the positions in the publication, grouped by the resource reading order index.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-per-resource-positions-service/#properties","text":"Name Summary links [androidJvm] open override val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get .","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-per-resource-positions-service/-per-resource-positions-service/","text":"// shared / org.readium.r2.shared.publication.services / PerResourcePositionsService / PerResourcePositionsService PerResourcePositionsService \u00b6 [androidJvm]\\ fun PerResourcePositionsService (readingOrder: List < Link >, fallbackMediaType: String ) Parameters \u00b6 androidJvm fallbackMediaType Media type that will be used as a fallback if the Link doesn't specify any.","title":" per resource positions service"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-per-resource-positions-service/-per-resource-positions-service/#perresourcepositionsservice","text":"[androidJvm]\\ fun PerResourcePositionsService (readingOrder: List < Link >, fallbackMediaType: String )","title":"PerResourcePositionsService"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-per-resource-positions-service/-per-resource-positions-service/#parameters","text":"androidJvm fallbackMediaType Media type that will be used as a fallback if the Link doesn't specify any.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-per-resource-positions-service/positions-by-reading-order/","text":"// shared / org.readium.r2.shared.publication.services / PerResourcePositionsService / positionsByReadingOrder positionsByReadingOrder \u00b6 [androidJvm]\\ open suspend override fun positionsByReadingOrder (): List < List < Locator >> Returns the list of all the positions in the publication, grouped by the resource reading order index.","title":"Positions by reading order"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-per-resource-positions-service/positions-by-reading-order/#positionsbyreadingorder","text":"[androidJvm]\\ open suspend override fun positionsByReadingOrder (): List < List < Locator >> Returns the list of all the positions in the publication, grouped by the resource reading order index.","title":"positionsByReadingOrder"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-per-resource-positions-service/-companion/","text":"// shared / org.readium.r2.shared.publication.services / PerResourcePositionsService / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary createFactory [androidJvm] fun createFactory (fallbackMediaType: String ): ( Publication.Service.Context ) -> PerResourcePositionsService","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-per-resource-positions-service/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-per-resource-positions-service/-companion/#functions","text":"Name Summary createFactory [androidJvm] fun createFactory (fallbackMediaType: String ): ( Publication.Service.Context ) -> PerResourcePositionsService","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-per-resource-positions-service/-companion/create-factory/","text":"// shared / org.readium.r2.shared.publication.services / PerResourcePositionsService / Companion / createFactory createFactory \u00b6 [androidJvm]\\ fun createFactory (fallbackMediaType: String ): ( Publication.Service.Context ) -> PerResourcePositionsService","title":"Create factory"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-per-resource-positions-service/-companion/create-factory/#createfactory","text":"[androidJvm]\\ fun createFactory (fallbackMediaType: String ): ( Publication.Service.Context ) -> PerResourcePositionsService","title":"createFactory"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-positions-service/","text":"// shared / org.readium.r2.shared.publication.services / PositionsService PositionsService \u00b6 [androidJvm]\\ interface PositionsService : Publication.Service Provides a list of discrete locations in the publication, no matter what the original format is. Functions \u00b6 Name Summary close [androidJvm] open fun close () Closes any opened file handles, removes temporary files, etc. get [androidJvm] open override fun get (link: Link ): Resource ? A service can return a Resource to: positions [androidJvm] open suspend fun positions (): List < Locator > Returns the list of all the positions in the publication. positionsByReadingOrder [androidJvm] abstract suspend fun positionsByReadingOrder (): List < List < Locator >> Returns the list of all the positions in the publication, grouped by the resource reading order index. Properties \u00b6 Name Summary links [androidJvm] open override val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get . Inheritors \u00b6 Name PerResourcePositionsService","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-positions-service/#positionsservice","text":"[androidJvm]\\ interface PositionsService : Publication.Service Provides a list of discrete locations in the publication, no matter what the original format is.","title":"PositionsService"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-positions-service/#functions","text":"Name Summary close [androidJvm] open fun close () Closes any opened file handles, removes temporary files, etc. get [androidJvm] open override fun get (link: Link ): Resource ? A service can return a Resource to: positions [androidJvm] open suspend fun positions (): List < Locator > Returns the list of all the positions in the publication. positionsByReadingOrder [androidJvm] abstract suspend fun positionsByReadingOrder (): List < List < Locator >> Returns the list of all the positions in the publication, grouped by the resource reading order index.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-positions-service/#properties","text":"Name Summary links [androidJvm] open override val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get .","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-positions-service/#inheritors","text":"Name PerResourcePositionsService","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-positions-service/get/","text":"// shared / org.readium.r2.shared.publication.services / PositionsService / get get \u00b6 [androidJvm]\\ open override fun get (link: Link ): Resource ? A service can return a Resource to: respond to a request to its web API declared in links, serve additional resources on behalf of the publication, replace a publication resource by its own version. Called by Publication.get for each request. Warning: If you need to request one of the publication resources to answer the request, use the Fetcher provided by the Publication.Service.Context instead of Publication.get , otherwise it will trigger an infinite loop. Return \u00b6 The Resource containing the response, or null if the service doesn't recognize this request.","title":"Get"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-positions-service/get/#get","text":"[androidJvm]\\ open override fun get (link: Link ): Resource ? A service can return a Resource to: respond to a request to its web API declared in links, serve additional resources on behalf of the publication, replace a publication resource by its own version. Called by Publication.get for each request. Warning: If you need to request one of the publication resources to answer the request, use the Fetcher provided by the Publication.Service.Context instead of Publication.get , otherwise it will trigger an infinite loop.","title":"get"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-positions-service/get/#return","text":"The Resource containing the response, or null if the service doesn't recognize this request.","title":"Return"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-positions-service/links/","text":"// shared / org.readium.r2.shared.publication.services / PositionsService / links links \u00b6 [androidJvm]\\ open override val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get . To disambiguate the href with a publication's local resources, you should use the prefix /~readium/. A custom media type or rel should be used to identify the service. You can use a templated URI to accept query parameters, e.g.: Link(\\ href = \"/~readium/search{?text}\",\\ type = \"application/vnd.readium.search+json\",\\ templated = true\\ )","title":"Links"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-positions-service/links/#links","text":"[androidJvm]\\ open override val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get . To disambiguate the href with a publication's local resources, you should use the prefix /~readium/. A custom media type or rel should be used to identify the service. You can use a templated URI to accept query parameters, e.g.: Link(\\ href = \"/~readium/search{?text}\",\\ type = \"application/vnd.readium.search+json\",\\ templated = true\\ )","title":"links"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-positions-service/positions-by-reading-order/","text":"// shared / org.readium.r2.shared.publication.services / PositionsService / positionsByReadingOrder positionsByReadingOrder \u00b6 [androidJvm]\\ abstract suspend fun positionsByReadingOrder (): List < List < Locator >> Returns the list of all the positions in the publication, grouped by the resource reading order index.","title":"Positions by reading order"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-positions-service/positions-by-reading-order/#positionsbyreadingorder","text":"[androidJvm]\\ abstract suspend fun positionsByReadingOrder (): List < List < Locator >> Returns the list of all the positions in the publication, grouped by the resource reading order index.","title":"positionsByReadingOrder"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-positions-service/positions/","text":"// shared / org.readium.r2.shared.publication.services / PositionsService / positions positions \u00b6 [androidJvm]\\ open suspend fun positions (): List < Locator > Returns the list of all the positions in the publication.","title":"Positions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services/-positions-service/positions/#positions","text":"[androidJvm]\\ open suspend fun positions (): List < Locator > Returns the list of all the positions in the publication.","title":"positions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/","text":"// shared / org.readium.r2.shared.publication.services.search Package org.readium.r2.shared.publication.services.search \u00b6 Types \u00b6 Name Summary SearchException [androidJvm] sealed class SearchException : UserException Represents an error which might occur during a search activity. SearchIterator [androidJvm] interface SearchIterator : SuspendingCloseable Iterates through search results. SearchService [androidJvm] interface SearchService : Publication.Service Provides a way to search terms in a publication. SearchTry [androidJvm] typealias SearchTry < SuccessT > = Try < SuccessT , SearchException > StringSearchService [androidJvm] class StringSearchService (publication: Ref < Publication >, language: String ?, snippetLength: Int , searchAlgorithm: StringSearchService.Algorithm , extractorFactory: ResourceContentExtractor.Factory ) : SearchService Base implementation of SearchService iterating through the content of Publication's resources. Functions \u00b6 Name Summary search [androidJvm] suspend fun Publication . search (query: String , options: SearchService.Options ? = null): SearchTry < SearchIterator > Starts a new search through the publication content, with the given query . Properties \u00b6 Name Summary isSearchable [androidJvm] val Publication . isSearchable : Boolean Indicates whether the content of this publication can be searched. searchOptions [androidJvm] val Publication . searchOptions : SearchService.Options Default value for the search options of this publication. searchServiceFactory [androidJvm] var Publication.ServicesBuilder . searchServiceFactory : ServiceFactory ? Factory to build a SearchService","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/#package-orgreadiumr2sharedpublicationservicessearch","text":"","title":"Package org.readium.r2.shared.publication.services.search"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/#types","text":"Name Summary SearchException [androidJvm] sealed class SearchException : UserException Represents an error which might occur during a search activity. SearchIterator [androidJvm] interface SearchIterator : SuspendingCloseable Iterates through search results. SearchService [androidJvm] interface SearchService : Publication.Service Provides a way to search terms in a publication. SearchTry [androidJvm] typealias SearchTry < SuccessT > = Try < SuccessT , SearchException > StringSearchService [androidJvm] class StringSearchService (publication: Ref < Publication >, language: String ?, snippetLength: Int , searchAlgorithm: StringSearchService.Algorithm , extractorFactory: ResourceContentExtractor.Factory ) : SearchService Base implementation of SearchService iterating through the content of Publication's resources.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/#functions","text":"Name Summary search [androidJvm] suspend fun Publication . search (query: String , options: SearchService.Options ? = null): SearchTry < SearchIterator > Starts a new search through the publication content, with the given query .","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/#properties","text":"Name Summary isSearchable [androidJvm] val Publication . isSearchable : Boolean Indicates whether the content of this publication can be searched. searchOptions [androidJvm] val Publication . searchOptions : SearchService.Options Default value for the search options of this publication. searchServiceFactory [androidJvm] var Publication.ServicesBuilder . searchServiceFactory : ServiceFactory ? Factory to build a SearchService","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/is-searchable/","text":"// shared / org.readium.r2.shared.publication.services.search / isSearchable isSearchable \u00b6 [androidJvm]\\ val Publication . isSearchable : Boolean Indicates whether the content of this publication can be searched.","title":"Is searchable"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/is-searchable/#issearchable","text":"[androidJvm]\\ val Publication . isSearchable : Boolean Indicates whether the content of this publication can be searched.","title":"isSearchable"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/search-options/","text":"// shared / org.readium.r2.shared.publication.services.search / searchOptions searchOptions \u00b6 [androidJvm]\\ val Publication . searchOptions : SearchService.Options Default value for the search options of this publication.","title":"Search options"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/search-options/#searchoptions","text":"[androidJvm]\\ val Publication . searchOptions : SearchService.Options Default value for the search options of this publication.","title":"searchOptions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/search-service-factory/","text":"// shared / org.readium.r2.shared.publication.services.search / searchServiceFactory searchServiceFactory \u00b6 [androidJvm]\\ var Publication.ServicesBuilder . searchServiceFactory : ServiceFactory ? Factory to build a SearchService","title":"Search service factory"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/search-service-factory/#searchservicefactory","text":"[androidJvm]\\ var Publication.ServicesBuilder . searchServiceFactory : ServiceFactory ? Factory to build a SearchService","title":"searchServiceFactory"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/search/","text":"// shared / org.readium.r2.shared.publication.services.search / search search \u00b6 [androidJvm]\\ suspend fun Publication . search (query: String , options: SearchService.Options ? = null): SearchTry < SearchIterator > Starts a new search through the publication content, with the given query . If an option is nil when calling search , its value is assumed to be the default one for the search service.","title":"Search"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/search/#search","text":"[androidJvm]\\ suspend fun Publication . search (query: String , options: SearchService.Options ? = null): SearchTry < SearchIterator > Starts a new search through the publication content, with the given query . If an option is nil when calling search , its value is assumed to be the default one for the search service.","title":"search"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchException SearchException \u00b6 [androidJvm]\\ sealed class SearchException : UserException Represents an error which might occur during a search activity. Types \u00b6 Name Summary BadQuery [androidJvm] class BadQuery (cause: UserException ) : SearchException The provided search query cannot be handled by the service. Cancelled [androidJvm] object Cancelled : SearchException The search was cancelled by the caller. Companion [androidJvm] object Companion NetworkError [androidJvm] class NetworkError (cause: HttpException ) : SearchException An error occurred while performing an HTTP request. Other [androidJvm] class Other (cause: Throwable ) : SearchException For any other custom service error. PublicationNotSearchable [androidJvm] object PublicationNotSearchable : SearchException The publication is not searchable. ResourceError [androidJvm] class ResourceError (cause: Resource.Exception ) : SearchException An error occurred while accessing one of the publication's resources. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? Inheritors \u00b6 Name SearchException SearchException SearchException SearchException SearchException SearchException","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/#searchexception","text":"[androidJvm]\\ sealed class SearchException : UserException Represents an error which might occur during a search activity.","title":"SearchException"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/#types","text":"Name Summary BadQuery [androidJvm] class BadQuery (cause: UserException ) : SearchException The provided search query cannot be handled by the service. Cancelled [androidJvm] object Cancelled : SearchException The search was cancelled by the caller. Companion [androidJvm] object Companion NetworkError [androidJvm] class NetworkError (cause: HttpException ) : SearchException An error occurred while performing an HTTP request. Other [androidJvm] class Other (cause: Throwable ) : SearchException For any other custom service error. PublicationNotSearchable [androidJvm] object PublicationNotSearchable : SearchException The publication is not searchable. ResourceError [androidJvm] class ResourceError (cause: Resource.Exception ) : SearchException An error occurred while accessing one of the publication's resources.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/#inheritors","text":"Name SearchException SearchException SearchException SearchException SearchException SearchException","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-bad-query/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchException / BadQuery BadQuery \u00b6 [androidJvm]\\ class BadQuery (cause: UserException ) : SearchException The provided search query cannot be handled by the service. Constructors \u00b6 BadQuery [androidJvm] fun BadQuery (cause: UserException ) Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-bad-query/#badquery","text":"[androidJvm]\\ class BadQuery (cause: UserException ) : SearchException The provided search query cannot be handled by the service.","title":"BadQuery"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-bad-query/#constructors","text":"BadQuery [androidJvm] fun BadQuery (cause: UserException )","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-bad-query/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-bad-query/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-bad-query/-bad-query/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchException / BadQuery / BadQuery BadQuery \u00b6 [androidJvm]\\ fun BadQuery (cause: UserException )","title":" bad query"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-bad-query/-bad-query/#badquery","text":"[androidJvm]\\ fun BadQuery (cause: UserException )","title":"BadQuery"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-cancelled/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchException / Cancelled Cancelled \u00b6 [androidJvm]\\ object Cancelled : SearchException The search was cancelled by the caller. For example, when a coroutine or a network request is cancelled. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-cancelled/#cancelled","text":"[androidJvm]\\ object Cancelled : SearchException The search was cancelled by the caller. For example, when a coroutine or a network request is cancelled.","title":"Cancelled"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-cancelled/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-cancelled/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-companion/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchException / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary wrap [androidJvm] fun wrap (e: Throwable ): SearchException","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-companion/#functions","text":"Name Summary wrap [androidJvm] fun wrap (e: Throwable ): SearchException","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-companion/wrap/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchException / Companion / wrap wrap \u00b6 [androidJvm]\\ fun wrap (e: Throwable ): SearchException","title":"Wrap"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-companion/wrap/#wrap","text":"[androidJvm]\\ fun wrap (e: Throwable ): SearchException","title":"wrap"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-network-error/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchException / NetworkError NetworkError \u00b6 [androidJvm]\\ class NetworkError (cause: HttpException ) : SearchException An error occurred while performing an HTTP request. Constructors \u00b6 NetworkError [androidJvm] fun NetworkError (cause: HttpException ) Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-network-error/#networkerror","text":"[androidJvm]\\ class NetworkError (cause: HttpException ) : SearchException An error occurred while performing an HTTP request.","title":"NetworkError"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-network-error/#constructors","text":"NetworkError [androidJvm] fun NetworkError (cause: HttpException )","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-network-error/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-network-error/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-network-error/-network-error/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchException / NetworkError / NetworkError NetworkError \u00b6 [androidJvm]\\ fun NetworkError (cause: HttpException )","title":" network error"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-network-error/-network-error/#networkerror","text":"[androidJvm]\\ fun NetworkError (cause: HttpException )","title":"NetworkError"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-other/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchException / Other Other \u00b6 [androidJvm]\\ class Other (cause: Throwable ) : SearchException For any other custom service error. Constructors \u00b6 Other [androidJvm] fun Other (cause: Throwable ) Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-other/#other","text":"[androidJvm]\\ class Other (cause: Throwable ) : SearchException For any other custom service error.","title":"Other"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-other/#constructors","text":"Other [androidJvm] fun Other (cause: Throwable )","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-other/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-other/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-other/-other/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchException / Other / Other Other \u00b6 [androidJvm]\\ fun Other (cause: Throwable )","title":" other"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-other/-other/#other","text":"[androidJvm]\\ fun Other (cause: Throwable )","title":"Other"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-publication-not-searchable/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchException / PublicationNotSearchable PublicationNotSearchable \u00b6 [androidJvm]\\ object PublicationNotSearchable : SearchException The publication is not searchable. Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-publication-not-searchable/#publicationnotsearchable","text":"[androidJvm]\\ object PublicationNotSearchable : SearchException The publication is not searchable.","title":"PublicationNotSearchable"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-publication-not-searchable/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-publication-not-searchable/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-resource-error/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchException / ResourceError ResourceError \u00b6 [androidJvm]\\ class ResourceError (cause: Resource.Exception ) : SearchException An error occurred while accessing one of the publication's resources. Constructors \u00b6 ResourceError [androidJvm] fun ResourceError (cause: Resource.Exception ) Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-resource-error/#resourceerror","text":"[androidJvm]\\ class ResourceError (cause: Resource.Exception ) : SearchException An error occurred while accessing one of the publication's resources.","title":"ResourceError"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-resource-error/#constructors","text":"ResourceError [androidJvm] fun ResourceError (cause: Resource.Exception )","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-resource-error/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open fun getUserMessage (context: Context , includesCauses: Boolean = true): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-resource-error/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-resource-error/-resource-error/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchException / ResourceError / ResourceError ResourceError \u00b6 [androidJvm]\\ fun ResourceError (cause: Resource.Exception )","title":" resource error"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-exception/-resource-error/-resource-error/#resourceerror","text":"[androidJvm]\\ fun ResourceError (cause: Resource.Exception )","title":"ResourceError"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-iterator/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchIterator SearchIterator \u00b6 [androidJvm]\\ interface SearchIterator : SuspendingCloseable Iterates through search results. Functions \u00b6 Name Summary close [androidJvm] open suspend override fun close () Closes any resources allocated for the search query, such as a cursor. To be called when the user dismisses the search. forEach [androidJvm] open suspend fun forEach (action: ( LocatorCollection ) -> Unit ): SearchTry < Unit > Performs the given operation on each result page of this SearchIterator . next [androidJvm] abstract suspend fun next (): SearchTry < LocatorCollection ?> Retrieves the next page of results. Properties \u00b6 Name Summary resultCount [androidJvm] open val resultCount : Int ? Number of matches for this search, if known.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-iterator/#searchiterator","text":"[androidJvm]\\ interface SearchIterator : SuspendingCloseable Iterates through search results.","title":"SearchIterator"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-iterator/#functions","text":"Name Summary close [androidJvm] open suspend override fun close () Closes any resources allocated for the search query, such as a cursor. To be called when the user dismisses the search. forEach [androidJvm] open suspend fun forEach (action: ( LocatorCollection ) -> Unit ): SearchTry < Unit > Performs the given operation on each result page of this SearchIterator . next [androidJvm] abstract suspend fun next (): SearchTry < LocatorCollection ?> Retrieves the next page of results.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-iterator/#properties","text":"Name Summary resultCount [androidJvm] open val resultCount : Int ? Number of matches for this search, if known.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-iterator/close/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchIterator / close close \u00b6 [androidJvm]\\ open suspend override fun close () Closes any resources allocated for the search query, such as a cursor. To be called when the user dismisses the search.","title":"Close"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-iterator/close/#close","text":"[androidJvm]\\ open suspend override fun close () Closes any resources allocated for the search query, such as a cursor. To be called when the user dismisses the search.","title":"close"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-iterator/for-each/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchIterator / forEach forEach \u00b6 [androidJvm]\\ open suspend fun forEach (action: ( LocatorCollection ) -> Unit ): SearchTry < Unit > Performs the given operation on each result page of this SearchIterator .","title":"For each"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-iterator/for-each/#foreach","text":"[androidJvm]\\ open suspend fun forEach (action: ( LocatorCollection ) -> Unit ): SearchTry < Unit > Performs the given operation on each result page of this SearchIterator .","title":"forEach"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-iterator/next/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchIterator / next next \u00b6 [androidJvm]\\ abstract suspend fun next (): SearchTry < LocatorCollection ?> Retrieves the next page of results. Return \u00b6 Null when reaching the end of the publication, or an error in case of failure.","title":"Next"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-iterator/next/#next","text":"[androidJvm]\\ abstract suspend fun next (): SearchTry < LocatorCollection ?> Retrieves the next page of results.","title":"next"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-iterator/next/#return","text":"Null when reaching the end of the publication, or an error in case of failure.","title":"Return"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-iterator/result-count/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchIterator / resultCount resultCount \u00b6 [androidJvm]\\ open val resultCount : Int ? Number of matches for this search, if known. Depending on the search algorithm, it may not be possible to know the result count until reaching the end of the publication. The count might be updated after each call to next .","title":"Result count"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-iterator/result-count/#resultcount","text":"[androidJvm]\\ open val resultCount : Int ? Number of matches for this search, if known. Depending on the search algorithm, it may not be possible to know the result count until reaching the end of the publication. The count might be updated after each call to next .","title":"resultCount"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchService SearchService \u00b6 [androidJvm]\\ interface SearchService : Publication.Service Provides a way to search terms in a publication. Types \u00b6 Name Summary Options [androidJvm] data class Options (caseSensitive: Boolean ?, diacriticSensitive: Boolean ?, wholeWord: Boolean ?, exact: Boolean ?, language: String ?, regularExpression: Boolean ?, otherOptions: Map < String , String >) : Parcelable Holds the available search options and their current values. Functions \u00b6 Name Summary close [androidJvm] open fun close () Closes any opened file handles, removes temporary files, etc. get [androidJvm] open fun get (link: Link ): Resource ? A service can return a Resource to: search [androidJvm] abstract suspend fun search (query: String , options: SearchService.Options ? = null): SearchTry < SearchIterator > Starts a new search through the publication content, with the given query . Properties \u00b6 Name Summary links [androidJvm] open val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get . options [androidJvm] abstract val options : SearchService.Options Default value for the search options of this service. Inheritors \u00b6 Name StringSearchService","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/#searchservice","text":"[androidJvm]\\ interface SearchService : Publication.Service Provides a way to search terms in a publication.","title":"SearchService"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/#types","text":"Name Summary Options [androidJvm] data class Options (caseSensitive: Boolean ?, diacriticSensitive: Boolean ?, wholeWord: Boolean ?, exact: Boolean ?, language: String ?, regularExpression: Boolean ?, otherOptions: Map < String , String >) : Parcelable Holds the available search options and their current values.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/#functions","text":"Name Summary close [androidJvm] open fun close () Closes any opened file handles, removes temporary files, etc. get [androidJvm] open fun get (link: Link ): Resource ? A service can return a Resource to: search [androidJvm] abstract suspend fun search (query: String , options: SearchService.Options ? = null): SearchTry < SearchIterator > Starts a new search through the publication content, with the given query .","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/#properties","text":"Name Summary links [androidJvm] open val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get . options [androidJvm] abstract val options : SearchService.Options Default value for the search options of this service.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/#inheritors","text":"Name StringSearchService","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/options/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchService / options options \u00b6 [androidJvm]\\ abstract val options : SearchService.Options Default value for the search options of this service. If an option does not have a value, it is not supported by the service.","title":"Options"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/options/#options","text":"[androidJvm]\\ abstract val options : SearchService.Options Default value for the search options of this service. If an option does not have a value, it is not supported by the service.","title":"options"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/search/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchService / search search \u00b6 [androidJvm]\\ abstract suspend fun search (query: String , options: SearchService.Options ? = null): SearchTry < SearchIterator > Starts a new search through the publication content, with the given query . If an option is nil when calling search(), its value is assumed to be the default one.","title":"Search"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/search/#search","text":"[androidJvm]\\ abstract suspend fun search (query: String , options: SearchService.Options ? = null): SearchTry < SearchIterator > Starts a new search through the publication content, with the given query . If an option is nil when calling search(), its value is assumed to be the default one.","title":"search"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/-options/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchService / Options Options \u00b6 [androidJvm]\\ data class Options (caseSensitive: Boolean ?, diacriticSensitive: Boolean ?, wholeWord: Boolean ?, exact: Boolean ?, language: String ?, regularExpression: Boolean ?, otherOptions: Map < String , String >) : Parcelable Holds the available search options and their current values. Parameters \u00b6 androidJvm caseSensitive Whether the search will differentiate between capital and lower-case letters. diacriticSensitive Whether the search will differentiate between letters with accents or not. wholeWord Whether the query terms will match full words and not parts of a word. exact Matches results exactly as stated in the query terms, taking into account stop words, order and spelling. language BCP 47 language code overriding the publication's language. regularExpression The search string is treated as a regular expression. The particular flavor of regex depends on the service. otherOptions Map of custom options implemented by a Search Service which are not officially recognized by Readium. Constructors \u00b6 Options [androidJvm] fun Options (caseSensitive: Boolean ? = null, diacriticSensitive: Boolean ? = null, wholeWord: Boolean ? = null, exact: Boolean ? = null, language: String ? = null, regularExpression: Boolean ? = null, otherOptions: Map < String , String > = emptyMap()) Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int get [androidJvm] operator fun get (key: String ): String ? Syntactic sugar to access the otherOptions values by subscripting Options directly. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary caseSensitive [androidJvm] val caseSensitive : Boolean ? = null diacriticSensitive [androidJvm] val diacriticSensitive : Boolean ? = null exact [androidJvm] val exact : Boolean ? = null language [androidJvm] val language : String ? = null otherOptions [androidJvm] val otherOptions : Map < String , String > regularExpression [androidJvm] val regularExpression : Boolean ? = null wholeWord [androidJvm] val wholeWord : Boolean ? = null","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/-options/#options","text":"[androidJvm]\\ data class Options (caseSensitive: Boolean ?, diacriticSensitive: Boolean ?, wholeWord: Boolean ?, exact: Boolean ?, language: String ?, regularExpression: Boolean ?, otherOptions: Map < String , String >) : Parcelable Holds the available search options and their current values.","title":"Options"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/-options/#parameters","text":"androidJvm caseSensitive Whether the search will differentiate between capital and lower-case letters. diacriticSensitive Whether the search will differentiate between letters with accents or not. wholeWord Whether the query terms will match full words and not parts of a word. exact Matches results exactly as stated in the query terms, taking into account stop words, order and spelling. language BCP 47 language code overriding the publication's language. regularExpression The search string is treated as a regular expression. The particular flavor of regex depends on the service. otherOptions Map of custom options implemented by a Search Service which are not officially recognized by Readium.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/-options/#constructors","text":"Options [androidJvm] fun Options (caseSensitive: Boolean ? = null, diacriticSensitive: Boolean ? = null, wholeWord: Boolean ? = null, exact: Boolean ? = null, language: String ? = null, regularExpression: Boolean ? = null, otherOptions: Map < String , String > = emptyMap())","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/-options/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int get [androidJvm] operator fun get (key: String ): String ? Syntactic sugar to access the otherOptions values by subscripting Options directly. writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/-options/#properties","text":"Name Summary caseSensitive [androidJvm] val caseSensitive : Boolean ? = null diacriticSensitive [androidJvm] val diacriticSensitive : Boolean ? = null exact [androidJvm] val exact : Boolean ? = null language [androidJvm] val language : String ? = null otherOptions [androidJvm] val otherOptions : Map < String , String > regularExpression [androidJvm] val regularExpression : Boolean ? = null wholeWord [androidJvm] val wholeWord : Boolean ? = null","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/-options/-options/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchService / Options / Options Options \u00b6 [androidJvm]\\ fun Options (caseSensitive: Boolean ? = null, diacriticSensitive: Boolean ? = null, wholeWord: Boolean ? = null, exact: Boolean ? = null, language: String ? = null, regularExpression: Boolean ? = null, otherOptions: Map < String , String > = emptyMap()) Parameters \u00b6 androidJvm caseSensitive Whether the search will differentiate between capital and lower-case letters. diacriticSensitive Whether the search will differentiate between letters with accents or not. wholeWord Whether the query terms will match full words and not parts of a word. exact Matches results exactly as stated in the query terms, taking into account stop words, order and spelling. language BCP 47 language code overriding the publication's language. regularExpression The search string is treated as a regular expression. The particular flavor of regex depends on the service. otherOptions Map of custom options implemented by a Search Service which are not officially recognized by Readium.","title":" options"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/-options/-options/#options","text":"[androidJvm]\\ fun Options (caseSensitive: Boolean ? = null, diacriticSensitive: Boolean ? = null, wholeWord: Boolean ? = null, exact: Boolean ? = null, language: String ? = null, regularExpression: Boolean ? = null, otherOptions: Map < String , String > = emptyMap())","title":"Options"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/-options/-options/#parameters","text":"androidJvm caseSensitive Whether the search will differentiate between capital and lower-case letters. diacriticSensitive Whether the search will differentiate between letters with accents or not. wholeWord Whether the query terms will match full words and not parts of a word. exact Matches results exactly as stated in the query terms, taking into account stop words, order and spelling. language BCP 47 language code overriding the publication's language. regularExpression The search string is treated as a regular expression. The particular flavor of regex depends on the service. otherOptions Map of custom options implemented by a Search Service which are not officially recognized by Readium.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/-options/case-sensitive/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchService / Options / caseSensitive caseSensitive \u00b6 [androidJvm]\\ val caseSensitive : Boolean ? = null","title":"Case sensitive"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/-options/case-sensitive/#casesensitive","text":"[androidJvm]\\ val caseSensitive : Boolean ? = null","title":"caseSensitive"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/-options/diacritic-sensitive/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchService / Options / diacriticSensitive diacriticSensitive \u00b6 [androidJvm]\\ val diacriticSensitive : Boolean ? = null","title":"Diacritic sensitive"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/-options/diacritic-sensitive/#diacriticsensitive","text":"[androidJvm]\\ val diacriticSensitive : Boolean ? = null","title":"diacriticSensitive"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/-options/exact/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchService / Options / exact exact \u00b6 [androidJvm]\\ val exact : Boolean ? = null","title":"Exact"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/-options/exact/#exact","text":"[androidJvm]\\ val exact : Boolean ? = null","title":"exact"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/-options/get/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchService / Options / get get \u00b6 [androidJvm]\\ operator fun get (key: String ): String ? Syntactic sugar to access the otherOptions values by subscripting Options directly.","title":"Get"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/-options/get/#get","text":"[androidJvm]\\ operator fun get (key: String ): String ? Syntactic sugar to access the otherOptions values by subscripting Options directly.","title":"get"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/-options/language/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchService / Options / language language \u00b6 [androidJvm]\\ val language : String ? = null","title":"Language"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/-options/language/#language","text":"[androidJvm]\\ val language : String ? = null","title":"language"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/-options/other-options/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchService / Options / otherOptions otherOptions \u00b6 [androidJvm]\\ val otherOptions : Map < String , String >","title":"Other options"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/-options/other-options/#otheroptions","text":"[androidJvm]\\ val otherOptions : Map < String , String >","title":"otherOptions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/-options/regular-expression/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchService / Options / regularExpression regularExpression \u00b6 [androidJvm]\\ val regularExpression : Boolean ? = null","title":"Regular expression"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/-options/regular-expression/#regularexpression","text":"[androidJvm]\\ val regularExpression : Boolean ? = null","title":"regularExpression"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/-options/whole-word/","text":"// shared / org.readium.r2.shared.publication.services.search / SearchService / Options / wholeWord wholeWord \u00b6 [androidJvm]\\ val wholeWord : Boolean ? = null","title":"Whole word"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-search-service/-options/whole-word/#wholeword","text":"[androidJvm]\\ val wholeWord : Boolean ? = null","title":"wholeWord"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/","text":"// shared / org.readium.r2.shared.publication.services.search / StringSearchService StringSearchService \u00b6 [androidJvm]\\ class StringSearchService (publication: Ref < Publication >, language: String ?, snippetLength: Int , searchAlgorithm: StringSearchService.Algorithm , extractorFactory: ResourceContentExtractor.Factory ) : SearchService Base implementation of SearchService iterating through the content of Publication's resources. To stay media-type-agnostic, StringSearchService relies on ResourceContentExtractor implementations to retrieve the pure text content from markups (e.g. HTML) or binary (e.g. PDF) resources. The actual search is implemented by the provided searchAlgorithm . Constructors \u00b6 StringSearchService [androidJvm] fun StringSearchService (publication: Ref < Publication >, language: String ?, snippetLength: Int , searchAlgorithm: StringSearchService.Algorithm , extractorFactory: ResourceContentExtractor.Factory ) Types \u00b6 Name Summary Algorithm [androidJvm] interface Algorithm Implements the actual search algorithm in sanitized text content. Companion [androidJvm] object Companion IcuAlgorithm [androidJvm] @ RequiresApi (value = 24) class IcuAlgorithm : StringSearchService.Algorithm Implementation of a search Algorithm using ICU components to perform the actual search while taking into account languages specificities. NaiveAlgorithm [androidJvm] class NaiveAlgorithm : StringSearchService.Algorithm A naive search Algorithm performing exact matches on strings. Functions \u00b6 Name Summary close [androidJvm] open fun close () Closes any opened file handles, removes temporary files, etc. get [androidJvm] open fun get (link: Link ): Resource ? A service can return a Resource to: search [androidJvm] open suspend override fun search (query: String , options: SearchService.Options ?): SearchTry < SearchIterator > Starts a new search through the publication content, with the given query . Properties \u00b6 Name Summary language [androidJvm] val language : String ? links [androidJvm] open val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get . options [androidJvm] open override val options : SearchService.Options Default value for the search options of this service.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/#stringsearchservice","text":"[androidJvm]\\ class StringSearchService (publication: Ref < Publication >, language: String ?, snippetLength: Int , searchAlgorithm: StringSearchService.Algorithm , extractorFactory: ResourceContentExtractor.Factory ) : SearchService Base implementation of SearchService iterating through the content of Publication's resources. To stay media-type-agnostic, StringSearchService relies on ResourceContentExtractor implementations to retrieve the pure text content from markups (e.g. HTML) or binary (e.g. PDF) resources. The actual search is implemented by the provided searchAlgorithm .","title":"StringSearchService"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/#constructors","text":"StringSearchService [androidJvm] fun StringSearchService (publication: Ref < Publication >, language: String ?, snippetLength: Int , searchAlgorithm: StringSearchService.Algorithm , extractorFactory: ResourceContentExtractor.Factory )","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/#types","text":"Name Summary Algorithm [androidJvm] interface Algorithm Implements the actual search algorithm in sanitized text content. Companion [androidJvm] object Companion IcuAlgorithm [androidJvm] @ RequiresApi (value = 24) class IcuAlgorithm : StringSearchService.Algorithm Implementation of a search Algorithm using ICU components to perform the actual search while taking into account languages specificities. NaiveAlgorithm [androidJvm] class NaiveAlgorithm : StringSearchService.Algorithm A naive search Algorithm performing exact matches on strings.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/#functions","text":"Name Summary close [androidJvm] open fun close () Closes any opened file handles, removes temporary files, etc. get [androidJvm] open fun get (link: Link ): Resource ? A service can return a Resource to: search [androidJvm] open suspend override fun search (query: String , options: SearchService.Options ?): SearchTry < SearchIterator > Starts a new search through the publication content, with the given query .","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/#properties","text":"Name Summary language [androidJvm] val language : String ? links [androidJvm] open val links : List < Link > Links which will be added to Publication.links . It can be used to expose a web API for the service, through Publication.get . options [androidJvm] open override val options : SearchService.Options Default value for the search options of this service.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-string-search-service/","text":"// shared / org.readium.r2.shared.publication.services.search / StringSearchService / StringSearchService StringSearchService \u00b6 [androidJvm]\\ fun StringSearchService (publication: Ref < Publication >, language: String ?, snippetLength: Int , searchAlgorithm: StringSearchService.Algorithm , extractorFactory: ResourceContentExtractor.Factory )","title":" string search service"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-string-search-service/#stringsearchservice","text":"[androidJvm]\\ fun StringSearchService (publication: Ref < Publication >, language: String ?, snippetLength: Int , searchAlgorithm: StringSearchService.Algorithm , extractorFactory: ResourceContentExtractor.Factory )","title":"StringSearchService"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/language/","text":"// shared / org.readium.r2.shared.publication.services.search / StringSearchService / language language \u00b6 [androidJvm]\\ val language : String ?","title":"Language"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/language/#language","text":"[androidJvm]\\ val language : String ?","title":"language"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/options/","text":"// shared / org.readium.r2.shared.publication.services.search / StringSearchService / options options \u00b6 [androidJvm]\\ open override val options : SearchService.Options Default value for the search options of this service. If an option does not have a value, it is not supported by the service.","title":"Options"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/options/#options","text":"[androidJvm]\\ open override val options : SearchService.Options Default value for the search options of this service. If an option does not have a value, it is not supported by the service.","title":"options"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/search/","text":"// shared / org.readium.r2.shared.publication.services.search / StringSearchService / search search \u00b6 [androidJvm]\\ open suspend override fun search (query: String , options: SearchService.Options ?): SearchTry < SearchIterator > Starts a new search through the publication content, with the given query . If an option is nil when calling search(), its value is assumed to be the default one.","title":"Search"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/search/#search","text":"[androidJvm]\\ open suspend override fun search (query: String , options: SearchService.Options ?): SearchTry < SearchIterator > Starts a new search through the publication content, with the given query . If an option is nil when calling search(), its value is assumed to be the default one.","title":"search"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-algorithm/","text":"// shared / org.readium.r2.shared.publication.services.search / StringSearchService / Algorithm Algorithm \u00b6 [androidJvm]\\ interface Algorithm Implements the actual search algorithm in sanitized text content. Functions \u00b6 Name Summary findRanges [androidJvm] abstract suspend fun findRanges (query: String , options: SearchService.Options , text: String , locale: Locale ): List < IntRange > Finds all the ranges of occurrences of the given query in the text . Properties \u00b6 Name Summary options [androidJvm] abstract val options : SearchService.Options Default value for the search options available with this algorithm. If an option does not have a value, it is not supported by the algorithm. Inheritors \u00b6 Name StringSearchService StringSearchService","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-algorithm/#algorithm","text":"[androidJvm]\\ interface Algorithm Implements the actual search algorithm in sanitized text content.","title":"Algorithm"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-algorithm/#functions","text":"Name Summary findRanges [androidJvm] abstract suspend fun findRanges (query: String , options: SearchService.Options , text: String , locale: Locale ): List < IntRange > Finds all the ranges of occurrences of the given query in the text .","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-algorithm/#properties","text":"Name Summary options [androidJvm] abstract val options : SearchService.Options Default value for the search options available with this algorithm. If an option does not have a value, it is not supported by the algorithm.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-algorithm/#inheritors","text":"Name StringSearchService StringSearchService","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-algorithm/find-ranges/","text":"// shared / org.readium.r2.shared.publication.services.search / StringSearchService / Algorithm / findRanges findRanges \u00b6 [androidJvm]\\ abstract suspend fun findRanges (query: String , options: SearchService.Options , text: String , locale: Locale ): List < IntRange > Finds all the ranges of occurrences of the given query in the text .","title":"Find ranges"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-algorithm/find-ranges/#findranges","text":"[androidJvm]\\ abstract suspend fun findRanges (query: String , options: SearchService.Options , text: String , locale: Locale ): List < IntRange > Finds all the ranges of occurrences of the given query in the text .","title":"findRanges"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-algorithm/options/","text":"// shared / org.readium.r2.shared.publication.services.search / StringSearchService / Algorithm / options options \u00b6 [androidJvm]\\ abstract val options : SearchService.Options Default value for the search options available with this algorithm. If an option does not have a value, it is not supported by the algorithm.","title":"Options"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-algorithm/options/#options","text":"[androidJvm]\\ abstract val options : SearchService.Options Default value for the search options available with this algorithm. If an option does not have a value, it is not supported by the algorithm.","title":"options"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-companion/","text":"// shared / org.readium.r2.shared.publication.services.search / StringSearchService / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary createDefaultFactory [androidJvm] fun createDefaultFactory (snippetLength: Int = 200, searchAlgorithm: StringSearchService.Algorithm ? = null, extractorFactory: ResourceContentExtractor.Factory = DefaultResourceContentExtractorFactory()): ( Publication.Service.Context ) -> StringSearchService","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-companion/#functions","text":"Name Summary createDefaultFactory [androidJvm] fun createDefaultFactory (snippetLength: Int = 200, searchAlgorithm: StringSearchService.Algorithm ? = null, extractorFactory: ResourceContentExtractor.Factory = DefaultResourceContentExtractorFactory()): ( Publication.Service.Context ) -> StringSearchService","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-companion/create-default-factory/","text":"// shared / org.readium.r2.shared.publication.services.search / StringSearchService / Companion / createDefaultFactory createDefaultFactory \u00b6 [androidJvm]\\ fun createDefaultFactory (snippetLength: Int = 200, searchAlgorithm: StringSearchService.Algorithm ? = null, extractorFactory: ResourceContentExtractor.Factory = DefaultResourceContentExtractorFactory()): ( Publication.Service.Context ) -> StringSearchService","title":"Create default factory"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-companion/create-default-factory/#createdefaultfactory","text":"[androidJvm]\\ fun createDefaultFactory (snippetLength: Int = 200, searchAlgorithm: StringSearchService.Algorithm ? = null, extractorFactory: ResourceContentExtractor.Factory = DefaultResourceContentExtractorFactory()): ( Publication.Service.Context ) -> StringSearchService","title":"createDefaultFactory"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-icu-algorithm/","text":"// shared / org.readium.r2.shared.publication.services.search / StringSearchService / IcuAlgorithm IcuAlgorithm \u00b6 [androidJvm]\\ @ RequiresApi (value = 24) class IcuAlgorithm : StringSearchService.Algorithm Implementation of a search Algorithm using ICU components to perform the actual search while taking into account languages specificities. Constructors \u00b6 IcuAlgorithm [androidJvm] fun IcuAlgorithm () Functions \u00b6 Name Summary findRanges [androidJvm] open suspend override fun findRanges (query: String , options: SearchService.Options , text: String , locale: Locale ): List < IntRange > Finds all the ranges of occurrences of the given query in the text . Properties \u00b6 Name Summary options [androidJvm] open override val options : SearchService.Options Default value for the search options available with this algorithm. If an option does not have a value, it is not supported by the algorithm.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-icu-algorithm/#icualgorithm","text":"[androidJvm]\\ @ RequiresApi (value = 24) class IcuAlgorithm : StringSearchService.Algorithm Implementation of a search Algorithm using ICU components to perform the actual search while taking into account languages specificities.","title":"IcuAlgorithm"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-icu-algorithm/#constructors","text":"IcuAlgorithm [androidJvm] fun IcuAlgorithm ()","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-icu-algorithm/#functions","text":"Name Summary findRanges [androidJvm] open suspend override fun findRanges (query: String , options: SearchService.Options , text: String , locale: Locale ): List < IntRange > Finds all the ranges of occurrences of the given query in the text .","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-icu-algorithm/#properties","text":"Name Summary options [androidJvm] open override val options : SearchService.Options Default value for the search options available with this algorithm. If an option does not have a value, it is not supported by the algorithm.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-icu-algorithm/-icu-algorithm/","text":"// shared / org.readium.r2.shared.publication.services.search / StringSearchService / IcuAlgorithm / IcuAlgorithm IcuAlgorithm \u00b6 [androidJvm]\\ fun IcuAlgorithm ()","title":" icu algorithm"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-icu-algorithm/-icu-algorithm/#icualgorithm","text":"[androidJvm]\\ fun IcuAlgorithm ()","title":"IcuAlgorithm"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-icu-algorithm/find-ranges/","text":"// shared / org.readium.r2.shared.publication.services.search / StringSearchService / IcuAlgorithm / findRanges findRanges \u00b6 [androidJvm]\\ open suspend override fun findRanges (query: String , options: SearchService.Options , text: String , locale: Locale ): List < IntRange > Finds all the ranges of occurrences of the given query in the text .","title":"Find ranges"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-icu-algorithm/find-ranges/#findranges","text":"[androidJvm]\\ open suspend override fun findRanges (query: String , options: SearchService.Options , text: String , locale: Locale ): List < IntRange > Finds all the ranges of occurrences of the given query in the text .","title":"findRanges"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-icu-algorithm/options/","text":"// shared / org.readium.r2.shared.publication.services.search / StringSearchService / IcuAlgorithm / options options \u00b6 [androidJvm]\\ open override val options : SearchService.Options Default value for the search options available with this algorithm. If an option does not have a value, it is not supported by the algorithm.","title":"Options"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-icu-algorithm/options/#options","text":"[androidJvm]\\ open override val options : SearchService.Options Default value for the search options available with this algorithm. If an option does not have a value, it is not supported by the algorithm.","title":"options"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-naive-algorithm/","text":"// shared / org.readium.r2.shared.publication.services.search / StringSearchService / NaiveAlgorithm NaiveAlgorithm \u00b6 [androidJvm]\\ class NaiveAlgorithm : StringSearchService.Algorithm A naive search Algorithm performing exact matches on strings. There are no safe ways to perform case insensitive search using String.indexOf with all languages, so this Algorithm does not have any options. Use IcuAlgorithm for better results. Constructors \u00b6 NaiveAlgorithm [androidJvm] fun NaiveAlgorithm () Functions \u00b6 Name Summary findRanges [androidJvm] open suspend override fun findRanges (query: String , options: SearchService.Options , text: String , locale: Locale ): List < IntRange > Finds all the ranges of occurrences of the given query in the text . Properties \u00b6 Name Summary options [androidJvm] open override val options : SearchService.Options Default value for the search options available with this algorithm. If an option does not have a value, it is not supported by the algorithm.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-naive-algorithm/#naivealgorithm","text":"[androidJvm]\\ class NaiveAlgorithm : StringSearchService.Algorithm A naive search Algorithm performing exact matches on strings. There are no safe ways to perform case insensitive search using String.indexOf with all languages, so this Algorithm does not have any options. Use IcuAlgorithm for better results.","title":"NaiveAlgorithm"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-naive-algorithm/#constructors","text":"NaiveAlgorithm [androidJvm] fun NaiveAlgorithm ()","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-naive-algorithm/#functions","text":"Name Summary findRanges [androidJvm] open suspend override fun findRanges (query: String , options: SearchService.Options , text: String , locale: Locale ): List < IntRange > Finds all the ranges of occurrences of the given query in the text .","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-naive-algorithm/#properties","text":"Name Summary options [androidJvm] open override val options : SearchService.Options Default value for the search options available with this algorithm. If an option does not have a value, it is not supported by the algorithm.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-naive-algorithm/-naive-algorithm/","text":"// shared / org.readium.r2.shared.publication.services.search / StringSearchService / NaiveAlgorithm / NaiveAlgorithm NaiveAlgorithm \u00b6 [androidJvm]\\ fun NaiveAlgorithm ()","title":" naive algorithm"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-naive-algorithm/-naive-algorithm/#naivealgorithm","text":"[androidJvm]\\ fun NaiveAlgorithm ()","title":"NaiveAlgorithm"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-naive-algorithm/find-ranges/","text":"// shared / org.readium.r2.shared.publication.services.search / StringSearchService / NaiveAlgorithm / findRanges findRanges \u00b6 [androidJvm]\\ open suspend override fun findRanges (query: String , options: SearchService.Options , text: String , locale: Locale ): List < IntRange > Finds all the ranges of occurrences of the given query in the text .","title":"Find ranges"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-naive-algorithm/find-ranges/#findranges","text":"[androidJvm]\\ open suspend override fun findRanges (query: String , options: SearchService.Options , text: String , locale: Locale ): List < IntRange > Finds all the ranges of occurrences of the given query in the text .","title":"findRanges"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-naive-algorithm/options/","text":"// shared / org.readium.r2.shared.publication.services.search / StringSearchService / NaiveAlgorithm / options options \u00b6 [androidJvm]\\ open override val options : SearchService.Options Default value for the search options available with this algorithm. If an option does not have a value, it is not supported by the algorithm.","title":"Options"},{"location":"readium/shared/shared/org.readium.r2.shared.publication.services.search/-string-search-service/-naive-algorithm/options/#options","text":"[androidJvm]\\ open override val options : SearchService.Options Default value for the search options available with this algorithm. If an option does not have a value, it is not supported by the algorithm.","title":"options"},{"location":"readium/shared/shared/org.readium.r2.shared.util/","text":"// shared / org.readium.r2.shared.util Package org.readium.r2.shared.util \u00b6 Types \u00b6 Name Summary Href [androidJvm] class Href (href: String , baseHref: String ) Represents an HREF, optionally relative to another one. MapCompanion [androidJvm] open class MapCompanion < K , E >(map: Map < K , E >) Encapsulates a Map into a more limited query API. MapWithDefaultCompanion [androidJvm] open class MapWithDefaultCompanion < K , E >(map: Map < K , E >, default: E ) : MapCompanion < K , E > Extends a MapCompanion by adding a default value as a fallback. Ref [androidJvm] class Ref < T >(ref: T ?) Smart pointer holding a mutable reference to an object. SuspendingCloseable [androidJvm] interface SuspendingCloseable A SuspendingCloseable is an object holding closeable resources, such as open files or streams. Try [androidJvm] sealed class Try <out Success , out Failure : Throwable > A Result type which can be used as a return type. URITemplate [androidJvm] data class URITemplate (uri: String ) A lightweight implementation of URI Template (RFC 6570). Functions \u00b6 Name Summary allNamed [androidJvm] fun List < Href.QueryParameter >. allNamed (name: String ): List < String > firstNamedOrNull [androidJvm] fun List < Href.QueryParameter >. firstNamedOrNull (name: String ): String ? flatMap [androidJvm] inline fun < R , S , F : Throwable > Try < S , F >. flatMap (transform: ( S ) -> Try < R , F >): Try < R , F > getOrDefault [androidJvm] fun < R , S : R , F : Throwable > Try < S , F >. getOrDefault (defaultValue: R ): R Returns the encapsulated value if this instance represents success or the defaultValue if it is failure. getOrElse [androidJvm] inline fun < R , S : R , F : Throwable > Try < S , F >. getOrElse (onFailure: ( F ) -> R ): R Returns the encapsulated value if this instance represents success or the result of onFailure function for the encapsulated Throwable exception if it is failure. recover [androidJvm] inline fun < R , S : R , F : Throwable > Try < S , F >. recover (transform: ( F ) -> R ): Try < R , Nothing > Returns the encapsulated result of the given transform function applied to the encapsulated tryRecover [androidJvm] inline fun < R , S : R , F : Throwable > Try < S , F >. tryRecover (transform: ( F ) -> Try < R , F >): Try < R , F > Returns the encapsulated result of the given transform function applied to the encapsulated use [androidJvm] inline suspend fun < T : SuspendingCloseable ?, R > T . use (block: ( T ) -> R ): R Executes the given block function on this resource and then closes it down correctly whether an exception is thrown or not. Properties \u00b6 Name Summary isLazyInitialized [androidJvm] val KProperty0 <*>. isLazyInitialized : Boolean Returns true if a lazy property reference has been initialized, or if the property is not lazy.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util/#package-orgreadiumr2sharedutil","text":"","title":"Package org.readium.r2.shared.util"},{"location":"readium/shared/shared/org.readium.r2.shared.util/#types","text":"Name Summary Href [androidJvm] class Href (href: String , baseHref: String ) Represents an HREF, optionally relative to another one. MapCompanion [androidJvm] open class MapCompanion < K , E >(map: Map < K , E >) Encapsulates a Map into a more limited query API. MapWithDefaultCompanion [androidJvm] open class MapWithDefaultCompanion < K , E >(map: Map < K , E >, default: E ) : MapCompanion < K , E > Extends a MapCompanion by adding a default value as a fallback. Ref [androidJvm] class Ref < T >(ref: T ?) Smart pointer holding a mutable reference to an object. SuspendingCloseable [androidJvm] interface SuspendingCloseable A SuspendingCloseable is an object holding closeable resources, such as open files or streams. Try [androidJvm] sealed class Try <out Success , out Failure : Throwable > A Result type which can be used as a return type. URITemplate [androidJvm] data class URITemplate (uri: String ) A lightweight implementation of URI Template (RFC 6570).","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.util/#functions","text":"Name Summary allNamed [androidJvm] fun List < Href.QueryParameter >. allNamed (name: String ): List < String > firstNamedOrNull [androidJvm] fun List < Href.QueryParameter >. firstNamedOrNull (name: String ): String ? flatMap [androidJvm] inline fun < R , S , F : Throwable > Try < S , F >. flatMap (transform: ( S ) -> Try < R , F >): Try < R , F > getOrDefault [androidJvm] fun < R , S : R , F : Throwable > Try < S , F >. getOrDefault (defaultValue: R ): R Returns the encapsulated value if this instance represents success or the defaultValue if it is failure. getOrElse [androidJvm] inline fun < R , S : R , F : Throwable > Try < S , F >. getOrElse (onFailure: ( F ) -> R ): R Returns the encapsulated value if this instance represents success or the result of onFailure function for the encapsulated Throwable exception if it is failure. recover [androidJvm] inline fun < R , S : R , F : Throwable > Try < S , F >. recover (transform: ( F ) -> R ): Try < R , Nothing > Returns the encapsulated result of the given transform function applied to the encapsulated tryRecover [androidJvm] inline fun < R , S : R , F : Throwable > Try < S , F >. tryRecover (transform: ( F ) -> Try < R , F >): Try < R , F > Returns the encapsulated result of the given transform function applied to the encapsulated use [androidJvm] inline suspend fun < T : SuspendingCloseable ?, R > T . use (block: ( T ) -> R ): R Executes the given block function on this resource and then closes it down correctly whether an exception is thrown or not.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util/#properties","text":"Name Summary isLazyInitialized [androidJvm] val KProperty0 <*>. isLazyInitialized : Boolean Returns true if a lazy property reference has been initialized, or if the property is not lazy.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util/all-named/","text":"// shared / org.readium.r2.shared.util / allNamed allNamed \u00b6 [androidJvm]\\ fun List < Href.QueryParameter >. allNamed (name: String ): List < String >","title":"All named"},{"location":"readium/shared/shared/org.readium.r2.shared.util/all-named/#allnamed","text":"[androidJvm]\\ fun List < Href.QueryParameter >. allNamed (name: String ): List < String >","title":"allNamed"},{"location":"readium/shared/shared/org.readium.r2.shared.util/first-named-or-null/","text":"// shared / org.readium.r2.shared.util / firstNamedOrNull firstNamedOrNull \u00b6 [androidJvm]\\ fun List < Href.QueryParameter >. firstNamedOrNull (name: String ): String ?","title":"First named or null"},{"location":"readium/shared/shared/org.readium.r2.shared.util/first-named-or-null/#firstnamedornull","text":"[androidJvm]\\ fun List < Href.QueryParameter >. firstNamedOrNull (name: String ): String ?","title":"firstNamedOrNull"},{"location":"readium/shared/shared/org.readium.r2.shared.util/flat-map/","text":"// shared / org.readium.r2.shared.util / flatMap flatMap \u00b6 [androidJvm]\\ inline fun < R , S , F : Throwable > Try < S , F >. flatMap (transform: ( S ) -> Try < R , F >): Try < R , F >","title":"Flat map"},{"location":"readium/shared/shared/org.readium.r2.shared.util/flat-map/#flatmap","text":"[androidJvm]\\ inline fun < R , S , F : Throwable > Try < S , F >. flatMap (transform: ( S ) -> Try < R , F >): Try < R , F >","title":"flatMap"},{"location":"readium/shared/shared/org.readium.r2.shared.util/get-or-default/","text":"// shared / org.readium.r2.shared.util / getOrDefault getOrDefault \u00b6 [androidJvm]\\ fun < R , S : R , F : Throwable > Try < S , F >. getOrDefault (defaultValue: R ): R Returns the encapsulated value if this instance represents success or the defaultValue if it is failure.","title":"Get or default"},{"location":"readium/shared/shared/org.readium.r2.shared.util/get-or-default/#getordefault","text":"[androidJvm]\\ fun < R , S : R , F : Throwable > Try < S , F >. getOrDefault (defaultValue: R ): R Returns the encapsulated value if this instance represents success or the defaultValue if it is failure.","title":"getOrDefault"},{"location":"readium/shared/shared/org.readium.r2.shared.util/get-or-else/","text":"// shared / org.readium.r2.shared.util / getOrElse getOrElse \u00b6 [androidJvm]\\ inline fun < R , S : R , F : Throwable > Try < S , F >. getOrElse (onFailure: ( F ) -> R ): R Returns the encapsulated value if this instance represents success or the result of onFailure function for the encapsulated Throwable exception if it is failure.","title":"Get or else"},{"location":"readium/shared/shared/org.readium.r2.shared.util/get-or-else/#getorelse","text":"[androidJvm]\\ inline fun < R , S : R , F : Throwable > Try < S , F >. getOrElse (onFailure: ( F ) -> R ): R Returns the encapsulated value if this instance represents success or the result of onFailure function for the encapsulated Throwable exception if it is failure.","title":"getOrElse"},{"location":"readium/shared/shared/org.readium.r2.shared.util/is-lazy-initialized/","text":"// shared / org.readium.r2.shared.util / isLazyInitialized isLazyInitialized \u00b6 [androidJvm]\\ val KProperty0 <*>. isLazyInitialized : Boolean Returns true if a lazy property reference has been initialized, or if the property is not lazy. Source: https://stackoverflow.com/a/42536189/1474476","title":"Is lazy initialized"},{"location":"readium/shared/shared/org.readium.r2.shared.util/is-lazy-initialized/#islazyinitialized","text":"[androidJvm]\\ val KProperty0 <*>. isLazyInitialized : Boolean Returns true if a lazy property reference has been initialized, or if the property is not lazy. Source: https://stackoverflow.com/a/42536189/1474476","title":"isLazyInitialized"},{"location":"readium/shared/shared/org.readium.r2.shared.util/recover/","text":"// shared / org.readium.r2.shared.util / recover recover \u00b6 [androidJvm]\\ inline fun < R , S : R , F : Throwable > Try < S , F >. recover (transform: ( F ) -> R ): Try < R , Nothing > Returns the encapsulated result of the given transform function applied to the encapsulated |Throwable] exception if this instance represents failure or the original encapsulated value if it is success.","title":"Recover"},{"location":"readium/shared/shared/org.readium.r2.shared.util/recover/#recover","text":"[androidJvm]\\ inline fun < R , S : R , F : Throwable > Try < S , F >. recover (transform: ( F ) -> R ): Try < R , Nothing > Returns the encapsulated result of the given transform function applied to the encapsulated |Throwable] exception if this instance represents failure or the original encapsulated value if it is success.","title":"recover"},{"location":"readium/shared/shared/org.readium.r2.shared.util/try-recover/","text":"// shared / org.readium.r2.shared.util / tryRecover tryRecover \u00b6 [androidJvm]\\ inline fun < R , S : R , F : Throwable > Try < S , F >. tryRecover (transform: ( F ) -> Try < R , F >): Try < R , F > Returns the encapsulated result of the given transform function applied to the encapsulated |Throwable] exception if this instance represents failure or the original encapsulated value if it is success.","title":"Try recover"},{"location":"readium/shared/shared/org.readium.r2.shared.util/try-recover/#tryrecover","text":"[androidJvm]\\ inline fun < R , S : R , F : Throwable > Try < S , F >. tryRecover (transform: ( F ) -> Try < R , F >): Try < R , F > Returns the encapsulated result of the given transform function applied to the encapsulated |Throwable] exception if this instance represents failure or the original encapsulated value if it is success.","title":"tryRecover"},{"location":"readium/shared/shared/org.readium.r2.shared.util/use/","text":"// shared / org.readium.r2.shared.util / use use \u00b6 [androidJvm]\\ inline suspend fun < T : SuspendingCloseable ?, R > T . use (block: ( T ) -> R ): R Executes the given block function on this resource and then closes it down correctly whether an exception is thrown or not.","title":"Use"},{"location":"readium/shared/shared/org.readium.r2.shared.util/use/#use","text":"[androidJvm]\\ inline suspend fun < T : SuspendingCloseable ?, R > T . use (block: ( T ) -> R ): R Executes the given block function on this resource and then closes it down correctly whether an exception is thrown or not.","title":"use"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-href/","text":"// shared / org.readium.r2.shared.util / Href Href \u00b6 [androidJvm]\\ class Href (href: String , baseHref: String ) Represents an HREF, optionally relative to another one. This is used to normalize the string representation. Constructors \u00b6 Href [androidJvm] fun Href (href: String , baseHref: String = \"/\") Types \u00b6 Name Summary QueryParameter [androidJvm] data class QueryParameter (name: String , value: String ?) Properties \u00b6 Name Summary percentEncodedString [androidJvm] val percentEncodedString : String Returns the normalized string representation for this HREF, encoded for URL uses. queryParameters [androidJvm] val queryParameters : List < Href.QueryParameter > Returns the query parameters present in this HREF, in the order they appear. string [androidJvm] val string : String Returns the normalized string representation for this HREF.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-href/#href","text":"[androidJvm]\\ class Href (href: String , baseHref: String ) Represents an HREF, optionally relative to another one. This is used to normalize the string representation.","title":"Href"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-href/#constructors","text":"Href [androidJvm] fun Href (href: String , baseHref: String = \"/\")","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-href/#types","text":"Name Summary QueryParameter [androidJvm] data class QueryParameter (name: String , value: String ?)","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-href/#properties","text":"Name Summary percentEncodedString [androidJvm] val percentEncodedString : String Returns the normalized string representation for this HREF, encoded for URL uses. queryParameters [androidJvm] val queryParameters : List < Href.QueryParameter > Returns the query parameters present in this HREF, in the order they appear. string [androidJvm] val string : String Returns the normalized string representation for this HREF.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-href/-href/","text":"// shared / org.readium.r2.shared.util / Href / Href Href \u00b6 [androidJvm]\\ fun Href (href: String , baseHref: String = \"/\")","title":" href"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-href/-href/#href","text":"[androidJvm]\\ fun Href (href: String , baseHref: String = \"/\")","title":"Href"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-href/percent-encoded-string/","text":"// shared / org.readium.r2.shared.util / Href / percentEncodedString percentEncodedString \u00b6 [androidJvm]\\ val percentEncodedString : String Returns the normalized string representation for this HREF, encoded for URL uses. Taken from https://stackoverflow.com/a/49796882/1474476","title":"Percent encoded string"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-href/percent-encoded-string/#percentencodedstring","text":"[androidJvm]\\ val percentEncodedString : String Returns the normalized string representation for this HREF, encoded for URL uses. Taken from https://stackoverflow.com/a/49796882/1474476","title":"percentEncodedString"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-href/query-parameters/","text":"// shared / org.readium.r2.shared.util / Href / queryParameters queryParameters \u00b6 [androidJvm]\\ val queryParameters : List < Href.QueryParameter > Returns the query parameters present in this HREF, in the order they appear.","title":"Query parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-href/query-parameters/#queryparameters","text":"[androidJvm]\\ val queryParameters : List < Href.QueryParameter > Returns the query parameters present in this HREF, in the order they appear.","title":"queryParameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-href/string/","text":"// shared / org.readium.r2.shared.util / Href / string string \u00b6 [androidJvm]\\ val string : String Returns the normalized string representation for this HREF.","title":"String"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-href/string/#string","text":"[androidJvm]\\ val string : String Returns the normalized string representation for this HREF.","title":"string"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-href/-query-parameter/","text":"// shared / org.readium.r2.shared.util / Href / QueryParameter QueryParameter \u00b6 [androidJvm]\\ data class QueryParameter (name: String , value: String ?) Properties \u00b6 Name Summary name [androidJvm] val name : String value [androidJvm] val value : String ?","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-href/-query-parameter/#queryparameter","text":"[androidJvm]\\ data class QueryParameter (name: String , value: String ?)","title":"QueryParameter"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-href/-query-parameter/#properties","text":"Name Summary name [androidJvm] val name : String value [androidJvm] val value : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-href/-query-parameter/-query-parameter/","text":"// shared / org.readium.r2.shared.util / Href / QueryParameter / QueryParameter QueryParameter \u00b6 [androidJvm]\\ fun QueryParameter (name: String , value: String ?)","title":" query parameter"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-href/-query-parameter/-query-parameter/#queryparameter","text":"[androidJvm]\\ fun QueryParameter (name: String , value: String ?)","title":"QueryParameter"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-href/-query-parameter/name/","text":"// shared / org.readium.r2.shared.util / Href / QueryParameter / name name \u00b6 [androidJvm]\\ val name : String","title":"Name"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-href/-query-parameter/name/#name","text":"[androidJvm]\\ val name : String","title":"name"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-href/-query-parameter/value/","text":"// shared / org.readium.r2.shared.util / Href / QueryParameter / value value \u00b6 [androidJvm]\\ val value : String ?","title":"Value"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-href/-query-parameter/value/#value","text":"[androidJvm]\\ val value : String ?","title":"value"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-companion/","text":"// shared / org.readium.r2.shared.util / MapCompanion MapCompanion \u00b6 [androidJvm]\\ open class MapCompanion < K , E >(map: Map < K , E >) Encapsulates a Map into a more limited query API. This is most useful as an Enum companion, to provide parsing of raw values. enum class Layout(val value: String) {\\ PAGINATED(\"paginated\"),\\ REFLOWABLE(\"reflowable\");\\ \\ companion object : KeyMapper<String, Layout>(values(), Layout::value)\\ }\\ \\ val layout: Layout? = Layout(\"reflowable\") Constructors \u00b6 MapCompanion [androidJvm] fun < K , E > MapCompanion (elements: Array < E >, keySelector: ( E ) -> K ) MapCompanion [androidJvm] fun < K , E > MapCompanion (map: Map < K , E >) Functions \u00b6 Name Summary get [androidJvm] open fun get (key: K ?): E ? Returns the element matching the key , or null if not found. invoke [androidJvm] open operator fun invoke (key: K ?): E ? Alias to get , to be used like keyMapper(\"a_key\"). Properties \u00b6 Name Summary keys [androidJvm] val keys : Set < K > Returns the available keys . Inheritors \u00b6 Name Injectable DRM.Brand DRM.Scheme Availability.State EpubLayout Presentation.Fit Presentation.Orientation Presentation.Overflow Presentation.Page Presentation.Spread MapWithDefaultCompanion","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-companion/#mapcompanion","text":"[androidJvm]\\ open class MapCompanion < K , E >(map: Map < K , E >) Encapsulates a Map into a more limited query API. This is most useful as an Enum companion, to provide parsing of raw values. enum class Layout(val value: String) {\\ PAGINATED(\"paginated\"),\\ REFLOWABLE(\"reflowable\");\\ \\ companion object : KeyMapper<String, Layout>(values(), Layout::value)\\ }\\ \\ val layout: Layout? = Layout(\"reflowable\")","title":"MapCompanion"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-companion/#constructors","text":"MapCompanion [androidJvm] fun < K , E > MapCompanion (elements: Array < E >, keySelector: ( E ) -> K ) MapCompanion [androidJvm] fun < K , E > MapCompanion (map: Map < K , E >)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-companion/#functions","text":"Name Summary get [androidJvm] open fun get (key: K ?): E ? Returns the element matching the key , or null if not found. invoke [androidJvm] open operator fun invoke (key: K ?): E ? Alias to get , to be used like keyMapper(\"a_key\").","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-companion/#properties","text":"Name Summary keys [androidJvm] val keys : Set < K > Returns the available keys .","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-companion/#inheritors","text":"Name Injectable DRM.Brand DRM.Scheme Availability.State EpubLayout Presentation.Fit Presentation.Orientation Presentation.Overflow Presentation.Page Presentation.Spread MapWithDefaultCompanion","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-companion/-map-companion/","text":"// shared / org.readium.r2.shared.util / MapCompanion / MapCompanion MapCompanion \u00b6 [androidJvm]\\ fun < K , E > MapCompanion (elements: Array < E >, keySelector: ( E ) -> K ) fun < K , E > MapCompanion (map: Map < K , E >)","title":" map companion"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-companion/-map-companion/#mapcompanion","text":"[androidJvm]\\ fun < K , E > MapCompanion (elements: Array < E >, keySelector: ( E ) -> K ) fun < K , E > MapCompanion (map: Map < K , E >)","title":"MapCompanion"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-companion/get/","text":"// shared / org.readium.r2.shared.util / MapCompanion / get get \u00b6 [androidJvm]\\ open fun get (key: K ?): E ? Returns the element matching the key , or null if not found. To be overriden in subclasses if custom retrieval is needed \u2013 for example, testing lowercase keys.","title":"Get"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-companion/get/#get","text":"[androidJvm]\\ open fun get (key: K ?): E ? Returns the element matching the key , or null if not found. To be overriden in subclasses if custom retrieval is needed \u2013 for example, testing lowercase keys.","title":"get"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-companion/invoke/","text":"// shared / org.readium.r2.shared.util / MapCompanion / invoke invoke \u00b6 [androidJvm]\\ open operator fun invoke (key: K ?): E ? Alias to get , to be used like keyMapper(\"a_key\").","title":"Invoke"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-companion/invoke/#invoke","text":"[androidJvm]\\ open operator fun invoke (key: K ?): E ? Alias to get , to be used like keyMapper(\"a_key\").","title":"invoke"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-companion/keys/","text":"// shared / org.readium.r2.shared.util / MapCompanion / keys keys \u00b6 [androidJvm]\\ val keys : Set < K > Returns the available keys .","title":"Keys"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-companion/keys/#keys","text":"[androidJvm]\\ val keys : Set < K > Returns the available keys .","title":"keys"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-with-default-companion/","text":"// shared / org.readium.r2.shared.util / MapWithDefaultCompanion MapWithDefaultCompanion \u00b6 [androidJvm]\\ open class MapWithDefaultCompanion < K , E >(map: Map < K , E >, default: E ) : MapCompanion < K , E > Extends a MapCompanion by adding a default value as a fallback. Constructors \u00b6 MapWithDefaultCompanion [androidJvm] fun < K , E > MapWithDefaultCompanion (elements: Array < E >, keySelector: ( E ) -> K , default: E ) MapWithDefaultCompanion [androidJvm] fun < K , E > MapWithDefaultCompanion (map: Map < K , E >, default: E ) Functions \u00b6 Name Summary get [androidJvm] open fun get (key: K ?): E ? Returns the element matching the key , or null if not found. getOrDefault [androidJvm] fun getOrDefault (key: K ?): E Returns the element matching the key , or the default value as a fallback. invoke [androidJvm] open operator override fun invoke (key: K ?): E Alias to getOrDefault , to be used like keyMapper(\"a_key\"). Properties \u00b6 Name Summary default [androidJvm] val default : E keys [androidJvm] val keys : Set < K > Returns the available keys . Inheritors \u00b6 Name ReadingProgression","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-with-default-companion/#mapwithdefaultcompanion","text":"[androidJvm]\\ open class MapWithDefaultCompanion < K , E >(map: Map < K , E >, default: E ) : MapCompanion < K , E > Extends a MapCompanion by adding a default value as a fallback.","title":"MapWithDefaultCompanion"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-with-default-companion/#constructors","text":"MapWithDefaultCompanion [androidJvm] fun < K , E > MapWithDefaultCompanion (elements: Array < E >, keySelector: ( E ) -> K , default: E ) MapWithDefaultCompanion [androidJvm] fun < K , E > MapWithDefaultCompanion (map: Map < K , E >, default: E )","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-with-default-companion/#functions","text":"Name Summary get [androidJvm] open fun get (key: K ?): E ? Returns the element matching the key , or null if not found. getOrDefault [androidJvm] fun getOrDefault (key: K ?): E Returns the element matching the key , or the default value as a fallback. invoke [androidJvm] open operator override fun invoke (key: K ?): E Alias to getOrDefault , to be used like keyMapper(\"a_key\").","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-with-default-companion/#properties","text":"Name Summary default [androidJvm] val default : E keys [androidJvm] val keys : Set < K > Returns the available keys .","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-with-default-companion/#inheritors","text":"Name ReadingProgression","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-with-default-companion/-map-with-default-companion/","text":"// shared / org.readium.r2.shared.util / MapWithDefaultCompanion / MapWithDefaultCompanion MapWithDefaultCompanion \u00b6 [androidJvm]\\ fun < K , E > MapWithDefaultCompanion (elements: Array < E >, keySelector: ( E ) -> K , default: E ) fun < K , E > MapWithDefaultCompanion (map: Map < K , E >, default: E )","title":" map with default companion"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-with-default-companion/-map-with-default-companion/#mapwithdefaultcompanion","text":"[androidJvm]\\ fun < K , E > MapWithDefaultCompanion (elements: Array < E >, keySelector: ( E ) -> K , default: E ) fun < K , E > MapWithDefaultCompanion (map: Map < K , E >, default: E )","title":"MapWithDefaultCompanion"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-with-default-companion/default/","text":"// shared / org.readium.r2.shared.util / MapWithDefaultCompanion / default default \u00b6 [androidJvm]\\ val default : E","title":"Default"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-with-default-companion/default/#default","text":"[androidJvm]\\ val default : E","title":"default"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-with-default-companion/get-or-default/","text":"// shared / org.readium.r2.shared.util / MapWithDefaultCompanion / getOrDefault getOrDefault \u00b6 [androidJvm]\\ fun getOrDefault (key: K ?): E Returns the element matching the key , or the default value as a fallback.","title":"Get or default"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-with-default-companion/get-or-default/#getordefault","text":"[androidJvm]\\ fun getOrDefault (key: K ?): E Returns the element matching the key , or the default value as a fallback.","title":"getOrDefault"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-with-default-companion/invoke/","text":"// shared / org.readium.r2.shared.util / MapWithDefaultCompanion / invoke invoke \u00b6 [androidJvm]\\ open operator override fun invoke (key: K ?): E Alias to getOrDefault , to be used like keyMapper(\"a_key\").","title":"Invoke"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-map-with-default-companion/invoke/#invoke","text":"[androidJvm]\\ open operator override fun invoke (key: K ?): E Alias to getOrDefault , to be used like keyMapper(\"a_key\").","title":"invoke"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-ref/","text":"// shared / org.readium.r2.shared.util / Ref Ref \u00b6 [androidJvm]\\ class Ref < T >(ref: T ?) Smart pointer holding a mutable reference to an object. Get the reference by calling ref() Conveniently, the reference can be reset by setting the ref property. Constructors \u00b6 Ref [androidJvm] fun < T > Ref (ref: T ? = null) Functions \u00b6 Name Summary invoke [androidJvm] operator fun invoke (): T ? Properties \u00b6 Name Summary ref [androidJvm] var ref : T ? = null","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-ref/#ref","text":"[androidJvm]\\ class Ref < T >(ref: T ?) Smart pointer holding a mutable reference to an object. Get the reference by calling ref() Conveniently, the reference can be reset by setting the ref property.","title":"Ref"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-ref/#constructors","text":"Ref [androidJvm] fun < T > Ref (ref: T ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-ref/#functions","text":"Name Summary invoke [androidJvm] operator fun invoke (): T ?","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-ref/#properties","text":"Name Summary ref [androidJvm] var ref : T ? = null","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-ref/-ref/","text":"// shared / org.readium.r2.shared.util / Ref / Ref Ref \u00b6 [androidJvm]\\ fun < T > Ref (ref: T ? = null)","title":" ref"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-ref/-ref/#ref","text":"[androidJvm]\\ fun < T > Ref (ref: T ? = null)","title":"Ref"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-ref/invoke/","text":"// shared / org.readium.r2.shared.util / Ref / invoke invoke \u00b6 [androidJvm]\\ operator fun invoke (): T ?","title":"Invoke"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-ref/invoke/#invoke","text":"[androidJvm]\\ operator fun invoke (): T ?","title":"invoke"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-ref/ref/","text":"// shared / org.readium.r2.shared.util / Ref / ref ref \u00b6 [androidJvm]\\ var ref : T ? = null","title":"Ref"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-ref/ref/#ref","text":"[androidJvm]\\ var ref : T ? = null","title":"ref"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-suspending-closeable/","text":"// shared / org.readium.r2.shared.util / SuspendingCloseable SuspendingCloseable \u00b6 [androidJvm]\\ interface SuspendingCloseable A SuspendingCloseable is an object holding closeable resources, such as open files or streams. Functions \u00b6 Name Summary close [androidJvm] abstract suspend fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. Inheritors \u00b6 Name Fetcher Resource SearchIterator Archive Archive","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-suspending-closeable/#suspendingcloseable","text":"[androidJvm]\\ interface SuspendingCloseable A SuspendingCloseable is an object holding closeable resources, such as open files or streams.","title":"SuspendingCloseable"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-suspending-closeable/#functions","text":"Name Summary close [androidJvm] abstract suspend fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-suspending-closeable/#inheritors","text":"Name Fetcher Resource SearchIterator Archive Archive","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-suspending-closeable/close/","text":"// shared / org.readium.r2.shared.util / SuspendingCloseable / close close \u00b6 [androidJvm]\\ abstract suspend fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect.","title":"Close"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-suspending-closeable/close/#close","text":"[androidJvm]\\ abstract suspend fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect.","title":"close"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/","text":"// shared / org.readium.r2.shared.util / Try Try \u00b6 [androidJvm]\\ sealed class Try <out Success , out Failure : Throwable > A Result type which can be used as a return type. Types \u00b6 Name Summary Companion [androidJvm] object Companion Failure [androidJvm] class Failure <out S , out F : Throwable >(exception: F ) : Try < S , F > Success [androidJvm] class Success <out S , out F : Throwable >(value: S ) : Try < S , F > Functions \u00b6 Name Summary exceptionOrNull [androidJvm] abstract fun exceptionOrNull (): Failure ? Returns the encapsulated Throwable exception if this instance represents failure or null if it is success. fold [androidJvm] inline fun < R > fold (onSuccess: ( Success ) -> R , onFailure: (exception: Throwable ) -> R ): R Returns the result of onSuccess for the encapsulated value if this instance represents success or the result of onFailure function for the encapsulated Throwable exception if it is failure. getOrNull [androidJvm] abstract fun getOrNull (): Success ? Returns the encapsulated value if this instance represents success or null if it is failure. getOrThrow [androidJvm] abstract fun getOrThrow (): Success Returns the encapsulated value if this instance represents success or throws the encapsulated Throwable exception if it is failure. map [androidJvm] inline fun < R > map (transform: ( Success ) -> R ): Try < R , Failure > Returns the encapsulated result of the given transform function applied to the encapsulated value if this instance represents success or the original encapsulated Throwable exception if it is failure. mapFailure [androidJvm] inline fun < F : Throwable > mapFailure (transform: ( Failure ) -> F ): Try < Success , F > Returns the encapsulated result of the given transform function applied to the encapsulated failure if this instance represents failure or the original encapsulated success value if it is a success. onFailure [androidJvm] inline fun onFailure (action: ( Failure ) -> Unit ): Try < Success , Failure > Performs the given action on the encapsulated Throwable exception if this instance represents failure. Returns the original Try unchanged. onSuccess [androidJvm] inline fun onSuccess (action: ( Success ) -> Unit ): Try < Success , Failure > Performs the given action on the encapsulated value if this instance represents success. Returns the original Try unchanged. Properties \u00b6 Name Summary isFailure [androidJvm] abstract val isFailure : Boolean isSuccess [androidJvm] abstract val isSuccess : Boolean Inheritors \u00b6 Name Try Try Extensions \u00b6 Name Summary flatMap [androidJvm] inline fun < R , S , F : Throwable > Try < S , F >. flatMap (transform: ( S ) -> Try < R , F >): Try < R , F > getOrDefault [androidJvm] fun < R , S : R , F : Throwable > Try < S , F >. getOrDefault (defaultValue: R ): R Returns the encapsulated value if this instance represents success or the defaultValue if it is failure. getOrElse [androidJvm] inline fun < R , S : R , F : Throwable > Try < S , F >. getOrElse (onFailure: ( F ) -> R ): R Returns the encapsulated value if this instance represents success or the result of onFailure function for the encapsulated Throwable exception if it is failure. recover [androidJvm] inline fun < R , S : R , F : Throwable > Try < S , F >. recover (transform: ( F ) -> R ): Try < R , Nothing > Returns the encapsulated result of the given transform function applied to the encapsulated tryRecover [androidJvm] inline fun < R , S : R , F : Throwable > Try < S , F >. tryRecover (transform: ( F ) -> Try < R , F >): Try < R , F > Returns the encapsulated result of the given transform function applied to the encapsulated","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/#try","text":"[androidJvm]\\ sealed class Try <out Success , out Failure : Throwable > A Result type which can be used as a return type.","title":"Try"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/#types","text":"Name Summary Companion [androidJvm] object Companion Failure [androidJvm] class Failure <out S , out F : Throwable >(exception: F ) : Try < S , F > Success [androidJvm] class Success <out S , out F : Throwable >(value: S ) : Try < S , F >","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/#functions","text":"Name Summary exceptionOrNull [androidJvm] abstract fun exceptionOrNull (): Failure ? Returns the encapsulated Throwable exception if this instance represents failure or null if it is success. fold [androidJvm] inline fun < R > fold (onSuccess: ( Success ) -> R , onFailure: (exception: Throwable ) -> R ): R Returns the result of onSuccess for the encapsulated value if this instance represents success or the result of onFailure function for the encapsulated Throwable exception if it is failure. getOrNull [androidJvm] abstract fun getOrNull (): Success ? Returns the encapsulated value if this instance represents success or null if it is failure. getOrThrow [androidJvm] abstract fun getOrThrow (): Success Returns the encapsulated value if this instance represents success or throws the encapsulated Throwable exception if it is failure. map [androidJvm] inline fun < R > map (transform: ( Success ) -> R ): Try < R , Failure > Returns the encapsulated result of the given transform function applied to the encapsulated value if this instance represents success or the original encapsulated Throwable exception if it is failure. mapFailure [androidJvm] inline fun < F : Throwable > mapFailure (transform: ( Failure ) -> F ): Try < Success , F > Returns the encapsulated result of the given transform function applied to the encapsulated failure if this instance represents failure or the original encapsulated success value if it is a success. onFailure [androidJvm] inline fun onFailure (action: ( Failure ) -> Unit ): Try < Success , Failure > Performs the given action on the encapsulated Throwable exception if this instance represents failure. Returns the original Try unchanged. onSuccess [androidJvm] inline fun onSuccess (action: ( Success ) -> Unit ): Try < Success , Failure > Performs the given action on the encapsulated value if this instance represents success. Returns the original Try unchanged.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/#properties","text":"Name Summary isFailure [androidJvm] abstract val isFailure : Boolean isSuccess [androidJvm] abstract val isSuccess : Boolean","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/#inheritors","text":"Name Try Try","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/#extensions","text":"Name Summary flatMap [androidJvm] inline fun < R , S , F : Throwable > Try < S , F >. flatMap (transform: ( S ) -> Try < R , F >): Try < R , F > getOrDefault [androidJvm] fun < R , S : R , F : Throwable > Try < S , F >. getOrDefault (defaultValue: R ): R Returns the encapsulated value if this instance represents success or the defaultValue if it is failure. getOrElse [androidJvm] inline fun < R , S : R , F : Throwable > Try < S , F >. getOrElse (onFailure: ( F ) -> R ): R Returns the encapsulated value if this instance represents success or the result of onFailure function for the encapsulated Throwable exception if it is failure. recover [androidJvm] inline fun < R , S : R , F : Throwable > Try < S , F >. recover (transform: ( F ) -> R ): Try < R , Nothing > Returns the encapsulated result of the given transform function applied to the encapsulated tryRecover [androidJvm] inline fun < R , S : R , F : Throwable > Try < S , F >. tryRecover (transform: ( F ) -> Try < R , F >): Try < R , F > Returns the encapsulated result of the given transform function applied to the encapsulated","title":"Extensions"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/exception-or-null/","text":"// shared / org.readium.r2.shared.util / Try / exceptionOrNull exceptionOrNull \u00b6 [androidJvm]\\ abstract fun exceptionOrNull (): Failure ? Returns the encapsulated Throwable exception if this instance represents failure or null if it is success.","title":"Exception or null"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/exception-or-null/#exceptionornull","text":"[androidJvm]\\ abstract fun exceptionOrNull (): Failure ? Returns the encapsulated Throwable exception if this instance represents failure or null if it is success.","title":"exceptionOrNull"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/fold/","text":"// shared / org.readium.r2.shared.util / Try / fold fold \u00b6 [androidJvm]\\ inline fun < R > fold (onSuccess: ( Success ) -> R , onFailure: (exception: Throwable ) -> R ): R Returns the result of onSuccess for the encapsulated value if this instance represents success or the result of onFailure function for the encapsulated Throwable exception if it is failure.","title":"Fold"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/fold/#fold","text":"[androidJvm]\\ inline fun < R > fold (onSuccess: ( Success ) -> R , onFailure: (exception: Throwable ) -> R ): R Returns the result of onSuccess for the encapsulated value if this instance represents success or the result of onFailure function for the encapsulated Throwable exception if it is failure.","title":"fold"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/get-or-null/","text":"// shared / org.readium.r2.shared.util / Try / getOrNull getOrNull \u00b6 [androidJvm]\\ abstract fun getOrNull (): Success ? Returns the encapsulated value if this instance represents success or null if it is failure.","title":"Get or null"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/get-or-null/#getornull","text":"[androidJvm]\\ abstract fun getOrNull (): Success ? Returns the encapsulated value if this instance represents success or null if it is failure.","title":"getOrNull"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/get-or-throw/","text":"// shared / org.readium.r2.shared.util / Try / getOrThrow getOrThrow \u00b6 [androidJvm]\\ abstract fun getOrThrow (): Success Returns the encapsulated value if this instance represents success or throws the encapsulated Throwable exception if it is failure.","title":"Get or throw"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/get-or-throw/#getorthrow","text":"[androidJvm]\\ abstract fun getOrThrow (): Success Returns the encapsulated value if this instance represents success or throws the encapsulated Throwable exception if it is failure.","title":"getOrThrow"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/is-failure/","text":"// shared / org.readium.r2.shared.util / Try / isFailure isFailure \u00b6 [androidJvm]\\ abstract val isFailure : Boolean","title":"Is failure"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/is-failure/#isfailure","text":"[androidJvm]\\ abstract val isFailure : Boolean","title":"isFailure"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/is-success/","text":"// shared / org.readium.r2.shared.util / Try / isSuccess isSuccess \u00b6 [androidJvm]\\ abstract val isSuccess : Boolean","title":"Is success"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/is-success/#issuccess","text":"[androidJvm]\\ abstract val isSuccess : Boolean","title":"isSuccess"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/map-failure/","text":"// shared / org.readium.r2.shared.util / Try / mapFailure mapFailure \u00b6 [androidJvm]\\ inline fun < F : Throwable > mapFailure (transform: ( Failure ) -> F ): Try < Success , F > Returns the encapsulated result of the given transform function applied to the encapsulated failure if this instance represents failure or the original encapsulated success value if it is a success.","title":"Map failure"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/map-failure/#mapfailure","text":"[androidJvm]\\ inline fun < F : Throwable > mapFailure (transform: ( Failure ) -> F ): Try < Success , F > Returns the encapsulated result of the given transform function applied to the encapsulated failure if this instance represents failure or the original encapsulated success value if it is a success.","title":"mapFailure"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/map/","text":"// shared / org.readium.r2.shared.util / Try / map map \u00b6 [androidJvm]\\ inline fun < R > map (transform: ( Success ) -> R ): Try < R , Failure > Returns the encapsulated result of the given transform function applied to the encapsulated value if this instance represents success or the original encapsulated Throwable exception if it is failure.","title":"Map"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/map/#map","text":"[androidJvm]\\ inline fun < R > map (transform: ( Success ) -> R ): Try < R , Failure > Returns the encapsulated result of the given transform function applied to the encapsulated value if this instance represents success or the original encapsulated Throwable exception if it is failure.","title":"map"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/on-failure/","text":"// shared / org.readium.r2.shared.util / Try / onFailure onFailure \u00b6 [androidJvm]\\ inline fun onFailure (action: ( Failure ) -> Unit ): Try < Success , Failure > Performs the given action on the encapsulated Throwable exception if this instance represents failure. Returns the original Try unchanged.","title":"On failure"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/on-failure/#onfailure","text":"[androidJvm]\\ inline fun onFailure (action: ( Failure ) -> Unit ): Try < Success , Failure > Performs the given action on the encapsulated Throwable exception if this instance represents failure. Returns the original Try unchanged.","title":"onFailure"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/on-success/","text":"// shared / org.readium.r2.shared.util / Try / onSuccess onSuccess \u00b6 [androidJvm]\\ inline fun onSuccess (action: ( Success ) -> Unit ): Try < Success , Failure > Performs the given action on the encapsulated value if this instance represents success. Returns the original Try unchanged.","title":"On success"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/on-success/#onsuccess","text":"[androidJvm]\\ inline fun onSuccess (action: ( Success ) -> Unit ): Try < Success , Failure > Performs the given action on the encapsulated value if this instance represents success. Returns the original Try unchanged.","title":"onSuccess"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-companion/","text":"// shared / org.readium.r2.shared.util / Try / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary failure [androidJvm] fun < Failure : Throwable > failure (failure: Failure ): Try < Nothing , Failure > Returns the encapsulated Throwable exception if this instance represents failure or null if it is success. success [androidJvm] fun < Success > success (success: Success ): Try < Success , Nothing > Returns an instance that encapsulates the given value as successful value.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-companion/#functions","text":"Name Summary failure [androidJvm] fun < Failure : Throwable > failure (failure: Failure ): Try < Nothing , Failure > Returns the encapsulated Throwable exception if this instance represents failure or null if it is success. success [androidJvm] fun < Success > success (success: Success ): Try < Success , Nothing > Returns an instance that encapsulates the given value as successful value.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-companion/failure/","text":"// shared / org.readium.r2.shared.util / Try / Companion / failure failure \u00b6 [androidJvm]\\ fun < Failure : Throwable > failure (failure: Failure ): Try < Nothing , Failure > Returns the encapsulated Throwable exception if this instance represents failure or null if it is success.","title":"Failure"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-companion/failure/#failure","text":"[androidJvm]\\ fun < Failure : Throwable > failure (failure: Failure ): Try < Nothing , Failure > Returns the encapsulated Throwable exception if this instance represents failure or null if it is success.","title":"failure"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-companion/success/","text":"// shared / org.readium.r2.shared.util / Try / Companion / success success \u00b6 [androidJvm]\\ fun < Success > success (success: Success ): Try < Success , Nothing > Returns an instance that encapsulates the given value as successful value.","title":"Success"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-companion/success/#success","text":"[androidJvm]\\ fun < Success > success (success: Success ): Try < Success , Nothing > Returns an instance that encapsulates the given value as successful value.","title":"success"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-failure/","text":"// shared / org.readium.r2.shared.util / Try / Failure Failure \u00b6 [androidJvm]\\ class Failure <out S , out F : Throwable >(exception: F ) : Try < S , F > Functions \u00b6 Name Summary exceptionOrNull [androidJvm] open override fun exceptionOrNull (): F ? Returns the encapsulated Throwable exception if this instance represents failure or null if it is success. fold [androidJvm] inline fun < R > fold (onSuccess: ( S ) -> R , onFailure: (exception: Throwable ) -> R ): R Returns the result of onSuccess for the encapsulated value if this instance represents success or the result of onFailure function for the encapsulated Throwable exception if it is failure. getOrNull [androidJvm] open override fun getOrNull (): S ? Returns the encapsulated value if this instance represents success or null if it is failure. getOrThrow [androidJvm] open override fun getOrThrow (): S Returns the encapsulated value if this instance represents success or throws the encapsulated Throwable exception if it is failure. map [androidJvm] inline fun < R > map (transform: ( S ) -> R ): Try < R , F > Returns the encapsulated result of the given transform function applied to the encapsulated value if this instance represents success or the original encapsulated Throwable exception if it is failure. mapFailure [androidJvm] inline fun < F : Throwable > mapFailure (transform: ( F ) -> F ): Try < S , F > Returns the encapsulated result of the given transform function applied to the encapsulated failure if this instance represents failure or the original encapsulated success value if it is a success. onFailure [androidJvm] inline fun onFailure (action: ( F ) -> Unit ): Try < S , F > Performs the given action on the encapsulated Throwable exception if this instance represents failure. Returns the original Try unchanged. onSuccess [androidJvm] inline fun onSuccess (action: ( S ) -> Unit ): Try < S , F > Performs the given action on the encapsulated value if this instance represents success. Returns the original Try unchanged. Properties \u00b6 Name Summary exception [androidJvm] val exception : F isFailure [androidJvm] open override val isFailure : Boolean isSuccess [androidJvm] open override val isSuccess : Boolean","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-failure/#failure","text":"[androidJvm]\\ class Failure <out S , out F : Throwable >(exception: F ) : Try < S , F >","title":"Failure"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-failure/#functions","text":"Name Summary exceptionOrNull [androidJvm] open override fun exceptionOrNull (): F ? Returns the encapsulated Throwable exception if this instance represents failure or null if it is success. fold [androidJvm] inline fun < R > fold (onSuccess: ( S ) -> R , onFailure: (exception: Throwable ) -> R ): R Returns the result of onSuccess for the encapsulated value if this instance represents success or the result of onFailure function for the encapsulated Throwable exception if it is failure. getOrNull [androidJvm] open override fun getOrNull (): S ? Returns the encapsulated value if this instance represents success or null if it is failure. getOrThrow [androidJvm] open override fun getOrThrow (): S Returns the encapsulated value if this instance represents success or throws the encapsulated Throwable exception if it is failure. map [androidJvm] inline fun < R > map (transform: ( S ) -> R ): Try < R , F > Returns the encapsulated result of the given transform function applied to the encapsulated value if this instance represents success or the original encapsulated Throwable exception if it is failure. mapFailure [androidJvm] inline fun < F : Throwable > mapFailure (transform: ( F ) -> F ): Try < S , F > Returns the encapsulated result of the given transform function applied to the encapsulated failure if this instance represents failure or the original encapsulated success value if it is a success. onFailure [androidJvm] inline fun onFailure (action: ( F ) -> Unit ): Try < S , F > Performs the given action on the encapsulated Throwable exception if this instance represents failure. Returns the original Try unchanged. onSuccess [androidJvm] inline fun onSuccess (action: ( S ) -> Unit ): Try < S , F > Performs the given action on the encapsulated value if this instance represents success. Returns the original Try unchanged.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-failure/#properties","text":"Name Summary exception [androidJvm] val exception : F isFailure [androidJvm] open override val isFailure : Boolean isSuccess [androidJvm] open override val isSuccess : Boolean","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-failure/-failure/","text":"// shared / org.readium.r2.shared.util / Try / Failure / Failure Failure \u00b6 [androidJvm]\\ fun <out F : Throwable > Failure (exception: F )","title":" failure"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-failure/-failure/#failure","text":"[androidJvm]\\ fun <out F : Throwable > Failure (exception: F )","title":"Failure"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-failure/exception-or-null/","text":"// shared / org.readium.r2.shared.util / Try / Failure / exceptionOrNull exceptionOrNull \u00b6 [androidJvm]\\ open override fun exceptionOrNull (): F ? Returns the encapsulated Throwable exception if this instance represents failure or null if it is success.","title":"Exception or null"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-failure/exception-or-null/#exceptionornull","text":"[androidJvm]\\ open override fun exceptionOrNull (): F ? Returns the encapsulated Throwable exception if this instance represents failure or null if it is success.","title":"exceptionOrNull"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-failure/exception/","text":"// shared / org.readium.r2.shared.util / Try / Failure / exception exception \u00b6 [androidJvm]\\ val exception : F","title":"Exception"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-failure/exception/#exception","text":"[androidJvm]\\ val exception : F","title":"exception"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-failure/get-or-null/","text":"// shared / org.readium.r2.shared.util / Try / Failure / getOrNull getOrNull \u00b6 [androidJvm]\\ open override fun getOrNull (): S ? Returns the encapsulated value if this instance represents success or null if it is failure.","title":"Get or null"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-failure/get-or-null/#getornull","text":"[androidJvm]\\ open override fun getOrNull (): S ? Returns the encapsulated value if this instance represents success or null if it is failure.","title":"getOrNull"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-failure/get-or-throw/","text":"// shared / org.readium.r2.shared.util / Try / Failure / getOrThrow getOrThrow \u00b6 [androidJvm]\\ open override fun getOrThrow (): S Returns the encapsulated value if this instance represents success or throws the encapsulated Throwable exception if it is failure.","title":"Get or throw"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-failure/get-or-throw/#getorthrow","text":"[androidJvm]\\ open override fun getOrThrow (): S Returns the encapsulated value if this instance represents success or throws the encapsulated Throwable exception if it is failure.","title":"getOrThrow"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-failure/is-failure/","text":"// shared / org.readium.r2.shared.util / Try / Failure / isFailure isFailure \u00b6 [androidJvm]\\ open override val isFailure : Boolean","title":"Is failure"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-failure/is-failure/#isfailure","text":"[androidJvm]\\ open override val isFailure : Boolean","title":"isFailure"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-failure/is-success/","text":"// shared / org.readium.r2.shared.util / Try / Failure / isSuccess isSuccess \u00b6 [androidJvm]\\ open override val isSuccess : Boolean","title":"Is success"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-failure/is-success/#issuccess","text":"[androidJvm]\\ open override val isSuccess : Boolean","title":"isSuccess"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-success/","text":"// shared / org.readium.r2.shared.util / Try / Success Success \u00b6 [androidJvm]\\ class Success <out S , out F : Throwable >(value: S ) : Try < S , F > Functions \u00b6 Name Summary exceptionOrNull [androidJvm] open override fun exceptionOrNull (): F ? Returns the encapsulated Throwable exception if this instance represents failure or null if it is success. fold [androidJvm] inline fun < R > fold (onSuccess: ( S ) -> R , onFailure: (exception: Throwable ) -> R ): R Returns the result of onSuccess for the encapsulated value if this instance represents success or the result of onFailure function for the encapsulated Throwable exception if it is failure. getOrNull [androidJvm] open override fun getOrNull (): S ? Returns the encapsulated value if this instance represents success or null if it is failure. getOrThrow [androidJvm] open override fun getOrThrow (): S Returns the encapsulated value if this instance represents success or throws the encapsulated Throwable exception if it is failure. map [androidJvm] inline fun < R > map (transform: ( S ) -> R ): Try < R , F > Returns the encapsulated result of the given transform function applied to the encapsulated value if this instance represents success or the original encapsulated Throwable exception if it is failure. mapFailure [androidJvm] inline fun < F : Throwable > mapFailure (transform: ( F ) -> F ): Try < S , F > Returns the encapsulated result of the given transform function applied to the encapsulated failure if this instance represents failure or the original encapsulated success value if it is a success. onFailure [androidJvm] inline fun onFailure (action: ( F ) -> Unit ): Try < S , F > Performs the given action on the encapsulated Throwable exception if this instance represents failure. Returns the original Try unchanged. onSuccess [androidJvm] inline fun onSuccess (action: ( S ) -> Unit ): Try < S , F > Performs the given action on the encapsulated value if this instance represents success. Returns the original Try unchanged. Properties \u00b6 Name Summary isFailure [androidJvm] open override val isFailure : Boolean isSuccess [androidJvm] open override val isSuccess : Boolean value [androidJvm] val value : S","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-success/#success","text":"[androidJvm]\\ class Success <out S , out F : Throwable >(value: S ) : Try < S , F >","title":"Success"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-success/#functions","text":"Name Summary exceptionOrNull [androidJvm] open override fun exceptionOrNull (): F ? Returns the encapsulated Throwable exception if this instance represents failure or null if it is success. fold [androidJvm] inline fun < R > fold (onSuccess: ( S ) -> R , onFailure: (exception: Throwable ) -> R ): R Returns the result of onSuccess for the encapsulated value if this instance represents success or the result of onFailure function for the encapsulated Throwable exception if it is failure. getOrNull [androidJvm] open override fun getOrNull (): S ? Returns the encapsulated value if this instance represents success or null if it is failure. getOrThrow [androidJvm] open override fun getOrThrow (): S Returns the encapsulated value if this instance represents success or throws the encapsulated Throwable exception if it is failure. map [androidJvm] inline fun < R > map (transform: ( S ) -> R ): Try < R , F > Returns the encapsulated result of the given transform function applied to the encapsulated value if this instance represents success or the original encapsulated Throwable exception if it is failure. mapFailure [androidJvm] inline fun < F : Throwable > mapFailure (transform: ( F ) -> F ): Try < S , F > Returns the encapsulated result of the given transform function applied to the encapsulated failure if this instance represents failure or the original encapsulated success value if it is a success. onFailure [androidJvm] inline fun onFailure (action: ( F ) -> Unit ): Try < S , F > Performs the given action on the encapsulated Throwable exception if this instance represents failure. Returns the original Try unchanged. onSuccess [androidJvm] inline fun onSuccess (action: ( S ) -> Unit ): Try < S , F > Performs the given action on the encapsulated value if this instance represents success. Returns the original Try unchanged.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-success/#properties","text":"Name Summary isFailure [androidJvm] open override val isFailure : Boolean isSuccess [androidJvm] open override val isSuccess : Boolean value [androidJvm] val value : S","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-success/-success/","text":"// shared / org.readium.r2.shared.util / Try / Success / Success Success \u00b6 [androidJvm]\\ fun <out S > Success (value: S )","title":" success"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-success/-success/#success","text":"[androidJvm]\\ fun <out S > Success (value: S )","title":"Success"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-success/exception-or-null/","text":"// shared / org.readium.r2.shared.util / Try / Success / exceptionOrNull exceptionOrNull \u00b6 [androidJvm]\\ open override fun exceptionOrNull (): F ? Returns the encapsulated Throwable exception if this instance represents failure or null if it is success.","title":"Exception or null"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-success/exception-or-null/#exceptionornull","text":"[androidJvm]\\ open override fun exceptionOrNull (): F ? Returns the encapsulated Throwable exception if this instance represents failure or null if it is success.","title":"exceptionOrNull"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-success/get-or-null/","text":"// shared / org.readium.r2.shared.util / Try / Success / getOrNull getOrNull \u00b6 [androidJvm]\\ open override fun getOrNull (): S ? Returns the encapsulated value if this instance represents success or null if it is failure.","title":"Get or null"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-success/get-or-null/#getornull","text":"[androidJvm]\\ open override fun getOrNull (): S ? Returns the encapsulated value if this instance represents success or null if it is failure.","title":"getOrNull"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-success/get-or-throw/","text":"// shared / org.readium.r2.shared.util / Try / Success / getOrThrow getOrThrow \u00b6 [androidJvm]\\ open override fun getOrThrow (): S Returns the encapsulated value if this instance represents success or throws the encapsulated Throwable exception if it is failure.","title":"Get or throw"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-success/get-or-throw/#getorthrow","text":"[androidJvm]\\ open override fun getOrThrow (): S Returns the encapsulated value if this instance represents success or throws the encapsulated Throwable exception if it is failure.","title":"getOrThrow"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-success/is-failure/","text":"// shared / org.readium.r2.shared.util / Try / Success / isFailure isFailure \u00b6 [androidJvm]\\ open override val isFailure : Boolean","title":"Is failure"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-success/is-failure/#isfailure","text":"[androidJvm]\\ open override val isFailure : Boolean","title":"isFailure"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-success/is-success/","text":"// shared / org.readium.r2.shared.util / Try / Success / isSuccess isSuccess \u00b6 [androidJvm]\\ open override val isSuccess : Boolean","title":"Is success"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-success/is-success/#issuccess","text":"[androidJvm]\\ open override val isSuccess : Boolean","title":"isSuccess"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-success/value/","text":"// shared / org.readium.r2.shared.util / Try / Success / value value \u00b6 [androidJvm]\\ val value : S","title":"Value"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-try/-success/value/#value","text":"[androidJvm]\\ val value : S","title":"value"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-u-r-i-template/","text":"// shared / org.readium.r2.shared.util / URITemplate URITemplate \u00b6 [androidJvm]\\ data class URITemplate (uri: String ) A lightweight implementation of URI Template (RFC 6570). Only handles simple cases, fitting Readium's use cases. See https://tools.ietf.org/html/rfc6570 Constructors \u00b6 URITemplate [androidJvm] fun URITemplate (uri: String ) Functions \u00b6 Name Summary expand [androidJvm] fun expand (parameters: Map < String , String >): String Expands the HREF by replacing URI template variables by the given parameters. Properties \u00b6 Name Summary parameters [androidJvm] val parameters : List < String > List of URI template parameter keys, if the Link is templated. uri [androidJvm] val uri : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-u-r-i-template/#uritemplate","text":"[androidJvm]\\ data class URITemplate (uri: String ) A lightweight implementation of URI Template (RFC 6570). Only handles simple cases, fitting Readium's use cases. See https://tools.ietf.org/html/rfc6570","title":"URITemplate"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-u-r-i-template/#constructors","text":"URITemplate [androidJvm] fun URITemplate (uri: String )","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-u-r-i-template/#functions","text":"Name Summary expand [androidJvm] fun expand (parameters: Map < String , String >): String Expands the HREF by replacing URI template variables by the given parameters.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-u-r-i-template/#properties","text":"Name Summary parameters [androidJvm] val parameters : List < String > List of URI template parameter keys, if the Link is templated. uri [androidJvm] val uri : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-u-r-i-template/-u-r-i-template/","text":"// shared / org.readium.r2.shared.util / URITemplate / URITemplate URITemplate \u00b6 [androidJvm]\\ fun URITemplate (uri: String )","title":" u r i template"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-u-r-i-template/-u-r-i-template/#uritemplate","text":"[androidJvm]\\ fun URITemplate (uri: String )","title":"URITemplate"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-u-r-i-template/expand/","text":"// shared / org.readium.r2.shared.util / URITemplate / expand expand \u00b6 [androidJvm]\\ fun expand (parameters: Map < String , String >): String Expands the HREF by replacing URI template variables by the given parameters.","title":"Expand"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-u-r-i-template/expand/#expand","text":"[androidJvm]\\ fun expand (parameters: Map < String , String >): String Expands the HREF by replacing URI template variables by the given parameters.","title":"expand"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-u-r-i-template/parameters/","text":"// shared / org.readium.r2.shared.util / URITemplate / parameters parameters \u00b6 [androidJvm]\\ val parameters : List < String > List of URI template parameter keys, if the Link is templated.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-u-r-i-template/parameters/#parameters","text":"[androidJvm]\\ val parameters : List < String > List of URI template parameter keys, if the Link is templated.","title":"parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-u-r-i-template/uri/","text":"// shared / org.readium.r2.shared.util / URITemplate / uri uri \u00b6 [androidJvm]\\ val uri : String","title":"Uri"},{"location":"readium/shared/shared/org.readium.r2.shared.util/-u-r-i-template/uri/#uri","text":"[androidJvm]\\ val uri : String","title":"uri"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/","text":"// shared / org.readium.r2.shared.util.archive Package org.readium.r2.shared.util.archive \u00b6 Types \u00b6 Name Summary Archive [androidJvm] interface Archive : SuspendingCloseable Represents an immutable archive. ArchiveFactory [androidJvm] interface ArchiveFactory DefaultArchiveFactory [androidJvm] class DefaultArchiveFactory : ArchiveFactory","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/#package-orgreadiumr2sharedutilarchive","text":"","title":"Package org.readium.r2.shared.util.archive"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/#types","text":"Name Summary Archive [androidJvm] interface Archive : SuspendingCloseable Represents an immutable archive. ArchiveFactory [androidJvm] interface ArchiveFactory DefaultArchiveFactory [androidJvm] class DefaultArchiveFactory : ArchiveFactory","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-archive/","text":"// shared / org.readium.r2.shared.util.archive / Archive Archive \u00b6 [androidJvm]\\ interface Archive : SuspendingCloseable Represents an immutable archive. Types \u00b6 Name Summary Entry [androidJvm] interface Entry : SuspendingCloseable Holds an archive entry's metadata. Functions \u00b6 Name Summary close [androidJvm] abstract suspend fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. entries [androidJvm] abstract suspend fun entries (): List < Archive.Entry > List of all the archived file entries. entry [androidJvm] abstract suspend fun entry (path: String ): Archive.Entry Gets the entry at the given path.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-archive/#archive","text":"[androidJvm]\\ interface Archive : SuspendingCloseable Represents an immutable archive.","title":"Archive"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-archive/#types","text":"Name Summary Entry [androidJvm] interface Entry : SuspendingCloseable Holds an archive entry's metadata.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-archive/#functions","text":"Name Summary close [androidJvm] abstract suspend fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. entries [androidJvm] abstract suspend fun entries (): List < Archive.Entry > List of all the archived file entries. entry [androidJvm] abstract suspend fun entry (path: String ): Archive.Entry Gets the entry at the given path.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-archive/entries/","text":"// shared / org.readium.r2.shared.util.archive / Archive / entries entries \u00b6 [androidJvm]\\ abstract suspend fun entries (): List < Archive.Entry > List of all the archived file entries.","title":"Entries"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-archive/entries/#entries","text":"[androidJvm]\\ abstract suspend fun entries (): List < Archive.Entry > List of all the archived file entries.","title":"entries"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-archive/entry/","text":"// shared / org.readium.r2.shared.util.archive / Archive / entry entry \u00b6 [androidJvm]\\ abstract suspend fun entry (path: String ): Archive.Entry Gets the entry at the given path.","title":"Entry"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-archive/entry/#entry","text":"[androidJvm]\\ abstract suspend fun entry (path: String ): Archive.Entry Gets the entry at the given path.","title":"entry"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-archive/-entry/","text":"// shared / org.readium.r2.shared.util.archive / Archive / Entry Entry \u00b6 [androidJvm]\\ interface Entry : SuspendingCloseable Holds an archive entry's metadata. Functions \u00b6 Name Summary close [androidJvm] abstract suspend fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. read [androidJvm] abstract suspend fun read (range: LongRange ? = null): ByteArray Reads the whole content of this entry. When range is null, the whole content is returned. Out-of-range indexes are clamped to the available length automatically. Properties \u00b6 Name Summary compressedLength [androidJvm] abstract val compressedLength : Long ? Compressed data length. length [androidJvm] abstract val length : Long ? Uncompressed data length. path [androidJvm] abstract val path : String Absolute path to the entry in the archive. It MUST start with /.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-archive/-entry/#entry","text":"[androidJvm]\\ interface Entry : SuspendingCloseable Holds an archive entry's metadata.","title":"Entry"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-archive/-entry/#functions","text":"Name Summary close [androidJvm] abstract suspend fun close () Closes this object and releases any resources associated with it. If the object is already closed then invoking this method has no effect. read [androidJvm] abstract suspend fun read (range: LongRange ? = null): ByteArray Reads the whole content of this entry. When range is null, the whole content is returned. Out-of-range indexes are clamped to the available length automatically.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-archive/-entry/#properties","text":"Name Summary compressedLength [androidJvm] abstract val compressedLength : Long ? Compressed data length. length [androidJvm] abstract val length : Long ? Uncompressed data length. path [androidJvm] abstract val path : String Absolute path to the entry in the archive. It MUST start with /.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-archive/-entry/compressed-length/","text":"// shared / org.readium.r2.shared.util.archive / Archive / Entry / compressedLength compressedLength \u00b6 [androidJvm]\\ abstract val compressedLength : Long ? Compressed data length.","title":"Compressed length"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-archive/-entry/compressed-length/#compressedlength","text":"[androidJvm]\\ abstract val compressedLength : Long ? Compressed data length.","title":"compressedLength"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-archive/-entry/length/","text":"// shared / org.readium.r2.shared.util.archive / Archive / Entry / length length \u00b6 [androidJvm]\\ abstract val length : Long ? Uncompressed data length.","title":"Length"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-archive/-entry/length/#length","text":"[androidJvm]\\ abstract val length : Long ? Uncompressed data length.","title":"length"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-archive/-entry/path/","text":"// shared / org.readium.r2.shared.util.archive / Archive / Entry / path path \u00b6 [androidJvm]\\ abstract val path : String Absolute path to the entry in the archive. It MUST start with /.","title":"Path"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-archive/-entry/path/#path","text":"[androidJvm]\\ abstract val path : String Absolute path to the entry in the archive. It MUST start with /.","title":"path"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-archive/-entry/read/","text":"// shared / org.readium.r2.shared.util.archive / Archive / Entry / read read \u00b6 [androidJvm]\\ abstract suspend fun read (range: LongRange ? = null): ByteArray Reads the whole content of this entry. When range is null, the whole content is returned. Out-of-range indexes are clamped to the available length automatically.","title":"Read"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-archive/-entry/read/#read","text":"[androidJvm]\\ abstract suspend fun read (range: LongRange ? = null): ByteArray Reads the whole content of this entry. When range is null, the whole content is returned. Out-of-range indexes are clamped to the available length automatically.","title":"read"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-archive-factory/","text":"// shared / org.readium.r2.shared.util.archive / ArchiveFactory ArchiveFactory \u00b6 [androidJvm]\\ interface ArchiveFactory Functions \u00b6 Name Summary open [androidJvm] abstract suspend fun open (file: File , password: String ?): Archive Opens an archive from a local file . Inheritors \u00b6 Name DefaultArchiveFactory","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-archive-factory/#archivefactory","text":"[androidJvm]\\ interface ArchiveFactory","title":"ArchiveFactory"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-archive-factory/#functions","text":"Name Summary open [androidJvm] abstract suspend fun open (file: File , password: String ?): Archive Opens an archive from a local file .","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-archive-factory/#inheritors","text":"Name DefaultArchiveFactory","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-archive-factory/open/","text":"// shared / org.readium.r2.shared.util.archive / ArchiveFactory / open open \u00b6 [androidJvm]\\ abstract suspend fun open (file: File , password: String ?): Archive Opens an archive from a local file .","title":"Open"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-archive-factory/open/#open","text":"[androidJvm]\\ abstract suspend fun open (file: File , password: String ?): Archive Opens an archive from a local file .","title":"open"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-default-archive-factory/","text":"// shared / org.readium.r2.shared.util.archive / DefaultArchiveFactory DefaultArchiveFactory \u00b6 [androidJvm]\\ class DefaultArchiveFactory : ArchiveFactory Functions \u00b6 Name Summary open [androidJvm] open suspend override fun open (file: File , password: String ?): Archive Opens a ZIP or exploded archive.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-default-archive-factory/#defaultarchivefactory","text":"[androidJvm]\\ class DefaultArchiveFactory : ArchiveFactory","title":"DefaultArchiveFactory"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-default-archive-factory/#functions","text":"Name Summary open [androidJvm] open suspend override fun open (file: File , password: String ?): Archive Opens a ZIP or exploded archive.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-default-archive-factory/-default-archive-factory/","text":"// shared / org.readium.r2.shared.util.archive / DefaultArchiveFactory / DefaultArchiveFactory DefaultArchiveFactory \u00b6 [androidJvm]\\ fun DefaultArchiveFactory ()","title":" default archive factory"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-default-archive-factory/-default-archive-factory/#defaultarchivefactory","text":"[androidJvm]\\ fun DefaultArchiveFactory ()","title":"DefaultArchiveFactory"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-default-archive-factory/open/","text":"// shared / org.readium.r2.shared.util.archive / DefaultArchiveFactory / open open \u00b6 [androidJvm]\\ open suspend override fun open (file: File , password: String ?): Archive Opens a ZIP or exploded archive.","title":"Open"},{"location":"readium/shared/shared/org.readium.r2.shared.util.archive/-default-archive-factory/open/#open","text":"[androidJvm]\\ open suspend override fun open (file: File , password: String ?): Archive Opens a ZIP or exploded archive.","title":"open"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/","text":"// shared / org.readium.r2.shared.util.http Package org.readium.r2.shared.util.http \u00b6 Types \u00b6 Name Summary DefaultHttpClient [androidJvm] class DefaultHttpClient (userAgent: String ?, additionalHeaders: Map < String , String >, connectTimeout: Duration ?, readTimeout: Duration ?, callback: DefaultHttpClient.Callback ?) : HttpClient An implementation of HttpClient using the native HttpURLConnection . HttpClient [androidJvm] interface HttpClient An HTTP client performs HTTP requests. HttpException [androidJvm] class HttpException (kind: HttpException.Kind , mediaType: MediaType ?, body: ByteArray ?, cause: Throwable ?) : UserException Represents an error occurring during an HTTP activity. HttpFetchResponse [androidJvm] class HttpFetchResponse (response: HttpResponse , body: ByteArray ) HttpRequest [androidJvm] class HttpRequest (url: String , method: HttpRequest.Method , headers: Map < String , String >, body: HttpRequest.Body ?, extras: Bundle , connectTimeout: Duration ?, readTimeout: Duration ?, allowUserInteraction: Boolean ) : Serializable Holds the information about an HTTP request performed by an HttpClient . HttpResponse [androidJvm] data class HttpResponse (url: String , statusCode: Int , headers: Map < String , List < String >>, mediaType: MediaType ) Represents a successful HTTP response received from a server. HttpStreamResponse [androidJvm] class HttpStreamResponse (response: HttpResponse , body: InputStream ) HttpTry [androidJvm] typealias HttpTry < SuccessT > = Try < SuccessT , HttpException > ProblemDetails [androidJvm] data class ProblemDetails (title: String , type: String ?, status: Int ?, detail: String ?, instance: String ?) : Parcelable Problem Details for HTTP APIs. Functions \u00b6 Name Summary fetchJSONObject [androidJvm] suspend fun HttpClient . fetchJSONObject (request: HttpRequest ): HttpTry < JSONObject > Fetches the resource from the given request as a JSONObject . fetchString [androidJvm] suspend fun HttpClient . fetchString (request: HttpRequest , charset: Charset = Charsets.UTF_8): HttpTry < String > Fetches the resource from the given request as a String . fetchWithDecoder [androidJvm] suspend fun < T > HttpClient . fetchWithDecoder (request: HttpRequest , decoder: ( HttpFetchResponse ) -> T ): HttpTry < T > Fetches the resource from the given request before decoding it with the provided decoder . Properties \u00b6 Name Summary PROBLEM_DETAILS [androidJvm] val MediaType.Companion . PROBLEM_DETAILS : MediaType JSON Problem Details JSON object","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/#package-orgreadiumr2sharedutilhttp","text":"","title":"Package org.readium.r2.shared.util.http"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/#types","text":"Name Summary DefaultHttpClient [androidJvm] class DefaultHttpClient (userAgent: String ?, additionalHeaders: Map < String , String >, connectTimeout: Duration ?, readTimeout: Duration ?, callback: DefaultHttpClient.Callback ?) : HttpClient An implementation of HttpClient using the native HttpURLConnection . HttpClient [androidJvm] interface HttpClient An HTTP client performs HTTP requests. HttpException [androidJvm] class HttpException (kind: HttpException.Kind , mediaType: MediaType ?, body: ByteArray ?, cause: Throwable ?) : UserException Represents an error occurring during an HTTP activity. HttpFetchResponse [androidJvm] class HttpFetchResponse (response: HttpResponse , body: ByteArray ) HttpRequest [androidJvm] class HttpRequest (url: String , method: HttpRequest.Method , headers: Map < String , String >, body: HttpRequest.Body ?, extras: Bundle , connectTimeout: Duration ?, readTimeout: Duration ?, allowUserInteraction: Boolean ) : Serializable Holds the information about an HTTP request performed by an HttpClient . HttpResponse [androidJvm] data class HttpResponse (url: String , statusCode: Int , headers: Map < String , List < String >>, mediaType: MediaType ) Represents a successful HTTP response received from a server. HttpStreamResponse [androidJvm] class HttpStreamResponse (response: HttpResponse , body: InputStream ) HttpTry [androidJvm] typealias HttpTry < SuccessT > = Try < SuccessT , HttpException > ProblemDetails [androidJvm] data class ProblemDetails (title: String , type: String ?, status: Int ?, detail: String ?, instance: String ?) : Parcelable Problem Details for HTTP APIs.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/#functions","text":"Name Summary fetchJSONObject [androidJvm] suspend fun HttpClient . fetchJSONObject (request: HttpRequest ): HttpTry < JSONObject > Fetches the resource from the given request as a JSONObject . fetchString [androidJvm] suspend fun HttpClient . fetchString (request: HttpRequest , charset: Charset = Charsets.UTF_8): HttpTry < String > Fetches the resource from the given request as a String . fetchWithDecoder [androidJvm] suspend fun < T > HttpClient . fetchWithDecoder (request: HttpRequest , decoder: ( HttpFetchResponse ) -> T ): HttpTry < T > Fetches the resource from the given request before decoding it with the provided decoder .","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/#properties","text":"Name Summary PROBLEM_DETAILS [androidJvm] val MediaType.Companion . PROBLEM_DETAILS : MediaType JSON Problem Details JSON object","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-p-r-o-b-l-e-m_-d-e-t-a-i-l-s/","text":"// shared / org.readium.r2.shared.util.http / PROBLEM_DETAILS PROBLEM_DETAILS \u00b6 [androidJvm]\\ val MediaType.Companion . PROBLEM_DETAILS : MediaType JSON Problem Details JSON object","title":" p r o b l e m  d e t a i l s"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-p-r-o-b-l-e-m_-d-e-t-a-i-l-s/#problem_details","text":"[androidJvm]\\ val MediaType.Companion . PROBLEM_DETAILS : MediaType JSON Problem Details JSON object","title":"PROBLEM_DETAILS"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/fetch-j-s-o-n-object/","text":"// shared / org.readium.r2.shared.util.http / fetchJSONObject fetchJSONObject \u00b6 [androidJvm]\\ suspend fun HttpClient . fetchJSONObject (request: HttpRequest ): HttpTry < JSONObject > Fetches the resource from the given request as a JSONObject .","title":"Fetch j s o n object"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/fetch-j-s-o-n-object/#fetchjsonobject","text":"[androidJvm]\\ suspend fun HttpClient . fetchJSONObject (request: HttpRequest ): HttpTry < JSONObject > Fetches the resource from the given request as a JSONObject .","title":"fetchJSONObject"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/fetch-string/","text":"// shared / org.readium.r2.shared.util.http / fetchString fetchString \u00b6 [androidJvm]\\ suspend fun HttpClient . fetchString (request: HttpRequest , charset: Charset = Charsets.UTF_8): HttpTry < String > Fetches the resource from the given request as a String .","title":"Fetch string"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/fetch-string/#fetchstring","text":"[androidJvm]\\ suspend fun HttpClient . fetchString (request: HttpRequest , charset: Charset = Charsets.UTF_8): HttpTry < String > Fetches the resource from the given request as a String .","title":"fetchString"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/fetch-with-decoder/","text":"// shared / org.readium.r2.shared.util.http / fetchWithDecoder fetchWithDecoder \u00b6 [androidJvm]\\ suspend fun < T > HttpClient . fetchWithDecoder (request: HttpRequest , decoder: ( HttpFetchResponse ) -> T ): HttpTry < T > Fetches the resource from the given request before decoding it with the provided decoder . If the decoder fails, a MalformedResponse error is returned.","title":"Fetch with decoder"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/fetch-with-decoder/#fetchwithdecoder","text":"[androidJvm]\\ suspend fun < T > HttpClient . fetchWithDecoder (request: HttpRequest , decoder: ( HttpFetchResponse ) -> T ): HttpTry < T > Fetches the resource from the given request before decoding it with the provided decoder . If the decoder fails, a MalformedResponse error is returned.","title":"fetchWithDecoder"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-default-http-client/","text":"// shared / org.readium.r2.shared.util.http / DefaultHttpClient DefaultHttpClient \u00b6 [androidJvm]\\ class DefaultHttpClient (userAgent: String ?, additionalHeaders: Map < String , String >, connectTimeout: Duration ?, readTimeout: Duration ?, callback: DefaultHttpClient.Callback ?) : HttpClient An implementation of HttpClient using the native HttpURLConnection . Parameters \u00b6 androidJvm userAgent Custom user agent to use for requests. additionalHeaders A dictionary of additional headers to send with requests. connectTimeout Timeout used when establishing a connection to the resource. A null timeout is interpreted as the default value, while a timeout of zero as an infinite timeout. readTimeout Timeout used when reading the input stream. A null timeout is interpreted as the default value, while a timeout of zero as an infinite timeout. Constructors \u00b6 DefaultHttpClient [androidJvm] fun DefaultHttpClient (userAgent: String ? = null, additionalHeaders: Map < String , String > = mapOf(), connectTimeout: Duration ? = null, readTimeout: Duration ? = null, callback: DefaultHttpClient.Callback ? = null) Types \u00b6 Name Summary Callback [androidJvm] interface Callback Callbacks allowing to override some behavior of the DefaultHttpClient . Functions \u00b6 Name Summary fetch [androidJvm] open suspend fun fetch (request: HttpRequest ): HttpTry < HttpFetchResponse > Fetches the resource from the given request . stream [androidJvm] open suspend override fun stream (request: HttpRequest ): HttpTry < HttpStreamResponse > Streams the resource from the given request . Properties \u00b6 Name Summary callback [androidJvm] var callback : DefaultHttpClient.Callback ? = null","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-default-http-client/#defaulthttpclient","text":"[androidJvm]\\ class DefaultHttpClient (userAgent: String ?, additionalHeaders: Map < String , String >, connectTimeout: Duration ?, readTimeout: Duration ?, callback: DefaultHttpClient.Callback ?) : HttpClient An implementation of HttpClient using the native HttpURLConnection .","title":"DefaultHttpClient"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-default-http-client/#parameters","text":"androidJvm userAgent Custom user agent to use for requests. additionalHeaders A dictionary of additional headers to send with requests. connectTimeout Timeout used when establishing a connection to the resource. A null timeout is interpreted as the default value, while a timeout of zero as an infinite timeout. readTimeout Timeout used when reading the input stream. A null timeout is interpreted as the default value, while a timeout of zero as an infinite timeout.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-default-http-client/#constructors","text":"DefaultHttpClient [androidJvm] fun DefaultHttpClient (userAgent: String ? = null, additionalHeaders: Map < String , String > = mapOf(), connectTimeout: Duration ? = null, readTimeout: Duration ? = null, callback: DefaultHttpClient.Callback ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-default-http-client/#types","text":"Name Summary Callback [androidJvm] interface Callback Callbacks allowing to override some behavior of the DefaultHttpClient .","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-default-http-client/#functions","text":"Name Summary fetch [androidJvm] open suspend fun fetch (request: HttpRequest ): HttpTry < HttpFetchResponse > Fetches the resource from the given request . stream [androidJvm] open suspend override fun stream (request: HttpRequest ): HttpTry < HttpStreamResponse > Streams the resource from the given request .","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-default-http-client/#properties","text":"Name Summary callback [androidJvm] var callback : DefaultHttpClient.Callback ? = null","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-default-http-client/-default-http-client/","text":"// shared / org.readium.r2.shared.util.http / DefaultHttpClient / DefaultHttpClient DefaultHttpClient \u00b6 [androidJvm]\\ fun DefaultHttpClient (userAgent: String ? = null, additionalHeaders: Map < String , String > = mapOf(), connectTimeout: Duration ? = null, readTimeout: Duration ? = null, callback: DefaultHttpClient.Callback ? = null) Parameters \u00b6 androidJvm userAgent Custom user agent to use for requests. additionalHeaders A dictionary of additional headers to send with requests. connectTimeout Timeout used when establishing a connection to the resource. A null timeout is interpreted as the default value, while a timeout of zero as an infinite timeout. readTimeout Timeout used when reading the input stream. A null timeout is interpreted as the default value, while a timeout of zero as an infinite timeout.","title":" default http client"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-default-http-client/-default-http-client/#defaulthttpclient","text":"[androidJvm]\\ fun DefaultHttpClient (userAgent: String ? = null, additionalHeaders: Map < String , String > = mapOf(), connectTimeout: Duration ? = null, readTimeout: Duration ? = null, callback: DefaultHttpClient.Callback ? = null)","title":"DefaultHttpClient"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-default-http-client/-default-http-client/#parameters","text":"androidJvm userAgent Custom user agent to use for requests. additionalHeaders A dictionary of additional headers to send with requests. connectTimeout Timeout used when establishing a connection to the resource. A null timeout is interpreted as the default value, while a timeout of zero as an infinite timeout. readTimeout Timeout used when reading the input stream. A null timeout is interpreted as the default value, while a timeout of zero as an infinite timeout.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-default-http-client/callback/","text":"// shared / org.readium.r2.shared.util.http / DefaultHttpClient / callback callback \u00b6 [androidJvm]\\ var callback : DefaultHttpClient.Callback ? = null","title":"Callback"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-default-http-client/callback/#callback","text":"[androidJvm]\\ var callback : DefaultHttpClient.Callback ? = null","title":"callback"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-default-http-client/stream/","text":"// shared / org.readium.r2.shared.util.http / DefaultHttpClient / stream stream \u00b6 [androidJvm]\\ open suspend override fun stream (request: HttpRequest ): HttpTry < HttpStreamResponse > Streams the resource from the given request .","title":"Stream"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-default-http-client/stream/#stream","text":"[androidJvm]\\ open suspend override fun stream (request: HttpRequest ): HttpTry < HttpStreamResponse > Streams the resource from the given request .","title":"stream"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-default-http-client/-callback/","text":"// shared / org.readium.r2.shared.util.http / DefaultHttpClient / Callback Callback \u00b6 [androidJvm]\\ interface Callback Callbacks allowing to override some behavior of the DefaultHttpClient . Functions \u00b6 Name Summary onRecoverRequest [androidJvm] open suspend fun onRecoverRequest (request: HttpRequest , error: HttpException ): HttpTry < HttpRequest > Called when the HTTP client received an error for the given request , to provide an opportunity to the implementer to recover from it. onRequestFailed [androidJvm] open suspend fun onRequestFailed (request: HttpRequest , error: HttpException ) Called when the HTTP client received an error for the given request . onResponseReceived [androidJvm] open suspend fun onResponseReceived (request: HttpRequest , response: HttpResponse ) Called when the HTTP client received an HTTP response for the given request . onStartRequest [androidJvm] open suspend fun onStartRequest (request: HttpRequest ): HttpTry < HttpRequest > Called when the HTTP client will start a new request .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-default-http-client/-callback/#callback","text":"[androidJvm]\\ interface Callback Callbacks allowing to override some behavior of the DefaultHttpClient .","title":"Callback"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-default-http-client/-callback/#functions","text":"Name Summary onRecoverRequest [androidJvm] open suspend fun onRecoverRequest (request: HttpRequest , error: HttpException ): HttpTry < HttpRequest > Called when the HTTP client received an error for the given request , to provide an opportunity to the implementer to recover from it. onRequestFailed [androidJvm] open suspend fun onRequestFailed (request: HttpRequest , error: HttpException ) Called when the HTTP client received an error for the given request . onResponseReceived [androidJvm] open suspend fun onResponseReceived (request: HttpRequest , response: HttpResponse ) Called when the HTTP client received an HTTP response for the given request . onStartRequest [androidJvm] open suspend fun onStartRequest (request: HttpRequest ): HttpTry < HttpRequest > Called when the HTTP client will start a new request .","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-default-http-client/-callback/on-recover-request/","text":"// shared / org.readium.r2.shared.util.http / DefaultHttpClient / Callback / onRecoverRequest onRecoverRequest \u00b6 [androidJvm]\\ open suspend fun onRecoverRequest (request: HttpRequest , error: HttpException ): HttpTry < HttpRequest > Called when the HTTP client received an error for the given request , to provide an opportunity to the implementer to recover from it. You can return either: a new recovery request to start the [error](on-recover-request.md) argument, if you cannot recover from it a new [HttpException](../../-http-exception/index.md) to provide additional information","title":"On recover request"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-default-http-client/-callback/on-recover-request/#onrecoverrequest","text":"[androidJvm]\\ open suspend fun onRecoverRequest (request: HttpRequest , error: HttpException ): HttpTry < HttpRequest > Called when the HTTP client received an error for the given request , to provide an opportunity to the implementer to recover from it. You can return either: a new recovery request to start the [error](on-recover-request.md) argument, if you cannot recover from it a new [HttpException](../../-http-exception/index.md) to provide additional information","title":"onRecoverRequest"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-default-http-client/-callback/on-request-failed/","text":"// shared / org.readium.r2.shared.util.http / DefaultHttpClient / Callback / onRequestFailed onRequestFailed \u00b6 [androidJvm]\\ open suspend fun onRequestFailed (request: HttpRequest , error: HttpException ) Called when the HTTP client received an error for the given request . You do not need to do anything with this error, which the HTTP client will handle. This is merely for informational purposes. This will be called only if onRecoverRequest is not implemented, or returns an error.","title":"On request failed"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-default-http-client/-callback/on-request-failed/#onrequestfailed","text":"[androidJvm]\\ open suspend fun onRequestFailed (request: HttpRequest , error: HttpException ) Called when the HTTP client received an error for the given request . You do not need to do anything with this error, which the HTTP client will handle. This is merely for informational purposes. This will be called only if onRecoverRequest is not implemented, or returns an error.","title":"onRequestFailed"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-default-http-client/-callback/on-response-received/","text":"// shared / org.readium.r2.shared.util.http / DefaultHttpClient / Callback / onResponseReceived onResponseReceived \u00b6 [androidJvm]\\ open suspend fun onResponseReceived (request: HttpRequest , response: HttpResponse ) Called when the HTTP client received an HTTP response for the given request . You do not need to do anything with this response , which the HTTP client will handle. This is merely for informational purposes. For example, you could implement this to confirm that request credentials were successful.","title":"On response received"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-default-http-client/-callback/on-response-received/#onresponsereceived","text":"[androidJvm]\\ open suspend fun onResponseReceived (request: HttpRequest , response: HttpResponse ) Called when the HTTP client received an HTTP response for the given request . You do not need to do anything with this response , which the HTTP client will handle. This is merely for informational purposes. For example, you could implement this to confirm that request credentials were successful.","title":"onResponseReceived"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-default-http-client/-callback/on-start-request/","text":"// shared / org.readium.r2.shared.util.http / DefaultHttpClient / Callback / onStartRequest onStartRequest \u00b6 [androidJvm]\\ open suspend fun onStartRequest (request: HttpRequest ): HttpTry < HttpRequest > Called when the HTTP client will start a new request . You can modify the request , for example by adding additional HTTP headers or redirecting to a different URL, before returning it.","title":"On start request"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-default-http-client/-callback/on-start-request/#onstartrequest","text":"[androidJvm]\\ open suspend fun onStartRequest (request: HttpRequest ): HttpTry < HttpRequest > Called when the HTTP client will start a new request . You can modify the request , for example by adding additional HTTP headers or redirecting to a different URL, before returning it.","title":"onStartRequest"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-client/","text":"// shared / org.readium.r2.shared.util.http / HttpClient HttpClient \u00b6 [androidJvm]\\ interface HttpClient An HTTP client performs HTTP requests. You may provide a custom implementation, or use the DefaultHttpClient one which relies on native APIs. Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary fetch [androidJvm] open suspend fun fetch (request: HttpRequest ): HttpTry < HttpFetchResponse > Fetches the resource from the given request . stream [androidJvm] abstract suspend fun stream (request: HttpRequest ): HttpTry < HttpStreamResponse > Streams the resource from the given request . Inheritors \u00b6 Name DefaultHttpClient Extensions \u00b6 Name Summary fetchJSONObject [androidJvm] suspend fun HttpClient . fetchJSONObject (request: HttpRequest ): HttpTry < JSONObject > Fetches the resource from the given request as a JSONObject . fetchString [androidJvm] suspend fun HttpClient . fetchString (request: HttpRequest , charset: Charset = Charsets.UTF_8): HttpTry < String > Fetches the resource from the given request as a String . fetchWithDecoder [androidJvm] suspend fun < T > HttpClient . fetchWithDecoder (request: HttpRequest , decoder: ( HttpFetchResponse ) -> T ): HttpTry < T > Fetches the resource from the given request before decoding it with the provided decoder .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-client/#httpclient","text":"[androidJvm]\\ interface HttpClient An HTTP client performs HTTP requests. You may provide a custom implementation, or use the DefaultHttpClient one which relies on native APIs.","title":"HttpClient"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-client/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-client/#functions","text":"Name Summary fetch [androidJvm] open suspend fun fetch (request: HttpRequest ): HttpTry < HttpFetchResponse > Fetches the resource from the given request . stream [androidJvm] abstract suspend fun stream (request: HttpRequest ): HttpTry < HttpStreamResponse > Streams the resource from the given request .","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-client/#inheritors","text":"Name DefaultHttpClient","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-client/#extensions","text":"Name Summary fetchJSONObject [androidJvm] suspend fun HttpClient . fetchJSONObject (request: HttpRequest ): HttpTry < JSONObject > Fetches the resource from the given request as a JSONObject . fetchString [androidJvm] suspend fun HttpClient . fetchString (request: HttpRequest , charset: Charset = Charsets.UTF_8): HttpTry < String > Fetches the resource from the given request as a String . fetchWithDecoder [androidJvm] suspend fun < T > HttpClient . fetchWithDecoder (request: HttpRequest , decoder: ( HttpFetchResponse ) -> T ): HttpTry < T > Fetches the resource from the given request before decoding it with the provided decoder .","title":"Extensions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-client/fetch/","text":"// shared / org.readium.r2.shared.util.http / HttpClient / fetch fetch \u00b6 [androidJvm]\\ open suspend fun fetch (request: HttpRequest ): HttpTry < HttpFetchResponse > Fetches the resource from the given request .","title":"Fetch"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-client/fetch/#fetch","text":"[androidJvm]\\ open suspend fun fetch (request: HttpRequest ): HttpTry < HttpFetchResponse > Fetches the resource from the given request .","title":"fetch"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-client/stream/","text":"// shared / org.readium.r2.shared.util.http / HttpClient / stream stream \u00b6 [androidJvm]\\ abstract suspend fun stream (request: HttpRequest ): HttpTry < HttpStreamResponse > Streams the resource from the given request .","title":"Stream"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-client/stream/#stream","text":"[androidJvm]\\ abstract suspend fun stream (request: HttpRequest ): HttpTry < HttpStreamResponse > Streams the resource from the given request .","title":"stream"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-client/-companion/","text":"// shared / org.readium.r2.shared.util.http / HttpClient / Companion Companion \u00b6 [androidJvm]\\ object Companion","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-client/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/","text":"// shared / org.readium.r2.shared.util.http / HttpException HttpException \u00b6 [androidJvm]\\ class HttpException (kind: HttpException.Kind , mediaType: MediaType ?, body: ByteArray ?, cause: Throwable ?) : UserException Represents an error occurring during an HTTP activity. Parameters \u00b6 androidJvm kind Category of HTTP error. mediaType Response media type. body Response body. cause Underlying error, if any. Constructors \u00b6 HttpException [androidJvm] fun HttpException (kind: HttpException.Kind , mediaType: MediaType ? = null, body: ByteArray ? = null, cause: Throwable ? = null) Types \u00b6 Name Summary Companion [androidJvm] object Companion Kind [androidJvm] enum Kind : Enum < HttpException.Kind > Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open override fun getLocalizedMessage (): String ? getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open override fun getUserMessage (context: Context , includesCauses: Boolean ): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary body [androidJvm] val body : ByteArray ? = null cause [androidJvm] open val cause : Throwable ? kind [androidJvm] val kind : HttpException.Kind mediaType [androidJvm] val mediaType : MediaType ? = null message [androidJvm] open val message : String ? problemDetails [androidJvm] val problemDetails : ProblemDetails ? Response body parsed as a JSON problem details.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/#httpexception","text":"[androidJvm]\\ class HttpException (kind: HttpException.Kind , mediaType: MediaType ?, body: ByteArray ?, cause: Throwable ?) : UserException Represents an error occurring during an HTTP activity.","title":"HttpException"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/#parameters","text":"androidJvm kind Category of HTTP error. mediaType Response media type. body Response body. cause Underlying error, if any.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/#constructors","text":"HttpException [androidJvm] fun HttpException (kind: HttpException.Kind , mediaType: MediaType ? = null, body: ByteArray ? = null, cause: Throwable ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/#types","text":"Name Summary Companion [androidJvm] object Companion Kind [androidJvm] enum Kind : Enum < HttpException.Kind >","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open override fun getLocalizedMessage (): String ? getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > getUserMessage [androidJvm] open override fun getUserMessage (context: Context , includesCauses: Boolean ): String Gets the localized user-facing message for this exception. initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/#properties","text":"Name Summary body [androidJvm] val body : ByteArray ? = null cause [androidJvm] open val cause : Throwable ? kind [androidJvm] val kind : HttpException.Kind mediaType [androidJvm] val mediaType : MediaType ? = null message [androidJvm] open val message : String ? problemDetails [androidJvm] val problemDetails : ProblemDetails ? Response body parsed as a JSON problem details.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-http-exception/","text":"// shared / org.readium.r2.shared.util.http / HttpException / HttpException HttpException \u00b6 [androidJvm]\\ fun HttpException (kind: HttpException.Kind , mediaType: MediaType ? = null, body: ByteArray ? = null, cause: Throwable ? = null) Parameters \u00b6 androidJvm kind Category of HTTP error. mediaType Response media type. body Response body. cause Underlying error, if any.","title":" http exception"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-http-exception/#httpexception","text":"[androidJvm]\\ fun HttpException (kind: HttpException.Kind , mediaType: MediaType ? = null, body: ByteArray ? = null, cause: Throwable ? = null)","title":"HttpException"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-http-exception/#parameters","text":"androidJvm kind Category of HTTP error. mediaType Response media type. body Response body. cause Underlying error, if any.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/body/","text":"// shared / org.readium.r2.shared.util.http / HttpException / body body \u00b6 [androidJvm]\\ val body : ByteArray ? = null","title":"Body"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/body/#body","text":"[androidJvm]\\ val body : ByteArray ? = null","title":"body"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/get-localized-message/","text":"// shared / org.readium.r2.shared.util.http / HttpException / getLocalizedMessage getLocalizedMessage \u00b6 [androidJvm]\\ open override fun getLocalizedMessage (): String ?","title":"Get localized message"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/get-localized-message/#getlocalizedmessage","text":"[androidJvm]\\ open override fun getLocalizedMessage (): String ?","title":"getLocalizedMessage"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/get-user-message/","text":"// shared / org.readium.r2.shared.util.http / HttpException / getUserMessage getUserMessage \u00b6 [androidJvm]\\ open override fun getUserMessage (context: Context , includesCauses: Boolean ): String Gets the localized user-facing message for this exception. Parameters \u00b6 androidJvm includesCauses Includes nested UserException causes in the user message when true.","title":"Get user message"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/get-user-message/#getusermessage","text":"[androidJvm]\\ open override fun getUserMessage (context: Context , includesCauses: Boolean ): String Gets the localized user-facing message for this exception.","title":"getUserMessage"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/get-user-message/#parameters","text":"androidJvm includesCauses Includes nested UserException causes in the user message when true.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/kind/","text":"// shared / org.readium.r2.shared.util.http / HttpException / kind kind \u00b6 [androidJvm]\\ val kind : HttpException.Kind","title":"Kind"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/kind/#kind","text":"[androidJvm]\\ val kind : HttpException.Kind","title":"kind"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/media-type/","text":"// shared / org.readium.r2.shared.util.http / HttpException / mediaType mediaType \u00b6 [androidJvm]\\ val mediaType : MediaType ? = null","title":"Media type"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/media-type/#mediatype","text":"[androidJvm]\\ val mediaType : MediaType ? = null","title":"mediaType"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/problem-details/","text":"// shared / org.readium.r2.shared.util.http / HttpException / problemDetails problemDetails \u00b6 [androidJvm]\\ val problemDetails : ProblemDetails ? Response body parsed as a JSON problem details.","title":"Problem details"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/problem-details/#problemdetails","text":"[androidJvm]\\ val problemDetails : ProblemDetails ? Response body parsed as a JSON problem details.","title":"problemDetails"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-companion/","text":"// shared / org.readium.r2.shared.util.http / HttpException / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary invoke [androidJvm] operator fun invoke (statusCode: Int , mediaType: MediaType ? = null, body: ByteArray ? = null): HttpException ? Creates an HTTP error from a status code. wrap [androidJvm] fun wrap (cause: Throwable ): HttpException Creates an HTTP error from a generic exception. Properties \u00b6 Name Summary CANCELLED [androidJvm] val CANCELLED : HttpException Shortcut for a cancelled HTTP error.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-companion/#functions","text":"Name Summary invoke [androidJvm] operator fun invoke (statusCode: Int , mediaType: MediaType ? = null, body: ByteArray ? = null): HttpException ? Creates an HTTP error from a status code. wrap [androidJvm] fun wrap (cause: Throwable ): HttpException Creates an HTTP error from a generic exception.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-companion/#properties","text":"Name Summary CANCELLED [androidJvm] val CANCELLED : HttpException Shortcut for a cancelled HTTP error.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-companion/-c-a-n-c-e-l-l-e-d/","text":"// shared / org.readium.r2.shared.util.http / HttpException / Companion / CANCELLED CANCELLED \u00b6 [androidJvm]\\ val CANCELLED : HttpException Shortcut for a cancelled HTTP error.","title":" c a n c e l l e d"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-companion/-c-a-n-c-e-l-l-e-d/#cancelled","text":"[androidJvm]\\ val CANCELLED : HttpException Shortcut for a cancelled HTTP error.","title":"CANCELLED"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-companion/invoke/","text":"// shared / org.readium.r2.shared.util.http / HttpException / Companion / invoke invoke \u00b6 [androidJvm]\\ operator fun invoke (statusCode: Int , mediaType: MediaType ? = null, body: ByteArray ? = null): HttpException ? Creates an HTTP error from a status code. Returns null if the status code is a success.","title":"Invoke"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-companion/invoke/#invoke","text":"[androidJvm]\\ operator fun invoke (statusCode: Int , mediaType: MediaType ? = null, body: ByteArray ? = null): HttpException ? Creates an HTTP error from a status code. Returns null if the status code is a success.","title":"invoke"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-companion/wrap/","text":"// shared / org.readium.r2.shared.util.http / HttpException / Companion / wrap wrap \u00b6 [androidJvm]\\ fun wrap (cause: Throwable ): HttpException Creates an HTTP error from a generic exception.","title":"Wrap"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-companion/wrap/#wrap","text":"[androidJvm]\\ fun wrap (cause: Throwable ): HttpException Creates an HTTP error from a generic exception.","title":"wrap"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/","text":"// shared / org.readium.r2.shared.util.http / HttpException / Kind Kind \u00b6 [androidJvm]\\ enum Kind : Enum < HttpException.Kind > Entries \u00b6 Other [androidJvm] Other (R.string.r2_shared_http_exception_other) An error whose kind is not recognized. Cancelled [androidJvm] Cancelled (R.string.r2_shared_http_exception_cancelled) The request was cancelled. Offline [androidJvm] Offline (R.string.r2_shared_http_exception_offline) The device is offline. ServerError [androidJvm] ServerError (R.string.r2_shared_http_exception_server_error) (5xx) Server errors ClientError [androidJvm] ClientError (R.string.r2_shared_http_exception_client_error) (4xx) Other client errors NotFound [androidJvm] NotFound (R.string.r2_shared_http_exception_not_found) (404) The requested resource could not be found. Forbidden [androidJvm] Forbidden (R.string.r2_shared_http_exception_forbidden) (403) The server refuses the action, probably because we don't have the necessary permissions. Unauthorized [androidJvm] Unauthorized (R.string.r2_shared_http_exception_unauthorized) (401) Authentication is required and has failed or has not yet been provided. BadRequest [androidJvm] BadRequest (R.string.r2_shared_http_exception_bad_request) (400) The server cannot or will not process the request due to an apparent client error. Timeout [androidJvm] Timeout (R.string.r2_shared_http_exception_timeout) The client, server or gateways timed out. MalformedResponse [androidJvm] MalformedResponse (R.string.r2_shared_http_exception_malformed_response) The received response couldn't be decoded. MalformedRequest [androidJvm] MalformedRequest (R.string.r2_shared_http_exception_malformed_request) The provided request was not valid. Types \u00b6 Name Summary Companion [androidJvm] object Companion Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int userMessageId [androidJvm] val userMessageId : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/#kind","text":"[androidJvm]\\ enum Kind : Enum < HttpException.Kind >","title":"Kind"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/#entries","text":"Other [androidJvm] Other (R.string.r2_shared_http_exception_other) An error whose kind is not recognized. Cancelled [androidJvm] Cancelled (R.string.r2_shared_http_exception_cancelled) The request was cancelled. Offline [androidJvm] Offline (R.string.r2_shared_http_exception_offline) The device is offline. ServerError [androidJvm] ServerError (R.string.r2_shared_http_exception_server_error) (5xx) Server errors ClientError [androidJvm] ClientError (R.string.r2_shared_http_exception_client_error) (4xx) Other client errors NotFound [androidJvm] NotFound (R.string.r2_shared_http_exception_not_found) (404) The requested resource could not be found. Forbidden [androidJvm] Forbidden (R.string.r2_shared_http_exception_forbidden) (403) The server refuses the action, probably because we don't have the necessary permissions. Unauthorized [androidJvm] Unauthorized (R.string.r2_shared_http_exception_unauthorized) (401) Authentication is required and has failed or has not yet been provided. BadRequest [androidJvm] BadRequest (R.string.r2_shared_http_exception_bad_request) (400) The server cannot or will not process the request due to an apparent client error. Timeout [androidJvm] Timeout (R.string.r2_shared_http_exception_timeout) The client, server or gateways timed out. MalformedResponse [androidJvm] MalformedResponse (R.string.r2_shared_http_exception_malformed_response) The received response couldn't be decoded. MalformedRequest [androidJvm] MalformedRequest (R.string.r2_shared_http_exception_malformed_request) The provided request was not valid.","title":"Entries"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int userMessageId [androidJvm] val userMessageId : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/user-message-id/","text":"// shared / org.readium.r2.shared.util.http / HttpException / Kind / userMessageId userMessageId \u00b6 [androidJvm]\\ val userMessageId : Int","title":"User message id"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/user-message-id/#usermessageid","text":"[androidJvm]\\ val userMessageId : Int","title":"userMessageId"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-bad-request/","text":"// shared / org.readium.r2.shared.util.http / HttpException / Kind / BadRequest BadRequest \u00b6 [androidJvm]\\ BadRequest (R.string.r2_shared_http_exception_bad_request) (400) The server cannot or will not process the request due to an apparent client error. Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int userMessageId [androidJvm] val userMessageId : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-bad-request/#badrequest","text":"[androidJvm]\\ BadRequest (R.string.r2_shared_http_exception_bad_request) (400) The server cannot or will not process the request due to an apparent client error.","title":"BadRequest"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-bad-request/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int userMessageId [androidJvm] val userMessageId : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-cancelled/","text":"// shared / org.readium.r2.shared.util.http / HttpException / Kind / Cancelled Cancelled \u00b6 [androidJvm]\\ Cancelled (R.string.r2_shared_http_exception_cancelled) The request was cancelled. Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int userMessageId [androidJvm] val userMessageId : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-cancelled/#cancelled","text":"[androidJvm]\\ Cancelled (R.string.r2_shared_http_exception_cancelled) The request was cancelled.","title":"Cancelled"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-cancelled/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int userMessageId [androidJvm] val userMessageId : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-client-error/","text":"// shared / org.readium.r2.shared.util.http / HttpException / Kind / ClientError ClientError \u00b6 [androidJvm]\\ ClientError (R.string.r2_shared_http_exception_client_error) (4xx) Other client errors Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int userMessageId [androidJvm] val userMessageId : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-client-error/#clienterror","text":"[androidJvm]\\ ClientError (R.string.r2_shared_http_exception_client_error) (4xx) Other client errors","title":"ClientError"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-client-error/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int userMessageId [androidJvm] val userMessageId : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-companion/","text":"// shared / org.readium.r2.shared.util.http / HttpException / Kind / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary ofStatusCode [androidJvm] fun ofStatusCode (statusCode: Int ): HttpException.Kind ? Resolves the kind of the HTTP error associated with the given statusCode .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-companion/#functions","text":"Name Summary ofStatusCode [androidJvm] fun ofStatusCode (statusCode: Int ): HttpException.Kind ? Resolves the kind of the HTTP error associated with the given statusCode .","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-companion/of-status-code/","text":"// shared / org.readium.r2.shared.util.http / HttpException / Kind / Companion / ofStatusCode ofStatusCode \u00b6 [androidJvm]\\ fun ofStatusCode (statusCode: Int ): HttpException.Kind ? Resolves the kind of the HTTP error associated with the given statusCode .","title":"Of status code"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-companion/of-status-code/#ofstatuscode","text":"[androidJvm]\\ fun ofStatusCode (statusCode: Int ): HttpException.Kind ? Resolves the kind of the HTTP error associated with the given statusCode .","title":"ofStatusCode"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-forbidden/","text":"// shared / org.readium.r2.shared.util.http / HttpException / Kind / Forbidden Forbidden \u00b6 [androidJvm]\\ Forbidden (R.string.r2_shared_http_exception_forbidden) (403) The server refuses the action, probably because we don't have the necessary permissions. Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int userMessageId [androidJvm] val userMessageId : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-forbidden/#forbidden","text":"[androidJvm]\\ Forbidden (R.string.r2_shared_http_exception_forbidden) (403) The server refuses the action, probably because we don't have the necessary permissions.","title":"Forbidden"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-forbidden/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int userMessageId [androidJvm] val userMessageId : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-malformed-request/","text":"// shared / org.readium.r2.shared.util.http / HttpException / Kind / MalformedRequest MalformedRequest \u00b6 [androidJvm]\\ MalformedRequest (R.string.r2_shared_http_exception_malformed_request) The provided request was not valid. Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int userMessageId [androidJvm] val userMessageId : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-malformed-request/#malformedrequest","text":"[androidJvm]\\ MalformedRequest (R.string.r2_shared_http_exception_malformed_request) The provided request was not valid.","title":"MalformedRequest"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-malformed-request/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int userMessageId [androidJvm] val userMessageId : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-malformed-response/","text":"// shared / org.readium.r2.shared.util.http / HttpException / Kind / MalformedResponse MalformedResponse \u00b6 [androidJvm]\\ MalformedResponse (R.string.r2_shared_http_exception_malformed_response) The received response couldn't be decoded. Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int userMessageId [androidJvm] val userMessageId : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-malformed-response/#malformedresponse","text":"[androidJvm]\\ MalformedResponse (R.string.r2_shared_http_exception_malformed_response) The received response couldn't be decoded.","title":"MalformedResponse"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-malformed-response/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int userMessageId [androidJvm] val userMessageId : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-not-found/","text":"// shared / org.readium.r2.shared.util.http / HttpException / Kind / NotFound NotFound \u00b6 [androidJvm]\\ NotFound (R.string.r2_shared_http_exception_not_found) (404) The requested resource could not be found. Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int userMessageId [androidJvm] val userMessageId : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-not-found/#notfound","text":"[androidJvm]\\ NotFound (R.string.r2_shared_http_exception_not_found) (404) The requested resource could not be found.","title":"NotFound"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-not-found/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int userMessageId [androidJvm] val userMessageId : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-offline/","text":"// shared / org.readium.r2.shared.util.http / HttpException / Kind / Offline Offline \u00b6 [androidJvm]\\ Offline (R.string.r2_shared_http_exception_offline) The device is offline. Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int userMessageId [androidJvm] val userMessageId : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-offline/#offline","text":"[androidJvm]\\ Offline (R.string.r2_shared_http_exception_offline) The device is offline.","title":"Offline"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-offline/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int userMessageId [androidJvm] val userMessageId : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-other/","text":"// shared / org.readium.r2.shared.util.http / HttpException / Kind / Other Other \u00b6 [androidJvm]\\ Other (R.string.r2_shared_http_exception_other) An error whose kind is not recognized. Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int userMessageId [androidJvm] val userMessageId : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-other/#other","text":"[androidJvm]\\ Other (R.string.r2_shared_http_exception_other) An error whose kind is not recognized.","title":"Other"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-other/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int userMessageId [androidJvm] val userMessageId : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-server-error/","text":"// shared / org.readium.r2.shared.util.http / HttpException / Kind / ServerError ServerError \u00b6 [androidJvm]\\ ServerError (R.string.r2_shared_http_exception_server_error) (5xx) Server errors Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int userMessageId [androidJvm] val userMessageId : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-server-error/#servererror","text":"[androidJvm]\\ ServerError (R.string.r2_shared_http_exception_server_error) (5xx) Server errors","title":"ServerError"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-server-error/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int userMessageId [androidJvm] val userMessageId : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-timeout/","text":"// shared / org.readium.r2.shared.util.http / HttpException / Kind / Timeout Timeout \u00b6 [androidJvm]\\ Timeout (R.string.r2_shared_http_exception_timeout) The client, server or gateways timed out. Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int userMessageId [androidJvm] val userMessageId : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-timeout/#timeout","text":"[androidJvm]\\ Timeout (R.string.r2_shared_http_exception_timeout) The client, server or gateways timed out.","title":"Timeout"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-timeout/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int userMessageId [androidJvm] val userMessageId : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-unauthorized/","text":"// shared / org.readium.r2.shared.util.http / HttpException / Kind / Unauthorized Unauthorized \u00b6 [androidJvm]\\ Unauthorized (R.string.r2_shared_http_exception_unauthorized) (401) Authentication is required and has failed or has not yet been provided. Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int userMessageId [androidJvm] val userMessageId : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-unauthorized/#unauthorized","text":"[androidJvm]\\ Unauthorized (R.string.r2_shared_http_exception_unauthorized) (401) Authentication is required and has failed or has not yet been provided.","title":"Unauthorized"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-exception/-kind/-unauthorized/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int userMessageId [androidJvm] val userMessageId : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-fetch-response/","text":"// shared / org.readium.r2.shared.util.http / HttpFetchResponse HttpFetchResponse \u00b6 [androidJvm]\\ class HttpFetchResponse (response: HttpResponse , body: ByteArray ) Properties \u00b6 Name Summary body [androidJvm] val body : ByteArray response [androidJvm] val response : HttpResponse","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-fetch-response/#httpfetchresponse","text":"[androidJvm]\\ class HttpFetchResponse (response: HttpResponse , body: ByteArray )","title":"HttpFetchResponse"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-fetch-response/#properties","text":"Name Summary body [androidJvm] val body : ByteArray response [androidJvm] val response : HttpResponse","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-fetch-response/-http-fetch-response/","text":"// shared / org.readium.r2.shared.util.http / HttpFetchResponse / HttpFetchResponse HttpFetchResponse \u00b6 [androidJvm]\\ fun HttpFetchResponse (response: HttpResponse , body: ByteArray )","title":" http fetch response"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-fetch-response/-http-fetch-response/#httpfetchresponse","text":"[androidJvm]\\ fun HttpFetchResponse (response: HttpResponse , body: ByteArray )","title":"HttpFetchResponse"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-fetch-response/body/","text":"// shared / org.readium.r2.shared.util.http / HttpFetchResponse / body body \u00b6 [androidJvm]\\ val body : ByteArray","title":"Body"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-fetch-response/body/#body","text":"[androidJvm]\\ val body : ByteArray","title":"body"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-fetch-response/response/","text":"// shared / org.readium.r2.shared.util.http / HttpFetchResponse / response response \u00b6 [androidJvm]\\ val response : HttpResponse","title":"Response"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-fetch-response/response/#response","text":"[androidJvm]\\ val response : HttpResponse","title":"response"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest HttpRequest \u00b6 [androidJvm]\\ class HttpRequest (url: String , method: HttpRequest.Method , headers: Map < String , String >, body: HttpRequest.Body ?, extras: Bundle , connectTimeout: Duration ?, readTimeout: Duration ?, allowUserInteraction: Boolean ) : Serializable Holds the information about an HTTP request performed by an HttpClient . Parameters \u00b6 androidJvm url Address of the remote resource to request. method HTTP method to use for the request. headers Additional HTTP headers to use. body Content put in the body of the HTTP request. extras Bundle of additional information, which might be used by a specific implementation of HTTPClient. connectTimeout Timeout used when establishing a connection to the resource. A null timeout is interpreted as the default value, while a timeout of zero as an infinite timeout. readTimeout Timeout used when reading the input stream. A null timeout is interpreted as the default value, while a timeout of zero as an infinite timeout. allowUserInteraction If true, the user might be presented with interactive dialogs, such as popping up an authentication dialog. Constructors \u00b6 HttpRequest [androidJvm] fun HttpRequest (url: String , method: HttpRequest.Method = Method.GET, headers: Map < String , String > = mapOf(), body: HttpRequest.Body ? = null, extras: Bundle = Bundle(), connectTimeout: Duration ? = null, readTimeout: Duration ? = null, allowUserInteraction: Boolean = false) Types \u00b6 Name Summary Body [androidJvm] sealed class Body : Serializable Supported body values. Builder [androidJvm] class Builder (url: String , method: HttpRequest.Method , headers: MutableMap < String , String >, body: HttpRequest.Body ?, extras: Bundle , connectTimeout: Duration ?, readTimeout: Duration ?, allowUserInteraction: Boolean ) Companion [androidJvm] object Companion Method [androidJvm] enum Method : Enum < HttpRequest.Method > , Serializable Supported HTTP methods. Functions \u00b6 Name Summary buildUpon [androidJvm] fun buildUpon (): HttpRequest.Builder Properties \u00b6 Name Summary allowUserInteraction [androidJvm] val allowUserInteraction : Boolean = false body [androidJvm] val body : HttpRequest.Body ? = null connectTimeout [androidJvm] val connectTimeout : Duration ? = null extras [androidJvm] val extras : Bundle headers [androidJvm] val headers : Map < String , String > method [androidJvm] val method : HttpRequest.Method readTimeout [androidJvm] val readTimeout : Duration ? = null url [androidJvm] val url : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/#httprequest","text":"[androidJvm]\\ class HttpRequest (url: String , method: HttpRequest.Method , headers: Map < String , String >, body: HttpRequest.Body ?, extras: Bundle , connectTimeout: Duration ?, readTimeout: Duration ?, allowUserInteraction: Boolean ) : Serializable Holds the information about an HTTP request performed by an HttpClient .","title":"HttpRequest"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/#parameters","text":"androidJvm url Address of the remote resource to request. method HTTP method to use for the request. headers Additional HTTP headers to use. body Content put in the body of the HTTP request. extras Bundle of additional information, which might be used by a specific implementation of HTTPClient. connectTimeout Timeout used when establishing a connection to the resource. A null timeout is interpreted as the default value, while a timeout of zero as an infinite timeout. readTimeout Timeout used when reading the input stream. A null timeout is interpreted as the default value, while a timeout of zero as an infinite timeout. allowUserInteraction If true, the user might be presented with interactive dialogs, such as popping up an authentication dialog.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/#constructors","text":"HttpRequest [androidJvm] fun HttpRequest (url: String , method: HttpRequest.Method = Method.GET, headers: Map < String , String > = mapOf(), body: HttpRequest.Body ? = null, extras: Bundle = Bundle(), connectTimeout: Duration ? = null, readTimeout: Duration ? = null, allowUserInteraction: Boolean = false)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/#types","text":"Name Summary Body [androidJvm] sealed class Body : Serializable Supported body values. Builder [androidJvm] class Builder (url: String , method: HttpRequest.Method , headers: MutableMap < String , String >, body: HttpRequest.Body ?, extras: Bundle , connectTimeout: Duration ?, readTimeout: Duration ?, allowUserInteraction: Boolean ) Companion [androidJvm] object Companion Method [androidJvm] enum Method : Enum < HttpRequest.Method > , Serializable Supported HTTP methods.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/#functions","text":"Name Summary buildUpon [androidJvm] fun buildUpon (): HttpRequest.Builder","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/#properties","text":"Name Summary allowUserInteraction [androidJvm] val allowUserInteraction : Boolean = false body [androidJvm] val body : HttpRequest.Body ? = null connectTimeout [androidJvm] val connectTimeout : Duration ? = null extras [androidJvm] val extras : Bundle headers [androidJvm] val headers : Map < String , String > method [androidJvm] val method : HttpRequest.Method readTimeout [androidJvm] val readTimeout : Duration ? = null url [androidJvm] val url : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-http-request/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / HttpRequest HttpRequest \u00b6 [androidJvm]\\ fun HttpRequest (url: String , method: HttpRequest.Method = Method.GET, headers: Map < String , String > = mapOf(), body: HttpRequest.Body ? = null, extras: Bundle = Bundle(), connectTimeout: Duration ? = null, readTimeout: Duration ? = null, allowUserInteraction: Boolean = false) Parameters \u00b6 androidJvm url Address of the remote resource to request. method HTTP method to use for the request. headers Additional HTTP headers to use. body Content put in the body of the HTTP request. extras Bundle of additional information, which might be used by a specific implementation of HTTPClient. connectTimeout Timeout used when establishing a connection to the resource. A null timeout is interpreted as the default value, while a timeout of zero as an infinite timeout. readTimeout Timeout used when reading the input stream. A null timeout is interpreted as the default value, while a timeout of zero as an infinite timeout. allowUserInteraction If true, the user might be presented with interactive dialogs, such as popping up an authentication dialog.","title":" http request"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-http-request/#httprequest","text":"[androidJvm]\\ fun HttpRequest (url: String , method: HttpRequest.Method = Method.GET, headers: Map < String , String > = mapOf(), body: HttpRequest.Body ? = null, extras: Bundle = Bundle(), connectTimeout: Duration ? = null, readTimeout: Duration ? = null, allowUserInteraction: Boolean = false)","title":"HttpRequest"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-http-request/#parameters","text":"androidJvm url Address of the remote resource to request. method HTTP method to use for the request. headers Additional HTTP headers to use. body Content put in the body of the HTTP request. extras Bundle of additional information, which might be used by a specific implementation of HTTPClient. connectTimeout Timeout used when establishing a connection to the resource. A null timeout is interpreted as the default value, while a timeout of zero as an infinite timeout. readTimeout Timeout used when reading the input stream. A null timeout is interpreted as the default value, while a timeout of zero as an infinite timeout. allowUserInteraction If true, the user might be presented with interactive dialogs, such as popping up an authentication dialog.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/allow-user-interaction/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / allowUserInteraction allowUserInteraction \u00b6 [androidJvm]\\ val allowUserInteraction : Boolean = false","title":"Allow user interaction"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/allow-user-interaction/#allowuserinteraction","text":"[androidJvm]\\ val allowUserInteraction : Boolean = false","title":"allowUserInteraction"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/body/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / body body \u00b6 [androidJvm]\\ val body : HttpRequest.Body ? = null","title":"Body"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/body/#body","text":"[androidJvm]\\ val body : HttpRequest.Body ? = null","title":"body"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/build-upon/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / buildUpon buildUpon \u00b6 [androidJvm]\\ fun buildUpon (): HttpRequest.Builder","title":"Build upon"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/build-upon/#buildupon","text":"[androidJvm]\\ fun buildUpon (): HttpRequest.Builder","title":"buildUpon"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/connect-timeout/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / connectTimeout connectTimeout \u00b6 [androidJvm]\\ val connectTimeout : Duration ? = null","title":"Connect timeout"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/connect-timeout/#connecttimeout","text":"[androidJvm]\\ val connectTimeout : Duration ? = null","title":"connectTimeout"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/extras/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / extras extras \u00b6 [androidJvm]\\ val extras : Bundle","title":"Extras"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/extras/#extras","text":"[androidJvm]\\ val extras : Bundle","title":"extras"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/headers/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / headers headers \u00b6 [androidJvm]\\ val headers : Map < String , String >","title":"Headers"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/headers/#headers","text":"[androidJvm]\\ val headers : Map < String , String >","title":"headers"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/method/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / method method \u00b6 [androidJvm]\\ val method : HttpRequest.Method","title":"Method"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/method/#method","text":"[androidJvm]\\ val method : HttpRequest.Method","title":"method"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/read-timeout/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / readTimeout readTimeout \u00b6 [androidJvm]\\ val readTimeout : Duration ? = null","title":"Read timeout"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/read-timeout/#readtimeout","text":"[androidJvm]\\ val readTimeout : Duration ? = null","title":"readTimeout"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/url/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / url url \u00b6 [androidJvm]\\ val url : String","title":"Url"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/url/#url","text":"[androidJvm]\\ val url : String","title":"url"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-body/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Body Body \u00b6 [androidJvm]\\ sealed class Body : Serializable Supported body values. Types \u00b6 Name Summary Bytes [androidJvm] class Bytes (bytes: ByteArray ) : HttpRequest.Body File [androidJvm] class File (file: File ) : HttpRequest.Body Inheritors \u00b6 Name HttpRequest.Body HttpRequest.Body","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-body/#body","text":"[androidJvm]\\ sealed class Body : Serializable Supported body values.","title":"Body"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-body/#types","text":"Name Summary Bytes [androidJvm] class Bytes (bytes: ByteArray ) : HttpRequest.Body File [androidJvm] class File (file: File ) : HttpRequest.Body","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-body/#inheritors","text":"Name HttpRequest.Body HttpRequest.Body","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-body/-bytes/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Body / Bytes Bytes \u00b6 [androidJvm]\\ class Bytes (bytes: ByteArray ) : HttpRequest.Body Properties \u00b6 Name Summary bytes [androidJvm] val bytes : ByteArray","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-body/-bytes/#bytes","text":"[androidJvm]\\ class Bytes (bytes: ByteArray ) : HttpRequest.Body","title":"Bytes"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-body/-bytes/#properties","text":"Name Summary bytes [androidJvm] val bytes : ByteArray","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-body/-bytes/-bytes/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Body / Bytes / Bytes Bytes \u00b6 [androidJvm]\\ fun Bytes (bytes: ByteArray )","title":" bytes"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-body/-bytes/-bytes/#bytes","text":"[androidJvm]\\ fun Bytes (bytes: ByteArray )","title":"Bytes"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-body/-bytes/bytes/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Body / Bytes / bytes bytes \u00b6 [androidJvm]\\ val bytes : ByteArray","title":"Bytes"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-body/-bytes/bytes/#bytes","text":"[androidJvm]\\ val bytes : ByteArray","title":"bytes"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-body/-file/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Body / File File \u00b6 [androidJvm]\\ class File (file: File ) : HttpRequest.Body Properties \u00b6 Name Summary file [androidJvm] val file : File","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-body/-file/#file","text":"[androidJvm]\\ class File (file: File ) : HttpRequest.Body","title":"File"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-body/-file/#properties","text":"Name Summary file [androidJvm] val file : File","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-body/-file/-file/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Body / File / File File \u00b6 [androidJvm]\\ fun File (file: File )","title":" file"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-body/-file/-file/#file","text":"[androidJvm]\\ fun File (file: File )","title":"File"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-body/-file/file/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Body / File / file file \u00b6 [androidJvm]\\ val file : File","title":"File"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-body/-file/file/#file","text":"[androidJvm]\\ val file : File","title":"file"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Builder Builder \u00b6 [androidJvm]\\ class Builder (url: String , method: HttpRequest.Method , headers: MutableMap < String , String >, body: HttpRequest.Body ?, extras: Bundle , connectTimeout: Duration ?, readTimeout: Duration ?, allowUserInteraction: Boolean ) Functions \u00b6 Name Summary appendQueryParameter [androidJvm] fun appendQueryParameter (key: String , value: String ?): HttpRequest.Builder appendQueryParameters [androidJvm] fun appendQueryParameters (params: Map < String , String ?>): HttpRequest.Builder build [androidJvm] fun build (): HttpRequest setHeader [androidJvm] fun setHeader (key: String , value: String ): HttpRequest.Builder setPostForm [androidJvm] fun setPostForm (form: Map < String , String ?>): HttpRequest.Builder Initializes a POST request with the given form data. setRange [androidJvm] fun setRange (range: LongRange ): HttpRequest.Builder Issue a byte range request. Use -1 to download until the end. Properties \u00b6 Name Summary allowUserInteraction [androidJvm] var allowUserInteraction : Boolean = false body [androidJvm] var body : HttpRequest.Body ? = null connectTimeout [androidJvm] var connectTimeout : Duration ? = null extras [androidJvm] var extras : Bundle headers [androidJvm] var headers : MutableMap < String , String > method [androidJvm] var method : HttpRequest.Method readTimeout [androidJvm] var readTimeout : Duration ? = null url [androidJvm] var url : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/#builder","text":"[androidJvm]\\ class Builder (url: String , method: HttpRequest.Method , headers: MutableMap < String , String >, body: HttpRequest.Body ?, extras: Bundle , connectTimeout: Duration ?, readTimeout: Duration ?, allowUserInteraction: Boolean )","title":"Builder"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/#functions","text":"Name Summary appendQueryParameter [androidJvm] fun appendQueryParameter (key: String , value: String ?): HttpRequest.Builder appendQueryParameters [androidJvm] fun appendQueryParameters (params: Map < String , String ?>): HttpRequest.Builder build [androidJvm] fun build (): HttpRequest setHeader [androidJvm] fun setHeader (key: String , value: String ): HttpRequest.Builder setPostForm [androidJvm] fun setPostForm (form: Map < String , String ?>): HttpRequest.Builder Initializes a POST request with the given form data. setRange [androidJvm] fun setRange (range: LongRange ): HttpRequest.Builder Issue a byte range request. Use -1 to download until the end.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/#properties","text":"Name Summary allowUserInteraction [androidJvm] var allowUserInteraction : Boolean = false body [androidJvm] var body : HttpRequest.Body ? = null connectTimeout [androidJvm] var connectTimeout : Duration ? = null extras [androidJvm] var extras : Bundle headers [androidJvm] var headers : MutableMap < String , String > method [androidJvm] var method : HttpRequest.Method readTimeout [androidJvm] var readTimeout : Duration ? = null url [androidJvm] var url : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/-builder/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Builder / Builder Builder \u00b6 [androidJvm]\\ fun Builder (url: String , method: HttpRequest.Method = Method.GET, headers: MutableMap < String , String > = mutableMapOf(), body: HttpRequest.Body ? = null, extras: Bundle = Bundle(), connectTimeout: Duration ? = null, readTimeout: Duration ? = null, allowUserInteraction: Boolean = false)","title":" builder"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/-builder/#builder","text":"[androidJvm]\\ fun Builder (url: String , method: HttpRequest.Method = Method.GET, headers: MutableMap < String , String > = mutableMapOf(), body: HttpRequest.Body ? = null, extras: Bundle = Bundle(), connectTimeout: Duration ? = null, readTimeout: Duration ? = null, allowUserInteraction: Boolean = false)","title":"Builder"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/allow-user-interaction/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Builder / allowUserInteraction allowUserInteraction \u00b6 [androidJvm]\\ var allowUserInteraction : Boolean = false","title":"Allow user interaction"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/allow-user-interaction/#allowuserinteraction","text":"[androidJvm]\\ var allowUserInteraction : Boolean = false","title":"allowUserInteraction"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/append-query-parameter/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Builder / appendQueryParameter appendQueryParameter \u00b6 [androidJvm]\\ fun appendQueryParameter (key: String , value: String ?): HttpRequest.Builder","title":"Append query parameter"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/append-query-parameter/#appendqueryparameter","text":"[androidJvm]\\ fun appendQueryParameter (key: String , value: String ?): HttpRequest.Builder","title":"appendQueryParameter"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/append-query-parameters/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Builder / appendQueryParameters appendQueryParameters \u00b6 [androidJvm]\\ fun appendQueryParameters (params: Map < String , String ?>): HttpRequest.Builder","title":"Append query parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/append-query-parameters/#appendqueryparameters","text":"[androidJvm]\\ fun appendQueryParameters (params: Map < String , String ?>): HttpRequest.Builder","title":"appendQueryParameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/body/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Builder / body body \u00b6 [androidJvm]\\ var body : HttpRequest.Body ? = null","title":"Body"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/body/#body","text":"[androidJvm]\\ var body : HttpRequest.Body ? = null","title":"body"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/build/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Builder / build build \u00b6 [androidJvm]\\ fun build (): HttpRequest","title":"Build"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/build/#build","text":"[androidJvm]\\ fun build (): HttpRequest","title":"build"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/connect-timeout/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Builder / connectTimeout connectTimeout \u00b6 [androidJvm]\\ var connectTimeout : Duration ? = null","title":"Connect timeout"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/connect-timeout/#connecttimeout","text":"[androidJvm]\\ var connectTimeout : Duration ? = null","title":"connectTimeout"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/extras/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Builder / extras extras \u00b6 [androidJvm]\\ var extras : Bundle","title":"Extras"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/extras/#extras","text":"[androidJvm]\\ var extras : Bundle","title":"extras"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/headers/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Builder / headers headers \u00b6 [androidJvm]\\ var headers : MutableMap < String , String >","title":"Headers"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/headers/#headers","text":"[androidJvm]\\ var headers : MutableMap < String , String >","title":"headers"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/method/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Builder / method method \u00b6 [androidJvm]\\ var method : HttpRequest.Method","title":"Method"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/method/#method","text":"[androidJvm]\\ var method : HttpRequest.Method","title":"method"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/read-timeout/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Builder / readTimeout readTimeout \u00b6 [androidJvm]\\ var readTimeout : Duration ? = null","title":"Read timeout"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/read-timeout/#readtimeout","text":"[androidJvm]\\ var readTimeout : Duration ? = null","title":"readTimeout"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/set-header/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Builder / setHeader setHeader \u00b6 [androidJvm]\\ fun setHeader (key: String , value: String ): HttpRequest.Builder","title":"Set header"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/set-header/#setheader","text":"[androidJvm]\\ fun setHeader (key: String , value: String ): HttpRequest.Builder","title":"setHeader"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/set-post-form/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Builder / setPostForm setPostForm \u00b6 [androidJvm]\\ fun setPostForm (form: Map < String , String ?>): HttpRequest.Builder Initializes a POST request with the given form data.","title":"Set post form"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/set-post-form/#setpostform","text":"[androidJvm]\\ fun setPostForm (form: Map < String , String ?>): HttpRequest.Builder Initializes a POST request with the given form data.","title":"setPostForm"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/set-range/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Builder / setRange setRange \u00b6 [androidJvm]\\ fun setRange (range: LongRange ): HttpRequest.Builder Issue a byte range request. Use -1 to download until the end.","title":"Set range"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/set-range/#setrange","text":"[androidJvm]\\ fun setRange (range: LongRange ): HttpRequest.Builder Issue a byte range request. Use -1 to download until the end.","title":"setRange"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/url/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Builder / url url \u00b6 [androidJvm]\\ var url : String","title":"Url"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-builder/url/#url","text":"[androidJvm]\\ var url : String","title":"url"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-companion/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary invoke [androidJvm] operator fun invoke (url: String , build: HttpRequest.Builder .() -> Unit ): HttpRequest","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-companion/#functions","text":"Name Summary invoke [androidJvm] operator fun invoke (url: String , build: HttpRequest.Builder .() -> Unit ): HttpRequest","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-companion/invoke/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Companion / invoke invoke \u00b6 [androidJvm]\\ operator fun invoke (url: String , build: HttpRequest.Builder .() -> Unit ): HttpRequest","title":"Invoke"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-companion/invoke/#invoke","text":"[androidJvm]\\ operator fun invoke (url: String , build: HttpRequest.Builder .() -> Unit ): HttpRequest","title":"invoke"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-method/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Method Method \u00b6 [androidJvm]\\ enum Method : Enum < HttpRequest.Method > , Serializable Supported HTTP methods. Entries \u00b6 PUT [androidJvm] PUT () POST [androidJvm] POST () PATCH [androidJvm] PATCH () HEAD [androidJvm] HEAD () GET [androidJvm] GET () DELETE [androidJvm] DELETE () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-method/#method","text":"[androidJvm]\\ enum Method : Enum < HttpRequest.Method > , Serializable Supported HTTP methods.","title":"Method"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-method/#entries","text":"PUT [androidJvm] PUT () POST [androidJvm] POST () PATCH [androidJvm] PATCH () HEAD [androidJvm] HEAD () GET [androidJvm] GET () DELETE [androidJvm] DELETE ()","title":"Entries"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-method/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-method/-d-e-l-e-t-e/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Method / DELETE DELETE \u00b6 [androidJvm]\\ DELETE () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-method/-d-e-l-e-t-e/#delete","text":"[androidJvm]\\ DELETE ()","title":"DELETE"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-method/-d-e-l-e-t-e/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-method/-g-e-t/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Method / GET GET \u00b6 [androidJvm]\\ GET () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-method/-g-e-t/#get","text":"[androidJvm]\\ GET ()","title":"GET"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-method/-g-e-t/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-method/-h-e-a-d/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Method / HEAD HEAD \u00b6 [androidJvm]\\ HEAD () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-method/-h-e-a-d/#head","text":"[androidJvm]\\ HEAD ()","title":"HEAD"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-method/-h-e-a-d/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-method/-p-a-t-c-h/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Method / PATCH PATCH \u00b6 [androidJvm]\\ PATCH () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-method/-p-a-t-c-h/#patch","text":"[androidJvm]\\ PATCH ()","title":"PATCH"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-method/-p-a-t-c-h/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-method/-p-o-s-t/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Method / POST POST \u00b6 [androidJvm]\\ POST () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-method/-p-o-s-t/#post","text":"[androidJvm]\\ POST ()","title":"POST"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-method/-p-o-s-t/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-method/-p-u-t/","text":"// shared / org.readium.r2.shared.util.http / HttpRequest / Method / PUT PUT \u00b6 [androidJvm]\\ PUT () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-method/-p-u-t/#put","text":"[androidJvm]\\ PUT ()","title":"PUT"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-request/-method/-p-u-t/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-response/","text":"// shared / org.readium.r2.shared.util.http / HttpResponse HttpResponse \u00b6 [androidJvm]\\ data class HttpResponse (url: String , statusCode: Int , headers: Map < String , List < String >>, mediaType: MediaType ) Represents a successful HTTP response received from a server. Parameters \u00b6 androidJvm url Final URL of the response. statusCode Response status code. headers HTTP response headers, indexed by their name. mediaType Media type sniffed from the Content-Type header and response body. Falls back on application/octet-stream. Constructors \u00b6 HttpResponse [androidJvm] fun HttpResponse (url: String , statusCode: Int , headers: Map < String , List < String >>, mediaType: MediaType ) Functions \u00b6 Name Summary valueForHeader [androidJvm] fun valueForHeader (name: String ): String ? Finds the first value of the first header matching the given name. In keeping with the HTTP RFC, HTTP header field names are case-insensitive. valuesForHeader [androidJvm] fun valuesForHeader (name: String ): List < String > Finds all the values of the first header matching the given name. In keeping with the HTTP RFC, HTTP header field names are case-insensitive. Properties \u00b6 Name Summary acceptsByteRanges [androidJvm] val acceptsByteRanges : Boolean Indicates whether this server supports byte range requests. contentLength [androidJvm] val contentLength : Long ? The expected content length for this response, when known. headers [androidJvm] val headers : Map < String , List < String >> mediaType [androidJvm] val mediaType : MediaType statusCode [androidJvm] val statusCode : Int url [androidJvm] val url : String","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-response/#httpresponse","text":"[androidJvm]\\ data class HttpResponse (url: String , statusCode: Int , headers: Map < String , List < String >>, mediaType: MediaType ) Represents a successful HTTP response received from a server.","title":"HttpResponse"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-response/#parameters","text":"androidJvm url Final URL of the response. statusCode Response status code. headers HTTP response headers, indexed by their name. mediaType Media type sniffed from the Content-Type header and response body. Falls back on application/octet-stream.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-response/#constructors","text":"HttpResponse [androidJvm] fun HttpResponse (url: String , statusCode: Int , headers: Map < String , List < String >>, mediaType: MediaType )","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-response/#functions","text":"Name Summary valueForHeader [androidJvm] fun valueForHeader (name: String ): String ? Finds the first value of the first header matching the given name. In keeping with the HTTP RFC, HTTP header field names are case-insensitive. valuesForHeader [androidJvm] fun valuesForHeader (name: String ): List < String > Finds all the values of the first header matching the given name. In keeping with the HTTP RFC, HTTP header field names are case-insensitive.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-response/#properties","text":"Name Summary acceptsByteRanges [androidJvm] val acceptsByteRanges : Boolean Indicates whether this server supports byte range requests. contentLength [androidJvm] val contentLength : Long ? The expected content length for this response, when known. headers [androidJvm] val headers : Map < String , List < String >> mediaType [androidJvm] val mediaType : MediaType statusCode [androidJvm] val statusCode : Int url [androidJvm] val url : String","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-response/-http-response/","text":"// shared / org.readium.r2.shared.util.http / HttpResponse / HttpResponse HttpResponse \u00b6 [androidJvm]\\ fun HttpResponse (url: String , statusCode: Int , headers: Map < String , List < String >>, mediaType: MediaType ) Parameters \u00b6 androidJvm url Final URL of the response. statusCode Response status code. headers HTTP response headers, indexed by their name. mediaType Media type sniffed from the Content-Type header and response body. Falls back on application/octet-stream.","title":" http response"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-response/-http-response/#httpresponse","text":"[androidJvm]\\ fun HttpResponse (url: String , statusCode: Int , headers: Map < String , List < String >>, mediaType: MediaType )","title":"HttpResponse"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-response/-http-response/#parameters","text":"androidJvm url Final URL of the response. statusCode Response status code. headers HTTP response headers, indexed by their name. mediaType Media type sniffed from the Content-Type header and response body. Falls back on application/octet-stream.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-response/accepts-byte-ranges/","text":"// shared / org.readium.r2.shared.util.http / HttpResponse / acceptsByteRanges acceptsByteRanges \u00b6 [androidJvm]\\ val acceptsByteRanges : Boolean Indicates whether this server supports byte range requests.","title":"Accepts byte ranges"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-response/accepts-byte-ranges/#acceptsbyteranges","text":"[androidJvm]\\ val acceptsByteRanges : Boolean Indicates whether this server supports byte range requests.","title":"acceptsByteRanges"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-response/content-length/","text":"// shared / org.readium.r2.shared.util.http / HttpResponse / contentLength contentLength \u00b6 [androidJvm]\\ val contentLength : Long ? The expected content length for this response, when known. Warning: For byte range requests, this will be the length of the chunk, not the full resource.","title":"Content length"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-response/content-length/#contentlength","text":"[androidJvm]\\ val contentLength : Long ? The expected content length for this response, when known. Warning: For byte range requests, this will be the length of the chunk, not the full resource.","title":"contentLength"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-response/headers/","text":"// shared / org.readium.r2.shared.util.http / HttpResponse / headers headers \u00b6 [androidJvm]\\ val headers : Map < String , List < String >>","title":"Headers"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-response/headers/#headers","text":"[androidJvm]\\ val headers : Map < String , List < String >>","title":"headers"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-response/media-type/","text":"// shared / org.readium.r2.shared.util.http / HttpResponse / mediaType mediaType \u00b6 [androidJvm]\\ val mediaType : MediaType","title":"Media type"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-response/media-type/#mediatype","text":"[androidJvm]\\ val mediaType : MediaType","title":"mediaType"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-response/status-code/","text":"// shared / org.readium.r2.shared.util.http / HttpResponse / statusCode statusCode \u00b6 [androidJvm]\\ val statusCode : Int","title":"Status code"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-response/status-code/#statuscode","text":"[androidJvm]\\ val statusCode : Int","title":"statusCode"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-response/url/","text":"// shared / org.readium.r2.shared.util.http / HttpResponse / url url \u00b6 [androidJvm]\\ val url : String","title":"Url"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-response/url/#url","text":"[androidJvm]\\ val url : String","title":"url"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-response/value-for-header/","text":"// shared / org.readium.r2.shared.util.http / HttpResponse / valueForHeader valueForHeader \u00b6 [androidJvm]\\ fun valueForHeader (name: String ): String ? Finds the first value of the first header matching the given name. In keeping with the HTTP RFC, HTTP header field names are case-insensitive.","title":"Value for header"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-response/value-for-header/#valueforheader","text":"[androidJvm]\\ fun valueForHeader (name: String ): String ? Finds the first value of the first header matching the given name. In keeping with the HTTP RFC, HTTP header field names are case-insensitive.","title":"valueForHeader"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-response/values-for-header/","text":"// shared / org.readium.r2.shared.util.http / HttpResponse / valuesForHeader valuesForHeader \u00b6 [androidJvm]\\ fun valuesForHeader (name: String ): List < String > Finds all the values of the first header matching the given name. In keeping with the HTTP RFC, HTTP header field names are case-insensitive.","title":"Values for header"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-response/values-for-header/#valuesforheader","text":"[androidJvm]\\ fun valuesForHeader (name: String ): List < String > Finds all the values of the first header matching the given name. In keeping with the HTTP RFC, HTTP header field names are case-insensitive.","title":"valuesForHeader"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-stream-response/","text":"// shared / org.readium.r2.shared.util.http / HttpStreamResponse HttpStreamResponse \u00b6 [androidJvm]\\ class HttpStreamResponse (response: HttpResponse , body: InputStream ) Properties \u00b6 Name Summary body [androidJvm] val body : InputStream response [androidJvm] val response : HttpResponse","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-stream-response/#httpstreamresponse","text":"[androidJvm]\\ class HttpStreamResponse (response: HttpResponse , body: InputStream )","title":"HttpStreamResponse"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-stream-response/#properties","text":"Name Summary body [androidJvm] val body : InputStream response [androidJvm] val response : HttpResponse","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-stream-response/-http-stream-response/","text":"// shared / org.readium.r2.shared.util.http / HttpStreamResponse / HttpStreamResponse HttpStreamResponse \u00b6 [androidJvm]\\ fun HttpStreamResponse (response: HttpResponse , body: InputStream )","title":" http stream response"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-stream-response/-http-stream-response/#httpstreamresponse","text":"[androidJvm]\\ fun HttpStreamResponse (response: HttpResponse , body: InputStream )","title":"HttpStreamResponse"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-stream-response/body/","text":"// shared / org.readium.r2.shared.util.http / HttpStreamResponse / body body \u00b6 [androidJvm]\\ val body : InputStream","title":"Body"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-stream-response/body/#body","text":"[androidJvm]\\ val body : InputStream","title":"body"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-stream-response/response/","text":"// shared / org.readium.r2.shared.util.http / HttpStreamResponse / response response \u00b6 [androidJvm]\\ val response : HttpResponse","title":"Response"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-http-stream-response/response/#response","text":"[androidJvm]\\ val response : HttpResponse","title":"response"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-problem-details/","text":"// shared / org.readium.r2.shared.util.http / ProblemDetails ProblemDetails \u00b6 [androidJvm]\\ data class ProblemDetails (title: String , type: String ?, status: Int ?, detail: String ?, instance: String ?) : Parcelable Problem Details for HTTP APIs. https://tools.ietf.org/html/rfc7807 Parameters \u00b6 androidJvm title A short, human-readable summary of the problem type. type A URI reference RFC3986 that identifies the problem type. This specification encourages that, when dereferenced, it provide human-readable documentation for the problem type. status The HTTP status code (RFC7231, Section 6) generated by the origin server for this occurrence of the problem. detail A human-readable explanation specific to this occurrence of the problem. instance A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced. Constructors \u00b6 ProblemDetails [androidJvm] fun ProblemDetails (title: String , type: String ? = null, status: Int ? = null, detail: String ? = null, instance: String ? = null) Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int ) Properties \u00b6 Name Summary detail [androidJvm] val detail : String ? = null instance [androidJvm] val instance : String ? = null status [androidJvm] val status : Int ? = null title [androidJvm] val title : String type [androidJvm] val type : String ? = null","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-problem-details/#problemdetails","text":"[androidJvm]\\ data class ProblemDetails (title: String , type: String ?, status: Int ?, detail: String ?, instance: String ?) : Parcelable Problem Details for HTTP APIs. https://tools.ietf.org/html/rfc7807","title":"ProblemDetails"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-problem-details/#parameters","text":"androidJvm title A short, human-readable summary of the problem type. type A URI reference RFC3986 that identifies the problem type. This specification encourages that, when dereferenced, it provide human-readable documentation for the problem type. status The HTTP status code (RFC7231, Section 6) generated by the origin server for this occurrence of the problem. detail A human-readable explanation specific to this occurrence of the problem. instance A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-problem-details/#constructors","text":"ProblemDetails [androidJvm] fun ProblemDetails (title: String , type: String ? = null, status: Int ? = null, detail: String ? = null, instance: String ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-problem-details/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-problem-details/#functions","text":"Name Summary describeContents [androidJvm] abstract fun describeContents (): Int writeToParcel [androidJvm] abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-problem-details/#properties","text":"Name Summary detail [androidJvm] val detail : String ? = null instance [androidJvm] val instance : String ? = null status [androidJvm] val status : Int ? = null title [androidJvm] val title : String type [androidJvm] val type : String ? = null","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-problem-details/-problem-details/","text":"// shared / org.readium.r2.shared.util.http / ProblemDetails / ProblemDetails ProblemDetails \u00b6 [androidJvm]\\ fun ProblemDetails (title: String , type: String ? = null, status: Int ? = null, detail: String ? = null, instance: String ? = null) Parameters \u00b6 androidJvm title A short, human-readable summary of the problem type. type A URI reference RFC3986 that identifies the problem type. This specification encourages that, when dereferenced, it provide human-readable documentation for the problem type. status The HTTP status code (RFC7231, Section 6) generated by the origin server for this occurrence of the problem. detail A human-readable explanation specific to this occurrence of the problem. instance A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.","title":" problem details"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-problem-details/-problem-details/#problemdetails","text":"[androidJvm]\\ fun ProblemDetails (title: String , type: String ? = null, status: Int ? = null, detail: String ? = null, instance: String ? = null)","title":"ProblemDetails"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-problem-details/-problem-details/#parameters","text":"androidJvm title A short, human-readable summary of the problem type. type A URI reference RFC3986 that identifies the problem type. This specification encourages that, when dereferenced, it provide human-readable documentation for the problem type. status The HTTP status code (RFC7231, Section 6) generated by the origin server for this occurrence of the problem. detail A human-readable explanation specific to this occurrence of the problem. instance A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-problem-details/detail/","text":"// shared / org.readium.r2.shared.util.http / ProblemDetails / detail detail \u00b6 [androidJvm]\\ val detail : String ? = null","title":"Detail"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-problem-details/detail/#detail","text":"[androidJvm]\\ val detail : String ? = null","title":"detail"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-problem-details/instance/","text":"// shared / org.readium.r2.shared.util.http / ProblemDetails / instance instance \u00b6 [androidJvm]\\ val instance : String ? = null","title":"Instance"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-problem-details/instance/#instance","text":"[androidJvm]\\ val instance : String ? = null","title":"instance"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-problem-details/status/","text":"// shared / org.readium.r2.shared.util.http / ProblemDetails / status status \u00b6 [androidJvm]\\ val status : Int ? = null","title":"Status"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-problem-details/status/#status","text":"[androidJvm]\\ val status : Int ? = null","title":"status"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-problem-details/title/","text":"// shared / org.readium.r2.shared.util.http / ProblemDetails / title title \u00b6 [androidJvm]\\ val title : String","title":"Title"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-problem-details/title/#title","text":"[androidJvm]\\ val title : String","title":"title"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-problem-details/type/","text":"// shared / org.readium.r2.shared.util.http / ProblemDetails / type type \u00b6 [androidJvm]\\ val type : String ? = null","title":"Type"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-problem-details/type/#type","text":"[androidJvm]\\ val type : String ? = null","title":"type"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-problem-details/-companion/","text":"// shared / org.readium.r2.shared.util.http / ProblemDetails / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject , warnings: WarningLogger ? = null): ProblemDetails ? Creates a ProblemDetails from its JSON representation.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-problem-details/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-problem-details/-companion/#functions","text":"Name Summary fromJSON [androidJvm] fun fromJSON (json: JSONObject , warnings: WarningLogger ? = null): ProblemDetails ? Creates a ProblemDetails from its JSON representation.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-problem-details/-companion/from-j-s-o-n/","text":"// shared / org.readium.r2.shared.util.http / ProblemDetails / Companion / fromJSON fromJSON \u00b6 [androidJvm]\\ fun fromJSON (json: JSONObject , warnings: WarningLogger ? = null): ProblemDetails ? Creates a ProblemDetails from its JSON representation.","title":"From j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.util.http/-problem-details/-companion/from-j-s-o-n/#fromjson","text":"[androidJvm]\\ fun fromJSON (json: JSONObject , warnings: WarningLogger ? = null): ProblemDetails ? Creates a ProblemDetails from its JSON representation.","title":"fromJSON"},{"location":"readium/shared/shared/org.readium.r2.shared.util.io/","text":"// shared / org.readium.r2.shared.util.io Package org.readium.r2.shared.util.io \u00b6 Types \u00b6 Name Summary CountingInputStream [androidJvm] class CountingInputStream (inputStream: InputStream ) : FilterInputStream An InputStream counting the number of bytes read from a wrapped inputStream .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.io/#package-orgreadiumr2sharedutilio","text":"","title":"Package org.readium.r2.shared.util.io"},{"location":"readium/shared/shared/org.readium.r2.shared.util.io/#types","text":"Name Summary CountingInputStream [androidJvm] class CountingInputStream (inputStream: InputStream ) : FilterInputStream An InputStream counting the number of bytes read from a wrapped inputStream .","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.util.io/-counting-input-stream/","text":"// shared / org.readium.r2.shared.util.io / CountingInputStream CountingInputStream \u00b6 [androidJvm]\\ class CountingInputStream (inputStream: InputStream ) : FilterInputStream An InputStream counting the number of bytes read from a wrapped inputStream . Constructors \u00b6 CountingInputStream [androidJvm] fun CountingInputStream (inputStream: InputStream ) Functions \u00b6 Name Summary available [androidJvm] open override fun available (): Int close [androidJvm] open override fun close () mark [androidJvm] open override fun mark (readlimit: Int ) markSupported [androidJvm] open override fun markSupported (): Boolean read [androidJvm] open override fun read (): Int open override fun read (p0: ByteArray ): Int open override fun read (b: ByteArray ?, off: Int , len: Int ): Int readRange [androidJvm] suspend fun readRange (range: LongRange ): ByteArray reset [androidJvm] open override fun reset () skip [androidJvm] open override fun skip (n: Long ): Long Properties \u00b6 Name Summary count [androidJvm] var count : Long = 0 in [androidJvm] val in : InputStream","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.io/-counting-input-stream/#countinginputstream","text":"[androidJvm]\\ class CountingInputStream (inputStream: InputStream ) : FilterInputStream An InputStream counting the number of bytes read from a wrapped inputStream .","title":"CountingInputStream"},{"location":"readium/shared/shared/org.readium.r2.shared.util.io/-counting-input-stream/#constructors","text":"CountingInputStream [androidJvm] fun CountingInputStream (inputStream: InputStream )","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.util.io/-counting-input-stream/#functions","text":"Name Summary available [androidJvm] open override fun available (): Int close [androidJvm] open override fun close () mark [androidJvm] open override fun mark (readlimit: Int ) markSupported [androidJvm] open override fun markSupported (): Boolean read [androidJvm] open override fun read (): Int open override fun read (p0: ByteArray ): Int open override fun read (b: ByteArray ?, off: Int , len: Int ): Int readRange [androidJvm] suspend fun readRange (range: LongRange ): ByteArray reset [androidJvm] open override fun reset () skip [androidJvm] open override fun skip (n: Long ): Long","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.io/-counting-input-stream/#properties","text":"Name Summary count [androidJvm] var count : Long = 0 in [androidJvm] val in : InputStream","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.io/-counting-input-stream/-counting-input-stream/","text":"// shared / org.readium.r2.shared.util.io / CountingInputStream / CountingInputStream CountingInputStream \u00b6 [androidJvm]\\ fun CountingInputStream (inputStream: InputStream )","title":" counting input stream"},{"location":"readium/shared/shared/org.readium.r2.shared.util.io/-counting-input-stream/-counting-input-stream/#countinginputstream","text":"[androidJvm]\\ fun CountingInputStream (inputStream: InputStream )","title":"CountingInputStream"},{"location":"readium/shared/shared/org.readium.r2.shared.util.io/-counting-input-stream/count/","text":"// shared / org.readium.r2.shared.util.io / CountingInputStream / count count \u00b6 [androidJvm]\\ var count : Long = 0","title":"Count"},{"location":"readium/shared/shared/org.readium.r2.shared.util.io/-counting-input-stream/count/#count","text":"[androidJvm]\\ var count : Long = 0","title":"count"},{"location":"readium/shared/shared/org.readium.r2.shared.util.io/-counting-input-stream/mark/","text":"// shared / org.readium.r2.shared.util.io / CountingInputStream / mark mark \u00b6 [androidJvm]\\ open override fun mark (readlimit: Int )","title":"Mark"},{"location":"readium/shared/shared/org.readium.r2.shared.util.io/-counting-input-stream/mark/#mark","text":"[androidJvm]\\ open override fun mark (readlimit: Int )","title":"mark"},{"location":"readium/shared/shared/org.readium.r2.shared.util.io/-counting-input-stream/read-range/","text":"// shared / org.readium.r2.shared.util.io / CountingInputStream / readRange readRange \u00b6 [androidJvm]\\ suspend fun readRange (range: LongRange ): ByteArray","title":"Read range"},{"location":"readium/shared/shared/org.readium.r2.shared.util.io/-counting-input-stream/read-range/#readrange","text":"[androidJvm]\\ suspend fun readRange (range: LongRange ): ByteArray","title":"readRange"},{"location":"readium/shared/shared/org.readium.r2.shared.util.io/-counting-input-stream/read/","text":"// shared / org.readium.r2.shared.util.io / CountingInputStream / read read \u00b6 [androidJvm]\\ open override fun read (): Int open override fun read (b: ByteArray ?, off: Int , len: Int ): Int","title":"Read"},{"location":"readium/shared/shared/org.readium.r2.shared.util.io/-counting-input-stream/read/#read","text":"[androidJvm]\\ open override fun read (): Int open override fun read (b: ByteArray ?, off: Int , len: Int ): Int","title":"read"},{"location":"readium/shared/shared/org.readium.r2.shared.util.io/-counting-input-stream/reset/","text":"// shared / org.readium.r2.shared.util.io / CountingInputStream / reset reset \u00b6 [androidJvm]\\ open override fun reset ()","title":"Reset"},{"location":"readium/shared/shared/org.readium.r2.shared.util.io/-counting-input-stream/reset/#reset","text":"[androidJvm]\\ open override fun reset ()","title":"reset"},{"location":"readium/shared/shared/org.readium.r2.shared.util.io/-counting-input-stream/skip/","text":"// shared / org.readium.r2.shared.util.io / CountingInputStream / skip skip \u00b6 [androidJvm]\\ open override fun skip (n: Long ): Long","title":"Skip"},{"location":"readium/shared/shared/org.readium.r2.shared.util.io/-counting-input-stream/skip/#skip","text":"[androidJvm]\\ open override fun skip (n: Long ): Long","title":"skip"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/","text":"// shared / org.readium.r2.shared.util.logging Package org.readium.r2.shared.util.logging \u00b6 Types \u00b6 Name Summary ConsoleWarningLogger [androidJvm] class ConsoleWarningLogger : WarningLogger Implementation of a WarningLogger printing the warnings to the console. JsonWarning [androidJvm] data class JsonWarning (modelClass: Class <*>, reason: String , severity: Warning.SeverityLevel , json: JSONObject ?) : Warning Warning raised when parsing a model object from its JSON representation fails. ListWarningLogger [androidJvm] class ListWarningLogger : WarningLogger Implementation of a WarningLogger that accumulates the warnings in a list, to be used as a convenience by third-party apps. Warning [androidJvm] interface Warning Represents a non-fatal warning message that can be raised by a Readium library. WarningLogger [androidJvm] interface WarningLogger Interface to be implemented by third-party apps if they want to observe warnings raised, for example, during the parsing of a Publication. Functions \u00b6 Name Summary log [androidJvm] fun WarningLogger . log (modelClass: Class <*>, reason: String , json: JSONObject ? = null, severity: Warning.SeverityLevel = Warning.SeverityLevel.MAJOR) Raises a JsonWarning .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/#package-orgreadiumr2sharedutillogging","text":"","title":"Package org.readium.r2.shared.util.logging"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/#types","text":"Name Summary ConsoleWarningLogger [androidJvm] class ConsoleWarningLogger : WarningLogger Implementation of a WarningLogger printing the warnings to the console. JsonWarning [androidJvm] data class JsonWarning (modelClass: Class <*>, reason: String , severity: Warning.SeverityLevel , json: JSONObject ?) : Warning Warning raised when parsing a model object from its JSON representation fails. ListWarningLogger [androidJvm] class ListWarningLogger : WarningLogger Implementation of a WarningLogger that accumulates the warnings in a list, to be used as a convenience by third-party apps. Warning [androidJvm] interface Warning Represents a non-fatal warning message that can be raised by a Readium library. WarningLogger [androidJvm] interface WarningLogger Interface to be implemented by third-party apps if they want to observe warnings raised, for example, during the parsing of a Publication.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/#functions","text":"Name Summary log [androidJvm] fun WarningLogger . log (modelClass: Class <*>, reason: String , json: JSONObject ? = null, severity: Warning.SeverityLevel = Warning.SeverityLevel.MAJOR) Raises a JsonWarning .","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/log/","text":"// shared / org.readium.r2.shared.util.logging / log log \u00b6 [androidJvm]\\ fun WarningLogger . log (modelClass: Class <*>, reason: String , json: JSONObject ? = null, severity: Warning.SeverityLevel = Warning.SeverityLevel.MAJOR) Raises a JsonWarning . Parameters \u00b6 androidJvm modelClass Class of the model object to be parsed. reason Details about the failure. severity The severity level of this warning. json Source JSONObject .","title":"Log"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/log/#log","text":"[androidJvm]\\ fun WarningLogger . log (modelClass: Class <*>, reason: String , json: JSONObject ? = null, severity: Warning.SeverityLevel = Warning.SeverityLevel.MAJOR) Raises a JsonWarning .","title":"log"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/log/#parameters","text":"androidJvm modelClass Class of the model object to be parsed. reason Details about the failure. severity The severity level of this warning. json Source JSONObject .","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-console-warning-logger/","text":"// shared / org.readium.r2.shared.util.logging / ConsoleWarningLogger ConsoleWarningLogger \u00b6 [androidJvm]\\ class ConsoleWarningLogger : WarningLogger Implementation of a WarningLogger printing the warnings to the console. Constructors \u00b6 ConsoleWarningLogger [androidJvm] fun ConsoleWarningLogger () Functions \u00b6 Name Summary log [androidJvm] open override fun log (warning: Warning ) Notifies that a warning occurred.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-console-warning-logger/#consolewarninglogger","text":"[androidJvm]\\ class ConsoleWarningLogger : WarningLogger Implementation of a WarningLogger printing the warnings to the console.","title":"ConsoleWarningLogger"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-console-warning-logger/#constructors","text":"ConsoleWarningLogger [androidJvm] fun ConsoleWarningLogger ()","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-console-warning-logger/#functions","text":"Name Summary log [androidJvm] open override fun log (warning: Warning ) Notifies that a warning occurred.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-console-warning-logger/-console-warning-logger/","text":"// shared / org.readium.r2.shared.util.logging / ConsoleWarningLogger / ConsoleWarningLogger ConsoleWarningLogger \u00b6 [androidJvm]\\ fun ConsoleWarningLogger ()","title":" console warning logger"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-console-warning-logger/-console-warning-logger/#consolewarninglogger","text":"[androidJvm]\\ fun ConsoleWarningLogger ()","title":"ConsoleWarningLogger"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-console-warning-logger/log/","text":"// shared / org.readium.r2.shared.util.logging / ConsoleWarningLogger / log log \u00b6 [androidJvm]\\ open override fun log (warning: Warning ) Notifies that a warning occurred.","title":"Log"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-console-warning-logger/log/#log","text":"[androidJvm]\\ open override fun log (warning: Warning ) Notifies that a warning occurred.","title":"log"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-json-warning/","text":"// shared / org.readium.r2.shared.util.logging / JsonWarning JsonWarning \u00b6 [androidJvm]\\ data class JsonWarning (modelClass: Class <*>, reason: String , severity: Warning.SeverityLevel , json: JSONObject ?) : Warning Warning raised when parsing a model object from its JSON representation fails. Parameters \u00b6 androidJvm modelClass Class of the model object to be parsed. reason Details about the failure. json Source JSONObject . Constructors \u00b6 JsonWarning [androidJvm] fun JsonWarning (modelClass: Class <*>, reason: String , severity: Warning.SeverityLevel , json: JSONObject ? = null) Properties \u00b6 Name Summary json [androidJvm] val json : JSONObject ? = null message [androidJvm] open override val message : String Localized user-facing message describing the issue. modelClass [androidJvm] val modelClass : Class <*> reason [androidJvm] val reason : String severity [androidJvm] open override val severity : Warning.SeverityLevel Indicates the severity level of this warning. tag [androidJvm] open override val tag : String Tag used to group similar warnings together.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-json-warning/#jsonwarning","text":"[androidJvm]\\ data class JsonWarning (modelClass: Class <*>, reason: String , severity: Warning.SeverityLevel , json: JSONObject ?) : Warning Warning raised when parsing a model object from its JSON representation fails.","title":"JsonWarning"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-json-warning/#parameters","text":"androidJvm modelClass Class of the model object to be parsed. reason Details about the failure. json Source JSONObject .","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-json-warning/#constructors","text":"JsonWarning [androidJvm] fun JsonWarning (modelClass: Class <*>, reason: String , severity: Warning.SeverityLevel , json: JSONObject ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-json-warning/#properties","text":"Name Summary json [androidJvm] val json : JSONObject ? = null message [androidJvm] open override val message : String Localized user-facing message describing the issue. modelClass [androidJvm] val modelClass : Class <*> reason [androidJvm] val reason : String severity [androidJvm] open override val severity : Warning.SeverityLevel Indicates the severity level of this warning. tag [androidJvm] open override val tag : String Tag used to group similar warnings together.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-json-warning/-json-warning/","text":"// shared / org.readium.r2.shared.util.logging / JsonWarning / JsonWarning JsonWarning \u00b6 [androidJvm]\\ fun JsonWarning (modelClass: Class <*>, reason: String , severity: Warning.SeverityLevel , json: JSONObject ? = null) Parameters \u00b6 androidJvm modelClass Class of the model object to be parsed. reason Details about the failure. json Source JSONObject .","title":" json warning"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-json-warning/-json-warning/#jsonwarning","text":"[androidJvm]\\ fun JsonWarning (modelClass: Class <*>, reason: String , severity: Warning.SeverityLevel , json: JSONObject ? = null)","title":"JsonWarning"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-json-warning/-json-warning/#parameters","text":"androidJvm modelClass Class of the model object to be parsed. reason Details about the failure. json Source JSONObject .","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-json-warning/json/","text":"// shared / org.readium.r2.shared.util.logging / JsonWarning / json json \u00b6 [androidJvm]\\ val json : JSONObject ? = null","title":"Json"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-json-warning/json/#json","text":"[androidJvm]\\ val json : JSONObject ? = null","title":"json"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-json-warning/message/","text":"// shared / org.readium.r2.shared.util.logging / JsonWarning / message message \u00b6 [androidJvm]\\ open override val message : String Localized user-facing message describing the issue.","title":"Message"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-json-warning/message/#message","text":"[androidJvm]\\ open override val message : String Localized user-facing message describing the issue.","title":"message"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-json-warning/model-class/","text":"// shared / org.readium.r2.shared.util.logging / JsonWarning / modelClass modelClass \u00b6 [androidJvm]\\ val modelClass : Class <*>","title":"Model class"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-json-warning/model-class/#modelclass","text":"[androidJvm]\\ val modelClass : Class <*>","title":"modelClass"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-json-warning/reason/","text":"// shared / org.readium.r2.shared.util.logging / JsonWarning / reason reason \u00b6 [androidJvm]\\ val reason : String","title":"Reason"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-json-warning/reason/#reason","text":"[androidJvm]\\ val reason : String","title":"reason"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-json-warning/severity/","text":"// shared / org.readium.r2.shared.util.logging / JsonWarning / severity severity \u00b6 [androidJvm]\\ open override val severity : Warning.SeverityLevel Indicates the severity level of this warning.","title":"Severity"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-json-warning/severity/#severity","text":"[androidJvm]\\ open override val severity : Warning.SeverityLevel Indicates the severity level of this warning.","title":"severity"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-json-warning/tag/","text":"// shared / org.readium.r2.shared.util.logging / JsonWarning / tag tag \u00b6 [androidJvm]\\ open override val tag : String Tag used to group similar warnings together. For example json, metadata, etc.","title":"Tag"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-json-warning/tag/#tag","text":"[androidJvm]\\ open override val tag : String Tag used to group similar warnings together. For example json, metadata, etc.","title":"tag"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-list-warning-logger/","text":"// shared / org.readium.r2.shared.util.logging / ListWarningLogger ListWarningLogger \u00b6 [androidJvm]\\ class ListWarningLogger : WarningLogger Implementation of a WarningLogger that accumulates the warnings in a list, to be used as a convenience by third-party apps. Constructors \u00b6 ListWarningLogger [androidJvm] fun ListWarningLogger () Functions \u00b6 Name Summary log [androidJvm] open override fun log (warning: Warning ) Notifies that a warning occurred. Properties \u00b6 Name Summary warnings [androidJvm] val warnings : List < Warning > The list of accumulated Warning s.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-list-warning-logger/#listwarninglogger","text":"[androidJvm]\\ class ListWarningLogger : WarningLogger Implementation of a WarningLogger that accumulates the warnings in a list, to be used as a convenience by third-party apps.","title":"ListWarningLogger"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-list-warning-logger/#constructors","text":"ListWarningLogger [androidJvm] fun ListWarningLogger ()","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-list-warning-logger/#functions","text":"Name Summary log [androidJvm] open override fun log (warning: Warning ) Notifies that a warning occurred.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-list-warning-logger/#properties","text":"Name Summary warnings [androidJvm] val warnings : List < Warning > The list of accumulated Warning s.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-list-warning-logger/-list-warning-logger/","text":"// shared / org.readium.r2.shared.util.logging / ListWarningLogger / ListWarningLogger ListWarningLogger \u00b6 [androidJvm]\\ fun ListWarningLogger ()","title":" list warning logger"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-list-warning-logger/-list-warning-logger/#listwarninglogger","text":"[androidJvm]\\ fun ListWarningLogger ()","title":"ListWarningLogger"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-list-warning-logger/log/","text":"// shared / org.readium.r2.shared.util.logging / ListWarningLogger / log log \u00b6 [androidJvm]\\ open override fun log (warning: Warning ) Notifies that a warning occurred.","title":"Log"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-list-warning-logger/log/#log","text":"[androidJvm]\\ open override fun log (warning: Warning ) Notifies that a warning occurred.","title":"log"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-list-warning-logger/warnings/","text":"// shared / org.readium.r2.shared.util.logging / ListWarningLogger / warnings warnings \u00b6 [androidJvm]\\ val warnings : List < Warning > The list of accumulated Warning s.","title":"Warnings"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-list-warning-logger/warnings/#warnings","text":"[androidJvm]\\ val warnings : List < Warning > The list of accumulated Warning s.","title":"warnings"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning/","text":"// shared / org.readium.r2.shared.util.logging / Warning Warning \u00b6 [androidJvm]\\ interface Warning Represents a non-fatal warning message that can be raised by a Readium library. For example, while parsing an EPUB we, might want to report issues in the publication without failing the whole parsing. Types \u00b6 Name Summary SeverityLevel [androidJvm] enum SeverityLevel : Enum < Warning.SeverityLevel > Indicates how the user experience might be affected by a warning. Properties \u00b6 Name Summary message [androidJvm] abstract val message : String Localized user-facing message describing the issue. severity [androidJvm] abstract val severity : Warning.SeverityLevel Indicates the severity level of this warning. tag [androidJvm] abstract val tag : String Tag used to group similar warnings together. Inheritors \u00b6 Name JsonWarning","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning/#warning","text":"[androidJvm]\\ interface Warning Represents a non-fatal warning message that can be raised by a Readium library. For example, while parsing an EPUB we, might want to report issues in the publication without failing the whole parsing.","title":"Warning"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning/#types","text":"Name Summary SeverityLevel [androidJvm] enum SeverityLevel : Enum < Warning.SeverityLevel > Indicates how the user experience might be affected by a warning.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning/#properties","text":"Name Summary message [androidJvm] abstract val message : String Localized user-facing message describing the issue. severity [androidJvm] abstract val severity : Warning.SeverityLevel Indicates the severity level of this warning. tag [androidJvm] abstract val tag : String Tag used to group similar warnings together.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning/#inheritors","text":"Name JsonWarning","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning/message/","text":"// shared / org.readium.r2.shared.util.logging / Warning / message message \u00b6 [androidJvm]\\ abstract val message : String Localized user-facing message describing the issue.","title":"Message"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning/message/#message","text":"[androidJvm]\\ abstract val message : String Localized user-facing message describing the issue.","title":"message"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning/severity/","text":"// shared / org.readium.r2.shared.util.logging / Warning / severity severity \u00b6 [androidJvm]\\ abstract val severity : Warning.SeverityLevel Indicates the severity level of this warning.","title":"Severity"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning/severity/#severity","text":"[androidJvm]\\ abstract val severity : Warning.SeverityLevel Indicates the severity level of this warning.","title":"severity"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning/tag/","text":"// shared / org.readium.r2.shared.util.logging / Warning / tag tag \u00b6 [androidJvm]\\ abstract val tag : String Tag used to group similar warnings together. For example json, metadata, etc.","title":"Tag"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning/tag/#tag","text":"[androidJvm]\\ abstract val tag : String Tag used to group similar warnings together. For example json, metadata, etc.","title":"tag"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning/-severity-level/","text":"// shared / org.readium.r2.shared.util.logging / Warning / SeverityLevel SeverityLevel \u00b6 [androidJvm]\\ enum SeverityLevel : Enum < Warning.SeverityLevel > Indicates how the user experience might be affected by a warning. Entries \u00b6 MAJOR [androidJvm] MAJOR () MODERATE [androidJvm] MODERATE () MINOR [androidJvm] MINOR () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning/-severity-level/#severitylevel","text":"[androidJvm]\\ enum SeverityLevel : Enum < Warning.SeverityLevel > Indicates how the user experience might be affected by a warning.","title":"SeverityLevel"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning/-severity-level/#entries","text":"MAJOR [androidJvm] MAJOR () MODERATE [androidJvm] MODERATE () MINOR [androidJvm] MINOR ()","title":"Entries"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning/-severity-level/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning/-severity-level/-m-a-j-o-r/","text":"// shared / org.readium.r2.shared.util.logging / Warning / SeverityLevel / MAJOR MAJOR \u00b6 [androidJvm]\\ MAJOR () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning/-severity-level/-m-a-j-o-r/#major","text":"[androidJvm]\\ MAJOR ()","title":"MAJOR"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning/-severity-level/-m-a-j-o-r/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning/-severity-level/-m-i-n-o-r/","text":"// shared / org.readium.r2.shared.util.logging / Warning / SeverityLevel / MINOR MINOR \u00b6 [androidJvm]\\ MINOR () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning/-severity-level/-m-i-n-o-r/#minor","text":"[androidJvm]\\ MINOR ()","title":"MINOR"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning/-severity-level/-m-i-n-o-r/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning/-severity-level/-m-o-d-e-r-a-t-e/","text":"// shared / org.readium.r2.shared.util.logging / Warning / SeverityLevel / MODERATE MODERATE \u00b6 [androidJvm]\\ MODERATE () Properties \u00b6 Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning/-severity-level/-m-o-d-e-r-a-t-e/#moderate","text":"[androidJvm]\\ MODERATE ()","title":"MODERATE"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning/-severity-level/-m-o-d-e-r-a-t-e/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning-logger/","text":"// shared / org.readium.r2.shared.util.logging / WarningLogger WarningLogger \u00b6 [androidJvm]\\ interface WarningLogger Interface to be implemented by third-party apps if they want to observe warnings raised, for example, during the parsing of a Publication. Functions \u00b6 Name Summary log [androidJvm] abstract fun log (warning: Warning ) Notifies that a warning occurred. Inheritors \u00b6 Name ListWarningLogger ConsoleWarningLogger Extensions \u00b6 Name Summary log [androidJvm] fun WarningLogger . log (modelClass: Class <*>, reason: String , json: JSONObject ? = null, severity: Warning.SeverityLevel = Warning.SeverityLevel.MAJOR) Raises a JsonWarning .","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning-logger/#warninglogger","text":"[androidJvm]\\ interface WarningLogger Interface to be implemented by third-party apps if they want to observe warnings raised, for example, during the parsing of a Publication.","title":"WarningLogger"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning-logger/#functions","text":"Name Summary log [androidJvm] abstract fun log (warning: Warning ) Notifies that a warning occurred.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning-logger/#inheritors","text":"Name ListWarningLogger ConsoleWarningLogger","title":"Inheritors"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning-logger/#extensions","text":"Name Summary log [androidJvm] fun WarningLogger . log (modelClass: Class <*>, reason: String , json: JSONObject ? = null, severity: Warning.SeverityLevel = Warning.SeverityLevel.MAJOR) Raises a JsonWarning .","title":"Extensions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning-logger/log/","text":"// shared / org.readium.r2.shared.util.logging / WarningLogger / log log \u00b6 [androidJvm]\\ abstract fun log (warning: Warning ) Notifies that a warning occurred.","title":"Log"},{"location":"readium/shared/shared/org.readium.r2.shared.util.logging/-warning-logger/log/#log","text":"[androidJvm]\\ abstract fun log (warning: Warning ) Notifies that a warning occurred.","title":"log"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/","text":"// shared / org.readium.r2.shared.util.mediatype Package org.readium.r2.shared.util.mediatype \u00b6 Types \u00b6 Name Summary MediaType [androidJvm] class MediaType (string: String , name: String ?, fileExtension: String ?) Represents a document format, identified by a unique RFC 6838 media type. Sniffer [androidJvm] typealias Sniffer = suspend (context: SnifferContext ) -> MediaType ? Determines if the provided content matches a known media type. SnifferContext [androidJvm] class SnifferContext A companion type of Sniffer holding the type hints (file extensions, media types) and providing an access to the file content. Sniffers [androidJvm] object Sniffers Default media type sniffers provided by Readium. Functions \u00b6 Name Summary sniffMediaType [androidJvm] suspend fun Response. sniffMediaType (mediaTypes: List < String > = emptyList(), fileExtensions: List < String > = emptyList(), sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves the format for this Response, with optional extra file extension and media type hints. [androidJvm] suspend fun HttpURLConnection . sniffMediaType (bytes: () -> ByteArray ? = null, mediaTypes: List < String > = emptyList(), fileExtensions: List < String > = emptyList(), sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves the format for this HttpURLConnection , with optional extra file extension and media type hints.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/#package-orgreadiumr2sharedutilmediatype","text":"","title":"Package org.readium.r2.shared.util.mediatype"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/#types","text":"Name Summary MediaType [androidJvm] class MediaType (string: String , name: String ?, fileExtension: String ?) Represents a document format, identified by a unique RFC 6838 media type. Sniffer [androidJvm] typealias Sniffer = suspend (context: SnifferContext ) -> MediaType ? Determines if the provided content matches a known media type. SnifferContext [androidJvm] class SnifferContext A companion type of Sniffer holding the type hints (file extensions, media types) and providing an access to the file content. Sniffers [androidJvm] object Sniffers Default media type sniffers provided by Readium.","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/#functions","text":"Name Summary sniffMediaType [androidJvm] suspend fun Response. sniffMediaType (mediaTypes: List < String > = emptyList(), fileExtensions: List < String > = emptyList(), sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves the format for this Response, with optional extra file extension and media type hints. [androidJvm] suspend fun HttpURLConnection . sniffMediaType (bytes: () -> ByteArray ? = null, mediaTypes: List < String > = emptyList(), fileExtensions: List < String > = emptyList(), sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves the format for this HttpURLConnection , with optional extra file extension and media type hints.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/sniff-media-type/","text":"// shared / org.readium.r2.shared.util.mediatype / sniffMediaType sniffMediaType \u00b6 [androidJvm]\\ suspend fun HttpURLConnection . sniffMediaType (bytes: () -> ByteArray ? = null, mediaTypes: List < String > = emptyList(), fileExtensions: List < String > = emptyList(), sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves the format for this HttpURLConnection , with optional extra file extension and media type hints. [androidJvm]\\ suspend fun Response. sniffMediaType (mediaTypes: List < String > = emptyList(), fileExtensions: List < String > = emptyList(), sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves the format for this Response, with optional extra file extension and media type hints.","title":"Sniff media type"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/sniff-media-type/#sniffmediatype","text":"[androidJvm]\\ suspend fun HttpURLConnection . sniffMediaType (bytes: () -> ByteArray ? = null, mediaTypes: List < String > = emptyList(), fileExtensions: List < String > = emptyList(), sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves the format for this HttpURLConnection , with optional extra file extension and media type hints. [androidJvm]\\ suspend fun Response. sniffMediaType (mediaTypes: List < String > = emptyList(), fileExtensions: List < String > = emptyList(), sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves the format for this Response, with optional extra file extension and media type hints.","title":"sniffMediaType"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType MediaType \u00b6 [androidJvm]\\ class MediaType (string: String , name: String ?, fileExtension: String ?) Represents a document format, identified by a unique RFC 6838 media type. MediaType handles: components parsing \u2013 eg. type, subtype and parameters, media types comparison. Comparing media types is more complicated than it looks, since they can contain parameters, such as charset=utf-8. We can't ignore them because some formats use parameters in their media type, for example application/atom+xml;profile=opds-catalog for an OPDS 1 catalog. Specification: https://tools.ietf.org/html/rfc6838 Parameters \u00b6 androidJvm string String representation for this media type. name A human readable name identifying the media type, which may be presented to the user. fileExtension The default file extension to use for this media type. Constructors \u00b6 MediaType [androidJvm] fun MediaType (string: String , name: String ? = null, fileExtension: String ? = null) Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary canonicalMediaType [androidJvm] suspend fun canonicalMediaType (): MediaType Returns the canonical version of this media type, if it is known. contains [androidJvm] fun contains (other: String ?): Boolean fun contains (other: MediaType ?): Boolean Returns whether the given other media type is included in this media type. equals [androidJvm] open operator override fun equals (other: Any ?): Boolean Returns whether two media types are equal, checking the type, subtype and parameters. Parameters order is ignored. hashCode [androidJvm] open override fun hashCode (): Int matches [androidJvm] fun matches (other: String ?): Boolean fun matches (other: MediaType ?): Boolean Returns whether this media type and other are the same, ignoring parameters that are not in both media types. matchesAny [androidJvm] fun matchesAny (vararg others: String ?): Boolean fun matchesAny (vararg others: MediaType ?): Boolean Returns whether this media type matches any of the others media types. toString [androidJvm] open override fun toString (): String The string representation of this media type. Properties \u00b6 Name Summary charset [androidJvm] val charset : Charset ? Encoding as declared in the charset parameter, if there's any. fileExtension [androidJvm] val fileExtension : String ? = null isAudio [androidJvm] val isAudio : Boolean Returns whether this media type is of an audio clip. isBitmap [androidJvm] val isBitmap : Boolean Returns whether this media type is of a bitmap image, so excluding vectorial formats. isHtml [androidJvm] val isHtml : Boolean Returns whether this media type is of an HTML document. isJson [androidJvm] val isJson : Boolean Returns whether this media type is structured as a JSON file. isOpds [androidJvm] val isOpds : Boolean Returns whether this media type is of an OPDS feed. isPublication [androidJvm] val isPublication : Boolean Returns whether this media type is of a publication file. isRwpm [androidJvm] val isRwpm : Boolean Returns whether this media type is of a Readium Web Publication Manifest. isVideo [androidJvm] val isVideo : Boolean Returns whether this media type is of a video clip. isZip [androidJvm] val isZip : Boolean Returns whether this media type is structured as a ZIP archive. name [androidJvm] val name : String ? = null parameters [androidJvm] val parameters : Map < String , String > The parameters in the media type, such as charset=utf-8. structuredSyntaxSuffix [androidJvm] val structuredSyntaxSuffix : String ? Structured syntax suffix, e.g. +zip in application/epub+zip. subtype [androidJvm] val subtype : String The subtype component, e.g. epub+zip in application/epub+zip. type [androidJvm] val type : String The type component, e.g. application in application/epub+zip.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/#mediatype","text":"[androidJvm]\\ class MediaType (string: String , name: String ?, fileExtension: String ?) Represents a document format, identified by a unique RFC 6838 media type. MediaType handles: components parsing \u2013 eg. type, subtype and parameters, media types comparison. Comparing media types is more complicated than it looks, since they can contain parameters, such as charset=utf-8. We can't ignore them because some formats use parameters in their media type, for example application/atom+xml;profile=opds-catalog for an OPDS 1 catalog. Specification: https://tools.ietf.org/html/rfc6838","title":"MediaType"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/#parameters","text":"androidJvm string String representation for this media type. name A human readable name identifying the media type, which may be presented to the user. fileExtension The default file extension to use for this media type.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/#constructors","text":"MediaType [androidJvm] fun MediaType (string: String , name: String ? = null, fileExtension: String ? = null)","title":"Constructors"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/#functions","text":"Name Summary canonicalMediaType [androidJvm] suspend fun canonicalMediaType (): MediaType Returns the canonical version of this media type, if it is known. contains [androidJvm] fun contains (other: String ?): Boolean fun contains (other: MediaType ?): Boolean Returns whether the given other media type is included in this media type. equals [androidJvm] open operator override fun equals (other: Any ?): Boolean Returns whether two media types are equal, checking the type, subtype and parameters. Parameters order is ignored. hashCode [androidJvm] open override fun hashCode (): Int matches [androidJvm] fun matches (other: String ?): Boolean fun matches (other: MediaType ?): Boolean Returns whether this media type and other are the same, ignoring parameters that are not in both media types. matchesAny [androidJvm] fun matchesAny (vararg others: String ?): Boolean fun matchesAny (vararg others: MediaType ?): Boolean Returns whether this media type matches any of the others media types. toString [androidJvm] open override fun toString (): String The string representation of this media type.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/#properties","text":"Name Summary charset [androidJvm] val charset : Charset ? Encoding as declared in the charset parameter, if there's any. fileExtension [androidJvm] val fileExtension : String ? = null isAudio [androidJvm] val isAudio : Boolean Returns whether this media type is of an audio clip. isBitmap [androidJvm] val isBitmap : Boolean Returns whether this media type is of a bitmap image, so excluding vectorial formats. isHtml [androidJvm] val isHtml : Boolean Returns whether this media type is of an HTML document. isJson [androidJvm] val isJson : Boolean Returns whether this media type is structured as a JSON file. isOpds [androidJvm] val isOpds : Boolean Returns whether this media type is of an OPDS feed. isPublication [androidJvm] val isPublication : Boolean Returns whether this media type is of a publication file. isRwpm [androidJvm] val isRwpm : Boolean Returns whether this media type is of a Readium Web Publication Manifest. isVideo [androidJvm] val isVideo : Boolean Returns whether this media type is of a video clip. isZip [androidJvm] val isZip : Boolean Returns whether this media type is structured as a ZIP archive. name [androidJvm] val name : String ? = null parameters [androidJvm] val parameters : Map < String , String > The parameters in the media type, such as charset=utf-8. structuredSyntaxSuffix [androidJvm] val structuredSyntaxSuffix : String ? Structured syntax suffix, e.g. +zip in application/epub+zip. subtype [androidJvm] val subtype : String The subtype component, e.g. epub+zip in application/epub+zip. type [androidJvm] val type : String The type component, e.g. application in application/epub+zip.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-media-type/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / MediaType MediaType \u00b6 [androidJvm]\\ fun MediaType (string: String , name: String ? = null, fileExtension: String ? = null) Parameters \u00b6 androidJvm string String representation for this media type. name A human readable name identifying the media type, which may be presented to the user. fileExtension The default file extension to use for this media type.","title":" media type"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-media-type/#mediatype","text":"[androidJvm]\\ fun MediaType (string: String , name: String ? = null, fileExtension: String ? = null)","title":"MediaType"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-media-type/#parameters","text":"androidJvm string String representation for this media type. name A human readable name identifying the media type, which may be presented to the user. fileExtension The default file extension to use for this media type.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/canonical-media-type/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / canonicalMediaType canonicalMediaType \u00b6 [androidJvm]\\ suspend fun canonicalMediaType (): MediaType Returns the canonical version of this media type, if it is known. This is useful to find the name and file extension of a known media type, or to get the canonical media type from an alias. For example, application/x-cbz is an alias of the canonical application/vnd.comicbook+zip. Non-significant parameters are also discarded.","title":"Canonical media type"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/canonical-media-type/#canonicalmediatype","text":"[androidJvm]\\ suspend fun canonicalMediaType (): MediaType Returns the canonical version of this media type, if it is known. This is useful to find the name and file extension of a known media type, or to get the canonical media type from an alias. For example, application/x-cbz is an alias of the canonical application/vnd.comicbook+zip. Non-significant parameters are also discarded.","title":"canonicalMediaType"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/charset/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / charset charset \u00b6 [androidJvm]\\ val charset : Charset ? Encoding as declared in the charset parameter, if there's any.","title":"Charset"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/charset/#charset","text":"[androidJvm]\\ val charset : Charset ? Encoding as declared in the charset parameter, if there's any.","title":"charset"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/contains/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / contains contains \u00b6 [androidJvm]\\ fun contains (other: MediaType ?): Boolean Returns whether the given other media type is included in this media type. For example, text/html contains text/html;charset=utf-8. [other](contains.md) must match the parameters in the [parameters](parameters.md) property, but extra parameters are ignored. Order of parameters is ignored. Wildcards are supported, meaning that image/* contains image/png and */* contains everything. [androidJvm]\\ fun contains (other: String ?): Boolean Returns whether the given other media type is included in this media type.","title":"Contains"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/contains/#contains","text":"[androidJvm]\\ fun contains (other: MediaType ?): Boolean Returns whether the given other media type is included in this media type. For example, text/html contains text/html;charset=utf-8. [other](contains.md) must match the parameters in the [parameters](parameters.md) property, but extra parameters are ignored. Order of parameters is ignored. Wildcards are supported, meaning that image/* contains image/png and */* contains everything. [androidJvm]\\ fun contains (other: String ?): Boolean Returns whether the given other media type is included in this media type.","title":"contains"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/equals/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / equals equals \u00b6 [androidJvm]\\ open operator override fun equals (other: Any ?): Boolean Returns whether two media types are equal, checking the type, subtype and parameters. Parameters order is ignored. WARNING: Strict media type comparisons can be a source of bug, if parameters are present. text/html != text/html;charset=utf-8 with strict equality comparison, which is most likely not the desired result. Instead, you can use matches to check if any of the media types is a parameterized version of the other one.","title":"Equals"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/equals/#equals","text":"[androidJvm]\\ open operator override fun equals (other: Any ?): Boolean Returns whether two media types are equal, checking the type, subtype and parameters. Parameters order is ignored. WARNING: Strict media type comparisons can be a source of bug, if parameters are present. text/html != text/html;charset=utf-8 with strict equality comparison, which is most likely not the desired result. Instead, you can use matches to check if any of the media types is a parameterized version of the other one.","title":"equals"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/file-extension/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / fileExtension fileExtension \u00b6 [androidJvm]\\ val fileExtension : String ? = null","title":"File extension"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/file-extension/#fileextension","text":"[androidJvm]\\ val fileExtension : String ? = null","title":"fileExtension"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/hash-code/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / hashCode hashCode \u00b6 [androidJvm]\\ open override fun hashCode (): Int","title":"Hash code"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/hash-code/#hashcode","text":"[androidJvm]\\ open override fun hashCode (): Int","title":"hashCode"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/is-audio/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / isAudio isAudio \u00b6 [androidJvm]\\ val isAudio : Boolean Returns whether this media type is of an audio clip.","title":"Is audio"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/is-audio/#isaudio","text":"[androidJvm]\\ val isAudio : Boolean Returns whether this media type is of an audio clip.","title":"isAudio"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/is-bitmap/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / isBitmap isBitmap \u00b6 [androidJvm]\\ val isBitmap : Boolean Returns whether this media type is of a bitmap image, so excluding vectorial formats.","title":"Is bitmap"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/is-bitmap/#isbitmap","text":"[androidJvm]\\ val isBitmap : Boolean Returns whether this media type is of a bitmap image, so excluding vectorial formats.","title":"isBitmap"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/is-html/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / isHtml isHtml \u00b6 [androidJvm]\\ val isHtml : Boolean Returns whether this media type is of an HTML document.","title":"Is html"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/is-html/#ishtml","text":"[androidJvm]\\ val isHtml : Boolean Returns whether this media type is of an HTML document.","title":"isHtml"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/is-json/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / isJson isJson \u00b6 [androidJvm]\\ val isJson : Boolean Returns whether this media type is structured as a JSON file.","title":"Is json"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/is-json/#isjson","text":"[androidJvm]\\ val isJson : Boolean Returns whether this media type is structured as a JSON file.","title":"isJson"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/is-opds/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / isOpds isOpds \u00b6 [androidJvm]\\ val isOpds : Boolean Returns whether this media type is of an OPDS feed.","title":"Is opds"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/is-opds/#isopds","text":"[androidJvm]\\ val isOpds : Boolean Returns whether this media type is of an OPDS feed.","title":"isOpds"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/is-publication/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / isPublication isPublication \u00b6 [androidJvm]\\ val isPublication : Boolean Returns whether this media type is of a publication file.","title":"Is publication"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/is-publication/#ispublication","text":"[androidJvm]\\ val isPublication : Boolean Returns whether this media type is of a publication file.","title":"isPublication"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/is-rwpm/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / isRwpm isRwpm \u00b6 [androidJvm]\\ val isRwpm : Boolean Returns whether this media type is of a Readium Web Publication Manifest.","title":"Is rwpm"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/is-rwpm/#isrwpm","text":"[androidJvm]\\ val isRwpm : Boolean Returns whether this media type is of a Readium Web Publication Manifest.","title":"isRwpm"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/is-video/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / isVideo isVideo \u00b6 [androidJvm]\\ val isVideo : Boolean Returns whether this media type is of a video clip.","title":"Is video"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/is-video/#isvideo","text":"[androidJvm]\\ val isVideo : Boolean Returns whether this media type is of a video clip.","title":"isVideo"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/is-zip/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / isZip isZip \u00b6 [androidJvm]\\ val isZip : Boolean Returns whether this media type is structured as a ZIP archive.","title":"Is zip"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/is-zip/#iszip","text":"[androidJvm]\\ val isZip : Boolean Returns whether this media type is structured as a ZIP archive.","title":"isZip"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/matches-any/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / matchesAny matchesAny \u00b6 [androidJvm]\\ fun matchesAny (vararg others: MediaType ?): Boolean fun matchesAny (vararg others: String ?): Boolean Returns whether this media type matches any of the others media types.","title":"Matches any"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/matches-any/#matchesany","text":"[androidJvm]\\ fun matchesAny (vararg others: MediaType ?): Boolean fun matchesAny (vararg others: String ?): Boolean Returns whether this media type matches any of the others media types.","title":"matchesAny"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/matches/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / matches matches \u00b6 [androidJvm]\\ fun matches (other: MediaType ?): Boolean Returns whether this media type and other are the same, ignoring parameters that are not in both media types. For example, text/html matches text/html;charset=utf-8, but text/html;charset=ascii doesn't. This is basically like contains, but working in both direction. [androidJvm]\\ fun matches (other: String ?): Boolean Returns whether this media type and other are the same, ignoring parameters that are not in both media types.","title":"Matches"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/matches/#matches","text":"[androidJvm]\\ fun matches (other: MediaType ?): Boolean Returns whether this media type and other are the same, ignoring parameters that are not in both media types. For example, text/html matches text/html;charset=utf-8, but text/html;charset=ascii doesn't. This is basically like contains, but working in both direction. [androidJvm]\\ fun matches (other: String ?): Boolean Returns whether this media type and other are the same, ignoring parameters that are not in both media types.","title":"matches"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/name/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / name name \u00b6 [androidJvm]\\ val name : String ? = null","title":"Name"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/name/#name","text":"[androidJvm]\\ val name : String ? = null","title":"name"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/parameters/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / parameters parameters \u00b6 [androidJvm]\\ val parameters : Map < String , String > The parameters in the media type, such as charset=utf-8.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/parameters/#parameters","text":"[androidJvm]\\ val parameters : Map < String , String > The parameters in the media type, such as charset=utf-8.","title":"parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/structured-syntax-suffix/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / structuredSyntaxSuffix structuredSyntaxSuffix \u00b6 [androidJvm]\\ val structuredSyntaxSuffix : String ? Structured syntax suffix, e.g. +zip in application/epub+zip. Gives a hint on the underlying structure of this media type. See. https://tools.ietf.org/html/rfc6838#section-4.2.8","title":"Structured syntax suffix"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/structured-syntax-suffix/#structuredsyntaxsuffix","text":"[androidJvm]\\ val structuredSyntaxSuffix : String ? Structured syntax suffix, e.g. +zip in application/epub+zip. Gives a hint on the underlying structure of this media type. See. https://tools.ietf.org/html/rfc6838#section-4.2.8","title":"structuredSyntaxSuffix"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/subtype/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / subtype subtype \u00b6 [androidJvm]\\ val subtype : String The subtype component, e.g. epub+zip in application/epub+zip.","title":"Subtype"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/subtype/#subtype","text":"[androidJvm]\\ val subtype : String The subtype component, e.g. epub+zip in application/epub+zip.","title":"subtype"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/to-string/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / toString toString \u00b6 [androidJvm]\\ open override fun toString (): String The string representation of this media type.","title":"To string"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/to-string/#tostring","text":"[androidJvm]\\ open override fun toString (): String The string representation of this media type.","title":"toString"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/type/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / type type \u00b6 [androidJvm]\\ val type : String The type component, e.g. application in application/epub+zip.","title":"Type"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/type/#type","text":"[androidJvm]\\ val type : String The type component, e.g. application in application/epub+zip.","title":"type"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary of [androidJvm] suspend fun of (mediaType: String ? = null, fileExtension: String ? = null, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves a format from a single file extension and media type hint, without checking the actual content. [androidJvm] suspend fun of (mediaTypes: List < String >, fileExtensions: List < String >, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves a format from file extension and media type hints, without checking the actual content. ofBytes [androidJvm] suspend fun ofBytes (bytes: () -> ByteArray , mediaType: String ? = null, fileExtension: String ? = null, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? suspend fun ofBytes (bytes: () -> ByteArray , mediaTypes: List < String >, fileExtensions: List < String >, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves a format from bytes, e.g. from an HTTP response. ofFile [androidJvm] suspend fun ofFile (file: File , mediaType: String ? = null, fileExtension: String ? = null, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? suspend fun ofFile (file: File , mediaTypes: List < String >, fileExtensions: List < String >, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? suspend fun ofFile (path: String , mediaType: String ? = null, fileExtension: String ? = null, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? suspend fun ofFile (path: String , mediaTypes: List < String >, fileExtensions: List < String >, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves a format from a local file path. ofUri [androidJvm] suspend fun ofUri (uri: Uri , contentResolver: ContentResolver , mediaType: String ? = null, fileExtension: String ? = null, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? suspend fun ofUri (uri: Uri , contentResolver: ContentResolver , mediaTypes: List < String >, fileExtensions: List < String >, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves a format from a content URI and a ContentResolver . Accepts the following URI schemes: content, android.resource, file. parse [androidJvm] fun parse (string: String , name: String ? = null, fileExtension: String ? = null): MediaType ? Creates a MediaType from its RFC 6838 string representation. Properties \u00b6 Name Summary AAC [androidJvm] val AAC : MediaType ACSM [androidJvm] val ACSM : MediaType AIFF [androidJvm] val AIFF : MediaType AVI [androidJvm] val AVI : MediaType AVIF [androidJvm] val AVIF : MediaType BINARY [androidJvm] val BINARY : MediaType BMP [androidJvm] val BMP : MediaType CBZ [androidJvm] val CBZ : MediaType CSS [androidJvm] val CSS : MediaType DIVINA [androidJvm] val DIVINA : MediaType DIVINA_MANIFEST [androidJvm] val DIVINA_MANIFEST : MediaType EPUB [androidJvm] val EPUB : MediaType GIF [androidJvm] val GIF : MediaType GZ [androidJvm] val GZ : MediaType HTML [androidJvm] val HTML : MediaType JAVASCRIPT [androidJvm] val JAVASCRIPT : MediaType JPEG [androidJvm] val JPEG : MediaType JSON [androidJvm] val JSON : MediaType JXL [androidJvm] val JXL : MediaType LCP_LICENSE_DOCUMENT [androidJvm] val LCP_LICENSE_DOCUMENT : MediaType LCP_PROTECTED_AUDIOBOOK [androidJvm] val LCP_PROTECTED_AUDIOBOOK : MediaType LCP_PROTECTED_PDF [androidJvm] val LCP_PROTECTED_PDF : MediaType LCP_STATUS_DOCUMENT [androidJvm] val LCP_STATUS_DOCUMENT : MediaType LPF [androidJvm] val LPF : MediaType MP3 [androidJvm] val MP3 : MediaType MPEG [androidJvm] val MPEG : MediaType NCX [androidJvm] val NCX : MediaType OGG [androidJvm] val OGG : MediaType OGV [androidJvm] val OGV : MediaType OPDS1 [androidJvm] val OPDS1 : MediaType OPDS1_ENTRY [androidJvm] val OPDS1_ENTRY : MediaType OPDS2 [androidJvm] val OPDS2 : MediaType OPDS2_PUBLICATION [androidJvm] val OPDS2_PUBLICATION : MediaType OPDS_AUTHENTICATION [androidJvm] val OPDS_AUTHENTICATION : MediaType OPUS [androidJvm] val OPUS : MediaType OTF [androidJvm] val OTF : MediaType PDF [androidJvm] val PDF : MediaType PNG [androidJvm] val PNG : MediaType READIUM_AUDIOBOOK [androidJvm] val READIUM_AUDIOBOOK : MediaType READIUM_AUDIOBOOK_MANIFEST [androidJvm] val READIUM_AUDIOBOOK_MANIFEST : MediaType READIUM_WEBPUB [androidJvm] val READIUM_WEBPUB : MediaType READIUM_WEBPUB_MANIFEST [androidJvm] val READIUM_WEBPUB_MANIFEST : MediaType SMIL [androidJvm] val SMIL : MediaType sniffers [androidJvm] val sniffers : MutableList < Sniffer > The default sniffers provided by Readium 2 to resolve a MediaType . You can register additional sniffers globally by modifying this list. The sniffers order is important, because some formats are subsets of other formats. SVG [androidJvm] val SVG : MediaType TEXT [androidJvm] val TEXT : MediaType TIFF [androidJvm] val TIFF : MediaType TTF [androidJvm] val TTF : MediaType W3C_WPUB_MANIFEST [androidJvm] val W3C_WPUB_MANIFEST : MediaType WAV [androidJvm] val WAV : MediaType WEBM_AUDIO [androidJvm] val WEBM_AUDIO : MediaType WEBM_VIDEO [androidJvm] val WEBM_VIDEO : MediaType WEBP [androidJvm] val WEBP : MediaType WOFF [androidJvm] val WOFF : MediaType WOFF2 [androidJvm] val WOFF2 : MediaType XHTML [androidJvm] val XHTML : MediaType XML [androidJvm] val XML : MediaType ZAB [androidJvm] val ZAB : MediaType ZIP [androidJvm] val ZIP : MediaType Extensions \u00b6 Name Summary PROBLEM_DETAILS [androidJvm] val MediaType.Companion . PROBLEM_DETAILS : MediaType JSON Problem Details JSON object","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/#functions","text":"Name Summary of [androidJvm] suspend fun of (mediaType: String ? = null, fileExtension: String ? = null, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves a format from a single file extension and media type hint, without checking the actual content. [androidJvm] suspend fun of (mediaTypes: List < String >, fileExtensions: List < String >, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves a format from file extension and media type hints, without checking the actual content. ofBytes [androidJvm] suspend fun ofBytes (bytes: () -> ByteArray , mediaType: String ? = null, fileExtension: String ? = null, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? suspend fun ofBytes (bytes: () -> ByteArray , mediaTypes: List < String >, fileExtensions: List < String >, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves a format from bytes, e.g. from an HTTP response. ofFile [androidJvm] suspend fun ofFile (file: File , mediaType: String ? = null, fileExtension: String ? = null, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? suspend fun ofFile (file: File , mediaTypes: List < String >, fileExtensions: List < String >, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? suspend fun ofFile (path: String , mediaType: String ? = null, fileExtension: String ? = null, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? suspend fun ofFile (path: String , mediaTypes: List < String >, fileExtensions: List < String >, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves a format from a local file path. ofUri [androidJvm] suspend fun ofUri (uri: Uri , contentResolver: ContentResolver , mediaType: String ? = null, fileExtension: String ? = null, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? suspend fun ofUri (uri: Uri , contentResolver: ContentResolver , mediaTypes: List < String >, fileExtensions: List < String >, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves a format from a content URI and a ContentResolver . Accepts the following URI schemes: content, android.resource, file. parse [androidJvm] fun parse (string: String , name: String ? = null, fileExtension: String ? = null): MediaType ? Creates a MediaType from its RFC 6838 string representation.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/#properties","text":"Name Summary AAC [androidJvm] val AAC : MediaType ACSM [androidJvm] val ACSM : MediaType AIFF [androidJvm] val AIFF : MediaType AVI [androidJvm] val AVI : MediaType AVIF [androidJvm] val AVIF : MediaType BINARY [androidJvm] val BINARY : MediaType BMP [androidJvm] val BMP : MediaType CBZ [androidJvm] val CBZ : MediaType CSS [androidJvm] val CSS : MediaType DIVINA [androidJvm] val DIVINA : MediaType DIVINA_MANIFEST [androidJvm] val DIVINA_MANIFEST : MediaType EPUB [androidJvm] val EPUB : MediaType GIF [androidJvm] val GIF : MediaType GZ [androidJvm] val GZ : MediaType HTML [androidJvm] val HTML : MediaType JAVASCRIPT [androidJvm] val JAVASCRIPT : MediaType JPEG [androidJvm] val JPEG : MediaType JSON [androidJvm] val JSON : MediaType JXL [androidJvm] val JXL : MediaType LCP_LICENSE_DOCUMENT [androidJvm] val LCP_LICENSE_DOCUMENT : MediaType LCP_PROTECTED_AUDIOBOOK [androidJvm] val LCP_PROTECTED_AUDIOBOOK : MediaType LCP_PROTECTED_PDF [androidJvm] val LCP_PROTECTED_PDF : MediaType LCP_STATUS_DOCUMENT [androidJvm] val LCP_STATUS_DOCUMENT : MediaType LPF [androidJvm] val LPF : MediaType MP3 [androidJvm] val MP3 : MediaType MPEG [androidJvm] val MPEG : MediaType NCX [androidJvm] val NCX : MediaType OGG [androidJvm] val OGG : MediaType OGV [androidJvm] val OGV : MediaType OPDS1 [androidJvm] val OPDS1 : MediaType OPDS1_ENTRY [androidJvm] val OPDS1_ENTRY : MediaType OPDS2 [androidJvm] val OPDS2 : MediaType OPDS2_PUBLICATION [androidJvm] val OPDS2_PUBLICATION : MediaType OPDS_AUTHENTICATION [androidJvm] val OPDS_AUTHENTICATION : MediaType OPUS [androidJvm] val OPUS : MediaType OTF [androidJvm] val OTF : MediaType PDF [androidJvm] val PDF : MediaType PNG [androidJvm] val PNG : MediaType READIUM_AUDIOBOOK [androidJvm] val READIUM_AUDIOBOOK : MediaType READIUM_AUDIOBOOK_MANIFEST [androidJvm] val READIUM_AUDIOBOOK_MANIFEST : MediaType READIUM_WEBPUB [androidJvm] val READIUM_WEBPUB : MediaType READIUM_WEBPUB_MANIFEST [androidJvm] val READIUM_WEBPUB_MANIFEST : MediaType SMIL [androidJvm] val SMIL : MediaType sniffers [androidJvm] val sniffers : MutableList < Sniffer > The default sniffers provided by Readium 2 to resolve a MediaType . You can register additional sniffers globally by modifying this list. The sniffers order is important, because some formats are subsets of other formats. SVG [androidJvm] val SVG : MediaType TEXT [androidJvm] val TEXT : MediaType TIFF [androidJvm] val TIFF : MediaType TTF [androidJvm] val TTF : MediaType W3C_WPUB_MANIFEST [androidJvm] val W3C_WPUB_MANIFEST : MediaType WAV [androidJvm] val WAV : MediaType WEBM_AUDIO [androidJvm] val WEBM_AUDIO : MediaType WEBM_VIDEO [androidJvm] val WEBM_VIDEO : MediaType WEBP [androidJvm] val WEBP : MediaType WOFF [androidJvm] val WOFF : MediaType WOFF2 [androidJvm] val WOFF2 : MediaType XHTML [androidJvm] val XHTML : MediaType XML [androidJvm] val XML : MediaType ZAB [androidJvm] val ZAB : MediaType ZIP [androidJvm] val ZIP : MediaType","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/#extensions","text":"Name Summary PROBLEM_DETAILS [androidJvm] val MediaType.Companion . PROBLEM_DETAILS : MediaType JSON Problem Details JSON object","title":"Extensions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-a-a-c/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / AAC AAC \u00b6 [androidJvm]\\ val AAC : MediaType","title":" a a c"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-a-a-c/#aac","text":"[androidJvm]\\ val AAC : MediaType","title":"AAC"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-a-c-s-m/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / ACSM ACSM \u00b6 [androidJvm]\\ val ACSM : MediaType","title":" a c s m"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-a-c-s-m/#acsm","text":"[androidJvm]\\ val ACSM : MediaType","title":"ACSM"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-a-i-f-f/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / AIFF AIFF \u00b6 [androidJvm]\\ val AIFF : MediaType","title":" a i f f"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-a-i-f-f/#aiff","text":"[androidJvm]\\ val AIFF : MediaType","title":"AIFF"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-a-v-i-f/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / AVIF AVIF \u00b6 [androidJvm]\\ val AVIF : MediaType","title":" a v i f"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-a-v-i-f/#avif","text":"[androidJvm]\\ val AVIF : MediaType","title":"AVIF"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-a-v-i/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / AVI AVI \u00b6 [androidJvm]\\ val AVI : MediaType","title":" a v i"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-a-v-i/#avi","text":"[androidJvm]\\ val AVI : MediaType","title":"AVI"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-b-i-n-a-r-y/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / BINARY BINARY \u00b6 [androidJvm]\\ val BINARY : MediaType","title":" b i n a r y"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-b-i-n-a-r-y/#binary","text":"[androidJvm]\\ val BINARY : MediaType","title":"BINARY"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-b-m-p/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / BMP BMP \u00b6 [androidJvm]\\ val BMP : MediaType","title":" b m p"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-b-m-p/#bmp","text":"[androidJvm]\\ val BMP : MediaType","title":"BMP"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-c-b-z/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / CBZ CBZ \u00b6 [androidJvm]\\ val CBZ : MediaType","title":" c b z"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-c-b-z/#cbz","text":"[androidJvm]\\ val CBZ : MediaType","title":"CBZ"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-c-s-s/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / CSS CSS \u00b6 [androidJvm]\\ val CSS : MediaType","title":" c s s"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-c-s-s/#css","text":"[androidJvm]\\ val CSS : MediaType","title":"CSS"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-d-i-v-i-n-a/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / DIVINA DIVINA \u00b6 [androidJvm]\\ val DIVINA : MediaType","title":" d i v i n a"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-d-i-v-i-n-a/#divina","text":"[androidJvm]\\ val DIVINA : MediaType","title":"DIVINA"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-d-i-v-i-n-a_-m-a-n-i-f-e-s-t/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / DIVINA_MANIFEST DIVINA_MANIFEST \u00b6 [androidJvm]\\ val DIVINA_MANIFEST : MediaType","title":" d i v i n a  m a n i f e s t"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-d-i-v-i-n-a_-m-a-n-i-f-e-s-t/#divina_manifest","text":"[androidJvm]\\ val DIVINA_MANIFEST : MediaType","title":"DIVINA_MANIFEST"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-e-p-u-b/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / EPUB EPUB \u00b6 [androidJvm]\\ val EPUB : MediaType","title":" e p u b"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-e-p-u-b/#epub","text":"[androidJvm]\\ val EPUB : MediaType","title":"EPUB"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-g-i-f/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / GIF GIF \u00b6 [androidJvm]\\ val GIF : MediaType","title":" g i f"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-g-i-f/#gif","text":"[androidJvm]\\ val GIF : MediaType","title":"GIF"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-g-z/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / GZ GZ \u00b6 [androidJvm]\\ val GZ : MediaType","title":" g z"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-g-z/#gz","text":"[androidJvm]\\ val GZ : MediaType","title":"GZ"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-h-t-m-l/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / HTML HTML \u00b6 [androidJvm]\\ val HTML : MediaType","title":" h t m l"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-h-t-m-l/#html","text":"[androidJvm]\\ val HTML : MediaType","title":"HTML"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-j-a-v-a-s-c-r-i-p-t/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / JAVASCRIPT JAVASCRIPT \u00b6 [androidJvm]\\ val JAVASCRIPT : MediaType","title":" j a v a s c r i p t"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-j-a-v-a-s-c-r-i-p-t/#javascript","text":"[androidJvm]\\ val JAVASCRIPT : MediaType","title":"JAVASCRIPT"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-j-p-e-g/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / JPEG JPEG \u00b6 [androidJvm]\\ val JPEG : MediaType","title":" j p e g"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-j-p-e-g/#jpeg","text":"[androidJvm]\\ val JPEG : MediaType","title":"JPEG"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-j-s-o-n/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / JSON JSON \u00b6 [androidJvm]\\ val JSON : MediaType","title":" j s o n"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-j-s-o-n/#json","text":"[androidJvm]\\ val JSON : MediaType","title":"JSON"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-j-x-l/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / JXL JXL \u00b6 [androidJvm]\\ val JXL : MediaType","title":" j x l"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-j-x-l/#jxl","text":"[androidJvm]\\ val JXL : MediaType","title":"JXL"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-l-c-p_-l-i-c-e-n-s-e_-d-o-c-u-m-e-n-t/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / LCP_LICENSE_DOCUMENT LCP_LICENSE_DOCUMENT \u00b6 [androidJvm]\\ val LCP_LICENSE_DOCUMENT : MediaType","title":" l c p  l i c e n s e  d o c u m e n t"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-l-c-p_-l-i-c-e-n-s-e_-d-o-c-u-m-e-n-t/#lcp_license_document","text":"[androidJvm]\\ val LCP_LICENSE_DOCUMENT : MediaType","title":"LCP_LICENSE_DOCUMENT"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-l-c-p_-p-r-o-t-e-c-t-e-d_-a-u-d-i-o-b-o-o-k/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / LCP_PROTECTED_AUDIOBOOK LCP_PROTECTED_AUDIOBOOK \u00b6 [androidJvm]\\ val LCP_PROTECTED_AUDIOBOOK : MediaType","title":" l c p  p r o t e c t e d  a u d i o b o o k"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-l-c-p_-p-r-o-t-e-c-t-e-d_-a-u-d-i-o-b-o-o-k/#lcp_protected_audiobook","text":"[androidJvm]\\ val LCP_PROTECTED_AUDIOBOOK : MediaType","title":"LCP_PROTECTED_AUDIOBOOK"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-l-c-p_-p-r-o-t-e-c-t-e-d_-p-d-f/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / LCP_PROTECTED_PDF LCP_PROTECTED_PDF \u00b6 [androidJvm]\\ val LCP_PROTECTED_PDF : MediaType","title":" l c p  p r o t e c t e d  p d f"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-l-c-p_-p-r-o-t-e-c-t-e-d_-p-d-f/#lcp_protected_pdf","text":"[androidJvm]\\ val LCP_PROTECTED_PDF : MediaType","title":"LCP_PROTECTED_PDF"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-l-c-p_-s-t-a-t-u-s_-d-o-c-u-m-e-n-t/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / LCP_STATUS_DOCUMENT LCP_STATUS_DOCUMENT \u00b6 [androidJvm]\\ val LCP_STATUS_DOCUMENT : MediaType","title":" l c p  s t a t u s  d o c u m e n t"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-l-c-p_-s-t-a-t-u-s_-d-o-c-u-m-e-n-t/#lcp_status_document","text":"[androidJvm]\\ val LCP_STATUS_DOCUMENT : MediaType","title":"LCP_STATUS_DOCUMENT"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-l-p-f/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / LPF LPF \u00b6 [androidJvm]\\ val LPF : MediaType","title":" l p f"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-l-p-f/#lpf","text":"[androidJvm]\\ val LPF : MediaType","title":"LPF"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-m-p-e-g/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / MPEG MPEG \u00b6 [androidJvm]\\ val MPEG : MediaType","title":" m p e g"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-m-p-e-g/#mpeg","text":"[androidJvm]\\ val MPEG : MediaType","title":"MPEG"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-m-p3/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / MP3 MP3 \u00b6 [androidJvm]\\ val MP3 : MediaType","title":" m p3"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-m-p3/#mp3","text":"[androidJvm]\\ val MP3 : MediaType","title":"MP3"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-n-c-x/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / NCX NCX \u00b6 [androidJvm]\\ val NCX : MediaType","title":" n c x"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-n-c-x/#ncx","text":"[androidJvm]\\ val NCX : MediaType","title":"NCX"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-o-g-g/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / OGG OGG \u00b6 [androidJvm]\\ val OGG : MediaType","title":" o g g"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-o-g-g/#ogg","text":"[androidJvm]\\ val OGG : MediaType","title":"OGG"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-o-g-v/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / OGV OGV \u00b6 [androidJvm]\\ val OGV : MediaType","title":" o g v"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-o-g-v/#ogv","text":"[androidJvm]\\ val OGV : MediaType","title":"OGV"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-o-p-d-s1/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / OPDS1 OPDS1 \u00b6 [androidJvm]\\ val OPDS1 : MediaType","title":" o p d s1"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-o-p-d-s1/#opds1","text":"[androidJvm]\\ val OPDS1 : MediaType","title":"OPDS1"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-o-p-d-s1_-e-n-t-r-y/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / OPDS1_ENTRY OPDS1_ENTRY \u00b6 [androidJvm]\\ val OPDS1_ENTRY : MediaType","title":" o p d s1  e n t r y"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-o-p-d-s1_-e-n-t-r-y/#opds1_entry","text":"[androidJvm]\\ val OPDS1_ENTRY : MediaType","title":"OPDS1_ENTRY"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-o-p-d-s2/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / OPDS2 OPDS2 \u00b6 [androidJvm]\\ val OPDS2 : MediaType","title":" o p d s2"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-o-p-d-s2/#opds2","text":"[androidJvm]\\ val OPDS2 : MediaType","title":"OPDS2"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-o-p-d-s2_-p-u-b-l-i-c-a-t-i-o-n/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / OPDS2_PUBLICATION OPDS2_PUBLICATION \u00b6 [androidJvm]\\ val OPDS2_PUBLICATION : MediaType","title":" o p d s2  p u b l i c a t i o n"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-o-p-d-s2_-p-u-b-l-i-c-a-t-i-o-n/#opds2_publication","text":"[androidJvm]\\ val OPDS2_PUBLICATION : MediaType","title":"OPDS2_PUBLICATION"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-o-p-d-s_-a-u-t-h-e-n-t-i-c-a-t-i-o-n/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / OPDS_AUTHENTICATION OPDS_AUTHENTICATION \u00b6 [androidJvm]\\ val OPDS_AUTHENTICATION : MediaType","title":" o p d s  a u t h e n t i c a t i o n"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-o-p-d-s_-a-u-t-h-e-n-t-i-c-a-t-i-o-n/#opds_authentication","text":"[androidJvm]\\ val OPDS_AUTHENTICATION : MediaType","title":"OPDS_AUTHENTICATION"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-o-p-u-s/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / OPUS OPUS \u00b6 [androidJvm]\\ val OPUS : MediaType","title":" o p u s"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-o-p-u-s/#opus","text":"[androidJvm]\\ val OPUS : MediaType","title":"OPUS"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-o-t-f/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / OTF OTF \u00b6 [androidJvm]\\ val OTF : MediaType","title":" o t f"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-o-t-f/#otf","text":"[androidJvm]\\ val OTF : MediaType","title":"OTF"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-p-d-f/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / PDF PDF \u00b6 [androidJvm]\\ val PDF : MediaType","title":" p d f"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-p-d-f/#pdf","text":"[androidJvm]\\ val PDF : MediaType","title":"PDF"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-p-n-g/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / PNG PNG \u00b6 [androidJvm]\\ val PNG : MediaType","title":" p n g"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-p-n-g/#png","text":"[androidJvm]\\ val PNG : MediaType","title":"PNG"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-r-e-a-d-i-u-m_-a-u-d-i-o-b-o-o-k/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / READIUM_AUDIOBOOK READIUM_AUDIOBOOK \u00b6 [androidJvm]\\ val READIUM_AUDIOBOOK : MediaType","title":" r e a d i u m  a u d i o b o o k"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-r-e-a-d-i-u-m_-a-u-d-i-o-b-o-o-k/#readium_audiobook","text":"[androidJvm]\\ val READIUM_AUDIOBOOK : MediaType","title":"READIUM_AUDIOBOOK"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-r-e-a-d-i-u-m_-a-u-d-i-o-b-o-o-k_-m-a-n-i-f-e-s-t/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / READIUM_AUDIOBOOK_MANIFEST READIUM_AUDIOBOOK_MANIFEST \u00b6 [androidJvm]\\ val READIUM_AUDIOBOOK_MANIFEST : MediaType","title":" r e a d i u m  a u d i o b o o k  m a n i f e s t"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-r-e-a-d-i-u-m_-a-u-d-i-o-b-o-o-k_-m-a-n-i-f-e-s-t/#readium_audiobook_manifest","text":"[androidJvm]\\ val READIUM_AUDIOBOOK_MANIFEST : MediaType","title":"READIUM_AUDIOBOOK_MANIFEST"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-r-e-a-d-i-u-m_-w-e-b-p-u-b/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / READIUM_WEBPUB READIUM_WEBPUB \u00b6 [androidJvm]\\ val READIUM_WEBPUB : MediaType","title":" r e a d i u m  w e b p u b"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-r-e-a-d-i-u-m_-w-e-b-p-u-b/#readium_webpub","text":"[androidJvm]\\ val READIUM_WEBPUB : MediaType","title":"READIUM_WEBPUB"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-r-e-a-d-i-u-m_-w-e-b-p-u-b_-m-a-n-i-f-e-s-t/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / READIUM_WEBPUB_MANIFEST READIUM_WEBPUB_MANIFEST \u00b6 [androidJvm]\\ val READIUM_WEBPUB_MANIFEST : MediaType","title":" r e a d i u m  w e b p u b  m a n i f e s t"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-r-e-a-d-i-u-m_-w-e-b-p-u-b_-m-a-n-i-f-e-s-t/#readium_webpub_manifest","text":"[androidJvm]\\ val READIUM_WEBPUB_MANIFEST : MediaType","title":"READIUM_WEBPUB_MANIFEST"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-s-m-i-l/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / SMIL SMIL \u00b6 [androidJvm]\\ val SMIL : MediaType","title":" s m i l"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-s-m-i-l/#smil","text":"[androidJvm]\\ val SMIL : MediaType","title":"SMIL"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-s-v-g/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / SVG SVG \u00b6 [androidJvm]\\ val SVG : MediaType","title":" s v g"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-s-v-g/#svg","text":"[androidJvm]\\ val SVG : MediaType","title":"SVG"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-t-e-x-t/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / TEXT TEXT \u00b6 [androidJvm]\\ val TEXT : MediaType","title":" t e x t"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-t-e-x-t/#text","text":"[androidJvm]\\ val TEXT : MediaType","title":"TEXT"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-t-i-f-f/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / TIFF TIFF \u00b6 [androidJvm]\\ val TIFF : MediaType","title":" t i f f"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-t-i-f-f/#tiff","text":"[androidJvm]\\ val TIFF : MediaType","title":"TIFF"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-t-t-f/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / TTF TTF \u00b6 [androidJvm]\\ val TTF : MediaType","title":" t t f"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-t-t-f/#ttf","text":"[androidJvm]\\ val TTF : MediaType","title":"TTF"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-w-a-v/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / WAV WAV \u00b6 [androidJvm]\\ val WAV : MediaType","title":" w a v"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-w-a-v/#wav","text":"[androidJvm]\\ val WAV : MediaType","title":"WAV"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-w-e-b-m_-a-u-d-i-o/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / WEBM_AUDIO WEBM_AUDIO \u00b6 [androidJvm]\\ val WEBM_AUDIO : MediaType","title":" w e b m  a u d i o"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-w-e-b-m_-a-u-d-i-o/#webm_audio","text":"[androidJvm]\\ val WEBM_AUDIO : MediaType","title":"WEBM_AUDIO"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-w-e-b-m_-v-i-d-e-o/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / WEBM_VIDEO WEBM_VIDEO \u00b6 [androidJvm]\\ val WEBM_VIDEO : MediaType","title":" w e b m  v i d e o"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-w-e-b-m_-v-i-d-e-o/#webm_video","text":"[androidJvm]\\ val WEBM_VIDEO : MediaType","title":"WEBM_VIDEO"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-w-e-b-p/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / WEBP WEBP \u00b6 [androidJvm]\\ val WEBP : MediaType","title":" w e b p"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-w-e-b-p/#webp","text":"[androidJvm]\\ val WEBP : MediaType","title":"WEBP"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-w-o-f-f/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / WOFF WOFF \u00b6 [androidJvm]\\ val WOFF : MediaType","title":" w o f f"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-w-o-f-f/#woff","text":"[androidJvm]\\ val WOFF : MediaType","title":"WOFF"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-w-o-f-f2/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / WOFF2 WOFF2 \u00b6 [androidJvm]\\ val WOFF2 : MediaType","title":" w o f f2"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-w-o-f-f2/#woff2","text":"[androidJvm]\\ val WOFF2 : MediaType","title":"WOFF2"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-w3-c_-w-p-u-b_-m-a-n-i-f-e-s-t/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / W3C_WPUB_MANIFEST W3C_WPUB_MANIFEST \u00b6 [androidJvm]\\ val W3C_WPUB_MANIFEST : MediaType","title":" w3 c  w p u b  m a n i f e s t"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-w3-c_-w-p-u-b_-m-a-n-i-f-e-s-t/#w3c_wpub_manifest","text":"[androidJvm]\\ val W3C_WPUB_MANIFEST : MediaType","title":"W3C_WPUB_MANIFEST"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-x-h-t-m-l/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / XHTML XHTML \u00b6 [androidJvm]\\ val XHTML : MediaType","title":" x h t m l"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-x-h-t-m-l/#xhtml","text":"[androidJvm]\\ val XHTML : MediaType","title":"XHTML"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-x-m-l/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / XML XML \u00b6 [androidJvm]\\ val XML : MediaType","title":" x m l"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-x-m-l/#xml","text":"[androidJvm]\\ val XML : MediaType","title":"XML"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-z-a-b/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / ZAB ZAB \u00b6 [androidJvm]\\ val ZAB : MediaType","title":" z a b"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-z-a-b/#zab","text":"[androidJvm]\\ val ZAB : MediaType","title":"ZAB"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-z-i-p/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / ZIP ZIP \u00b6 [androidJvm]\\ val ZIP : MediaType","title":" z i p"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/-z-i-p/#zip","text":"[androidJvm]\\ val ZIP : MediaType","title":"ZIP"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/of-bytes/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / ofBytes ofBytes \u00b6 [androidJvm]\\ suspend fun ofBytes (bytes: () -> ByteArray , mediaType: String ? = null, fileExtension: String ? = null, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? suspend fun ofBytes (bytes: () -> ByteArray , mediaTypes: List < String >, fileExtensions: List < String >, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves a format from bytes, e.g. from an HTTP response.","title":"Of bytes"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/of-bytes/#ofbytes","text":"[androidJvm]\\ suspend fun ofBytes (bytes: () -> ByteArray , mediaType: String ? = null, fileExtension: String ? = null, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? suspend fun ofBytes (bytes: () -> ByteArray , mediaTypes: List < String >, fileExtensions: List < String >, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves a format from bytes, e.g. from an HTTP response.","title":"ofBytes"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/of-file/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / ofFile ofFile \u00b6 [androidJvm]\\ suspend fun ofFile (file: File , mediaType: String ? = null, fileExtension: String ? = null, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? suspend fun ofFile (file: File , mediaTypes: List < String >, fileExtensions: List < String >, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? suspend fun ofFile (path: String , mediaType: String ? = null, fileExtension: String ? = null, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? suspend fun ofFile (path: String , mediaTypes: List < String >, fileExtensions: List < String >, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves a format from a local file path.","title":"Of file"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/of-file/#offile","text":"[androidJvm]\\ suspend fun ofFile (file: File , mediaType: String ? = null, fileExtension: String ? = null, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? suspend fun ofFile (file: File , mediaTypes: List < String >, fileExtensions: List < String >, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? suspend fun ofFile (path: String , mediaType: String ? = null, fileExtension: String ? = null, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? suspend fun ofFile (path: String , mediaTypes: List < String >, fileExtensions: List < String >, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves a format from a local file path.","title":"ofFile"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/of-uri/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / ofUri ofUri \u00b6 [androidJvm]\\ suspend fun ofUri (uri: Uri , contentResolver: ContentResolver , mediaType: String ? = null, fileExtension: String ? = null, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? suspend fun ofUri (uri: Uri , contentResolver: ContentResolver , mediaTypes: List < String >, fileExtensions: List < String >, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves a format from a content URI and a ContentResolver . Accepts the following URI schemes: content, android.resource, file.","title":"Of uri"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/of-uri/#ofuri","text":"[androidJvm]\\ suspend fun ofUri (uri: Uri , contentResolver: ContentResolver , mediaType: String ? = null, fileExtension: String ? = null, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? suspend fun ofUri (uri: Uri , contentResolver: ContentResolver , mediaTypes: List < String >, fileExtensions: List < String >, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves a format from a content URI and a ContentResolver . Accepts the following URI schemes: content, android.resource, file.","title":"ofUri"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/of/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / of of \u00b6 [androidJvm]\\ suspend fun of (mediaType: String ? = null, fileExtension: String ? = null, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves a format from a single file extension and media type hint, without checking the actual content. [androidJvm]\\ suspend fun of (mediaTypes: List < String >, fileExtensions: List < String >, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves a format from file extension and media type hints, without checking the actual content.","title":"Of"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/of/#of","text":"[androidJvm]\\ suspend fun of (mediaType: String ? = null, fileExtension: String ? = null, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves a format from a single file extension and media type hint, without checking the actual content. [androidJvm]\\ suspend fun of (mediaTypes: List < String >, fileExtensions: List < String >, sniffers: List < Sniffer > = MediaType.sniffers): MediaType ? Resolves a format from file extension and media type hints, without checking the actual content.","title":"of"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/parse/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / parse parse \u00b6 [androidJvm]\\ fun parse (string: String , name: String ? = null, fileExtension: String ? = null): MediaType ? Creates a MediaType from its RFC 6838 string representation. Parameters \u00b6 androidJvm name A human readable name identifying the media type, which may be presented to the user. fileExtension The default file extension to use for this media type.","title":"Parse"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/parse/#parse","text":"[androidJvm]\\ fun parse (string: String , name: String ? = null, fileExtension: String ? = null): MediaType ? Creates a MediaType from its RFC 6838 string representation.","title":"parse"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/parse/#parameters","text":"androidJvm name A human readable name identifying the media type, which may be presented to the user. fileExtension The default file extension to use for this media type.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/sniffers/","text":"// shared / org.readium.r2.shared.util.mediatype / MediaType / Companion / sniffers sniffers \u00b6 [androidJvm]\\ val sniffers : MutableList < Sniffer > The default sniffers provided by Readium 2 to resolve a MediaType . You can register additional sniffers globally by modifying this list. The sniffers order is important, because some formats are subsets of other formats.","title":"Sniffers"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-media-type/-companion/sniffers/#sniffers","text":"[androidJvm]\\ val sniffers : MutableList < Sniffer > The default sniffers provided by Readium 2 to resolve a MediaType . You can register additional sniffers globally by modifying this list. The sniffers order is important, because some formats are subsets of other formats.","title":"sniffers"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/","text":"// shared / org.readium.r2.shared.util.mediatype / SnifferContext SnifferContext \u00b6 [androidJvm]\\ class SnifferContext A companion type of Sniffer holding the type hints (file extensions, media types) and providing an access to the file content. Parameters \u00b6 androidJvm content Underlying content holder. mediaTypes Media type hints. fileExtensions File extension hints. Functions \u00b6 Name Summary contentAsArchive [androidJvm] suspend fun contentAsArchive (): Archive ? Content as an Archive instance. Warning: Archive is only supported for a local file, for now. contentAsJson [androidJvm] suspend fun contentAsJson (): JSONObject ? Content parsed from JSON. contentAsRwpm [androidJvm] suspend fun contentAsRwpm (): Manifest ? Readium Web Publication Manifest parsed from the content. contentAsString [androidJvm] suspend fun contentAsString (): String ? Content as plain text. contentAsXml [androidJvm] suspend fun contentAsXml (): ElementNode ? Content as an XML document. hasFileExtension [androidJvm] fun hasFileExtension (vararg fileExtensions: String ): Boolean Returns whether this context has any of the given file extensions, ignoring case. hasMediaType [androidJvm] fun hasMediaType (vararg mediaTypes: String ): Boolean Returns whether this context has any of the given media type, ignoring case and extra parameters. read [androidJvm] suspend fun read (range: LongRange ? = null): ByteArray ? Reads all the bytes or the given range . stream [androidJvm] suspend fun stream (): InputStream ? Raw bytes stream of the content. Properties \u00b6 Name Summary charset [androidJvm] val charset : Charset ? Finds the first Charset declared in the media types' charset parameter. fileExtensions [androidJvm] val fileExtensions : List < String > File extension hints. mediaTypes [androidJvm] val mediaTypes : List < MediaType > Media type hints.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/#sniffercontext","text":"[androidJvm]\\ class SnifferContext A companion type of Sniffer holding the type hints (file extensions, media types) and providing an access to the file content.","title":"SnifferContext"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/#parameters","text":"androidJvm content Underlying content holder. mediaTypes Media type hints. fileExtensions File extension hints.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/#functions","text":"Name Summary contentAsArchive [androidJvm] suspend fun contentAsArchive (): Archive ? Content as an Archive instance. Warning: Archive is only supported for a local file, for now. contentAsJson [androidJvm] suspend fun contentAsJson (): JSONObject ? Content parsed from JSON. contentAsRwpm [androidJvm] suspend fun contentAsRwpm (): Manifest ? Readium Web Publication Manifest parsed from the content. contentAsString [androidJvm] suspend fun contentAsString (): String ? Content as plain text. contentAsXml [androidJvm] suspend fun contentAsXml (): ElementNode ? Content as an XML document. hasFileExtension [androidJvm] fun hasFileExtension (vararg fileExtensions: String ): Boolean Returns whether this context has any of the given file extensions, ignoring case. hasMediaType [androidJvm] fun hasMediaType (vararg mediaTypes: String ): Boolean Returns whether this context has any of the given media type, ignoring case and extra parameters. read [androidJvm] suspend fun read (range: LongRange ? = null): ByteArray ? Reads all the bytes or the given range . stream [androidJvm] suspend fun stream (): InputStream ? Raw bytes stream of the content.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/#properties","text":"Name Summary charset [androidJvm] val charset : Charset ? Finds the first Charset declared in the media types' charset parameter. fileExtensions [androidJvm] val fileExtensions : List < String > File extension hints. mediaTypes [androidJvm] val mediaTypes : List < MediaType > Media type hints.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/charset/","text":"// shared / org.readium.r2.shared.util.mediatype / SnifferContext / charset charset \u00b6 [androidJvm]\\ val charset : Charset ? Finds the first Charset declared in the media types' charset parameter.","title":"Charset"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/charset/#charset","text":"[androidJvm]\\ val charset : Charset ? Finds the first Charset declared in the media types' charset parameter.","title":"charset"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/content-as-archive/","text":"// shared / org.readium.r2.shared.util.mediatype / SnifferContext / contentAsArchive contentAsArchive \u00b6 [androidJvm]\\ suspend fun contentAsArchive (): Archive ? Content as an Archive instance. Warning: Archive is only supported for a local file, for now.","title":"Content as archive"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/content-as-archive/#contentasarchive","text":"[androidJvm]\\ suspend fun contentAsArchive (): Archive ? Content as an Archive instance. Warning: Archive is only supported for a local file, for now.","title":"contentAsArchive"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/content-as-json/","text":"// shared / org.readium.r2.shared.util.mediatype / SnifferContext / contentAsJson contentAsJson \u00b6 [androidJvm]\\ suspend fun contentAsJson (): JSONObject ? Content parsed from JSON.","title":"Content as json"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/content-as-json/#contentasjson","text":"[androidJvm]\\ suspend fun contentAsJson (): JSONObject ? Content parsed from JSON.","title":"contentAsJson"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/content-as-rwpm/","text":"// shared / org.readium.r2.shared.util.mediatype / SnifferContext / contentAsRwpm contentAsRwpm \u00b6 [androidJvm]\\ suspend fun contentAsRwpm (): Manifest ? Readium Web Publication Manifest parsed from the content.","title":"Content as rwpm"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/content-as-rwpm/#contentasrwpm","text":"[androidJvm]\\ suspend fun contentAsRwpm (): Manifest ? Readium Web Publication Manifest parsed from the content.","title":"contentAsRwpm"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/content-as-string/","text":"// shared / org.readium.r2.shared.util.mediatype / SnifferContext / contentAsString contentAsString \u00b6 [androidJvm]\\ suspend fun contentAsString (): String ? Content as plain text. It will extract the charset parameter from the media type hints to figure out an encoding. Otherwise, fallback on UTF-8.","title":"Content as string"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/content-as-string/#contentasstring","text":"[androidJvm]\\ suspend fun contentAsString (): String ? Content as plain text. It will extract the charset parameter from the media type hints to figure out an encoding. Otherwise, fallback on UTF-8.","title":"contentAsString"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/content-as-xml/","text":"// shared / org.readium.r2.shared.util.mediatype / SnifferContext / contentAsXml contentAsXml \u00b6 [androidJvm]\\ suspend fun contentAsXml (): ElementNode ? Content as an XML document.","title":"Content as xml"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/content-as-xml/#contentasxml","text":"[androidJvm]\\ suspend fun contentAsXml (): ElementNode ? Content as an XML document.","title":"contentAsXml"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/file-extensions/","text":"// shared / org.readium.r2.shared.util.mediatype / SnifferContext / fileExtensions fileExtensions \u00b6 [androidJvm]\\ val fileExtensions : List < String > File extension hints.","title":"File extensions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/file-extensions/#fileextensions","text":"[androidJvm]\\ val fileExtensions : List < String > File extension hints.","title":"fileExtensions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/has-file-extension/","text":"// shared / org.readium.r2.shared.util.mediatype / SnifferContext / hasFileExtension hasFileExtension \u00b6 [androidJvm]\\ fun hasFileExtension (vararg fileExtensions: String ): Boolean Returns whether this context has any of the given file extensions, ignoring case.","title":"Has file extension"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/has-file-extension/#hasfileextension","text":"[androidJvm]\\ fun hasFileExtension (vararg fileExtensions: String ): Boolean Returns whether this context has any of the given file extensions, ignoring case.","title":"hasFileExtension"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/has-media-type/","text":"// shared / org.readium.r2.shared.util.mediatype / SnifferContext / hasMediaType hasMediaType \u00b6 [androidJvm]\\ fun hasMediaType (vararg mediaTypes: String ): Boolean Returns whether this context has any of the given media type, ignoring case and extra parameters. Implementation note: Use MediaType to handle the comparison to avoid edge cases.","title":"Has media type"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/has-media-type/#hasmediatype","text":"[androidJvm]\\ fun hasMediaType (vararg mediaTypes: String ): Boolean Returns whether this context has any of the given media type, ignoring case and extra parameters. Implementation note: Use MediaType to handle the comparison to avoid edge cases.","title":"hasMediaType"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/media-types/","text":"// shared / org.readium.r2.shared.util.mediatype / SnifferContext / mediaTypes mediaTypes \u00b6 [androidJvm]\\ val mediaTypes : List < MediaType > Media type hints.","title":"Media types"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/media-types/#mediatypes","text":"[androidJvm]\\ val mediaTypes : List < MediaType > Media type hints.","title":"mediaTypes"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/read/","text":"// shared / org.readium.r2.shared.util.mediatype / SnifferContext / read read \u00b6 [androidJvm]\\ suspend fun read (range: LongRange ? = null): ByteArray ? Reads all the bytes or the given range . It can be used to check a file signature, aka magic number. See https://en.wikipedia.org/wiki/List_of_file_signatures","title":"Read"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/read/#read","text":"[androidJvm]\\ suspend fun read (range: LongRange ? = null): ByteArray ? Reads all the bytes or the given range . It can be used to check a file signature, aka magic number. See https://en.wikipedia.org/wiki/List_of_file_signatures","title":"read"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/stream/","text":"// shared / org.readium.r2.shared.util.mediatype / SnifferContext / stream stream \u00b6 [androidJvm]\\ suspend fun stream (): InputStream ? Raw bytes stream of the content. A byte stream can be useful when sniffers only need to read a few bytes at the beginning of the file.","title":"Stream"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffer-context/stream/#stream","text":"[androidJvm]\\ suspend fun stream (): InputStream ? Raw bytes stream of the content. A byte stream can be useful when sniffers only need to read a few bytes at the beginning of the file.","title":"stream"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/","text":"// shared / org.readium.r2.shared.util.mediatype / Sniffers Sniffers \u00b6 [androidJvm]\\ object Sniffers Default media type sniffers provided by Readium. Functions \u00b6 Name Summary archive [androidJvm] suspend fun archive (context: SnifferContext ): MediaType ? Sniffs a simple Archive-based format, like Comic Book Archive or Zipped Audio Book. bitmap [androidJvm] suspend fun bitmap (context: SnifferContext ): MediaType ? Sniffs a bitmap image. epub [androidJvm] suspend fun epub (context: SnifferContext ): MediaType ? Sniffs an EPUB publication. html [androidJvm] suspend fun html (context: SnifferContext ): MediaType ? Sniffs an HTML document. json [androidJvm] suspend fun json (context: SnifferContext ): MediaType ? Sniffs a JSON document. lcpLicense [androidJvm] suspend fun lcpLicense (context: SnifferContext ): MediaType ? Sniffs an LCP License Document. lpf [androidJvm] suspend fun lpf (context: SnifferContext ): MediaType ? Sniffs a Lightweight Packaging Format (LPF). opds [androidJvm] suspend fun opds (context: SnifferContext ): MediaType ? Sniffs an OPDS document. pdf [androidJvm] suspend fun pdf (context: SnifferContext ): MediaType ? Sniffs a PDF document. system [androidJvm] suspend fun system (context: SnifferContext ): MediaType ? Sniffs the system-wide registered media types using MimeTypeMap and URLConnection.guessContentTypeFromStream . w3cWPUB [androidJvm] suspend fun w3cWPUB (context: SnifferContext ): MediaType ? Sniffs a W3C Web Publication Manifest. webpub [androidJvm] suspend fun webpub (context: SnifferContext ): MediaType ? Sniffs a Readium Web Publication, protected or not by LCP. xhtml [androidJvm] suspend fun xhtml (context: SnifferContext ): MediaType ? Sniffs an XHTML document. Properties \u00b6 Name Summary all [androidJvm] val all : List < Sniffer > The default sniffers provided by Readium 2 to resolve a MediaType . The sniffers order is important, because some formats are subsets of other formats.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/#sniffers","text":"[androidJvm]\\ object Sniffers Default media type sniffers provided by Readium.","title":"Sniffers"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/#functions","text":"Name Summary archive [androidJvm] suspend fun archive (context: SnifferContext ): MediaType ? Sniffs a simple Archive-based format, like Comic Book Archive or Zipped Audio Book. bitmap [androidJvm] suspend fun bitmap (context: SnifferContext ): MediaType ? Sniffs a bitmap image. epub [androidJvm] suspend fun epub (context: SnifferContext ): MediaType ? Sniffs an EPUB publication. html [androidJvm] suspend fun html (context: SnifferContext ): MediaType ? Sniffs an HTML document. json [androidJvm] suspend fun json (context: SnifferContext ): MediaType ? Sniffs a JSON document. lcpLicense [androidJvm] suspend fun lcpLicense (context: SnifferContext ): MediaType ? Sniffs an LCP License Document. lpf [androidJvm] suspend fun lpf (context: SnifferContext ): MediaType ? Sniffs a Lightweight Packaging Format (LPF). opds [androidJvm] suspend fun opds (context: SnifferContext ): MediaType ? Sniffs an OPDS document. pdf [androidJvm] suspend fun pdf (context: SnifferContext ): MediaType ? Sniffs a PDF document. system [androidJvm] suspend fun system (context: SnifferContext ): MediaType ? Sniffs the system-wide registered media types using MimeTypeMap and URLConnection.guessContentTypeFromStream . w3cWPUB [androidJvm] suspend fun w3cWPUB (context: SnifferContext ): MediaType ? Sniffs a W3C Web Publication Manifest. webpub [androidJvm] suspend fun webpub (context: SnifferContext ): MediaType ? Sniffs a Readium Web Publication, protected or not by LCP. xhtml [androidJvm] suspend fun xhtml (context: SnifferContext ): MediaType ? Sniffs an XHTML document.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/#properties","text":"Name Summary all [androidJvm] val all : List < Sniffer > The default sniffers provided by Readium 2 to resolve a MediaType . The sniffers order is important, because some formats are subsets of other formats.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/all/","text":"// shared / org.readium.r2.shared.util.mediatype / Sniffers / all all \u00b6 [androidJvm]\\ val all : List < Sniffer > The default sniffers provided by Readium 2 to resolve a MediaType . The sniffers order is important, because some formats are subsets of other formats.","title":"All"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/all/#all","text":"[androidJvm]\\ val all : List < Sniffer > The default sniffers provided by Readium 2 to resolve a MediaType . The sniffers order is important, because some formats are subsets of other formats.","title":"all"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/archive/","text":"// shared / org.readium.r2.shared.util.mediatype / Sniffers / archive archive \u00b6 [androidJvm]\\ suspend fun archive (context: SnifferContext ): MediaType ? Sniffs a simple Archive-based format, like Comic Book Archive or Zipped Audio Book. Reference: https://wiki.mobileread.com/wiki/CBR_and_CBZ","title":"Archive"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/archive/#archive","text":"[androidJvm]\\ suspend fun archive (context: SnifferContext ): MediaType ? Sniffs a simple Archive-based format, like Comic Book Archive or Zipped Audio Book. Reference: https://wiki.mobileread.com/wiki/CBR_and_CBZ","title":"archive"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/bitmap/","text":"// shared / org.readium.r2.shared.util.mediatype / Sniffers / bitmap bitmap \u00b6 [androidJvm]\\ suspend fun bitmap (context: SnifferContext ): MediaType ? Sniffs a bitmap image.","title":"Bitmap"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/bitmap/#bitmap","text":"[androidJvm]\\ suspend fun bitmap (context: SnifferContext ): MediaType ? Sniffs a bitmap image.","title":"bitmap"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/epub/","text":"// shared / org.readium.r2.shared.util.mediatype / Sniffers / epub epub \u00b6 [androidJvm]\\ suspend fun epub (context: SnifferContext ): MediaType ? Sniffs an EPUB publication. Reference: https://www.w3.org/publishing/epub3/epub-ocf.html#sec-zip-container-mime","title":"Epub"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/epub/#epub","text":"[androidJvm]\\ suspend fun epub (context: SnifferContext ): MediaType ? Sniffs an EPUB publication. Reference: https://www.w3.org/publishing/epub3/epub-ocf.html#sec-zip-container-mime","title":"epub"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/html/","text":"// shared / org.readium.r2.shared.util.mediatype / Sniffers / html html \u00b6 [androidJvm]\\ suspend fun html (context: SnifferContext ): MediaType ? Sniffs an HTML document.","title":"Html"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/html/#html","text":"[androidJvm]\\ suspend fun html (context: SnifferContext ): MediaType ? Sniffs an HTML document.","title":"html"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/json/","text":"// shared / org.readium.r2.shared.util.mediatype / Sniffers / json json \u00b6 [androidJvm]\\ suspend fun json (context: SnifferContext ): MediaType ? Sniffs a JSON document.","title":"Json"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/json/#json","text":"[androidJvm]\\ suspend fun json (context: SnifferContext ): MediaType ? Sniffs a JSON document.","title":"json"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/lcp-license/","text":"// shared / org.readium.r2.shared.util.mediatype / Sniffers / lcpLicense lcpLicense \u00b6 [androidJvm]\\ suspend fun lcpLicense (context: SnifferContext ): MediaType ? Sniffs an LCP License Document.","title":"Lcp license"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/lcp-license/#lcplicense","text":"[androidJvm]\\ suspend fun lcpLicense (context: SnifferContext ): MediaType ? Sniffs an LCP License Document.","title":"lcpLicense"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/lpf/","text":"// shared / org.readium.r2.shared.util.mediatype / Sniffers / lpf lpf \u00b6 [androidJvm]\\ suspend fun lpf (context: SnifferContext ): MediaType ? Sniffs a Lightweight Packaging Format (LPF). References: https://www.w3.org/TR/lpf/ https://www.w3.org/TR/pub-manifest/","title":"Lpf"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/lpf/#lpf","text":"[androidJvm]\\ suspend fun lpf (context: SnifferContext ): MediaType ? Sniffs a Lightweight Packaging Format (LPF). References: https://www.w3.org/TR/lpf/ https://www.w3.org/TR/pub-manifest/","title":"lpf"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/opds/","text":"// shared / org.readium.r2.shared.util.mediatype / Sniffers / opds opds \u00b6 [androidJvm]\\ suspend fun opds (context: SnifferContext ): MediaType ? Sniffs an OPDS document.","title":"Opds"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/opds/#opds","text":"[androidJvm]\\ suspend fun opds (context: SnifferContext ): MediaType ? Sniffs an OPDS document.","title":"opds"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/pdf/","text":"// shared / org.readium.r2.shared.util.mediatype / Sniffers / pdf pdf \u00b6 [androidJvm]\\ suspend fun pdf (context: SnifferContext ): MediaType ? Sniffs a PDF document. Reference: https://www.loc.gov/preservation/digital/formats/fdd/fdd000123.shtml","title":"Pdf"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/pdf/#pdf","text":"[androidJvm]\\ suspend fun pdf (context: SnifferContext ): MediaType ? Sniffs a PDF document. Reference: https://www.loc.gov/preservation/digital/formats/fdd/fdd000123.shtml","title":"pdf"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/system/","text":"// shared / org.readium.r2.shared.util.mediatype / Sniffers / system system \u00b6 [androidJvm]\\ suspend fun system (context: SnifferContext ): MediaType ? Sniffs the system-wide registered media types using MimeTypeMap and URLConnection.guessContentTypeFromStream .","title":"System"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/system/#system","text":"[androidJvm]\\ suspend fun system (context: SnifferContext ): MediaType ? Sniffs the system-wide registered media types using MimeTypeMap and URLConnection.guessContentTypeFromStream .","title":"system"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/w3c-w-p-u-b/","text":"// shared / org.readium.r2.shared.util.mediatype / Sniffers / w3cWPUB w3cWPUB \u00b6 [androidJvm]\\ suspend fun w3cWPUB (context: SnifferContext ): MediaType ? Sniffs a W3C Web Publication Manifest.","title":"W3c w p u b"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/w3c-w-p-u-b/#w3cwpub","text":"[androidJvm]\\ suspend fun w3cWPUB (context: SnifferContext ): MediaType ? Sniffs a W3C Web Publication Manifest.","title":"w3cWPUB"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/webpub/","text":"// shared / org.readium.r2.shared.util.mediatype / Sniffers / webpub webpub \u00b6 [androidJvm]\\ suspend fun webpub (context: SnifferContext ): MediaType ? Sniffs a Readium Web Publication, protected or not by LCP.","title":"Webpub"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/webpub/#webpub","text":"[androidJvm]\\ suspend fun webpub (context: SnifferContext ): MediaType ? Sniffs a Readium Web Publication, protected or not by LCP.","title":"webpub"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/xhtml/","text":"// shared / org.readium.r2.shared.util.mediatype / Sniffers / xhtml xhtml \u00b6 [androidJvm]\\ suspend fun xhtml (context: SnifferContext ): MediaType ? Sniffs an XHTML document. Must precede the HTML sniffer.","title":"Xhtml"},{"location":"readium/shared/shared/org.readium.r2.shared.util.mediatype/-sniffers/xhtml/#xhtml","text":"[androidJvm]\\ suspend fun xhtml (context: SnifferContext ): MediaType ? Sniffs an XHTML document. Must precede the HTML sniffer.","title":"xhtml"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/","text":"// shared / org.readium.r2.shared.util.pdf Package org.readium.r2.shared.util.pdf \u00b6 Types \u00b6 Name Summary PdfDocument [androidJvm] interface PdfDocument Represents a PDF document. PdfDocumentFactory [androidJvm] interface PdfDocumentFactory Functions \u00b6 Name Summary toLink [androidJvm] fun PdfDocument.OutlineNode . toLink (documentHref: String ): Link toLinks [androidJvm] fun List < PdfDocument.OutlineNode >. toLinks (documentHref: String ): List < Link > Converts a PDF outline to Link objects.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/#package-orgreadiumr2sharedutilpdf","text":"","title":"Package org.readium.r2.shared.util.pdf"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/#types","text":"Name Summary PdfDocument [androidJvm] interface PdfDocument Represents a PDF document. PdfDocumentFactory [androidJvm] interface PdfDocumentFactory","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/#functions","text":"Name Summary toLink [androidJvm] fun PdfDocument.OutlineNode . toLink (documentHref: String ): Link toLinks [androidJvm] fun List < PdfDocument.OutlineNode >. toLinks (documentHref: String ): List < Link > Converts a PDF outline to Link objects.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/to-link/","text":"// shared / org.readium.r2.shared.util.pdf / toLink toLink \u00b6 [androidJvm]\\ fun PdfDocument.OutlineNode . toLink (documentHref: String ): Link","title":"To link"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/to-link/#tolink","text":"[androidJvm]\\ fun PdfDocument.OutlineNode . toLink (documentHref: String ): Link","title":"toLink"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/to-links/","text":"// shared / org.readium.r2.shared.util.pdf / toLinks toLinks \u00b6 [androidJvm]\\ fun List < PdfDocument.OutlineNode >. toLinks (documentHref: String ): List < Link > Converts a PDF outline to Link objects. Parameters \u00b6 androidJvm documentHref HREF of the PDF document in the Publication to which the links are relative to.","title":"To links"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/to-links/#tolinks","text":"[androidJvm]\\ fun List < PdfDocument.OutlineNode >. toLinks (documentHref: String ): List < Link > Converts a PDF outline to Link objects.","title":"toLinks"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/to-links/#parameters","text":"androidJvm documentHref HREF of the PDF document in the Publication to which the links are relative to.","title":"Parameters"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/","text":"// shared / org.readium.r2.shared.util.pdf / PdfDocument PdfDocument \u00b6 [androidJvm]\\ interface PdfDocument Represents a PDF document. This is not used to render a PDF document, only to access its metadata. Types \u00b6 Name Summary Companion [androidJvm] object Companion OutlineNode [androidJvm] data class OutlineNode (title: String ?, pageNumber: Int , children: List < PdfDocument.OutlineNode >) Properties \u00b6 Name Summary author [androidJvm] abstract val author : String ? The name of the person who created the document. cover [androidJvm] abstract val cover : Bitmap ? The first page rendered as a cover. identifier [androidJvm] abstract val identifier : String ? Permanent identifier based on the contents of the file at the time it was originally created. keywords [androidJvm] abstract val keywords : List < String > Keywords associated with the document. outline [androidJvm] abstract val outline : List < PdfDocument.OutlineNode > Outline to build the table of contents. pageCount [androidJvm] abstract val pageCount : Int Number of pages in the document. subject [androidJvm] abstract val subject : String ? The subject of the document. title [androidJvm] abstract val title : String ? The document's title.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/#pdfdocument","text":"[androidJvm]\\ interface PdfDocument Represents a PDF document. This is not used to render a PDF document, only to access its metadata.","title":"PdfDocument"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/#types","text":"Name Summary Companion [androidJvm] object Companion OutlineNode [androidJvm] data class OutlineNode (title: String ?, pageNumber: Int , children: List < PdfDocument.OutlineNode >)","title":"Types"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/#properties","text":"Name Summary author [androidJvm] abstract val author : String ? The name of the person who created the document. cover [androidJvm] abstract val cover : Bitmap ? The first page rendered as a cover. identifier [androidJvm] abstract val identifier : String ? Permanent identifier based on the contents of the file at the time it was originally created. keywords [androidJvm] abstract val keywords : List < String > Keywords associated with the document. outline [androidJvm] abstract val outline : List < PdfDocument.OutlineNode > Outline to build the table of contents. pageCount [androidJvm] abstract val pageCount : Int Number of pages in the document. subject [androidJvm] abstract val subject : String ? The subject of the document. title [androidJvm] abstract val title : String ? The document's title.","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/author/","text":"// shared / org.readium.r2.shared.util.pdf / PdfDocument / author author \u00b6 [androidJvm]\\ abstract val author : String ? The name of the person who created the document.","title":"Author"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/author/#author","text":"[androidJvm]\\ abstract val author : String ? The name of the person who created the document.","title":"author"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/cover/","text":"// shared / org.readium.r2.shared.util.pdf / PdfDocument / cover cover \u00b6 [androidJvm]\\ abstract val cover : Bitmap ? The first page rendered as a cover.","title":"Cover"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/cover/#cover","text":"[androidJvm]\\ abstract val cover : Bitmap ? The first page rendered as a cover.","title":"cover"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/identifier/","text":"// shared / org.readium.r2.shared.util.pdf / PdfDocument / identifier identifier \u00b6 [androidJvm]\\ abstract val identifier : String ? Permanent identifier based on the contents of the file at the time it was originally created.","title":"Identifier"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/identifier/#identifier","text":"[androidJvm]\\ abstract val identifier : String ? Permanent identifier based on the contents of the file at the time it was originally created.","title":"identifier"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/keywords/","text":"// shared / org.readium.r2.shared.util.pdf / PdfDocument / keywords keywords \u00b6 [androidJvm]\\ abstract val keywords : List < String > Keywords associated with the document.","title":"Keywords"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/keywords/#keywords","text":"[androidJvm]\\ abstract val keywords : List < String > Keywords associated with the document.","title":"keywords"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/outline/","text":"// shared / org.readium.r2.shared.util.pdf / PdfDocument / outline outline \u00b6 [androidJvm]\\ abstract val outline : List < PdfDocument.OutlineNode > Outline to build the table of contents.","title":"Outline"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/outline/#outline","text":"[androidJvm]\\ abstract val outline : List < PdfDocument.OutlineNode > Outline to build the table of contents.","title":"outline"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/page-count/","text":"// shared / org.readium.r2.shared.util.pdf / PdfDocument / pageCount pageCount \u00b6 [androidJvm]\\ abstract val pageCount : Int Number of pages in the document.","title":"Page count"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/page-count/#pagecount","text":"[androidJvm]\\ abstract val pageCount : Int Number of pages in the document.","title":"pageCount"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/subject/","text":"// shared / org.readium.r2.shared.util.pdf / PdfDocument / subject subject \u00b6 [androidJvm]\\ abstract val subject : String ? The subject of the document.","title":"Subject"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/subject/#subject","text":"[androidJvm]\\ abstract val subject : String ? The subject of the document.","title":"subject"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/title/","text":"// shared / org.readium.r2.shared.util.pdf / PdfDocument / title title \u00b6 [androidJvm]\\ abstract val title : String ? The document's title.","title":"Title"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/title/#title","text":"[androidJvm]\\ abstract val title : String ? The document's title.","title":"title"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/-companion/","text":"// shared / org.readium.r2.shared.util.pdf / PdfDocument / Companion Companion \u00b6 [androidJvm]\\ object Companion","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/-outline-node/","text":"// shared / org.readium.r2.shared.util.pdf / PdfDocument / OutlineNode OutlineNode \u00b6 [androidJvm]\\ data class OutlineNode (title: String ?, pageNumber: Int , children: List < PdfDocument.OutlineNode >) Properties \u00b6 Name Summary children [androidJvm] val children : List < PdfDocument.OutlineNode > pageNumber [androidJvm] val pageNumber : Int title [androidJvm] val title : String ? Extensions \u00b6 Name Summary toLink [androidJvm] fun PdfDocument.OutlineNode . toLink (documentHref: String ): Link","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/-outline-node/#outlinenode","text":"[androidJvm]\\ data class OutlineNode (title: String ?, pageNumber: Int , children: List < PdfDocument.OutlineNode >)","title":"OutlineNode"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/-outline-node/#properties","text":"Name Summary children [androidJvm] val children : List < PdfDocument.OutlineNode > pageNumber [androidJvm] val pageNumber : Int title [androidJvm] val title : String ?","title":"Properties"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/-outline-node/#extensions","text":"Name Summary toLink [androidJvm] fun PdfDocument.OutlineNode . toLink (documentHref: String ): Link","title":"Extensions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/-outline-node/-outline-node/","text":"// shared / org.readium.r2.shared.util.pdf / PdfDocument / OutlineNode / OutlineNode OutlineNode \u00b6 [androidJvm]\\ fun OutlineNode (title: String ?, pageNumber: Int , children: List < PdfDocument.OutlineNode >)","title":" outline node"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/-outline-node/-outline-node/#outlinenode","text":"[androidJvm]\\ fun OutlineNode (title: String ?, pageNumber: Int , children: List < PdfDocument.OutlineNode >)","title":"OutlineNode"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/-outline-node/children/","text":"// shared / org.readium.r2.shared.util.pdf / PdfDocument / OutlineNode / children children \u00b6 [androidJvm]\\ val children : List < PdfDocument.OutlineNode >","title":"Children"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/-outline-node/children/#children","text":"[androidJvm]\\ val children : List < PdfDocument.OutlineNode >","title":"children"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/-outline-node/page-number/","text":"// shared / org.readium.r2.shared.util.pdf / PdfDocument / OutlineNode / pageNumber pageNumber \u00b6 [androidJvm]\\ val pageNumber : Int","title":"Page number"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/-outline-node/page-number/#pagenumber","text":"[androidJvm]\\ val pageNumber : Int","title":"pageNumber"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/-outline-node/title/","text":"// shared / org.readium.r2.shared.util.pdf / PdfDocument / OutlineNode / title title \u00b6 [androidJvm]\\ val title : String ?","title":"Title"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document/-outline-node/title/#title","text":"[androidJvm]\\ val title : String ?","title":"title"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document-factory/","text":"// shared / org.readium.r2.shared.util.pdf / PdfDocumentFactory PdfDocumentFactory \u00b6 [androidJvm]\\ interface PdfDocumentFactory Functions \u00b6 Name Summary open [androidJvm] abstract suspend fun open (file: File , password: String ?): PdfDocument Opens a PDF from a file . [androidJvm] abstract suspend fun open (resource: Resource , password: String ?): PdfDocument Opens a PDF from a Fetcher's resource.","title":"Index"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document-factory/#pdfdocumentfactory","text":"[androidJvm]\\ interface PdfDocumentFactory","title":"PdfDocumentFactory"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document-factory/#functions","text":"Name Summary open [androidJvm] abstract suspend fun open (file: File , password: String ?): PdfDocument Opens a PDF from a file . [androidJvm] abstract suspend fun open (resource: Resource , password: String ?): PdfDocument Opens a PDF from a Fetcher's resource.","title":"Functions"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document-factory/open/","text":"// shared / org.readium.r2.shared.util.pdf / PdfDocumentFactory / open open \u00b6 [androidJvm]\\ abstract suspend fun open (file: File , password: String ?): PdfDocument Opens a PDF from a file . [androidJvm]\\ abstract suspend fun open (resource: Resource , password: String ?): PdfDocument Opens a PDF from a Fetcher's resource.","title":"Open"},{"location":"readium/shared/shared/org.readium.r2.shared.util.pdf/-pdf-document-factory/open/#open","text":"[androidJvm]\\ abstract suspend fun open (file: File , password: String ?): PdfDocument Opens a PDF from a file . [androidJvm]\\ abstract suspend fun open (resource: Resource , password: String ?): PdfDocument Opens a PDF from a Fetcher's resource.","title":"open"},{"location":"readium/streamer/","text":"// streamer streamer \u00b6 Packages \u00b6 Name org.readium.r2.streamer org.readium.r2.streamer.container org.readium.r2.streamer.extensions org.readium.r2.streamer.fetcher org.readium.r2.streamer.parser org.readium.r2.streamer.parser.audio org.readium.r2.streamer.parser.cbz org.readium.r2.streamer.parser.divina org.readium.r2.streamer.parser.epub org.readium.r2.streamer.parser.image org.readium.r2.streamer.parser.pdf org.readium.r2.streamer.parser.readium org.readium.r2.streamer.server org.readium.r2.streamer.server.handler","title":"Streamer"},{"location":"readium/streamer/#streamer","text":"","title":"streamer"},{"location":"readium/streamer/#packages","text":"Name org.readium.r2.streamer org.readium.r2.streamer.container org.readium.r2.streamer.extensions org.readium.r2.streamer.fetcher org.readium.r2.streamer.parser org.readium.r2.streamer.parser.audio org.readium.r2.streamer.parser.cbz org.readium.r2.streamer.parser.divina org.readium.r2.streamer.parser.epub org.readium.r2.streamer.parser.image org.readium.r2.streamer.parser.pdf org.readium.r2.streamer.parser.readium org.readium.r2.streamer.server org.readium.r2.streamer.server.handler","title":"Packages"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.extensions/","text":"// streamer / org.readium.r2.streamer.extensions Package org.readium.r2.streamer.extensions \u00b6","title":"Org.readium.r2.streamer.extensions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.extensions/#package-orgreadiumr2streamerextensions","text":"","title":"Package org.readium.r2.streamer.extensions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.fetcher/","text":"// streamer / org.readium.r2.streamer.fetcher Package org.readium.r2.streamer.fetcher \u00b6","title":"Org.readium.r2.streamer.fetcher"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.fetcher/#package-orgreadiumr2streamerfetcher","text":"","title":"Package org.readium.r2.streamer.fetcher"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/","text":"// streamer / org.readium.r2.streamer Package org.readium.r2.streamer \u00b6 Types \u00b6 Name Summary DefaultPdfDocumentFactory [androidJvm] class DefaultPdfDocumentFactory : PdfDocumentFactory PublicationParser [androidJvm] interface PublicationParser Parses a Publication from an asset. Streamer [androidJvm] class Streamer (context: Context , parsers: List < PublicationParser >, ignoreDefaultParsers: Boolean , contentProtections: List < ContentProtection >, archiveFactory: ArchiveFactory , pdfFactory: PdfDocumentFactory , httpClient: DefaultHttpClient , onCreatePublication: Publication.Builder .() -> Unit ) Opens a Publication using a list of parsers.","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/#package-orgreadiumr2streamer","text":"","title":"Package org.readium.r2.streamer"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/#types","text":"Name Summary DefaultPdfDocumentFactory [androidJvm] class DefaultPdfDocumentFactory : PdfDocumentFactory PublicationParser [androidJvm] interface PublicationParser Parses a Publication from an asset. Streamer [androidJvm] class Streamer (context: Context , parsers: List < PublicationParser >, ignoreDefaultParsers: Boolean , contentProtections: List < ContentProtection >, archiveFactory: ArchiveFactory , pdfFactory: PdfDocumentFactory , httpClient: DefaultHttpClient , onCreatePublication: Publication.Builder .() -> Unit ) Opens a Publication using a list of parsers.","title":"Types"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/-default-pdf-document-factory/","text":"// streamer / org.readium.r2.streamer / DefaultPdfDocumentFactory DefaultPdfDocumentFactory \u00b6 [androidJvm]\\ class DefaultPdfDocumentFactory : PdfDocumentFactory Constructors \u00b6 DefaultPdfDocumentFactory [androidJvm] fun DefaultPdfDocumentFactory (context: Context ) Pdfium is the default implementation. Functions \u00b6 Name Summary open [androidJvm] open suspend override fun open (file: File , password: String ?): PdfDocument open suspend override fun open (resource: Resource , password: String ?): PdfDocument","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/-default-pdf-document-factory/#defaultpdfdocumentfactory","text":"[androidJvm]\\ class DefaultPdfDocumentFactory : PdfDocumentFactory","title":"DefaultPdfDocumentFactory"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/-default-pdf-document-factory/#constructors","text":"DefaultPdfDocumentFactory [androidJvm] fun DefaultPdfDocumentFactory (context: Context ) Pdfium is the default implementation.","title":"Constructors"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/-default-pdf-document-factory/#functions","text":"Name Summary open [androidJvm] open suspend override fun open (file: File , password: String ?): PdfDocument open suspend override fun open (resource: Resource , password: String ?): PdfDocument","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/-default-pdf-document-factory/-default-pdf-document-factory/","text":"// streamer / org.readium.r2.streamer / DefaultPdfDocumentFactory / DefaultPdfDocumentFactory DefaultPdfDocumentFactory \u00b6 [androidJvm]\\ fun DefaultPdfDocumentFactory (context: Context ) Pdfium is the default implementation.","title":" default pdf document factory"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/-default-pdf-document-factory/-default-pdf-document-factory/#defaultpdfdocumentfactory","text":"[androidJvm]\\ fun DefaultPdfDocumentFactory (context: Context ) Pdfium is the default implementation.","title":"DefaultPdfDocumentFactory"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/-publication-parser/","text":"// streamer / org.readium.r2.streamer / PublicationParser PublicationParser \u00b6 [androidJvm]\\ interface PublicationParser Parses a Publication from an asset. Functions \u00b6 Name Summary parse [androidJvm] abstract suspend fun parse (asset: PublicationAsset , fetcher: Fetcher , warnings: WarningLogger ? = null): Publication.Builder ? Constructs a Publication.Builder to build a Publication from a publication asset. Inheritors \u00b6 Name AudioParser EpubParser ImageParser PdfParser ReadiumWebPubParser","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/-publication-parser/#publicationparser","text":"[androidJvm]\\ interface PublicationParser Parses a Publication from an asset.","title":"PublicationParser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/-publication-parser/#functions","text":"Name Summary parse [androidJvm] abstract suspend fun parse (asset: PublicationAsset , fetcher: Fetcher , warnings: WarningLogger ? = null): Publication.Builder ? Constructs a Publication.Builder to build a Publication from a publication asset.","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/-publication-parser/#inheritors","text":"Name AudioParser EpubParser ImageParser PdfParser ReadiumWebPubParser","title":"Inheritors"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/-publication-parser/parse/","text":"// streamer / org.readium.r2.streamer / PublicationParser / parse parse \u00b6 [androidJvm]\\ abstract suspend fun parse (asset: PublicationAsset , fetcher: Fetcher , warnings: WarningLogger ? = null): Publication.Builder ? Constructs a Publication.Builder to build a Publication from a publication asset. Parameters \u00b6 androidJvm asset Digital medium (e.g. a file) used to access the publication. fetcher Initial leaf fetcher which should be used to read the publication's resources. This can be used to: support content protection technologies parse exploded archives or in archiving formats unknown to the parser, e.g. RAR If the asset is not an archive, it will be reachable at the HREF /, e.g. with a PDF. warnings Used to report non-fatal parsing warnings, such as publication authoring mistakes. This is useful to warn users of potential rendering issues or help authors debug their publications.","title":"Parse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/-publication-parser/parse/#parse","text":"[androidJvm]\\ abstract suspend fun parse (asset: PublicationAsset , fetcher: Fetcher , warnings: WarningLogger ? = null): Publication.Builder ? Constructs a Publication.Builder to build a Publication from a publication asset.","title":"parse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/-publication-parser/parse/#parameters","text":"androidJvm asset Digital medium (e.g. a file) used to access the publication. fetcher Initial leaf fetcher which should be used to read the publication's resources. This can be used to: support content protection technologies parse exploded archives or in archiving formats unknown to the parser, e.g. RAR If the asset is not an archive, it will be reachable at the HREF /, e.g. with a PDF. warnings Used to report non-fatal parsing warnings, such as publication authoring mistakes. This is useful to warn users of potential rendering issues or help authors debug their publications.","title":"Parameters"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/-streamer/","text":"// streamer / org.readium.r2.streamer / Streamer Streamer \u00b6 [androidJvm]\\ class Streamer (context: Context , parsers: List < PublicationParser >, ignoreDefaultParsers: Boolean , contentProtections: List < ContentProtection >, archiveFactory: ArchiveFactory , pdfFactory: PdfDocumentFactory , httpClient: DefaultHttpClient , onCreatePublication: Publication.Builder .() -> Unit ) Opens a Publication using a list of parsers. The Streamer is configured to use Readium's default parsers, which you can bypass using ignoreDefaultParsers. However, you can provide additional parsers which will take precedence over the default ones. This can also be used to provide an alternative configuration of a default parser. Parameters \u00b6 androidJvm context Application context. parsers Parsers used to open a publication, in addition to the default parsers. ignoreDefaultParsers When true, only parsers provided in parsers will be used. archiveFactory Opens an archive (e.g. ZIP, RAR), optionally protected by credentials. pdfFactory Parses a PDF document, optionally protected by password. httpClient Service performing HTTP requests. onCreatePublication Called on every parsed Publication.Builder . It can be used to modify the Manifest, the root Fetcher or the list of service factories of a Publication . Constructors \u00b6 Streamer [androidJvm] fun Streamer (context: Context , parsers: List < PublicationParser > = emptyList(), ignoreDefaultParsers: Boolean = false, contentProtections: List < ContentProtection > = emptyList(), archiveFactory: ArchiveFactory = DefaultArchiveFactory(), pdfFactory: PdfDocumentFactory = DefaultPdfDocumentFactory(context), httpClient: DefaultHttpClient = DefaultHttpClient(), onCreatePublication: Publication.Builder .() -> Unit = {}) Functions \u00b6 Name Summary open [androidJvm] suspend fun open (asset: PublicationAsset , credentials: String ? = null, allowUserInteraction: Boolean , sender: Any ? = null, onCreatePublication: Publication.Builder .() -> Unit = {}, warnings: WarningLogger ? = null): PublicationTry < Publication > Parses a Publication from the given asset.","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/-streamer/#streamer","text":"[androidJvm]\\ class Streamer (context: Context , parsers: List < PublicationParser >, ignoreDefaultParsers: Boolean , contentProtections: List < ContentProtection >, archiveFactory: ArchiveFactory , pdfFactory: PdfDocumentFactory , httpClient: DefaultHttpClient , onCreatePublication: Publication.Builder .() -> Unit ) Opens a Publication using a list of parsers. The Streamer is configured to use Readium's default parsers, which you can bypass using ignoreDefaultParsers. However, you can provide additional parsers which will take precedence over the default ones. This can also be used to provide an alternative configuration of a default parser.","title":"Streamer"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/-streamer/#parameters","text":"androidJvm context Application context. parsers Parsers used to open a publication, in addition to the default parsers. ignoreDefaultParsers When true, only parsers provided in parsers will be used. archiveFactory Opens an archive (e.g. ZIP, RAR), optionally protected by credentials. pdfFactory Parses a PDF document, optionally protected by password. httpClient Service performing HTTP requests. onCreatePublication Called on every parsed Publication.Builder . It can be used to modify the Manifest, the root Fetcher or the list of service factories of a Publication .","title":"Parameters"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/-streamer/#constructors","text":"Streamer [androidJvm] fun Streamer (context: Context , parsers: List < PublicationParser > = emptyList(), ignoreDefaultParsers: Boolean = false, contentProtections: List < ContentProtection > = emptyList(), archiveFactory: ArchiveFactory = DefaultArchiveFactory(), pdfFactory: PdfDocumentFactory = DefaultPdfDocumentFactory(context), httpClient: DefaultHttpClient = DefaultHttpClient(), onCreatePublication: Publication.Builder .() -> Unit = {})","title":"Constructors"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/-streamer/#functions","text":"Name Summary open [androidJvm] suspend fun open (asset: PublicationAsset , credentials: String ? = null, allowUserInteraction: Boolean , sender: Any ? = null, onCreatePublication: Publication.Builder .() -> Unit = {}, warnings: WarningLogger ? = null): PublicationTry < Publication > Parses a Publication from the given asset.","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/-streamer/-streamer/","text":"// streamer / org.readium.r2.streamer / Streamer / Streamer Streamer \u00b6 [androidJvm]\\ fun Streamer (context: Context , parsers: List < PublicationParser > = emptyList(), ignoreDefaultParsers: Boolean = false, contentProtections: List < ContentProtection > = emptyList(), archiveFactory: ArchiveFactory = DefaultArchiveFactory(), pdfFactory: PdfDocumentFactory = DefaultPdfDocumentFactory(context), httpClient: DefaultHttpClient = DefaultHttpClient(), onCreatePublication: Publication.Builder .() -> Unit = {}) Parameters \u00b6 androidJvm context Application context. parsers Parsers used to open a publication, in addition to the default parsers. ignoreDefaultParsers When true, only parsers provided in parsers will be used. archiveFactory Opens an archive (e.g. ZIP, RAR), optionally protected by credentials. pdfFactory Parses a PDF document, optionally protected by password. httpClient Service performing HTTP requests. onCreatePublication Called on every parsed Publication.Builder . It can be used to modify the Manifest, the root Fetcher or the list of service factories of a Publication .","title":" streamer"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/-streamer/-streamer/#streamer","text":"[androidJvm]\\ fun Streamer (context: Context , parsers: List < PublicationParser > = emptyList(), ignoreDefaultParsers: Boolean = false, contentProtections: List < ContentProtection > = emptyList(), archiveFactory: ArchiveFactory = DefaultArchiveFactory(), pdfFactory: PdfDocumentFactory = DefaultPdfDocumentFactory(context), httpClient: DefaultHttpClient = DefaultHttpClient(), onCreatePublication: Publication.Builder .() -> Unit = {})","title":"Streamer"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/-streamer/-streamer/#parameters","text":"androidJvm context Application context. parsers Parsers used to open a publication, in addition to the default parsers. ignoreDefaultParsers When true, only parsers provided in parsers will be used. archiveFactory Opens an archive (e.g. ZIP, RAR), optionally protected by credentials. pdfFactory Parses a PDF document, optionally protected by password. httpClient Service performing HTTP requests. onCreatePublication Called on every parsed Publication.Builder . It can be used to modify the Manifest, the root Fetcher or the list of service factories of a Publication .","title":"Parameters"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/-streamer/open/","text":"// streamer / org.readium.r2.streamer / Streamer / open open \u00b6 [androidJvm]\\ suspend fun open (asset: PublicationAsset , credentials: String ? = null, allowUserInteraction: Boolean , sender: Any ? = null, onCreatePublication: Publication.Builder .() -> Unit = {}, warnings: WarningLogger ? = null): PublicationTry < Publication > Parses a Publication from the given asset. If you are opening the publication to render it in a Navigator, you must set allowUserInteraction to true to prompt the user for its credentials when the publication is protected. However, set it to false if you just want to import the Publication without reading its content, to avoid prompting the user. When using Content Protections, you can use sender to provide a free object which can be used to give some context. For example, it could be the source Activity or Fragment which would be used to present a credentials dialog. The warnings logger can be used to observe non-fatal parsing warnings, caused by publication authoring mistakes. This can be useful to warn users of potential rendering issues. Return \u00b6 Null if the asset was not recognized by any parser, or a Publication.OpeningException in case of failure. Parameters \u00b6 androidJvm asset Digital medium (e.g. a file) used to access the publication. credentials Credentials that Content Protections can use to attempt to unlock a publication, for example a password. allowUserInteraction Indicates whether the user can be prompted, for example for its credentials. sender Free object that can be used by reading apps to give some UX context when presenting dialogs. onCreatePublication Transformation which will be applied on the Publication Builder. It can be used to modify the Manifest, the root Fetcher or the list of service factories of the Publication . warnings Logger used to broadcast non-fatal parsing warnings.","title":"Open"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/-streamer/open/#open","text":"[androidJvm]\\ suspend fun open (asset: PublicationAsset , credentials: String ? = null, allowUserInteraction: Boolean , sender: Any ? = null, onCreatePublication: Publication.Builder .() -> Unit = {}, warnings: WarningLogger ? = null): PublicationTry < Publication > Parses a Publication from the given asset. If you are opening the publication to render it in a Navigator, you must set allowUserInteraction to true to prompt the user for its credentials when the publication is protected. However, set it to false if you just want to import the Publication without reading its content, to avoid prompting the user. When using Content Protections, you can use sender to provide a free object which can be used to give some context. For example, it could be the source Activity or Fragment which would be used to present a credentials dialog. The warnings logger can be used to observe non-fatal parsing warnings, caused by publication authoring mistakes. This can be useful to warn users of potential rendering issues.","title":"open"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/-streamer/open/#return","text":"Null if the asset was not recognized by any parser, or a Publication.OpeningException in case of failure.","title":"Return"},{"location":"readium/streamer/streamer/org.readium.r2.streamer/-streamer/open/#parameters","text":"androidJvm asset Digital medium (e.g. a file) used to access the publication. credentials Credentials that Content Protections can use to attempt to unlock a publication, for example a password. allowUserInteraction Indicates whether the user can be prompted, for example for its credentials. sender Free object that can be used by reading apps to give some UX context when presenting dialogs. onCreatePublication Transformation which will be applied on the Publication Builder. It can be used to modify the Manifest, the root Fetcher or the list of service factories of the Publication . warnings Logger used to broadcast non-fatal parsing warnings.","title":"Parameters"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/","text":"// streamer / org.readium.r2.streamer.container Package org.readium.r2.streamer.container \u00b6 Types \u00b6 Name Summary Container [androidJvm] interface Container Container of a publication ContainerError [androidJvm] sealed class ContainerError : Exception","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/#package-orgreadiumr2streamercontainer","text":"","title":"Package org.readium.r2.streamer.container"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/#types","text":"Name Summary Container [androidJvm] interface Container Container of a publication ContainerError [androidJvm] sealed class ContainerError : Exception","title":"Types"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container/","text":"// streamer / org.readium.r2.streamer.container / Container Container \u00b6 [androidJvm]\\ interface Container Container of a publication Properties \u00b6 Name Summary drm [androidJvm] abstract var drm : DRM ? rootFile [androidJvm] abstract var rootFile : RootFile","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container/#container","text":"[androidJvm]\\ interface Container Container of a publication","title":"Container"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container/#properties","text":"Name Summary drm [androidJvm] abstract var drm : DRM ? rootFile [androidJvm] abstract var rootFile : RootFile","title":"Properties"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container/drm/","text":"// streamer / org.readium.r2.streamer.container / Container / drm drm \u00b6 [androidJvm]\\ abstract var drm : DRM ?","title":"Drm"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container/drm/#drm","text":"[androidJvm]\\ abstract var drm : DRM ?","title":"drm"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container/root-file/","text":"// streamer / org.readium.r2.streamer.container / Container / rootFile rootFile \u00b6 [androidJvm]\\ abstract var rootFile : RootFile","title":"Root file"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container/root-file/#rootfile","text":"[androidJvm]\\ abstract var rootFile : RootFile","title":"rootFile"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/","text":"// streamer / org.readium.r2.streamer.container / ContainerError ContainerError \u00b6 [androidJvm]\\ sealed class ContainerError : Exception Types \u00b6 Name Summary fileError [androidJvm] object fileError : ContainerError fileNotFound [androidJvm] object fileNotFound : ContainerError missingFile [androidJvm] data class missingFile (path: String ) : ContainerError missingLink [androidJvm] data class missingLink (title: String ?) : ContainerError streamInitFailed [androidJvm] object streamInitFailed : ContainerError xmlParse [androidJvm] data class xmlParse (underlyingError: Error ) : ContainerError Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? Inheritors \u00b6 Name ContainerError ContainerError ContainerError ContainerError ContainerError ContainerError","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/#containererror","text":"[androidJvm]\\ sealed class ContainerError : Exception","title":"ContainerError"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/#types","text":"Name Summary fileError [androidJvm] object fileError : ContainerError fileNotFound [androidJvm] object fileNotFound : ContainerError missingFile [androidJvm] data class missingFile (path: String ) : ContainerError missingLink [androidJvm] data class missingLink (title: String ?) : ContainerError streamInitFailed [androidJvm] object streamInitFailed : ContainerError xmlParse [androidJvm] data class xmlParse (underlyingError: Error ) : ContainerError","title":"Types"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/#inheritors","text":"Name ContainerError ContainerError ContainerError ContainerError ContainerError ContainerError","title":"Inheritors"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/file-error/","text":"// streamer / org.readium.r2.streamer.container / ContainerError / fileError fileError \u00b6 [androidJvm]\\ object fileError : ContainerError Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/file-error/#fileerror","text":"[androidJvm]\\ object fileError : ContainerError","title":"fileError"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/file-error/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/file-error/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/file-not-found/","text":"// streamer / org.readium.r2.streamer.container / ContainerError / fileNotFound fileNotFound \u00b6 [androidJvm]\\ object fileNotFound : ContainerError Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/file-not-found/#filenotfound","text":"[androidJvm]\\ object fileNotFound : ContainerError","title":"fileNotFound"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/file-not-found/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/file-not-found/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/missing-file/","text":"// streamer / org.readium.r2.streamer.container / ContainerError / missingFile missingFile \u00b6 [androidJvm]\\ data class missingFile (path: String ) : ContainerError Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? path [androidJvm] val path : String","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/missing-file/#missingfile","text":"[androidJvm]\\ data class missingFile (path: String ) : ContainerError","title":"missingFile"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/missing-file/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/missing-file/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? path [androidJvm] val path : String","title":"Properties"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/missing-file/missing-file/","text":"// streamer / org.readium.r2.streamer.container / ContainerError / missingFile / missingFile missingFile \u00b6 [androidJvm]\\ fun missingFile (path: String )","title":"Missing file"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/missing-file/missing-file/#missingfile","text":"[androidJvm]\\ fun missingFile (path: String )","title":"missingFile"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/missing-file/path/","text":"// streamer / org.readium.r2.streamer.container / ContainerError / missingFile / path path \u00b6 [androidJvm]\\ val path : String","title":"Path"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/missing-file/path/#path","text":"[androidJvm]\\ val path : String","title":"path"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/missing-link/","text":"// streamer / org.readium.r2.streamer.container / ContainerError / missingLink missingLink \u00b6 [androidJvm]\\ data class missingLink (title: String ?) : ContainerError Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? title [androidJvm] val title : String ?","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/missing-link/#missinglink","text":"[androidJvm]\\ data class missingLink (title: String ?) : ContainerError","title":"missingLink"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/missing-link/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/missing-link/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? title [androidJvm] val title : String ?","title":"Properties"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/missing-link/missing-link/","text":"// streamer / org.readium.r2.streamer.container / ContainerError / missingLink / missingLink missingLink \u00b6 [androidJvm]\\ fun missingLink (title: String ?)","title":"Missing link"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/missing-link/missing-link/#missinglink","text":"[androidJvm]\\ fun missingLink (title: String ?)","title":"missingLink"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/missing-link/title/","text":"// streamer / org.readium.r2.streamer.container / ContainerError / missingLink / title title \u00b6 [androidJvm]\\ val title : String ?","title":"Title"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/missing-link/title/#title","text":"[androidJvm]\\ val title : String ?","title":"title"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/stream-init-failed/","text":"// streamer / org.readium.r2.streamer.container / ContainerError / streamInitFailed streamInitFailed \u00b6 [androidJvm]\\ object streamInitFailed : ContainerError Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/stream-init-failed/#streaminitfailed","text":"[androidJvm]\\ object streamInitFailed : ContainerError","title":"streamInitFailed"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/stream-init-failed/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/stream-init-failed/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ?","title":"Properties"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/xml-parse/","text":"// streamer / org.readium.r2.streamer.container / ContainerError / xmlParse xmlParse \u00b6 [androidJvm]\\ data class xmlParse (underlyingError: Error ) : ContainerError Functions \u00b6 Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >) Properties \u00b6 Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? underlyingError [androidJvm] val underlyingError : Error","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/xml-parse/#xmlparse","text":"[androidJvm]\\ data class xmlParse (underlyingError: Error ) : ContainerError","title":"xmlParse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/xml-parse/#functions","text":"Name Summary addSuppressed [androidJvm] fun addSuppressed (p0: Throwable ) fillInStackTrace [androidJvm] open fun fillInStackTrace (): Throwable getLocalizedMessage [androidJvm] open fun getLocalizedMessage (): String getStackTrace [androidJvm] open fun getStackTrace (): Array < StackTraceElement > getSuppressed [androidJvm] fun getSuppressed (): Array < Throwable > initCause [androidJvm] open fun initCause (p0: Throwable ): Throwable printStackTrace [androidJvm] open fun printStackTrace () open fun printStackTrace (p0: PrintStream ) open fun printStackTrace (p0: PrintWriter ) setStackTrace [androidJvm] open fun setStackTrace (p0: Array < StackTraceElement >)","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/xml-parse/#properties","text":"Name Summary cause [androidJvm] open val cause : Throwable ? message [androidJvm] open val message : String ? underlyingError [androidJvm] val underlyingError : Error","title":"Properties"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/xml-parse/underlying-error/","text":"// streamer / org.readium.r2.streamer.container / ContainerError / xmlParse / underlyingError underlyingError \u00b6 [androidJvm]\\ val underlyingError : Error","title":"Underlying error"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/xml-parse/underlying-error/#underlyingerror","text":"[androidJvm]\\ val underlyingError : Error","title":"underlyingError"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/xml-parse/xml-parse/","text":"// streamer / org.readium.r2.streamer.container / ContainerError / xmlParse / xmlParse xmlParse \u00b6 [androidJvm]\\ fun xmlParse (underlyingError: Error )","title":"Xml parse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.container/-container-error/xml-parse/xml-parse/#xmlparse","text":"[androidJvm]\\ fun xmlParse (underlyingError: Error )","title":"xmlParse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser/","text":"// streamer / org.readium.r2.streamer.parser Package org.readium.r2.streamer.parser \u00b6 Types \u00b6 Name Summary PubBox [androidJvm] data class PubBox (publication: Publication , container: Container ) PublicationParser [androidJvm] interface PublicationParser","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser/#package-orgreadiumr2streamerparser","text":"","title":"Package org.readium.r2.streamer.parser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser/#types","text":"Name Summary PubBox [androidJvm] data class PubBox (publication: Publication , container: Container ) PublicationParser [androidJvm] interface PublicationParser","title":"Types"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser/-pub-box/","text":"// streamer / org.readium.r2.streamer.parser / PubBox PubBox \u00b6 [androidJvm]\\ data class PubBox (publication: Publication , container: Container ) Properties \u00b6 Name Summary container [androidJvm] var container : Container publication [androidJvm] var publication : Publication","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser/-pub-box/#pubbox","text":"[androidJvm]\\ data class PubBox (publication: Publication , container: Container )","title":"PubBox"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser/-pub-box/#properties","text":"Name Summary container [androidJvm] var container : Container publication [androidJvm] var publication : Publication","title":"Properties"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser/-pub-box/-pub-box/","text":"// streamer / org.readium.r2.streamer.parser / PubBox / PubBox PubBox \u00b6 [androidJvm]\\ fun PubBox (publication: Publication , container: Container )","title":" pub box"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser/-pub-box/-pub-box/#pubbox","text":"[androidJvm]\\ fun PubBox (publication: Publication , container: Container )","title":"PubBox"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser/-pub-box/container/","text":"// streamer / org.readium.r2.streamer.parser / PubBox / container container \u00b6 [androidJvm]\\ var container : Container","title":"Container"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser/-pub-box/container/#container","text":"[androidJvm]\\ var container : Container","title":"container"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser/-pub-box/publication/","text":"// streamer / org.readium.r2.streamer.parser / PubBox / publication publication \u00b6 [androidJvm]\\ var publication : Publication","title":"Publication"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser/-pub-box/publication/#publication","text":"[androidJvm]\\ var publication : Publication","title":"publication"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser/-publication-parser/","text":"// streamer / org.readium.r2.streamer.parser / PublicationParser PublicationParser \u00b6 [androidJvm]\\ interface PublicationParser Functions \u00b6 Name Summary parse [androidJvm] abstract fun parse (fileAtPath: String , fallbackTitle: String = File(fileAtPath).name): PubBox ? Inheritors \u00b6 Name AudioBookParser CBZParser DiViNaParser EpubParser PdfParser ReadiumWebPubParser","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser/-publication-parser/#publicationparser","text":"[androidJvm]\\ interface PublicationParser","title":"PublicationParser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser/-publication-parser/#functions","text":"Name Summary parse [androidJvm] abstract fun parse (fileAtPath: String , fallbackTitle: String = File(fileAtPath).name): PubBox ?","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser/-publication-parser/#inheritors","text":"Name AudioBookParser CBZParser DiViNaParser EpubParser PdfParser ReadiumWebPubParser","title":"Inheritors"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser/-publication-parser/parse/","text":"// streamer / org.readium.r2.streamer.parser / PublicationParser / parse parse \u00b6 [androidJvm]\\ abstract fun parse (fileAtPath: String , fallbackTitle: String = File(fileAtPath).name): PubBox ?","title":"Parse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser/-publication-parser/parse/#parse","text":"[androidJvm]\\ abstract fun parse (fileAtPath: String , fallbackTitle: String = File(fileAtPath).name): PubBox ?","title":"parse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/","text":"// streamer / org.readium.r2.streamer.parser.audio Package org.readium.r2.streamer.parser.audio \u00b6 Types \u00b6 Name Summary AudioBookConstant [androidJvm] class AudioBookConstant AudioBookParser [androidJvm] class AudioBookParser : PublicationParser AudioLocatorService [androidJvm] class AudioLocatorService (readingOrder: List < Link >) : LocatorService Locator service for audio publications. AudioParser [androidJvm] class AudioParser : PublicationParser Parses an audiobook Publication from an unstructured archive format containing audio files, such as ZAB (Zipped Audio Book) or a simple ZIP.","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/#package-orgreadiumr2streamerparseraudio","text":"","title":"Package org.readium.r2.streamer.parser.audio"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/#types","text":"Name Summary AudioBookConstant [androidJvm] class AudioBookConstant AudioBookParser [androidJvm] class AudioBookParser : PublicationParser AudioLocatorService [androidJvm] class AudioLocatorService (readingOrder: List < Link >) : LocatorService Locator service for audio publications. AudioParser [androidJvm] class AudioParser : PublicationParser Parses an audiobook Publication from an unstructured archive format containing audio files, such as ZAB (Zipped Audio Book) or a simple ZIP.","title":"Types"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-book-constant/","text":"// streamer / org.readium.r2.streamer.parser.audio / AudioBookConstant AudioBookConstant \u00b6 [androidJvm]\\ class AudioBookConstant Types \u00b6 Name Summary Companion [androidJvm] object Companion","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-book-constant/#audiobookconstant","text":"[androidJvm]\\ class AudioBookConstant","title":"AudioBookConstant"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-book-constant/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-book-constant/-audio-book-constant/","text":"// streamer / org.readium.r2.streamer.parser.audio / AudioBookConstant / AudioBookConstant AudioBookConstant \u00b6 [androidJvm]\\ fun AudioBookConstant ()","title":" audio book constant"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-book-constant/-audio-book-constant/#audiobookconstant","text":"[androidJvm]\\ fun AudioBookConstant ()","title":"AudioBookConstant"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-book-constant/-companion/","text":"// streamer / org.readium.r2.streamer.parser.audio / AudioBookConstant / Companion Companion \u00b6 [androidJvm]\\ object Companion","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-book-constant/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-book-parser/","text":"// streamer / org.readium.r2.streamer.parser.audio / AudioBookParser AudioBookParser \u00b6 [androidJvm]\\ class AudioBookParser : PublicationParser AudiobookParser : Handle any Audiobook Package file. Opening, listing files get name of the resource, creating the Publication for rendering Constructors \u00b6 AudioBookParser [androidJvm] fun AudioBookParser () Functions \u00b6 Name Summary parse [androidJvm] open override fun parse (fileAtPath: String , fallbackTitle: String ): PubBox ? This functions parse a manifest.json and build PubBox object from it","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-book-parser/#audiobookparser","text":"[androidJvm]\\ class AudioBookParser : PublicationParser AudiobookParser : Handle any Audiobook Package file. Opening, listing files get name of the resource, creating the Publication for rendering","title":"AudioBookParser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-book-parser/#constructors","text":"AudioBookParser [androidJvm] fun AudioBookParser ()","title":"Constructors"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-book-parser/#functions","text":"Name Summary parse [androidJvm] open override fun parse (fileAtPath: String , fallbackTitle: String ): PubBox ? This functions parse a manifest.json and build PubBox object from it","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-book-parser/-audio-book-parser/","text":"// streamer / org.readium.r2.streamer.parser.audio / AudioBookParser / AudioBookParser AudioBookParser \u00b6 [androidJvm]\\ fun AudioBookParser ()","title":" audio book parser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-book-parser/-audio-book-parser/#audiobookparser","text":"[androidJvm]\\ fun AudioBookParser ()","title":"AudioBookParser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-book-parser/parse/","text":"// streamer / org.readium.r2.streamer.parser.audio / AudioBookParser / parse parse \u00b6 [androidJvm]\\ open override fun parse (fileAtPath: String , fallbackTitle: String ): PubBox ? This functions parse a manifest.json and build PubBox object from it","title":"Parse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-book-parser/parse/#parse","text":"[androidJvm]\\ open override fun parse (fileAtPath: String , fallbackTitle: String ): PubBox ? This functions parse a manifest.json and build PubBox object from it","title":"parse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-locator-service/","text":"// streamer / org.readium.r2.streamer.parser.audio / AudioLocatorService AudioLocatorService \u00b6 [androidJvm]\\ class AudioLocatorService (readingOrder: List < Link >) : LocatorService Locator service for audio publications. Constructors \u00b6 AudioLocatorService [androidJvm] fun AudioLocatorService (readingOrder: List < Link >) Types \u00b6 Name Summary Companion [androidJvm] object Companion Functions \u00b6 Name Summary close [androidJvm] open fun close () get [androidJvm] open fun get (link: Link ): Resource ? locate [androidJvm] open suspend override fun locate (locator: Locator ): Locator ? locateProgression [androidJvm] open suspend override fun locateProgression (totalProgression: Double ): Locator ? Properties \u00b6 Name Summary links [androidJvm] open val links : List < Link >","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-locator-service/#audiolocatorservice","text":"[androidJvm]\\ class AudioLocatorService (readingOrder: List < Link >) : LocatorService Locator service for audio publications.","title":"AudioLocatorService"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-locator-service/#constructors","text":"AudioLocatorService [androidJvm] fun AudioLocatorService (readingOrder: List < Link >)","title":"Constructors"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-locator-service/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-locator-service/#functions","text":"Name Summary close [androidJvm] open fun close () get [androidJvm] open fun get (link: Link ): Resource ? locate [androidJvm] open suspend override fun locate (locator: Locator ): Locator ? locateProgression [androidJvm] open suspend override fun locateProgression (totalProgression: Double ): Locator ?","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-locator-service/#properties","text":"Name Summary links [androidJvm] open val links : List < Link >","title":"Properties"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-locator-service/-audio-locator-service/","text":"// streamer / org.readium.r2.streamer.parser.audio / AudioLocatorService / AudioLocatorService AudioLocatorService \u00b6 [androidJvm]\\ fun AudioLocatorService (readingOrder: List < Link >)","title":" audio locator service"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-locator-service/-audio-locator-service/#audiolocatorservice","text":"[androidJvm]\\ fun AudioLocatorService (readingOrder: List < Link >)","title":"AudioLocatorService"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-locator-service/locate-progression/","text":"// streamer / org.readium.r2.streamer.parser.audio / AudioLocatorService / locateProgression locateProgression \u00b6 [androidJvm]\\ open suspend override fun locateProgression (totalProgression: Double ): Locator ?","title":"Locate progression"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-locator-service/locate-progression/#locateprogression","text":"[androidJvm]\\ open suspend override fun locateProgression (totalProgression: Double ): Locator ?","title":"locateProgression"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-locator-service/locate/","text":"// streamer / org.readium.r2.streamer.parser.audio / AudioLocatorService / locate locate \u00b6 [androidJvm]\\ open suspend override fun locate (locator: Locator ): Locator ?","title":"Locate"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-locator-service/locate/#locate","text":"[androidJvm]\\ open suspend override fun locate (locator: Locator ): Locator ?","title":"locate"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-locator-service/-companion/","text":"// streamer / org.readium.r2.streamer.parser.audio / AudioLocatorService / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary createFactory [androidJvm] fun createFactory (): ( Publication.Service.Context ) -> AudioLocatorService","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-locator-service/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-locator-service/-companion/#functions","text":"Name Summary createFactory [androidJvm] fun createFactory (): ( Publication.Service.Context ) -> AudioLocatorService","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-locator-service/-companion/create-factory/","text":"// streamer / org.readium.r2.streamer.parser.audio / AudioLocatorService / Companion / createFactory createFactory \u00b6 [androidJvm]\\ fun createFactory (): ( Publication.Service.Context ) -> AudioLocatorService","title":"Create factory"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-locator-service/-companion/create-factory/#createfactory","text":"[androidJvm]\\ fun createFactory (): ( Publication.Service.Context ) -> AudioLocatorService","title":"createFactory"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-parser/","text":"// streamer / org.readium.r2.streamer.parser.audio / AudioParser AudioParser \u00b6 [androidJvm]\\ class AudioParser : PublicationParser Parses an audiobook Publication from an unstructured archive format containing audio files, such as ZAB (Zipped Audio Book) or a simple ZIP. It can also work for a standalone audio file. Constructors \u00b6 AudioParser [androidJvm] fun AudioParser () Functions \u00b6 Name Summary parse [androidJvm] open suspend override fun parse (asset: PublicationAsset , fetcher: Fetcher , warnings: WarningLogger ?): Publication.Builder ? Constructs a Publication.Builder to build a Publication from a publication asset.","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-parser/#audioparser","text":"[androidJvm]\\ class AudioParser : PublicationParser Parses an audiobook Publication from an unstructured archive format containing audio files, such as ZAB (Zipped Audio Book) or a simple ZIP. It can also work for a standalone audio file.","title":"AudioParser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-parser/#constructors","text":"AudioParser [androidJvm] fun AudioParser ()","title":"Constructors"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-parser/#functions","text":"Name Summary parse [androidJvm] open suspend override fun parse (asset: PublicationAsset , fetcher: Fetcher , warnings: WarningLogger ?): Publication.Builder ? Constructs a Publication.Builder to build a Publication from a publication asset.","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-parser/-audio-parser/","text":"// streamer / org.readium.r2.streamer.parser.audio / AudioParser / AudioParser AudioParser \u00b6 [androidJvm]\\ fun AudioParser ()","title":" audio parser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-parser/-audio-parser/#audioparser","text":"[androidJvm]\\ fun AudioParser ()","title":"AudioParser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-parser/parse/","text":"// streamer / org.readium.r2.streamer.parser.audio / AudioParser / parse parse \u00b6 [androidJvm]\\ open suspend override fun parse (asset: PublicationAsset , fetcher: Fetcher , warnings: WarningLogger ?): Publication.Builder ? Constructs a Publication.Builder to build a Publication from a publication asset. Parameters \u00b6 androidJvm asset Digital medium (e.g. a file) used to access the publication. fetcher Initial leaf fetcher which should be used to read the publication's resources. This can be used to: support content protection technologies parse exploded archives or in archiving formats unknown to the parser, e.g. RAR If the asset is not an archive, it will be reachable at the HREF /, e.g. with a PDF. warnings Used to report non-fatal parsing warnings, such as publication authoring mistakes. This is useful to warn users of potential rendering issues or help authors debug their publications.","title":"Parse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-parser/parse/#parse","text":"[androidJvm]\\ open suspend override fun parse (asset: PublicationAsset , fetcher: Fetcher , warnings: WarningLogger ?): Publication.Builder ? Constructs a Publication.Builder to build a Publication from a publication asset.","title":"parse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.audio/-audio-parser/parse/#parameters","text":"androidJvm asset Digital medium (e.g. a file) used to access the publication. fetcher Initial leaf fetcher which should be used to read the publication's resources. This can be used to: support content protection technologies parse exploded archives or in archiving formats unknown to the parser, e.g. RAR If the asset is not an archive, it will be reachable at the HREF /, e.g. with a PDF. warnings Used to report non-fatal parsing warnings, such as publication authoring mistakes. This is useful to warn users of potential rendering issues or help authors debug their publications.","title":"Parameters"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.cbz/","text":"// streamer / org.readium.r2.streamer.parser.cbz Package org.readium.r2.streamer.parser.cbz \u00b6 Types \u00b6 Name Summary CBZParser [androidJvm] class CBZParser : PublicationParser","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.cbz/#package-orgreadiumr2streamerparsercbz","text":"","title":"Package org.readium.r2.streamer.parser.cbz"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.cbz/#types","text":"Name Summary CBZParser [androidJvm] class CBZParser : PublicationParser","title":"Types"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.cbz/-c-b-z-parser/","text":"// streamer / org.readium.r2.streamer.parser.cbz / CBZParser CBZParser \u00b6 [androidJvm]\\ class CBZParser : PublicationParser CBZParser : Handle any CBZ file. Opening, listing files get name of the resource, creating the Publication for rendering Constructors \u00b6 CBZParser [androidJvm] fun CBZParser () Functions \u00b6 Name Summary parse [androidJvm] open override fun parse (fileAtPath: String , fallbackTitle: String ): PubBox ?","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.cbz/-c-b-z-parser/#cbzparser","text":"[androidJvm]\\ class CBZParser : PublicationParser CBZParser : Handle any CBZ file. Opening, listing files get name of the resource, creating the Publication for rendering","title":"CBZParser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.cbz/-c-b-z-parser/#constructors","text":"CBZParser [androidJvm] fun CBZParser ()","title":"Constructors"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.cbz/-c-b-z-parser/#functions","text":"Name Summary parse [androidJvm] open override fun parse (fileAtPath: String , fallbackTitle: String ): PubBox ?","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.cbz/-c-b-z-parser/-c-b-z-parser/","text":"// streamer / org.readium.r2.streamer.parser.cbz / CBZParser / CBZParser CBZParser \u00b6 [androidJvm]\\ fun CBZParser ()","title":" c b z parser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.cbz/-c-b-z-parser/-c-b-z-parser/#cbzparser","text":"[androidJvm]\\ fun CBZParser ()","title":"CBZParser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.cbz/-c-b-z-parser/parse/","text":"// streamer / org.readium.r2.streamer.parser.cbz / CBZParser / parse parse \u00b6 [androidJvm]\\ open override fun parse (fileAtPath: String , fallbackTitle: String ): PubBox ?","title":"Parse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.cbz/-c-b-z-parser/parse/#parse","text":"[androidJvm]\\ open override fun parse (fileAtPath: String , fallbackTitle: String ): PubBox ?","title":"parse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.divina/","text":"// streamer / org.readium.r2.streamer.parser.divina Package org.readium.r2.streamer.parser.divina \u00b6 Types \u00b6 Name Summary DiViNaConstant [androidJvm] class DiViNaConstant DiViNaParser [androidJvm] class DiViNaParser : PublicationParser","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.divina/#package-orgreadiumr2streamerparserdivina","text":"","title":"Package org.readium.r2.streamer.parser.divina"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.divina/#types","text":"Name Summary DiViNaConstant [androidJvm] class DiViNaConstant DiViNaParser [androidJvm] class DiViNaParser : PublicationParser","title":"Types"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.divina/-di-vi-na-constant/","text":"// streamer / org.readium.r2.streamer.parser.divina / DiViNaConstant DiViNaConstant \u00b6 [androidJvm]\\ class DiViNaConstant Types \u00b6 Name Summary Companion [androidJvm] object Companion","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.divina/-di-vi-na-constant/#divinaconstant","text":"[androidJvm]\\ class DiViNaConstant","title":"DiViNaConstant"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.divina/-di-vi-na-constant/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.divina/-di-vi-na-constant/-di-vi-na-constant/","text":"// streamer / org.readium.r2.streamer.parser.divina / DiViNaConstant / DiViNaConstant DiViNaConstant \u00b6 [androidJvm]\\ fun DiViNaConstant ()","title":" di vi na constant"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.divina/-di-vi-na-constant/-di-vi-na-constant/#divinaconstant","text":"[androidJvm]\\ fun DiViNaConstant ()","title":"DiViNaConstant"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.divina/-di-vi-na-constant/-companion/","text":"// streamer / org.readium.r2.streamer.parser.divina / DiViNaConstant / Companion Companion \u00b6 [androidJvm]\\ object Companion","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.divina/-di-vi-na-constant/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.divina/-di-vi-na-parser/","text":"// streamer / org.readium.r2.streamer.parser.divina / DiViNaParser DiViNaParser \u00b6 [androidJvm]\\ class DiViNaParser : PublicationParser DiViNaParser : Handle any DiViNa file. Opening, listing files get name of the resource, creating the Publication for rendering Constructors \u00b6 DiViNaParser [androidJvm] fun DiViNaParser () Functions \u00b6 Name Summary parse [androidJvm] open override fun parse (fileAtPath: String , fallbackTitle: String ): PubBox ?","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.divina/-di-vi-na-parser/#divinaparser","text":"[androidJvm]\\ class DiViNaParser : PublicationParser DiViNaParser : Handle any DiViNa file. Opening, listing files get name of the resource, creating the Publication for rendering","title":"DiViNaParser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.divina/-di-vi-na-parser/#constructors","text":"DiViNaParser [androidJvm] fun DiViNaParser ()","title":"Constructors"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.divina/-di-vi-na-parser/#functions","text":"Name Summary parse [androidJvm] open override fun parse (fileAtPath: String , fallbackTitle: String ): PubBox ?","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.divina/-di-vi-na-parser/-di-vi-na-parser/","text":"// streamer / org.readium.r2.streamer.parser.divina / DiViNaParser / DiViNaParser DiViNaParser \u00b6 [androidJvm]\\ fun DiViNaParser ()","title":" di vi na parser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.divina/-di-vi-na-parser/-di-vi-na-parser/#divinaparser","text":"[androidJvm]\\ fun DiViNaParser ()","title":"DiViNaParser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.divina/-di-vi-na-parser/parse/","text":"// streamer / org.readium.r2.streamer.parser.divina / DiViNaParser / parse parse \u00b6 [androidJvm]\\ open override fun parse (fileAtPath: String , fallbackTitle: String ): PubBox ?","title":"Parse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.divina/-di-vi-na-parser/parse/#parse","text":"[androidJvm]\\ open override fun parse (fileAtPath: String , fallbackTitle: String ): PubBox ?","title":"parse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/","text":"// streamer / org.readium.r2.streamer.parser.epub Package org.readium.r2.streamer.parser.epub \u00b6 Types \u00b6 Name Summary EPUBConstant [androidJvm] object EPUBConstant EpubParser [androidJvm] class EpubParser (reflowablePositionsStrategy: EpubPositionsService.ReflowableStrategy ) : PublicationParser , PublicationParser Parses a Publication from an EPUB publication. EpubPositionsService [androidJvm] class EpubPositionsService (readingOrder: List < Link >, presentation: Presentation , fetcher: Fetcher , reflowableStrategy: EpubPositionsService.ReflowableStrategy ) : PositionsService Positions Service for an EPUB from its readingOrder and fetcher .","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/#package-orgreadiumr2streamerparserepub","text":"","title":"Package org.readium.r2.streamer.parser.epub"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/#types","text":"Name Summary EPUBConstant [androidJvm] object EPUBConstant EpubParser [androidJvm] class EpubParser (reflowablePositionsStrategy: EpubPositionsService.ReflowableStrategy ) : PublicationParser , PublicationParser Parses a Publication from an EPUB publication. EpubPositionsService [androidJvm] class EpubPositionsService (readingOrder: List < Link >, presentation: Presentation , fetcher: Fetcher , reflowableStrategy: EpubPositionsService.ReflowableStrategy ) : PositionsService Positions Service for an EPUB from its readingOrder and fetcher .","title":"Types"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-e-p-u-b-constant/","text":"// streamer / org.readium.r2.streamer.parser.epub / EPUBConstant EPUBConstant \u00b6 [androidJvm]\\ object EPUBConstant Properties \u00b6 Name Summary forceScrollPreset [androidJvm] val forceScrollPreset : MutableMap < ReadiumCSSName , Boolean >","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-e-p-u-b-constant/#epubconstant","text":"[androidJvm]\\ object EPUBConstant","title":"EPUBConstant"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-e-p-u-b-constant/#properties","text":"Name Summary forceScrollPreset [androidJvm] val forceScrollPreset : MutableMap < ReadiumCSSName , Boolean >","title":"Properties"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-e-p-u-b-constant/force-scroll-preset/","text":"// streamer / org.readium.r2.streamer.parser.epub / EPUBConstant / forceScrollPreset forceScrollPreset \u00b6 [androidJvm]\\ val forceScrollPreset : MutableMap < ReadiumCSSName , Boolean >","title":"Force scroll preset"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-e-p-u-b-constant/force-scroll-preset/#forcescrollpreset","text":"[androidJvm]\\ val forceScrollPreset : MutableMap < ReadiumCSSName , Boolean >","title":"forceScrollPreset"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-parser/","text":"// streamer / org.readium.r2.streamer.parser.epub / EpubParser EpubParser \u00b6 [androidJvm]\\ class EpubParser (reflowablePositionsStrategy: EpubPositionsService.ReflowableStrategy ) : PublicationParser , PublicationParser Parses a Publication from an EPUB publication. Parameters \u00b6 androidJvm reflowablePositionsStrategy Strategy used to calculate the number of positions in a reflowable resource. Constructors \u00b6 EpubParser [androidJvm] fun EpubParser (reflowablePositionsStrategy: EpubPositionsService.ReflowableStrategy = EpubPositionsService.ReflowableStrategy.recommended) Functions \u00b6 Name Summary _parse [androidJvm] suspend fun _parse (asset: PublicationAsset , fetcher: Fetcher , fallbackTitle: String ): Publication.Builder ? parse [androidJvm] open override fun parse (fileAtPath: String , fallbackTitle: String ): PubBox ? [androidJvm] open suspend override fun parse (asset: PublicationAsset , fetcher: Fetcher , warnings: WarningLogger ?): Publication.Builder ? Constructs a Publication.Builder to build a Publication from a publication asset.","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-parser/#epubparser","text":"[androidJvm]\\ class EpubParser (reflowablePositionsStrategy: EpubPositionsService.ReflowableStrategy ) : PublicationParser , PublicationParser Parses a Publication from an EPUB publication.","title":"EpubParser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-parser/#parameters","text":"androidJvm reflowablePositionsStrategy Strategy used to calculate the number of positions in a reflowable resource.","title":"Parameters"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-parser/#constructors","text":"EpubParser [androidJvm] fun EpubParser (reflowablePositionsStrategy: EpubPositionsService.ReflowableStrategy = EpubPositionsService.ReflowableStrategy.recommended)","title":"Constructors"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-parser/#functions","text":"Name Summary _parse [androidJvm] suspend fun _parse (asset: PublicationAsset , fetcher: Fetcher , fallbackTitle: String ): Publication.Builder ? parse [androidJvm] open override fun parse (fileAtPath: String , fallbackTitle: String ): PubBox ? [androidJvm] open suspend override fun parse (asset: PublicationAsset , fetcher: Fetcher , warnings: WarningLogger ?): Publication.Builder ? Constructs a Publication.Builder to build a Publication from a publication asset.","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-parser/-epub-parser/","text":"// streamer / org.readium.r2.streamer.parser.epub / EpubParser / EpubParser EpubParser \u00b6 [androidJvm]\\ fun EpubParser (reflowablePositionsStrategy: EpubPositionsService.ReflowableStrategy = EpubPositionsService.ReflowableStrategy.recommended) Parameters \u00b6 androidJvm reflowablePositionsStrategy Strategy used to calculate the number of positions in a reflowable resource.","title":" epub parser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-parser/-epub-parser/#epubparser","text":"[androidJvm]\\ fun EpubParser (reflowablePositionsStrategy: EpubPositionsService.ReflowableStrategy = EpubPositionsService.ReflowableStrategy.recommended)","title":"EpubParser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-parser/-epub-parser/#parameters","text":"androidJvm reflowablePositionsStrategy Strategy used to calculate the number of positions in a reflowable resource.","title":"Parameters"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-parser/_parse/","text":"// streamer / org.readium.r2.streamer.parser.epub / EpubParser / _parse _parse \u00b6 [androidJvm]\\ suspend fun _parse (asset: PublicationAsset , fetcher: Fetcher , fallbackTitle: String ): Publication.Builder ?","title":" parse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-parser/_parse/#_parse","text":"[androidJvm]\\ suspend fun _parse (asset: PublicationAsset , fetcher: Fetcher , fallbackTitle: String ): Publication.Builder ?","title":"_parse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-parser/parse/","text":"// streamer / org.readium.r2.streamer.parser.epub / EpubParser / parse parse \u00b6 [androidJvm]\\ open suspend override fun parse (asset: PublicationAsset , fetcher: Fetcher , warnings: WarningLogger ?): Publication.Builder ? Constructs a Publication.Builder to build a Publication from a publication asset. Parameters \u00b6 androidJvm asset Digital medium (e.g. a file) used to access the publication. fetcher Initial leaf fetcher which should be used to read the publication's resources. This can be used to: support content protection technologies parse exploded archives or in archiving formats unknown to the parser, e.g. RAR If the asset is not an archive, it will be reachable at the HREF /, e.g. with a PDF. warnings Used to report non-fatal parsing warnings, such as publication authoring mistakes. This is useful to warn users of potential rendering issues or help authors debug their publications. [androidJvm]\\ open override fun parse (fileAtPath: String , fallbackTitle: String ): PubBox ?","title":"Parse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-parser/parse/#parse","text":"[androidJvm]\\ open suspend override fun parse (asset: PublicationAsset , fetcher: Fetcher , warnings: WarningLogger ?): Publication.Builder ? Constructs a Publication.Builder to build a Publication from a publication asset.","title":"parse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-parser/parse/#parameters","text":"androidJvm asset Digital medium (e.g. a file) used to access the publication. fetcher Initial leaf fetcher which should be used to read the publication's resources. This can be used to: support content protection technologies parse exploded archives or in archiving formats unknown to the parser, e.g. RAR If the asset is not an archive, it will be reachable at the HREF /, e.g. with a PDF. warnings Used to report non-fatal parsing warnings, such as publication authoring mistakes. This is useful to warn users of potential rendering issues or help authors debug their publications. [androidJvm]\\ open override fun parse (fileAtPath: String , fallbackTitle: String ): PubBox ?","title":"Parameters"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/","text":"// streamer / org.readium.r2.streamer.parser.epub / EpubPositionsService EpubPositionsService \u00b6 [androidJvm]\\ class EpubPositionsService (readingOrder: List < Link >, presentation: Presentation , fetcher: Fetcher , reflowableStrategy: EpubPositionsService.ReflowableStrategy ) : PositionsService Positions Service for an EPUB from its readingOrder and fetcher . The presentation is used to apply different calculation strategy if the resource has a reflowable or fixed layout. https://github.com/readium/architecture/blob/master/models/locators/best-practices/format.md#epub https://github.com/readium/architecture/issues/101 Constructors \u00b6 EpubPositionsService [androidJvm] fun EpubPositionsService (readingOrder: List < Link >, presentation: Presentation , fetcher: Fetcher , reflowableStrategy: EpubPositionsService.ReflowableStrategy ) Types \u00b6 Name Summary Companion [androidJvm] object Companion ReflowableStrategy [androidJvm] sealed class ReflowableStrategy Strategy used to calculate the number of positions in a reflowable resource. Functions \u00b6 Name Summary close [androidJvm] open fun close () get [androidJvm] open override fun get (link: Link ): Resource ? positions [androidJvm] open suspend fun positions (): List < Locator > positionsByReadingOrder [androidJvm] open suspend override fun positionsByReadingOrder (): List < List < Locator >> Properties \u00b6 Name Summary links [androidJvm] open override val links : List < Link >","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/#epubpositionsservice","text":"[androidJvm]\\ class EpubPositionsService (readingOrder: List < Link >, presentation: Presentation , fetcher: Fetcher , reflowableStrategy: EpubPositionsService.ReflowableStrategy ) : PositionsService Positions Service for an EPUB from its readingOrder and fetcher . The presentation is used to apply different calculation strategy if the resource has a reflowable or fixed layout. https://github.com/readium/architecture/blob/master/models/locators/best-practices/format.md#epub https://github.com/readium/architecture/issues/101","title":"EpubPositionsService"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/#constructors","text":"EpubPositionsService [androidJvm] fun EpubPositionsService (readingOrder: List < Link >, presentation: Presentation , fetcher: Fetcher , reflowableStrategy: EpubPositionsService.ReflowableStrategy )","title":"Constructors"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/#types","text":"Name Summary Companion [androidJvm] object Companion ReflowableStrategy [androidJvm] sealed class ReflowableStrategy Strategy used to calculate the number of positions in a reflowable resource.","title":"Types"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/#functions","text":"Name Summary close [androidJvm] open fun close () get [androidJvm] open override fun get (link: Link ): Resource ? positions [androidJvm] open suspend fun positions (): List < Locator > positionsByReadingOrder [androidJvm] open suspend override fun positionsByReadingOrder (): List < List < Locator >>","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/#properties","text":"Name Summary links [androidJvm] open override val links : List < Link >","title":"Properties"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-epub-positions-service/","text":"// streamer / org.readium.r2.streamer.parser.epub / EpubPositionsService / EpubPositionsService EpubPositionsService \u00b6 [androidJvm]\\ fun EpubPositionsService (readingOrder: List < Link >, presentation: Presentation , fetcher: Fetcher , reflowableStrategy: EpubPositionsService.ReflowableStrategy )","title":" epub positions service"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-epub-positions-service/#epubpositionsservice","text":"[androidJvm]\\ fun EpubPositionsService (readingOrder: List < Link >, presentation: Presentation , fetcher: Fetcher , reflowableStrategy: EpubPositionsService.ReflowableStrategy )","title":"EpubPositionsService"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/positions-by-reading-order/","text":"// streamer / org.readium.r2.streamer.parser.epub / EpubPositionsService / positionsByReadingOrder positionsByReadingOrder \u00b6 [androidJvm]\\ open suspend override fun positionsByReadingOrder (): List < List < Locator >>","title":"Positions by reading order"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/positions-by-reading-order/#positionsbyreadingorder","text":"[androidJvm]\\ open suspend override fun positionsByReadingOrder (): List < List < Locator >>","title":"positionsByReadingOrder"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-companion/","text":"// streamer / org.readium.r2.streamer.parser.epub / EpubPositionsService / Companion Companion \u00b6 [androidJvm]\\ object Companion Functions \u00b6 Name Summary createFactory [androidJvm] fun createFactory (reflowableStrategy: EpubPositionsService.ReflowableStrategy = ReflowableStrategy.recommended): ( Publication.Service.Context ) -> EpubPositionsService","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-companion/#functions","text":"Name Summary createFactory [androidJvm] fun createFactory (reflowableStrategy: EpubPositionsService.ReflowableStrategy = ReflowableStrategy.recommended): ( Publication.Service.Context ) -> EpubPositionsService","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-companion/create-factory/","text":"// streamer / org.readium.r2.streamer.parser.epub / EpubPositionsService / Companion / createFactory createFactory \u00b6 [androidJvm]\\ fun createFactory (reflowableStrategy: EpubPositionsService.ReflowableStrategy = ReflowableStrategy.recommended): ( Publication.Service.Context ) -> EpubPositionsService","title":"Create factory"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-companion/create-factory/#createfactory","text":"[androidJvm]\\ fun createFactory (reflowableStrategy: EpubPositionsService.ReflowableStrategy = ReflowableStrategy.recommended): ( Publication.Service.Context ) -> EpubPositionsService","title":"createFactory"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/","text":"// streamer / org.readium.r2.streamer.parser.epub / EpubPositionsService / ReflowableStrategy ReflowableStrategy \u00b6 [androidJvm]\\ sealed class ReflowableStrategy Strategy used to calculate the number of positions in a reflowable resource. Note that a fixed-layout resource always has a single position. Types \u00b6 Name Summary ArchiveEntryLength [androidJvm] data class ArchiveEntryLength (pageLength: Int ) : EpubPositionsService.ReflowableStrategy Use the archive entry length (whether it is compressed or stored) and split it by the given pageLength . Companion [androidJvm] object Companion OriginalLength [androidJvm] data class OriginalLength (pageLength: Int ) : EpubPositionsService.ReflowableStrategy Use the original length of each resource (before compression and encryption) and split it by the given pageLength . Functions \u00b6 Name Summary positionCount [androidJvm] abstract suspend fun positionCount (resource: Resource ): Int Returns the number of positions in the given resource according to the strategy. Inheritors \u00b6 Name EpubPositionsService.ReflowableStrategy EpubPositionsService.ReflowableStrategy","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/#reflowablestrategy","text":"[androidJvm]\\ sealed class ReflowableStrategy Strategy used to calculate the number of positions in a reflowable resource. Note that a fixed-layout resource always has a single position.","title":"ReflowableStrategy"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/#types","text":"Name Summary ArchiveEntryLength [androidJvm] data class ArchiveEntryLength (pageLength: Int ) : EpubPositionsService.ReflowableStrategy Use the archive entry length (whether it is compressed or stored) and split it by the given pageLength . Companion [androidJvm] object Companion OriginalLength [androidJvm] data class OriginalLength (pageLength: Int ) : EpubPositionsService.ReflowableStrategy Use the original length of each resource (before compression and encryption) and split it by the given pageLength .","title":"Types"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/#functions","text":"Name Summary positionCount [androidJvm] abstract suspend fun positionCount (resource: Resource ): Int Returns the number of positions in the given resource according to the strategy.","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/#inheritors","text":"Name EpubPositionsService.ReflowableStrategy EpubPositionsService.ReflowableStrategy","title":"Inheritors"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/position-count/","text":"// streamer / org.readium.r2.streamer.parser.epub / EpubPositionsService / ReflowableStrategy / positionCount positionCount \u00b6 [androidJvm]\\ abstract suspend fun positionCount (resource: Resource ): Int Returns the number of positions in the given resource according to the strategy.","title":"Position count"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/position-count/#positioncount","text":"[androidJvm]\\ abstract suspend fun positionCount (resource: Resource ): Int Returns the number of positions in the given resource according to the strategy.","title":"positionCount"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-archive-entry-length/","text":"// streamer / org.readium.r2.streamer.parser.epub / EpubPositionsService / ReflowableStrategy / ArchiveEntryLength ArchiveEntryLength \u00b6 [androidJvm]\\ data class ArchiveEntryLength (pageLength: Int ) : EpubPositionsService.ReflowableStrategy Use the archive entry length (whether it is compressed or stored) and split it by the given pageLength . Constructors \u00b6 ArchiveEntryLength [androidJvm] fun ArchiveEntryLength (pageLength: Int ) Functions \u00b6 Name Summary positionCount [androidJvm] open suspend override fun positionCount (resource: Resource ): Int Returns the number of positions in the given resource according to the strategy. Properties \u00b6 Name Summary pageLength [androidJvm] val pageLength : Int","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-archive-entry-length/#archiveentrylength","text":"[androidJvm]\\ data class ArchiveEntryLength (pageLength: Int ) : EpubPositionsService.ReflowableStrategy Use the archive entry length (whether it is compressed or stored) and split it by the given pageLength .","title":"ArchiveEntryLength"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-archive-entry-length/#constructors","text":"ArchiveEntryLength [androidJvm] fun ArchiveEntryLength (pageLength: Int )","title":"Constructors"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-archive-entry-length/#functions","text":"Name Summary positionCount [androidJvm] open suspend override fun positionCount (resource: Resource ): Int Returns the number of positions in the given resource according to the strategy.","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-archive-entry-length/#properties","text":"Name Summary pageLength [androidJvm] val pageLength : Int","title":"Properties"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-archive-entry-length/-archive-entry-length/","text":"// streamer / org.readium.r2.streamer.parser.epub / EpubPositionsService / ReflowableStrategy / ArchiveEntryLength / ArchiveEntryLength ArchiveEntryLength \u00b6 [androidJvm]\\ fun ArchiveEntryLength (pageLength: Int )","title":" archive entry length"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-archive-entry-length/-archive-entry-length/#archiveentrylength","text":"[androidJvm]\\ fun ArchiveEntryLength (pageLength: Int )","title":"ArchiveEntryLength"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-archive-entry-length/page-length/","text":"// streamer / org.readium.r2.streamer.parser.epub / EpubPositionsService / ReflowableStrategy / ArchiveEntryLength / pageLength pageLength \u00b6 [androidJvm]\\ val pageLength : Int","title":"Page length"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-archive-entry-length/page-length/#pagelength","text":"[androidJvm]\\ val pageLength : Int","title":"pageLength"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-archive-entry-length/position-count/","text":"// streamer / org.readium.r2.streamer.parser.epub / EpubPositionsService / ReflowableStrategy / ArchiveEntryLength / positionCount positionCount \u00b6 [androidJvm]\\ open suspend override fun positionCount (resource: Resource ): Int Returns the number of positions in the given resource according to the strategy.","title":"Position count"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-archive-entry-length/position-count/#positioncount","text":"[androidJvm]\\ open suspend override fun positionCount (resource: Resource ): Int Returns the number of positions in the given resource according to the strategy.","title":"positionCount"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-companion/","text":"// streamer / org.readium.r2.streamer.parser.epub / EpubPositionsService / ReflowableStrategy / Companion Companion \u00b6 [androidJvm]\\ object Companion Properties \u00b6 Name Summary recommended [androidJvm] val recommended : EpubPositionsService.ReflowableStrategy.ArchiveEntryLength Recommended historical strategy: archive entry length split by 1024 bytes pages.","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-companion/#properties","text":"Name Summary recommended [androidJvm] val recommended : EpubPositionsService.ReflowableStrategy.ArchiveEntryLength Recommended historical strategy: archive entry length split by 1024 bytes pages.","title":"Properties"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-companion/recommended/","text":"// streamer / org.readium.r2.streamer.parser.epub / EpubPositionsService / ReflowableStrategy / Companion / recommended recommended \u00b6 [androidJvm]\\ val recommended : EpubPositionsService.ReflowableStrategy.ArchiveEntryLength Recommended historical strategy: archive entry length split by 1024 bytes pages. This strategy is used by Adobe RMSDK as well. See https://github.com/readium/architecture/issues/123","title":"Recommended"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-companion/recommended/#recommended","text":"[androidJvm]\\ val recommended : EpubPositionsService.ReflowableStrategy.ArchiveEntryLength Recommended historical strategy: archive entry length split by 1024 bytes pages. This strategy is used by Adobe RMSDK as well. See https://github.com/readium/architecture/issues/123","title":"recommended"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-original-length/","text":"// streamer / org.readium.r2.streamer.parser.epub / EpubPositionsService / ReflowableStrategy / OriginalLength OriginalLength \u00b6 [androidJvm]\\ data class OriginalLength (pageLength: Int ) : EpubPositionsService.ReflowableStrategy Use the original length of each resource (before compression and encryption) and split it by the given pageLength . Constructors \u00b6 OriginalLength [androidJvm] fun OriginalLength (pageLength: Int ) Functions \u00b6 Name Summary positionCount [androidJvm] open suspend override fun positionCount (resource: Resource ): Int Returns the number of positions in the given resource according to the strategy. Properties \u00b6 Name Summary pageLength [androidJvm] val pageLength : Int","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-original-length/#originallength","text":"[androidJvm]\\ data class OriginalLength (pageLength: Int ) : EpubPositionsService.ReflowableStrategy Use the original length of each resource (before compression and encryption) and split it by the given pageLength .","title":"OriginalLength"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-original-length/#constructors","text":"OriginalLength [androidJvm] fun OriginalLength (pageLength: Int )","title":"Constructors"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-original-length/#functions","text":"Name Summary positionCount [androidJvm] open suspend override fun positionCount (resource: Resource ): Int Returns the number of positions in the given resource according to the strategy.","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-original-length/#properties","text":"Name Summary pageLength [androidJvm] val pageLength : Int","title":"Properties"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-original-length/-original-length/","text":"// streamer / org.readium.r2.streamer.parser.epub / EpubPositionsService / ReflowableStrategy / OriginalLength / OriginalLength OriginalLength \u00b6 [androidJvm]\\ fun OriginalLength (pageLength: Int )","title":" original length"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-original-length/-original-length/#originallength","text":"[androidJvm]\\ fun OriginalLength (pageLength: Int )","title":"OriginalLength"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-original-length/page-length/","text":"// streamer / org.readium.r2.streamer.parser.epub / EpubPositionsService / ReflowableStrategy / OriginalLength / pageLength pageLength \u00b6 [androidJvm]\\ val pageLength : Int","title":"Page length"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-original-length/page-length/#pagelength","text":"[androidJvm]\\ val pageLength : Int","title":"pageLength"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-original-length/position-count/","text":"// streamer / org.readium.r2.streamer.parser.epub / EpubPositionsService / ReflowableStrategy / OriginalLength / positionCount positionCount \u00b6 [androidJvm]\\ open suspend override fun positionCount (resource: Resource ): Int Returns the number of positions in the given resource according to the strategy.","title":"Position count"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.epub/-epub-positions-service/-reflowable-strategy/-original-length/position-count/#positioncount","text":"[androidJvm]\\ open suspend override fun positionCount (resource: Resource ): Int Returns the number of positions in the given resource according to the strategy.","title":"positionCount"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.image/","text":"// streamer / org.readium.r2.streamer.parser.image Package org.readium.r2.streamer.parser.image \u00b6 Types \u00b6 Name Summary ImageParser [androidJvm] class ImageParser : PublicationParser Parses an image\u2013based Publication from an unstructured archive format containing bitmap files, such as CBZ or a simple ZIP.","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.image/#package-orgreadiumr2streamerparserimage","text":"","title":"Package org.readium.r2.streamer.parser.image"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.image/#types","text":"Name Summary ImageParser [androidJvm] class ImageParser : PublicationParser Parses an image\u2013based Publication from an unstructured archive format containing bitmap files, such as CBZ or a simple ZIP.","title":"Types"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.image/-image-parser/","text":"// streamer / org.readium.r2.streamer.parser.image / ImageParser ImageParser \u00b6 [androidJvm]\\ class ImageParser : PublicationParser Parses an image\u2013based Publication from an unstructured archive format containing bitmap files, such as CBZ or a simple ZIP. It can also work for a standalone bitmap file. Constructors \u00b6 ImageParser [androidJvm] fun ImageParser () Functions \u00b6 Name Summary parse [androidJvm] open suspend override fun parse (asset: PublicationAsset , fetcher: Fetcher , warnings: WarningLogger ?): Publication.Builder ? Constructs a Publication.Builder to build a Publication from a publication asset.","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.image/-image-parser/#imageparser","text":"[androidJvm]\\ class ImageParser : PublicationParser Parses an image\u2013based Publication from an unstructured archive format containing bitmap files, such as CBZ or a simple ZIP. It can also work for a standalone bitmap file.","title":"ImageParser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.image/-image-parser/#constructors","text":"ImageParser [androidJvm] fun ImageParser ()","title":"Constructors"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.image/-image-parser/#functions","text":"Name Summary parse [androidJvm] open suspend override fun parse (asset: PublicationAsset , fetcher: Fetcher , warnings: WarningLogger ?): Publication.Builder ? Constructs a Publication.Builder to build a Publication from a publication asset.","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.image/-image-parser/-image-parser/","text":"// streamer / org.readium.r2.streamer.parser.image / ImageParser / ImageParser ImageParser \u00b6 [androidJvm]\\ fun ImageParser ()","title":" image parser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.image/-image-parser/-image-parser/#imageparser","text":"[androidJvm]\\ fun ImageParser ()","title":"ImageParser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.image/-image-parser/parse/","text":"// streamer / org.readium.r2.streamer.parser.image / ImageParser / parse parse \u00b6 [androidJvm]\\ open suspend override fun parse (asset: PublicationAsset , fetcher: Fetcher , warnings: WarningLogger ?): Publication.Builder ? Constructs a Publication.Builder to build a Publication from a publication asset. Parameters \u00b6 androidJvm asset Digital medium (e.g. a file) used to access the publication. fetcher Initial leaf fetcher which should be used to read the publication's resources. This can be used to: support content protection technologies parse exploded archives or in archiving formats unknown to the parser, e.g. RAR If the asset is not an archive, it will be reachable at the HREF /, e.g. with a PDF. warnings Used to report non-fatal parsing warnings, such as publication authoring mistakes. This is useful to warn users of potential rendering issues or help authors debug their publications.","title":"Parse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.image/-image-parser/parse/#parse","text":"[androidJvm]\\ open suspend override fun parse (asset: PublicationAsset , fetcher: Fetcher , warnings: WarningLogger ?): Publication.Builder ? Constructs a Publication.Builder to build a Publication from a publication asset.","title":"parse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.image/-image-parser/parse/#parameters","text":"androidJvm asset Digital medium (e.g. a file) used to access the publication. fetcher Initial leaf fetcher which should be used to read the publication's resources. This can be used to: support content protection technologies parse exploded archives or in archiving formats unknown to the parser, e.g. RAR If the asset is not an archive, it will be reachable at the HREF /, e.g. with a PDF. warnings Used to report non-fatal parsing warnings, such as publication authoring mistakes. This is useful to warn users of potential rendering issues or help authors debug their publications.","title":"Parameters"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.pdf/","text":"// streamer / org.readium.r2.streamer.parser.pdf Package org.readium.r2.streamer.parser.pdf \u00b6 Types \u00b6 Name Summary PdfParser [androidJvm] class PdfParser (context: Context , pdfFactory: PdfDocumentFactory ) : PublicationParser , PublicationParser Parses a PDF file into a Readium Publication .","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.pdf/#package-orgreadiumr2streamerparserpdf","text":"","title":"Package org.readium.r2.streamer.parser.pdf"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.pdf/#types","text":"Name Summary PdfParser [androidJvm] class PdfParser (context: Context , pdfFactory: PdfDocumentFactory ) : PublicationParser , PublicationParser Parses a PDF file into a Readium Publication .","title":"Types"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.pdf/-pdf-parser/","text":"// streamer / org.readium.r2.streamer.parser.pdf / PdfParser PdfParser \u00b6 [androidJvm]\\ class PdfParser (context: Context , pdfFactory: PdfDocumentFactory ) : PublicationParser , PublicationParser Parses a PDF file into a Readium Publication . Constructors \u00b6 PdfParser [androidJvm] fun PdfParser (context: Context , pdfFactory: PdfDocumentFactory = DefaultPdfDocumentFactory(context)) Functions \u00b6 Name Summary _parse [androidJvm] suspend fun _parse (asset: PublicationAsset , fetcher: Fetcher , fallbackTitle: String ): Publication.Builder ? parse [androidJvm] open override fun parse (fileAtPath: String , fallbackTitle: String ): PubBox ? [androidJvm] open suspend override fun parse (asset: PublicationAsset , fetcher: Fetcher , warnings: WarningLogger ?): Publication.Builder ? Constructs a Publication.Builder to build a Publication from a publication asset.","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.pdf/-pdf-parser/#pdfparser","text":"[androidJvm]\\ class PdfParser (context: Context , pdfFactory: PdfDocumentFactory ) : PublicationParser , PublicationParser Parses a PDF file into a Readium Publication .","title":"PdfParser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.pdf/-pdf-parser/#constructors","text":"PdfParser [androidJvm] fun PdfParser (context: Context , pdfFactory: PdfDocumentFactory = DefaultPdfDocumentFactory(context))","title":"Constructors"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.pdf/-pdf-parser/#functions","text":"Name Summary _parse [androidJvm] suspend fun _parse (asset: PublicationAsset , fetcher: Fetcher , fallbackTitle: String ): Publication.Builder ? parse [androidJvm] open override fun parse (fileAtPath: String , fallbackTitle: String ): PubBox ? [androidJvm] open suspend override fun parse (asset: PublicationAsset , fetcher: Fetcher , warnings: WarningLogger ?): Publication.Builder ? Constructs a Publication.Builder to build a Publication from a publication asset.","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.pdf/-pdf-parser/-pdf-parser/","text":"// streamer / org.readium.r2.streamer.parser.pdf / PdfParser / PdfParser PdfParser \u00b6 [androidJvm]\\ fun PdfParser (context: Context , pdfFactory: PdfDocumentFactory = DefaultPdfDocumentFactory(context))","title":" pdf parser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.pdf/-pdf-parser/-pdf-parser/#pdfparser","text":"[androidJvm]\\ fun PdfParser (context: Context , pdfFactory: PdfDocumentFactory = DefaultPdfDocumentFactory(context))","title":"PdfParser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.pdf/-pdf-parser/_parse/","text":"// streamer / org.readium.r2.streamer.parser.pdf / PdfParser / _parse _parse \u00b6 [androidJvm]\\ suspend fun _parse (asset: PublicationAsset , fetcher: Fetcher , fallbackTitle: String ): Publication.Builder ?","title":" parse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.pdf/-pdf-parser/_parse/#_parse","text":"[androidJvm]\\ suspend fun _parse (asset: PublicationAsset , fetcher: Fetcher , fallbackTitle: String ): Publication.Builder ?","title":"_parse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.pdf/-pdf-parser/parse/","text":"// streamer / org.readium.r2.streamer.parser.pdf / PdfParser / parse parse \u00b6 [androidJvm]\\ open suspend override fun parse (asset: PublicationAsset , fetcher: Fetcher , warnings: WarningLogger ?): Publication.Builder ? Constructs a Publication.Builder to build a Publication from a publication asset. Parameters \u00b6 androidJvm asset Digital medium (e.g. a file) used to access the publication. fetcher Initial leaf fetcher which should be used to read the publication's resources. This can be used to: support content protection technologies parse exploded archives or in archiving formats unknown to the parser, e.g. RAR If the asset is not an archive, it will be reachable at the HREF /, e.g. with a PDF. warnings Used to report non-fatal parsing warnings, such as publication authoring mistakes. This is useful to warn users of potential rendering issues or help authors debug their publications. [androidJvm]\\ open override fun parse (fileAtPath: String , fallbackTitle: String ): PubBox ?","title":"Parse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.pdf/-pdf-parser/parse/#parse","text":"[androidJvm]\\ open suspend override fun parse (asset: PublicationAsset , fetcher: Fetcher , warnings: WarningLogger ?): Publication.Builder ? Constructs a Publication.Builder to build a Publication from a publication asset.","title":"parse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.pdf/-pdf-parser/parse/#parameters","text":"androidJvm asset Digital medium (e.g. a file) used to access the publication. fetcher Initial leaf fetcher which should be used to read the publication's resources. This can be used to: support content protection technologies parse exploded archives or in archiving formats unknown to the parser, e.g. RAR If the asset is not an archive, it will be reachable at the HREF /, e.g. with a PDF. warnings Used to report non-fatal parsing warnings, such as publication authoring mistakes. This is useful to warn users of potential rendering issues or help authors debug their publications. [androidJvm]\\ open override fun parse (fileAtPath: String , fallbackTitle: String ): PubBox ?","title":"Parameters"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.readium/","text":"// streamer / org.readium.r2.streamer.parser.readium Package org.readium.r2.streamer.parser.readium \u00b6 Types \u00b6 Name Summary ReadiumWebPubParser [androidJvm] class ReadiumWebPubParser (pdfFactory: PdfDocumentFactory ?, httpClient: HttpClient ) : PublicationParser , PublicationParser Parses any Readium Web Publication package or manifest, e.g. WebPub, Audiobook, DiViNa, LCPDF...","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.readium/#package-orgreadiumr2streamerparserreadium","text":"","title":"Package org.readium.r2.streamer.parser.readium"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.readium/#types","text":"Name Summary ReadiumWebPubParser [androidJvm] class ReadiumWebPubParser (pdfFactory: PdfDocumentFactory ?, httpClient: HttpClient ) : PublicationParser , PublicationParser Parses any Readium Web Publication package or manifest, e.g. WebPub, Audiobook, DiViNa, LCPDF...","title":"Types"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.readium/-readium-web-pub-parser/","text":"// streamer / org.readium.r2.streamer.parser.readium / ReadiumWebPubParser ReadiumWebPubParser \u00b6 [androidJvm]\\ class ReadiumWebPubParser (pdfFactory: PdfDocumentFactory ?, httpClient: HttpClient ) : PublicationParser , PublicationParser Parses any Readium Web Publication package or manifest, e.g. WebPub, Audiobook, DiViNa, LCPDF... Constructors \u00b6 ReadiumWebPubParser [androidJvm] fun ReadiumWebPubParser (pdfFactory: PdfDocumentFactory ?, httpClient: HttpClient ) Functions \u00b6 Name Summary parse [androidJvm] open override fun parse (fileAtPath: String , fallbackTitle: String ): PubBox ? [androidJvm] open suspend override fun parse (asset: PublicationAsset , fetcher: Fetcher , warnings: WarningLogger ?): Publication.Builder ? Constructs a Publication.Builder to build a Publication from a publication asset.","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.readium/-readium-web-pub-parser/#readiumwebpubparser","text":"[androidJvm]\\ class ReadiumWebPubParser (pdfFactory: PdfDocumentFactory ?, httpClient: HttpClient ) : PublicationParser , PublicationParser Parses any Readium Web Publication package or manifest, e.g. WebPub, Audiobook, DiViNa, LCPDF...","title":"ReadiumWebPubParser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.readium/-readium-web-pub-parser/#constructors","text":"ReadiumWebPubParser [androidJvm] fun ReadiumWebPubParser (pdfFactory: PdfDocumentFactory ?, httpClient: HttpClient )","title":"Constructors"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.readium/-readium-web-pub-parser/#functions","text":"Name Summary parse [androidJvm] open override fun parse (fileAtPath: String , fallbackTitle: String ): PubBox ? [androidJvm] open suspend override fun parse (asset: PublicationAsset , fetcher: Fetcher , warnings: WarningLogger ?): Publication.Builder ? Constructs a Publication.Builder to build a Publication from a publication asset.","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.readium/-readium-web-pub-parser/-readium-web-pub-parser/","text":"// streamer / org.readium.r2.streamer.parser.readium / ReadiumWebPubParser / ReadiumWebPubParser ReadiumWebPubParser \u00b6 [androidJvm]\\ fun ReadiumWebPubParser (pdfFactory: PdfDocumentFactory ?, httpClient: HttpClient )","title":" readium web pub parser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.readium/-readium-web-pub-parser/-readium-web-pub-parser/#readiumwebpubparser","text":"[androidJvm]\\ fun ReadiumWebPubParser (pdfFactory: PdfDocumentFactory ?, httpClient: HttpClient )","title":"ReadiumWebPubParser"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.readium/-readium-web-pub-parser/parse/","text":"// streamer / org.readium.r2.streamer.parser.readium / ReadiumWebPubParser / parse parse \u00b6 [androidJvm]\\ open suspend override fun parse (asset: PublicationAsset , fetcher: Fetcher , warnings: WarningLogger ?): Publication.Builder ? Constructs a Publication.Builder to build a Publication from a publication asset. Parameters \u00b6 androidJvm asset Digital medium (e.g. a file) used to access the publication. fetcher Initial leaf fetcher which should be used to read the publication's resources. This can be used to: support content protection technologies parse exploded archives or in archiving formats unknown to the parser, e.g. RAR If the asset is not an archive, it will be reachable at the HREF /, e.g. with a PDF. warnings Used to report non-fatal parsing warnings, such as publication authoring mistakes. This is useful to warn users of potential rendering issues or help authors debug their publications. [androidJvm]\\ open override fun parse (fileAtPath: String , fallbackTitle: String ): PubBox ?","title":"Parse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.readium/-readium-web-pub-parser/parse/#parse","text":"[androidJvm]\\ open suspend override fun parse (asset: PublicationAsset , fetcher: Fetcher , warnings: WarningLogger ?): Publication.Builder ? Constructs a Publication.Builder to build a Publication from a publication asset.","title":"parse"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.parser.readium/-readium-web-pub-parser/parse/#parameters","text":"androidJvm asset Digital medium (e.g. a file) used to access the publication. fetcher Initial leaf fetcher which should be used to read the publication's resources. This can be used to: support content protection technologies parse exploded archives or in archiving formats unknown to the parser, e.g. RAR If the asset is not an archive, it will be reachable at the HREF /, e.g. with a PDF. warnings Used to report non-fatal parsing warnings, such as publication authoring mistakes. This is useful to warn users of potential rendering issues or help authors debug their publications. [androidJvm]\\ open override fun parse (fileAtPath: String , fallbackTitle: String ): PubBox ?","title":"Parameters"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/","text":"// streamer / org.readium.r2.streamer.server Package org.readium.r2.streamer.server \u00b6 Types \u00b6 Name Summary AbstractServer [androidJvm] abstract class AbstractServer (port: Int , context: Context ) : RouterNanoHTTPD Resources [androidJvm] class Resources Server [androidJvm] class Server (port: Int , context: Context ) : AbstractServer","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/#package-orgreadiumr2streamerserver","text":"","title":"Package org.readium.r2.streamer.server"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/#types","text":"Name Summary AbstractServer [androidJvm] abstract class AbstractServer (port: Int , context: Context ) : RouterNanoHTTPD Resources [androidJvm] class Resources Server [androidJvm] class Server (port: Int , context: Context ) : AbstractServer","title":"Types"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-abstract-server/","text":"// streamer / org.readium.r2.streamer.server / AbstractServer AbstractServer \u00b6 [androidJvm]\\ abstract class AbstractServer (port: Int , context: Context ) : RouterNanoHTTPD Functions \u00b6 Name Summary addHTTPInterceptor [androidJvm] open fun addHTTPInterceptor (p0: IHandler<IHTTPSession, Response>) addMappings [androidJvm] open fun addMappings () addPublication [androidJvm] fun addPublication (publication: Publication , userPropertiesFile: File ?): URL ? addRoute [androidJvm] open fun addRoute (p0: String , p1: Class <*>, vararg p2: Any ) closeAllConnections [androidJvm] open fun closeAllConnections () createClientHandler [androidJvm] open fun createClientHandler (p0: Socket , p1: InputStream ): ClientHandler createServerRunnable [androidJvm] open fun createServerRunnable (p0: Int ): ServerRunnable getHostname [androidJvm] open fun getHostname (): String getListeningPort [androidJvm] fun getListeningPort (): Int getMyServerSocket [androidJvm] open fun getMyServerSocket (): ServerSocket getServerSocketFactory [androidJvm] open fun getServerSocketFactory (): IFactoryThrowing< ServerSocket , IOException > getTempFileManagerFactory [androidJvm] open fun getTempFileManagerFactory (): IFactory<ITempFileManager> handle [androidJvm] open fun handle (p0: IHTTPSession): Response isAlive [androidJvm] fun isAlive (): Boolean loadCustomFont [androidJvm] fun loadCustomFont (inputStream: InputStream , context: Context , fileName: String ) loadCustomResource [androidJvm] fun loadCustomResource (inputStream: InputStream , fileName: String , injectable: Injectable ) makeSecure [androidJvm] open fun makeSecure (p0: SSLServerSocketFactory , p1: Array < String >) removeRoute [androidJvm] open fun removeRoute (p0: String ) serve [androidJvm] open override fun serve (p0: IHTTPSession): Response setAsyncRunner [androidJvm] open fun setAsyncRunner (p0: IAsyncRunner) setHTTPHandler [androidJvm] open fun setHTTPHandler (p0: IHandler<IHTTPSession, Response>) setNotFoundHandler [androidJvm] open fun < T : RouterNanoHTTPD.UriResponder> setNotFoundHandler (p0: Class < T >) setNotImplementedHandler [androidJvm] open fun < T : RouterNanoHTTPD.UriResponder> setNotImplementedHandler (p0: Class < T >) setRoutePrioritizer [androidJvm] open fun setRoutePrioritizer (p0: RouterNanoHTTPD.IRoutePrioritizer) setServerSocketFactory [androidJvm] open fun setServerSocketFactory (p0: IFactoryThrowing< ServerSocket , IOException >) setTempFileManagerFactory [androidJvm] open fun setTempFileManagerFactory (p0: IFactory<ITempFileManager>) start [androidJvm] open fun start () open fun start (p0: Int ) open fun start (p0: Int , p1: Boolean ) stop [androidJvm] open fun stop () wasStarted [androidJvm] fun wasStarted (): Boolean Properties \u00b6 Name Summary asyncRunner [androidJvm] val asyncRunner : IAsyncRunner hostname [androidJvm] val hostname : String interceptors [androidJvm] val interceptors : MutableList <IHandler<IHTTPSession, Response>> myPort [androidJvm] val myPort : Int Inheritors \u00b6 Name Server","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-abstract-server/#abstractserver","text":"[androidJvm]\\ abstract class AbstractServer (port: Int , context: Context ) : RouterNanoHTTPD","title":"AbstractServer"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-abstract-server/#functions","text":"Name Summary addHTTPInterceptor [androidJvm] open fun addHTTPInterceptor (p0: IHandler<IHTTPSession, Response>) addMappings [androidJvm] open fun addMappings () addPublication [androidJvm] fun addPublication (publication: Publication , userPropertiesFile: File ?): URL ? addRoute [androidJvm] open fun addRoute (p0: String , p1: Class <*>, vararg p2: Any ) closeAllConnections [androidJvm] open fun closeAllConnections () createClientHandler [androidJvm] open fun createClientHandler (p0: Socket , p1: InputStream ): ClientHandler createServerRunnable [androidJvm] open fun createServerRunnable (p0: Int ): ServerRunnable getHostname [androidJvm] open fun getHostname (): String getListeningPort [androidJvm] fun getListeningPort (): Int getMyServerSocket [androidJvm] open fun getMyServerSocket (): ServerSocket getServerSocketFactory [androidJvm] open fun getServerSocketFactory (): IFactoryThrowing< ServerSocket , IOException > getTempFileManagerFactory [androidJvm] open fun getTempFileManagerFactory (): IFactory<ITempFileManager> handle [androidJvm] open fun handle (p0: IHTTPSession): Response isAlive [androidJvm] fun isAlive (): Boolean loadCustomFont [androidJvm] fun loadCustomFont (inputStream: InputStream , context: Context , fileName: String ) loadCustomResource [androidJvm] fun loadCustomResource (inputStream: InputStream , fileName: String , injectable: Injectable ) makeSecure [androidJvm] open fun makeSecure (p0: SSLServerSocketFactory , p1: Array < String >) removeRoute [androidJvm] open fun removeRoute (p0: String ) serve [androidJvm] open override fun serve (p0: IHTTPSession): Response setAsyncRunner [androidJvm] open fun setAsyncRunner (p0: IAsyncRunner) setHTTPHandler [androidJvm] open fun setHTTPHandler (p0: IHandler<IHTTPSession, Response>) setNotFoundHandler [androidJvm] open fun < T : RouterNanoHTTPD.UriResponder> setNotFoundHandler (p0: Class < T >) setNotImplementedHandler [androidJvm] open fun < T : RouterNanoHTTPD.UriResponder> setNotImplementedHandler (p0: Class < T >) setRoutePrioritizer [androidJvm] open fun setRoutePrioritizer (p0: RouterNanoHTTPD.IRoutePrioritizer) setServerSocketFactory [androidJvm] open fun setServerSocketFactory (p0: IFactoryThrowing< ServerSocket , IOException >) setTempFileManagerFactory [androidJvm] open fun setTempFileManagerFactory (p0: IFactory<ITempFileManager>) start [androidJvm] open fun start () open fun start (p0: Int ) open fun start (p0: Int , p1: Boolean ) stop [androidJvm] open fun stop () wasStarted [androidJvm] fun wasStarted (): Boolean","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-abstract-server/#properties","text":"Name Summary asyncRunner [androidJvm] val asyncRunner : IAsyncRunner hostname [androidJvm] val hostname : String interceptors [androidJvm] val interceptors : MutableList <IHandler<IHTTPSession, Response>> myPort [androidJvm] val myPort : Int","title":"Properties"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-abstract-server/#inheritors","text":"Name Server","title":"Inheritors"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-abstract-server/-abstract-server/","text":"// streamer / org.readium.r2.streamer.server / AbstractServer / AbstractServer AbstractServer \u00b6 [androidJvm]\\ fun AbstractServer (port: Int , context: Context )","title":" abstract server"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-abstract-server/-abstract-server/#abstractserver","text":"[androidJvm]\\ fun AbstractServer (port: Int , context: Context )","title":"AbstractServer"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-abstract-server/add-publication/","text":"// streamer / org.readium.r2.streamer.server / AbstractServer / addPublication addPublication \u00b6 [androidJvm]\\ fun addPublication (publication: Publication , userPropertiesFile: File ?): URL ?","title":"Add publication"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-abstract-server/add-publication/#addpublication","text":"[androidJvm]\\ fun addPublication (publication: Publication , userPropertiesFile: File ?): URL ?","title":"addPublication"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-abstract-server/load-custom-font/","text":"// streamer / org.readium.r2.streamer.server / AbstractServer / loadCustomFont loadCustomFont \u00b6 [androidJvm]\\ fun loadCustomFont (inputStream: InputStream , context: Context , fileName: String )","title":"Load custom font"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-abstract-server/load-custom-font/#loadcustomfont","text":"[androidJvm]\\ fun loadCustomFont (inputStream: InputStream , context: Context , fileName: String )","title":"loadCustomFont"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-abstract-server/load-custom-resource/","text":"// streamer / org.readium.r2.streamer.server / AbstractServer / loadCustomResource loadCustomResource \u00b6 [androidJvm]\\ fun loadCustomResource (inputStream: InputStream , fileName: String , injectable: Injectable )","title":"Load custom resource"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-abstract-server/load-custom-resource/#loadcustomresource","text":"[androidJvm]\\ fun loadCustomResource (inputStream: InputStream , fileName: String , injectable: Injectable )","title":"loadCustomResource"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-resources/","text":"// streamer / org.readium.r2.streamer.server / Resources Resources \u00b6 [androidJvm]\\ class Resources Functions \u00b6 Name Summary add [androidJvm] fun add (key: String , body: String , injectable: Injectable ? = null) get [androidJvm] fun get (key: String ): String ? Properties \u00b6 Name Summary resources [androidJvm] val resources : MutableMap < String , Any >","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-resources/#resources","text":"[androidJvm]\\ class Resources","title":"Resources"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-resources/#functions","text":"Name Summary add [androidJvm] fun add (key: String , body: String , injectable: Injectable ? = null) get [androidJvm] fun get (key: String ): String ?","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-resources/#properties","text":"Name Summary resources [androidJvm] val resources : MutableMap < String , Any >","title":"Properties"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-resources/-resources/","text":"// streamer / org.readium.r2.streamer.server / Resources / Resources Resources \u00b6 [androidJvm]\\ fun Resources ()","title":" resources"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-resources/-resources/#resources","text":"[androidJvm]\\ fun Resources ()","title":"Resources"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-resources/add/","text":"// streamer / org.readium.r2.streamer.server / Resources / add add \u00b6 [androidJvm]\\ fun add (key: String , body: String , injectable: Injectable ? = null)","title":"Add"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-resources/add/#add","text":"[androidJvm]\\ fun add (key: String , body: String , injectable: Injectable ? = null)","title":"add"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-resources/get/","text":"// streamer / org.readium.r2.streamer.server / Resources / get get \u00b6 [androidJvm]\\ fun get (key: String ): String ?","title":"Get"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-resources/get/#get","text":"[androidJvm]\\ fun get (key: String ): String ?","title":"get"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-resources/resources/","text":"// streamer / org.readium.r2.streamer.server / Resources / resources resources \u00b6 [androidJvm]\\ val resources : MutableMap < String , Any >","title":"Resources"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-resources/resources/#resources","text":"[androidJvm]\\ val resources : MutableMap < String , Any >","title":"resources"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-server/","text":"// streamer / org.readium.r2.streamer.server / Server Server \u00b6 [androidJvm]\\ class Server (port: Int , context: Context ) : AbstractServer Functions \u00b6 Name Summary addHTTPInterceptor [androidJvm] open fun addHTTPInterceptor (p0: IHandler<IHTTPSession, Response>) addMappings [androidJvm] open fun addMappings () addPublication [androidJvm] fun addPublication (publication: Publication , userPropertiesFile: File ?): URL ? addRoute [androidJvm] open fun addRoute (p0: String , p1: Class <*>, vararg p2: Any ) closeAllConnections [androidJvm] open fun closeAllConnections () createClientHandler [androidJvm] open fun createClientHandler (p0: Socket , p1: InputStream ): ClientHandler createServerRunnable [androidJvm] open fun createServerRunnable (p0: Int ): ServerRunnable getHostname [androidJvm] open fun getHostname (): String getListeningPort [androidJvm] fun getListeningPort (): Int getMyServerSocket [androidJvm] open fun getMyServerSocket (): ServerSocket getServerSocketFactory [androidJvm] open fun getServerSocketFactory (): IFactoryThrowing< ServerSocket , IOException > getTempFileManagerFactory [androidJvm] open fun getTempFileManagerFactory (): IFactory<ITempFileManager> handle [androidJvm] open fun handle (p0: IHTTPSession): Response isAlive [androidJvm] fun isAlive (): Boolean loadCustomFont [androidJvm] fun loadCustomFont (inputStream: InputStream , context: Context , fileName: String ) loadCustomResource [androidJvm] fun loadCustomResource (inputStream: InputStream , fileName: String , injectable: Injectable ) makeSecure [androidJvm] open fun makeSecure (p0: SSLServerSocketFactory , p1: Array < String >) removeRoute [androidJvm] open fun removeRoute (p0: String ) serve [androidJvm] open override fun serve (p0: IHTTPSession): Response setAsyncRunner [androidJvm] open fun setAsyncRunner (p0: IAsyncRunner) setHTTPHandler [androidJvm] open fun setHTTPHandler (p0: IHandler<IHTTPSession, Response>) setNotFoundHandler [androidJvm] open fun < T : RouterNanoHTTPD.UriResponder> setNotFoundHandler (p0: Class < T >) setNotImplementedHandler [androidJvm] open fun < T : RouterNanoHTTPD.UriResponder> setNotImplementedHandler (p0: Class < T >) setRoutePrioritizer [androidJvm] open fun setRoutePrioritizer (p0: RouterNanoHTTPD.IRoutePrioritizer) setServerSocketFactory [androidJvm] open fun setServerSocketFactory (p0: IFactoryThrowing< ServerSocket , IOException >) setTempFileManagerFactory [androidJvm] open fun setTempFileManagerFactory (p0: IFactory<ITempFileManager>) start [androidJvm] open fun start () open fun start (p0: Int ) open fun start (p0: Int , p1: Boolean ) stop [androidJvm] open fun stop () wasStarted [androidJvm] fun wasStarted (): Boolean Properties \u00b6 Name Summary asyncRunner [androidJvm] val asyncRunner : IAsyncRunner hostname [androidJvm] val hostname : String interceptors [androidJvm] val interceptors : MutableList <IHandler<IHTTPSession, Response>> myPort [androidJvm] val myPort : Int","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-server/#server","text":"[androidJvm]\\ class Server (port: Int , context: Context ) : AbstractServer","title":"Server"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-server/#functions","text":"Name Summary addHTTPInterceptor [androidJvm] open fun addHTTPInterceptor (p0: IHandler<IHTTPSession, Response>) addMappings [androidJvm] open fun addMappings () addPublication [androidJvm] fun addPublication (publication: Publication , userPropertiesFile: File ?): URL ? addRoute [androidJvm] open fun addRoute (p0: String , p1: Class <*>, vararg p2: Any ) closeAllConnections [androidJvm] open fun closeAllConnections () createClientHandler [androidJvm] open fun createClientHandler (p0: Socket , p1: InputStream ): ClientHandler createServerRunnable [androidJvm] open fun createServerRunnable (p0: Int ): ServerRunnable getHostname [androidJvm] open fun getHostname (): String getListeningPort [androidJvm] fun getListeningPort (): Int getMyServerSocket [androidJvm] open fun getMyServerSocket (): ServerSocket getServerSocketFactory [androidJvm] open fun getServerSocketFactory (): IFactoryThrowing< ServerSocket , IOException > getTempFileManagerFactory [androidJvm] open fun getTempFileManagerFactory (): IFactory<ITempFileManager> handle [androidJvm] open fun handle (p0: IHTTPSession): Response isAlive [androidJvm] fun isAlive (): Boolean loadCustomFont [androidJvm] fun loadCustomFont (inputStream: InputStream , context: Context , fileName: String ) loadCustomResource [androidJvm] fun loadCustomResource (inputStream: InputStream , fileName: String , injectable: Injectable ) makeSecure [androidJvm] open fun makeSecure (p0: SSLServerSocketFactory , p1: Array < String >) removeRoute [androidJvm] open fun removeRoute (p0: String ) serve [androidJvm] open override fun serve (p0: IHTTPSession): Response setAsyncRunner [androidJvm] open fun setAsyncRunner (p0: IAsyncRunner) setHTTPHandler [androidJvm] open fun setHTTPHandler (p0: IHandler<IHTTPSession, Response>) setNotFoundHandler [androidJvm] open fun < T : RouterNanoHTTPD.UriResponder> setNotFoundHandler (p0: Class < T >) setNotImplementedHandler [androidJvm] open fun < T : RouterNanoHTTPD.UriResponder> setNotImplementedHandler (p0: Class < T >) setRoutePrioritizer [androidJvm] open fun setRoutePrioritizer (p0: RouterNanoHTTPD.IRoutePrioritizer) setServerSocketFactory [androidJvm] open fun setServerSocketFactory (p0: IFactoryThrowing< ServerSocket , IOException >) setTempFileManagerFactory [androidJvm] open fun setTempFileManagerFactory (p0: IFactory<ITempFileManager>) start [androidJvm] open fun start () open fun start (p0: Int ) open fun start (p0: Int , p1: Boolean ) stop [androidJvm] open fun stop () wasStarted [androidJvm] fun wasStarted (): Boolean","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-server/#properties","text":"Name Summary asyncRunner [androidJvm] val asyncRunner : IAsyncRunner hostname [androidJvm] val hostname : String interceptors [androidJvm] val interceptors : MutableList <IHandler<IHTTPSession, Response>> myPort [androidJvm] val myPort : Int","title":"Properties"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-server/-server/","text":"// streamer / org.readium.r2.streamer.server / Server / Server Server \u00b6 [androidJvm]\\ fun Server (port: Int , context: Context )","title":" server"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server/-server/-server/#server","text":"[androidJvm]\\ fun Server (port: Int , context: Context )","title":"Server"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/","text":"// streamer / org.readium.r2.streamer.server.handler Package org.readium.r2.streamer.server.handler \u00b6 Types \u00b6 Name Summary MediaOverlayHandler [androidJvm] class MediaOverlayHandler : RouterNanoHTTPD.DefaultHandler PublicationResourceHandler [androidJvm] class PublicationResourceHandler : RouterNanoHTTPD.DefaultHandler ResponseStatus [androidJvm] object ResponseStatus","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/#package-orgreadiumr2streamerserverhandler","text":"","title":"Package org.readium.r2.streamer.server.handler"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/#types","text":"Name Summary MediaOverlayHandler [androidJvm] class MediaOverlayHandler : RouterNanoHTTPD.DefaultHandler PublicationResourceHandler [androidJvm] class PublicationResourceHandler : RouterNanoHTTPD.DefaultHandler ResponseStatus [androidJvm] object ResponseStatus","title":"Types"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-media-overlay-handler/","text":"// streamer / org.readium.r2.streamer.server.handler / MediaOverlayHandler MediaOverlayHandler \u00b6 [androidJvm]\\ class MediaOverlayHandler : RouterNanoHTTPD.DefaultHandler Functions \u00b6 Name Summary delete [androidJvm] open override fun delete (p0: RouterNanoHTTPD.UriResource, p1: MutableMap < String , String >, p2: IHTTPSession): Response get [androidJvm] open operator override fun get (uriResource: RouterNanoHTTPD.UriResource?, urlParams: Map < String , String >?, session: IHTTPSession?): Response getData [androidJvm] open override fun getData (): InputStream getMimeType [androidJvm] open override fun getMimeType (): String getStatus [androidJvm] open override fun getStatus (): IStatus getText [androidJvm] open override fun getText (): String other [androidJvm] open override fun other (p0: String , p1: RouterNanoHTTPD.UriResource, p2: MutableMap < String , String >, p3: IHTTPSession): Response post [androidJvm] open override fun post (p0: RouterNanoHTTPD.UriResource, p1: MutableMap < String , String >, p2: IHTTPSession): Response put [androidJvm] open override fun put (p0: RouterNanoHTTPD.UriResource, p1: MutableMap < String , String >, p2: IHTTPSession): Response","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-media-overlay-handler/#mediaoverlayhandler","text":"[androidJvm]\\ class MediaOverlayHandler : RouterNanoHTTPD.DefaultHandler","title":"MediaOverlayHandler"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-media-overlay-handler/#functions","text":"Name Summary delete [androidJvm] open override fun delete (p0: RouterNanoHTTPD.UriResource, p1: MutableMap < String , String >, p2: IHTTPSession): Response get [androidJvm] open operator override fun get (uriResource: RouterNanoHTTPD.UriResource?, urlParams: Map < String , String >?, session: IHTTPSession?): Response getData [androidJvm] open override fun getData (): InputStream getMimeType [androidJvm] open override fun getMimeType (): String getStatus [androidJvm] open override fun getStatus (): IStatus getText [androidJvm] open override fun getText (): String other [androidJvm] open override fun other (p0: String , p1: RouterNanoHTTPD.UriResource, p2: MutableMap < String , String >, p3: IHTTPSession): Response post [androidJvm] open override fun post (p0: RouterNanoHTTPD.UriResource, p1: MutableMap < String , String >, p2: IHTTPSession): Response put [androidJvm] open override fun put (p0: RouterNanoHTTPD.UriResource, p1: MutableMap < String , String >, p2: IHTTPSession): Response","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-media-overlay-handler/-media-overlay-handler/","text":"// streamer / org.readium.r2.streamer.server.handler / MediaOverlayHandler / MediaOverlayHandler MediaOverlayHandler \u00b6 [androidJvm]\\ fun MediaOverlayHandler ()","title":" media overlay handler"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-media-overlay-handler/-media-overlay-handler/#mediaoverlayhandler","text":"[androidJvm]\\ fun MediaOverlayHandler ()","title":"MediaOverlayHandler"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-media-overlay-handler/get-mime-type/","text":"// streamer / org.readium.r2.streamer.server.handler / MediaOverlayHandler / getMimeType getMimeType \u00b6 [androidJvm]\\ open override fun getMimeType (): String","title":"Get mime type"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-media-overlay-handler/get-mime-type/#getmimetype","text":"[androidJvm]\\ open override fun getMimeType (): String","title":"getMimeType"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-media-overlay-handler/get-status/","text":"// streamer / org.readium.r2.streamer.server.handler / MediaOverlayHandler / getStatus getStatus \u00b6 [androidJvm]\\ open override fun getStatus (): IStatus","title":"Get status"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-media-overlay-handler/get-status/#getstatus","text":"[androidJvm]\\ open override fun getStatus (): IStatus","title":"getStatus"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-media-overlay-handler/get-text/","text":"// streamer / org.readium.r2.streamer.server.handler / MediaOverlayHandler / getText getText \u00b6 [androidJvm]\\ open override fun getText (): String","title":"Get text"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-media-overlay-handler/get-text/#gettext","text":"[androidJvm]\\ open override fun getText (): String","title":"getText"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-media-overlay-handler/get/","text":"// streamer / org.readium.r2.streamer.server.handler / MediaOverlayHandler / get get \u00b6 [androidJvm]\\ open operator override fun get (uriResource: RouterNanoHTTPD.UriResource?, urlParams: Map < String , String >?, session: IHTTPSession?): Response","title":"Get"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-media-overlay-handler/get/#get","text":"[androidJvm]\\ open operator override fun get (uriResource: RouterNanoHTTPD.UriResource?, urlParams: Map < String , String >?, session: IHTTPSession?): Response","title":"get"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-publication-resource-handler/","text":"// streamer / org.readium.r2.streamer.server.handler / PublicationResourceHandler PublicationResourceHandler \u00b6 [androidJvm]\\ class PublicationResourceHandler : RouterNanoHTTPD.DefaultHandler Functions \u00b6 Name Summary delete [androidJvm] open override fun delete (p0: RouterNanoHTTPD.UriResource, p1: MutableMap < String , String >, p2: IHTTPSession): Response get [androidJvm] open operator override fun get (uriResource: RouterNanoHTTPD.UriResource, urlParams: Map < String , String >, session: IHTTPSession): Response getData [androidJvm] open override fun getData (): InputStream getMimeType [androidJvm] open override fun getMimeType (): String ? getStatus [androidJvm] open override fun getStatus (): IStatus getText [androidJvm] open override fun getText (): String other [androidJvm] open override fun other (p0: String , p1: RouterNanoHTTPD.UriResource, p2: MutableMap < String , String >, p3: IHTTPSession): Response post [androidJvm] open override fun post (p0: RouterNanoHTTPD.UriResource, p1: MutableMap < String , String >, p2: IHTTPSession): Response put [androidJvm] open override fun put (p0: RouterNanoHTTPD.UriResource, p1: MutableMap < String , String >, p2: IHTTPSession): Response","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-publication-resource-handler/#publicationresourcehandler","text":"[androidJvm]\\ class PublicationResourceHandler : RouterNanoHTTPD.DefaultHandler","title":"PublicationResourceHandler"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-publication-resource-handler/#functions","text":"Name Summary delete [androidJvm] open override fun delete (p0: RouterNanoHTTPD.UriResource, p1: MutableMap < String , String >, p2: IHTTPSession): Response get [androidJvm] open operator override fun get (uriResource: RouterNanoHTTPD.UriResource, urlParams: Map < String , String >, session: IHTTPSession): Response getData [androidJvm] open override fun getData (): InputStream getMimeType [androidJvm] open override fun getMimeType (): String ? getStatus [androidJvm] open override fun getStatus (): IStatus getText [androidJvm] open override fun getText (): String other [androidJvm] open override fun other (p0: String , p1: RouterNanoHTTPD.UriResource, p2: MutableMap < String , String >, p3: IHTTPSession): Response post [androidJvm] open override fun post (p0: RouterNanoHTTPD.UriResource, p1: MutableMap < String , String >, p2: IHTTPSession): Response put [androidJvm] open override fun put (p0: RouterNanoHTTPD.UriResource, p1: MutableMap < String , String >, p2: IHTTPSession): Response","title":"Functions"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-publication-resource-handler/-publication-resource-handler/","text":"// streamer / org.readium.r2.streamer.server.handler / PublicationResourceHandler / PublicationResourceHandler PublicationResourceHandler \u00b6 [androidJvm]\\ fun PublicationResourceHandler ()","title":" publication resource handler"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-publication-resource-handler/-publication-resource-handler/#publicationresourcehandler","text":"[androidJvm]\\ fun PublicationResourceHandler ()","title":"PublicationResourceHandler"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-publication-resource-handler/get-mime-type/","text":"// streamer / org.readium.r2.streamer.server.handler / PublicationResourceHandler / getMimeType getMimeType \u00b6 [androidJvm]\\ open override fun getMimeType (): String ?","title":"Get mime type"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-publication-resource-handler/get-mime-type/#getmimetype","text":"[androidJvm]\\ open override fun getMimeType (): String ?","title":"getMimeType"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-publication-resource-handler/get-status/","text":"// streamer / org.readium.r2.streamer.server.handler / PublicationResourceHandler / getStatus getStatus \u00b6 [androidJvm]\\ open override fun getStatus (): IStatus","title":"Get status"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-publication-resource-handler/get-status/#getstatus","text":"[androidJvm]\\ open override fun getStatus (): IStatus","title":"getStatus"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-publication-resource-handler/get-text/","text":"// streamer / org.readium.r2.streamer.server.handler / PublicationResourceHandler / getText getText \u00b6 [androidJvm]\\ open override fun getText (): String","title":"Get text"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-publication-resource-handler/get-text/#gettext","text":"[androidJvm]\\ open override fun getText (): String","title":"getText"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-publication-resource-handler/get/","text":"// streamer / org.readium.r2.streamer.server.handler / PublicationResourceHandler / get get \u00b6 [androidJvm]\\ open operator override fun get (uriResource: RouterNanoHTTPD.UriResource, urlParams: Map < String , String >, session: IHTTPSession): Response","title":"Get"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-publication-resource-handler/get/#get","text":"[androidJvm]\\ open operator override fun get (uriResource: RouterNanoHTTPD.UriResource, urlParams: Map < String , String >, session: IHTTPSession): Response","title":"get"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-response-status/","text":"// streamer / org.readium.r2.streamer.server.handler / ResponseStatus ResponseStatus \u00b6 [androidJvm]\\ object ResponseStatus Properties \u00b6 Name Summary FAILURE_RESPONSE [androidJvm] const val FAILURE_RESPONSE : String SUCCESS_RESPONSE [androidJvm] const val SUCCESS_RESPONSE : String","title":"Index"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-response-status/#responsestatus","text":"[androidJvm]\\ object ResponseStatus","title":"ResponseStatus"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-response-status/#properties","text":"Name Summary FAILURE_RESPONSE [androidJvm] const val FAILURE_RESPONSE : String SUCCESS_RESPONSE [androidJvm] const val SUCCESS_RESPONSE : String","title":"Properties"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-response-status/-f-a-i-l-u-r-e_-r-e-s-p-o-n-s-e/","text":"// streamer / org.readium.r2.streamer.server.handler / ResponseStatus / FAILURE_RESPONSE FAILURE_RESPONSE \u00b6 [androidJvm]\\ const val FAILURE_RESPONSE : String","title":" f a i l u r e  r e s p o n s e"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-response-status/-f-a-i-l-u-r-e_-r-e-s-p-o-n-s-e/#failure_response","text":"[androidJvm]\\ const val FAILURE_RESPONSE : String","title":"FAILURE_RESPONSE"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-response-status/-s-u-c-c-e-s-s_-r-e-s-p-o-n-s-e/","text":"// streamer / org.readium.r2.streamer.server.handler / ResponseStatus / SUCCESS_RESPONSE SUCCESS_RESPONSE \u00b6 [androidJvm]\\ const val SUCCESS_RESPONSE : String","title":" s u c c e s s  r e s p o n s e"},{"location":"readium/streamer/streamer/org.readium.r2.streamer.server.handler/-response-status/-s-u-c-c-e-s-s_-r-e-s-p-o-n-s-e/#success_response","text":"[androidJvm]\\ const val SUCCESS_RESPONSE : String","title":"SUCCESS_RESPONSE"}]}